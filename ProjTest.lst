

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Aug 12 20:36:36 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	swtext4,local,class=CONST,delta=2
    20                           	psect	text830,local,class=CODE,delta=2
    21                           	psect	text831,local,class=CODE,delta=2
    22                           	psect	text834,local,class=CODE,delta=2
    23                           	psect	text840,local,class=CODE,delta=2
    24                           	psect	text841,local,class=CODE,delta=2
    25                           	psect	text842,local,class=CODE,delta=2
    26                           	psect	text843,local,class=CODE,delta=2
    27                           	psect	text844,local,class=CODE,delta=2
    28                           	psect	text845,local,class=CODE,delta=2
    29                           	psect	text846,local,class=CODE,delta=2
    30                           	psect	text847,local,class=CODE,delta=2
    31                           	psect	text849,local,class=CODE,delta=2
    32                           	psect	text850,local,class=CODE,delta=2
    33                           	psect	text851,local,class=CODE,delta=2
    34                           	psect	text853,local,class=CODE,delta=2
    35                           	psect	text854,local,class=CODE,delta=2
    36                           	psect	text855,local,class=CODE,delta=2
    37                           	psect	text856,local,class=CODE,delta=2
    38                           	psect	text857,local,class=CODE,delta=2
    39                           	psect	text858,local,class=CODE,delta=2
    40                           	psect	text859,local,class=CODE,delta=2
    41                           	psect	text860,local,class=CODE,delta=2
    42                           	psect	text861,local,class=CODE,delta=2
    43                           	psect	text862,local,class=CODE,delta=2
    44                           	psect	text863,local,class=CODE,delta=2
    45                           	psect	text867,local,class=CODE,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text871,local,class=CODE,delta=2
    48                           	psect	pa_nodes,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  000A                     	;#
    51                           
    52                           	psect	config
    53  2000  2FFF               	dw	12287	;#
    54  2001  3FDE               	dw	16350	;#
    55  2002  3FF8               	dw	16376	;#
    56                           
    57                           	psect	idataBANK0
    58  0000                     __pidataBANK0:	
    59  001F                     _ADCON0	set	31
    60  001E                     _ADRESH	set	30
    61  001B                     _OP1CON0	set	27
    62  001C                     _OP1CON1	set	28
    63  001D                     _OP1CON2	set	29
    64  0010                     _T1CON	set	16
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0028                     _PA0	set	40
    72  0029                     _PA1	set	41
    73  002A                     _PA2	set	42
    74  002B                     _PA3	set	43
    75  002E                     _PA6	set	46
    76  0030                     _PB0	set	48
    77  0031                     _PB1	set	49
    78  0036                     _PB6	set	54
    79  0037                     _PB7	set	55
    80  005E                     _PEIE	set	94
    81  0060                     _TMR1IF	set	96
    82  009F                     _ADCON1	set	159
    83  009E                     _ADRESL	set	158
    84  0087                     _DACCON	set	135
    85  0088                     _DACR0	set	136
    86  009B                     _OP2CON0	set	155
    87  009C                     _OP2CON1	set	156
    88  009D                     _OP2CON2	set	157
    89  046A                     _ADIE	set	1130
    90  0460                     _TMR1IE	set	1120
    91  0428                     _TRISA0	set	1064
    92  0429                     _TRISA1	set	1065
    93  042A                     _TRISA2	set	1066
    94  042B                     _TRISA3	set	1067
    95  042E                     _TRISA6	set	1070
    96  042F                     _TRISA7	set	1071
    97  0430                     _TRISB0	set	1072
    98  0431                     _TRISB1	set	1073
    99  0432                     _TRISB2	set	1074
   100  0433                     _TRISB3	set	1075
   101  0434                     _TRISB4	set	1076
   102  0435                     _TRISB5	set	1077
   103  0436                     _TRISB6	set	1078
   104  0437                     _TRISB7	set	1079
   105  0108                     _CLKPR	set	264
   106  0847                     _CLKPCE	set	2119
   107  0C46                     _PBOD6	set	3142
   108  0C47                     _PBOD7	set	3143
   109                           
   110                           	psect	cinit
   111  06F6                     start_initialization:	
   112  06F6  3048               	movlw	low __pbssBANK0
   113                           
   114                           ; Clear objects allocated to COMMON
   115  06F7  01FD               	clrf	__pbssCOMMON& (0+127)
   116                           
   117                           ; Clear objects allocated to BANK0
   118  06F8  1383               	bcf	3,7	;select IRP bank0
   119  06F9  0084               	movwf	4
   120  06FA  306E               	movlw	low (__pbssBANK0+38)
   121  06FB  118A  27CE  118A   	fcall	clear_ram
   122                           
   123                           ; Clear objects allocated to BANK1
   124  06FE  30A0               	movlw	low __pbssBANK1
   125  06FF  0084               	movwf	4
   126  0700  30E8               	movlw	low (__pbssBANK1+72)
   127  0701  118A  27CE  118A   	fcall	clear_ram
   128  0704  3090               	movlw	low __pbssBANK3
   129                           
   130                           ; Clear objects allocated to BANK3
   131  0705  1783               	bsf	3,7	;select IRP bank2
   132  0706  0084               	movwf	4
   133  0707  30A8               	movlw	low (__pbssBANK3+24)
   134  0708  118A  27CE         	fcall	clear_ram
   135                           
   136                           ;initializer for _sampleChannelSelect
   137  070A  300E               	movlw	14
   138  070B  00EE               	movwf	__pdataBANK0& (0+127)
   139  070C                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142  070C  0183               	clrf	3
   143  070D  118A  2813         	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMMON
   146  007D                     __pbssCOMMON:	
   147  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   148  007D                     	ds	1
   149                           
   150                           	psect	bssBANK0
   151  0048                     __pbssBANK0:	
   152  0048                     main@uiOldValue:	
   153  0048                     	ds	2
   154  004A                     _bBigTimerStartFlag:	
   155  004A                     	ds	1
   156  004B                     _bSmallTimerStartFlag:	
   157  004B                     	ds	1
   158  004C                     _bTwentySecStartFlag:	
   159  004C                     	ds	1
   160  004D                     _sampleTimes:	
   161  004D                     	ds	1
   162  004E                     main@bCheckTweHour:	
   163  004E                     	ds	1
   164  004F                     main@bInitFlag:	
   165  004F                     	ds	1
   166  0050                     main@enumMainLoopStep:	
   167  0050                     	ds	1
   168  0051                     main@ucADC4_Step:	
   169  0051                     	ds	1
   170  0052                     main@ucChannel4Type:	
   171  0052                     	ds	1
   172  0053                     main@ucCheckTimerP2sLess:	
   173  0053                     	ds	1
   174  0054                     main@ucDelayPrefix4TimerP5s:	
   175  0054                     	ds	1
   176  0055                     main@ucDelayPrefix6TimerP2s:	
   177  0055                     	ds	1
   178  0056                     main@ucLoaderStep:	
   179  0056                     	ds	1
   180  0057                     main@ucLoaderStep1:	
   181  0057                     	ds	1
   182  0058                     main@ucLoaderStep2:	
   183  0058                     	ds	1
   184  0059                     main@ucLoaderStep3:	
   185  0059                     	ds	1
   186  005A                     main@ucLoaderStep4:	
   187  005A                     	ds	1
   188  005B                     main@ucTimerADC1ZeroP5s:	
   189  005B                     	ds	1
   190  005C                     main@ucTimerDelay:	
   191  005C                     	ds	1
   192  005D                     main@ucTimerDelay1:	
   193  005D                     	ds	1
   194  005E                     main@ucTimerDelay2:	
   195  005E                     	ds	1
   196  005F                     main@ucTimerDelay3:	
   197  005F                     	ds	1
   198  0060                     main@ucTimerDelay4:	
   199  0060                     	ds	1
   200  0061                     main@ucTimerDelayP2sLess:	
   201  0061                     	ds	1
   202  0062                     main@ucTimerDelayP2sMore:	
   203  0062                     	ds	1
   204  0063                     main@ucTimerForDACR0_CNT1:	
   205  0063                     	ds	1
   206  0064                     main@ucTimerForDACR0_CNT1_f:	
   207  0064                     	ds	1
   208  0065                     main@ucTimerForDACR0_CNT2:	
   209  0065                     	ds	1
   210  0066                     main@ucTimerForDACR0_CNT2_f:	
   211  0066                     	ds	1
   212  0067                     main@ucTimerLessADC1ZeroP5s:	
   213  0067                     	ds	1
   214  0068                     main@ucTimerP5s:	
   215  0068                     	ds	1
   216  0069                     main@ucTimerRightP5s:	
   217  0069                     	ds	1
   218  006A                     main@ucTimerZeroPoint3s:	
   219  006A                     	ds	1
   220  006B                     main@ucTimerZeroPoint5s:	
   221  006B                     	ds	1
   222  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   223  006C                     	ds	1
   224  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   225  006D                     	ds	1
   226                           
   227                           	psect	dataBANK0
   228  006E                     __pdataBANK0:	
   229  006E                     _sampleChannelSelect:	
   230  006E                     	ds	1
   231                           
   232                           	psect	bssBANK1
   233  00A0                     __pbssBANK1:	
   234  00A0                     _uiBigTimer:	
   235  00A0                     	ds	2
   236  00A2                     _uiSmallTimer:	
   237  00A2                     	ds	2
   238  00A4                     _uiTwentySecondsTimer:	
   239  00A4                     	ds	2
   240  00A6                     main@uiMaxValue:	
   241  00A6                     	ds	2
   242  00A8                     main@uiMinValue:	
   243  00A8                     	ds	2
   244  00AA                     ISR@ucTimer1sCnt:	
   245  00AA                     	ds	1
   246  00AB                     _adc_convert_flag:	
   247  00AB                     	ds	1
   248  00AC                     _timer:	
   249  00AC                     	ds	1
   250  00AD                     main@enumBranchStep:	
   251  00AD                     	ds	1
   252  00AE                     main@enumInteralStep:	
   253  00AE                     	ds	1
   254  00AF                     main@ucCheckTimerP2sMore:	
   255  00AF                     	ds	1
   256  00B0                     main@ucFourthSuffix1TimerP3s:	
   257  00B0                     	ds	1
   258  00B1                     main@ucTimer1s:	
   259  00B1                     	ds	1
   260  00B2                     main@ucTimer20s:	
   261  00B2                     	ds	1
   262  00B3                     main@ucTimerLessX1P5s:	
   263  00B3                     	ds	1
   264  00B4                     main@ucTimerLessX2P5s:	
   265  00B4                     	ds	1
   266  00B5                     main@ucTimerP3s:	
   267  00B5                     	ds	1
   268  00B6                     main@ucTimerX1P5s:	
   269  00B6                     	ds	1
   270  00B7                     main@ucTimerX2P5s:	
   271  00B7                     	ds	1
   272  00B8                     _uiSampleChannelFirst:	
   273  00B8                     	ds	24
   274  00D0                     _uiSampleChannelFourth:	
   275  00D0                     	ds	24
   276                           
   277                           	psect	bssBANK3
   278  0190                     __pbssBANK3:	
   279  0190                     _uiSampleChannelFourteenth:	
   280  0190                     	ds	24
   281                           
   282                           	psect	clrtext
   283  07CE                     clear_ram:	
   284                           ;	Called with FSR containing the base address, and
   285                           ;	W with the last address+1
   286                           
   287  07CE  0064               	clrwdt	;clear the watchdog before getting into this loop
   288  07CF                     clrloop:	
   289  07CF  0180               	clrf	0	;clear RAM location pointed to by FSR
   290  07D0  0A84               	incf	4,f	;increment pointer
   291  07D1  0604               	xorwf	4,w	;XOR with final address
   292  07D2  1903               	btfsc	3,2	;have we reached the end yet?
   293  07D3  3400               	retlw	0	;all done for this memory range, return
   294  07D4  0604               	xorwf	4,w	;XOR again to restore value
   295  07D5  2FCF               	goto	clrloop	;do the next byte
   296                           
   297                           	psect	cstackCOMMON
   298  0070                     __pcstackCOMMON:	
   299  0070                     ?_clearTwelveHoursTimer:	
   300  0070                     ?_clearThreeHoursTimer:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_clearTwentySecondsTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_clock_config:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_timer1_config:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_timer1_interrupt_config:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_dac_init:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_op1_init:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_op2_init:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_adc_start:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_process_AD_Converter_Value:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_clrSampeTime:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_startTwentySecondsTimer:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_AD_Sample:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_clearAllTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_clearPinPortAndTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_initPin:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_setPB0:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ?_setPB1:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?_setPA0:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ?_setPA1:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?_setPA2:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_setPA3:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_setPA6:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_main:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_setAD_ConvertFlag:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_ISR:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?i1_setAD_ConvertFlag:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ??i1_setAD_ConvertFlag:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_isPermitSampleTime:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?_isFinishedTwelveHoursTimer:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_isFinishedTwentySecondsTimer:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_isFinishedThreeHoursTimer:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_getAD_ConvertFlag:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_adc_get:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     i1setAD_ConvertFlag@flag:	
   403                           ; 2 bytes @ 0x0
   404                           
   405                           
   406                           ; 1 bytes @ 0x0
   407  0070                     	ds	2
   408  0072                     ??_adc_get:	
   409  0072                     adc_get@val:	
   410                           ; 0 bytes @ 0x2
   411                           
   412                           
   413                           ; 2 bytes @ 0x2
   414  0072                     	ds	2
   415  0074                     ?_vPutSampleDataIntoTable:	
   416  0074                     vPutSampleDataIntoTable@uiSampleData:	
   417                           ; 0 bytes @ 0x4
   418                           
   419                           
   420                           ; 2 bytes @ 0x4
   421  0074                     	ds	2
   422  0076                     vPutSampleDataIntoTable@channel:	
   423                           
   424                           ; 1 bytes @ 0x6
   425  0076                     	ds	1
   426  0077                     ??_vPutSampleDataIntoTable:	
   427  0077                     vPutSampleDataIntoTable@i:	
   428                           ; 0 bytes @ 0x7
   429                           
   430                           
   431                           ; 2 bytes @ 0x7
   432  0077                     	ds	2
   433  0079                     ??_ISR:	
   434                           
   435                           ; 0 bytes @ 0x9
   436  0079                     	ds	4
   437                           
   438                           	psect	cstackBANK0
   439  0020                     __pcstackBANK0:	
   440  0020                     ??_clearTwelveHoursTimer:	
   441  0020                     ??_clearThreeHoursTimer:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0020                     ??_clearTwentySecondsTimer:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0020                     ??_clock_config:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0020                     ??_timer1_config:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0020                     ??_timer1_interrupt_config:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  0020                     ?_adc_test_init:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0020                     ??_dac_init:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0020                     ??_op1_init:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0020                     ??_op2_init:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0020                     ??_adc_start:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0020                     ??_isPermitSampleTime:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_clrSampeTime:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ?_startTwelveHourTimer:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ??_isFinishedTwelveHoursTimer:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ??_startTwentySecondsTimer:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ??_isFinishedTwentySecondsTimer:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ?_startThreeHoursTimer:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ??_isFinishedThreeHoursTimer:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ??_AD_Sample:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_clearAllTimer:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ??_clearPinPortAndTimer:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ??_initPin:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ??_setPB0:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ??_setPB1:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ??_setPA0:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_setPA1:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ??_setPA2:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ??_setPA3:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0020                     ??_setPA6:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0020                     ??_getAD_ConvertFlag:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0020                     ??_setAD_ConvertFlag:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0020                     ?_Filter:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0020                     setPB0@bValue:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0020                     setPB1@bValue:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0020                     setPA0@bValue:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0020                     setPA1@bValue:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0020                     setPA2@bValue:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0020                     setPA3@bValue:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0020                     setPA6@bValue:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0020                     setAD_ConvertFlag@flag:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0020                     adc_test_init@ref:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0020                     Filter@tmpValue:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     startTwelveHourTimer@uiSetTime:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     startThreeHoursTimer@uiSetTime:	
   571                           ; 2 bytes @ 0x0
   572                           
   573                           
   574                           ; 2 bytes @ 0x0
   575  0020                     	ds	1
   576  0021                     ??_adc_test_init:	
   577                           
   578                           ; 0 bytes @ 0x1
   579  0021                     	ds	1
   580  0022                     ??_startTwelveHourTimer:	
   581  0022                     ??_startThreeHoursTimer:	
   582                           ; 0 bytes @ 0x2
   583                           
   584  0022                     ??_Filter:	
   585                           ; 0 bytes @ 0x2
   586                           
   587  0022                     adc_test_init@channel:	
   588                           ; 0 bytes @ 0x2
   589                           
   590                           
   591                           ; 1 bytes @ 0x2
   592  0022                     	ds	1
   593  0023                     ??_process_AD_Converter_Value:	
   594                           
   595                           ; 0 bytes @ 0x3
   596  0023                     	ds	3
   597  0026                     Filter@filter_buf:	
   598                           
   599                           ; 24 bytes @ 0x6
   600  0026                     	ds	24
   601  003E                     Filter@filter_temp:	
   602                           
   603                           ; 2 bytes @ 0x1E
   604  003E                     	ds	2
   605  0040                     Filter@filter_sum:	
   606                           
   607                           ; 2 bytes @ 0x20
   608  0040                     	ds	2
   609  0042                     Filter@cir:	
   610                           
   611                           ; 2 bytes @ 0x22
   612  0042                     	ds	2
   613  0044                     Filter@j:	
   614                           
   615                           ; 1 bytes @ 0x24
   616  0044                     	ds	1
   617  0045                     Filter@i:	
   618                           
   619                           ; 1 bytes @ 0x25
   620  0045                     	ds	1
   621  0046                     ?_getAdOriginalCh14Value:	
   622  0046                     ?_getAdOriginalCh1Value:	
   623                           ; 2 bytes @ 0x26
   624                           
   625  0046                     ?_getAdOriginaCh4Value:	
   626                           ; 2 bytes @ 0x26
   627                           
   628                           
   629                           ; 2 bytes @ 0x26
   630  0046                     	ds	2
   631  0048                     ??_getAdOriginalCh14Value:	
   632  0048                     ??_getAdOriginalCh1Value:	
   633                           ; 0 bytes @ 0x28
   634                           
   635  0048                     ??_getAdOriginaCh4Value:	
   636                           ; 0 bytes @ 0x28
   637                           
   638  0048                     ??_main:	
   639                           ; 0 bytes @ 0x28
   640                           
   641                           
   642                           	psect	maintext
   643  0013                     __pmaintext:	
   644                           ; 0 bytes @ 0x28
   645 ;;Data sizes: Strings 0, constant 0, data 1, bss 135, persistent 0 stack 0
   646 ;;Auto spaces:   Size  Autos    Used
   647 ;; COMMON          14     13      14
   648 ;; BANK0           80     40      79
   649 ;; BANK1           80      0      72
   650 ;; BANK3           96      0      24
   651 ;; BANK2           96      0       0
   652 ;;
   653 ;; Pointer list with targets:
   654 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   655 ;;
   656 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   657 ;;
   658 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   659 ;;
   660 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   661 ;;
   662 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   663 ;;
   664 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   665 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   666 ;;
   667 ;;
   668 ;; Critical Paths under _main in COMMON
   669 ;;
   670 ;;   None.
   671 ;;
   672 ;; Critical Paths under _ISR in COMMON
   673 ;;
   674 ;;   _ISR->_vPutSampleDataIntoTable
   675 ;;   _vPutSampleDataIntoTable->_adc_get
   676 ;;
   677 ;; Critical Paths under _main in BANK0
   678 ;;
   679 ;;   _main->_getAdOriginalCh14Value
   680 ;;   _main->_getAdOriginalCh1Value
   681 ;;   _main->_getAdOriginaCh4Value
   682 ;;   _getAdOriginaCh4Value->_Filter
   683 ;;   _getAdOriginalCh1Value->_Filter
   684 ;;   _getAdOriginalCh14Value->_Filter
   685 ;;   _process_AD_Converter_Value->_adc_test_init
   686 ;;
   687 ;; Critical Paths under _ISR in BANK0
   688 ;;
   689 ;;   None.
   690 ;;
   691 ;; Critical Paths under _main in BANK1
   692 ;;
   693 ;;   None.
   694 ;;
   695 ;; Critical Paths under _ISR in BANK1
   696 ;;
   697 ;;   None.
   698 ;;
   699 ;; Critical Paths under _main in BANK3
   700 ;;
   701 ;;   None.
   702 ;;
   703 ;; Critical Paths under _ISR in BANK3
   704 ;;
   705 ;;   None.
   706 ;;
   707 ;; Critical Paths under _main in BANK2
   708 ;;
   709 ;;   None.
   710 ;;
   711 ;; Critical Paths under _ISR in BANK2
   712 ;;
   713 ;;   None.
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   716 ;;
   717 ;;
   718 ;;Call Graph Tables:
   719 ;;
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (0) _main                                                 0     0      0    2168
   724 ;;                            _initPin
   725 ;;                       _clock_config
   726 ;;                      _timer1_config
   727 ;;            _timer1_interrupt_config
   728 ;;                      _adc_test_init
   729 ;;                           _dac_init
   730 ;;                           _op1_init
   731 ;;                           _op2_init
   732 ;;                          _adc_start
   733 ;;         _process_AD_Converter_Value
   734 ;;                 _isPermitSampleTime
   735 ;;                       _clrSampeTime
   736 ;;             _getAdOriginalCh14Value
   737 ;;               _clearPinPortAndTimer
   738 ;;                             _setPA6
   739 ;;              _getAdOriginalCh1Value
   740 ;;               _startTwelveHourTimer
   741 ;;         _isFinishedTwelveHoursTimer
   742 ;;               _getAdOriginaCh4Value
   743 ;;                             _setPA2
   744 ;;                             _setPA3
   745 ;;                             _setPA0
   746 ;;                             _setPA1
   747 ;;                             _setPB0
   748 ;;            _startTwentySecondsTimer
   749 ;;       _isFinishedTwentySecondsTimer
   750 ;;            _clearTwentySecondsTimer
   751 ;;               _startThreeHoursTimer
   752 ;;          _isFinishedThreeHoursTimer
   753 ;;               _clearThreeHoursTimer
   754 ;;                             _setPB1
   755 ;;                      _clearAllTimer
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   758 ;;                      _clearAllTimer
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   761 ;;                                             38 BANK0      2     0      2
   762 ;;                             _Filter
   763 ;; ---------------------------------------------------------------------------------
   764 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   765 ;;                                             38 BANK0      2     0      2
   766 ;;                             _Filter
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   769 ;;                                             38 BANK0      2     0      2
   770 ;;                             _Filter
   771 ;; ---------------------------------------------------------------------------------
   772 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   773 ;;                  _getAD_ConvertFlag
   774 ;;                  _setAD_ConvertFlag
   775 ;;                          _AD_Sample
   776 ;;                      _adc_test_init
   777 ;;                          _adc_start
   778 ;; ---------------------------------------------------------------------------------
   779 ;; (1) _clearAllTimer                                        0     0      0       0
   780 ;;              _clearTwelveHoursTimer
   781 ;;               _clearThreeHoursTimer
   782 ;;            _clearTwentySecondsTimer
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (2) _AD_Sample                                            0     0      0       0
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   787 ;;                                              0 BANK0      1     1      0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (2) _Filter                                              38    36      2     620
   792 ;;                                              0 BANK0     38    36      2
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   797 ;;                                              0 BANK0      2     0      2
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   806 ;;                                              0 BANK0      2     0      2
   807 ;; ---------------------------------------------------------------------------------
   808 ;; (1) _clrSampeTime                                         0     0      0       0
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _isPermitSampleTime                                   0     0      0       0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (2) _adc_start                                            0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _op2_init                                             0     0      0       0
   815 ;; ---------------------------------------------------------------------------------
   816 ;; (1) _op1_init                                             0     0      0       0
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (1) _dac_init                                             0     0      0       0
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (2) _adc_test_init                                        3     2      1      44
   821 ;;                                              0 BANK0      3     2      1
   822 ;; ---------------------------------------------------------------------------------
   823 ;; (1) _timer1_interrupt_config                              0     0      0       0
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (1) _timer1_config                                        0     0      0       0
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _clock_config                                         0     0      0       0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _setPA6                                               1     1      0      22
   830 ;;                                              0 BANK0      1     1      0
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (1) _setPA3                                               1     1      0      22
   833 ;;                                              0 BANK0      1     1      0
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (1) _setPA2                                               1     1      0      22
   836 ;;                                              0 BANK0      1     1      0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _setPA1                                               1     1      0      22
   839 ;;                                              0 BANK0      1     1      0
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _setPA0                                               1     1      0      22
   842 ;;                                              0 BANK0      1     1      0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _setPB1                                               1     1      0      22
   845 ;;                                              0 BANK0      1     1      0
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (1) _setPB0                                               1     1      0      22
   848 ;;                                              0 BANK0      1     1      0
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (1) _initPin                                              0     0      0       0
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   857 ;; ---------------------------------------------------------------------------------
   858 ;; Estimated maximum stack depth 2
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (4) _ISR                                                  4     4      0     407
   863 ;;                                              9 COMMON     4     4      0
   864 ;;                i1_setAD_ConvertFlag
   865 ;;                            _adc_get
   866 ;;            _vPutSampleDataIntoTable
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   869 ;;                                              0 COMMON     1     1      0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (5) _adc_get                                              4     2      2      24
   872 ;;                                              0 COMMON     4     2      2
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   875 ;;                                              4 COMMON     5     2      3
   876 ;;                            _adc_get (ARG)
   877 ;; ---------------------------------------------------------------------------------
   878 ;; Estimated maximum stack depth 5
   879 ;; ---------------------------------------------------------------------------------
   880 ;; Call Graph Graphs:
   881 ;; _main (ROOT)
   882 ;;   _initPin
   883 ;;   _clock_config
   884 ;;   _timer1_config
   885 ;;   _timer1_interrupt_config
   886 ;;   _adc_test_init
   887 ;;   _dac_init
   888 ;;   _op1_init
   889 ;;   _op2_init
   890 ;;   _adc_start
   891 ;;   _process_AD_Converter_Value
   892 ;;     _getAD_ConvertFlag
   893 ;;     _setAD_ConvertFlag
   894 ;;     _AD_Sample
   895 ;;     _adc_test_init
   896 ;;     _adc_start
   897 ;;   _isPermitSampleTime
   898 ;;   _clrSampeTime
   899 ;;   _getAdOriginalCh14Value
   900 ;;     _Filter
   901 ;;   _clearPinPortAndTimer
   902 ;;     _clearAllTimer
   903 ;;       _clearTwelveHoursTimer
   904 ;;       _clearThreeHoursTimer
   905 ;;       _clearTwentySecondsTimer
   906 ;;   _setPA6
   907 ;;   _getAdOriginalCh1Value
   908 ;;     _Filter
   909 ;;   _startTwelveHourTimer
   910 ;;   _isFinishedTwelveHoursTimer
   911 ;;   _getAdOriginaCh4Value
   912 ;;     _Filter
   913 ;;   _setPA2
   914 ;;   _setPA3
   915 ;;   _setPA0
   916 ;;   _setPA1
   917 ;;   _setPB0
   918 ;;   _startTwentySecondsTimer
   919 ;;   _isFinishedTwentySecondsTimer
   920 ;;   _clearTwentySecondsTimer
   921 ;;   _startThreeHoursTimer
   922 ;;   _isFinishedThreeHoursTimer
   923 ;;   _clearThreeHoursTimer
   924 ;;   _setPB1
   925 ;;   _clearAllTimer
   926 ;;     _clearTwelveHoursTimer
   927 ;;     _clearThreeHoursTimer
   928 ;;     _clearTwentySecondsTimer
   929 ;;
   930 ;; _ISR (ROOT)
   931 ;;   i1_setAD_ConvertFlag
   932 ;;   _adc_get
   933 ;;   _vPutSampleDataIntoTable
   934 ;;     _adc_get (ARG)
   935 ;;
   936 ;; Address spaces:
   937 ;;Name               Size   Autos  Total    Cost      Usage
   938 ;;BANK3               60      0      18      10       25.0%
   939 ;;BITBANK3            60      0       0       9        0.0%
   940 ;;SFR3                 0      0       0       4        0.0%
   941 ;;BITSFR3              0      0       0       4        0.0%
   942 ;;BANK2               60      0       0      12        0.0%
   943 ;;BITBANK2            60      0       0      11        0.0%
   944 ;;SFR2                 0      0       0       5        0.0%
   945 ;;BITSFR2              0      0       0       5        0.0%
   946 ;;SFR1                 0      0       0       2        0.0%
   947 ;;BITSFR1              0      0       0       2        0.0%
   948 ;;BANK1               50      0      48       8       90.0%
   949 ;;BITBANK1            50      0       0       7        0.0%
   950 ;;CODE                 0      0       0       0        0.0%
   951 ;;DATA                 0      0      C4       6        0.0%
   952 ;;ABS                  0      0      BD       3        0.0%
   953 ;;NULL                 0      0       0       0        0.0%
   954 ;;STACK                0      0       7       2        0.0%
   955 ;;BANK0               50     28      4F       5       98.8%
   956 ;;BITBANK0            50      0       0       4        0.0%
   957 ;;SFR0                 0      0       0       1        0.0%
   958 ;;BITSFR0              0      0       0       1        0.0%
   959 ;;COMMON               E      D       E       1      100.0%
   960 ;;BITCOMMON            E      0       0       0        0.0%
   961                           
   962                           
   963 ;; *************** function _main *****************
   964 ;; Defined at:
   965 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;		None               void
   972 ;; Registers used:
   973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 17F/0
   976 ;;		On exit  : 60/0
   977 ;;		Unchanged: FFE00/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   979 ;;      Params:         0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0
   982 ;;      Totals:         0       0       0       0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels required when called:    5
   985 ;; This function calls:
   986 ;;		_initPin
   987 ;;		_clock_config
   988 ;;		_timer1_config
   989 ;;		_timer1_interrupt_config
   990 ;;		_adc_test_init
   991 ;;		_dac_init
   992 ;;		_op1_init
   993 ;;		_op2_init
   994 ;;		_adc_start
   995 ;;		_process_AD_Converter_Value
   996 ;;		_isPermitSampleTime
   997 ;;		_clrSampeTime
   998 ;;		_getAdOriginalCh14Value
   999 ;;		_clearPinPortAndTimer
  1000 ;;		_setPA6
  1001 ;;		_getAdOriginalCh1Value
  1002 ;;		_startTwelveHourTimer
  1003 ;;		_isFinishedTwelveHoursTimer
  1004 ;;		_getAdOriginaCh4Value
  1005 ;;		_setPA2
  1006 ;;		_setPA3
  1007 ;;		_setPA0
  1008 ;;		_setPA1
  1009 ;;		_setPB0
  1010 ;;		_startTwentySecondsTimer
  1011 ;;		_isFinishedTwentySecondsTimer
  1012 ;;		_clearTwentySecondsTimer
  1013 ;;		_startThreeHoursTimer
  1014 ;;		_isFinishedThreeHoursTimer
  1015 ;;		_clearThreeHoursTimer
  1016 ;;		_setPB1
  1017 ;;		_clearAllTimer
  1018 ;; This function is called by:
  1019 ;;		Startup code after reset
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022  0013                     _main:	
  1023                           
  1024                           ;main.c: 465: enum setp_Adc4
  1025                           ;main.c: 466: {
  1026                           ;main.c: 467: ADC4_STEP_INIT = 0,
  1027                           ;main.c: 468: ADC4_STEP_FIRST,
  1028                           ;main.c: 469: ADC4_STEP_SECOND,
  1029                           ;main.c: 470: ADC4_STEP_THIRD,
  1030                           ;main.c: 471: ADC4_STEP_FOURTH_PREFIX1,
  1031                           ;main.c: 472: ADC4_STEP_FOURTH_PREFIX2,
  1032                           ;main.c: 473: ADC4_STEP_FOURTH_PREFIX3,
  1033                           ;main.c: 474: ADC4_STEP_FOURTH_PREFIX4,
  1034                           ;main.c: 475: ADC4_STEP_FOURTH_PREFIX5,
  1035                           ;main.c: 476: ADC4_STEP_FOURTH_PREFIX6,
  1036                           ;main.c: 477: ADC4_STEP_FOURTH,
  1037                           ;main.c: 478: ADC4_STEP_FOURTH_SUFFIX1,
  1038                           ;main.c: 479: ADC4_STEP_FOURTH_SUFFIX2,
  1039                           
  1040                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1041  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0014  1005               	bcf	5,0
  1043                           
  1044                           ;main.c: 500: TRISA1 = 0;
  1045  0015  1085               	bcf	5,1
  1046                           
  1047                           ;main.c: 501: TRISA2 = 0;
  1048  0016  1105               	bcf	5,2
  1049                           
  1050                           ;main.c: 502: TRISA3 = 0;
  1051  0017  1185               	bcf	5,3
  1052                           
  1053                           ;main.c: 503: TRISB0 = 0;
  1054  0018  1006               	bcf	6,0
  1055                           
  1056                           ;main.c: 504: TRISB1 = 0;
  1057  0019  1086               	bcf	6,1
  1058                           
  1059                           ;main.c: 505: TRISA6 = 0;
  1060  001A  1305               	bcf	5,6
  1061                           
  1062                           ;main.c: 507: TRISB7 = 0;
  1063  001B  1386               	bcf	6,7
  1064                           
  1065                           ;main.c: 508: TRISB6 = 0;
  1066  001C  1306               	bcf	6,6
  1067                           
  1068                           ;main.c: 511: initPin();
  1069  001D  118A  2737  118A   	fcall	_initPin
  1070                           
  1071                           ;main.c: 514: TRISB2 = 1;
  1072  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0021  1506               	bsf	6,2
  1074                           
  1075                           ;main.c: 517: TRISA7 = 1;
  1076  0022  1785               	bsf	5,7
  1077                           
  1078                           ;main.c: 519: TRISB4 = 1;
  1079  0023  1606               	bsf	6,4
  1080                           
  1081                           ;main.c: 521: clock_config();
  1082  0024  118A  27D6  118A   	fcall	_clock_config
  1083                           
  1084                           ;main.c: 522: timer1_config();
  1085  0027  118A  27B2  118A   	fcall	_timer1_config
  1086                           
  1087                           ;main.c: 523: timer1_interrupt_config();
  1088  002A  158A  27E3  118A   	fcall	_timer1_interrupt_config
  1089                           
  1090                           ;main.c: 525: adc_test_init(14,3);
  1091  002D  3003               	movlw	3
  1092  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1093  002F  00A0               	movwf	?_adc_test_init
  1094  0030  300E               	movlw	14
  1095  0031  118A  26A0  118A   	fcall	_adc_test_init
  1096                           
  1097                           ;main.c: 527: dac_init();
  1098  0034  158A  27E6  118A   	fcall	_dac_init
  1099                           
  1100                           ;main.c: 528: op1_init();
  1101  0037  118A  27A7  118A   	fcall	_op1_init
  1102                           
  1103                           ;main.c: 529: op2_init();
  1104  003A  158A  27F1  118A   	fcall	_op2_init
  1105                           
  1106                           ;main.c: 532: adc_start();
  1107  003D  118A  26B5  118A   	fcall	_adc_start
  1108  0040                     l4592:	
  1109  0040  0064               	clrwdt	;#
  1110                           
  1111                           ;main.c: 575: process_AD_Converter_Value();
  1112  0041  118A  265B  118A   	fcall	_process_AD_Converter_Value
  1113                           
  1114                           ;main.c: 577: if( isPermitSampleTime() )
  1115  0044  158A  27EB  118A   	fcall	_isPermitSampleTime
  1116  0047  3A00               	xorlw	0
  1117  0048  1903               	skipnz
  1118  0049  2840               	goto	l4592
  1119                           
  1120                           ;main.c: 578: {
  1121                           ;main.c: 581: clrSampeTime();
  1122  004A  118A  27FE  118A   	fcall	_clrSampeTime
  1123                           
  1124                           ;main.c: 596: switch(enumMainLoopStep)
  1125  004D  2C92               	goto	l5250
  1126  004E                     l4600:	
  1127                           
  1128                           ;main.c: 599: {
  1129                           ;main.c: 604: static unsigned char ucTimerZeroPoint5s = 0;
  1130                           ;main.c: 605: if(getAdOriginalCh14Value() > 1950)
  1131  004E  118A  25A3  118A   	fcall	_getAdOriginalCh14Value
  1132  0051  3007               	movlw	7
  1133  0052  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1134  0053  309F               	movlw	159
  1135  0054  1903               	skipnz
  1136  0055  0246               	subwf	?_getAdOriginalCh14Value,w
  1137  0056  1C03               	skipc
  1138  0057  285A               	goto	l4604
  1139                           
  1140                           ;main.c: 606: {
  1141                           ;main.c: 607: ucTimerZeroPoint5s++;
  1142  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1143                           
  1144                           ;main.c: 608: }
  1145  0059  285B               	goto	l4606
  1146  005A                     l4604:	
  1147                           
  1148                           ;main.c: 609: else
  1149                           ;main.c: 610: ucTimerZeroPoint5s = 0;
  1150  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1151  005B                     l4606:	
  1152                           
  1153                           ;main.c: 612: if(ucTimerZeroPoint5s >= 5)
  1154  005B  3005               	movlw	5
  1155  005C  026B               	subwf	main@ucTimerZeroPoint5s,w
  1156  005D  1C03               	skipc
  1157  005E  2840               	goto	l4592
  1158                           
  1159                           ;main.c: 613: {
  1160                           ;main.c: 614: ucTimerZeroPoint5s = 0;
  1161  005F  01EB               	clrf	main@ucTimerZeroPoint5s
  1162  0060                     l4610:	
  1163                           
  1164                           ;main.c: 615: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1165  0060  01D0               	clrf	main@enumMainLoopStep
  1166  0061  0AD0               	incf	main@enumMainLoopStep,f
  1167  0062                     l752:	
  1168                           
  1169                           ;main.c: 616: }
  1170                           ;main.c: 617: break;
  1171  0062  2840               	goto	l4592
  1172  0063                     l4612:	
  1173                           
  1174                           ;main.c: 621: {
  1175                           ;main.c: 626: static unsigned char ucTimerZeroPoint3s = 0;
  1176                           ;main.c: 629: if(getAdOriginalCh14Value() > 1950)
  1177  0063  118A  25A3  118A   	fcall	_getAdOriginalCh14Value
  1178  0066  3007               	movlw	7
  1179  0067  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1180  0068  309F               	movlw	159
  1181  0069  1903               	skipnz
  1182  006A  0246               	subwf	?_getAdOriginalCh14Value,w
  1183  006B  1C03               	skipc
  1184  006C  2871               	goto	l4618
  1185                           
  1186                           ;main.c: 630: {
  1187                           ;main.c: 632: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1188  006D  3002               	movlw	2
  1189  006E  00D0               	movwf	main@enumMainLoopStep
  1190                           
  1191                           ;main.c: 634: ucTimerZeroPoint3s = 0;
  1192  006F  01EA               	clrf	main@ucTimerZeroPoint3s
  1193                           
  1194                           ;main.c: 636: }
  1195  0070  2840               	goto	l4592
  1196  0071                     l4618:	
  1197  0071  3003               	movlw	3
  1198                           
  1199                           ;main.c: 637: else
  1200                           ;main.c: 638: {
  1201                           ;main.c: 639: ucTimerZeroPoint3s++;
  1202  0072  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1203                           
  1204                           ;main.c: 641: if(ucTimerZeroPoint3s >= 3)
  1205  0073  026A               	subwf	main@ucTimerZeroPoint3s,w
  1206  0074  1C03               	skipc
  1207  0075  2840               	goto	l4592
  1208                           
  1209                           ;main.c: 642: {
  1210                           ;main.c: 643: ucTimerZeroPoint3s = 0;
  1211  0076  01EA               	clrf	main@ucTimerZeroPoint3s
  1212                           
  1213                           ;main.c: 645: clearPinPortAndTimer();
  1214  0077  118A  26B8  118A   	fcall	_clearPinPortAndTimer
  1215  007A  2840               	goto	l4592
  1216  007B                     l4626:	
  1217                           
  1218                           ;main.c: 653: {
  1219                           ;main.c: 658: static unsigned char ucTimerP5s = 0;
  1220                           ;main.c: 661: setPA6(1);
  1221  007B  3001               	movlw	1
  1222  007C  118A  27BC  118A   	fcall	_setPA6
  1223                           
  1224                           ;main.c: 663: if(ucTimerP5s < 5)
  1225  007F  3005               	movlw	5
  1226  0080  0268               	subwf	main@ucTimerP5s,w
  1227  0081  1803               	skipnc
  1228  0082  2885               	goto	l4632
  1229                           
  1230                           ;main.c: 664: ucTimerP5s++;
  1231  0083  0AE8               	incf	main@ucTimerP5s,f
  1232  0084  2840               	goto	l4592
  1233  0085                     l4632:	
  1234  0085  3003               	movlw	3
  1235                           
  1236                           ;main.c: 665: else
  1237                           ;main.c: 666: {
  1238                           ;main.c: 667: ucTimerP5s = 0;
  1239  0086  01E8               	clrf	main@ucTimerP5s
  1240                           
  1241                           ;main.c: 669: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1242  0087  2BF2               	goto	L15
  1243  0088                     l4636:	
  1244                           
  1245                           ;main.c: 676: {
  1246                           ;main.c: 681: static unsigned char ucTimerADC1ZeroP5s = 0;
  1247                           ;main.c: 683: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1248                           ;main.c: 685: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1249                           ;main.c: 687: static unsigned char ucTimerRightP5s = 0;
  1250                           ;main.c: 689: if(getAdOriginalCh1Value() < 115)
  1251  0088  118A  2599  118A   	fcall	_getAdOriginalCh1Value
  1252  008B  3000               	movlw	0
  1253  008C  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1254  008D  3073               	movlw	115
  1255  008E  1903               	skipnz
  1256  008F  0246               	subwf	?_getAdOriginalCh1Value,w
  1257  0090  1803               	skipnc
  1258  0091  2895               	goto	l4642
  1259                           
  1260                           ;main.c: 690: {
  1261                           ;main.c: 691: ucTimerADC1ZeroP5s = 0;
  1262  0092  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1263                           
  1264                           ;main.c: 693: ucTimerLessADC1ZeroP5s++;
  1265  0093  0AE7               	incf	main@ucTimerLessADC1ZeroP5s,f
  1266                           
  1267                           ;main.c: 694: }
  1268  0094  2897               	goto	l4646
  1269  0095                     l4642:	
  1270                           
  1271                           ;main.c: 695: else
  1272                           ;main.c: 696: {
  1273                           ;main.c: 697: ucTimerADC1ZeroP5s++;
  1274  0095  0ADB               	incf	main@ucTimerADC1ZeroP5s,f
  1275                           
  1276                           ;main.c: 699: ucTimerLessADC1ZeroP5s = 0;
  1277  0096  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1278  0097                     l4646:	
  1279                           
  1280                           ;main.c: 700: }
  1281                           ;main.c: 702: if(ucTimerADC1ZeroP5s >= 3)
  1282  0097  3003               	movlw	3
  1283  0098  025B               	subwf	main@ucTimerADC1ZeroP5s,w
  1284  0099  1C03               	skipc
  1285  009A  289E               	goto	l4652
  1286  009B  3004               	movlw	4
  1287                           
  1288                           ;main.c: 703: {
  1289                           ;main.c: 704: ucTimerADC1ZeroP5s = 0;
  1290  009C  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1291                           
  1292                           ;main.c: 705: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1293  009D  28B6               	goto	L2
  1294  009E                     l4652:	
  1295                           ;main.c: 706: }
  1296                           
  1297                           
  1298                           ;main.c: 707: else if( ucTimerLessADC1ZeroP5s >= 3)
  1299  009E  3003               	movlw	3
  1300  009F  0267               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1301  00A0  1C03               	skipc
  1302  00A1  28B7               	goto	l4666
  1303                           
  1304                           ;main.c: 708: {
  1305                           ;main.c: 710: if(getAdOriginalCh1Value() < 105)
  1306  00A2  118A  2599  118A   	fcall	_getAdOriginalCh1Value
  1307  00A5  3000               	movlw	0
  1308  00A6  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1309  00A7  3069               	movlw	105
  1310  00A8  1903               	skipnz
  1311  00A9  0246               	subwf	?_getAdOriginalCh1Value,w
  1312  00AA  1803               	skipnc
  1313  00AB  28AE               	goto	l4658
  1314                           
  1315                           ;main.c: 711: {
  1316                           ;main.c: 712: ucTimerRightP5s++;
  1317  00AC  0AE9               	incf	main@ucTimerRightP5s,f
  1318                           
  1319                           ;main.c: 713: }
  1320  00AD  28AF               	goto	l4660
  1321  00AE                     l4658:	
  1322                           
  1323                           ;main.c: 714: else
  1324                           ;main.c: 715: {
  1325                           ;main.c: 716: ucTimerRightP5s = 0;
  1326  00AE  01E9               	clrf	main@ucTimerRightP5s
  1327  00AF                     l4660:	
  1328                           
  1329                           ;main.c: 717: }
  1330                           ;main.c: 719: if(ucTimerRightP5s >= 3)
  1331  00AF  3003               	movlw	3
  1332  00B0  0269               	subwf	main@ucTimerRightP5s,w
  1333  00B1  1C03               	skipc
  1334  00B2  28B7               	goto	l4666
  1335  00B3  3008               	movlw	8
  1336                           
  1337                           ;main.c: 720: {
  1338                           ;main.c: 721: ucTimerLessADC1ZeroP5s = 0;
  1339  00B4  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1340                           
  1341                           ;main.c: 722: ucTimerRightP5s = 0;
  1342  00B5  01E9               	clrf	main@ucTimerRightP5s
  1343  00B6                     L2:	
  1344                           ;main.c: 723: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1345                           
  1346  00B6  00D0               	movwf	main@enumMainLoopStep
  1347  00B7                     l4666:	
  1348                           ;main.c: 730: else
  1349                           ;main.c: 731: {
  1350                           ;main.c: 732: ;
  1351                           
  1352                           ;main.c: 724: }
  1353                           
  1354                           
  1355                           ;main.c: 733: }
  1356                           ;main.c: 735: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1357  00B7  0850               	movf	main@enumMainLoopStep,w
  1358  00B8  3A08               	xorlw	8
  1359  00B9  1903               	skipnz
  1360  00BA  28BF               	goto	l4670
  1361  00BB  0850               	movf	main@enumMainLoopStep,w
  1362  00BC  3A04               	xorlw	4
  1363  00BD  1D03               	skipz
  1364  00BE  2840               	goto	l4592
  1365  00BF                     l4670:	
  1366                           
  1367                           ;main.c: 736: {
  1368                           ;main.c: 737: ucTimerRightP5s = 0;
  1369  00BF  01E9               	clrf	main@ucTimerRightP5s
  1370                           
  1371                           ;main.c: 738: ucTimerADC1ZeroP5s = 0;
  1372  00C0  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1373                           
  1374                           ;main.c: 739: ucTimerLessADC1ZeroP5s = 0;
  1375  00C1  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1376  00C2  2840               	goto	l4592
  1377  00C3                     l4672:	
  1378                           
  1379                           ;main.c: 747: {
  1380                           ;main.c: 753: startTwelveHourTimer(36000);
  1381  00C3  30A0               	movlw	160
  1382  00C4  00A0               	movwf	?_startTwelveHourTimer
  1383  00C5  308C               	movlw	140
  1384  00C6  00A1               	movwf	?_startTwelveHourTimer+1
  1385  00C7  118A  2723  118A   	fcall	_startTwelveHourTimer
  1386                           
  1387                           ;main.c: 754: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1388  00CA  3005               	movlw	5
  1389  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00CC  00D0               	movwf	main@enumMainLoopStep
  1391                           
  1392                           ;main.c: 756: bCheckTweHour = 0;
  1393  00CD  01CE               	clrf	main@bCheckTweHour
  1394                           
  1395                           ;main.c: 758: break;
  1396  00CE  2840               	goto	l4592
  1397  00CF                     l4678:	
  1398                           
  1399                           ;main.c: 762: {
  1400                           ;main.c: 766: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1401  00CF  118A  279B  118A   	fcall	_isFinishedTwelveHoursTimer
  1402  00D2  3A00               	xorlw	0
  1403  00D3  1903               	skipnz
  1404  00D4  2B86               	goto	l5132
  1405  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1406  00D6  08CE               	movf	main@bCheckTweHour,f
  1407  00D7  1D03               	skipz
  1408  00D8  2B86               	goto	l5132
  1409                           
  1410                           ;main.c: 767: {
  1411                           ;main.c: 768: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1412  00D9  3009               	movlw	9
  1413  00DA  00D0               	movwf	main@enumMainLoopStep
  1414                           
  1415                           ;main.c: 769: bCheckTweHour = 1;
  1416  00DB  01CE               	clrf	main@bCheckTweHour
  1417  00DC  0ACE               	incf	main@bCheckTweHour,f
  1418                           
  1419                           ;main.c: 770: }
  1420  00DD  2840               	goto	l4592
  1421  00DE                     l794:	
  1422                           ;main.c: 776: {
  1423                           ;main.c: 777: case ADC4_STEP_INIT:
  1424                           
  1425                           
  1426                           ;main.c: 778: {
  1427                           ;main.c: 783: ucADC4_Step = ADC4_STEP_FIRST;
  1428  00DE  01D1               	clrf	main@ucADC4_Step
  1429  00DF  0AD1               	incf	main@ucADC4_Step,f
  1430                           
  1431                           ;main.c: 784: break;
  1432  00E0  2840               	goto	l4592
  1433  00E1                     l4686:	
  1434                           
  1435                           ;main.c: 788: {
  1436                           ;main.c: 792: static unsigned int uiOldValue = 0, uiMinValue = 0, uiMaxValue = 0;
  1437                           ;main.c: 794: static unsigned char bInitFlag = 0;
  1438                           ;main.c: 796: if( 0 == bInitFlag)
  1439  00E1  08CF               	movf	main@bInitFlag,f
  1440  00E2  1D03               	skipz
  1441  00E3  28ED               	goto	l4692
  1442                           
  1443                           ;main.c: 797: {
  1444                           ;main.c: 798: bInitFlag = 1;
  1445  00E4  01CF               	clrf	main@bInitFlag
  1446  00E5  0ACF               	incf	main@bInitFlag,f
  1447                           
  1448                           ;main.c: 799: uiOldValue = getAdOriginaCh4Value();
  1449  00E6  118A  258F  118A   	fcall	_getAdOriginaCh4Value
  1450  00E9  0847               	movf	?_getAdOriginaCh4Value+1,w
  1451  00EA  00C9               	movwf	main@uiOldValue+1
  1452  00EB  0846               	movf	?_getAdOriginaCh4Value,w
  1453  00EC  00C8               	movwf	main@uiOldValue
  1454  00ED                     l4692:	
  1455                           
  1456                           ;main.c: 800: }
  1457                           ;main.c: 809: if(LESS_THAN_1911 == ucChannel4Type)
  1458  00ED  08D2               	movf	main@ucChannel4Type,f
  1459  00EE  1D03               	skipz
  1460  00EF  28F5               	goto	l4698
  1461                           
  1462                           ;main.c: 810: {
  1463                           ;main.c: 811: uiMinValue = 0;
  1464  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1465  00F1  308B               	movlw	139
  1466  00F2  01A8               	clrf	main@uiMinValue^(0+128)
  1467  00F3  01A9               	clrf	(main@uiMinValue+1)^(0+128)
  1468                           
  1469                           ;main.c: 812: uiMaxValue = 1931;
  1470  00F4  28FD               	goto	L16
  1471  00F5                     l4698:	
  1472                           ;main.c: 813: }
  1473                           
  1474                           
  1475                           ;main.c: 814: else if(BETWEEN_1911_AND_2067 == ucChannel4Type)
  1476  00F5  0B52               	decfsz	main@ucChannel4Type,w
  1477  00F6  2900               	goto	l4702
  1478                           
  1479                           ;main.c: 815: {
  1480                           ;main.c: 816: uiMinValue = 1931 - 40;
  1481  00F7  3063               	movlw	99
  1482  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1483  00F9  00A8               	movwf	main@uiMinValue^(0+128)
  1484  00FA  3007               	movlw	7
  1485  00FB  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1486                           
  1487                           ;main.c: 817: uiMaxValue = 2047;
  1488  00FC  30FF               	movlw	255
  1489  00FD                     L16:	
  1490  00FD  00A6               	movwf	main@uiMaxValue^(0+128)
  1491  00FE  3007               	movlw	7
  1492  00FF  2919               	goto	L3
  1493  0100                     l4702:	
  1494                           ;main.c: 818: }
  1495                           
  1496                           
  1497                           ;main.c: 819: else if(BETWEEN_2067_AND_2204 == ucChannel4Type)
  1498  0100  0852               	movf	main@ucChannel4Type,w
  1499  0101  3A02               	xorlw	2
  1500  0102  1D03               	skipz
  1501  0103  290B               	goto	l4706
  1502                           
  1503                           ;main.c: 820: {
  1504                           ;main.c: 821: uiMinValue = 2047 - 40;
  1505  0104  30D7               	movlw	215
  1506  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0106  00A8               	movwf	main@uiMinValue^(0+128)
  1508  0107  3007               	movlw	7
  1509  0108  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1510                           
  1511                           ;main.c: 822: uiMaxValue = 2164;
  1512  0109  3074               	movlw	116
  1513  010A  2917               	goto	L17
  1514  010B                     l4706:	
  1515                           ;main.c: 823: }
  1516                           
  1517                           
  1518                           ;main.c: 824: else if(BETWEEN_2204_AND_2340 == ucChannel4Type)
  1519  010B  0852               	movf	main@ucChannel4Type,w
  1520  010C  3A03               	xorlw	3
  1521  010D  1D03               	skipz
  1522  010E  2911               	goto	l4710
  1523                           
  1524                           ;main.c: 825: {
  1525                           ;main.c: 826: uiMinValue = 2164 - 40;
  1526  010F  304C               	movlw	76
  1527  0110  2912               	goto	L19
  1528  0111                     l4710:	
  1529                           ;main.c: 828: }
  1530                           
  1531                           ;main.c: 827: uiMaxValue = 2281;
  1532                           
  1533                           
  1534                           ;main.c: 829: else
  1535                           ;main.c: 830: {
  1536                           ;main.c: 831: uiMinValue = 2281 - 40;
  1537  0111  30C1               	movlw	193
  1538  0112                     L19:	
  1539  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0113  00A8               	movwf	main@uiMinValue^(0+128)
  1541  0114  3008               	movlw	8
  1542  0115  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1543                           
  1544                           ;main.c: 832: uiMaxValue = 2281;
  1545  0116  30E9               	movlw	233
  1546  0117                     L17:	
  1547  0117  00A6               	movwf	main@uiMaxValue^(0+128)
  1548  0118  3008               	movlw	8
  1549  0119                     L3:	
  1550  0119  00A7               	movwf	(main@uiMaxValue^(0+128)+1)
  1551                           
  1552                           ;main.c: 833: }
  1553                           ;main.c: 836: if(( getAdOriginaCh4Value() < uiMinValue )
  1554                           ;main.c: 837: || (getAdOriginaCh4Value() > uiMaxValue ))
  1555  011A  118A  258F  118A   	fcall	_getAdOriginaCh4Value
  1556  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1557  011E  0829               	movf	(main@uiMinValue+1)^(0+128),w
  1558  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0120  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1560  0121  1D03               	skipz
  1561  0122  2927               	goto	u1975
  1562  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0124  0828               	movf	main@uiMinValue^(0+128),w
  1564  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0126  0246               	subwf	?_getAdOriginaCh4Value,w
  1566  0127                     u1975:	
  1567  0127  1C03               	skipc
  1568  0128  2937               	goto	l4716
  1569  0129  118A  258F  118A   	fcall	_getAdOriginaCh4Value
  1570  012C  0847               	movf	?_getAdOriginaCh4Value+1,w
  1571  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1572  012E  0227               	subwf	(main@uiMaxValue+1)^(0+128),w
  1573  012F  1D03               	skipz
  1574  0130  2935               	goto	u1985
  1575  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0132  0846               	movf	?_getAdOriginaCh4Value,w
  1577  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0134  0226               	subwf	main@uiMaxValue^(0+128),w
  1579  0135                     u1985:	
  1580  0135  1803               	skipnc
  1581  0136  293E               	goto	l4718
  1582  0137                     l4716:	
  1583                           
  1584                           ;main.c: 838: {
  1585                           ;main.c: 839: uiOldValue = getAdOriginaCh4Value();
  1586  0137  118A  258F  118A   	fcall	_getAdOriginaCh4Value
  1587  013A  0847               	movf	?_getAdOriginaCh4Value+1,w
  1588  013B  00C9               	movwf	main@uiOldValue+1
  1589  013C  0846               	movf	?_getAdOriginaCh4Value,w
  1590  013D  00C8               	movwf	main@uiOldValue
  1591  013E                     l4718:	
  1592                           
  1593                           ;main.c: 840: }
  1594                           ;main.c: 842: if( uiOldValue < 1931 )
  1595  013E  3007               	movlw	7
  1596  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0140  0249               	subwf	main@uiOldValue+1,w
  1598  0141  308B               	movlw	139
  1599  0142  1903               	skipnz
  1600  0143  0248               	subwf	main@uiOldValue,w
  1601  0144  1803               	skipnc
  1602  0145  2948               	goto	l4722
  1603                           
  1604                           ;main.c: 843: ucChannel4Type = LESS_THAN_1911;
  1605  0146  01D2               	clrf	main@ucChannel4Type
  1606  0147  2966               	goto	l818
  1607  0148                     l4722:	
  1608                           
  1609                           ;main.c: 844: else if( uiOldValue < 2047 )
  1610  0148  3007               	movlw	7
  1611  0149  0249               	subwf	main@uiOldValue+1,w
  1612  014A  30FF               	movlw	255
  1613  014B  1903               	skipnz
  1614  014C  0248               	subwf	main@uiOldValue,w
  1615  014D  1803               	skipnc
  1616  014E  2952               	goto	l4726
  1617                           
  1618                           ;main.c: 845: ucChannel4Type = BETWEEN_1911_AND_2067;
  1619  014F  01D2               	clrf	main@ucChannel4Type
  1620  0150  0AD2               	incf	main@ucChannel4Type,f
  1621  0151  2966               	goto	l818
  1622  0152                     l4726:	
  1623                           
  1624                           ;main.c: 846: else if( uiOldValue < 2164 )
  1625  0152  3008               	movlw	8
  1626  0153  0249               	subwf	main@uiOldValue+1,w
  1627  0154  3074               	movlw	116
  1628  0155  1903               	skipnz
  1629  0156  0248               	subwf	main@uiOldValue,w
  1630  0157  1803               	skipnc
  1631  0158  295B               	goto	l4730
  1632                           
  1633                           ;main.c: 847: ucChannel4Type = BETWEEN_2067_AND_2204;
  1634  0159  3002               	movlw	2
  1635  015A  2965               	goto	L4
  1636  015B                     l4730:	
  1637                           
  1638                           ;main.c: 848: else if( uiOldValue < 2281 )
  1639  015B  3008               	movlw	8
  1640  015C  0249               	subwf	main@uiOldValue+1,w
  1641  015D  30E9               	movlw	233
  1642  015E  1903               	skipnz
  1643  015F  0248               	subwf	main@uiOldValue,w
  1644  0160  1803               	skipnc
  1645  0161  2964               	goto	l4734
  1646                           
  1647                           ;main.c: 849: ucChannel4Type = BETWEEN_2204_AND_2340;
  1648  0162  3003               	movlw	3
  1649  0163  2965               	goto	L4
  1650  0164                     l4734:	
  1651                           
  1652                           ;main.c: 850: else
  1653                           ;main.c: 851: ucChannel4Type = MORE_THAN_2340;
  1654  0164  3004               	movlw	4
  1655  0165                     L4:	
  1656  0165  00D2               	movwf	main@ucChannel4Type
  1657  0166                     l818:	
  1658                           
  1659                           ;main.c: 853: ucADC4_Step = ADC4_STEP_SECOND;
  1660  0166  3002               	movlw	2
  1661  0167  2B7B               	goto	L14
  1662  0168                     l833:	
  1663                           ;main.c: 871: {
  1664                           ;main.c: 872: case 0:
  1665                           
  1666                           ;main.c: 854: break;
  1667                           
  1668                           
  1669                           ;main.c: 873: {
  1670                           ;main.c: 876: PB0 = 1;
  1671  0168  1406               	bsf	6,0
  1672  0169                     l4736:	
  1673                           
  1674                           ;main.c: 880: ucLoaderStep++;
  1675  0169  0AD6               	incf	main@ucLoaderStep,f
  1676                           
  1677                           ;main.c: 881: break;
  1678  016A  2840               	goto	l4592
  1679  016B                     l4738:	
  1680                           
  1681                           ;main.c: 885: {
  1682                           ;main.c: 886: if(ucTimerDelay >= 5)
  1683  016B  3005               	movlw	5
  1684  016C  025C               	subwf	main@ucTimerDelay,w
  1685  016D  1C03               	skipc
  1686  016E  2972               	goto	l4746
  1687                           
  1688                           ;main.c: 887: {
  1689                           ;main.c: 889: PA0 = 1;
  1690  016F  1405               	bsf	5,0
  1691  0170                     l4742:	
  1692                           
  1693                           ;main.c: 893: ucTimerDelay = 0;
  1694  0170  01DC               	clrf	main@ucTimerDelay
  1695  0171  2969               	goto	l4736
  1696  0172                     l4746:	
  1697                           
  1698                           ;main.c: 896: else
  1699                           ;main.c: 897: ucTimerDelay++;
  1700  0172  0ADC               	incf	main@ucTimerDelay,f
  1701  0173  2840               	goto	l4592
  1702  0174                     l4748:	
  1703                           
  1704                           ;main.c: 902: {
  1705                           ;main.c: 903: if(ucTimerDelay >= 5)
  1706  0174  3005               	movlw	5
  1707  0175  025C               	subwf	main@ucTimerDelay,w
  1708  0176  1C03               	skipc
  1709  0177  2972               	goto	l4746
  1710                           
  1711                           ;main.c: 904: {
  1712                           ;main.c: 906: PA1= 1;
  1713  0178  1485               	bsf	5,1
  1714  0179  2970               	goto	l4742
  1715  017A                     l4758:	
  1716                           
  1717                           ;main.c: 920: {
  1718                           ;main.c: 921: if(ucTimerDelay >= 5)
  1719  017A  3005               	movlw	5
  1720  017B  025C               	subwf	main@ucTimerDelay,w
  1721  017C  1C03               	skipc
  1722  017D  2972               	goto	l4746
  1723                           
  1724                           ;main.c: 922: {
  1725                           ;main.c: 924: PA2= 1;
  1726  017E  1505               	bsf	5,2
  1727  017F  2970               	goto	l4742
  1728  0180                     l4768:	
  1729                           
  1730                           ;main.c: 938: {
  1731                           ;main.c: 939: if(ucTimerDelay >= 5)
  1732  0180  3005               	movlw	5
  1733  0181  025C               	subwf	main@ucTimerDelay,w
  1734  0182  1C03               	skipc
  1735  0183  2972               	goto	l4746
  1736                           
  1737                           ;main.c: 940: {
  1738                           ;main.c: 942: PA3 = 1;
  1739  0184  1585               	bsf	5,3
  1740  0185  2970               	goto	l4742
  1741  0186                     l4778:	
  1742                           
  1743                           ;main.c: 955: {
  1744                           ;main.c: 956: if(ucTimerDelay >= 5)
  1745  0186  3005               	movlw	5
  1746  0187  025C               	subwf	main@ucTimerDelay,w
  1747  0188  1C03               	skipc
  1748  0189  2972               	goto	l4746
  1749                           
  1750                           ;main.c: 957: {
  1751                           ;main.c: 959: PB0 = 0;
  1752  018A  1006               	bcf	6,0
  1753                           
  1754                           ;main.c: 960: PA0 = 0;
  1755  018B  1005               	bcf	5,0
  1756                           
  1757                           ;main.c: 961: PA1 = 0;
  1758  018C  1085               	bcf	5,1
  1759                           
  1760                           ;main.c: 962: PA2 = 0;
  1761  018D  1105               	bcf	5,2
  1762                           
  1763                           ;main.c: 963: PA3 = 0;
  1764  018E  1185               	bcf	5,3
  1765  018F  2970               	goto	l4742
  1766  0190                     l4788:	
  1767                           
  1768                           ;main.c: 980: {
  1769                           ;main.c: 981: if(ucTimerDelay >= 1)
  1770  0190  085C               	movf	main@ucTimerDelay,w
  1771  0191  1903               	btfsc	3,2
  1772  0192  2972               	goto	l4746
  1773                           
  1774                           ;main.c: 982: {
  1775                           ;main.c: 983: ucTimerDelay = 0;
  1776  0193  01DC               	clrf	main@ucTimerDelay
  1777                           
  1778                           ;main.c: 985: ucLoaderStep = 0;
  1779  0194  01D6               	clrf	main@ucLoaderStep
  1780  0195                     l4792:	
  1781                           
  1782                           ;main.c: 986: ucADC4_Step = ADC4_STEP_THIRD;
  1783  0195  3003               	movlw	3
  1784  0196  2B7B               	goto	L14
  1785  0197                     l4798:	
  1786                           ;main.c: 987: }
  1787                           
  1788  0197  0856               	movf	main@ucLoaderStep,w
  1789                           
  1790                           ; Switch size 1, requested type "space"
  1791                           ; Number of cases is 7, Range of values is 0 to 6
  1792                           ; switch strategies available:
  1793                           ; Name         Instructions Cycles
  1794                           ; direct_byte           21     7 (fixed)
  1795                           ; simple_byte           22    12 (average)
  1796                           ; jumptable            260     6 (fixed)
  1797                           ; rangetable            11     6 (fixed)
  1798                           ; spacedrange           20     9 (fixed)
  1799                           ; locatedrange           7     3 (fixed)
  1800                           ;	Chosen strategy is direct_byte
  1801  0198  0084               	movwf	4
  1802  0199  3007               	movlw	7
  1803  019A  0204               	subwf	4,w
  1804  019B  1803               	skipnc
  1805  019C  2840               	goto	l4592
  1806  019D  3007               	movlw	high S5540
  1807  019E  008A               	movwf	10
  1808  019F  1003               	clrc
  1809  01A0  0D04               	rlf	4,w
  1810  01A1  3E5B               	addlw	low S5540
  1811  01A2  0082               	movwf	2
  1812  01A3                     l861:	
  1813                           ;main.c: 1006: {
  1814                           ;main.c: 1007: case 0:
  1815                           
  1816                           
  1817                           ;main.c: 1008: {
  1818                           ;main.c: 1010: PB0 = 1;
  1819  01A3  1406               	bsf	6,0
  1820  01A4                     l4800:	
  1821                           
  1822                           ;main.c: 1014: ucLoaderStep1++;
  1823  01A4  0AD7               	incf	main@ucLoaderStep1,f
  1824                           
  1825                           ;main.c: 1015: break;
  1826  01A5  2840               	goto	l4592
  1827  01A6                     l4802:	
  1828                           
  1829                           ;main.c: 1019: {
  1830                           ;main.c: 1020: if(ucTimerDelay1 >= 5)
  1831  01A6  3005               	movlw	5
  1832  01A7  025D               	subwf	main@ucTimerDelay1,w
  1833  01A8  1C03               	skipc
  1834  01A9  29AD               	goto	l4810
  1835                           
  1836                           ;main.c: 1021: {
  1837                           ;main.c: 1023: PA0 = 1;
  1838  01AA  1405               	bsf	5,0
  1839  01AB                     l4806:	
  1840                           
  1841                           ;main.c: 1027: ucTimerDelay1 = 0;
  1842  01AB  01DD               	clrf	main@ucTimerDelay1
  1843  01AC  29A4               	goto	l4800
  1844  01AD                     l4810:	
  1845                           
  1846                           ;main.c: 1030: else
  1847                           ;main.c: 1031: ucTimerDelay1++;
  1848  01AD  0ADD               	incf	main@ucTimerDelay1,f
  1849  01AE  2840               	goto	l4592
  1850  01AF                     l4812:	
  1851                           
  1852                           ;main.c: 1036: {
  1853                           ;main.c: 1037: if(ucTimerDelay1 >= 5)
  1854  01AF  3005               	movlw	5
  1855  01B0  025D               	subwf	main@ucTimerDelay1,w
  1856  01B1  1C03               	skipc
  1857  01B2  29AD               	goto	l4810
  1858                           
  1859                           ;main.c: 1038: {
  1860                           ;main.c: 1040: PA1= 1;
  1861  01B3  1485               	bsf	5,1
  1862  01B4  29AB               	goto	l4806
  1863  01B5                     l4822:	
  1864                           
  1865                           ;main.c: 1053: {
  1866                           ;main.c: 1054: if(ucTimerDelay1 >= 5)
  1867  01B5  3005               	movlw	5
  1868  01B6  025D               	subwf	main@ucTimerDelay1,w
  1869  01B7  1C03               	skipc
  1870  01B8  29AD               	goto	l4810
  1871                           
  1872                           ;main.c: 1055: {
  1873                           ;main.c: 1057: setPA2(1);
  1874  01B9  3001               	movlw	1
  1875  01BA  118A  27E6  118A   	fcall	_setPA2
  1876  01BD  29AB               	goto	l4806
  1877  01BE                     l4832:	
  1878                           
  1879                           ;main.c: 1067: {
  1880                           ;main.c: 1068: if(ucTimerDelay1 >= 5)
  1881  01BE  3005               	movlw	5
  1882  01BF  025D               	subwf	main@ucTimerDelay1,w
  1883  01C0  1C03               	skipc
  1884  01C1  29AD               	goto	l4810
  1885                           
  1886                           ;main.c: 1069: {
  1887                           ;main.c: 1071: setPA3(1);
  1888  01C2  3001               	movlw	1
  1889  01C3  118A  27DE  118A   	fcall	_setPA3
  1890  01C6  29AB               	goto	l4806
  1891  01C7                     l4842:	
  1892                           
  1893                           ;main.c: 1081: {
  1894                           ;main.c: 1082: if(ucTimerDelay1 >= 5)
  1895  01C7  3005               	movlw	5
  1896  01C8  025D               	subwf	main@ucTimerDelay1,w
  1897  01C9  1C03               	skipc
  1898  01CA  29AD               	goto	l4810
  1899                           
  1900                           ;main.c: 1083: {
  1901                           ;main.c: 1085: setPA0(0);
  1902  01CB  3000               	movlw	0
  1903  01CC  118A  27F6  118A   	fcall	_setPA0
  1904                           
  1905                           ;main.c: 1087: setPA1(0);
  1906  01CF  3000               	movlw	0
  1907  01D0  118A  27EE  118A   	fcall	_setPA1
  1908                           
  1909                           ;main.c: 1089: setPA2(0);
  1910  01D3  3000               	movlw	0
  1911  01D4  118A  27E6  118A   	fcall	_setPA2
  1912                           
  1913                           ;main.c: 1091: setPA3(0);
  1914  01D7  3000               	movlw	0
  1915  01D8  118A  27DE  118A   	fcall	_setPA3
  1916  01DB  29AB               	goto	l4806
  1917  01DC                     l4852:	
  1918                           
  1919                           ;main.c: 1101: {
  1920                           ;main.c: 1102: if(ucTimerDelay1 >= 1)
  1921  01DC  085D               	movf	main@ucTimerDelay1,w
  1922  01DD  1903               	btfsc	3,2
  1923  01DE  29AD               	goto	l4810
  1924                           
  1925                           ;main.c: 1103: {
  1926                           ;main.c: 1104: ucTimerDelay1 = 0;
  1927  01DF  01DD               	clrf	main@ucTimerDelay1
  1928                           
  1929                           ;main.c: 1106: ucLoaderStep1 = 0;
  1930  01E0  01D7               	clrf	main@ucLoaderStep1
  1931  01E1  2995               	goto	l4792
  1932  01E2                     l4862:	
  1933  01E2  0857               	movf	main@ucLoaderStep1,w
  1934                           
  1935                           ; Switch size 1, requested type "space"
  1936                           ; Number of cases is 7, Range of values is 0 to 6
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; direct_byte           21     7 (fixed)
  1940                           ; simple_byte           22    12 (average)
  1941                           ; jumptable            260     6 (fixed)
  1942                           ; rangetable            11     6 (fixed)
  1943                           ; spacedrange           20     9 (fixed)
  1944                           ; locatedrange           7     3 (fixed)
  1945                           ;	Chosen strategy is direct_byte
  1946  01E3  0084               	movwf	4
  1947  01E4  3007               	movlw	7
  1948  01E5  0204               	subwf	4,w
  1949  01E6  1803               	skipnc
  1950  01E7  2840               	goto	l4592
  1951  01E8  3007               	movlw	high S5542
  1952  01E9  008A               	movwf	10
  1953  01EA  1003               	clrc
  1954  01EB  0D04               	rlf	4,w
  1955  01EC  3E69               	addlw	low S5542
  1956  01ED  0082               	movwf	2
  1957  01EE                     l4864:	
  1958                           
  1959                           ;main.c: 1130: {
  1960                           ;main.c: 1132: setPB0(1);
  1961  01EE  3001               	movlw	1
  1962  01EF  118A  27C5  118A   	fcall	_setPB0
  1963                           
  1964                           ;main.c: 1134: setPA0(1);
  1965  01F2  3001               	movlw	1
  1966  01F3  118A  27F6  118A   	fcall	_setPA0
  1967  01F6                     l4866:	
  1968                           
  1969                           ;main.c: 1135: ucLoaderStep2++;
  1970  01F6  0AD8               	incf	main@ucLoaderStep2,f
  1971                           
  1972                           ;main.c: 1136: break;
  1973  01F7  2840               	goto	l4592
  1974  01F8                     l4868:	
  1975                           
  1976                           ;main.c: 1140: {
  1977                           ;main.c: 1141: if(ucTimerDelay2 >= 5)
  1978  01F8  3005               	movlw	5
  1979  01F9  025E               	subwf	main@ucTimerDelay2,w
  1980  01FA  1C03               	skipc
  1981  01FB  2A02               	goto	l4876
  1982                           
  1983                           ;main.c: 1142: {
  1984                           ;main.c: 1144: setPA1(1);
  1985  01FC  3001               	movlw	1
  1986  01FD  118A  27EE  118A   	fcall	_setPA1
  1987  0200                     l4872:	
  1988                           
  1989                           ;main.c: 1145: ucTimerDelay2 = 0;
  1990  0200  01DE               	clrf	main@ucTimerDelay2
  1991  0201  29F6               	goto	l4866
  1992  0202                     l4876:	
  1993                           
  1994                           ;main.c: 1148: else
  1995                           ;main.c: 1149: ucTimerDelay2++;
  1996  0202  0ADE               	incf	main@ucTimerDelay2,f
  1997  0203  2840               	goto	l4592
  1998  0204                     l4878:	
  1999                           
  2000                           ;main.c: 1154: {
  2001                           ;main.c: 1155: if(ucTimerDelay2 >= 5)
  2002  0204  3005               	movlw	5
  2003  0205  025E               	subwf	main@ucTimerDelay2,w
  2004  0206  1C03               	skipc
  2005  0207  2A02               	goto	l4876
  2006                           
  2007                           ;main.c: 1156: {
  2008                           ;main.c: 1158: setPA2(1);
  2009  0208  3001               	movlw	1
  2010  0209  118A  27E6  118A   	fcall	_setPA2
  2011  020C  2A00               	goto	l4872
  2012  020D                     l4888:	
  2013                           
  2014                           ;main.c: 1168: {
  2015                           ;main.c: 1169: if(ucTimerDelay2 >= 5)
  2016  020D  3005               	movlw	5
  2017  020E  025E               	subwf	main@ucTimerDelay2,w
  2018  020F  1C03               	skipc
  2019  0210  2A02               	goto	l4876
  2020                           
  2021                           ;main.c: 1170: {
  2022                           ;main.c: 1172: setPA3(1);
  2023  0211  3001               	movlw	1
  2024  0212  118A  27DE  118A   	fcall	_setPA3
  2025  0215  2A00               	goto	l4872
  2026  0216                     l4898:	
  2027                           
  2028                           ;main.c: 1182: {
  2029                           ;main.c: 1183: if(ucTimerDelay2 >= 5)
  2030  0216  3005               	movlw	5
  2031  0217  025E               	subwf	main@ucTimerDelay2,w
  2032  0218  1C03               	skipc
  2033  0219  2A02               	goto	l4876
  2034                           
  2035                           ;main.c: 1184: {
  2036                           ;main.c: 1187: setPA1(0);
  2037  021A  3000               	movlw	0
  2038  021B  118A  27EE  118A   	fcall	_setPA1
  2039                           
  2040                           ;main.c: 1189: setPA2(0);
  2041  021E  3000               	movlw	0
  2042  021F  118A  27E6  118A   	fcall	_setPA2
  2043                           
  2044                           ;main.c: 1191: setPA3(0);
  2045  0222  3000               	movlw	0
  2046  0223  118A  27DE  118A   	fcall	_setPA3
  2047  0226  2A00               	goto	l4872
  2048  0227                     l4908:	
  2049                           
  2050                           ;main.c: 1201: {
  2051                           ;main.c: 1202: if(ucTimerDelay2 >= 1)
  2052  0227  085E               	movf	main@ucTimerDelay2,w
  2053  0228  1903               	btfsc	3,2
  2054  0229  2A02               	goto	l4876
  2055                           
  2056                           ;main.c: 1203: {
  2057                           ;main.c: 1204: ucTimerDelay2 = 0;
  2058  022A  01DE               	clrf	main@ucTimerDelay2
  2059                           
  2060                           ;main.c: 1206: ucLoaderStep2 = 0;
  2061  022B  01D8               	clrf	main@ucLoaderStep2
  2062  022C  2995               	goto	l4792
  2063  022D                     l4918:	
  2064  022D  0858               	movf	main@ucLoaderStep2,w
  2065                           
  2066                           ; Switch size 1, requested type "space"
  2067                           ; Number of cases is 6, Range of values is 0 to 5
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; direct_byte           19     7 (fixed)
  2071                           ; simple_byte           19    10 (average)
  2072                           ; jumptable            260     6 (fixed)
  2073                           ; rangetable            10     6 (fixed)
  2074                           ; spacedrange           18     9 (fixed)
  2075                           ; locatedrange           6     3 (fixed)
  2076                           ;	Chosen strategy is direct_byte
  2077  022E  0084               	movwf	4
  2078  022F  3006               	movlw	6
  2079  0230  0204               	subwf	4,w
  2080  0231  1803               	skipnc
  2081  0232  2840               	goto	l4592
  2082  0233  3007               	movlw	high S5544
  2083  0234  008A               	movwf	10
  2084  0235  1003               	clrc
  2085  0236  0D04               	rlf	4,w
  2086  0237  3E77               	addlw	low S5544
  2087  0238  0082               	movwf	2
  2088  0239                     l4920:	
  2089                           
  2090                           ;main.c: 1230: {
  2091                           ;main.c: 1232: setPB0(1);
  2092  0239  3001               	movlw	1
  2093  023A  118A  27C5  118A   	fcall	_setPB0
  2094                           
  2095                           ;main.c: 1234: setPA0(1);
  2096  023D  3001               	movlw	1
  2097  023E  118A  27F6  118A   	fcall	_setPA0
  2098                           
  2099                           ;main.c: 1236: setPA1(1);
  2100  0241  3001               	movlw	1
  2101  0242  118A  27EE  118A   	fcall	_setPA1
  2102  0245                     l4922:	
  2103                           
  2104                           ;main.c: 1237: ucLoaderStep3++;
  2105  0245  0AD9               	incf	main@ucLoaderStep3,f
  2106                           
  2107                           ;main.c: 1238: break;
  2108  0246  2840               	goto	l4592
  2109  0247                     l4924:	
  2110                           
  2111                           ;main.c: 1242: {
  2112                           ;main.c: 1243: if(ucTimerDelay3 >= 5)
  2113  0247  3005               	movlw	5
  2114  0248  025F               	subwf	main@ucTimerDelay3,w
  2115  0249  1C03               	skipc
  2116  024A  2A51               	goto	l4932
  2117                           
  2118                           ;main.c: 1244: {
  2119                           ;main.c: 1246: setPA2(1);
  2120  024B  3001               	movlw	1
  2121  024C  118A  27E6  118A   	fcall	_setPA2
  2122  024F                     l4928:	
  2123                           
  2124                           ;main.c: 1247: ucTimerDelay3 = 0;
  2125  024F  01DF               	clrf	main@ucTimerDelay3
  2126  0250  2A45               	goto	l4922
  2127  0251                     l4932:	
  2128                           
  2129                           ;main.c: 1250: else
  2130                           ;main.c: 1251: ucTimerDelay3++;
  2131  0251  0ADF               	incf	main@ucTimerDelay3,f
  2132  0252  2840               	goto	l4592
  2133  0253                     l4934:	
  2134                           
  2135                           ;main.c: 1256: {
  2136                           ;main.c: 1257: if(ucTimerDelay3 >= 5)
  2137  0253  3005               	movlw	5
  2138  0254  025F               	subwf	main@ucTimerDelay3,w
  2139  0255  1C03               	skipc
  2140  0256  2A51               	goto	l4932
  2141                           
  2142                           ;main.c: 1258: {
  2143                           ;main.c: 1260: setPA3(1);
  2144  0257  3001               	movlw	1
  2145  0258  118A  27DE  118A   	fcall	_setPA3
  2146  025B  2A4F               	goto	l4928
  2147  025C                     l4944:	
  2148                           
  2149                           ;main.c: 1271: {
  2150                           ;main.c: 1272: if(ucTimerDelay3 >= 5)
  2151  025C  3005               	movlw	5
  2152  025D  025F               	subwf	main@ucTimerDelay3,w
  2153  025E  1C03               	skipc
  2154  025F  2A51               	goto	l4932
  2155                           
  2156                           ;main.c: 1273: {
  2157                           ;main.c: 1276: setPA2(0);
  2158  0260  3000               	movlw	0
  2159  0261  118A  27E6  118A   	fcall	_setPA2
  2160                           
  2161                           ;main.c: 1278: setPA3(0);
  2162  0264  3000               	movlw	0
  2163  0265  118A  27DE  118A   	fcall	_setPA3
  2164  0268  2A4F               	goto	l4928
  2165  0269                     l4954:	
  2166                           
  2167                           ;main.c: 1288: {
  2168                           ;main.c: 1289: if(ucTimerDelay3 >= 1)
  2169  0269  085F               	movf	main@ucTimerDelay3,w
  2170  026A  1903               	btfsc	3,2
  2171  026B  2A51               	goto	l4932
  2172                           
  2173                           ;main.c: 1290: {
  2174                           ;main.c: 1291: ucTimerDelay3 = 0;
  2175  026C  01DF               	clrf	main@ucTimerDelay3
  2176                           
  2177                           ;main.c: 1293: ucLoaderStep3 = 0;
  2178  026D  01D9               	clrf	main@ucLoaderStep3
  2179  026E  2995               	goto	l4792
  2180  026F                     l4964:	
  2181  026F  0859               	movf	main@ucLoaderStep3,w
  2182                           
  2183                           ; Switch size 1, requested type "space"
  2184                           ; Number of cases is 5, Range of values is 0 to 4
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte           16     9 (average)
  2188                           ; direct_byte           17     7 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ; rangetable             9     6 (fixed)
  2191                           ; spacedrange           16     9 (fixed)
  2192                           ; locatedrange           5     3 (fixed)
  2193                           ;	Chosen strategy is simple_byte
  2194  0270  3A00               	xorlw	0	; case 0
  2195  0271  1903               	skipnz
  2196  0272  2A39               	goto	l4920
  2197  0273  3A01               	xorlw	1	; case 1
  2198  0274  1903               	skipnz
  2199  0275  2A47               	goto	l4924
  2200  0276  3A03               	xorlw	3	; case 2
  2201  0277  1903               	skipnz
  2202  0278  2A53               	goto	l4934
  2203  0279  3A01               	xorlw	1	; case 3
  2204  027A  1903               	skipnz
  2205  027B  2A5C               	goto	l4944
  2206  027C  3A07               	xorlw	7	; case 4
  2207  027D  1903               	skipnz
  2208  027E  2A69               	goto	l4954
  2209  027F  2862               	goto	l752
  2210  0280                     l4966:	
  2211                           
  2212                           ;main.c: 1317: {
  2213                           ;main.c: 1319: setPB0(1);
  2214  0280  3001               	movlw	1
  2215  0281  118A  27C5  118A   	fcall	_setPB0
  2216                           
  2217                           ;main.c: 1321: setPA0(1);
  2218  0284  3001               	movlw	1
  2219  0285  118A  27F6  118A   	fcall	_setPA0
  2220                           
  2221                           ;main.c: 1323: setPA1(1);
  2222  0288  3001               	movlw	1
  2223  0289  118A  27EE  118A   	fcall	_setPA1
  2224                           
  2225                           ;main.c: 1325: setPA2(1);
  2226  028C  3001               	movlw	1
  2227  028D  118A  27E6  118A   	fcall	_setPA2
  2228  0290                     l4968:	
  2229                           
  2230                           ;main.c: 1326: ucLoaderStep4++;
  2231  0290  0ADA               	incf	main@ucLoaderStep4,f
  2232                           
  2233                           ;main.c: 1327: break;
  2234  0291  2840               	goto	l4592
  2235  0292                     l4970:	
  2236                           
  2237                           ;main.c: 1331: {
  2238                           ;main.c: 1332: if(ucTimerDelay4 >= 5)
  2239  0292  3005               	movlw	5
  2240  0293  0260               	subwf	main@ucTimerDelay4,w
  2241  0294  1C03               	skipc
  2242  0295  2A9C               	goto	l4978
  2243                           
  2244                           ;main.c: 1333: {
  2245                           ;main.c: 1335: setPA3(1);
  2246  0296  3001               	movlw	1
  2247  0297                     L7:	
  2248  0297  118A  27DE  118A   	fcall	_setPA3
  2249                           
  2250                           ;main.c: 1336: ucTimerDelay4 = 0;
  2251  029A  01E0               	clrf	main@ucTimerDelay4
  2252  029B  2A90               	goto	l4968
  2253  029C                     l4978:	
  2254                           
  2255                           ;main.c: 1339: else
  2256                           ;main.c: 1340: ucTimerDelay4++;
  2257  029C  0AE0               	incf	main@ucTimerDelay4,f
  2258  029D  2840               	goto	l4592
  2259  029E                     l4980:	
  2260                           
  2261                           ;main.c: 1345: {
  2262                           ;main.c: 1346: if(ucTimerDelay4 >= 5)
  2263  029E  3005               	movlw	5
  2264  029F  0260               	subwf	main@ucTimerDelay4,w
  2265  02A0  1C03               	skipc
  2266  02A1  2A9C               	goto	l4978
  2267                           
  2268                           ;main.c: 1347: {
  2269                           ;main.c: 1349: setPA3(0);
  2270  02A2  3000               	movlw	0
  2271  02A3  2A97               	goto	L7
  2272  02A4                     l4990:	
  2273                           
  2274                           ;main.c: 1359: {
  2275                           ;main.c: 1360: if(ucTimerDelay4 >= 1)
  2276  02A4  0860               	movf	main@ucTimerDelay4,w
  2277  02A5  1903               	btfsc	3,2
  2278  02A6  2A9C               	goto	l4978
  2279                           
  2280                           ;main.c: 1361: {
  2281                           ;main.c: 1362: ucTimerDelay4 = 0;
  2282  02A7  01E0               	clrf	main@ucTimerDelay4
  2283                           
  2284                           ;main.c: 1364: ucLoaderStep4 = 0;
  2285  02A8  01DA               	clrf	main@ucLoaderStep4
  2286  02A9  2995               	goto	l4792
  2287  02AA                     l5000:	
  2288  02AA  085A               	movf	main@ucLoaderStep4,w
  2289                           
  2290                           ; Switch size 1, requested type "space"
  2291                           ; Number of cases is 4, Range of values is 0 to 3
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte           13     7 (average)
  2295                           ; direct_byte           15     7 (fixed)
  2296                           ; jumptable            260     6 (fixed)
  2297                           ; rangetable             8     6 (fixed)
  2298                           ; spacedrange           14     9 (fixed)
  2299                           ; locatedrange           4     3 (fixed)
  2300                           ;	Chosen strategy is simple_byte
  2301  02AB  3A00               	xorlw	0	; case 0
  2302  02AC  1903               	skipnz
  2303  02AD  2A80               	goto	l4966
  2304  02AE  3A01               	xorlw	1	; case 1
  2305  02AF  1903               	skipnz
  2306  02B0  2A92               	goto	l4970
  2307  02B1  3A03               	xorlw	3	; case 2
  2308  02B2  1903               	skipnz
  2309  02B3  2A9E               	goto	l4980
  2310  02B4  3A01               	xorlw	1	; case 3
  2311  02B5  1903               	skipnz
  2312  02B6  2AA4               	goto	l4990
  2313  02B7  2862               	goto	l752
  2314  02B8                     l5004:	
  2315  02B8  0852               	movf	main@ucChannel4Type,w
  2316                           
  2317                           ; Switch size 1, requested type "space"
  2318                           ; Number of cases is 5, Range of values is 0 to 4
  2319                           ; switch strategies available:
  2320                           ; Name         Instructions Cycles
  2321                           ; simple_byte           16     9 (average)
  2322                           ; direct_byte           17     7 (fixed)
  2323                           ; jumptable            260     6 (fixed)
  2324                           ; rangetable             9     6 (fixed)
  2325                           ; spacedrange           16     9 (fixed)
  2326                           ; locatedrange           5     3 (fixed)
  2327                           ;	Chosen strategy is simple_byte
  2328  02B9  3A00               	xorlw	0	; case 0
  2329  02BA  1903               	skipnz
  2330  02BB  2997               	goto	l4798
  2331  02BC  3A01               	xorlw	1	; case 1
  2332  02BD  1903               	skipnz
  2333  02BE  29E2               	goto	l4862
  2334  02BF  3A03               	xorlw	3	; case 2
  2335  02C0  1903               	skipnz
  2336  02C1  2A2D               	goto	l4918
  2337  02C2  3A01               	xorlw	1	; case 3
  2338  02C3  1903               	skipnz
  2339  02C4  2A6F               	goto	l4964
  2340  02C5  3A07               	xorlw	7	; case 4
  2341  02C6  1903               	skipnz
  2342  02C7  2AAA               	goto	l5000
  2343  02C8  2862               	goto	l752
  2344  02C9                     l5006:	
  2345                           
  2346                           ;main.c: 1388: {
  2347                           ;main.c: 1392: static unsigned char ucTimerDelayP2sLess = 0;
  2348                           ;main.c: 1394: static unsigned char ucTimerDelayP2sMore = 0;
  2349                           ;main.c: 1396: if( getAdOriginalCh1Value() <= 220 )
  2350  02C9  118A  2599  118A   	fcall	_getAdOriginalCh1Value
  2351  02CC  3000               	movlw	0
  2352  02CD  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2353  02CE  30DD               	movlw	221
  2354  02CF  1903               	skipnz
  2355  02D0  0246               	subwf	?_getAdOriginalCh1Value,w
  2356  02D1  1803               	skipnc
  2357  02D2  2AD6               	goto	l5012
  2358                           
  2359                           ;main.c: 1397: {
  2360                           ;main.c: 1398: ucTimerDelayP2sLess++;
  2361  02D3  0AE1               	incf	main@ucTimerDelayP2sLess,f
  2362                           
  2363                           ;main.c: 1399: ucTimerDelayP2sMore = 0;
  2364  02D4  01E2               	clrf	main@ucTimerDelayP2sMore
  2365                           
  2366                           ;main.c: 1400: }
  2367  02D5  2AD8               	goto	l5016
  2368  02D6                     l5012:	
  2369                           
  2370                           ;main.c: 1401: else
  2371                           ;main.c: 1402: {
  2372                           ;main.c: 1403: ucTimerDelayP2sMore++;
  2373  02D6  0AE2               	incf	main@ucTimerDelayP2sMore,f
  2374                           
  2375                           ;main.c: 1404: ucTimerDelayP2sLess = 0;
  2376  02D7  01E1               	clrf	main@ucTimerDelayP2sLess
  2377  02D8                     l5016:	
  2378                           
  2379                           ;main.c: 1405: }
  2380                           ;main.c: 1407: if( ucTimerDelayP2sLess >= 2)
  2381  02D8  3002               	movlw	2
  2382  02D9  0261               	subwf	main@ucTimerDelayP2sLess,w
  2383  02DA  1C03               	skipc
  2384  02DB  2AE4               	goto	l5024
  2385                           
  2386                           ;main.c: 1408: {
  2387                           ;main.c: 1409: ucTimerDelayP2sLess = 0;
  2388  02DC  01E1               	clrf	main@ucTimerDelayP2sLess
  2389                           
  2390                           ;main.c: 1410: ucTimerDelayP2sMore = 0;
  2391  02DD  01E2               	clrf	main@ucTimerDelayP2sMore
  2392                           
  2393                           ;main.c: 1412: startTwentySecondsTimer();
  2394  02DE  118A  274A  118A   	fcall	_startTwentySecondsTimer
  2395                           
  2396                           ;main.c: 1414: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX1;
  2397  02E1  3004               	movlw	4
  2398  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2399  02E3  00D1               	movwf	main@ucADC4_Step
  2400  02E4                     l5024:	
  2401                           
  2402                           ;main.c: 1415: }
  2403                           ;main.c: 1417: if(ucTimerDelayP2sMore >= 2)
  2404  02E4  3002               	movlw	2
  2405  02E5  0262               	subwf	main@ucTimerDelayP2sMore,w
  2406  02E6  1C03               	skipc
  2407  02E7  2840               	goto	l4592
  2408                           
  2409                           ;main.c: 1418: {
  2410                           ;main.c: 1419: ucTimerDelayP2sMore = 0;
  2411  02E8  01E2               	clrf	main@ucTimerDelayP2sMore
  2412                           
  2413                           ;main.c: 1420: ucTimerDelayP2sLess = 0;
  2414  02E9  01E1               	clrf	main@ucTimerDelayP2sLess
  2415  02EA                     l5028:	
  2416                           
  2417                           ;main.c: 1421: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX2;
  2418  02EA  3005               	movlw	5
  2419  02EB  2B7A               	goto	L20
  2420  02EC                     l5030:	
  2421                           
  2422                           ;main.c: 1429: {
  2423                           ;main.c: 1433: if( !isFinishedTwentySecondsTimer() )
  2424  02EC  118A  278F  118A   	fcall	_isFinishedTwentySecondsTimer
  2425  02EF  3800               	iorlw	0
  2426  02F0  1903               	btfsc	3,2
  2427  02F1  2AEA               	goto	l5028
  2428                           
  2429                           ;main.c: 1435: else
  2430                           ;main.c: 1436: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX3;
  2431  02F2  3006               	movlw	6
  2432  02F3  2B7A               	goto	L20
  2433  02F4                     l5036:	
  2434                           
  2435                           ;main.c: 1443: {
  2436                           ;main.c: 1447: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2437                           ;main.c: 1449: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f =
      +                           0;
  2438                           ;main.c: 1451: if((getAdOriginalCh14Value() > 2800))
  2439  02F4  118A  25A3  118A   	fcall	_getAdOriginalCh14Value
  2440  02F7  300A               	movlw	10
  2441  02F8  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2442  02F9  30F1               	movlw	241
  2443  02FA  1903               	skipnz
  2444  02FB  0246               	subwf	?_getAdOriginalCh14Value,w
  2445  02FC  1C03               	skipc
  2446  02FD  2B01               	goto	l5042
  2447                           
  2448                           ;main.c: 1452: {
  2449                           ;main.c: 1453: ucTimerForDACR0_CNT1++;
  2450  02FE  0AE3               	incf	main@ucTimerForDACR0_CNT1,f
  2451                           
  2452                           ;main.c: 1454: ucTimerForDACR0_CNT2 = 0;
  2453  02FF  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2454                           
  2455                           ;main.c: 1455: }
  2456  0300  2B03               	goto	l5046
  2457  0301                     l5042:	
  2458                           
  2459                           ;main.c: 1456: else
  2460                           ;main.c: 1457: {
  2461                           ;main.c: 1458: ucTimerForDACR0_CNT2++;
  2462  0301  0AE5               	incf	main@ucTimerForDACR0_CNT2,f
  2463                           
  2464                           ;main.c: 1459: ucTimerForDACR0_CNT1 = 0;
  2465  0302  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2466  0303                     l5046:	
  2467                           
  2468                           ;main.c: 1460: }
  2469                           ;main.c: 1462: if(ucTimerForDACR0_CNT1 >= 2)
  2470  0303  3002               	movlw	2
  2471  0304  0263               	subwf	main@ucTimerForDACR0_CNT1,w
  2472  0305  1C03               	skipc
  2473  0306  2B09               	goto	l5050
  2474                           
  2475                           ;main.c: 1463: ucTimerForDACR0_CNT1_f = 1;
  2476  0307  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2477  0308  0AE4               	incf	main@ucTimerForDACR0_CNT1_f,f
  2478  0309                     l5050:	
  2479                           
  2480                           ;main.c: 1465: if(ucTimerForDACR0_CNT2 >= 2)
  2481  0309  3002               	movlw	2
  2482  030A  0265               	subwf	main@ucTimerForDACR0_CNT2,w
  2483  030B  1C03               	skipc
  2484  030C  2B0F               	goto	l5054
  2485                           
  2486                           ;main.c: 1466: ucTimerForDACR0_CNT2_f = 1;
  2487  030D  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2488  030E  0AE6               	incf	main@ucTimerForDACR0_CNT2_f,f
  2489  030F                     l5054:	
  2490                           
  2491                           ;main.c: 1468: if(ucTimerForDACR0_CNT1_f)
  2492  030F  0864               	movf	main@ucTimerForDACR0_CNT1_f,w
  2493  0310  1903               	btfsc	3,2
  2494  0311  2B14               	goto	l5058
  2495                           
  2496                           ;main.c: 1469: {
  2497                           ;main.c: 1471: DACR0=0x0F;
  2498  0312  300F               	movlw	15
  2499  0313  2B18               	goto	L10
  2500  0314                     l5058:	
  2501                           ;main.c: 1476: }
  2502                           
  2503                           ;main.c: 1475: ucADC4_Step = ADC4_STEP_FOURTH;
  2504                           
  2505                           
  2506                           ;main.c: 1477: else if(ucTimerForDACR0_CNT2_f)
  2507  0314  0866               	movf	main@ucTimerForDACR0_CNT2_f,w
  2508  0315  1903               	btfsc	3,2
  2509  0316  2B1D               	goto	l5062
  2510                           
  2511                           ;main.c: 1478: {
  2512                           ;main.c: 1480: DACR0=0x09;
  2513  0317  3009               	movlw	9
  2514  0318                     L10:	
  2515  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2516  0319  0088               	movwf	8	;volatile
  2517                           
  2518                           ;main.c: 1484: ucADC4_Step = ADC4_STEP_FOURTH;
  2519  031A  300A               	movlw	10
  2520  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2521  031C  00D1               	movwf	main@ucADC4_Step
  2522  031D                     l5062:	
  2523                           ;main.c: 1485: }
  2524                           
  2525                           
  2526                           ;main.c: 1489: }
  2527                           ;main.c: 1491: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2528  031D  0851               	movf	main@ucADC4_Step,w
  2529  031E  3A0A               	xorlw	10
  2530  031F  1D03               	skipz
  2531  0320  2840               	goto	l4592
  2532                           
  2533                           ;main.c: 1492: {
  2534                           ;main.c: 1493: ucTimerForDACR0_CNT1 = 0;
  2535  0321  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2536                           
  2537                           ;main.c: 1494: ucTimerForDACR0_CNT2 = 0;
  2538  0322  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2539                           
  2540                           ;main.c: 1495: ucTimerForDACR0_CNT1_f = 0;
  2541  0323  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2542                           
  2543                           ;main.c: 1496: ucTimerForDACR0_CNT2_f = 0;
  2544  0324  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2545  0325  2840               	goto	l4592
  2546  0326                     l5066:	
  2547                           
  2548                           ;main.c: 1504: {
  2549                           ;main.c: 1508: clearTwentySecondsTimer();
  2550  0326  118A  26D6  118A   	fcall	_clearTwentySecondsTimer
  2551                           
  2552                           ;main.c: 1510: setPA6(0);
  2553  0329  3000               	movlw	0
  2554  032A  118A  27BC  118A   	fcall	_setPA6
  2555                           
  2556                           ;main.c: 1512: PBOD6 = 0;
  2557  032D  1683               	bsf	3,5	;RP0=1, select bank3
  2558  032E  1703               	bsf	3,6	;RP1=1, select bank3
  2559  032F  1308               	bcf	8,6
  2560                           
  2561                           ;main.c: 1513: PB6 = 1;
  2562  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0331  3007               	movlw	7
  2564  0332  2B40               	goto	L21
  2565  0333                     l5074:	
  2566                           ;main.c: 1519: break;
  2567                           
  2568                           ;main.c: 1518: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX4;
  2569                           
  2570  0333  3005               	movlw	5
  2571                           
  2572                           ;main.c: 1525: {
  2573                           ;main.c: 1530: static unsigned char ucDelayPrefix4TimerP5s;
  2574                           ;main.c: 1532: ucDelayPrefix4TimerP5s++;
  2575  0334  0AD4               	incf	main@ucDelayPrefix4TimerP5s,f
  2576                           
  2577                           ;main.c: 1534: if( ucDelayPrefix4TimerP5s >= 5)
  2578  0335  0254               	subwf	main@ucDelayPrefix4TimerP5s,w
  2579  0336  1C03               	skipc
  2580  0337  2840               	goto	l4592
  2581  0338  3008               	movlw	8
  2582                           
  2583                           ;main.c: 1535: {
  2584                           ;main.c: 1536: ucDelayPrefix4TimerP5s = 0;
  2585  0339  01D4               	clrf	main@ucDelayPrefix4TimerP5s
  2586                           
  2587                           ;main.c: 1538: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX5;
  2588  033A  2B7B               	goto	L14
  2589  033B                     l981:	
  2590                           ;main.c: 1541: }
  2591                           ;main.c: 1543: case ADC4_STEP_FOURTH_PREFIX5:
  2592                           
  2593                           
  2594                           ;main.c: 1544: {
  2595                           ;main.c: 1550: PBOD6 = 1;
  2596  033B  1683               	bsf	3,5	;RP0=1, select bank3
  2597  033C  1703               	bsf	3,6	;RP1=1, select bank3
  2598  033D  1708               	bsf	8,6
  2599                           
  2600                           ;main.c: 1551: PB6 = 1;
  2601  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2602  033F  3009               	movlw	9
  2603  0340                     L21:	
  2604  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2605  0341  1706               	bsf	6,6
  2606                           
  2607                           ;main.c: 1556: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX6;
  2608  0342  2B7B               	goto	L14
  2609  0343                     l5084:	
  2610                           ;main.c: 1558: break;
  2611                           
  2612  0343  3002               	movlw	2
  2613                           
  2614                           ;main.c: 1563: {
  2615                           ;main.c: 1564: static unsigned char ucDelayPrefix6TimerP2s;
  2616                           ;main.c: 1566: ucDelayPrefix6TimerP2s++;
  2617  0344  0AD5               	incf	main@ucDelayPrefix6TimerP2s,f
  2618                           
  2619                           ;main.c: 1568: if( ucDelayPrefix6TimerP2s >= 2)
  2620  0345  0255               	subwf	main@ucDelayPrefix6TimerP2s,w
  2621  0346  1C03               	skipc
  2622  0347  2840               	goto	l4592
  2623                           
  2624                           ;main.c: 1569: {
  2625                           ;main.c: 1570: ucDelayPrefix6TimerP2s = 0;
  2626  0348  01D5               	clrf	main@ucDelayPrefix6TimerP2s
  2627  0349  2B84               	goto	l5126
  2628  034A                     l5092:	
  2629                           ;main.c: 1572: ucADC4_Step = ADC4_STEP_INIT;
  2630                           
  2631                           
  2632                           ;main.c: 1581: {
  2633                           ;main.c: 1585: static unsigned char ucCheckTimerP2sLess = 0;
  2634                           ;main.c: 1587: static unsigned char ucCheckTimerP2sMore = 0;
  2635                           ;main.c: 1589: if( getAdOriginalCh1Value() < 85)
  2636  034A  118A  2599  118A   	fcall	_getAdOriginalCh1Value
  2637  034D  3000               	movlw	0
  2638  034E  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2639  034F  3055               	movlw	85
  2640  0350  1903               	skipnz
  2641  0351  0246               	subwf	?_getAdOriginalCh1Value,w
  2642  0352  1803               	skipnc
  2643  0353  2B58               	goto	l5098
  2644                           
  2645                           ;main.c: 1590: {
  2646                           ;main.c: 1591: ucCheckTimerP2sLess++;
  2647  0354  0AD3               	incf	main@ucCheckTimerP2sLess,f
  2648                           
  2649                           ;main.c: 1592: ucCheckTimerP2sMore = 0;
  2650  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0356  01AF               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2652                           
  2653                           ;main.c: 1593: }
  2654  0357  2B5C               	goto	l5102
  2655  0358                     l5098:	
  2656                           
  2657                           ;main.c: 1594: else
  2658                           ;main.c: 1595: {
  2659                           ;main.c: 1596: ucCheckTimerP2sMore++;
  2660  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0359  0AAF               	incf	main@ucCheckTimerP2sMore^(0+128),f
  2662                           
  2663                           ;main.c: 1597: ucCheckTimerP2sLess = 0;
  2664  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2665  035B  01D3               	clrf	main@ucCheckTimerP2sLess
  2666  035C                     l5102:	
  2667                           
  2668                           ;main.c: 1598: }
  2669                           ;main.c: 1600: if( ucCheckTimerP2sMore > 2)
  2670  035C  3003               	movlw	3
  2671  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2672  035E  022F               	subwf	main@ucCheckTimerP2sMore^(0+128),w
  2673  035F  1C03               	skipc
  2674  0360  2B67               	goto	l5108
  2675                           
  2676                           ;main.c: 1601: {
  2677                           ;main.c: 1602: ucCheckTimerP2sMore = 0;
  2678  0361  01AF               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2679                           
  2680                           ;main.c: 1603: ucCheckTimerP2sLess = 0;
  2681  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0363  3003               	movlw	3
  2683  0364  01D3               	clrf	main@ucCheckTimerP2sLess
  2684                           
  2685                           ;main.c: 1605: ucADC4_Step = ADC4_STEP_INIT;
  2686  0365  01D1               	clrf	main@ucADC4_Step
  2687                           
  2688                           ;main.c: 1607: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  2689  0366  00D0               	movwf	main@enumMainLoopStep
  2690  0367                     l5108:	
  2691                           
  2692                           ;main.c: 1608: }
  2693                           ;main.c: 1610: if( ucCheckTimerP2sLess > 2)
  2694  0367  3003               	movlw	3
  2695  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0369  0253               	subwf	main@ucCheckTimerP2sLess,w
  2697  036A  1C03               	skipc
  2698  036B  2840               	goto	l4592
  2699                           
  2700                           ;main.c: 1611: {
  2701                           ;main.c: 1612: ucCheckTimerP2sMore = 0;
  2702  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2703  036D  01AF               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2704                           
  2705                           ;main.c: 1613: ucCheckTimerP2sLess = 0;
  2706  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2707  036F  300B               	movlw	11
  2708  0370  01D3               	clrf	main@ucCheckTimerP2sLess
  2709                           
  2710                           ;main.c: 1615: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX1;
  2711  0371  2B7B               	goto	L14
  2712  0372                     l5114:	
  2713                           
  2714                           ;main.c: 1624: {
  2715                           ;main.c: 1628: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2716                           ;main.c: 1630: ucFourthSuffix1TimerP3s++;
  2717  0372  1683               	bsf	3,5	;RP0=1, select bank1
  2718  0373  3004               	movlw	4
  2719  0374  0AB0               	incf	main@ucFourthSuffix1TimerP3s^(0+128),f
  2720                           
  2721                           ;main.c: 1632: if( ucFourthSuffix1TimerP3s > 3)
  2722  0375  0230               	subwf	main@ucFourthSuffix1TimerP3s^(0+128),w
  2723  0376  1C03               	skipc
  2724  0377  2840               	goto	l4592
  2725  0378  300C               	movlw	12
  2726                           
  2727                           ;main.c: 1633: {
  2728                           ;main.c: 1634: ucFourthSuffix1TimerP3s = 0;
  2729  0379  01B0               	clrf	main@ucFourthSuffix1TimerP3s^(0+128)
  2730  037A                     L20:	
  2731                           ;main.c: 1635: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2732                           
  2733  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2734  037B                     L14:	
  2735  037B  00D1               	movwf	main@ucADC4_Step
  2736  037C  2840               	goto	l4592
  2737  037D                     l5122:	
  2738                           
  2739                           ;main.c: 1642: {
  2740                           ;main.c: 1647: setPA6(0);
  2741  037D  3000               	movlw	0
  2742  037E  118A  27BC  118A   	fcall	_setPA6
  2743                           
  2744                           ;main.c: 1649: clearPinPortAndTimer();
  2745  0381  118A  26B8  118A   	fcall	_clearPinPortAndTimer
  2746  0384                     l5126:	
  2747                           
  2748                           ;main.c: 1650: ucADC4_Step = ADC4_STEP_INIT;
  2749  0384  01D1               	clrf	main@ucADC4_Step
  2750  0385  2860               	goto	l4610
  2751  0386                     l5132:	
  2752  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0387  0851               	movf	main@ucADC4_Step,w
  2754                           
  2755                           ; Switch size 1, requested type "space"
  2756                           ; Number of cases is 13, Range of values is 0 to 12
  2757                           ; switch strategies available:
  2758                           ; Name         Instructions Cycles
  2759                           ; direct_byte           33     7 (fixed)
  2760                           ; simple_byte           40    21 (average)
  2761                           ; jumptable            260     6 (fixed)
  2762                           ; rangetable            17     6 (fixed)
  2763                           ; spacedrange           32     9 (fixed)
  2764                           ; locatedrange          13     3 (fixed)
  2765                           ;	Chosen strategy is direct_byte
  2766  0388  0084               	movwf	4
  2767  0389  300D               	movlw	13
  2768  038A  0204               	subwf	4,w
  2769  038B  1803               	skipnc
  2770  038C  2840               	goto	l4592
  2771  038D  3006               	movlw	high S5546
  2772  038E  008A               	movwf	10
  2773  038F  1003               	clrc
  2774  0390  0D04               	rlf	4,w
  2775  0391  3EDC               	addlw	low S5546
  2776  0392  0082               	movwf	2
  2777  0393                     l1005:	
  2778                           ;main.c: 1679: {
  2779                           ;main.c: 1680: case HOUR_3_BRANCH_STEP_FIRST:
  2780                           
  2781                           
  2782                           ;main.c: 1681: {
  2783                           ;main.c: 1683: PB7 = 1;
  2784  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0394  1786               	bsf	6,7
  2786                           
  2787                           ;main.c: 1684: PBOD7 = 1;
  2788  0395  1683               	bsf	3,5	;RP0=1, select bank3
  2789  0396  3030               	movlw	48
  2790  0397  1703               	bsf	3,6	;RP1=1, select bank3
  2791  0398  1788               	bsf	8,7
  2792                           
  2793                           ;main.c: 1689: startThreeHoursTimer(10800);
  2794  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2795  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2796  039B  00A0               	movwf	?_startThreeHoursTimer
  2797  039C  302A               	movlw	42
  2798  039D  00A1               	movwf	?_startThreeHoursTimer+1
  2799  039E  118A  270F  118A   	fcall	_startThreeHoursTimer
  2800                           
  2801                           ;main.c: 1692: setPB0(1);
  2802  03A1  3001               	movlw	1
  2803  03A2  118A  27C5  118A   	fcall	_setPB0
  2804                           
  2805                           ;main.c: 1694: setPA0(1);
  2806  03A5  3001               	movlw	1
  2807  03A6  118A  27F6  118A   	fcall	_setPA0
  2808                           
  2809                           ;main.c: 1696: setPA1(1);
  2810  03A9  3001               	movlw	1
  2811  03AA  118A  27EE  118A   	fcall	_setPA1
  2812                           
  2813                           ;main.c: 1698: setPA2(1);
  2814  03AD  3001               	movlw	1
  2815  03AE  118A  27E6  118A   	fcall	_setPA2
  2816                           
  2817                           ;main.c: 1700: setPA3(1);
  2818  03B1  3001               	movlw	1
  2819  03B2  118A  27DE  118A   	fcall	_setPA3
  2820                           
  2821                           ;main.c: 1702: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2822  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2823  03B6  01AD               	clrf	main@enumBranchStep^(0+128)
  2824  03B7  0AAD               	incf	main@enumBranchStep^(0+128),f
  2825                           
  2826                           ;main.c: 1703: break;
  2827  03B8  2840               	goto	l4592
  2828  03B9                     l5138:	
  2829                           
  2830                           ;main.c: 1707: {
  2831                           ;main.c: 1711: static unsigned char ucTimer20s = 0;
  2832                           ;main.c: 1713: if(ucTimer20s < 200)
  2833  03B9  30C8               	movlw	200
  2834  03BA  0232               	subwf	main@ucTimer20s^(0+128),w
  2835  03BB  1803               	skipnc
  2836  03BC  2BBF               	goto	l5142
  2837                           
  2838                           ;main.c: 1714: {
  2839                           ;main.c: 1715: ucTimer20s++;
  2840  03BD  0AB2               	incf	main@ucTimer20s^(0+128),f
  2841                           
  2842                           ;main.c: 1717: }
  2843  03BE  2840               	goto	l4592
  2844  03BF                     l5142:	
  2845  03BF  3002               	movlw	2
  2846                           
  2847                           ;main.c: 1718: else
  2848                           ;main.c: 1719: {
  2849                           ;main.c: 1721: ucTimer20s = 0;
  2850  03C0  01B2               	clrf	main@ucTimer20s^(0+128)
  2851                           
  2852                           ;main.c: 1723: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2853  03C1  00AD               	movwf	main@enumBranchStep^(0+128)
  2854                           
  2855                           ;main.c: 1726: setPA6(0);
  2856  03C2  3000               	movlw	0
  2857  03C3  118A  27BC  118A   	fcall	_setPA6
  2858  03C6  2840               	goto	l4592
  2859  03C7                     l5148:	
  2860                           
  2861                           ;main.c: 1732: {
  2862                           ;main.c: 1736: if(isFinishedThreeHoursTimer())
  2863  03C7  118A  2783  118A   	fcall	_isFinishedThreeHoursTimer
  2864  03CA  3A00               	xorlw	0
  2865  03CB  1903               	skipnz
  2866  03CC  2BD0               	goto	l5154
  2867                           
  2868                           ;main.c: 1737: {
  2869                           ;main.c: 1738: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2870  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2871  03CE  3009               	movlw	9
  2872  03CF  2BF0               	goto	L22
  2873  03D0                     l5154:	
  2874                           ;main.c: 1740: }
  2875                           
  2876                           ;main.c: 1739: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  2877                           
  2878                           
  2879                           ;main.c: 1741: else
  2880                           ;main.c: 1742: {
  2881                           ;main.c: 1743: static unsigned char ucTimerX1P5s = 0;
  2882                           ;main.c: 1745: static unsigned char ucTimerLessX1P5s = 0;
  2883                           ;main.c: 1747: if(getAdOriginalCh1Value() < 115)
  2884  03D0  118A  2599  118A   	fcall	_getAdOriginalCh1Value
  2885  03D3  3000               	movlw	0
  2886  03D4  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2887  03D5  3073               	movlw	115
  2888  03D6  1903               	skipnz
  2889  03D7  0246               	subwf	?_getAdOriginalCh1Value,w
  2890  03D8  1803               	skipnc
  2891  03D9  2BDE               	goto	l5160
  2892                           
  2893                           ;main.c: 1748: {
  2894                           ;main.c: 1749: ucTimerX1P5s = 0;
  2895  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2896  03DB  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2897                           
  2898                           ;main.c: 1750: ucTimerLessX1P5s++;
  2899  03DC  0AB3               	incf	main@ucTimerLessX1P5s^(0+128),f
  2900                           
  2901                           ;main.c: 1751: }
  2902  03DD  2BE1               	goto	l5164
  2903  03DE                     l5160:	
  2904                           
  2905                           ;main.c: 1752: else
  2906                           ;main.c: 1753: {
  2907                           ;main.c: 1754: ucTimerX1P5s++;
  2908  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2909  03DF  0AB6               	incf	main@ucTimerX1P5s^(0+128),f
  2910                           
  2911                           ;main.c: 1755: ucTimerLessX1P5s = 0;
  2912  03E0  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2913  03E1                     l5164:	
  2914                           
  2915                           ;main.c: 1756: }
  2916                           ;main.c: 1758: if(ucTimerX1P5s >= 5)
  2917  03E1  3005               	movlw	5
  2918  03E2  0236               	subwf	main@ucTimerX1P5s^(0+128),w
  2919  03E3  1C03               	skipc
  2920  03E4  2BF4               	goto	l5178
  2921                           
  2922                           ;main.c: 1759: {
  2923                           ;main.c: 1760: ucTimerX1P5s = 0;
  2924  03E5  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2925                           
  2926                           ;main.c: 1764: PBOD7 = 0;
  2927  03E6  1703               	bsf	3,6	;RP1=1, select bank3
  2928  03E7  1388               	bcf	8,7
  2929                           
  2930                           ;main.c: 1765: PB7 = 0;
  2931  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2932  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2933  03EA  1386               	bcf	6,7
  2934                           
  2935                           ;main.c: 1770: clearThreeHoursTimer();
  2936  03EB  118A  26D0  118A   	fcall	_clearThreeHoursTimer
  2937                           
  2938                           ;main.c: 1772: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2939  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2940  03EF  3002               	movlw	2
  2941  03F0                     L22:	
  2942  03F0  01AD               	clrf	main@enumBranchStep^(0+128)
  2943                           
  2944                           ;main.c: 1774: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2945  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2946  03F2                     L15:	
  2947  03F2  00D0               	movwf	main@enumMainLoopStep
  2948                           
  2949                           ;main.c: 1775: }
  2950  03F3  2840               	goto	l4592
  2951  03F4                     l5178:	
  2952                           
  2953                           ;main.c: 1776: else if(ucTimerLessX1P5s >= 5)
  2954  03F4  3005               	movlw	5
  2955  03F5  0233               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2956  03F6  1C03               	skipc
  2957  03F7  2840               	goto	l4592
  2958                           
  2959                           ;main.c: 1777: {
  2960                           ;main.c: 1778: static unsigned char ucTimerX2P5s = 0;
  2961                           ;main.c: 1780: static unsigned char ucTimerLessX2P5s = 0;
  2962                           ;main.c: 1782: if(getAdOriginalCh14Value() >= 1950)
  2963  03F8  118A  25A3  118A   	fcall	_getAdOriginalCh14Value
  2964  03FB  3007               	movlw	7
  2965  03FC  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2966  03FD  309E               	movlw	158
  2967  03FE  1903               	skipnz
  2968  03FF  0246               	subwf	?_getAdOriginalCh14Value,w
  2969  0400  1C03               	skipc
  2970  0401  2C06               	goto	l5186
  2971                           
  2972                           ;main.c: 1783: {
  2973                           ;main.c: 1784: ucTimerX2P5s++;
  2974  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2975  0403  0AB7               	incf	main@ucTimerX2P5s^(0+128),f
  2976                           
  2977                           ;main.c: 1785: ucTimerLessX2P5s = 0;
  2978  0404  01B4               	clrf	main@ucTimerLessX2P5s^(0+128)
  2979                           
  2980                           ;main.c: 1786: }
  2981  0405  2C09               	goto	l5190
  2982  0406                     l5186:	
  2983                           
  2984                           ;main.c: 1787: else
  2985                           ;main.c: 1788: {
  2986                           ;main.c: 1789: ucTimerX2P5s = 0;
  2987  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2988  0407  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2989                           
  2990                           ;main.c: 1790: ucTimerLessX2P5s++;
  2991  0408  0AB4               	incf	main@ucTimerLessX2P5s^(0+128),f
  2992  0409                     l5190:	
  2993                           
  2994                           ;main.c: 1791: }
  2995                           ;main.c: 1793: if(ucTimerX2P5s >= 5)
  2996  0409  3005               	movlw	5
  2997  040A  0237               	subwf	main@ucTimerX2P5s^(0+128),w
  2998  040B  1C03               	skipc
  2999  040C  2C0F               	goto	l5194
  3000                           
  3001                           ;main.c: 1794: {
  3002                           ;main.c: 1795: ucTimerX2P5s = 0;
  3003  040D  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  3004                           
  3005                           ;main.c: 1796: }
  3006  040E  2840               	goto	l4592
  3007  040F                     l5194:	
  3008                           
  3009                           ;main.c: 1797: else if(ucTimerLessX2P5s >= 5)
  3010  040F  3005               	movlw	5
  3011  0410  0234               	subwf	main@ucTimerLessX2P5s^(0+128),w
  3012  0411  1C03               	skipc
  3013  0412  2840               	goto	l4592
  3014                           
  3015                           ;main.c: 1798: {
  3016                           ;main.c: 1799: clearPinPortAndTimer();
  3017  0413  118A  26B8  118A   	fcall	_clearPinPortAndTimer
  3018                           
  3019                           ;main.c: 1800: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  3020  0416  01D0               	clrf	main@enumMainLoopStep
  3021  0417  0AD0               	incf	main@enumMainLoopStep,f
  3022                           
  3023                           ;main.c: 1801: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  3024  0418  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0419  01AD               	clrf	main@enumBranchStep^(0+128)
  3026                           
  3027                           ;main.c: 1802: }
  3028  041A  2840               	goto	l4592
  3029  041B                     l5204:	
  3030  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3031  041C  082D               	movf	main@enumBranchStep^(0+128),w
  3032                           
  3033                           ; Switch size 1, requested type "space"
  3034                           ; Number of cases is 3, Range of values is 0 to 2
  3035                           ; switch strategies available:
  3036                           ; Name         Instructions Cycles
  3037                           ; simple_byte           10     6 (average)
  3038                           ; direct_byte           13     7 (fixed)
  3039                           ; jumptable            260     6 (fixed)
  3040                           ; rangetable             7     6 (fixed)
  3041                           ; spacedrange           12     9 (fixed)
  3042                           ; locatedrange           3     3 (fixed)
  3043                           ;	Chosen strategy is simple_byte
  3044  041D  3A00               	xorlw	0	; case 0
  3045  041E  1903               	skipnz
  3046  041F  2B93               	goto	l1005
  3047  0420  3A01               	xorlw	1	; case 1
  3048  0421  1903               	skipnz
  3049  0422  2BB9               	goto	l5138
  3050  0423  3A03               	xorlw	3	; case 2
  3051  0424  1903               	skipnz
  3052  0425  2BC7               	goto	l5148
  3053  0426  2862               	goto	l752
  3054  0427                     l5206:	
  3055                           
  3056                           ;main.c: 1843: {
  3057                           ;main.c: 1848: setPB0(0);
  3058  0427  3000               	movlw	0
  3059  0428  118A  27C5  118A   	fcall	_setPB0
  3060                           
  3061                           ;main.c: 1850: setPB1(0);
  3062  042B  3000               	movlw	0
  3063  042C  158A  27F8  118A   	fcall	_setPB1
  3064                           
  3065                           ;main.c: 1852: setPA0(0);
  3066  042F  3000               	movlw	0
  3067  0430  118A  27F6  118A   	fcall	_setPA0
  3068                           
  3069                           ;main.c: 1854: setPA1(0);
  3070  0433  3000               	movlw	0
  3071  0434  118A  27EE  118A   	fcall	_setPA1
  3072                           
  3073                           ;main.c: 1856: setPA2(0);
  3074  0437  3000               	movlw	0
  3075  0438  118A  27E6  118A   	fcall	_setPA2
  3076                           
  3077                           ;main.c: 1858: setPA3(0);
  3078  043B  3000               	movlw	0
  3079  043C  118A  27DE  118A   	fcall	_setPA3
  3080                           
  3081                           ;main.c: 1861: PBOD6 = 0;
  3082  043F  1683               	bsf	3,5	;RP0=1, select bank3
  3083  0440  1703               	bsf	3,6	;RP1=1, select bank3
  3084  0441  1308               	bcf	8,6
  3085                           
  3086                           ;main.c: 1862: PB6 = 1;
  3087  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0443  3000               	movlw	0
  3089  0444  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0445  1706               	bsf	6,6
  3091                           
  3092                           ;main.c: 1868: setPA6(0);
  3093  0446  118A  27BC  118A   	fcall	_setPA6
  3094                           
  3095                           ;main.c: 1870: enumInteralStep = INTERNAL_SECOND_STEP;
  3096  0449  1683               	bsf	3,5	;RP0=1, select bank1
  3097  044A  01AE               	clrf	main@enumInteralStep^(0+128)
  3098  044B  0AAE               	incf	main@enumInteralStep^(0+128),f
  3099                           
  3100                           ;main.c: 1871: break;
  3101  044C  2840               	goto	l4592
  3102  044D                     l5214:	
  3103                           
  3104                           ;main.c: 1875: {
  3105                           ;main.c: 1879: static unsigned char ucTimer1s = 0;
  3106                           ;main.c: 1881: if(getAdOriginalCh14Value() <= 1000)
  3107  044D  118A  25A3  118A   	fcall	_getAdOriginalCh14Value
  3108  0450  3003               	movlw	3
  3109  0451  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3110  0452  30E9               	movlw	233
  3111  0453  1903               	skipnz
  3112  0454  0246               	subwf	?_getAdOriginalCh14Value,w
  3113  0455  1803               	skipnc
  3114  0456  2C5A               	goto	l5218
  3115                           
  3116                           ;main.c: 1882: {
  3117                           ;main.c: 1883: ucTimer1s++;
  3118  0457  1683               	bsf	3,5	;RP0=1, select bank1
  3119  0458  0AB1               	incf	main@ucTimer1s^(0+128),f
  3120                           
  3121                           ;main.c: 1884: }
  3122  0459  2C5C               	goto	l5220
  3123  045A                     l5218:	
  3124                           
  3125                           ;main.c: 1885: else
  3126                           ;main.c: 1886: ucTimer1s = 0;
  3127  045A  1683               	bsf	3,5	;RP0=1, select bank1
  3128  045B  01B1               	clrf	main@ucTimer1s^(0+128)
  3129  045C                     l5220:	
  3130                           
  3131                           ;main.c: 1888: if(ucTimer1s >= 10)
  3132  045C  300A               	movlw	10
  3133  045D  0231               	subwf	main@ucTimer1s^(0+128),w
  3134  045E  1C03               	skipc
  3135  045F  2840               	goto	l4592
  3136                           
  3137                           ;main.c: 1889: {
  3138                           ;main.c: 1890: enumInteralStep = INTERNAL_THIRD_STEP;
  3139  0460  3002               	movlw	2
  3140  0461  00AE               	movwf	main@enumInteralStep^(0+128)
  3141                           
  3142                           ;main.c: 1891: ucTimer1s = 0;
  3143  0462  01B1               	clrf	main@ucTimer1s^(0+128)
  3144  0463  2840               	goto	l4592
  3145  0464                     l5226:	
  3146                           
  3147                           ;main.c: 1897: {
  3148                           ;main.c: 1901: static unsigned char ucTimerP3s = 0;
  3149                           ;main.c: 1903: if(getAdOriginalCh14Value() >= 1950)
  3150  0464  118A  25A3  118A   	fcall	_getAdOriginalCh14Value
  3151  0467  3007               	movlw	7
  3152  0468  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3153  0469  309E               	movlw	158
  3154  046A  1903               	skipnz
  3155  046B  0246               	subwf	?_getAdOriginalCh14Value,w
  3156  046C  1C03               	skipc
  3157  046D  2C71               	goto	l5230
  3158                           
  3159                           ;main.c: 1904: {
  3160                           ;main.c: 1905: ucTimerP3s++;
  3161  046E  1683               	bsf	3,5	;RP0=1, select bank1
  3162  046F  0AB5               	incf	main@ucTimerP3s^(0+128),f
  3163                           
  3164                           ;main.c: 1906: }
  3165  0470  2C73               	goto	l5232
  3166  0471                     l5230:	
  3167                           
  3168                           ;main.c: 1907: else
  3169                           ;main.c: 1908: ucTimerP3s = 0;
  3170  0471  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0472  01B5               	clrf	main@ucTimerP3s^(0+128)
  3172  0473                     l5232:	
  3173                           
  3174                           ;main.c: 1910: if(ucTimerP3s >= 3)
  3175  0473  3003               	movlw	3
  3176  0474  0235               	subwf	main@ucTimerP3s^(0+128),w
  3177  0475  1C03               	skipc
  3178  0476  2840               	goto	l4592
  3179                           
  3180                           ;main.c: 1911: {
  3181                           ;main.c: 1912: enumInteralStep = INTERNAL_FIRST_STEP;
  3182  0477  01AE               	clrf	main@enumInteralStep^(0+128)
  3183                           
  3184                           ;main.c: 1913: ucTimerP3s = 0;
  3185  0478  01B5               	clrf	main@ucTimerP3s^(0+128)
  3186                           
  3187                           ;main.c: 1915: clearAllTimer();
  3188  0479  118A  26C5  118A   	fcall	_clearAllTimer
  3189                           
  3190                           ;main.c: 1917: DACR0=0x0F;
  3191  047C  300F               	movlw	15
  3192  047D  1683               	bsf	3,5	;RP0=1, select bank1
  3193  047E  0088               	movwf	8	;volatile
  3194                           
  3195                           ;main.c: 1921: initPin();
  3196  047F  118A  2737  118A   	fcall	_initPin
  3197                           
  3198                           ;main.c: 1924: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3199  0482  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0483  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0484  01D0               	clrf	main@enumMainLoopStep
  3202  0485                     l1055:	
  3203  0485  2C85               	goto	l1055
  3204  0486                     l5246:	
  3205  0486  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0487  082E               	movf	main@enumInteralStep^(0+128),w
  3207                           
  3208                           ; Switch size 1, requested type "space"
  3209                           ; Number of cases is 3, Range of values is 0 to 2
  3210                           ; switch strategies available:
  3211                           ; Name         Instructions Cycles
  3212                           ; simple_byte           10     6 (average)
  3213                           ; direct_byte           13     7 (fixed)
  3214                           ; jumptable            260     6 (fixed)
  3215                           ; rangetable             7     6 (fixed)
  3216                           ; spacedrange           12     9 (fixed)
  3217                           ; locatedrange           3     3 (fixed)
  3218                           ;	Chosen strategy is simple_byte
  3219  0488  3A00               	xorlw	0	; case 0
  3220  0489  1903               	skipnz
  3221  048A  2C27               	goto	l5206
  3222  048B  3A01               	xorlw	1	; case 1
  3223  048C  1903               	skipnz
  3224  048D  2C4D               	goto	l5214
  3225  048E  3A03               	xorlw	3	; case 2
  3226  048F  1903               	skipnz
  3227  0490  2C64               	goto	l5226
  3228  0491  2862               	goto	l752
  3229  0492                     l5250:	
  3230  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0493  0850               	movf	main@enumMainLoopStep,w
  3232                           
  3233                           ; Switch size 1, requested type "space"
  3234                           ; Number of cases is 8, Range of values is 0 to 9
  3235                           ; switch strategies available:
  3236                           ; Name         Instructions Cycles
  3237                           ; simple_byte           25    13 (average)
  3238                           ; direct_byte           27     7 (fixed)
  3239                           ; jumptable            260     6 (fixed)
  3240                           ; rangetable            14     6 (fixed)
  3241                           ; spacedrange           26     9 (fixed)
  3242                           ; locatedrange          10     3 (fixed)
  3243                           ;	Chosen strategy is simple_byte
  3244  0494  3A00               	xorlw	0	; case 0
  3245  0495  1903               	skipnz
  3246  0496  284E               	goto	l4600
  3247  0497  3A01               	xorlw	1	; case 1
  3248  0498  1903               	skipnz
  3249  0499  2863               	goto	l4612
  3250  049A  3A03               	xorlw	3	; case 2
  3251  049B  1903               	skipnz
  3252  049C  287B               	goto	l4626
  3253  049D  3A01               	xorlw	1	; case 3
  3254  049E  1903               	skipnz
  3255  049F  2888               	goto	l4636
  3256  04A0  3A07               	xorlw	7	; case 4
  3257  04A1  1903               	skipnz
  3258  04A2  28C3               	goto	l4672
  3259  04A3  3A01               	xorlw	1	; case 5
  3260  04A4  1903               	skipnz
  3261  04A5  28CF               	goto	l4678
  3262  04A6  3A0D               	xorlw	13	; case 8
  3263  04A7  1903               	skipnz
  3264  04A8  2C1B               	goto	l5204
  3265  04A9  3A01               	xorlw	1	; case 9
  3266  04AA  1903               	skipnz
  3267  04AB  2C86               	goto	l5246
  3268  04AC  2862               	goto	l752
  3269  04AD  118A  2811         	ljmp	start
  3270  04AF                     __end_of_main:	
  3271                           
  3272                           	psect	swtext1
  3273  075B                     __pswtext1:	
  3274  075B                     S5540:	
  3275  075B  118A  2968         	ljmp	l833
  3276  075D  118A  296B         	ljmp	l4738
  3277  075F  118A  2974         	ljmp	l4748
  3278  0761  118A  297A         	ljmp	l4758
  3279  0763  118A  2980         	ljmp	l4768
  3280  0765  118A  2986         	ljmp	l4778
  3281  0767  118A  2990         	ljmp	l4788
  3282                           
  3283                           	psect	swtext2
  3284  0769                     __pswtext2:	
  3285  0769                     S5542:	
  3286  0769  118A  29A3         	ljmp	l861
  3287  076B  118A  29A6         	ljmp	l4802
  3288  076D  118A  29AF         	ljmp	l4812
  3289  076F  118A  29B5         	ljmp	l4822
  3290  0771  118A  29BE         	ljmp	l4832
  3291  0773  118A  29C7         	ljmp	l4842
  3292  0775  118A  29DC         	ljmp	l4852
  3293                           
  3294                           	psect	swtext3
  3295  0777                     __pswtext3:	
  3296  0777                     S5544:	
  3297  0777  118A  29EE         	ljmp	l4864
  3298  0779  118A  29F8         	ljmp	l4868
  3299  077B  118A  2A04         	ljmp	l4878
  3300  077D  118A  2A0D         	ljmp	l4888
  3301  077F  118A  2A16         	ljmp	l4898
  3302  0781  118A  2A27         	ljmp	l4908
  3303                           
  3304                           	psect	swtext4
  3305  06DC                     __pswtext4:	
  3306  06DC                     S5546:	
  3307  06DC  118A  28DE         	ljmp	l794
  3308  06DE  118A  28E1         	ljmp	l4686
  3309  06E0  118A  2AB8         	ljmp	l5004
  3310  06E2  118A  2AC9         	ljmp	l5006
  3311  06E4  118A  2AEC         	ljmp	l5030
  3312  06E6  118A  2AF4         	ljmp	l5036
  3313  06E8  118A  2B26         	ljmp	l5066
  3314  06EA  118A  2B33         	ljmp	l5074
  3315  06EC  118A  2B3B         	ljmp	l981
  3316  06EE  118A  2B43         	ljmp	l5084
  3317  06F0  118A  2B4A         	ljmp	l5092
  3318  06F2  118A  2B72         	ljmp	l5114
  3319  06F4  118A  2B7D         	ljmp	l5122
  3320                           
  3321                           	psect	text830
  3322  06B8                     __ptext830:	
  3323 ;; =============== function _main ends ============
  3324                           
  3325                           
  3326 ;; *************** function _clearPinPortAndTimer *****************
  3327 ;; Defined at:
  3328 ;;		line 104 in file "D:\develop\190625\AK7030-OTP\main.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;		None               void
  3335 ;; Registers used:
  3336 ;;		status,2, status,0, pclath, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 40/0
  3339 ;;		On exit  : 60/0
  3340 ;;		Unchanged: FFF9F/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    4
  3349 ;; This function calls:
  3350 ;;		_clearAllTimer
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355  06B8                     _clearPinPortAndTimer:	
  3356                           
  3357                           ;main.c: 106: PB0 = 0;
  3358                           
  3359                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3360  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3361  06B9  1006               	bcf	6,0
  3362                           
  3363                           ;main.c: 107: PA0 = 0;
  3364  06BA  1005               	bcf	5,0
  3365                           
  3366                           ;main.c: 108: PA1 = 0;
  3367  06BB  1085               	bcf	5,1
  3368                           
  3369                           ;main.c: 109: PA2 = 0;
  3370  06BC  1105               	bcf	5,2
  3371                           
  3372                           ;main.c: 110: PA3 = 0;
  3373  06BD  1185               	bcf	5,3
  3374                           
  3375                           ;main.c: 113: PBOD7 = 0;
  3376  06BE  1683               	bsf	3,5	;RP0=1, select bank3
  3377  06BF  1703               	bsf	3,6	;RP1=1, select bank3
  3378  06C0  1388               	bcf	8,7
  3379                           
  3380                           ;main.c: 114: PB7 = 0;
  3381  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3382  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3383  06C3  1386               	bcf	6,7
  3384                           
  3385                           ;main.c: 115: clearAllTimer();
  3386  06C4  2EC5               	ljmp	l4536
  3387  06C5                     __end_of_clearPinPortAndTimer:	
  3388  06C5                     __ptext835:	
  3389 ;; =============== function _process_AD_Converter_Value ends ============
  3390                           
  3391                           
  3392 ;; *************** function _clearAllTimer *****************
  3393 ;; Defined at:
  3394 ;;		line 95 in file "D:\develop\190625\AK7030-OTP\main.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;		None               void
  3401 ;; Registers used:
  3402 ;;		status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 40/20
  3405 ;;		On exit  : 60/0
  3406 ;;		Unchanged: FFF9F/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0
  3411 ;;      Totals:         0       0       0       0       0
  3412 ;;Total ram usage:        0 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    3
  3415 ;; This function calls:
  3416 ;;		_clearTwelveHoursTimer
  3417 ;;		_clearThreeHoursTimer
  3418 ;;		_clearTwentySecondsTimer
  3419 ;; This function is called by:
  3420 ;;		_clearPinPortAndTimer
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424  06C5                     _clearAllTimer:	
  3425  06C5                     l4536:	
  3426                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3427                           
  3428                           
  3429                           ;main.c: 96: clearTwelveHoursTimer();
  3430  06C5  26CA  118A         	fcall	_clearTwelveHoursTimer
  3431                           
  3432                           ;main.c: 97: clearThreeHoursTimer();
  3433  06C7  26D0  118A         	fcall	_clearThreeHoursTimer
  3434                           
  3435                           ;main.c: 98: clearTwentySecondsTimer();
  3436  06C9  2ED6               	ljmp	l4216
  3437  06CA                     __end_of_clearAllTimer:	
  3438  06CA                     __ptext866:	
  3439 ;; =============== function _clearThreeHoursTimer ends ============
  3440                           
  3441                           
  3442 ;; *************** function _clearTwelveHoursTimer *****************
  3443 ;; Defined at:
  3444 ;;		line 370 in file "D:\develop\190625\AK7030-OTP\common.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;		None               void
  3451 ;; Registers used:
  3452 ;;		status,2
  3453 ;; Tracked objects:
  3454 ;;		On entry : 40/20
  3455 ;;		On exit  : 60/0
  3456 ;;		Unchanged: FFF9F/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3458 ;;      Params:         0       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0
  3461 ;;      Totals:         0       0       0       0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    2
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_clearAllTimer
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471  06CA                     _clearTwelveHoursTimer:	
  3472                           
  3473                           ;common.c: 371: uiBigTimer = 0;
  3474                           
  3475                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3476  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  3477  06CB  01A0               	clrf	_uiBigTimer^(0+128)
  3478  06CC  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  3479                           
  3480                           ;common.c: 372: bBigTimerStartFlag = 0;
  3481  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3482  06CE  01CA               	clrf	_bBigTimerStartFlag
  3483  06CF  0008               	return
  3484  06D0                     __end_of_clearTwelveHoursTimer:	
  3485  06D0                     __ptext865:	
  3486 ;; =============== function _clearTwentySecondsTimer ends ============
  3487                           
  3488                           
  3489 ;; *************** function _clearThreeHoursTimer *****************
  3490 ;; Defined at:
  3491 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;		None               void
  3498 ;; Registers used:
  3499 ;;		status,2
  3500 ;; Tracked objects:
  3501 ;;		On entry : 60/0
  3502 ;;		On exit  : 60/0
  3503 ;;		Unchanged: FFF9F/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    2
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_clearAllTimer
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519  06D0                     _clearThreeHoursTimer:	
  3520                           
  3521                           ;common.c: 378: uiSmallTimer = 0;
  3522                           
  3523                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3524  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3525  06D1  01A2               	clrf	_uiSmallTimer^(0+128)
  3526  06D2  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  3527                           
  3528                           ;common.c: 379: bSmallTimerStartFlag = 0;
  3529  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3530  06D4  01CB               	clrf	_bSmallTimerStartFlag
  3531  06D5  0008               	return
  3532  06D6                     __end_of_clearThreeHoursTimer:	
  3533  06D6                     __ptext864:	
  3534 ;; =============== function _initPin ends ============
  3535                           
  3536                           
  3537 ;; *************** function _clearTwentySecondsTimer *****************
  3538 ;; Defined at:
  3539 ;;		line 383 in file "D:\develop\190625\AK7030-OTP\common.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;		None               void
  3546 ;; Registers used:
  3547 ;;		status,2
  3548 ;; Tracked objects:
  3549 ;;		On entry : 60/0
  3550 ;;		On exit  : 60/0
  3551 ;;		Unchanged: FFF9F/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3553 ;;      Params:         0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    2
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_clearAllTimer
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567  06D6                     _clearTwentySecondsTimer:	
  3568  06D6                     l4216:	
  3569                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3570                           
  3571                           
  3572                           ;common.c: 384: uiTwentySecondsTimer = 0;
  3573  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3574  06D7  01A4               	clrf	_uiTwentySecondsTimer^(0+128)
  3575  06D8  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3576                           
  3577                           ;common.c: 385: bTwentySecStartFlag = 0;
  3578  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3579  06DA  01CC               	clrf	_bTwentySecStartFlag
  3580  06DB  0008               	return
  3581  06DC                     __end_of_clearTwentySecondsTimer:	
  3582                           
  3583                           	psect	text831
  3584  058F                     __ptext831:	
  3585 ;; =============== function _clearPinPortAndTimer ends ============
  3586                           
  3587                           
  3588 ;; *************** function _getAdOriginaCh4Value *****************
  3589 ;; Defined at:
  3590 ;;		line 231 in file "D:\develop\190625\AK7030-OTP\common.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2   38[BANK0 ] unsigned int 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 40/0
  3601 ;;		On exit  : 160/0
  3602 ;;		Unchanged: FFE00/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       2       0       0       0
  3605 ;;      Locals:         0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0
  3607 ;;      Totals:         0       2       0       0       0
  3608 ;;Total ram usage:        2 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    3
  3611 ;; This function calls:
  3612 ;;		_Filter
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617  058F                     _getAdOriginaCh4Value:	
  3618                           
  3619                           ;common.c: 233: return Filter(uiSampleChannelFourth);
  3620                           
  3621                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3622  058F  30D0               	movlw	_uiSampleChannelFourth& (0+255)
  3623  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0591  00A0               	movwf	?_Filter
  3625  0592  01A1               	clrf	?_Filter+1
  3626  0593  25AE               	fcall	_Filter
  3627  0594  0821               	movf	?_Filter+1,w
  3628  0595  00C7               	movwf	?_getAdOriginaCh4Value+1
  3629  0596  0820               	movf	?_Filter,w
  3630  0597  00C6               	movwf	?_getAdOriginaCh4Value
  3631  0598  0008               	return
  3632  0599                     __end_of_getAdOriginaCh4Value:	
  3633  0599                     __ptext832:	
  3634 ;; =============== function _getAdOriginaCh4Value ends ============
  3635                           
  3636                           
  3637 ;; *************** function _getAdOriginalCh1Value *****************
  3638 ;; Defined at:
  3639 ;;		line 219 in file "D:\develop\190625\AK7030-OTP\common.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  2   38[BANK0 ] unsigned int 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 40/0
  3650 ;;		On exit  : 160/0
  3651 ;;		Unchanged: FFE00/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       2       0       0       0
  3654 ;;      Locals:         0       0       0       0       0
  3655 ;;      Temps:          0       0       0       0       0
  3656 ;;      Totals:         0       2       0       0       0
  3657 ;;Total ram usage:        2 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    3
  3660 ;; This function calls:
  3661 ;;		_Filter
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666  0599                     _getAdOriginalCh1Value:	
  3667                           
  3668                           ;common.c: 222: return Filter(uiSampleChannelFirst);
  3669                           
  3670                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3671  0599  30B8               	movlw	_uiSampleChannelFirst& (0+255)
  3672  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3673  059B  00A0               	movwf	?_Filter
  3674  059C  01A1               	clrf	?_Filter+1
  3675  059D  25AE               	fcall	_Filter
  3676  059E  0821               	movf	?_Filter+1,w
  3677  059F  00C7               	movwf	?_getAdOriginalCh1Value+1
  3678  05A0  0820               	movf	?_Filter,w
  3679  05A1  00C6               	movwf	?_getAdOriginalCh1Value
  3680  05A2  0008               	return
  3681  05A3                     __end_of_getAdOriginalCh1Value:	
  3682  05A3                     __ptext833:	
  3683 ;; =============== function _getAdOriginalCh1Value ends ============
  3684                           
  3685                           
  3686 ;; *************** function _getAdOriginalCh14Value *****************
  3687 ;; Defined at:
  3688 ;;		line 242 in file "D:\develop\190625\AK7030-OTP\common.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2   38[BANK0 ] unsigned int 
  3695 ;; Registers used:
  3696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 40/0
  3699 ;;		On exit  : 160/0
  3700 ;;		Unchanged: FFE00/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3702 ;;      Params:         0       2       0       0       0
  3703 ;;      Locals:         0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0
  3705 ;;      Totals:         0       2       0       0       0
  3706 ;;Total ram usage:        2 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    3
  3709 ;; This function calls:
  3710 ;;		_Filter
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715  05A3                     _getAdOriginalCh14Value:	
  3716                           
  3717                           ;common.c: 244: return Filter(uiSampleChannelFourteenth);
  3718                           
  3719                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3720  05A3  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  3721  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3722  05A5  00A0               	movwf	?_Filter
  3723  05A6  3001               	movlw	1
  3724  05A7  00A1               	movwf	?_Filter+1
  3725  05A8  25AE               	fcall	_Filter
  3726  05A9  0821               	movf	?_Filter+1,w
  3727  05AA  00C7               	movwf	?_getAdOriginalCh14Value+1
  3728  05AB  0820               	movf	?_Filter,w
  3729  05AC  00C6               	movwf	?_getAdOriginalCh14Value
  3730  05AD  0008               	return
  3731  05AE                     __end_of_getAdOriginalCh14Value:	
  3732  05AE                     __ptext839:	
  3733 ;; =============== function _getAD_ConvertFlag ends ============
  3734                           
  3735                           
  3736 ;; *************** function _Filter *****************
  3737 ;; Defined at:
  3738 ;;		line 53 in file "D:\develop\190625\AK7030-OTP\common.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3741 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  cir             2   34[BANK0 ] int 
  3744 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3745 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3746 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3747 ;;  i               1   37[BANK0 ] unsigned char 
  3748 ;;  j               1   36[BANK0 ] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2    0[BANK0 ] unsigned int 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3753 ;; Tracked objects:
  3754 ;;		On entry : 60/0
  3755 ;;		On exit  : 160/0
  3756 ;;		Unchanged: FFE00/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       2       0       0       0
  3759 ;;      Locals:         0      32       0       0       0
  3760 ;;      Temps:          0       4       0       0       0
  3761 ;;      Totals:         0      38       0       0       0
  3762 ;;Total ram usage:       38 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    2
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_getAdOriginalCh1Value
  3769 ;;		_getAdOriginaCh4Value
  3770 ;;		_getAdOriginalCh14Value
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773  05AE                     _Filter:	
  3774                           
  3775                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3776  05AE  01C4               	clrf	Filter@j
  3777                           
  3778                           ;common.c: 57: unsigned int filter_temp = 0, filter_sum = 0;
  3779  05AF  01BE               	clrf	Filter@filter_temp
  3780  05B0  01BF               	clrf	Filter@filter_temp+1
  3781  05B1  01C0               	clrf	Filter@filter_sum
  3782  05B2  01C1               	clrf	Filter@filter_sum+1
  3783                           
  3784                           ;common.c: 59: unsigned int filter_buf[12];
  3785                           ;common.c: 61: for(int cir = 0;cir < 12; cir++)
  3786  05B3  01C2               	clrf	Filter@cir
  3787  05B4  01C3               	clrf	Filter@cir+1
  3788  05B5                     l4376:	
  3789                           
  3790                           ;common.c: 62: filter_buf[cir] = *tmpValue++;
  3791  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3792  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3793  05B7  0820               	movf	Filter@tmpValue,w
  3794  05B8  0084               	movwf	4
  3795  05B9  1783               	bsf	3,7
  3796  05BA  1C21               	btfss	Filter@tmpValue+1,0
  3797  05BB  1383               	bcf	3,7
  3798  05BC  0800               	movf	0,w
  3799  05BD  264F  118A         	fcall	PL5	;call to abstracted procedure
  3800  05BF  0D42               	rlf	Filter@cir,w
  3801  05C0  3E26               	addlw	Filter@filter_buf& (0+255)
  3802  05C1  0084               	movwf	4
  3803  05C2  0822               	movf	??_Filter,w
  3804  05C3  1383               	bcf	3,7	;select IRP bank0
  3805  05C4  0080               	movwf	0
  3806  05C5  0A84               	incf	4,f
  3807  05C6  0823               	movf	??_Filter+1,w
  3808  05C7  0080               	movwf	0
  3809  05C8  3002               	movlw	2
  3810  05C9  07A0               	addwf	Filter@tmpValue,f
  3811  05CA  1803               	skipnc
  3812  05CB  0AA1               	incf	Filter@tmpValue+1,f
  3813  05CC  0AC2               	incf	Filter@cir,f
  3814  05CD  1903               	skipnz
  3815  05CE  0AC3               	incf	Filter@cir+1,f
  3816  05CF  0843               	movf	Filter@cir+1,w
  3817  05D0  3A80               	xorlw	128
  3818  05D1  00FF               	movwf	127
  3819  05D2  3080               	movlw	128
  3820  05D3  027F               	subwf	127,w
  3821  05D4  1D03               	skipz
  3822  05D5  2DD8               	goto	u1495
  3823  05D6  300C               	movlw	12
  3824  05D7  0242               	subwf	Filter@cir,w
  3825  05D8                     u1495:	
  3826  05D8  1C03               	skipc
  3827  05D9  2DB5               	goto	l4376
  3828                           
  3829                           ;common.c: 65: for(j = 0; j < 12 - 1; j++)
  3830  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3831  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3832  05DC  01C4               	clrf	Filter@j
  3833  05DD                     l4390:	
  3834                           
  3835                           ;common.c: 66: {
  3836                           ;common.c: 67: for(i = 0; i < 12 - 1 - j; i++)
  3837  05DD  01C5               	clrf	Filter@i
  3838  05DE                     l4398:	
  3839  05DE  01A3               	clrf	??_Filter+1
  3840  05DF  0844               	movf	Filter@j,w
  3841  05E0  3C0B               	sublw	11
  3842  05E1  00A2               	movwf	??_Filter
  3843  05E2  1C03               	skipc
  3844  05E3  03A3               	decf	??_Filter+1,f
  3845  05E4  0823               	movf	??_Filter+1,w
  3846  05E5  3A80               	xorlw	128
  3847  05E6  3C80               	sublw	128
  3848  05E7  1D03               	skipz
  3849  05E8  2DEB               	goto	u1515
  3850  05E9  0822               	movf	??_Filter,w
  3851  05EA  0245               	subwf	Filter@i,w
  3852  05EB                     u1515:	
  3853  05EB  1803               	btfsc	3,0
  3854  05EC  2E20               	goto	l4400
  3855                           
  3856                           ;common.c: 68: {
  3857                           ;common.c: 69: if(filter_buf[i] > filter_buf[i + 1])
  3858  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3859  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  3860  05EF  1003               	clrc
  3861  05F0  2645  118A         	fcall	PL3	;call to abstracted procedure
  3862  05F2  2655  118A         	fcall	PL6	;call to abstracted procedure
  3863  05F4  0800               	movf	0,w
  3864  05F5  00A4               	movwf	??_Filter+2
  3865  05F6  0A84               	incf	4,f
  3866  05F7  0800               	movf	0,w
  3867  05F8  00A5               	movwf	??_Filter+3
  3868  05F9  0823               	movf	??_Filter+1,w
  3869  05FA  0225               	subwf	??_Filter+3,w
  3870  05FB  1D03               	skipz
  3871  05FC  2DFF               	goto	u1505
  3872  05FD  0822               	movf	??_Filter,w
  3873  05FE  0224               	subwf	??_Filter+2,w
  3874  05FF                     u1505:	
  3875  05FF  1803               	skipnc
  3876  0600  2E1E               	goto	l4396
  3877                           
  3878                           ;common.c: 70: {
  3879                           ;common.c: 72: filter_temp = filter_buf[i];
  3880  0601  1003               	clrc
  3881  0602  0D45               	rlf	Filter@i,w
  3882  0603  3E26               	addlw	Filter@filter_buf& (0+255)
  3883  0604  0084               	movwf	4
  3884  0605  0800               	movf	0,w
  3885  0606  00BE               	movwf	Filter@filter_temp
  3886  0607  0A84               	incf	4,f
  3887  0608  0800               	movf	0,w
  3888  0609  00BF               	movwf	Filter@filter_temp+1
  3889                           
  3890                           ;common.c: 74: filter_buf[i] = filter_buf[i + 1];
  3891  060A  2655  118A         	fcall	PL6	;call to abstracted procedure
  3892  060C  0800               	movf	0,w
  3893  060D  264F  118A         	fcall	PL5	;call to abstracted procedure
  3894  060F  0D45               	rlf	Filter@i,w
  3895  0610  3E26               	addlw	Filter@filter_buf& (0+255)
  3896  0611  0084               	movwf	4
  3897  0612  0822               	movf	??_Filter,w
  3898  0613  0080               	movwf	0
  3899  0614  0A84               	incf	4,f
  3900  0615  0823               	movf	??_Filter+1,w
  3901  0616  0080               	movwf	0
  3902                           
  3903                           ;common.c: 76: filter_buf[i + 1] = filter_temp;
  3904  0617  2655  118A         	fcall	PL6	;call to abstracted procedure
  3905  0619  083E               	movf	Filter@filter_temp,w
  3906  061A  0080               	movwf	0
  3907  061B  0A84               	incf	4,f
  3908  061C  083F               	movf	Filter@filter_temp+1,w
  3909  061D  0080               	movwf	0
  3910  061E                     l4396:	
  3911  061E  0AC5               	incf	Filter@i,f
  3912  061F  2DDE               	goto	l4398
  3913  0620                     l4400:	
  3914  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0621  300B               	movlw	11
  3916  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3917  0623  0AC4               	incf	Filter@j,f
  3918  0624  0244               	subwf	Filter@j,w
  3919  0625  1C03               	skipc
  3920  0626  2DDD               	goto	l4390
  3921                           
  3922                           ;common.c: 77: }
  3923                           ;common.c: 78: }
  3924                           ;common.c: 79: }
  3925                           ;common.c: 81: for(i = 2; i < 12 - 2; i++)
  3926  0627  3002               	movlw	2
  3927  0628  00C5               	movwf	Filter@i
  3928                           
  3929                           ;common.c: 82: {
  3930                           ;common.c: 83: filter_sum += filter_buf[i];
  3931  0629  1003               	clrc
  3932  062A                     L24:	
  3933  062A  2645  118A         	fcall	PL3	;call to abstracted procedure
  3934  062C  0822               	movf	??_Filter,w
  3935  062D  07C0               	addwf	Filter@filter_sum,f
  3936  062E  1803               	skipnc
  3937  062F  0AC1               	incf	Filter@filter_sum+1,f
  3938  0630  0823               	movf	??_Filter+1,w
  3939  0631  07C1               	addwf	Filter@filter_sum+1,f
  3940  0632  300A               	movlw	10
  3941  0633  0AC5               	incf	Filter@i,f
  3942  0634  0245               	subwf	Filter@i,w
  3943  0635  1C03               	skipc
  3944  0636  2E2A               	goto	L24
  3945                           
  3946                           ;common.c: 84: }
  3947                           ;common.c: 86: return (filter_sum >> 3);
  3948  0637  0841               	movf	Filter@filter_sum+1,w
  3949  0638  00A1               	movwf	?_Filter+1
  3950  0639  0840               	movf	Filter@filter_sum,w
  3951  063A  00A0               	movwf	?_Filter
  3952  063B  1003               	clrc
  3953  063C  0CA1               	rrf	?_Filter+1,f
  3954  063D  0CA0               	rrf	?_Filter,f
  3955  063E  1003               	clrc
  3956  063F  0CA1               	rrf	?_Filter+1,f
  3957  0640  0CA0               	rrf	?_Filter,f
  3958  0641  1003               	clrc
  3959  0642  0CA1               	rrf	?_Filter+1,f
  3960  0643  0CA0               	rrf	?_Filter,f
  3961  0644  0008               	return
  3962  0645                     __end_of_Filter:	
  3963  0645                     PL3:	
  3964  0645  0D45               	rlf	Filter@i,w
  3965  0646  3E26               	addlw	Filter@filter_buf& (0+255)
  3966  0647  0084               	movwf	4
  3967  0648  1383               	bcf	3,7	;select IRP bank0
  3968  0649  0800               	movf	0,w
  3969  064A  00A2               	movwf	??_Filter
  3970  064B  0A84               	incf	4,f
  3971  064C  0800               	movf	0,w
  3972  064D  00A3               	movwf	??_Filter+1
  3973  064E  0008               	return
  3974  064F                     PL5:	
  3975  064F  00A2               	movwf	??_Filter
  3976  0650  0A84               	incf	4,f
  3977  0651  0800               	movf	0,w
  3978  0652  00A3               	movwf	??_Filter+1
  3979  0653  1003               	clrc
  3980  0654  0008               	return
  3981  0655                     PL6:	
  3982  0655  1003               	clrc
  3983  0656  0D45               	rlf	Filter@i,w
  3984  0657  3E02               	addlw	2
  3985  0658  3E26               	addlw	Filter@filter_buf& (0+255)
  3986  0659  0084               	movwf	4
  3987  065A  0008               	return
  3988                           
  3989                           	psect	text834
  3990  065B                     __ptext834:	
  3991 ;; =============== function _getAdOriginalCh14Value ends ============
  3992                           
  3993                           
  3994 ;; *************** function _process_AD_Converter_Value *****************
  3995 ;; Defined at:
  3996 ;;		line 253 in file "D:\develop\190625\AK7030-OTP\common.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;		None               void
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0, pclath, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 40/0
  4008 ;;		Unchanged: FFF9F/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4010 ;;      Params:         0       0       0       0       0
  4011 ;;      Locals:         0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0
  4013 ;;      Totals:         0       0       0       0       0
  4014 ;;Total ram usage:        0 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    3
  4017 ;; This function calls:
  4018 ;;		_getAD_ConvertFlag
  4019 ;;		_setAD_ConvertFlag
  4020 ;;		_AD_Sample
  4021 ;;		_adc_test_init
  4022 ;;		_adc_start
  4023 ;; This function is called by:
  4024 ;;		_main
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027  065B                     _process_AD_Converter_Value:	
  4028                           
  4029                           ;common.c: 254: if(getAD_ConvertFlag())
  4030                           
  4031                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  4032  065B  2679  118A         	fcall	_getAD_ConvertFlag
  4033  065D  3A00               	xorlw	0
  4034  065E  1903               	skipnz
  4035  065F  0008               	return
  4036                           
  4037                           ;common.c: 255: {
  4038                           ;common.c: 256: setAD_ConvertFlag(0);
  4039  0660  3000               	movlw	0
  4040  0661  267D  118A         	fcall	_setAD_ConvertFlag
  4041                           
  4042                           ;common.c: 257: AD_Sample();
  4043  0663  2682  118A         	fcall	_AD_Sample
  4044                           
  4045                           ;common.c: 258: if(5 == sampleChannelSelect)
  4046  0665  086E               	movf	_sampleChannelSelect,w
  4047  0666  3A05               	xorlw	5
  4048  0667  1D03               	skipz
  4049  0668  2E6D               	goto	l4546
  4050                           
  4051                           ;common.c: 259: adc_test_init(5,3);
  4052  0669  3003               	movlw	3
  4053  066A  00A0               	movwf	?_adc_test_init
  4054  066B  3005               	movlw	5
  4055  066C  2E76               	goto	L23
  4056  066D                     l4546:	
  4057                           
  4058                           ;common.c: 260: else if(1 == sampleChannelSelect)
  4059  066D  0B6E               	decfsz	_sampleChannelSelect,w
  4060  066E  2E73               	goto	l4550
  4061                           
  4062                           ;common.c: 261: adc_test_init(1,3);
  4063  066F  3003               	movlw	3
  4064  0670  00A0               	movwf	?_adc_test_init
  4065  0671  3001               	movlw	1
  4066  0672  2E76               	goto	L23
  4067  0673                     l4550:	
  4068                           
  4069                           ;common.c: 262: else
  4070                           ;common.c: 263: adc_test_init(14,3);
  4071  0673  3003               	movlw	3
  4072  0674  00A0               	movwf	?_adc_test_init
  4073  0675  300E               	movlw	14
  4074  0676                     L23:	
  4075  0676  26A0  118A         	fcall	_adc_test_init
  4076                           
  4077                           ;common.c: 265: adc_start();
  4078  0678  2EB5               	ljmp	l4282
  4079  0679                     __end_of_process_AD_Converter_Value:	
  4080  0679                     __ptext838:	
  4081 ;; =============== function _setAD_ConvertFlag ends ============
  4082                           
  4083                           
  4084 ;; *************** function _getAD_ConvertFlag *****************
  4085 ;; Defined at:
  4086 ;;		line 202 in file "D:\develop\190625\AK7030-OTP\common.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      unsigned char 
  4093 ;; Registers used:
  4094 ;;		wreg
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 60/20
  4098 ;;		Unchanged: FFF9F/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_process_AD_Converter_Value
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113  0679                     _getAD_ConvertFlag:	
  4114                           
  4115                           ;common.c: 203: return adc_convert_flag;
  4116                           
  4117                           ; Regs used in _getAD_ConvertFlag: [wreg]
  4118  0679  1683               	bsf	3,5	;RP0=1, select bank1
  4119  067A  1303               	bcf	3,6	;RP1=0, select bank1
  4120  067B  082B               	movf	_adc_convert_flag^(0+128),w
  4121  067C  0008               	return
  4122  067D                     __end_of_getAD_ConvertFlag:	
  4123  067D                     __ptext837:	
  4124 ;; =============== function _AD_Sample ends ============
  4125                           
  4126                           
  4127 ;; *************** function _setAD_ConvertFlag *****************
  4128 ;; Defined at:
  4129 ;;		line 208 in file "D:\develop\190625\AK7030-OTP\common.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  flag            1    wreg     unsigned char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  flag            1    0[BANK0 ] unsigned char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;		None               void
  4136 ;; Registers used:
  4137 ;;		wreg
  4138 ;; Tracked objects:
  4139 ;;		On entry : 60/20
  4140 ;;		On exit  : 60/20
  4141 ;;		Unchanged: FFF9F/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4143 ;;      Params:         0       0       0       0       0
  4144 ;;      Locals:         0       1       0       0       0
  4145 ;;      Temps:          0       0       0       0       0
  4146 ;;      Totals:         0       1       0       0       0
  4147 ;;Total ram usage:        1 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    2
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_process_AD_Converter_Value
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156  067D                     _setAD_ConvertFlag:	
  4157                           
  4158                           ; Regs used in _setAD_ConvertFlag: [wreg]
  4159                           ;setAD_ConvertFlag@flag stored from wreg
  4160  067D  1283               	bcf	3,5	;RP0=0, select bank0
  4161  067E  00A0               	movwf	setAD_ConvertFlag@flag
  4162                           
  4163                           ;common.c: 209: adc_convert_flag = flag;
  4164  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4165  0680  00AB               	movwf	_adc_convert_flag^(0+128)
  4166  0681  0008               	return
  4167  0682                     __end_of_setAD_ConvertFlag:	
  4168  0682                     __ptext836:	
  4169 ;; =============== function _clearAllTimer ends ============
  4170                           
  4171                           
  4172 ;; *************** function _AD_Sample *****************
  4173 ;; Defined at:
  4174 ;;		line 279 in file "D:\develop\190625\AK7030-OTP\common.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;		None               void
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0
  4183 ;; Tracked objects:
  4184 ;;		On entry : 60/20
  4185 ;;		On exit  : 60/0
  4186 ;;		Unchanged: FFF9F/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0
  4191 ;;      Totals:         0       0       0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    2
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_process_AD_Converter_Value
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201  0682                     _AD_Sample:	
  4202                           
  4203                           ;common.c: 280: if(sampleTimes < 12)
  4204                           
  4205                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  4206  0682  300C               	movlw	12
  4207  0683  1283               	bcf	3,5	;RP0=0, select bank0
  4208  0684  024D               	subwf	_sampleTimes,w
  4209  0685  1803               	skipnc
  4210  0686  0008               	return
  4211  0687  300C               	movlw	12
  4212                           
  4213                           ;common.c: 281: {
  4214                           ;common.c: 302: sampleTimes++;
  4215  0688  0ACD               	incf	_sampleTimes,f
  4216                           
  4217                           ;common.c: 304: if(sampleTimes >= 12)
  4218  0689  024D               	subwf	_sampleTimes,w
  4219  068A  1C03               	skipc
  4220  068B  0008               	return
  4221                           
  4222                           ;common.c: 305: {
  4223                           ;common.c: 306: sampleTimes = 0;
  4224  068C  01CD               	clrf	_sampleTimes
  4225                           
  4226                           ;common.c: 308: if(sampleChannelSelect == 14)
  4227  068D  086E               	movf	_sampleChannelSelect,w
  4228  068E  3A0E               	xorlw	14
  4229  068F  1D03               	skipz
  4230  0690  2E94               	goto	l4486
  4231                           
  4232                           ;common.c: 309: {
  4233                           ;common.c: 312: sampleChannelSelect = 1;
  4234  0691  01EE               	clrf	_sampleChannelSelect
  4235  0692  0AEE               	incf	_sampleChannelSelect,f
  4236                           
  4237                           ;common.c: 313: }
  4238  0693  0008               	return
  4239  0694                     l4486:	
  4240                           
  4241                           ;common.c: 314: else if(sampleChannelSelect == 5)
  4242  0694  086E               	movf	_sampleChannelSelect,w
  4243  0695  3A05               	xorlw	5
  4244  0696  1D03               	skipz
  4245  0697  2E9B               	goto	l4490
  4246  0698                     l4488:	
  4247                           
  4248                           ;common.c: 315: {
  4249                           ;common.c: 317: sampleChannelSelect = 14;
  4250  0698  300E               	movlw	14
  4251  0699  00EE               	movwf	_sampleChannelSelect
  4252                           
  4253                           ;common.c: 318: }
  4254  069A  0008               	return
  4255  069B                     l4490:	
  4256                           
  4257                           ;common.c: 319: else if(sampleChannelSelect == 1)
  4258  069B  0B6E               	decfsz	_sampleChannelSelect,w
  4259  069C  2E98               	goto	l4488
  4260                           
  4261                           ;common.c: 320: {
  4262                           ;common.c: 322: sampleChannelSelect = 5;
  4263  069D  3005               	movlw	5
  4264  069E  00EE               	movwf	_sampleChannelSelect
  4265                           
  4266                           ;common.c: 323: }
  4267  069F  0008               	return
  4268  06A0                     __end_of_AD_Sample:	
  4269  06A0                     __ptext852:	
  4270 ;; =============== function _dac_init ends ============
  4271                           
  4272                           
  4273 ;; *************** function _adc_test_init *****************
  4274 ;; Defined at:
  4275 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  channel         1    wreg     unsigned char 
  4278 ;;  ref             1    0[BANK0 ] unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  channel         1    2[BANK0 ] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;		None               void
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 60/0
  4287 ;;		On exit  : 60/20
  4288 ;;		Unchanged: FFF9F/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4290 ;;      Params:         0       1       0       0       0
  4291 ;;      Locals:         0       1       0       0       0
  4292 ;;      Temps:          0       1       0       0       0
  4293 ;;      Totals:         0       3       0       0       0
  4294 ;;Total ram usage:        3 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    2
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;;		_process_AD_Converter_Value
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304  06A0                     _adc_test_init:	
  4305                           
  4306                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  4307                           ;adc_test_init@channel stored from wreg
  4308  06A0  00A2               	movwf	adc_test_init@channel
  4309                           
  4310                           ;periph.c: 86: ADCON0 = 0x00;
  4311  06A1  019F               	clrf	31	;volatile
  4312                           
  4313                           ;periph.c: 87: ADCON0|=channel<<2;
  4314  06A2  00A1               	movwf	??_adc_test_init
  4315  06A3  1003               	clrc
  4316  06A4  0DA1               	rlf	??_adc_test_init,f
  4317  06A5  1003               	clrc
  4318  06A6  0D21               	rlf	??_adc_test_init,w
  4319  06A7  049F               	iorwf	31,f	;volatile
  4320                           
  4321                           ;periph.c: 88: ADCON1|=ref<<6;
  4322  06A8  0820               	movf	adc_test_init@ref,w
  4323  06A9  00A1               	movwf	??_adc_test_init
  4324  06AA  0CA1               	rrf	??_adc_test_init,f
  4325  06AB  0CA1               	rrf	??_adc_test_init,f
  4326  06AC  0C21               	rrf	??_adc_test_init,w
  4327  06AD  39C0               	andlw	192
  4328  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  4329  06AF  049F               	iorwf	31,f	;volatile
  4330                           
  4331                           ;periph.c: 89: ADON=1;
  4332  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  4333  06B1  141F               	bsf	31,0
  4334                           
  4335                           ;periph.c: 90: ADIE=1;
  4336  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  4337  06B3  150D               	bsf	13,2
  4338  06B4  0008               	return
  4339  06B5                     __end_of_adc_test_init:	
  4340  06B5                     __ptext848:	
  4341 ;; =============== function _isPermitSampleTime ends ============
  4342                           
  4343                           
  4344 ;; *************** function _adc_start *****************
  4345 ;; Defined at:
  4346 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;		None               void
  4353 ;; Registers used:
  4354 ;;		None
  4355 ;; Tracked objects:
  4356 ;;		On entry : 60/20
  4357 ;;		On exit  : 60/0
  4358 ;;		Unchanged: FFF9F/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4360 ;;      Params:         0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0
  4363 ;;      Totals:         0       0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    2
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;;		_process_AD_Converter_Value
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374  06B5                     _adc_start:	
  4375  06B5                     l4282:	
  4376                           ; Regs used in _adc_start: []
  4377                           
  4378                           
  4379                           ;periph.c: 101: GO=1;
  4380  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  4381  06B6  149F               	bsf	31,1
  4382  06B7  0008               	return
  4383  06B8                     __end_of_adc_start:	
  4384                           
  4385                           	psect	text840
  4386  0783                     __ptext840:	
  4387 ;; =============== function _Filter ends ============
  4388                           
  4389                           
  4390 ;; *************** function _isFinishedThreeHoursTimer *****************
  4391 ;; Defined at:
  4392 ;;		line 437 in file "D:\develop\190625\AK7030-OTP\common.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      unsigned char 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 40/20
  4403 ;;		On exit  : 40/0
  4404 ;;		Unchanged: FFF9F/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4406 ;;      Params:         0       0       0       0       0
  4407 ;;      Locals:         0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0
  4409 ;;      Totals:         0       0       0       0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    2
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419  0783                     _isFinishedThreeHoursTimer:	
  4420                           
  4421                           ;common.c: 438: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  4422                           
  4423                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  4424  0783  1683               	bsf	3,5	;RP0=1, select bank1
  4425  0784  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4426  0785  0422               	iorwf	_uiSmallTimer^(0+128),w
  4427  0786  1D03               	skipz
  4428  0787  3400               	retlw	0
  4429  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0789  084B               	movf	_bSmallTimerStartFlag,w
  4431  078A  1903               	btfsc	3,2
  4432  078B  3400               	retlw	0
  4433  078C  3001               	movlw	1
  4434                           
  4435                           ;common.c: 439: {
  4436                           ;common.c: 440: bSmallTimerStartFlag = 0;
  4437  078D  01CB               	clrf	_bSmallTimerStartFlag
  4438                           
  4439                           ;common.c: 441: return 1;
  4440  078E  0008               	return
  4441  078F                     __end_of_isFinishedThreeHoursTimer:	
  4442                           ;common.c: 443: else
  4443                           ;common.c: 444: return 0;
  4444                           
  4445                           
  4446                           	psect	text841
  4447  070F                     __ptext841:	
  4448 ;; =============== function _isFinishedThreeHoursTimer ends ============
  4449                           
  4450                           
  4451 ;; *************** function _startThreeHoursTimer *****************
  4452 ;; Defined at:
  4453 ;;		line 390 in file "D:\develop\190625\AK7030-OTP\common.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;		None               void
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 60/0
  4464 ;;		On exit  : 40/0
  4465 ;;		Unchanged: FFF9F/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4467 ;;      Params:         0       2       0       0       0
  4468 ;;      Locals:         0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0
  4470 ;;      Totals:         0       2       0       0       0
  4471 ;;Total ram usage:        2 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    2
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_main
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480  070F                     _startThreeHoursTimer:	
  4481                           
  4482                           ;common.c: 391: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  4483                           
  4484                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  4485  070F  1683               	bsf	3,5	;RP0=1, select bank1
  4486  0710  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4487  0711  0422               	iorwf	_uiSmallTimer^(0+128),w
  4488  0712  1D03               	skipz
  4489  0713  0008               	return
  4490  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4491  0715  08CB               	movf	_bSmallTimerStartFlag,f
  4492  0716  1D03               	skipz
  4493  0717  0008               	return
  4494                           
  4495                           ;common.c: 392: {
  4496                           ;common.c: 393: uiSmallTimer = uiSetTime;
  4497  0718  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  4498  0719  1683               	bsf	3,5	;RP0=1, select bank1
  4499  071A  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  4500  071B  1283               	bcf	3,5	;RP0=0, select bank0
  4501  071C  0820               	movf	startThreeHoursTimer@uiSetTime,w
  4502  071D  1683               	bsf	3,5	;RP0=1, select bank1
  4503  071E  00A2               	movwf	_uiSmallTimer^(0+128)
  4504                           
  4505                           ;common.c: 394: bSmallTimerStartFlag = 1;
  4506  071F  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0720  01CB               	clrf	_bSmallTimerStartFlag
  4508  0721  0ACB               	incf	_bSmallTimerStartFlag,f
  4509  0722  0008               	return
  4510  0723                     __end_of_startThreeHoursTimer:	
  4511                           
  4512                           	psect	text842
  4513  078F                     __ptext842:	
  4514 ;; =============== function _startThreeHoursTimer ends ============
  4515                           
  4516                           
  4517 ;; *************** function _isFinishedTwentySecondsTimer *****************
  4518 ;; Defined at:
  4519 ;;		line 414 in file "D:\develop\190625\AK7030-OTP\common.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      unsigned char 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0
  4528 ;; Tracked objects:
  4529 ;;		On entry : 60/0
  4530 ;;		On exit  : 40/0
  4531 ;;		Unchanged: FFF9F/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0
  4536 ;;      Totals:         0       0       0       0       0
  4537 ;;Total ram usage:        0 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    2
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546  078F                     _isFinishedTwentySecondsTimer:	
  4547                           
  4548                           ;common.c: 415: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  4549                           
  4550                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4551  078F  1683               	bsf	3,5	;RP0=1, select bank1
  4552  0790  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4553  0791  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4554  0792  1D03               	skipz
  4555  0793  3400               	retlw	0
  4556  0794  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0795  084C               	movf	_bTwentySecStartFlag,w
  4558  0796  1903               	btfsc	3,2
  4559  0797  3400               	retlw	0
  4560  0798  3001               	movlw	1
  4561                           
  4562                           ;common.c: 416: {
  4563                           ;common.c: 417: bTwentySecStartFlag = 0;
  4564  0799  01CC               	clrf	_bTwentySecStartFlag
  4565                           
  4566                           ;common.c: 418: return 1;
  4567  079A  0008               	return
  4568  079B                     __end_of_isFinishedTwentySecondsTimer:	
  4569                           ;common.c: 420: else
  4570                           ;common.c: 421: return 0;
  4571                           
  4572                           
  4573                           	psect	text843
  4574  074A                     __ptext843:	
  4575 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4576                           
  4577                           
  4578 ;; *************** function _startTwentySecondsTimer *****************
  4579 ;; Defined at:
  4580 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;		None               void
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 160/0
  4591 ;;		On exit  : 140/0
  4592 ;;		Unchanged: FFE9F/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4594 ;;      Params:         0       0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0
  4597 ;;      Totals:         0       0       0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    2
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_main
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607  074A                     _startTwentySecondsTimer:	
  4608                           
  4609                           ;common.c: 405: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  4610                           
  4611                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  4612  074A  1683               	bsf	3,5	;RP0=1, select bank1
  4613  074B  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4614  074C  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4615  074D  1D03               	skipz
  4616  074E  0008               	return
  4617  074F  1283               	bcf	3,5	;RP0=0, select bank0
  4618  0750  08CC               	movf	_bTwentySecStartFlag,f
  4619  0751  1D03               	skipz
  4620  0752  0008               	return
  4621                           
  4622                           ;common.c: 406: {
  4623                           ;common.c: 407: uiTwentySecondsTimer = 20;
  4624  0753  3014               	movlw	20
  4625  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4626  0755  00A4               	movwf	_uiTwentySecondsTimer^(0+128)
  4627  0756  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4628                           
  4629                           ;common.c: 408: bTwentySecStartFlag = 1;
  4630  0757  1283               	bcf	3,5	;RP0=0, select bank0
  4631  0758  01CC               	clrf	_bTwentySecStartFlag
  4632  0759  0ACC               	incf	_bTwentySecStartFlag,f
  4633  075A  0008               	return
  4634  075B                     __end_of_startTwentySecondsTimer:	
  4635                           
  4636                           	psect	text844
  4637  079B                     __ptext844:	
  4638 ;; =============== function _startTwentySecondsTimer ends ============
  4639                           
  4640                           
  4641 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4642 ;; Defined at:
  4643 ;;		line 426 in file "D:\develop\190625\AK7030-OTP\common.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      unsigned char 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 60/0
  4654 ;;		On exit  : 40/0
  4655 ;;		Unchanged: FFF9F/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4657 ;;      Params:         0       0       0       0       0
  4658 ;;      Locals:         0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0
  4660 ;;      Totals:         0       0       0       0       0
  4661 ;;Total ram usage:        0 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    2
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_main
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670  079B                     _isFinishedTwelveHoursTimer:	
  4671                           
  4672                           ;common.c: 427: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  4673                           
  4674                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4675  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4676  079C  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4677  079D  0420               	iorwf	_uiBigTimer^(0+128),w
  4678  079E  1D03               	skipz
  4679  079F  3400               	retlw	0
  4680  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  4681  07A1  084A               	movf	_bBigTimerStartFlag,w
  4682  07A2  1903               	btfsc	3,2
  4683  07A3  3400               	retlw	0
  4684  07A4  3001               	movlw	1
  4685                           
  4686                           ;common.c: 428: {
  4687                           ;common.c: 429: bBigTimerStartFlag = 0;
  4688  07A5  01CA               	clrf	_bBigTimerStartFlag
  4689                           
  4690                           ;common.c: 430: return 1;
  4691  07A6  0008               	return
  4692  07A7                     __end_of_isFinishedTwelveHoursTimer:	
  4693                           ;common.c: 432: else
  4694                           ;common.c: 433: return 0;
  4695                           
  4696                           
  4697                           	psect	text845
  4698  0723                     __ptext845:	
  4699 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4700                           
  4701                           
  4702 ;; *************** function _startTwelveHourTimer *****************
  4703 ;; Defined at:
  4704 ;;		line 356 in file "D:\develop\190625\AK7030-OTP\common.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;		None               void
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 60/0
  4715 ;;		On exit  : 40/0
  4716 ;;		Unchanged: FFF9F/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4718 ;;      Params:         0       2       0       0       0
  4719 ;;      Locals:         0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0
  4721 ;;      Totals:         0       2       0       0       0
  4722 ;;Total ram usage:        2 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    2
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731  0723                     _startTwelveHourTimer:	
  4732                           
  4733                           ;common.c: 357: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  4734                           
  4735                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4736  0723  1683               	bsf	3,5	;RP0=1, select bank1
  4737  0724  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4738  0725  0420               	iorwf	_uiBigTimer^(0+128),w
  4739  0726  1D03               	skipz
  4740  0727  0008               	return
  4741  0728  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0729  08CA               	movf	_bBigTimerStartFlag,f
  4743  072A  1D03               	skipz
  4744  072B  0008               	return
  4745                           
  4746                           ;common.c: 358: {
  4747                           ;common.c: 359: uiBigTimer = uiSetTime;
  4748  072C  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4749  072D  1683               	bsf	3,5	;RP0=1, select bank1
  4750  072E  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4751  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0730  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4753  0731  1683               	bsf	3,5	;RP0=1, select bank1
  4754  0732  00A0               	movwf	_uiBigTimer^(0+128)
  4755                           
  4756                           ;common.c: 360: bBigTimerStartFlag = 1;
  4757  0733  1283               	bcf	3,5	;RP0=0, select bank0
  4758  0734  01CA               	clrf	_bBigTimerStartFlag
  4759  0735  0ACA               	incf	_bBigTimerStartFlag,f
  4760  0736  0008               	return
  4761  0737                     __end_of_startTwelveHourTimer:	
  4762                           
  4763                           	psect	text846
  4764  07FE                     __ptext846:	
  4765 ;; =============== function _startTwelveHourTimer ends ============
  4766                           
  4767                           
  4768 ;; *************** function _clrSampeTime *****************
  4769 ;; Defined at:
  4770 ;;		line 458 in file "D:\develop\190625\AK7030-OTP\common.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;		None               void
  4777 ;; Registers used:
  4778 ;;		status,2
  4779 ;; Tracked objects:
  4780 ;;		On entry : 60/20
  4781 ;;		On exit  : 60/20
  4782 ;;		Unchanged: FFF9F/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4784 ;;      Params:         0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0
  4787 ;;      Totals:         0       0       0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    2
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797  07FE                     _clrSampeTime:	
  4798                           
  4799                           ;common.c: 459: timer.timer10msStopWatch = 0;
  4800                           
  4801                           ; Regs used in _clrSampeTime: [status,2]
  4802  07FE  01AC               	clrf	_timer^(0+128)
  4803  07FF  0008               	return
  4804  0800                     __end_of_clrSampeTime:	
  4805                           
  4806                           	psect	text847
  4807  0FEB                     __ptext847:	
  4808 ;; =============== function _clrSampeTime ends ============
  4809                           
  4810                           
  4811 ;; *************** function _isPermitSampleTime *****************
  4812 ;; Defined at:
  4813 ;;		line 448 in file "D:\develop\190625\AK7030-OTP\common.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      unsigned char 
  4820 ;; Registers used:
  4821 ;;		wreg
  4822 ;; Tracked objects:
  4823 ;;		On entry : 40/0
  4824 ;;		On exit  : 60/20
  4825 ;;		Unchanged: FFF9F/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    2
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840  0FEB                     _isPermitSampleTime:	
  4841                           
  4842                           ;common.c: 449: if(timer.timer10msStopWatch >= 10)
  4843                           
  4844                           ; Regs used in _isPermitSampleTime: [wreg]
  4845  0FEB  300A               	movlw	10
  4846  0FEC  1683               	bsf	3,5	;RP0=1, select bank1
  4847  0FED  022C               	subwf	_timer^(0+128),w
  4848  0FEE  1803               	btfsc	3,0
  4849                           
  4850                           ;common.c: 450: {
  4851                           ;common.c: 451: return 1;
  4852  0FEF  3401               	retlw	1
  4853                           
  4854                           ;common.c: 453: else
  4855                           ;common.c: 454: return 0;
  4856  0FF0  3400               	retlw	0
  4857  0FF1                     __end_of_isPermitSampleTime:	
  4858                           
  4859                           	psect	text849
  4860  0FF1                     __ptext849:	
  4861 ;; =============== function _adc_start ends ============
  4862                           
  4863                           
  4864 ;; *************** function _op2_init *****************
  4865 ;; Defined at:
  4866 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;		None               void
  4873 ;; Registers used:
  4874 ;;		wreg
  4875 ;; Tracked objects:
  4876 ;;		On entry : 17F/20
  4877 ;;		On exit  : 17F/20
  4878 ;;		Unchanged: FFE80/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893  0FF1                     _op2_init:	
  4894                           
  4895                           ;periph.c: 52: OP2CON1=0x14;
  4896                           
  4897                           ; Regs used in _op2_init: [wreg]
  4898  0FF1  3014               	movlw	20
  4899  0FF2  009C               	movwf	28	;volatile
  4900                           
  4901                           ;periph.c: 54: OP2CON2=0x10;
  4902  0FF3  3010               	movlw	16
  4903  0FF4  009D               	movwf	29	;volatile
  4904                           
  4905                           ;periph.c: 55: OP2CON0=0x80;
  4906  0FF5  3080               	movlw	128
  4907  0FF6  009B               	movwf	27	;volatile
  4908  0FF7  0008               	return
  4909  0FF8                     __end_of_op2_init:	
  4910                           
  4911                           	psect	text850
  4912  07A7                     __ptext850:	
  4913 ;; =============== function _op2_init ends ============
  4914                           
  4915                           
  4916 ;; *************** function _op1_init *****************
  4917 ;; Defined at:
  4918 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;		None               void
  4925 ;; Registers used:
  4926 ;;		wreg
  4927 ;; Tracked objects:
  4928 ;;		On entry : 17F/20
  4929 ;;		On exit  : 17F/20
  4930 ;;		Unchanged: FFE80/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0
  4935 ;;      Totals:         0       0       0       0       0
  4936 ;;Total ram usage:        0 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    2
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_main
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945  07A7                     _op1_init:	
  4946                           
  4947                           ;periph.c: 33: OP1CON1=0x02;
  4948                           
  4949                           ; Regs used in _op1_init: [wreg]
  4950  07A7  3002               	movlw	2
  4951  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  4952  07A9  009C               	movwf	28	;volatile
  4953                           
  4954                           ;periph.c: 34: OP1CON2=0xA0;
  4955  07AA  30A0               	movlw	160
  4956  07AB  009D               	movwf	29	;volatile
  4957                           
  4958                           ;periph.c: 35: OP1CON0=0x80;
  4959  07AC  3080               	movlw	128
  4960  07AD  009B               	movwf	27	;volatile
  4961                           
  4962                           ;periph.c: 38: TRISB3=1;
  4963  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  4964  07AF  1586               	bsf	6,3
  4965                           
  4966                           ;periph.c: 40: TRISB5=0;
  4967  07B0  1286               	bcf	6,5
  4968  07B1  0008               	return
  4969  07B2                     __end_of_op1_init:	
  4970                           
  4971                           	psect	text851
  4972  0FE6                     __ptext851:	
  4973 ;; =============== function _op1_init ends ============
  4974                           
  4975                           
  4976 ;; *************** function _dac_init *****************
  4977 ;; Defined at:
  4978 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;		None
  4983 ;; Return value:  Size  Location     Type
  4984 ;;		None               void
  4985 ;; Registers used:
  4986 ;;		wreg
  4987 ;; Tracked objects:
  4988 ;;		On entry : 17F/20
  4989 ;;		On exit  : 17F/20
  4990 ;;		Unchanged: FFE80/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4992 ;;      Params:         0       0       0       0       0
  4993 ;;      Locals:         0       0       0       0       0
  4994 ;;      Temps:          0       0       0       0       0
  4995 ;;      Totals:         0       0       0       0       0
  4996 ;;Total ram usage:        0 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    2
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_main
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005  0FE6                     _dac_init:	
  5006                           
  5007                           ;periph.c: 15: DACCON|=1;
  5008                           
  5009                           ; Regs used in _dac_init: [wreg]
  5010  0FE6  1407               	bsf	7,0	;volatile
  5011                           
  5012                           ;periph.c: 17: DACR0=0x0F;
  5013  0FE7  300F               	movlw	15
  5014  0FE8  0088               	movwf	8	;volatile
  5015                           
  5016                           ;periph.c: 18: DACCON|=(1)<<2;
  5017  0FE9  1507               	bsf	7,2	;volatile
  5018  0FEA  0008               	return
  5019  0FEB                     __end_of_dac_init:	
  5020                           
  5021                           	psect	text853
  5022  0FE3                     __ptext853:	
  5023 ;; =============== function _adc_test_init ends ============
  5024                           
  5025                           
  5026 ;; *************** function _timer1_interrupt_config *****************
  5027 ;; Defined at:
  5028 ;;		line 194 in file "D:\develop\190625\AK7030-OTP\common.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;		None               void
  5035 ;; Registers used:
  5036 ;;		None
  5037 ;; Tracked objects:
  5038 ;;		On entry : 17F/20
  5039 ;;		On exit  : 17F/20
  5040 ;;		Unchanged: FFE80/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0
  5045 ;;      Totals:         0       0       0       0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    2
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055  0FE3                     _timer1_interrupt_config:	
  5056                           
  5057                           ;common.c: 195: GIE = 1;
  5058                           
  5059                           ; Regs used in _timer1_interrupt_config: []
  5060  0FE3  178B               	bsf	11,7
  5061                           
  5062                           ;common.c: 196: PEIE = 1;
  5063  0FE4  170B               	bsf	11,6
  5064  0FE5  0008               	return
  5065  0FE6                     __end_of_timer1_interrupt_config:	
  5066                           
  5067                           	psect	text854
  5068  07B2                     __ptext854:	
  5069 ;; =============== function _timer1_interrupt_config ends ============
  5070                           
  5071                           
  5072 ;; *************** function _timer1_config *****************
  5073 ;; Defined at:
  5074 ;;		line 182 in file "D:\develop\190625\AK7030-OTP\common.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;		None               void
  5081 ;; Registers used:
  5082 ;;		wreg
  5083 ;; Tracked objects:
  5084 ;;		On entry : 17F/40
  5085 ;;		On exit  : 17F/20
  5086 ;;		Unchanged: FFE80/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5088 ;;      Params:         0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    2
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101  07B2                     _timer1_config:	
  5102                           
  5103                           ;common.c: 184: TMR1H=0xCF;
  5104                           
  5105                           ; Regs used in _timer1_config: [wreg]
  5106  07B2  30CF               	movlw	207
  5107  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  5108  07B4  008F               	movwf	15	;volatile
  5109                           
  5110                           ;common.c: 185: TMR1L=0x2C;
  5111  07B5  302C               	movlw	44
  5112  07B6  008E               	movwf	14	;volatile
  5113                           
  5114                           ;common.c: 186: T1CON=0xE1;
  5115  07B7  30E1               	movlw	225
  5116  07B8  0090               	movwf	16	;volatile
  5117                           
  5118                           ;common.c: 187: TMR1IE=1;
  5119  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  5120  07BA  140C               	bsf	12,0
  5121  07BB  0008               	return
  5122  07BC                     __end_of_timer1_config:	
  5123                           
  5124                           	psect	text855
  5125  07D6                     __ptext855:	
  5126 ;; =============== function _timer1_config ends ============
  5127                           
  5128                           
  5129 ;; *************** function _clock_config *****************
  5130 ;; Defined at:
  5131 ;;		line 174 in file "D:\develop\190625\AK7030-OTP\common.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;		None               void
  5138 ;; Registers used:
  5139 ;;		wreg, status,2
  5140 ;; Tracked objects:
  5141 ;;		On entry : 17F/20
  5142 ;;		On exit  : 17F/40
  5143 ;;		Unchanged: FFE80/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5145 ;;      Params:         0       0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0
  5147 ;;      Temps:          0       0       0       0       0
  5148 ;;      Totals:         0       0       0       0       0
  5149 ;;Total ram usage:        0 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    2
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_main
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158  07D6                     _clock_config:	
  5159                           
  5160                           ;common.c: 176: CLKPR = 0x80;
  5161                           
  5162                           ; Regs used in _clock_config: [wreg+status,2]
  5163  07D6  3080               	movlw	128
  5164  07D7  1283               	bcf	3,5	;RP0=0, select bank2
  5165  07D8  1703               	bsf	3,6	;RP1=1, select bank2
  5166  07D9  0088               	movwf	8	;volatile
  5167                           
  5168                           ;common.c: 177: CLKPR = 0x00;
  5169  07DA  0188               	clrf	8	;volatile
  5170  07DB                     l1764:	
  5171                           ;common.c: 178: while(CLKPCE);
  5172                           
  5173  07DB  1F88               	btfss	8,7
  5174  07DC  0008               	return
  5175  07DD  2FDB               	goto	l1764
  5176  07DE                     __end_of_clock_config:	
  5177                           
  5178                           	psect	text856
  5179  07BC                     __ptext856:	
  5180 ;; =============== function _clock_config ends ============
  5181                           
  5182                           
  5183 ;; *************** function _setPA6 *****************
  5184 ;; Defined at:
  5185 ;;		line 281 in file "D:\develop\190625\AK7030-OTP\main.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  bValue          1    wreg     unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  bValue          1    0[BANK0 ] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;		None               void
  5192 ;; Registers used:
  5193 ;;		wreg
  5194 ;; Tracked objects:
  5195 ;;		On entry : 40/0
  5196 ;;		On exit  : 60/0
  5197 ;;		Unchanged: FFF9F/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5199 ;;      Params:         0       0       0       0       0
  5200 ;;      Locals:         0       1       0       0       0
  5201 ;;      Temps:          0       0       0       0       0
  5202 ;;      Totals:         0       1       0       0       0
  5203 ;;Total ram usage:        1 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    2
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212  07BC                     _setPA6:	
  5213                           
  5214                           ; Regs used in _setPA6: [wreg]
  5215                           ;setPA6@bValue stored from wreg
  5216  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  5217  07BD  00A0               	movwf	setPA6@bValue
  5218                           
  5219                           ;main.c: 282: if( bValue )
  5220  07BE  0820               	movf	setPA6@bValue,w
  5221  07BF  1903               	btfsc	3,2
  5222  07C0  2FC3               	goto	l723
  5223                           
  5224                           ;main.c: 284: PA6 = 1;
  5225  07C1  1705               	bsf	5,6
  5226  07C2  0008               	return
  5227  07C3                     l723:	
  5228                           
  5229                           ;main.c: 288: else
  5230                           ;main.c: 290: PA6= 0;
  5231  07C3  1305               	bcf	5,6
  5232  07C4  0008               	return
  5233  07C5                     __end_of_setPA6:	
  5234                           
  5235                           	psect	text857
  5236  07DE                     __ptext857:	
  5237 ;; =============== function _setPA6 ends ============
  5238                           
  5239                           
  5240 ;; *************** function _setPA3 *****************
  5241 ;; Defined at:
  5242 ;;		line 235 in file "D:\develop\190625\AK7030-OTP\main.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  bValue          1    wreg     unsigned char 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  bValue          1    0[BANK0 ] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;		None               void
  5249 ;; Registers used:
  5250 ;;		wreg
  5251 ;; Tracked objects:
  5252 ;;		On entry : 60/0
  5253 ;;		On exit  : 60/0
  5254 ;;		Unchanged: FFF9F/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5256 ;;      Params:         0       0       0       0       0
  5257 ;;      Locals:         0       1       0       0       0
  5258 ;;      Temps:          0       0       0       0       0
  5259 ;;      Totals:         0       1       0       0       0
  5260 ;;Total ram usage:        1 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    2
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269  07DE                     _setPA3:	
  5270                           
  5271                           ; Regs used in _setPA3: [wreg]
  5272                           ;setPA3@bValue stored from wreg
  5273  07DE  00A0               	movwf	setPA3@bValue
  5274                           
  5275                           ;main.c: 236: if( bValue )
  5276  07DF  0820               	movf	setPA3@bValue,w
  5277  07E0  1903               	btfsc	3,2
  5278  07E1  2FE4               	goto	l713
  5279                           
  5280                           ;main.c: 238: PA3 = 1;
  5281  07E2  1585               	bsf	5,3
  5282  07E3  0008               	return
  5283  07E4                     l713:	
  5284                           
  5285                           ;main.c: 242: else
  5286                           ;main.c: 244: PA3 = 0;
  5287  07E4  1185               	bcf	5,3
  5288  07E5  0008               	return
  5289  07E6                     __end_of_setPA3:	
  5290                           
  5291                           	psect	text858
  5292  07E6                     __ptext858:	
  5293 ;; =============== function _setPA3 ends ============
  5294                           
  5295                           
  5296 ;; *************** function _setPA2 *****************
  5297 ;; Defined at:
  5298 ;;		line 218 in file "D:\develop\190625\AK7030-OTP\main.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  bValue          1    wreg     unsigned char 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  bValue          1    0[BANK0 ] unsigned char 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;		None               void
  5305 ;; Registers used:
  5306 ;;		wreg
  5307 ;; Tracked objects:
  5308 ;;		On entry : 60/0
  5309 ;;		On exit  : 60/0
  5310 ;;		Unchanged: FFF9F/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5312 ;;      Params:         0       0       0       0       0
  5313 ;;      Locals:         0       1       0       0       0
  5314 ;;      Temps:          0       0       0       0       0
  5315 ;;      Totals:         0       1       0       0       0
  5316 ;;Total ram usage:        1 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    2
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_main
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325  07E6                     _setPA2:	
  5326                           
  5327                           ; Regs used in _setPA2: [wreg]
  5328                           ;setPA2@bValue stored from wreg
  5329  07E6  00A0               	movwf	setPA2@bValue
  5330                           
  5331                           ;main.c: 219: if( bValue )
  5332  07E7  0820               	movf	setPA2@bValue,w
  5333  07E8  1903               	btfsc	3,2
  5334  07E9  2FEC               	goto	l708
  5335                           
  5336                           ;main.c: 221: PA2 = 1;
  5337  07EA  1505               	bsf	5,2
  5338  07EB  0008               	return
  5339  07EC                     l708:	
  5340                           
  5341                           ;main.c: 225: else
  5342                           ;main.c: 227: PA2 = 0;
  5343  07EC  1105               	bcf	5,2
  5344  07ED  0008               	return
  5345  07EE                     __end_of_setPA2:	
  5346                           
  5347                           	psect	text859
  5348  07EE                     __ptext859:	
  5349 ;; =============== function _setPA2 ends ============
  5350                           
  5351                           
  5352 ;; *************** function _setPA1 *****************
  5353 ;; Defined at:
  5354 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\main.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  bValue          1    wreg     unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  bValue          1    0[BANK0 ] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;		None               void
  5361 ;; Registers used:
  5362 ;;		wreg
  5363 ;; Tracked objects:
  5364 ;;		On entry : 60/0
  5365 ;;		On exit  : 60/0
  5366 ;;		Unchanged: FFF9F/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5368 ;;      Params:         0       0       0       0       0
  5369 ;;      Locals:         0       1       0       0       0
  5370 ;;      Temps:          0       0       0       0       0
  5371 ;;      Totals:         0       1       0       0       0
  5372 ;;Total ram usage:        1 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    2
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_main
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381  07EE                     _setPA1:	
  5382                           
  5383                           ; Regs used in _setPA1: [wreg]
  5384                           ;setPA1@bValue stored from wreg
  5385  07EE  00A0               	movwf	setPA1@bValue
  5386                           
  5387                           ;main.c: 201: if( bValue )
  5388  07EF  0820               	movf	setPA1@bValue,w
  5389  07F0  1903               	btfsc	3,2
  5390  07F1  2FF4               	goto	l703
  5391                           
  5392                           ;main.c: 203: PA1 = 1;
  5393  07F2  1485               	bsf	5,1
  5394  07F3  0008               	return
  5395  07F4                     l703:	
  5396                           
  5397                           ;main.c: 207: else
  5398                           ;main.c: 209: PA1 = 0;
  5399  07F4  1085               	bcf	5,1
  5400  07F5  0008               	return
  5401  07F6                     __end_of_setPA1:	
  5402                           
  5403                           	psect	text860
  5404  07F6                     __ptext860:	
  5405 ;; =============== function _setPA1 ends ============
  5406                           
  5407                           
  5408 ;; *************** function _setPA0 *****************
  5409 ;; Defined at:
  5410 ;;		line 183 in file "D:\develop\190625\AK7030-OTP\main.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  bValue          1    wreg     unsigned char 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  bValue          1    0[BANK0 ] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;		None               void
  5417 ;; Registers used:
  5418 ;;		wreg
  5419 ;; Tracked objects:
  5420 ;;		On entry : 60/0
  5421 ;;		On exit  : 60/0
  5422 ;;		Unchanged: FFF9F/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5424 ;;      Params:         0       0       0       0       0
  5425 ;;      Locals:         0       1       0       0       0
  5426 ;;      Temps:          0       0       0       0       0
  5427 ;;      Totals:         0       1       0       0       0
  5428 ;;Total ram usage:        1 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    2
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_main
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437  07F6                     _setPA0:	
  5438                           
  5439                           ; Regs used in _setPA0: [wreg]
  5440                           ;setPA0@bValue stored from wreg
  5441  07F6  00A0               	movwf	setPA0@bValue
  5442                           
  5443                           ;main.c: 184: if( bValue )
  5444  07F7  0820               	movf	setPA0@bValue,w
  5445  07F8  1903               	btfsc	3,2
  5446  07F9  2FFC               	goto	l698
  5447                           
  5448                           ;main.c: 186: PA0 = 1;
  5449  07FA  1405               	bsf	5,0
  5450  07FB  0008               	return
  5451  07FC                     l698:	
  5452                           
  5453                           ;main.c: 190: else
  5454                           ;main.c: 192: PA0 = 0;
  5455  07FC  1005               	bcf	5,0
  5456  07FD  0008               	return
  5457  07FE                     __end_of_setPA0:	
  5458                           
  5459                           	psect	text861
  5460  0FF8                     __ptext861:	
  5461 ;; =============== function _setPA0 ends ============
  5462                           
  5463                           
  5464 ;; *************** function _setPB1 *****************
  5465 ;; Defined at:
  5466 ;;		line 166 in file "D:\develop\190625\AK7030-OTP\main.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  bValue          1    wreg     unsigned char 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  bValue          1    0[BANK0 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;		None               void
  5473 ;; Registers used:
  5474 ;;		wreg
  5475 ;; Tracked objects:
  5476 ;;		On entry : 60/0
  5477 ;;		On exit  : 60/0
  5478 ;;		Unchanged: FFF9F/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5480 ;;      Params:         0       0       0       0       0
  5481 ;;      Locals:         0       1       0       0       0
  5482 ;;      Temps:          0       0       0       0       0
  5483 ;;      Totals:         0       1       0       0       0
  5484 ;;Total ram usage:        1 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:    2
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_main
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493  0FF8                     _setPB1:	
  5494                           
  5495                           ; Regs used in _setPB1: [wreg]
  5496                           ;setPB1@bValue stored from wreg
  5497  0FF8  00A0               	movwf	setPB1@bValue
  5498                           
  5499                           ;main.c: 167: if( bValue )
  5500  0FF9  0820               	movf	setPB1@bValue,w
  5501  0FFA  1903               	btfsc	3,2
  5502  0FFB  2FFE               	goto	l693
  5503                           
  5504                           ;main.c: 169: PB1 = 1;
  5505  0FFC  1486               	bsf	6,1
  5506  0FFD  0008               	return
  5507  0FFE                     l693:	
  5508                           
  5509                           ;main.c: 173: else
  5510                           ;main.c: 175: PB1 = 0;
  5511  0FFE  1086               	bcf	6,1
  5512  0FFF  0008               	return
  5513  1000                     __end_of_setPB1:	
  5514                           
  5515                           	psect	text862
  5516  07C5                     __ptext862:	
  5517 ;; =============== function _setPB1 ends ============
  5518                           
  5519                           
  5520 ;; *************** function _setPB0 *****************
  5521 ;; Defined at:
  5522 ;;		line 149 in file "D:\develop\190625\AK7030-OTP\main.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  bValue          1    wreg     unsigned char 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  bValue          1    0[BANK0 ] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;		None               void
  5529 ;; Registers used:
  5530 ;;		wreg
  5531 ;; Tracked objects:
  5532 ;;		On entry : 40/0
  5533 ;;		On exit  : 60/0
  5534 ;;		Unchanged: FFF9F/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         0       0       0       0       0
  5537 ;;      Locals:         0       1       0       0       0
  5538 ;;      Temps:          0       0       0       0       0
  5539 ;;      Totals:         0       1       0       0       0
  5540 ;;Total ram usage:        1 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    2
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_main
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549  07C5                     _setPB0:	
  5550                           
  5551                           ; Regs used in _setPB0: [wreg]
  5552                           ;setPB0@bValue stored from wreg
  5553  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  5554  07C6  00A0               	movwf	setPB0@bValue
  5555                           
  5556                           ;main.c: 150: if( bValue )
  5557  07C7  0820               	movf	setPB0@bValue,w
  5558  07C8  1903               	btfsc	3,2
  5559  07C9  2FCC               	goto	l688
  5560                           
  5561                           ;main.c: 152: PB0 = 1;
  5562  07CA  1406               	bsf	6,0
  5563  07CB  0008               	return
  5564  07CC                     l688:	
  5565                           
  5566                           ;main.c: 156: else
  5567                           ;main.c: 158: PB0 = 0;
  5568  07CC  1006               	bcf	6,0
  5569  07CD  0008               	return
  5570  07CE                     __end_of_setPB0:	
  5571                           
  5572                           	psect	text863
  5573  0737                     __ptext863:	
  5574 ;; =============== function _setPB0 ends ============
  5575                           
  5576                           
  5577 ;; *************** function _initPin *****************
  5578 ;; Defined at:
  5579 ;;		line 123 in file "D:\develop\190625\AK7030-OTP\main.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		None
  5588 ;; Tracked objects:
  5589 ;;		On entry : 160/20
  5590 ;;		On exit  : 160/60
  5591 ;;		Unchanged: FFE9F/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0
  5596 ;;      Totals:         0       0       0       0       0
  5597 ;;Total ram usage:        0 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    2
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_main
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606  0737                     _initPin:	
  5607                           
  5608                           ;main.c: 125: PB6 = 1;
  5609                           
  5610                           ; Regs used in _initPin: []
  5611  0737  1283               	bcf	3,5	;RP0=0, select bank0
  5612  0738  1706               	bsf	6,6
  5613                           
  5614                           ;main.c: 126: PBOD6 = 1;
  5615  0739  1683               	bsf	3,5	;RP0=1, select bank3
  5616  073A  1703               	bsf	3,6	;RP1=1, select bank3
  5617  073B  1708               	bsf	8,6
  5618                           
  5619                           ;main.c: 130: PA0 = 0;
  5620  073C  1283               	bcf	3,5	;RP0=0, select bank0
  5621  073D  1303               	bcf	3,6	;RP1=0, select bank0
  5622  073E  1005               	bcf	5,0
  5623                           
  5624                           ;main.c: 131: PA1 = 0;
  5625  073F  1085               	bcf	5,1
  5626                           
  5627                           ;main.c: 132: PA2 = 0;
  5628  0740  1105               	bcf	5,2
  5629                           
  5630                           ;main.c: 133: PA3 = 0;
  5631  0741  1185               	bcf	5,3
  5632                           
  5633                           ;main.c: 134: PB0 = 0;
  5634  0742  1006               	bcf	6,0
  5635                           
  5636                           ;main.c: 135: PB1 = 1;
  5637  0743  1486               	bsf	6,1
  5638                           
  5639                           ;main.c: 136: PA6 = 0;
  5640  0744  1305               	bcf	5,6
  5641                           
  5642                           ;main.c: 138: PB7 = 0;
  5643  0745  1386               	bcf	6,7
  5644                           
  5645                           ;main.c: 139: PBOD7 = 0;
  5646  0746  1683               	bsf	3,5	;RP0=1, select bank3
  5647  0747  1703               	bsf	3,6	;RP1=1, select bank3
  5648  0748  1388               	bcf	8,7
  5649  0749  0008               	return
  5650  074A                     __end_of_initPin:	
  5651                           
  5652                           	psect	text867
  5653  04AF                     __ptext867:	
  5654 ;; =============== function _clearTwelveHoursTimer ends ============
  5655                           
  5656                           
  5657 ;; *************** function _ISR *****************
  5658 ;; Defined at:
  5659 ;;		line 463 in file "D:\develop\190625\AK7030-OTP\common.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;		None               void
  5666 ;; Registers used:
  5667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 60/0
  5671 ;;		Unchanged: FFE00/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5673 ;;      Params:         0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0
  5675 ;;      Temps:          4       0       0       0       0
  5676 ;;      Totals:         4       0       0       0       0
  5677 ;;Total ram usage:        4 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    1
  5680 ;; This function calls:
  5681 ;;		i1_setAD_ConvertFlag
  5682 ;;		_adc_get
  5683 ;;		_vPutSampleDataIntoTable
  5684 ;; This function is called by:
  5685 ;;		Interrupt level 1
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688  04AF                     _ISR:	
  5689                           
  5690                           ;common.c: 464: static unsigned char ucTimer1sCnt = 0;
  5691                           ;common.c: 466: if(TMR1IF == 1)
  5692  04AF  1C0C               	btfss	12,0
  5693  04B0  2CD8               	goto	i1l4514
  5694                           
  5695                           ;common.c: 467: {
  5696                           ;common.c: 468: TMR1IF = 0 ;
  5697  04B1  100C               	bcf	12,0
  5698                           
  5699                           ;common.c: 469: timer.timer10msStopWatch++;
  5700  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  5701  04B3  3064               	movlw	100
  5702  04B4  0AAC               	incf	_timer^(0+128),f
  5703                           
  5704                           ;common.c: 470: ucTimer1sCnt++;
  5705  04B5  0AAA               	incf	ISR@ucTimer1sCnt^(0+128),f
  5706                           
  5707                           ;common.c: 472: if(ucTimer1sCnt >= 100)
  5708  04B6  022A               	subwf	ISR@ucTimer1sCnt^(0+128),w
  5709  04B7  1C03               	skipc
  5710  04B8  2CD8               	goto	i1l4514
  5711                           
  5712                           ;common.c: 473: {
  5713                           ;common.c: 474: ucTimer1sCnt = 0;
  5714  04B9  01AA               	clrf	ISR@ucTimer1sCnt^(0+128)
  5715                           
  5716                           ;common.c: 475: if(uiBigTimer > 0)
  5717  04BA  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5718  04BB  0420               	iorwf	_uiBigTimer^(0+128),w
  5719  04BC  1903               	skipnz
  5720  04BD  2CC4               	goto	i1l1861
  5721                           
  5722                           ;common.c: 476: uiBigTimer--;
  5723  04BE  3001               	movlw	1
  5724  04BF  02A0               	subwf	_uiBigTimer^(0+128),f
  5725  04C0  3000               	movlw	0
  5726  04C1  1C03               	skipc
  5727  04C2  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  5728  04C3  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  5729  04C4                     i1l1861:	
  5730                           
  5731                           ;common.c: 478: if(uiSmallTimer)
  5732  04C4  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5733  04C5  0422               	iorwf	_uiSmallTimer^(0+128),w
  5734  04C6  1903               	skipnz
  5735  04C7  2CCE               	goto	i1l1862
  5736                           
  5737                           ;common.c: 479: uiSmallTimer--;
  5738  04C8  3001               	movlw	1
  5739  04C9  02A2               	subwf	_uiSmallTimer^(0+128),f
  5740  04CA  3000               	movlw	0
  5741  04CB  1C03               	skipc
  5742  04CC  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  5743  04CD  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  5744  04CE                     i1l1862:	
  5745                           
  5746                           ;common.c: 481: if(uiTwentySecondsTimer)
  5747  04CE  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5748  04CF  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5749  04D0  1903               	skipnz
  5750  04D1  2CD8               	goto	i1l4514
  5751                           
  5752                           ;common.c: 482: uiTwentySecondsTimer--;
  5753  04D2  3001               	movlw	1
  5754  04D3  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  5755  04D4  3000               	movlw	0
  5756  04D5  1C03               	skipc
  5757  04D6  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  5758  04D7  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  5759  04D8                     i1l4514:	
  5760                           
  5761                           ;common.c: 483: }
  5762                           ;common.c: 484: }
  5763                           ;common.c: 486: if(ADIF)
  5764  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  5765  04D9  1D0D               	btfss	13,2
  5766  04DA  2D00               	goto	i1l1869
  5767  04DB  3001               	movlw	1
  5768                           
  5769                           ;common.c: 487: {
  5770                           ;common.c: 488: ADIF=0;
  5771  04DC  110D               	bcf	13,2
  5772                           
  5773                           ;common.c: 489: setAD_ConvertFlag(1);
  5774  04DD  257B  118A         	fcall	i1_setAD_ConvertFlag
  5775                           
  5776                           ;common.c: 491: if(sampleChannelSelect == 5)
  5777  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  5778  04E0  086E               	movf	_sampleChannelSelect,w
  5779  04E1  3A05               	xorlw	5
  5780  04E2  1D03               	skipz
  5781  04E3  2CEC               	goto	i1l4524
  5782                           
  5783                           ;common.c: 492: {
  5784                           ;common.c: 495: vPutSampleDataIntoTable(adc_get(),5);
  5785  04E4  250D  118A         	fcall	_adc_get
  5786  04E6  0871               	movf	?_adc_get+1,w
  5787  04E7  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5788  04E8  0870               	movf	?_adc_get,w
  5789  04E9  00F4               	movwf	?_vPutSampleDataIntoTable
  5790  04EA  3005               	movlw	5
  5791  04EB  2CFE               	goto	L25
  5792  04EC                     i1l4524:	
  5793                           ;common.c: 499: }
  5794                           
  5795                           
  5796                           ;common.c: 500: else if(sampleChannelSelect == 1)
  5797  04EC  0B6E               	decfsz	_sampleChannelSelect,w
  5798  04ED  2CF7               	goto	i1l4528
  5799                           
  5800                           ;common.c: 501: {
  5801                           ;common.c: 503: vPutSampleDataIntoTable(adc_get(),1);
  5802  04EE  250D  118A         	fcall	_adc_get
  5803  04F0  0871               	movf	?_adc_get+1,w
  5804  04F1  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5805  04F2  0870               	movf	?_adc_get,w
  5806  04F3  00F4               	movwf	?_vPutSampleDataIntoTable
  5807  04F4  01F6               	clrf	?_vPutSampleDataIntoTable+2
  5808  04F5  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  5809  04F6  2CFF               	goto	L26
  5810  04F7                     i1l4528:	
  5811                           ;common.c: 508: }
  5812                           
  5813                           
  5814                           ;common.c: 509: else
  5815                           ;common.c: 510: {
  5816                           ;common.c: 514: vPutSampleDataIntoTable(adc_get(),14);
  5817  04F7  250D  118A         	fcall	_adc_get
  5818  04F9  0871               	movf	?_adc_get+1,w
  5819  04FA  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5820  04FB  0870               	movf	?_adc_get,w
  5821  04FC  00F4               	movwf	?_vPutSampleDataIntoTable
  5822  04FD  300E               	movlw	14
  5823  04FE                     L25:	
  5824  04FE  00F6               	movwf	?_vPutSampleDataIntoTable+2
  5825  04FF                     L26:	
  5826  04FF  2518               	fcall	_vPutSampleDataIntoTable
  5827  0500                     i1l1869:	
  5828  0500  087C               	movf	??_ISR+3,w
  5829  0501  1283               	bcf	3,5	;RP0=0, select bank0
  5830  0502  1303               	bcf	3,6	;RP1=0, select bank0
  5831  0503  00FF               	movwf	127
  5832  0504  087B               	movf	??_ISR+2,w
  5833  0505  008A               	movwf	10
  5834  0506  087A               	movf	??_ISR+1,w
  5835  0507  0084               	movwf	4
  5836  0508  0E79               	swapf	??_ISR^(0+-128),w
  5837  0509  0083               	movwf	3
  5838  050A  0EFE               	swapf	126,f
  5839  050B  0E7E               	swapf	126,w
  5840  050C  0009               	retfie
  5841  050D                     __end_of_ISR:	
  5842  050D                     __ptext869:	
  5843 ;; =============== function i1_setAD_ConvertFlag ends ============
  5844                           
  5845                           
  5846 ;; *************** function _adc_get *****************
  5847 ;; Defined at:
  5848 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  val             2    2[COMMON] unsigned int 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  2    0[COMMON] unsigned int 
  5855 ;; Registers used:
  5856 ;;		wreg
  5857 ;; Tracked objects:
  5858 ;;		On entry : 60/0
  5859 ;;		On exit  : 60/20
  5860 ;;		Unchanged: FFF9F/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5862 ;;      Params:         2       0       0       0       0
  5863 ;;      Locals:         2       0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0
  5865 ;;      Totals:         4       0       0       0       0
  5866 ;;Total ram usage:        4 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_ISR
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874  050D                     _adc_get:	
  5875                           
  5876                           ;periph.c: 106: unsigned int val;
  5877                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  5878                           
  5879                           ; Regs used in _adc_get: [wreg]
  5880  050D  081E               	movf	30,w	;volatile
  5881  050E  00F3               	movwf	adc_get@val+1
  5882  050F  01F2               	clrf	adc_get@val
  5883  0510  1683               	bsf	3,5	;RP0=1, select bank1
  5884  0511  081E               	movf	30,w	;volatile
  5885  0512  04F2               	iorwf	adc_get@val,f
  5886                           
  5887                           ;periph.c: 108: return val;
  5888  0513  0873               	movf	adc_get@val+1,w
  5889  0514  00F1               	movwf	?_adc_get+1
  5890  0515  0872               	movf	adc_get@val,w
  5891  0516  00F0               	movwf	?_adc_get
  5892  0517  0008               	return
  5893  0518                     __end_of_adc_get:	
  5894  0518                     __ptext870:	
  5895 ;; =============== function _adc_get ends ============
  5896                           
  5897                           
  5898 ;; *************** function _vPutSampleDataIntoTable *****************
  5899 ;; Defined at:
  5900 ;;		line 99 in file "D:\develop\190625\AK7030-OTP\common.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  uiSampleData    2    4[COMMON] unsigned int 
  5903 ;;  channel         1    6[COMMON] unsigned char 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  i               2    7[COMMON] int 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;		None               void
  5908 ;; Registers used:
  5909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5910 ;; Tracked objects:
  5911 ;;		On entry : 60/20
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: FFE00/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5915 ;;      Params:         3       0       0       0       0
  5916 ;;      Locals:         2       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0
  5918 ;;      Totals:         5       0       0       0       0
  5919 ;;Total ram usage:        5 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_ISR
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927  0518                     _vPutSampleDataIntoTable:	
  5928                           
  5929                           ;common.c: 101: static unsigned char ucChannelFirstLength = 0;
  5930                           ;common.c: 103: static unsigned char ucChannelFourthLength = 0;
  5931                           ;common.c: 105: static unsigned char ucChannelFourteenthLength = 0;
  5932                           ;common.c: 107: if(channel == 1)
  5933                           
  5934                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  5935  0518  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  5936  0519  2D2A               	goto	i1l4432
  5937                           
  5938                           ;common.c: 108: {
  5939                           ;common.c: 109: if(ucChannelFirstLength < 12)
  5940  051A  300C               	movlw	12
  5941  051B  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5942  051C  1803               	skipnc
  5943  051D  2D24               	goto	i1l4428
  5944                           
  5945                           ;common.c: 110: {
  5946                           ;common.c: 111: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5947  051E  1003               	clrc
  5948  051F  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5949  0520  3EB8               	addlw	_uiSampleChannelFirst& (0+255)
  5950  0521  257F               	fcall	PL2	;call to abstracted procedure
  5951                           
  5952                           ;common.c: 113: ucChannelFirstLength++;
  5953  0522  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  5954                           
  5955                           ;common.c: 114: }
  5956  0523  0008               	return
  5957  0524                     i1l4428:	
  5958                           
  5959                           ;common.c: 115: else
  5960                           ;common.c: 116: {
  5961                           ;common.c: 117: ucChannelFirstLength = 0;
  5962  0524  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5963                           
  5964                           ;common.c: 119: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5965  0525  1003               	clrc
  5966  0526  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5967  0527  3EB8               	addlw	_uiSampleChannelFirst& (0+255)
  5968  0528  257F               	fcall	PL2	;call to abstracted procedure
  5969  0529  0008               	return
  5970  052A                     i1l4432:	
  5971                           
  5972                           ;common.c: 122: else if(channel == 5)
  5973  052A  0876               	movf	vPutSampleDataIntoTable@channel,w
  5974  052B  3A05               	xorlw	5
  5975  052C  1D03               	skipz
  5976  052D  2D3F               	goto	i1l4444
  5977                           
  5978                           ;common.c: 123: {
  5979                           ;common.c: 124: if(ucChannelFourthLength < 12)
  5980  052E  300C               	movlw	12
  5981  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5982  0530  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5983  0531  1803               	skipnc
  5984  0532  2D39               	goto	i1l4440
  5985                           
  5986                           ;common.c: 125: {
  5987                           ;common.c: 126: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5988  0533  1003               	clrc
  5989  0534  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5990  0535  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  5991  0536  257F               	fcall	PL2	;call to abstracted procedure
  5992                           
  5993                           ;common.c: 128: ucChannelFourthLength++;
  5994  0537  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5995                           
  5996                           ;common.c: 129: }
  5997  0538  0008               	return
  5998  0539                     i1l4440:	
  5999                           
  6000                           ;common.c: 130: else
  6001                           ;common.c: 131: {
  6002                           ;common.c: 132: ucChannelFourthLength = 0;
  6003  0539  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6004                           
  6005                           ;common.c: 134: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  6006  053A  1003               	clrc
  6007  053B  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6008  053C  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  6009  053D  257F               	fcall	PL2	;call to abstracted procedure
  6010  053E  0008               	return
  6011  053F                     i1l4444:	
  6012                           
  6013                           ;common.c: 137: else if(channel == 14)
  6014  053F  0876               	movf	vPutSampleDataIntoTable@channel,w
  6015  0540  3A0E               	xorlw	14
  6016  0541  1D03               	skipz
  6017  0542  2D5A               	goto	i1l4456
  6018                           
  6019                           ;common.c: 138: {
  6020                           ;common.c: 139: if(ucChannelFourteenthLength < 12)
  6021  0543  300C               	movlw	12
  6022  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6023  0545  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6024  0546  1803               	skipnc
  6025  0547  2D54               	goto	i1l4452
  6026                           
  6027                           ;common.c: 140: {
  6028                           ;common.c: 141: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  6029  0548  1003               	clrc
  6030  0549  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6031  054A  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  6032  054B  0084               	movwf	4
  6033  054C  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6034  054D  1783               	bsf	3,7	;select IRP bank3
  6035  054E  0080               	movwf	0
  6036  054F  0A84               	incf	4,f
  6037  0550  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6038  0551  0080               	movwf	0
  6039                           
  6040                           ;common.c: 143: ucChannelFourteenthLength++;
  6041  0552  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  6042                           
  6043                           ;common.c: 144: }
  6044  0553  0008               	return
  6045  0554                     i1l4452:	
  6046                           
  6047                           ;common.c: 145: else
  6048                           ;common.c: 146: {
  6049                           ;common.c: 147: ucChannelFourteenthLength = 0;
  6050  0554  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6051                           
  6052                           ;common.c: 149: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  6053  0555  1003               	clrc
  6054  0556  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6055  0557  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  6056  0558  257F               	fcall	PL2	;call to abstracted procedure
  6057  0559  0008               	return
  6058  055A                     i1l4456:	
  6059                           
  6060                           ;common.c: 152: else
  6061                           ;common.c: 153: {
  6062                           ;common.c: 154: ucChannelFirstLength = 0;
  6063  055A  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  6064                           
  6065                           ;common.c: 156: ucChannelFourthLength = 0;
  6066  055B  1283               	bcf	3,5	;RP0=0, select bank0
  6067  055C  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6068                           
  6069                           ;common.c: 158: ucChannelFourteenthLength = 0;
  6070  055D  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6071                           
  6072                           ;common.c: 160: for(int i = 0;i < 12; i++)
  6073  055E  01F7               	clrf	vPutSampleDataIntoTable@i
  6074  055F  01F8               	clrf	vPutSampleDataIntoTable@i+1
  6075  0560                     i1l4462:	
  6076                           
  6077                           ;common.c: 161: {
  6078                           ;common.c: 162: uiSampleChannelFirst[i] = 0;
  6079  0560  1003               	clrc
  6080  0561  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6081  0562  3EB8               	addlw	_uiSampleChannelFirst& (0+255)
  6082  0563  0084               	movwf	4
  6083  0564  1383               	bcf	3,7	;select IRP bank1
  6084  0565  0180               	clrf	0
  6085                           
  6086                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  6087  0566  2587  118A         	fcall	PL4	;call to abstracted procedure
  6088                           
  6089                           ;common.c: 166: uiSampleChannelFourth[i] = 0;
  6090  0568  2587  118A         	fcall	PL4	;call to abstracted procedure
  6091  056A  0A84               	incf	4,f
  6092  056B  0180               	clrf	0
  6093  056C  0AF7               	incf	vPutSampleDataIntoTable@i,f
  6094  056D  1903               	skipnz
  6095  056E  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  6096  056F  0878               	movf	vPutSampleDataIntoTable@i+1,w
  6097  0570  3A80               	xorlw	128
  6098  0571  00FF               	movwf	127
  6099  0572  3080               	movlw	128
  6100  0573  027F               	subwf	127,w
  6101  0574  1D03               	skipz
  6102  0575  2D78               	goto	u160_25
  6103  0576  300C               	movlw	12
  6104  0577  0277               	subwf	vPutSampleDataIntoTable@i,w
  6105  0578                     u160_25:	
  6106  0578  1803               	btfsc	3,0
  6107  0579  0008               	return
  6108  057A  2D60               	goto	i1l4462
  6109  057B                     __end_of_vPutSampleDataIntoTable:	
  6110  057B                     __ptext868:	
  6111 ;; =============== function _ISR ends ============
  6112                           
  6113                           
  6114 ;; *************** function i1_setAD_ConvertFlag *****************
  6115 ;; Defined at:
  6116 ;;		line 208 in file "D:\develop\190625\AK7030-OTP\common.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  setAD_Conver    1    wreg     unsigned char 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;		None               void
  6123 ;; Registers used:
  6124 ;;		wreg
  6125 ;; Tracked objects:
  6126 ;;		On entry : 60/0
  6127 ;;		On exit  : 60/20
  6128 ;;		Unchanged: FFF9F/0
  6129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6130 ;;      Params:         0       0       0       0       0
  6131 ;;      Locals:         1       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0
  6133 ;;      Totals:         1       0       0       0       0
  6134 ;;Total ram usage:        1 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_ISR
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142  057B                     i1_setAD_ConvertFlag:	
  6143                           
  6144                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  6145                           ;i1setAD_ConvertFlag@flag stored from wreg
  6146  057B  00F0               	movwf	i1setAD_ConvertFlag@flag
  6147                           
  6148                           ;common.c: 209: adc_convert_flag = flag;
  6149  057C  1683               	bsf	3,5	;RP0=1, select bank1
  6150  057D  00AB               	movwf	_adc_convert_flag^(0+128)
  6151  057E  0008               	return
  6152  057F                     __end_ofi1_setAD_ConvertFlag:	
  6153  057F                     PL2:	
  6154  057F  0084               	movwf	4
  6155  0580  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6156  0581  1383               	bcf	3,7	;select IRP bank1
  6157  0582  0080               	movwf	0
  6158  0583  0A84               	incf	4,f
  6159  0584  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6160  0585  0080               	movwf	0
  6161  0586  0008               	return
  6162  0587                     PL4:	
  6163  0587  0A84               	incf	4,f
  6164  0588  0180               	clrf	0
  6165  0589  1003               	clrc
  6166  058A  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6167  058B  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  6168  058C  0084               	movwf	4
  6169  058D  0180               	clrf	0
  6170  058E  0008               	return
  6171                           
  6172                           	psect	intentry
  6173  0004                     __pintentry:	
  6174                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6175                           
  6176  0004                     interrupt_function:	
  6177  007E                     saved_w	set	btemp
  6178  0004  00FE               	movwf	btemp
  6179  0005  0E03               	swapf	3,w
  6180  0006  00F9               	movwf	??_ISR
  6181  0007  0804               	movf	4,w
  6182  0008  00FA               	movwf	??_ISR+1
  6183  0009  080A               	movf	10,w
  6184  000A  00FB               	movwf	??_ISR+2
  6185  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6186  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6187  000D  087F               	movf	btemp+1,w
  6188  000E  00FC               	movwf	??_ISR+3
  6189  000F  118A  2CAF         	ljmp	_ISR
  6190                           
  6191                           	psect	text871
  6192  0000                     __ptext871:	
  6193 ;; =============== function _vPutSampleDataIntoTable ends ============
  6194                           
  6195  007E                     btemp	set	126	;btemp
  6196  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Aug 12 20:36:36 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l703 07F4  
                                             l713 07E4                                               l723 07C3  
                                             l708 07EC                                               l752 0062  
                                             l833 0168                                               l682 0000  
                                             l818 0166                                               l685 0000  
                                             l693 0FFE                                               l861 01A3  
                                             l679 0000                                               l688 07CC  
                                             l698 07FC                                               l794 00DE  
                                             l981 033B                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PB6 0036  
                                             _PB7 0037                                               _ISR 04AF  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              S5540 075B  
                                            S5542 0769                                              S5544 0777  
                                            S5546 06DC                                              ?_ISR 0070  
                              __size_of_AD_Sample 001E                            ?_getAdOriginalCh1Value 0046  
                                            l1005 0393                                              l1055 0485  
                                            l2502 0000                                              l5000 02AA  
                                            l2505 0000                                              l2522 0000  
                                            l5010 0000                                              l4212 0000  
                                            l1820 0000                                              l4220 0000  
                                            l2516 0000                                              l2508 0000  
                                            l5100 0000                                              l5020 0000  
                                            l5012 02D6                                              l5004 02B8  
                                            l4214 0000                                              l4222 0000  
                                            l4230 0000                                              l4310 0000  
                                            l5102 035C                                              l5030 02EC  
                                            l5022 0000                                              l5014 0000  
                                            l5006 02C9                                              l1823 0000  
                                            l4216 06D6                                              l4224 0000  
                                            l4232 0000                                              l4240 0000  
                                            l4304 0000                                              l4312 0000  
                                            l4400 0620                                              l5200 0000  
                                            l5120 0000                                              l5112 0000  
                                            l5040 0000                                              l5024 02E4  
                                            l5016 02D8                                              l1817 0000  
                                            l4218 0000                                              l4226 0000  
                                            l4234 0000                                              l4242 0000  
                                            l4250 0000                                              l1770 0000  
                                            l4306 0000                                              l4322 0000  
                                            l4330 0000                                              l1738 0000  
                                            l4410 0000                                              l4402 0000  
                                            l5210 0000                                              l5122 037D  
                                            l5114 0372                                              l5106 0000  
                                            l5050 0309                                              l5042 0301  
                                            l4228 0000                                              l4236 0000  
                                            l4244 0000                                              l1764 07DB  
                                            l4252 0000                                              l4260 0000  
                                            l4412 0000                                              l5220 045C  
                                            l5212 0000                                              l5204 041B  
                                            l5124 0000                                              l5116 0000  
                                            l5108 0367                                              l5060 0000  
                                            l5044 0000                                              l5036 02F4  
                                            l5028 02EA                                              l5132 0386  
                                            l1773 0000                                              l4238 0000  
                                            l4246 0000                                              l4254 0000  
                                            l4262 0000                                              l4270 0000  
                                            l1854 0000                                              l4334 0000  
                                            l1782 0000                                              l5230 0471  
                                            l5214 044D                                              l5206 0427  
                                            l5142 03BF                                              l5134 0000  
                                            l5126 0384                                              l5070 0000  
                                            l5062 031D                                              l5054 030F  
                                            l5046 0303                                              l1767 0000  
                                            l4248 0000                                              l4256 0000  
                                            l4264 0000                                              l4272 0000  
                                            l4280 0000                                              l4328 0000  
                                            l4336 0000                                              l4352 0000  
                                            l4360 0000                                              l4416 0000  
                                            l1776 0000                                              l5240 0000  
                                            l5232 0473                                              l5224 0000  
                                            l5208 0000                                              l5160 03DE  
                                            l5152 0000                                              l5144 0000  
                                            l5136 0000                                              l5080 0000  
                                            l5072 0000                                              l5056 0000  
                                            l4600 004E                                              l1785 0000  
                                            l4266 0000                                              l4258 0000  
                                            l4274 0000                                              l4282 06B5  
                                            l4346 0000                                              l4354 0000  
                                            l4370 0000                                              l5242 0000  
                                            l5226 0464                                              l5218 045A  
                                            l5170 0000                                              l5162 0000  
                                            l5154 03D0                                              l5146 0000  
                                            l5138 03B9                                              l5082 0000  
                                            l5074 0333                                              l5066 0326  
                                            l5058 0314                                              l4610 0060  
                                            l5250 0492                                              l1779 0000  
                                            l4268 0000                                              l4276 0000  
                                            l4284 0000                                              l4380 0000  
                                            l1788 0000                                              l5236 0000  
                                            l5172 0000                                              l5164 03E1  
                                            l5148 03C7                                              l5092 034A  
                                            l5084 0343                                              l5076 0000  
                                            l5068 0000                                              l4700 0000  
                                            l4620 0000                                              l4612 0063  
                                            l4604 005A                                              l4278 0000  
                                            l4358 0000                                              l4390 05DD  
                                            l4382 0000                                              l4550 0673  
                                            l4542 0000                                              l5246 0486  
                                            l5238 0000                                              l5190 0409  
                                            l5174 0000                                              l5158 0000  
                                            l5086 0000                                              l4710 0111  
                                            l4702 0100                                              l4606 005B  
                                            l4296 0000                                              l4376 05B5  
                                            l4472 0000                                              l4536 06C5  
                                            l5184 0000                                              l5176 0000  
                                            l5168 0000                                              l5096 0000  
                                            l4800 01A4                                              l4640 0000  
                                            l4632 0085                                              l4624 0000  
                                            l4616 0000                                              l4298 0000  
                                            l4378 0000                                              l4490 069B  
                                            l4482 0000                                              l4474 0000  
                                            l4546 066D                                              l4538 0000  
                                            l4554 0000                                              l4562 0000  
                                            l5194 040F                                              l5186 0406  
                                            l5178 03F4                                              l5098 0358  
                                            l4810 01AD                                              l4802 01A6  
                                            l4730 015B                                              l4722 0148  
                                            l4706 010B                                              l4650 0000  
                                            l4642 0095                                              l4634 0000  
                                            l4626 007B                                              l4618 0071  
                                            l4570 0000                                              l4396 061E  
                                            l4468 0000                                              l4492 0000  
                                            l4548 0000                                              l5188 0000  
                                            l4812 01AF                                              l4716 0137  
                                            l4660 00AF                                              l4652 009E  
                                            l4644 0000                                              l4636 0088  
                                            l4628 0000                                              l4580 0000  
                                            l4572 0000                                              l4398 05DE  
                                            l4486 0694                                              l4478 0000  
                                            l4558 0000                                              l4566 0000  
                                            l5198 0000                                              l4910 0000  
                                            l4822 01B5                                              l4806 01AB  
                                            l4742 0170                                              l4734 0164  
                                            l4726 0152                                              l4718 013E  
                                            l4670 00BF                                              l4646 0097  
                                            l4590 0000                                              l4582 0000  
                                            l4574 0000                                              l4488 0698  
                                            l4568 0000                                              l4920 0239  
                                            l4832 01BE                                              l4736 0169  
                                            l4672 00C3                                              l4664 0000  
                                            l4592 0040                                              l4584 0000  
                                            l4576 0000                                              l4922 0245  
                                            l4842 01C7                                              l4746 0172  
                                            l4738 016B                                              l4690 0000  
                                            l4674 0000                                              l4658 00AE  
                                            l4666 00B7                                              l4594 0000  
                                            l4586 0000                                              l4578 0000  
                                            l4932 0251                                              l4924 0247  
                                            l4908 0227                                              l4852 01DC  
                                            l4748 0174                                              l4692 00ED  
                                            l4684 0000                                              l4676 0000  
                                            l4596 0000                                              l4588 0000  
                                            l4934 0253                                              l4918 022D  
                                            l4862 01E2                                              l4854 0000  
                                            l4790 0000                                              l4758 017A  
                                            l4686 00E1                                              l4678 00CF  
                                            _ADIE 046A                                              l4944 025C  
                                            l4928 024F                                              l4872 0200  
                                            l4864 01EE                                              l4792 0195  
                                            l4768 0180                                              l4696 0000  
                                            _ADIF 006A                                              l4970 0292  
                                            l4954 0269                                              l4866 01F6  
                                            l4778 0186                                              l4698 00F5  
                                            l4980 029E                                              l4964 026F  
                                            l4956 0000                                              l4876 0202  
                                            l4868 01F8                                              l4788 0190  
                                            l4990 02A4                                              l4966 0280  
                                            l4878 0204                                              l4798 0197  
                                            l4992 0000                                              l4968 0290  
                                            l4888 020D                                              l4978 029C  
                                            l4898 0216                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1505 05FF  
                                            u1515 05EB                                              u1495 05D8  
                                            _PEIE 005E                                              u1975 0127  
                                            u1985 0135                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 06D6  
                                            start 0011                           ?_getAdOriginalCh14Value 0046  
                               main@ucTimerDelay1 005D                                 main@ucTimerDelay2 005E  
                               main@ucTimerDelay3 005F                                 main@ucTimerDelay4 0060  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0FF1  
                                   main@bInitFlag 004F                               _sampleChannelSelect 006E  
                          ??_getAdOriginaCh4Value 0048                                             ?_main 0070  
                                           _DACR0 0088                                             _CLKPR 0108  
                                           _T1CON 0010                                   __end_of_adc_get 0518  
                                           _PBOD6 0C46                                             _PBOD7 0C47  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                           _vPutSampleDataIntoTable 0518  
                                 __end_of_initPin 074A                                             _timer 00AC  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh14Value 05AE  
                   __size_of_startTwelveHourTimer 0014                              __end_of_clrSampeTime 0800  
                           __end_of_clearAllTimer 06CA                                      __end_of_main 04AF  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 06A0  
                                          ??_main 0048                              _clearPinPortAndTimer 06B8  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 07DE                                            _DACCON 0087  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CLKPCE 0847                                            i1l2525 0000  
                                          i1l4420 0000                                            i1l4500 0000  
                                          i1l1861 04C4                                            i1l4430 0000  
                                          i1l4422 0000                                            i1l1862 04CE  
                                          i1l4502 0000                                            i1l4440 0539  
                                          i1l4432 052A                                            i1l4520 0000  
                                          i1l4450 0000                                            i1l4442 0000  
                                          i1l4426 0000                                            i1l4530 0000  
                                          i1l4506 0000                                            i1l4514 04D8  
                                          i1l1779 0000                                            i1l4452 0554  
                                          i1l4444 053F                                            i1l4428 0524  
                                          i1l4524 04EC                                            i1l1869 0500  
                                          i1l4462 0560                                            i1l4454 0000  
                                          i1l4438 0000                                            i1l4534 0000  
                                          i1l4526 0000                                            i1l4518 0000  
                                          i1l4464 0000                                            i1l4456 055A  
                                          i1l4528 04F7                                            i1l4466 0000  
                                          i1l4496 0000                                            u160_25 0578  
                                __end_of_dac_init 0FEB                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0679                                 _setAD_ConvertFlag 067D  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 00B1                                ?_getAD_ConvertFlag 0070  
                                          _Filter 05AE                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 07B2                                  __end_of_op2_init 0FF8  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0006  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            _setPA0 07F6  
                                          _setPA1 07EE                                            _setPB0 07C5  
                                          _setPA2 07E6                                            _setPB1 0FF8  
                                          _setPA3 07DE                                            _setPA6 07BC  
                                          clrloop 07CF                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0020  
                         main@ucTimerDelayP2sLess 0061                           main@ucTimerDelayP2sMore 0062  
                       ??_vPutSampleDataIntoTable 0077                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 06A0  
                __size_of_startTwentySecondsTimer 0011                         __end_of_getAD_ConvertFlag 067D  
                       __end_of_setAD_ConvertFlag 0682                                __size_of_adc_start 0003  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 06DC                              _uiSampleChannelFirst 00B8  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0069  
                       _isFinishedThreeHoursTimer 0783                           ??_getAdOriginalCh1Value 0048  
                           __end_of_timer1_config 07BC                                    ?_adc_test_init 0020  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0048  
                                      __pbssBANK1 00A0                                        __pbssBANK3 0190  
                    __size_ofi1_setAD_ConvertFlag 0004                                        adc_get@val 0072  
                 __end_of_vPutSampleDataIntoTable 057B                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 00AE                                           ?_setPA0 0070  
                                         ?_setPA1 0070                                           ?_setPA2 0070  
                                         ?_setPB0 0070                                           ?_setPA3 0070  
                                         ?_setPB1 0070                                           ?_setPA6 0070  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 07FE  
                               __end_of_adc_start 06B8                              _uiTwentySecondsTimer 00A4  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 0FEB                                           Filter@i 0045  
                                         Filter@j 0044                     __size_of_startThreeHoursTimer 0014  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimer20s 00B2                                    main@ucTimerP3s 00B5  
                                  main@ucTimerP5s 0068                               ?_isPermitSampleTime 0070  
                                  main@uiMaxValue 00A6                                    main@uiMinValue 00A8  
                                    setPA0@bValue 0020                                    main@uiOldValue 0048  
                                    setPA1@bValue 0020                                   __size_of_Filter 0097  
                                    setPA2@bValue 0020                                      setPB0@bValue 0020  
                                      _uiBigTimer 00A0                                      setPA3@bValue 0020  
                                    setPB1@bValue 0020                                      setPA6@bValue 0020  
                                    _clock_config 07D6                                           _adc_get 050D  
                                 __size_of_setPA0 0008                                   __size_of_setPA1 0008  
                                 __size_of_setPB0 0009                                   __size_of_setPA2 0008  
                                 __size_of_setPB1 0008                                   __size_of_setPA3 0008  
                                 __size_of_setPA6 0009              __end_of_isFinishedTwentySecondsTimer 079B  
           __size_of_isFinishedTwentySecondsTimer 000C                      _isFinishedTwentySecondsTimer 078F  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 0737  
                                      ??_dac_init 0020                                         _AD_Sample 0682  
                                    __size_of_ISR 005E                                           _initPin 0737  
                            _bSmallTimerStartFlag 004B                     __size_of_getAdOriginaCh4Value 000A  
                                 ??_adc_test_init 0021                                        ??_op1_init 0020  
                                      ??_op2_init 0020                           _startTwentySecondsTimer 074A  
                            end_of_initialization 070C                                 Filter@filter_temp 003E  
                                main@ucLoaderStep 0056                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 0050  
                              main@ucChannel4Type 0052                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0042                                  _adc_convert_flag 00AB  
                          __size_of_clearAllTimer 0005                      __end_of_clearThreeHoursTimer 06D6  
                          main@ucTimerADC1ZeroP5s 005B                    __size_of_clearTwelveHoursTimer 0006  
                         _timer1_interrupt_config 0FE3                     __end_of_clearTwelveHoursTimer 06D0  
                        main@ucTimerForDACR0_CNT1 0063                          main@ucTimerForDACR0_CNT2 0065  
              __size_of_isFinishedThreeHoursTimer 000C                                  main@ucTimerX1P5s 00B6  
                                main@ucTimerX2P5s 00B7                            main@ucTimerZeroPoint3s 006A  
                          main@ucTimerZeroPoint5s 006B                                  main@ucTimerDelay 005C  
                                  __end_of_Filter 0645                                   main@ucADC4_Step 0051  
                             _bTwentySecStartFlag 004C               __size_of_isFinishedTwelveHoursTimer 000C  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 057B  
                                  __end_of_setPA0 07FE                                    __end_of_setPA1 07F6  
                                  __end_of_setPB0 07CE                                    __end_of_setPA2 07EE  
                                  __end_of_setPB1 1000                                    __end_of_setPA3 07E6  
                                  __end_of_setPA6 07C5                         ??_startTwentySecondsTimer 0020  
                             start_initialization 06F6                                       __end_of_ISR 050D  
                            main@ucTimerLessX1P5s 00B3                              main@ucTimerLessX2P5s 00B4  
                           _uiSampleChannelFourth 00D0                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 000A                     __end_of_getAdOriginalCh1Value 05A3  
                        ??_getAdOriginalCh14Value 0048                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 0723                 __end_of_isFinishedThreeHoursTimer 078F  
                              main@enumBranchStep 00AD                                          ??_Filter 0022  
                                   _clearAllTimer 06C5                                       __pdataBANK0 006E  
                                        ??_setPA0 0020                                          ??_setPA1 0020  
                                        ??_setPA2 0020                                          ??_setPB0 0020  
                                        ??_setPA3 0020                                          ??_setPB1 0020  
                                        ??_setPA6 0020                          ?_vPutSampleDataIntoTable 0074  
                      main@ucDelayPrefix4TimerP5s 0054                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                        main@ucDelayPrefix6TimerP2s 0055  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 06B5                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0007                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 075B  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 06D0                      __end_of_startThreeHoursTimer 0723  
                                       __ptext830 06B8                                         __ptext831 058F  
                                       __ptext840 0783                                         __ptext832 0599  
                                       __ptext841 070F                                         __ptext833 05A3  
                                       __ptext850 07A7                                         __ptext842 078F  
                                       __ptext834 065B                                         __ptext851 0FE6  
                                       __ptext843 074A                                         __ptext835 06C5  
                                       __ptext860 07F6                                         __ptext852 06A0  
                                       __ptext844 079B                                         __ptext836 0682  
                                       __ptext861 0FF8                                         __ptext853 0FE3  
                                       __ptext845 0723                                         __ptext837 067D  
                                       __ptext870 0518                                         __ptext862 07C5  
                                       __ptext854 07B2                                         __ptext846 07FE  
                                       __ptext838 0679                                         __ptext871 0000  
                                       __ptext863 0737                                         __ptext855 07D6  
                                       __ptext847 0FEB                                         __ptext839 05AE  
                                       __ptext864 06D6                                         __ptext856 07BC  
                                       __ptext848 06B5                                         __ptext865 06D0  
                                       __ptext857 07DE                                         __ptext849 0FF1  
                                       __ptext866 06CA                                         __ptext858 07E6  
                                       __ptext867 04AF                                         __ptext859 07EE  
                                       __ptext868 057B                                         __ptext869 050D  
                                        ?_adc_get 0070                                         __pswtext1 075B  
                                       __pswtext2 0769                                         __pswtext3 0777  
                                       __pswtext4 06DC                __end_of_isFinishedTwelveHoursTimer 07A7  
                      _isFinishedTwelveHoursTimer 079B                                   ISR@ucTimer1sCnt 00AA  
                                        ?_initPin 0070                     __size_of_clearPinPortAndTimer 000D  
                       _uiSampleChannelFourteenth 0190                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 000B                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 0599                   __end_of_timer1_interrupt_config 0FE6  
                      main@ucTimerLessADC1ZeroP5s 0067                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 006D                       __size_of_isPermitSampleTime 0006  
                                    _uiSmallTimer 00A2                             __end_of_adc_test_init 06B5  
                                   _timer1_config 07B2                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                                   ??_clearAllTimer 0020  
                     main@ucFourthSuffix1TimerP3s 00B0                            _getAdOriginalCh14Value 05A3  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 0FE6  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                      main@ucTimerForDACR0_CNT1_f 0064                        main@ucTimerForDACR0_CNT2_f 0066  
                                __size_of_initPin 0013                                    Filter@tmpValue 0020  
                                  ?_timer1_config 0070                                          _op1_init 07A7  
                                        _op2_init 0FF1                                       ??_adc_start 0020  
                            _startThreeHoursTimer 070F                             _clearTwelveHoursTimer 06CA  
                                   __size_of_main 049C                                          clear_ram 07CE  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0006  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 058F  
                                     _sampleTimes 004D                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 0063                                          intlevel1 0000  
                           _getAdOriginalCh1Value 0599                        ?_isFinishedThreeHoursTimer 0070  
                               main@ucLoaderStep1 0057                                 main@ucLoaderStep2 0058  
                               main@ucLoaderStep3 0059                                 main@ucLoaderStep4 005A  
                                   ?_clock_config 0070                          ?_startTwentySecondsTimer 0070  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 004A                             ?_getAdOriginaCh4Value 0046  
                                 ??_timer1_config 0020                                 main@bCheckTweHour 004E  
                     __end_ofi1_setAD_ConvertFlag 057F                __end_of_process_AD_Converter_Value 0679  
                      _process_AD_Converter_Value 065B                            ?_clearTwelveHoursTimer 0070  
                         main@ucCheckTimerP2sLess 0053                           main@ucCheckTimerP2sMore 00AF  
                                adc_test_init@ref 0020                      __end_of_clearPinPortAndTimer 06C5  
