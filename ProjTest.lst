

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Feb 12 14:27:36 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text795,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	swtext4,local,class=CONST,delta=2
    19                           	psect	text796,local,class=CODE,delta=2
    20                           	psect	text797,local,class=CODE,delta=2
    21                           	psect	text799,local,class=CODE,delta=2
    22                           	psect	text806,local,class=CODE,delta=2
    23                           	psect	text807,local,class=CODE,delta=2
    24                           	psect	text808,local,class=CODE,delta=2
    25                           	psect	text809,local,class=CODE,delta=2
    26                           	psect	text810,local,class=CODE,delta=2
    27                           	psect	text811,local,class=CODE,delta=2
    28                           	psect	text812,local,class=CODE,delta=2
    29                           	psect	text813,local,class=CODE,delta=2
    30                           	psect	text815,local,class=CODE,delta=2
    31                           	psect	text817,local,class=CODE,delta=2
    32                           	psect	text818,local,class=CODE,delta=2
    33                           	psect	text819,local,class=CODE,delta=2
    34                           	psect	text820,local,class=CODE,delta=2
    35                           	psect	text821,local,class=CODE,delta=2
    36                           	psect	text822,local,class=CODE,delta=2
    37                           	psect	text823,local,class=CODE,delta=2
    38                           	psect	text824,local,class=CODE,delta=2
    39                           	psect	text825,local,class=CODE,delta=2
    40                           	psect	text826,local,class=CODE,delta=2
    41                           	psect	text827,local,class=CODE,delta=2
    42                           	psect	text831,local,class=CODE,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text835,local,class=CODE,delta=2
    45                           	psect	pa_nodes,global,class=CODE,delta=2
    46                           	dabs	1,0x7E,2
    47  000A                     	;#
    48                           
    49                           	psect	config
    50  2000  2FFF               	dw	12287	;#
    51  2001  3FDE               	dw	16350	;#
    52  2002  3FF8               	dw	16376	;#
    53                           
    54                           	psect	text795
    55  0000                     __ptext795:	
    56  001F                     _ADCON0	set	31
    57  001E                     _ADRESH	set	30
    58  0010                     _T1CON	set	16
    59  000F                     _TMR1H	set	15
    60  000E                     _TMR1L	set	14
    61  006A                     _ADIF	set	106
    62  00F8                     _ADON	set	248
    63  005F                     _GIE	set	95
    64  00F9                     _GO	set	249
    65  0028                     _PA0	set	40
    66  0029                     _PA1	set	41
    67  002A                     _PA2	set	42
    68  002B                     _PA3	set	43
    69  002E                     _PA6	set	46
    70  0030                     _PB0	set	48
    71  0031                     _PB1	set	49
    72  0036                     _PB6	set	54
    73  0037                     _PB7	set	55
    74  005E                     _PEIE	set	94
    75  0060                     _TMR1IF	set	96
    76  009F                     _ADCON1	set	159
    77  009E                     _ADRESL	set	158
    78  0087                     _DACCON	set	135
    79  0088                     _DACR0	set	136
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0434                     _TRISB4	set	1076
    92  0436                     _TRISB6	set	1078
    93  0437                     _TRISB7	set	1079
    94  0108                     _CLKPR	set	264
    95  0847                     _CLKPCE	set	2119
    96  0C46                     _PBOD6	set	3142
    97  0C47                     _PBOD7	set	3143
    98                           
    99                           	psect	cinit
   100  06E8                     start_initialization:	
   101  06E8  3048               	movlw	low __pbssBANK0
   102                           
   103                           ; Clear objects allocated to COMMON
   104  06E9  01FD               	clrf	__pbssCOMMON& (0+127)
   105                           
   106                           ; Clear objects allocated to BANK0
   107  06EA  1383               	bcf	3,7	;select IRP bank0
   108  06EB  0084               	movwf	4
   109  06EC  306F               	movlw	low (__pbssBANK0+39)
   110  06ED  118A  27B3  118A   	fcall	clear_ram
   111                           
   112                           ; Clear objects allocated to BANK1
   113  06F0  30A0               	movlw	low __pbssBANK1
   114  06F1  0084               	movwf	4
   115  06F2  30E9               	movlw	low (__pbssBANK1+73)
   116  06F3  118A  27B3  118A   	fcall	clear_ram
   117  06F6  3090               	movlw	low __pbssBANK3
   118                           
   119                           ; Clear objects allocated to BANK3
   120  06F7  1783               	bsf	3,7	;select IRP bank2
   121  06F8  0084               	movwf	4
   122  06F9  30C0               	movlw	low (__pbssBANK3+48)
   123  06FA  118A  27B3         	fcall	clear_ram
   124  06FC                     end_of_initialization:	
   125                           ;End of C runtime variable initialization code
   126                           
   127  06FC  0183               	clrf	3
   128  06FD  118A  2813         	ljmp	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMMON
   131  007D                     __pbssCOMMON:	
   132  007D                     vPutSampleDataIntoTable@ucChannelZeroLength:	
   133  007D                     	ds	1
   134                           
   135                           	psect	bssBANK0
   136  0048                     __pbssBANK0:	
   137  0048                     main@uiOldValue:	
   138  0048                     	ds	2
   139  004A                     _bBigTimerStartFlag:	
   140  004A                     	ds	1
   141  004B                     _bSmallTimerStartFlag:	
   142  004B                     	ds	1
   143  004C                     _bTwentySecStartFlag:	
   144  004C                     	ds	1
   145  004D                     _sampleChannelSelect:	
   146  004D                     	ds	1
   147  004E                     _sampleTimes:	
   148  004E                     	ds	1
   149  004F                     main@bCheckTweHour:	
   150  004F                     	ds	1
   151  0050                     main@bInitFlag:	
   152  0050                     	ds	1
   153  0051                     main@enumMainLoopStep:	
   154  0051                     	ds	1
   155  0052                     main@ucADC4_Step:	
   156  0052                     	ds	1
   157  0053                     main@ucChannel4Type:	
   158  0053                     	ds	1
   159  0054                     main@ucDelayPrefix4TimerP5s:	
   160  0054                     	ds	1
   161  0055                     main@ucDelayPrefix6TimerP2s:	
   162  0055                     	ds	1
   163  0056                     main@ucLoaderStep:	
   164  0056                     	ds	1
   165  0057                     main@ucLoaderStep1:	
   166  0057                     	ds	1
   167  0058                     main@ucLoaderStep2:	
   168  0058                     	ds	1
   169  0059                     main@ucLoaderStep3:	
   170  0059                     	ds	1
   171  005A                     main@ucLoaderStep4:	
   172  005A                     	ds	1
   173  005B                     main@ucTimerADC1ZeroP5s:	
   174  005B                     	ds	1
   175  005C                     main@ucTimerDelay:	
   176  005C                     	ds	1
   177  005D                     main@ucTimerDelay1:	
   178  005D                     	ds	1
   179  005E                     main@ucTimerDelay2:	
   180  005E                     	ds	1
   181  005F                     main@ucTimerDelay3:	
   182  005F                     	ds	1
   183  0060                     main@ucTimerDelay4:	
   184  0060                     	ds	1
   185  0061                     main@ucTimerDelayP2sLess:	
   186  0061                     	ds	1
   187  0062                     main@ucTimerDelayP2sMore:	
   188  0062                     	ds	1
   189  0063                     main@ucTimerForDACR0_CNT1:	
   190  0063                     	ds	1
   191  0064                     main@ucTimerForDACR0_CNT1_f:	
   192  0064                     	ds	1
   193  0065                     main@ucTimerForDACR0_CNT2:	
   194  0065                     	ds	1
   195  0066                     main@ucTimerForDACR0_CNT2_f:	
   196  0066                     	ds	1
   197  0067                     main@ucTimerLessADC1ZeroP5s:	
   198  0067                     	ds	1
   199  0068                     main@ucTimerP5s:	
   200  0068                     	ds	1
   201  0069                     main@ucTimerRightP5s:	
   202  0069                     	ds	1
   203  006A                     main@ucTimerZeroPoint3s:	
   204  006A                     	ds	1
   205  006B                     main@ucTimerZeroPoint5s:	
   206  006B                     	ds	1
   207  006C                     vPutSampleDataIntoTable@ucChannelFifthLength:	
   208  006C                     	ds	1
   209  006D                     vPutSampleDataIntoTable@ucChannelSecondLength:	
   210  006D                     	ds	1
   211  006E                     vPutSampleDataIntoTable@ucChannelSixthLength:	
   212  006E                     	ds	1
   213                           
   214                           	psect	bssBANK1
   215  00A0                     __pbssBANK1:	
   216  00A0                     _uiBigTimer:	
   217  00A0                     	ds	2
   218  00A2                     _uiSmallTimer:	
   219  00A2                     	ds	2
   220  00A4                     _uiTwentySecondsTimer:	
   221  00A4                     	ds	2
   222  00A6                     main@uiMaxValue:	
   223  00A6                     	ds	2
   224  00A8                     main@uiMinValue:	
   225  00A8                     	ds	2
   226  00AA                     ISR@ucTimer1sCnt:	
   227  00AA                     	ds	1
   228  00AB                     _adc_convert_flag:	
   229  00AB                     	ds	1
   230  00AC                     _timer:	
   231  00AC                     	ds	1
   232  00AD                     main@enumBranchStep:	
   233  00AD                     	ds	1
   234  00AE                     main@enumInteralStep:	
   235  00AE                     	ds	1
   236  00AF                     main@ucCheckTimerP2sLess:	
   237  00AF                     	ds	1
   238  00B0                     main@ucCheckTimerP2sMore:	
   239  00B0                     	ds	1
   240  00B1                     main@ucFourthSuffix1TimerP3s:	
   241  00B1                     	ds	1
   242  00B2                     main@ucTimer1s:	
   243  00B2                     	ds	1
   244  00B3                     main@ucTimer20s:	
   245  00B3                     	ds	1
   246  00B4                     main@ucTimerLessX1P5s:	
   247  00B4                     	ds	1
   248  00B5                     main@ucTimerLessX2P5s:	
   249  00B5                     	ds	1
   250  00B6                     main@ucTimerP3s:	
   251  00B6                     	ds	1
   252  00B7                     main@ucTimerX1P5s:	
   253  00B7                     	ds	1
   254  00B8                     main@ucTimerX2P5s:	
   255  00B8                     	ds	1
   256  00B9                     _uiSampleChannelSecond:	
   257  00B9                     	ds	24
   258  00D1                     _uiSampleZero:	
   259  00D1                     	ds	24
   260                           
   261                           	psect	bssBANK3
   262  0190                     __pbssBANK3:	
   263  0190                     _uiSampleChannelSixth:	
   264  0190                     	ds	24
   265  01A8                     _uiSampleChannelFifth:	
   266  01A8                     	ds	24
   267                           
   268                           	psect	clrtext
   269  07B3                     clear_ram:	
   270                           ;	Called with FSR containing the base address, and
   271                           ;	W with the last address+1
   272                           
   273  07B3  0064               	clrwdt	;clear the watchdog before getting into this loop
   274  07B4                     clrloop:	
   275  07B4  0180               	clrf	0	;clear RAM location pointed to by FSR
   276  07B5  0A84               	incf	4,f	;increment pointer
   277  07B6  0604               	xorwf	4,w	;XOR with final address
   278  07B7  1903               	btfsc	3,2	;have we reached the end yet?
   279  07B8  3400               	retlw	0	;all done for this memory range, return
   280  07B9  0604               	xorwf	4,w	;XOR again to restore value
   281  07BA  2FB4               	goto	clrloop	;do the next byte
   282                           
   283                           	psect	cstackCOMMON
   284  0070                     __pcstackCOMMON:	
   285  0070                     ?_clearTwelveHoursTimer:	
   286  0070                     ?_clearThreeHoursTimer:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_clearTwentySecondsTimer:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_clock_config:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_timer1_config:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_timer1_interrupt_config:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_dac_init:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_adc_start:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_process_AD_Converter_Value:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_clrSampeTime:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_startTwentySecondsTimer:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_AD_Sample:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_clearAllTimer:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_clearPinPortAndTimer:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_initPin:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_setPB0:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_setPB1:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_setPA0:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_setPA1:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_setPA2:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_setPA3:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_setPA6:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_main:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_setAD_ConvertFlag:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_ISR:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?i1_setAD_ConvertFlag:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ??i1_setAD_ConvertFlag:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_isPermitSampleTime:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_isFinishedTwelveHoursTimer:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_isFinishedTwentySecondsTimer:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_isFinishedThreeHoursTimer:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_getAD_ConvertFlag:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_adc_get:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     i1setAD_ConvertFlag@flag:	
   383                           ; 2 bytes @ 0x0
   384                           
   385                           
   386                           ; 1 bytes @ 0x0
   387  0070                     	ds	2
   388  0072                     ??_adc_get:	
   389  0072                     adc_get@val:	
   390                           ; 0 bytes @ 0x2
   391                           
   392                           
   393                           ; 2 bytes @ 0x2
   394  0072                     	ds	2
   395  0074                     ?_vPutSampleDataIntoTable:	
   396  0074                     vPutSampleDataIntoTable@uiSampleData:	
   397                           ; 0 bytes @ 0x4
   398                           
   399                           
   400                           ; 2 bytes @ 0x4
   401  0074                     	ds	2
   402  0076                     vPutSampleDataIntoTable@channel:	
   403                           
   404                           ; 1 bytes @ 0x6
   405  0076                     	ds	1
   406  0077                     ??_vPutSampleDataIntoTable:	
   407  0077                     vPutSampleDataIntoTable@i:	
   408                           ; 0 bytes @ 0x7
   409                           
   410                           
   411                           ; 2 bytes @ 0x7
   412  0077                     	ds	2
   413  0079                     ??_ISR:	
   414                           
   415                           ; 0 bytes @ 0x9
   416  0079                     	ds	4
   417                           
   418                           	psect	cstackBANK0
   419  0020                     __pcstackBANK0:	
   420  0020                     ??_clearTwelveHoursTimer:	
   421  0020                     ??_clearThreeHoursTimer:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ??_clearTwentySecondsTimer:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ??_clock_config:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ??_timer1_config:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ??_timer1_interrupt_config:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     ?_adc_test_init:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0020                     ??_dac_init:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0020                     ??_adc_start:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0020                     ??_isPermitSampleTime:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0020                     ??_clrSampeTime:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     ?_startTwelveHourTimer:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0020                     ??_isFinishedTwelveHoursTimer:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0020                     ??_startTwentySecondsTimer:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0020                     ??_isFinishedTwentySecondsTimer:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0020                     ?_startThreeHoursTimer:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0020                     ??_isFinishedThreeHoursTimer:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0020                     ??_clearAllTimer:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0020                     ??_clearPinPortAndTimer:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0020                     ??_initPin:	
   476                           ; 0 bytes @ 0x0
   477                           
   478  0020                     ??_setPB0:	
   479                           ; 0 bytes @ 0x0
   480                           
   481  0020                     ??_setPB1:	
   482                           ; 0 bytes @ 0x0
   483                           
   484  0020                     ??_setPA0:	
   485                           ; 0 bytes @ 0x0
   486                           
   487  0020                     ??_setPA1:	
   488                           ; 0 bytes @ 0x0
   489                           
   490  0020                     ??_setPA2:	
   491                           ; 0 bytes @ 0x0
   492                           
   493  0020                     ??_setPA3:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0020                     ??_setPA6:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0020                     ??_getAD_ConvertFlag:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0020                     ??_setAD_ConvertFlag:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0020                     ?_Filter:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0020                     setPB0@bValue:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  0020                     setPB1@bValue:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0020                     setPA0@bValue:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0020                     setPA1@bValue:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0020                     setPA2@bValue:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0020                     setPA3@bValue:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0020                     setPA6@bValue:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0020                     setAD_ConvertFlag@flag:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0020                     adc_test_init@ref:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0020                     Filter@tmpValue:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0020                     startTwelveHourTimer@uiSetTime:	
   539                           ; 2 bytes @ 0x0
   540                           
   541  0020                     startThreeHoursTimer@uiSetTime:	
   542                           ; 2 bytes @ 0x0
   543                           
   544                           
   545                           ; 2 bytes @ 0x0
   546  0020                     	ds	1
   547  0021                     ??_adc_test_init:	
   548                           
   549                           ; 0 bytes @ 0x1
   550  0021                     	ds	1
   551  0022                     ??_startTwelveHourTimer:	
   552  0022                     ??_startThreeHoursTimer:	
   553                           ; 0 bytes @ 0x2
   554                           
   555  0022                     ??_Filter:	
   556                           ; 0 bytes @ 0x2
   557                           
   558  0022                     adc_test_init@channel:	
   559                           ; 0 bytes @ 0x2
   560                           
   561                           
   562                           ; 1 bytes @ 0x2
   563  0022                     	ds	1
   564  0023                     ??_process_AD_Converter_Value:	
   565  0023                     ??_AD_Sample:	
   566                           ; 0 bytes @ 0x3
   567                           
   568                           
   569                           ; 0 bytes @ 0x3
   570  0023                     	ds	3
   571  0026                     Filter@filter_buf:	
   572                           
   573                           ; 24 bytes @ 0x6
   574  0026                     	ds	24
   575  003E                     Filter@filter_temp:	
   576                           
   577                           ; 2 bytes @ 0x1E
   578  003E                     	ds	2
   579  0040                     Filter@filter_sum:	
   580                           
   581                           ; 2 bytes @ 0x20
   582  0040                     	ds	2
   583  0042                     Filter@cir:	
   584                           
   585                           ; 2 bytes @ 0x22
   586  0042                     	ds	2
   587  0044                     Filter@j:	
   588                           
   589                           ; 1 bytes @ 0x24
   590  0044                     	ds	1
   591  0045                     Filter@i:	
   592                           
   593                           ; 1 bytes @ 0x25
   594  0045                     	ds	1
   595  0046                     ?_getAdOriginalCh14Value:	
   596  0046                     ?_getAdOriginalCh1Value:	
   597                           ; 2 bytes @ 0x26
   598                           
   599  0046                     ?_getAdOriginaCh4Value:	
   600                           ; 2 bytes @ 0x26
   601                           
   602                           
   603                           ; 2 bytes @ 0x26
   604  0046                     	ds	2
   605  0048                     ??_getAdOriginalCh14Value:	
   606  0048                     ??_getAdOriginalCh1Value:	
   607                           ; 0 bytes @ 0x28
   608                           
   609  0048                     ??_getAdOriginaCh4Value:	
   610                           ; 0 bytes @ 0x28
   611                           
   612  0048                     ??_main:	
   613                           ; 0 bytes @ 0x28
   614                           
   615                           
   616                           	psect	maintext
   617  0013                     __pmaintext:	
   618                           ; 0 bytes @ 0x28
   619 ;;Data sizes: Strings 0, constant 0, data 0, bss 161, persistent 0 stack 0
   620 ;;Auto spaces:   Size  Autos    Used
   621 ;; COMMON          14     13      14
   622 ;; BANK0           80     40      79
   623 ;; BANK1           80      0      73
   624 ;; BANK3           96      0      48
   625 ;; BANK2           96      0       0
   626 ;;
   627 ;; Pointer list with targets:
   628 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   629 ;;
   630 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   631 ;;
   632 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   633 ;;
   634 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   635 ;;
   636 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   637 ;;
   638 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   639 ;;		 -> uiSampleChannelFifth(BANK3[24]), uiSampleChannelSecond(BANK1[24]), uiSampleZero(BANK1[24]), 
   640 ;;
   641 ;;
   642 ;; Critical Paths under _main in COMMON
   643 ;;
   644 ;;   None.
   645 ;;
   646 ;; Critical Paths under _ISR in COMMON
   647 ;;
   648 ;;   _ISR->_vPutSampleDataIntoTable
   649 ;;   _vPutSampleDataIntoTable->_adc_get
   650 ;;
   651 ;; Critical Paths under _main in BANK0
   652 ;;
   653 ;;   _main->_getAdOriginalCh14Value
   654 ;;   _main->_getAdOriginalCh1Value
   655 ;;   _main->_getAdOriginaCh4Value
   656 ;;   _AD_Sample->_adc_test_init
   657 ;;   _getAdOriginaCh4Value->_Filter
   658 ;;   _getAdOriginalCh1Value->_Filter
   659 ;;   _getAdOriginalCh14Value->_Filter
   660 ;;
   661 ;; Critical Paths under _ISR in BANK0
   662 ;;
   663 ;;   None.
   664 ;;
   665 ;; Critical Paths under _main in BANK1
   666 ;;
   667 ;;   None.
   668 ;;
   669 ;; Critical Paths under _ISR in BANK1
   670 ;;
   671 ;;   None.
   672 ;;
   673 ;; Critical Paths under _main in BANK3
   674 ;;
   675 ;;   None.
   676 ;;
   677 ;; Critical Paths under _ISR in BANK3
   678 ;;
   679 ;;   None.
   680 ;;
   681 ;; Critical Paths under _main in BANK2
   682 ;;
   683 ;;   None.
   684 ;;
   685 ;; Critical Paths under _ISR in BANK2
   686 ;;
   687 ;;   None.
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   690 ;;
   691 ;;
   692 ;;Call Graph Tables:
   693 ;;
   694 ;; ---------------------------------------------------------------------------------
   695 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (0) _main                                                 0     0      0    2168
   698 ;;                            _initPin
   699 ;;                       _clock_config
   700 ;;                      _timer1_config
   701 ;;            _timer1_interrupt_config
   702 ;;                      _adc_test_init
   703 ;;                           _dac_init
   704 ;;                          _adc_start
   705 ;;         _process_AD_Converter_Value
   706 ;;                 _isPermitSampleTime
   707 ;;                       _clrSampeTime
   708 ;;             _getAdOriginalCh14Value
   709 ;;               _clearPinPortAndTimer
   710 ;;                             _setPA6
   711 ;;              _getAdOriginalCh1Value
   712 ;;               _startTwelveHourTimer
   713 ;;         _isFinishedTwelveHoursTimer
   714 ;;               _getAdOriginaCh4Value
   715 ;;                             _setPA2
   716 ;;                             _setPA3
   717 ;;                             _setPA0
   718 ;;                             _setPA1
   719 ;;                             _setPB0
   720 ;;            _startTwentySecondsTimer
   721 ;;       _isFinishedTwentySecondsTimer
   722 ;;            _clearTwentySecondsTimer
   723 ;;               _startThreeHoursTimer
   724 ;;          _isFinishedThreeHoursTimer
   725 ;;               _clearThreeHoursTimer
   726 ;;                             _setPB1
   727 ;;                      _clearAllTimer
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   730 ;;                  _getAD_ConvertFlag
   731 ;;                  _setAD_ConvertFlag
   732 ;;                          _AD_Sample
   733 ;;                          _adc_start
   734 ;; ---------------------------------------------------------------------------------
   735 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   736 ;;                      _clearAllTimer
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) _AD_Sample                                            0     0      0      44
   739 ;;                      _adc_test_init
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   742 ;;                                             38 BANK0      2     0      2
   743 ;;                             _Filter
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   746 ;;                                             38 BANK0      2     0      2
   747 ;;                             _Filter
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   750 ;;                                             38 BANK0      2     0      2
   751 ;;                             _Filter
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (1) _clearAllTimer                                        0     0      0       0
   754 ;;              _clearTwelveHoursTimer
   755 ;;               _clearThreeHoursTimer
   756 ;;            _clearTwentySecondsTimer
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   759 ;;                                              0 BANK0      1     1      0
   760 ;; ---------------------------------------------------------------------------------
   761 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (2) _Filter                                              38    36      2     620
   764 ;;                                              0 BANK0     38    36      2
   765 ;; ---------------------------------------------------------------------------------
   766 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   769 ;;                                              0 BANK0      2     0      2
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   776 ;; ---------------------------------------------------------------------------------
   777 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   778 ;;                                              0 BANK0      2     0      2
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (1) _clrSampeTime                                         0     0      0       0
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _isPermitSampleTime                                   0     0      0       0
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (2) _adc_start                                            0     0      0       0
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (1) _dac_init                                             0     0      0       0
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (3) _adc_test_init                                        3     2      1      44
   789 ;;                                              0 BANK0      3     2      1
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (1) _timer1_interrupt_config                              0     0      0       0
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (1) _timer1_config                                        0     0      0       0
   794 ;; ---------------------------------------------------------------------------------
   795 ;; (1) _clock_config                                         0     0      0       0
   796 ;; ---------------------------------------------------------------------------------
   797 ;; (1) _setPA6                                               1     1      0      22
   798 ;;                                              0 BANK0      1     1      0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (1) _setPA3                                               1     1      0      22
   801 ;;                                              0 BANK0      1     1      0
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _setPA2                                               1     1      0      22
   804 ;;                                              0 BANK0      1     1      0
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _setPA1                                               1     1      0      22
   807 ;;                                              0 BANK0      1     1      0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _setPA0                                               1     1      0      22
   810 ;;                                              0 BANK0      1     1      0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _setPB1                                               1     1      0      22
   813 ;;                                              0 BANK0      1     1      0
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (1) _setPB0                                               1     1      0      22
   816 ;;                                              0 BANK0      1     1      0
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (1) _initPin                                              0     0      0       0
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; Estimated maximum stack depth 3
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (4) _ISR                                                  4     4      0     495
   831 ;;                                              9 COMMON     4     4      0
   832 ;;                i1_setAD_ConvertFlag
   833 ;;                            _adc_get
   834 ;;            _vPutSampleDataIntoTable
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   837 ;;                                              0 COMMON     1     1      0
   838 ;; ---------------------------------------------------------------------------------
   839 ;; (5) _adc_get                                              4     2      2      24
   840 ;;                                              0 COMMON     4     2      2
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (5) _vPutSampleDataIntoTable                              5     2      3     398
   843 ;;                                              4 COMMON     5     2      3
   844 ;;                            _adc_get (ARG)
   845 ;; ---------------------------------------------------------------------------------
   846 ;; Estimated maximum stack depth 5
   847 ;; ---------------------------------------------------------------------------------
   848 ;; Call Graph Graphs:
   849 ;; _main (ROOT)
   850 ;;   _initPin
   851 ;;   _clock_config
   852 ;;   _timer1_config
   853 ;;   _timer1_interrupt_config
   854 ;;   _adc_test_init
   855 ;;   _dac_init
   856 ;;   _adc_start
   857 ;;   _process_AD_Converter_Value
   858 ;;     _getAD_ConvertFlag
   859 ;;     _setAD_ConvertFlag
   860 ;;     _AD_Sample
   861 ;;       _adc_test_init
   862 ;;     _adc_start
   863 ;;   _isPermitSampleTime
   864 ;;   _clrSampeTime
   865 ;;   _getAdOriginalCh14Value
   866 ;;     _Filter
   867 ;;   _clearPinPortAndTimer
   868 ;;     _clearAllTimer
   869 ;;       _clearTwelveHoursTimer
   870 ;;       _clearThreeHoursTimer
   871 ;;       _clearTwentySecondsTimer
   872 ;;   _setPA6
   873 ;;   _getAdOriginalCh1Value
   874 ;;     _Filter
   875 ;;   _startTwelveHourTimer
   876 ;;   _isFinishedTwelveHoursTimer
   877 ;;   _getAdOriginaCh4Value
   878 ;;     _Filter
   879 ;;   _setPA2
   880 ;;   _setPA3
   881 ;;   _setPA0
   882 ;;   _setPA1
   883 ;;   _setPB0
   884 ;;   _startTwentySecondsTimer
   885 ;;   _isFinishedTwentySecondsTimer
   886 ;;   _clearTwentySecondsTimer
   887 ;;   _startThreeHoursTimer
   888 ;;   _isFinishedThreeHoursTimer
   889 ;;   _clearThreeHoursTimer
   890 ;;   _setPB1
   891 ;;   _clearAllTimer
   892 ;;     _clearTwelveHoursTimer
   893 ;;     _clearThreeHoursTimer
   894 ;;     _clearTwentySecondsTimer
   895 ;;
   896 ;; _ISR (ROOT)
   897 ;;   i1_setAD_ConvertFlag
   898 ;;   _adc_get
   899 ;;   _vPutSampleDataIntoTable
   900 ;;     _adc_get (ARG)
   901 ;;
   902 ;; Address spaces:
   903 ;;Name               Size   Autos  Total    Cost      Usage
   904 ;;BITCOMMON            E      0       0       0        0.0%
   905 ;;NULL                 0      0       0       0        0.0%
   906 ;;CODE                 0      0       0       0        0.0%
   907 ;;COMMON               E      D       E       1      100.0%
   908 ;;BITSFR0              0      0       0       1        0.0%
   909 ;;SFR0                 0      0       0       1        0.0%
   910 ;;BITSFR1              0      0       0       2        0.0%
   911 ;;SFR1                 0      0       0       2        0.0%
   912 ;;STACK                0      0       7       2        0.0%
   913 ;;ABS                  0      0      D6       3        0.0%
   914 ;;BITBANK0            50      0       0       4        0.0%
   915 ;;BITSFR3              0      0       0       4        0.0%
   916 ;;SFR3                 0      0       0       4        0.0%
   917 ;;BANK0               50     28      4F       5       98.8%
   918 ;;BITSFR2              0      0       0       5        0.0%
   919 ;;SFR2                 0      0       0       5        0.0%
   920 ;;DATA                 0      0      DD       6        0.0%
   921 ;;BITBANK1            50      0       0       7        0.0%
   922 ;;BANK1               50      0      49       8       91.3%
   923 ;;BITBANK3            60      0       0       9        0.0%
   924 ;;BANK3               60      0      30      10       50.0%
   925 ;;BITBANK2            60      0       0      11        0.0%
   926 ;;BANK2               60      0       0      12        0.0%
   927                           
   928                           
   929 ;; *************** function _main *****************
   930 ;; Defined at:
   931 ;;		line 459 in file "C:\temp\dev\AK7030-OTP\main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;		None               void
   938 ;; Registers used:
   939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 17F/0
   942 ;;		On exit  : 60/0
   943 ;;		Unchanged: FFE00/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels required when called:    5
   951 ;; This function calls:
   952 ;;		_initPin
   953 ;;		_clock_config
   954 ;;		_timer1_config
   955 ;;		_timer1_interrupt_config
   956 ;;		_adc_test_init
   957 ;;		_dac_init
   958 ;;		_adc_start
   959 ;;		_process_AD_Converter_Value
   960 ;;		_isPermitSampleTime
   961 ;;		_clrSampeTime
   962 ;;		_getAdOriginalCh14Value
   963 ;;		_clearPinPortAndTimer
   964 ;;		_setPA6
   965 ;;		_getAdOriginalCh1Value
   966 ;;		_startTwelveHourTimer
   967 ;;		_isFinishedTwelveHoursTimer
   968 ;;		_getAdOriginaCh4Value
   969 ;;		_setPA2
   970 ;;		_setPA3
   971 ;;		_setPA0
   972 ;;		_setPA1
   973 ;;		_setPB0
   974 ;;		_startTwentySecondsTimer
   975 ;;		_isFinishedTwentySecondsTimer
   976 ;;		_clearTwentySecondsTimer
   977 ;;		_startThreeHoursTimer
   978 ;;		_isFinishedThreeHoursTimer
   979 ;;		_clearThreeHoursTimer
   980 ;;		_setPB1
   981 ;;		_clearAllTimer
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986  0013                     _main:	
   987                           
   988                           ;main.c: 465: enum setp_Adc4
   989                           ;main.c: 466: {
   990                           ;main.c: 467: ADC4_STEP_INIT = 0,
   991                           ;main.c: 468: ADC4_STEP_FIRST,
   992                           ;main.c: 469: ADC4_STEP_SECOND,
   993                           ;main.c: 470: ADC4_STEP_THIRD,
   994                           ;main.c: 471: ADC4_STEP_FOURTH_PREFIX1,
   995                           ;main.c: 472: ADC4_STEP_FOURTH_PREFIX2,
   996                           ;main.c: 473: ADC4_STEP_FOURTH_PREFIX3,
   997                           ;main.c: 474: ADC4_STEP_FOURTH_PREFIX4,
   998                           ;main.c: 475: ADC4_STEP_FOURTH_PREFIX5,
   999                           ;main.c: 476: ADC4_STEP_FOURTH_PREFIX6,
  1000                           ;main.c: 477: ADC4_STEP_FOURTH,
  1001                           ;main.c: 478: ADC4_STEP_FOURTH_SUFFIX1,
  1002                           ;main.c: 479: ADC4_STEP_FOURTH_SUFFIX2,
  1003                           
  1004                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1005  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1006  0014  1005               	bcf	5,0
  1007                           
  1008                           ;main.c: 500: TRISA1 = 0;
  1009  0015  1085               	bcf	5,1
  1010                           
  1011                           ;main.c: 501: TRISA2 = 0;
  1012  0016  1105               	bcf	5,2
  1013                           
  1014                           ;main.c: 502: TRISA3 = 0;
  1015  0017  1185               	bcf	5,3
  1016                           
  1017                           ;main.c: 503: TRISB0 = 0;
  1018  0018  1006               	bcf	6,0
  1019                           
  1020                           ;main.c: 504: TRISB1 = 0;
  1021  0019  1086               	bcf	6,1
  1022                           
  1023                           ;main.c: 505: TRISA6 = 0;
  1024  001A  1305               	bcf	5,6
  1025                           
  1026                           ;main.c: 507: TRISB7 = 0;
  1027  001B  1386               	bcf	6,7
  1028                           
  1029                           ;main.c: 508: TRISB6 = 0;
  1030  001C  1306               	bcf	6,6
  1031                           
  1032                           ;main.c: 511: initPin();
  1033  001D  118A  2727  118A   	fcall	_initPin
  1034                           
  1035                           ;main.c: 514: TRISB2 = 1;
  1036  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1037  0021  1506               	bsf	6,2
  1038                           
  1039                           ;main.c: 517: TRISA7 = 1;
  1040  0022  1785               	bsf	5,7
  1041                           
  1042                           ;main.c: 519: TRISB4 = 1;
  1043  0023  1606               	bsf	6,4
  1044                           
  1045                           ;main.c: 521: clock_config();
  1046  0024  118A  27BB  118A   	fcall	_clock_config
  1047                           
  1048                           ;main.c: 522: timer1_config();
  1049  0027  118A  2797  118A   	fcall	_timer1_config
  1050                           
  1051                           ;main.c: 523: timer1_interrupt_config();
  1052  002A  118A  27F6  118A   	fcall	_timer1_interrupt_config
  1053                           
  1054                           ;main.c: 525: adc_test_init(0,3);
  1055  002D  3003               	movlw	3
  1056  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1057  002F  00A0               	movwf	?_adc_test_init
  1058  0030  3000               	movlw	0
  1059  0031  118A  2695  118A   	fcall	_adc_test_init
  1060                           
  1061                           ;main.c: 527: dac_init();
  1062  0034  118A  27F1  118A   	fcall	_dac_init
  1063                           
  1064                           ;main.c: 532: adc_start();
  1065  0037  118A  2670  118A   	fcall	_adc_start
  1066  003A                     l4560:	
  1067  003A  0064               	clrwdt	;#
  1068                           
  1069                           ;main.c: 575: process_AD_Converter_Value();
  1070  003B  118A  265C  118A   	fcall	_process_AD_Converter_Value
  1071                           
  1072                           ;main.c: 577: if( isPermitSampleTime() )
  1073  003E  118A  27EB  118A   	fcall	_isPermitSampleTime
  1074  0041  3A00               	xorlw	0
  1075  0042  1903               	skipnz
  1076  0043  283A               	goto	l4560
  1077                           
  1078                           ;main.c: 578: {
  1079                           ;main.c: 581: clrSampeTime();
  1080  0044  118A  27F9  118A   	fcall	_clrSampeTime
  1081                           
  1082                           ;main.c: 596: switch(enumMainLoopStep)
  1083  0047  2C8E               	goto	l5220
  1084  0048                     l4568:	
  1085                           
  1086                           ;main.c: 599: {
  1087                           ;main.c: 604: static unsigned char ucTimerZeroPoint5s = 0;
  1088                           ;main.c: 605: if(getAdOriginalCh14Value() > 1950)
  1089  0048  118A  25A4  118A   	fcall	_getAdOriginalCh14Value
  1090  004B  3007               	movlw	7
  1091  004C  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1092  004D  309F               	movlw	159
  1093  004E  1903               	skipnz
  1094  004F  0246               	subwf	?_getAdOriginalCh14Value,w
  1095  0050  1C03               	skipc
  1096  0051  2854               	goto	l4572
  1097                           
  1098                           ;main.c: 606: {
  1099                           ;main.c: 607: ucTimerZeroPoint5s++;
  1100  0052  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1101                           
  1102                           ;main.c: 608: }
  1103  0053  2855               	goto	l4574
  1104  0054                     l4572:	
  1105                           
  1106                           ;main.c: 609: else
  1107                           ;main.c: 610: ucTimerZeroPoint5s = 0;
  1108  0054  01EB               	clrf	main@ucTimerZeroPoint5s
  1109  0055                     l4574:	
  1110                           
  1111                           ;main.c: 612: if(ucTimerZeroPoint5s >= 5)
  1112  0055  3005               	movlw	5
  1113  0056  026B               	subwf	main@ucTimerZeroPoint5s,w
  1114  0057  1C03               	skipc
  1115  0058  283A               	goto	l4560
  1116                           
  1117                           ;main.c: 613: {
  1118                           ;main.c: 614: ucTimerZeroPoint5s = 0;
  1119  0059  01EB               	clrf	main@ucTimerZeroPoint5s
  1120  005A                     l4578:	
  1121                           
  1122                           ;main.c: 615: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1123  005A  01D1               	clrf	main@enumMainLoopStep
  1124  005B  0AD1               	incf	main@enumMainLoopStep,f
  1125  005C                     l748:	
  1126                           
  1127                           ;main.c: 616: }
  1128                           ;main.c: 617: break;
  1129  005C  283A               	goto	l4560
  1130  005D                     l4580:	
  1131                           
  1132                           ;main.c: 621: {
  1133                           ;main.c: 626: static unsigned char ucTimerZeroPoint3s = 0;
  1134                           ;main.c: 629: if(getAdOriginalCh14Value() > 1950)
  1135  005D  118A  25A4  118A   	fcall	_getAdOriginalCh14Value
  1136  0060  3007               	movlw	7
  1137  0061  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1138  0062  309F               	movlw	159
  1139  0063  1903               	skipnz
  1140  0064  0246               	subwf	?_getAdOriginalCh14Value,w
  1141  0065  1C03               	skipc
  1142  0066  286B               	goto	l4586
  1143                           
  1144                           ;main.c: 630: {
  1145                           ;main.c: 632: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1146  0067  3002               	movlw	2
  1147  0068  00D1               	movwf	main@enumMainLoopStep
  1148                           
  1149                           ;main.c: 634: ucTimerZeroPoint3s = 0;
  1150  0069  01EA               	clrf	main@ucTimerZeroPoint3s
  1151                           
  1152                           ;main.c: 636: }
  1153  006A  283A               	goto	l4560
  1154  006B                     l4586:	
  1155  006B  3003               	movlw	3
  1156                           
  1157                           ;main.c: 637: else
  1158                           ;main.c: 638: {
  1159                           ;main.c: 639: ucTimerZeroPoint3s++;
  1160  006C  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1161                           
  1162                           ;main.c: 641: if(ucTimerZeroPoint3s >= 3)
  1163  006D  026A               	subwf	main@ucTimerZeroPoint3s,w
  1164  006E  1C03               	skipc
  1165  006F  283A               	goto	l4560
  1166                           
  1167                           ;main.c: 642: {
  1168                           ;main.c: 643: ucTimerZeroPoint3s = 0;
  1169  0070  01EA               	clrf	main@ucTimerZeroPoint3s
  1170                           
  1171                           ;main.c: 645: clearPinPortAndTimer();
  1172  0071  118A  26AA  118A   	fcall	_clearPinPortAndTimer
  1173  0074  283A               	goto	l4560
  1174  0075                     l4594:	
  1175                           
  1176                           ;main.c: 653: {
  1177                           ;main.c: 658: static unsigned char ucTimerP5s = 0;
  1178                           ;main.c: 661: setPA6(1);
  1179  0075  3001               	movlw	1
  1180  0076  118A  27A1  118A   	fcall	_setPA6
  1181                           
  1182                           ;main.c: 663: if(ucTimerP5s < 5)
  1183  0079  3005               	movlw	5
  1184  007A  0268               	subwf	main@ucTimerP5s,w
  1185  007B  1803               	skipnc
  1186  007C  287F               	goto	l4600
  1187                           
  1188                           ;main.c: 664: ucTimerP5s++;
  1189  007D  0AE8               	incf	main@ucTimerP5s,f
  1190  007E  283A               	goto	l4560
  1191  007F                     l4600:	
  1192  007F  3003               	movlw	3
  1193                           
  1194                           ;main.c: 665: else
  1195                           ;main.c: 666: {
  1196                           ;main.c: 667: ucTimerP5s = 0;
  1197  0080  01E8               	clrf	main@ucTimerP5s
  1198                           
  1199                           ;main.c: 669: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1200  0081  2BEE               	goto	L15
  1201  0082                     l4604:	
  1202                           
  1203                           ;main.c: 676: {
  1204                           ;main.c: 681: static unsigned char ucTimerADC1ZeroP5s = 0;
  1205                           ;main.c: 683: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1206                           ;main.c: 685: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1207                           ;main.c: 687: static unsigned char ucTimerRightP5s = 0;
  1208                           ;main.c: 689: if(getAdOriginalCh1Value() < 115)
  1209  0082  118A  259A  118A   	fcall	_getAdOriginalCh1Value
  1210  0085  3000               	movlw	0
  1211  0086  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1212  0087  3073               	movlw	115
  1213  0088  1903               	skipnz
  1214  0089  0246               	subwf	?_getAdOriginalCh1Value,w
  1215  008A  1803               	skipnc
  1216  008B  288F               	goto	l4610
  1217                           
  1218                           ;main.c: 690: {
  1219                           ;main.c: 691: ucTimerADC1ZeroP5s = 0;
  1220  008C  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1221                           
  1222                           ;main.c: 693: ucTimerLessADC1ZeroP5s++;
  1223  008D  0AE7               	incf	main@ucTimerLessADC1ZeroP5s,f
  1224                           
  1225                           ;main.c: 694: }
  1226  008E  2891               	goto	l4614
  1227  008F                     l4610:	
  1228                           
  1229                           ;main.c: 695: else
  1230                           ;main.c: 696: {
  1231                           ;main.c: 697: ucTimerADC1ZeroP5s++;
  1232  008F  0ADB               	incf	main@ucTimerADC1ZeroP5s,f
  1233                           
  1234                           ;main.c: 699: ucTimerLessADC1ZeroP5s = 0;
  1235  0090  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1236  0091                     l4614:	
  1237                           
  1238                           ;main.c: 700: }
  1239                           ;main.c: 702: if(ucTimerADC1ZeroP5s >= 3)
  1240  0091  3003               	movlw	3
  1241  0092  025B               	subwf	main@ucTimerADC1ZeroP5s,w
  1242  0093  1C03               	skipc
  1243  0094  2898               	goto	l4620
  1244  0095  3004               	movlw	4
  1245                           
  1246                           ;main.c: 703: {
  1247                           ;main.c: 704: ucTimerADC1ZeroP5s = 0;
  1248  0096  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1249                           
  1250                           ;main.c: 705: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1251  0097  28B0               	goto	L2
  1252  0098                     l4620:	
  1253                           ;main.c: 706: }
  1254                           
  1255                           
  1256                           ;main.c: 707: else if( ucTimerLessADC1ZeroP5s >= 3)
  1257  0098  3003               	movlw	3
  1258  0099  0267               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1259  009A  1C03               	skipc
  1260  009B  28B1               	goto	l4634
  1261                           
  1262                           ;main.c: 708: {
  1263                           ;main.c: 710: if(getAdOriginalCh1Value() < 105)
  1264  009C  118A  259A  118A   	fcall	_getAdOriginalCh1Value
  1265  009F  3000               	movlw	0
  1266  00A0  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1267  00A1  3069               	movlw	105
  1268  00A2  1903               	skipnz
  1269  00A3  0246               	subwf	?_getAdOriginalCh1Value,w
  1270  00A4  1803               	skipnc
  1271  00A5  28A8               	goto	l4626
  1272                           
  1273                           ;main.c: 711: {
  1274                           ;main.c: 712: ucTimerRightP5s++;
  1275  00A6  0AE9               	incf	main@ucTimerRightP5s,f
  1276                           
  1277                           ;main.c: 713: }
  1278  00A7  28A9               	goto	l4628
  1279  00A8                     l4626:	
  1280                           
  1281                           ;main.c: 714: else
  1282                           ;main.c: 715: {
  1283                           ;main.c: 716: ucTimerRightP5s = 0;
  1284  00A8  01E9               	clrf	main@ucTimerRightP5s
  1285  00A9                     l4628:	
  1286                           
  1287                           ;main.c: 717: }
  1288                           ;main.c: 719: if(ucTimerRightP5s >= 3)
  1289  00A9  3003               	movlw	3
  1290  00AA  0269               	subwf	main@ucTimerRightP5s,w
  1291  00AB  1C03               	skipc
  1292  00AC  28B1               	goto	l4634
  1293  00AD  3008               	movlw	8
  1294                           
  1295                           ;main.c: 720: {
  1296                           ;main.c: 721: ucTimerLessADC1ZeroP5s = 0;
  1297  00AE  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1298                           
  1299                           ;main.c: 722: ucTimerRightP5s = 0;
  1300  00AF  01E9               	clrf	main@ucTimerRightP5s
  1301  00B0                     L2:	
  1302                           ;main.c: 723: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1303                           
  1304  00B0  00D1               	movwf	main@enumMainLoopStep
  1305  00B1                     l4634:	
  1306                           ;main.c: 730: else
  1307                           ;main.c: 731: {
  1308                           ;main.c: 732: ;
  1309                           
  1310                           ;main.c: 724: }
  1311                           
  1312                           
  1313                           ;main.c: 733: }
  1314                           ;main.c: 735: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1315  00B1  0851               	movf	main@enumMainLoopStep,w
  1316  00B2  3A08               	xorlw	8
  1317  00B3  1903               	skipnz
  1318  00B4  28B9               	goto	l4638
  1319  00B5  0851               	movf	main@enumMainLoopStep,w
  1320  00B6  3A04               	xorlw	4
  1321  00B7  1D03               	skipz
  1322  00B8  283A               	goto	l4560
  1323  00B9                     l4638:	
  1324                           
  1325                           ;main.c: 736: {
  1326                           ;main.c: 737: ucTimerRightP5s = 0;
  1327  00B9  01E9               	clrf	main@ucTimerRightP5s
  1328                           
  1329                           ;main.c: 738: ucTimerADC1ZeroP5s = 0;
  1330  00BA  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1331                           
  1332                           ;main.c: 739: ucTimerLessADC1ZeroP5s = 0;
  1333  00BB  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1334  00BC  283A               	goto	l4560
  1335  00BD                     l4640:	
  1336                           
  1337                           ;main.c: 747: {
  1338                           ;main.c: 753: startTwelveHourTimer(36000);
  1339  00BD  30A0               	movlw	160
  1340  00BE  00A0               	movwf	?_startTwelveHourTimer
  1341  00BF  308C               	movlw	140
  1342  00C0  00A1               	movwf	?_startTwelveHourTimer+1
  1343  00C1  118A  2713  118A   	fcall	_startTwelveHourTimer
  1344                           
  1345                           ;main.c: 754: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1346  00C4  3005               	movlw	5
  1347  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1348  00C6  00D1               	movwf	main@enumMainLoopStep
  1349                           
  1350                           ;main.c: 756: bCheckTweHour = 0;
  1351  00C7  01CF               	clrf	main@bCheckTweHour
  1352                           
  1353                           ;main.c: 758: break;
  1354  00C8  283A               	goto	l4560
  1355  00C9                     l4646:	
  1356                           
  1357                           ;main.c: 762: {
  1358                           ;main.c: 766: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1359  00C9  118A  278B  118A   	fcall	_isFinishedTwelveHoursTimer
  1360  00CC  3A00               	xorlw	0
  1361  00CD  1903               	skipnz
  1362  00CE  2B7C               	goto	l5100
  1363  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1364  00D0  08CF               	movf	main@bCheckTweHour,f
  1365  00D1  1D03               	skipz
  1366  00D2  2B7C               	goto	l5100
  1367                           
  1368                           ;main.c: 767: {
  1369                           ;main.c: 768: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1370  00D3  3009               	movlw	9
  1371  00D4  00D1               	movwf	main@enumMainLoopStep
  1372                           
  1373                           ;main.c: 769: bCheckTweHour = 1;
  1374  00D5  01CF               	clrf	main@bCheckTweHour
  1375  00D6  0ACF               	incf	main@bCheckTweHour,f
  1376                           
  1377                           ;main.c: 770: }
  1378  00D7  283A               	goto	l4560
  1379  00D8                     l790:	
  1380                           ;main.c: 776: {
  1381                           ;main.c: 777: case ADC4_STEP_INIT:
  1382                           
  1383                           
  1384                           ;main.c: 778: {
  1385                           ;main.c: 783: ucADC4_Step = ADC4_STEP_FIRST;
  1386  00D8  01D2               	clrf	main@ucADC4_Step
  1387  00D9  0AD2               	incf	main@ucADC4_Step,f
  1388                           
  1389                           ;main.c: 784: break;
  1390  00DA  283A               	goto	l4560
  1391  00DB                     l4654:	
  1392                           
  1393                           ;main.c: 788: {
  1394                           ;main.c: 792: static unsigned int uiOldValue = 0, uiMinValue = 0, uiMaxValue = 0;
  1395                           ;main.c: 794: static unsigned char bInitFlag = 0;
  1396                           ;main.c: 796: if( 0 == bInitFlag)
  1397  00DB  08D0               	movf	main@bInitFlag,f
  1398  00DC  1D03               	skipz
  1399  00DD  28E7               	goto	l4660
  1400                           
  1401                           ;main.c: 797: {
  1402                           ;main.c: 798: bInitFlag = 1;
  1403  00DE  01D0               	clrf	main@bInitFlag
  1404  00DF  0AD0               	incf	main@bInitFlag,f
  1405                           
  1406                           ;main.c: 799: uiOldValue = getAdOriginaCh4Value();
  1407  00E0  118A  2590  118A   	fcall	_getAdOriginaCh4Value
  1408  00E3  0847               	movf	?_getAdOriginaCh4Value+1,w
  1409  00E4  00C9               	movwf	main@uiOldValue+1
  1410  00E5  0846               	movf	?_getAdOriginaCh4Value,w
  1411  00E6  00C8               	movwf	main@uiOldValue
  1412  00E7                     l4660:	
  1413                           
  1414                           ;main.c: 800: }
  1415                           ;main.c: 809: if(LESS_THAN_1911 == ucChannel4Type)
  1416  00E7  08D3               	movf	main@ucChannel4Type,f
  1417  00E8  1D03               	skipz
  1418  00E9  28EF               	goto	l4666
  1419                           
  1420                           ;main.c: 810: {
  1421                           ;main.c: 811: uiMinValue = 0;
  1422  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1423  00EB  308B               	movlw	139
  1424  00EC  01A8               	clrf	main@uiMinValue^(0+128)
  1425  00ED  01A9               	clrf	(main@uiMinValue+1)^(0+128)
  1426                           
  1427                           ;main.c: 812: uiMaxValue = 1931;
  1428  00EE  28F7               	goto	L16
  1429  00EF                     l4666:	
  1430                           ;main.c: 813: }
  1431                           
  1432                           
  1433                           ;main.c: 814: else if(BETWEEN_1911_AND_2067 == ucChannel4Type)
  1434  00EF  0B53               	decfsz	main@ucChannel4Type,w
  1435  00F0  28FA               	goto	l4670
  1436                           
  1437                           ;main.c: 815: {
  1438                           ;main.c: 816: uiMinValue = 1931 - 40;
  1439  00F1  3063               	movlw	99
  1440  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1441  00F3  00A8               	movwf	main@uiMinValue^(0+128)
  1442  00F4  3007               	movlw	7
  1443  00F5  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1444                           
  1445                           ;main.c: 817: uiMaxValue = 2047;
  1446  00F6  30FF               	movlw	255
  1447  00F7                     L16:	
  1448  00F7  00A6               	movwf	main@uiMaxValue^(0+128)
  1449  00F8  3007               	movlw	7
  1450  00F9  2913               	goto	L3
  1451  00FA                     l4670:	
  1452                           ;main.c: 818: }
  1453                           
  1454                           
  1455                           ;main.c: 819: else if(BETWEEN_2067_AND_2204 == ucChannel4Type)
  1456  00FA  0853               	movf	main@ucChannel4Type,w
  1457  00FB  3A02               	xorlw	2
  1458  00FC  1D03               	skipz
  1459  00FD  2905               	goto	l4674
  1460                           
  1461                           ;main.c: 820: {
  1462                           ;main.c: 821: uiMinValue = 2047 - 40;
  1463  00FE  30D7               	movlw	215
  1464  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0100  00A8               	movwf	main@uiMinValue^(0+128)
  1466  0101  3007               	movlw	7
  1467  0102  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1468                           
  1469                           ;main.c: 822: uiMaxValue = 2164;
  1470  0103  3074               	movlw	116
  1471  0104  2911               	goto	L17
  1472  0105                     l4674:	
  1473                           ;main.c: 823: }
  1474                           
  1475                           
  1476                           ;main.c: 824: else if(BETWEEN_2204_AND_2340 == ucChannel4Type)
  1477  0105  0853               	movf	main@ucChannel4Type,w
  1478  0106  3A03               	xorlw	3
  1479  0107  1D03               	skipz
  1480  0108  290B               	goto	l4678
  1481                           
  1482                           ;main.c: 825: {
  1483                           ;main.c: 826: uiMinValue = 2164 - 40;
  1484  0109  304C               	movlw	76
  1485  010A  290C               	goto	L19
  1486  010B                     l4678:	
  1487                           ;main.c: 828: }
  1488                           
  1489                           ;main.c: 827: uiMaxValue = 2281;
  1490                           
  1491                           
  1492                           ;main.c: 829: else
  1493                           ;main.c: 830: {
  1494                           ;main.c: 831: uiMinValue = 2281 - 40;
  1495  010B  30C1               	movlw	193
  1496  010C                     L19:	
  1497  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1498  010D  00A8               	movwf	main@uiMinValue^(0+128)
  1499  010E  3008               	movlw	8
  1500  010F  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1501                           
  1502                           ;main.c: 832: uiMaxValue = 2281;
  1503  0110  30E9               	movlw	233
  1504  0111                     L17:	
  1505  0111  00A6               	movwf	main@uiMaxValue^(0+128)
  1506  0112  3008               	movlw	8
  1507  0113                     L3:	
  1508  0113  00A7               	movwf	(main@uiMaxValue^(0+128)+1)
  1509                           
  1510                           ;main.c: 833: }
  1511                           ;main.c: 836: if(( getAdOriginaCh4Value() < uiMinValue )
  1512                           ;main.c: 837: || (getAdOriginaCh4Value() > uiMaxValue ))
  1513  0114  118A  2590  118A   	fcall	_getAdOriginaCh4Value
  1514  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0118  0829               	movf	(main@uiMinValue+1)^(0+128),w
  1516  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1517  011A  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1518  011B  1D03               	skipz
  1519  011C  2921               	goto	u1945
  1520  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1521  011E  0828               	movf	main@uiMinValue^(0+128),w
  1522  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0120  0246               	subwf	?_getAdOriginaCh4Value,w
  1524  0121                     u1945:	
  1525  0121  1C03               	skipc
  1526  0122  2931               	goto	l4684
  1527  0123  118A  2590  118A   	fcall	_getAdOriginaCh4Value
  1528  0126  0847               	movf	?_getAdOriginaCh4Value+1,w
  1529  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0128  0227               	subwf	(main@uiMaxValue+1)^(0+128),w
  1531  0129  1D03               	skipz
  1532  012A  292F               	goto	u1955
  1533  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1534  012C  0846               	movf	?_getAdOriginaCh4Value,w
  1535  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1536  012E  0226               	subwf	main@uiMaxValue^(0+128),w
  1537  012F                     u1955:	
  1538  012F  1803               	skipnc
  1539  0130  2938               	goto	l4686
  1540  0131                     l4684:	
  1541                           
  1542                           ;main.c: 838: {
  1543                           ;main.c: 839: uiOldValue = getAdOriginaCh4Value();
  1544  0131  118A  2590  118A   	fcall	_getAdOriginaCh4Value
  1545  0134  0847               	movf	?_getAdOriginaCh4Value+1,w
  1546  0135  00C9               	movwf	main@uiOldValue+1
  1547  0136  0846               	movf	?_getAdOriginaCh4Value,w
  1548  0137  00C8               	movwf	main@uiOldValue
  1549  0138                     l4686:	
  1550                           
  1551                           ;main.c: 840: }
  1552                           ;main.c: 842: if( uiOldValue < 1931 )
  1553  0138  3007               	movlw	7
  1554  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1555  013A  0249               	subwf	main@uiOldValue+1,w
  1556  013B  308B               	movlw	139
  1557  013C  1903               	skipnz
  1558  013D  0248               	subwf	main@uiOldValue,w
  1559  013E  1803               	skipnc
  1560  013F  2942               	goto	l4690
  1561                           
  1562                           ;main.c: 843: ucChannel4Type = LESS_THAN_1911;
  1563  0140  01D3               	clrf	main@ucChannel4Type
  1564  0141  2960               	goto	l814
  1565  0142                     l4690:	
  1566                           
  1567                           ;main.c: 844: else if( uiOldValue < 2047 )
  1568  0142  3007               	movlw	7
  1569  0143  0249               	subwf	main@uiOldValue+1,w
  1570  0144  30FF               	movlw	255
  1571  0145  1903               	skipnz
  1572  0146  0248               	subwf	main@uiOldValue,w
  1573  0147  1803               	skipnc
  1574  0148  294C               	goto	l4694
  1575                           
  1576                           ;main.c: 845: ucChannel4Type = BETWEEN_1911_AND_2067;
  1577  0149  01D3               	clrf	main@ucChannel4Type
  1578  014A  0AD3               	incf	main@ucChannel4Type,f
  1579  014B  2960               	goto	l814
  1580  014C                     l4694:	
  1581                           
  1582                           ;main.c: 846: else if( uiOldValue < 2164 )
  1583  014C  3008               	movlw	8
  1584  014D  0249               	subwf	main@uiOldValue+1,w
  1585  014E  3074               	movlw	116
  1586  014F  1903               	skipnz
  1587  0150  0248               	subwf	main@uiOldValue,w
  1588  0151  1803               	skipnc
  1589  0152  2955               	goto	l4698
  1590                           
  1591                           ;main.c: 847: ucChannel4Type = BETWEEN_2067_AND_2204;
  1592  0153  3002               	movlw	2
  1593  0154  295F               	goto	L4
  1594  0155                     l4698:	
  1595                           
  1596                           ;main.c: 848: else if( uiOldValue < 2281 )
  1597  0155  3008               	movlw	8
  1598  0156  0249               	subwf	main@uiOldValue+1,w
  1599  0157  30E9               	movlw	233
  1600  0158  1903               	skipnz
  1601  0159  0248               	subwf	main@uiOldValue,w
  1602  015A  1803               	skipnc
  1603  015B  295E               	goto	l4702
  1604                           
  1605                           ;main.c: 849: ucChannel4Type = BETWEEN_2204_AND_2340;
  1606  015C  3003               	movlw	3
  1607  015D  295F               	goto	L4
  1608  015E                     l4702:	
  1609                           
  1610                           ;main.c: 850: else
  1611                           ;main.c: 851: ucChannel4Type = MORE_THAN_2340;
  1612  015E  3004               	movlw	4
  1613  015F                     L4:	
  1614  015F  00D3               	movwf	main@ucChannel4Type
  1615  0160                     l814:	
  1616                           
  1617                           ;main.c: 853: ucADC4_Step = ADC4_STEP_SECOND;
  1618  0160  3002               	movlw	2
  1619  0161  2B71               	goto	L14
  1620  0162                     l829:	
  1621                           ;main.c: 871: {
  1622                           ;main.c: 872: case 0:
  1623                           
  1624                           ;main.c: 854: break;
  1625                           
  1626                           
  1627                           ;main.c: 873: {
  1628                           ;main.c: 876: PB0 = 1;
  1629  0162  1406               	bsf	6,0
  1630  0163                     l4704:	
  1631                           
  1632                           ;main.c: 880: ucLoaderStep++;
  1633  0163  0AD6               	incf	main@ucLoaderStep,f
  1634                           
  1635                           ;main.c: 881: break;
  1636  0164  283A               	goto	l4560
  1637  0165                     l4706:	
  1638                           
  1639                           ;main.c: 885: {
  1640                           ;main.c: 886: if(ucTimerDelay >= 5)
  1641  0165  3005               	movlw	5
  1642  0166  025C               	subwf	main@ucTimerDelay,w
  1643  0167  1C03               	skipc
  1644  0168  296C               	goto	l4714
  1645                           
  1646                           ;main.c: 887: {
  1647                           ;main.c: 889: PA0 = 1;
  1648  0169  1405               	bsf	5,0
  1649  016A                     l4710:	
  1650                           
  1651                           ;main.c: 893: ucTimerDelay = 0;
  1652  016A  01DC               	clrf	main@ucTimerDelay
  1653  016B  2963               	goto	l4704
  1654  016C                     l4714:	
  1655                           
  1656                           ;main.c: 896: else
  1657                           ;main.c: 897: ucTimerDelay++;
  1658  016C  0ADC               	incf	main@ucTimerDelay,f
  1659  016D  283A               	goto	l4560
  1660  016E                     l4716:	
  1661                           
  1662                           ;main.c: 902: {
  1663                           ;main.c: 903: if(ucTimerDelay >= 5)
  1664  016E  3005               	movlw	5
  1665  016F  025C               	subwf	main@ucTimerDelay,w
  1666  0170  1C03               	skipc
  1667  0171  296C               	goto	l4714
  1668                           
  1669                           ;main.c: 904: {
  1670                           ;main.c: 906: PA1= 1;
  1671  0172  1485               	bsf	5,1
  1672  0173  296A               	goto	l4710
  1673  0174                     l4726:	
  1674                           
  1675                           ;main.c: 920: {
  1676                           ;main.c: 921: if(ucTimerDelay >= 5)
  1677  0174  3005               	movlw	5
  1678  0175  025C               	subwf	main@ucTimerDelay,w
  1679  0176  1C03               	skipc
  1680  0177  296C               	goto	l4714
  1681                           
  1682                           ;main.c: 922: {
  1683                           ;main.c: 924: PA2= 1;
  1684  0178  1505               	bsf	5,2
  1685  0179  296A               	goto	l4710
  1686  017A                     l4736:	
  1687                           
  1688                           ;main.c: 938: {
  1689                           ;main.c: 939: if(ucTimerDelay >= 5)
  1690  017A  3005               	movlw	5
  1691  017B  025C               	subwf	main@ucTimerDelay,w
  1692  017C  1C03               	skipc
  1693  017D  296C               	goto	l4714
  1694                           
  1695                           ;main.c: 940: {
  1696                           ;main.c: 942: PA3 = 1;
  1697  017E  1585               	bsf	5,3
  1698  017F  296A               	goto	l4710
  1699  0180                     l4746:	
  1700                           
  1701                           ;main.c: 955: {
  1702                           ;main.c: 956: if(ucTimerDelay >= 5)
  1703  0180  3005               	movlw	5
  1704  0181  025C               	subwf	main@ucTimerDelay,w
  1705  0182  1C03               	skipc
  1706  0183  296C               	goto	l4714
  1707                           
  1708                           ;main.c: 957: {
  1709                           ;main.c: 959: PB0 = 0;
  1710  0184  1006               	bcf	6,0
  1711                           
  1712                           ;main.c: 960: PA0 = 0;
  1713  0185  1005               	bcf	5,0
  1714                           
  1715                           ;main.c: 961: PA1 = 0;
  1716  0186  1085               	bcf	5,1
  1717                           
  1718                           ;main.c: 962: PA2 = 0;
  1719  0187  1105               	bcf	5,2
  1720                           
  1721                           ;main.c: 963: PA3 = 0;
  1722  0188  1185               	bcf	5,3
  1723  0189  296A               	goto	l4710
  1724  018A                     l4756:	
  1725                           
  1726                           ;main.c: 980: {
  1727                           ;main.c: 981: if(ucTimerDelay >= 1)
  1728  018A  085C               	movf	main@ucTimerDelay,w
  1729  018B  1903               	btfsc	3,2
  1730  018C  296C               	goto	l4714
  1731                           
  1732                           ;main.c: 982: {
  1733                           ;main.c: 983: ucTimerDelay = 0;
  1734  018D  01DC               	clrf	main@ucTimerDelay
  1735                           
  1736                           ;main.c: 985: ucLoaderStep = 0;
  1737  018E  01D6               	clrf	main@ucLoaderStep
  1738  018F                     l4760:	
  1739                           
  1740                           ;main.c: 986: ucADC4_Step = ADC4_STEP_THIRD;
  1741  018F  3003               	movlw	3
  1742  0190  2B71               	goto	L14
  1743  0191                     l4766:	
  1744                           ;main.c: 987: }
  1745                           
  1746  0191  0856               	movf	main@ucLoaderStep,w
  1747                           
  1748                           ; Switch size 1, requested type "space"
  1749                           ; Number of cases is 7, Range of values is 0 to 6
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; direct_byte           21     7 (fixed)
  1753                           ; simple_byte           22    12 (average)
  1754                           ; jumptable            260     6 (fixed)
  1755                           ; rangetable            11     6 (fixed)
  1756                           ; spacedrange           20     9 (fixed)
  1757                           ; locatedrange           7     3 (fixed)
  1758                           ;	Chosen strategy is direct_byte
  1759  0192  0084               	movwf	4
  1760  0193  3007               	movlw	7
  1761  0194  0204               	subwf	4,w
  1762  0195  1803               	skipnc
  1763  0196  283A               	goto	l4560
  1764  0197  3007               	movlw	high S5510
  1765  0198  008A               	movwf	10
  1766  0199  1003               	clrc
  1767  019A  0D04               	rlf	4,w
  1768  019B  3E4B               	addlw	low S5510
  1769  019C  0082               	movwf	2
  1770  019D                     l857:	
  1771                           ;main.c: 1006: {
  1772                           ;main.c: 1007: case 0:
  1773                           
  1774                           
  1775                           ;main.c: 1008: {
  1776                           ;main.c: 1010: PB0 = 1;
  1777  019D  1406               	bsf	6,0
  1778  019E                     l4768:	
  1779                           
  1780                           ;main.c: 1014: ucLoaderStep1++;
  1781  019E  0AD7               	incf	main@ucLoaderStep1,f
  1782                           
  1783                           ;main.c: 1015: break;
  1784  019F  283A               	goto	l4560
  1785  01A0                     l4770:	
  1786                           
  1787                           ;main.c: 1019: {
  1788                           ;main.c: 1020: if(ucTimerDelay1 >= 5)
  1789  01A0  3005               	movlw	5
  1790  01A1  025D               	subwf	main@ucTimerDelay1,w
  1791  01A2  1C03               	skipc
  1792  01A3  29A7               	goto	l4778
  1793                           
  1794                           ;main.c: 1021: {
  1795                           ;main.c: 1023: PA0 = 1;
  1796  01A4  1405               	bsf	5,0
  1797  01A5                     l4774:	
  1798                           
  1799                           ;main.c: 1027: ucTimerDelay1 = 0;
  1800  01A5  01DD               	clrf	main@ucTimerDelay1
  1801  01A6  299E               	goto	l4768
  1802  01A7                     l4778:	
  1803                           
  1804                           ;main.c: 1030: else
  1805                           ;main.c: 1031: ucTimerDelay1++;
  1806  01A7  0ADD               	incf	main@ucTimerDelay1,f
  1807  01A8  283A               	goto	l4560
  1808  01A9                     l4780:	
  1809                           
  1810                           ;main.c: 1036: {
  1811                           ;main.c: 1037: if(ucTimerDelay1 >= 5)
  1812  01A9  3005               	movlw	5
  1813  01AA  025D               	subwf	main@ucTimerDelay1,w
  1814  01AB  1C03               	skipc
  1815  01AC  29A7               	goto	l4778
  1816                           
  1817                           ;main.c: 1038: {
  1818                           ;main.c: 1040: PA1= 1;
  1819  01AD  1485               	bsf	5,1
  1820  01AE  29A5               	goto	l4774
  1821  01AF                     l4790:	
  1822                           
  1823                           ;main.c: 1053: {
  1824                           ;main.c: 1054: if(ucTimerDelay1 >= 5)
  1825  01AF  3005               	movlw	5
  1826  01B0  025D               	subwf	main@ucTimerDelay1,w
  1827  01B1  1C03               	skipc
  1828  01B2  29A7               	goto	l4778
  1829                           
  1830                           ;main.c: 1055: {
  1831                           ;main.c: 1057: setPA2(1);
  1832  01B3  3001               	movlw	1
  1833  01B4  118A  27CB  118A   	fcall	_setPA2
  1834  01B7  29A5               	goto	l4774
  1835  01B8                     l4800:	
  1836                           
  1837                           ;main.c: 1067: {
  1838                           ;main.c: 1068: if(ucTimerDelay1 >= 5)
  1839  01B8  3005               	movlw	5
  1840  01B9  025D               	subwf	main@ucTimerDelay1,w
  1841  01BA  1C03               	skipc
  1842  01BB  29A7               	goto	l4778
  1843                           
  1844                           ;main.c: 1069: {
  1845                           ;main.c: 1071: setPA3(1);
  1846  01BC  3001               	movlw	1
  1847  01BD  118A  27C3  118A   	fcall	_setPA3
  1848  01C0  29A5               	goto	l4774
  1849  01C1                     l4810:	
  1850                           
  1851                           ;main.c: 1081: {
  1852                           ;main.c: 1082: if(ucTimerDelay1 >= 5)
  1853  01C1  3005               	movlw	5
  1854  01C2  025D               	subwf	main@ucTimerDelay1,w
  1855  01C3  1C03               	skipc
  1856  01C4  29A7               	goto	l4778
  1857                           
  1858                           ;main.c: 1083: {
  1859                           ;main.c: 1085: setPA0(0);
  1860  01C5  3000               	movlw	0
  1861  01C6  118A  27DB  118A   	fcall	_setPA0
  1862                           
  1863                           ;main.c: 1087: setPA1(0);
  1864  01C9  3000               	movlw	0
  1865  01CA  118A  27D3  118A   	fcall	_setPA1
  1866                           
  1867                           ;main.c: 1089: setPA2(0);
  1868  01CD  3000               	movlw	0
  1869  01CE  118A  27CB  118A   	fcall	_setPA2
  1870                           
  1871                           ;main.c: 1091: setPA3(0);
  1872  01D1  3000               	movlw	0
  1873  01D2  118A  27C3  118A   	fcall	_setPA3
  1874  01D5  29A5               	goto	l4774
  1875  01D6                     l4820:	
  1876                           
  1877                           ;main.c: 1101: {
  1878                           ;main.c: 1102: if(ucTimerDelay1 >= 1)
  1879  01D6  085D               	movf	main@ucTimerDelay1,w
  1880  01D7  1903               	btfsc	3,2
  1881  01D8  29A7               	goto	l4778
  1882                           
  1883                           ;main.c: 1103: {
  1884                           ;main.c: 1104: ucTimerDelay1 = 0;
  1885  01D9  01DD               	clrf	main@ucTimerDelay1
  1886                           
  1887                           ;main.c: 1106: ucLoaderStep1 = 0;
  1888  01DA  01D7               	clrf	main@ucLoaderStep1
  1889  01DB  298F               	goto	l4760
  1890  01DC                     l4830:	
  1891  01DC  0857               	movf	main@ucLoaderStep1,w
  1892                           
  1893                           ; Switch size 1, requested type "space"
  1894                           ; Number of cases is 7, Range of values is 0 to 6
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; direct_byte           21     7 (fixed)
  1898                           ; simple_byte           22    12 (average)
  1899                           ; jumptable            260     6 (fixed)
  1900                           ; rangetable            11     6 (fixed)
  1901                           ; spacedrange           20     9 (fixed)
  1902                           ; locatedrange           7     3 (fixed)
  1903                           ;	Chosen strategy is direct_byte
  1904  01DD  0084               	movwf	4
  1905  01DE  3007               	movlw	7
  1906  01DF  0204               	subwf	4,w
  1907  01E0  1803               	skipnc
  1908  01E1  283A               	goto	l4560
  1909  01E2  3007               	movlw	high S5512
  1910  01E3  008A               	movwf	10
  1911  01E4  1003               	clrc
  1912  01E5  0D04               	rlf	4,w
  1913  01E6  3E59               	addlw	low S5512
  1914  01E7  0082               	movwf	2
  1915  01E8                     l4832:	
  1916                           
  1917                           ;main.c: 1130: {
  1918                           ;main.c: 1132: setPB0(1);
  1919  01E8  3001               	movlw	1
  1920  01E9  118A  27AA  118A   	fcall	_setPB0
  1921                           
  1922                           ;main.c: 1134: setPA0(1);
  1923  01EC  3001               	movlw	1
  1924  01ED  118A  27DB  118A   	fcall	_setPA0
  1925  01F0                     l4834:	
  1926                           
  1927                           ;main.c: 1135: ucLoaderStep2++;
  1928  01F0  0AD8               	incf	main@ucLoaderStep2,f
  1929                           
  1930                           ;main.c: 1136: break;
  1931  01F1  283A               	goto	l4560
  1932  01F2                     l4836:	
  1933                           
  1934                           ;main.c: 1140: {
  1935                           ;main.c: 1141: if(ucTimerDelay2 >= 5)
  1936  01F2  3005               	movlw	5
  1937  01F3  025E               	subwf	main@ucTimerDelay2,w
  1938  01F4  1C03               	skipc
  1939  01F5  29FC               	goto	l4844
  1940                           
  1941                           ;main.c: 1142: {
  1942                           ;main.c: 1144: setPA1(1);
  1943  01F6  3001               	movlw	1
  1944  01F7  118A  27D3  118A   	fcall	_setPA1
  1945  01FA                     l4840:	
  1946                           
  1947                           ;main.c: 1145: ucTimerDelay2 = 0;
  1948  01FA  01DE               	clrf	main@ucTimerDelay2
  1949  01FB  29F0               	goto	l4834
  1950  01FC                     l4844:	
  1951                           
  1952                           ;main.c: 1148: else
  1953                           ;main.c: 1149: ucTimerDelay2++;
  1954  01FC  0ADE               	incf	main@ucTimerDelay2,f
  1955  01FD  283A               	goto	l4560
  1956  01FE                     l4846:	
  1957                           
  1958                           ;main.c: 1154: {
  1959                           ;main.c: 1155: if(ucTimerDelay2 >= 5)
  1960  01FE  3005               	movlw	5
  1961  01FF  025E               	subwf	main@ucTimerDelay2,w
  1962  0200  1C03               	skipc
  1963  0201  29FC               	goto	l4844
  1964                           
  1965                           ;main.c: 1156: {
  1966                           ;main.c: 1158: setPA2(1);
  1967  0202  3001               	movlw	1
  1968  0203  118A  27CB  118A   	fcall	_setPA2
  1969  0206  29FA               	goto	l4840
  1970  0207                     l4856:	
  1971                           
  1972                           ;main.c: 1168: {
  1973                           ;main.c: 1169: if(ucTimerDelay2 >= 5)
  1974  0207  3005               	movlw	5
  1975  0208  025E               	subwf	main@ucTimerDelay2,w
  1976  0209  1C03               	skipc
  1977  020A  29FC               	goto	l4844
  1978                           
  1979                           ;main.c: 1170: {
  1980                           ;main.c: 1172: setPA3(1);
  1981  020B  3001               	movlw	1
  1982  020C  118A  27C3  118A   	fcall	_setPA3
  1983  020F  29FA               	goto	l4840
  1984  0210                     l4866:	
  1985                           
  1986                           ;main.c: 1182: {
  1987                           ;main.c: 1183: if(ucTimerDelay2 >= 5)
  1988  0210  3005               	movlw	5
  1989  0211  025E               	subwf	main@ucTimerDelay2,w
  1990  0212  1C03               	skipc
  1991  0213  29FC               	goto	l4844
  1992                           
  1993                           ;main.c: 1184: {
  1994                           ;main.c: 1187: setPA1(0);
  1995  0214  3000               	movlw	0
  1996  0215  118A  27D3  118A   	fcall	_setPA1
  1997                           
  1998                           ;main.c: 1189: setPA2(0);
  1999  0218  3000               	movlw	0
  2000  0219  118A  27CB  118A   	fcall	_setPA2
  2001                           
  2002                           ;main.c: 1191: setPA3(0);
  2003  021C  3000               	movlw	0
  2004  021D  118A  27C3  118A   	fcall	_setPA3
  2005  0220  29FA               	goto	l4840
  2006  0221                     l4876:	
  2007                           
  2008                           ;main.c: 1201: {
  2009                           ;main.c: 1202: if(ucTimerDelay2 >= 1)
  2010  0221  085E               	movf	main@ucTimerDelay2,w
  2011  0222  1903               	btfsc	3,2
  2012  0223  29FC               	goto	l4844
  2013                           
  2014                           ;main.c: 1203: {
  2015                           ;main.c: 1204: ucTimerDelay2 = 0;
  2016  0224  01DE               	clrf	main@ucTimerDelay2
  2017                           
  2018                           ;main.c: 1206: ucLoaderStep2 = 0;
  2019  0225  01D8               	clrf	main@ucLoaderStep2
  2020  0226  298F               	goto	l4760
  2021  0227                     l4886:	
  2022  0227  0858               	movf	main@ucLoaderStep2,w
  2023                           
  2024                           ; Switch size 1, requested type "space"
  2025                           ; Number of cases is 6, Range of values is 0 to 5
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; direct_byte           19     7 (fixed)
  2029                           ; simple_byte           19    10 (average)
  2030                           ; jumptable            260     6 (fixed)
  2031                           ; rangetable            10     6 (fixed)
  2032                           ; spacedrange           18     9 (fixed)
  2033                           ; locatedrange           6     3 (fixed)
  2034                           ;	Chosen strategy is direct_byte
  2035  0228  0084               	movwf	4
  2036  0229  3006               	movlw	6
  2037  022A  0204               	subwf	4,w
  2038  022B  1803               	skipnc
  2039  022C  283A               	goto	l4560
  2040  022D  3007               	movlw	high S5514
  2041  022E  008A               	movwf	10
  2042  022F  1003               	clrc
  2043  0230  0D04               	rlf	4,w
  2044  0231  3E67               	addlw	low S5514
  2045  0232  0082               	movwf	2
  2046  0233                     l4888:	
  2047                           
  2048                           ;main.c: 1230: {
  2049                           ;main.c: 1232: setPB0(1);
  2050  0233  3001               	movlw	1
  2051  0234  118A  27AA  118A   	fcall	_setPB0
  2052                           
  2053                           ;main.c: 1234: setPA0(1);
  2054  0237  3001               	movlw	1
  2055  0238  118A  27DB  118A   	fcall	_setPA0
  2056                           
  2057                           ;main.c: 1236: setPA1(1);
  2058  023B  3001               	movlw	1
  2059  023C  118A  27D3  118A   	fcall	_setPA1
  2060  023F                     l4890:	
  2061                           
  2062                           ;main.c: 1237: ucLoaderStep3++;
  2063  023F  0AD9               	incf	main@ucLoaderStep3,f
  2064                           
  2065                           ;main.c: 1238: break;
  2066  0240  283A               	goto	l4560
  2067  0241                     l4892:	
  2068                           
  2069                           ;main.c: 1242: {
  2070                           ;main.c: 1243: if(ucTimerDelay3 >= 5)
  2071  0241  3005               	movlw	5
  2072  0242  025F               	subwf	main@ucTimerDelay3,w
  2073  0243  1C03               	skipc
  2074  0244  2A4B               	goto	l4900
  2075                           
  2076                           ;main.c: 1244: {
  2077                           ;main.c: 1246: setPA2(1);
  2078  0245  3001               	movlw	1
  2079  0246  118A  27CB  118A   	fcall	_setPA2
  2080  0249                     l4896:	
  2081                           
  2082                           ;main.c: 1247: ucTimerDelay3 = 0;
  2083  0249  01DF               	clrf	main@ucTimerDelay3
  2084  024A  2A3F               	goto	l4890
  2085  024B                     l4900:	
  2086                           
  2087                           ;main.c: 1250: else
  2088                           ;main.c: 1251: ucTimerDelay3++;
  2089  024B  0ADF               	incf	main@ucTimerDelay3,f
  2090  024C  283A               	goto	l4560
  2091  024D                     l4902:	
  2092                           
  2093                           ;main.c: 1256: {
  2094                           ;main.c: 1257: if(ucTimerDelay3 >= 5)
  2095  024D  3005               	movlw	5
  2096  024E  025F               	subwf	main@ucTimerDelay3,w
  2097  024F  1C03               	skipc
  2098  0250  2A4B               	goto	l4900
  2099                           
  2100                           ;main.c: 1258: {
  2101                           ;main.c: 1260: setPA3(1);
  2102  0251  3001               	movlw	1
  2103  0252  118A  27C3  118A   	fcall	_setPA3
  2104  0255  2A49               	goto	l4896
  2105  0256                     l4912:	
  2106                           
  2107                           ;main.c: 1271: {
  2108                           ;main.c: 1272: if(ucTimerDelay3 >= 5)
  2109  0256  3005               	movlw	5
  2110  0257  025F               	subwf	main@ucTimerDelay3,w
  2111  0258  1C03               	skipc
  2112  0259  2A4B               	goto	l4900
  2113                           
  2114                           ;main.c: 1273: {
  2115                           ;main.c: 1276: setPA2(0);
  2116  025A  3000               	movlw	0
  2117  025B  118A  27CB  118A   	fcall	_setPA2
  2118                           
  2119                           ;main.c: 1278: setPA3(0);
  2120  025E  3000               	movlw	0
  2121  025F  118A  27C3  118A   	fcall	_setPA3
  2122  0262  2A49               	goto	l4896
  2123  0263                     l4922:	
  2124                           
  2125                           ;main.c: 1288: {
  2126                           ;main.c: 1289: if(ucTimerDelay3 >= 1)
  2127  0263  085F               	movf	main@ucTimerDelay3,w
  2128  0264  1903               	btfsc	3,2
  2129  0265  2A4B               	goto	l4900
  2130                           
  2131                           ;main.c: 1290: {
  2132                           ;main.c: 1291: ucTimerDelay3 = 0;
  2133  0266  01DF               	clrf	main@ucTimerDelay3
  2134                           
  2135                           ;main.c: 1293: ucLoaderStep3 = 0;
  2136  0267  01D9               	clrf	main@ucLoaderStep3
  2137  0268  298F               	goto	l4760
  2138  0269                     l4932:	
  2139  0269  0859               	movf	main@ucLoaderStep3,w
  2140                           
  2141                           ; Switch size 1, requested type "space"
  2142                           ; Number of cases is 5, Range of values is 0 to 4
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte           16     9 (average)
  2146                           ; direct_byte           17     7 (fixed)
  2147                           ; jumptable            260     6 (fixed)
  2148                           ; rangetable             9     6 (fixed)
  2149                           ; spacedrange           16     9 (fixed)
  2150                           ; locatedrange           5     3 (fixed)
  2151                           ;	Chosen strategy is simple_byte
  2152  026A  3A00               	xorlw	0	; case 0
  2153  026B  1903               	skipnz
  2154  026C  2A33               	goto	l4888
  2155  026D  3A01               	xorlw	1	; case 1
  2156  026E  1903               	skipnz
  2157  026F  2A41               	goto	l4892
  2158  0270  3A03               	xorlw	3	; case 2
  2159  0271  1903               	skipnz
  2160  0272  2A4D               	goto	l4902
  2161  0273  3A01               	xorlw	1	; case 3
  2162  0274  1903               	skipnz
  2163  0275  2A56               	goto	l4912
  2164  0276  3A07               	xorlw	7	; case 4
  2165  0277  1903               	skipnz
  2166  0278  2A63               	goto	l4922
  2167  0279  285C               	goto	l748
  2168  027A                     l4934:	
  2169                           
  2170                           ;main.c: 1317: {
  2171                           ;main.c: 1319: setPB0(1);
  2172  027A  3001               	movlw	1
  2173  027B  118A  27AA  118A   	fcall	_setPB0
  2174                           
  2175                           ;main.c: 1321: setPA0(1);
  2176  027E  3001               	movlw	1
  2177  027F  118A  27DB  118A   	fcall	_setPA0
  2178                           
  2179                           ;main.c: 1323: setPA1(1);
  2180  0282  3001               	movlw	1
  2181  0283  118A  27D3  118A   	fcall	_setPA1
  2182                           
  2183                           ;main.c: 1325: setPA2(1);
  2184  0286  3001               	movlw	1
  2185  0287  118A  27CB  118A   	fcall	_setPA2
  2186  028A                     l4936:	
  2187                           
  2188                           ;main.c: 1326: ucLoaderStep4++;
  2189  028A  0ADA               	incf	main@ucLoaderStep4,f
  2190                           
  2191                           ;main.c: 1327: break;
  2192  028B  283A               	goto	l4560
  2193  028C                     l4938:	
  2194                           
  2195                           ;main.c: 1331: {
  2196                           ;main.c: 1332: if(ucTimerDelay4 >= 5)
  2197  028C  3005               	movlw	5
  2198  028D  0260               	subwf	main@ucTimerDelay4,w
  2199  028E  1C03               	skipc
  2200  028F  2A96               	goto	l4946
  2201                           
  2202                           ;main.c: 1333: {
  2203                           ;main.c: 1335: setPA3(1);
  2204  0290  3001               	movlw	1
  2205  0291                     L7:	
  2206  0291  118A  27C3  118A   	fcall	_setPA3
  2207                           
  2208                           ;main.c: 1336: ucTimerDelay4 = 0;
  2209  0294  01E0               	clrf	main@ucTimerDelay4
  2210  0295  2A8A               	goto	l4936
  2211  0296                     l4946:	
  2212                           
  2213                           ;main.c: 1339: else
  2214                           ;main.c: 1340: ucTimerDelay4++;
  2215  0296  0AE0               	incf	main@ucTimerDelay4,f
  2216  0297  283A               	goto	l4560
  2217  0298                     l4948:	
  2218                           
  2219                           ;main.c: 1345: {
  2220                           ;main.c: 1346: if(ucTimerDelay4 >= 5)
  2221  0298  3005               	movlw	5
  2222  0299  0260               	subwf	main@ucTimerDelay4,w
  2223  029A  1C03               	skipc
  2224  029B  2A96               	goto	l4946
  2225                           
  2226                           ;main.c: 1347: {
  2227                           ;main.c: 1349: setPA3(0);
  2228  029C  3000               	movlw	0
  2229  029D  2A91               	goto	L7
  2230  029E                     l4958:	
  2231                           
  2232                           ;main.c: 1359: {
  2233                           ;main.c: 1360: if(ucTimerDelay4 >= 1)
  2234  029E  0860               	movf	main@ucTimerDelay4,w
  2235  029F  1903               	btfsc	3,2
  2236  02A0  2A96               	goto	l4946
  2237                           
  2238                           ;main.c: 1361: {
  2239                           ;main.c: 1362: ucTimerDelay4 = 0;
  2240  02A1  01E0               	clrf	main@ucTimerDelay4
  2241                           
  2242                           ;main.c: 1364: ucLoaderStep4 = 0;
  2243  02A2  01DA               	clrf	main@ucLoaderStep4
  2244  02A3  298F               	goto	l4760
  2245  02A4                     l4968:	
  2246  02A4  085A               	movf	main@ucLoaderStep4,w
  2247                           
  2248                           ; Switch size 1, requested type "space"
  2249                           ; Number of cases is 4, Range of values is 0 to 3
  2250                           ; switch strategies available:
  2251                           ; Name         Instructions Cycles
  2252                           ; simple_byte           13     7 (average)
  2253                           ; direct_byte           15     7 (fixed)
  2254                           ; jumptable            260     6 (fixed)
  2255                           ; rangetable             8     6 (fixed)
  2256                           ; spacedrange           14     9 (fixed)
  2257                           ; locatedrange           4     3 (fixed)
  2258                           ;	Chosen strategy is simple_byte
  2259  02A5  3A00               	xorlw	0	; case 0
  2260  02A6  1903               	skipnz
  2261  02A7  2A7A               	goto	l4934
  2262  02A8  3A01               	xorlw	1	; case 1
  2263  02A9  1903               	skipnz
  2264  02AA  2A8C               	goto	l4938
  2265  02AB  3A03               	xorlw	3	; case 2
  2266  02AC  1903               	skipnz
  2267  02AD  2A98               	goto	l4948
  2268  02AE  3A01               	xorlw	1	; case 3
  2269  02AF  1903               	skipnz
  2270  02B0  2A9E               	goto	l4958
  2271  02B1  285C               	goto	l748
  2272  02B2                     l4972:	
  2273  02B2  0853               	movf	main@ucChannel4Type,w
  2274                           
  2275                           ; Switch size 1, requested type "space"
  2276                           ; Number of cases is 5, Range of values is 0 to 4
  2277                           ; switch strategies available:
  2278                           ; Name         Instructions Cycles
  2279                           ; simple_byte           16     9 (average)
  2280                           ; direct_byte           17     7 (fixed)
  2281                           ; jumptable            260     6 (fixed)
  2282                           ; rangetable             9     6 (fixed)
  2283                           ; spacedrange           16     9 (fixed)
  2284                           ; locatedrange           5     3 (fixed)
  2285                           ;	Chosen strategy is simple_byte
  2286  02B3  3A00               	xorlw	0	; case 0
  2287  02B4  1903               	skipnz
  2288  02B5  2991               	goto	l4766
  2289  02B6  3A01               	xorlw	1	; case 1
  2290  02B7  1903               	skipnz
  2291  02B8  29DC               	goto	l4830
  2292  02B9  3A03               	xorlw	3	; case 2
  2293  02BA  1903               	skipnz
  2294  02BB  2A27               	goto	l4886
  2295  02BC  3A01               	xorlw	1	; case 3
  2296  02BD  1903               	skipnz
  2297  02BE  2A69               	goto	l4932
  2298  02BF  3A07               	xorlw	7	; case 4
  2299  02C0  1903               	skipnz
  2300  02C1  2AA4               	goto	l4968
  2301  02C2  285C               	goto	l748
  2302  02C3                     l4974:	
  2303                           
  2304                           ;main.c: 1388: {
  2305                           ;main.c: 1392: static unsigned char ucTimerDelayP2sLess = 0;
  2306                           ;main.c: 1394: static unsigned char ucTimerDelayP2sMore = 0;
  2307                           ;main.c: 1396: if( getAdOriginalCh1Value() <= 220 )
  2308  02C3  118A  259A  118A   	fcall	_getAdOriginalCh1Value
  2309  02C6  3000               	movlw	0
  2310  02C7  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2311  02C8  30DD               	movlw	221
  2312  02C9  1903               	skipnz
  2313  02CA  0246               	subwf	?_getAdOriginalCh1Value,w
  2314  02CB  1803               	skipnc
  2315  02CC  2AD0               	goto	l4980
  2316                           
  2317                           ;main.c: 1397: {
  2318                           ;main.c: 1398: ucTimerDelayP2sLess++;
  2319  02CD  0AE1               	incf	main@ucTimerDelayP2sLess,f
  2320                           
  2321                           ;main.c: 1399: ucTimerDelayP2sMore = 0;
  2322  02CE  01E2               	clrf	main@ucTimerDelayP2sMore
  2323                           
  2324                           ;main.c: 1400: }
  2325  02CF  2AD2               	goto	l4984
  2326  02D0                     l4980:	
  2327                           
  2328                           ;main.c: 1401: else
  2329                           ;main.c: 1402: {
  2330                           ;main.c: 1403: ucTimerDelayP2sMore++;
  2331  02D0  0AE2               	incf	main@ucTimerDelayP2sMore,f
  2332                           
  2333                           ;main.c: 1404: ucTimerDelayP2sLess = 0;
  2334  02D1  01E1               	clrf	main@ucTimerDelayP2sLess
  2335  02D2                     l4984:	
  2336                           
  2337                           ;main.c: 1405: }
  2338                           ;main.c: 1407: if( ucTimerDelayP2sLess >= 2)
  2339  02D2  3002               	movlw	2
  2340  02D3  0261               	subwf	main@ucTimerDelayP2sLess,w
  2341  02D4  1C03               	skipc
  2342  02D5  2ADE               	goto	l4992
  2343                           
  2344                           ;main.c: 1408: {
  2345                           ;main.c: 1409: ucTimerDelayP2sLess = 0;
  2346  02D6  01E1               	clrf	main@ucTimerDelayP2sLess
  2347                           
  2348                           ;main.c: 1410: ucTimerDelayP2sMore = 0;
  2349  02D7  01E2               	clrf	main@ucTimerDelayP2sMore
  2350                           
  2351                           ;main.c: 1412: startTwentySecondsTimer();
  2352  02D8  118A  273A  118A   	fcall	_startTwentySecondsTimer
  2353                           
  2354                           ;main.c: 1414: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX1;
  2355  02DB  3004               	movlw	4
  2356  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2357  02DD  00D2               	movwf	main@ucADC4_Step
  2358  02DE                     l4992:	
  2359                           
  2360                           ;main.c: 1415: }
  2361                           ;main.c: 1417: if(ucTimerDelayP2sMore >= 2)
  2362  02DE  3002               	movlw	2
  2363  02DF  0262               	subwf	main@ucTimerDelayP2sMore,w
  2364  02E0  1C03               	skipc
  2365  02E1  283A               	goto	l4560
  2366                           
  2367                           ;main.c: 1418: {
  2368                           ;main.c: 1419: ucTimerDelayP2sMore = 0;
  2369  02E2  01E2               	clrf	main@ucTimerDelayP2sMore
  2370                           
  2371                           ;main.c: 1420: ucTimerDelayP2sLess = 0;
  2372  02E3  01E1               	clrf	main@ucTimerDelayP2sLess
  2373  02E4                     l4996:	
  2374                           
  2375                           ;main.c: 1421: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX2;
  2376  02E4  3005               	movlw	5
  2377  02E5  2B70               	goto	L20
  2378  02E6                     l4998:	
  2379                           
  2380                           ;main.c: 1429: {
  2381                           ;main.c: 1433: if( !isFinishedTwentySecondsTimer() )
  2382  02E6  118A  277F  118A   	fcall	_isFinishedTwentySecondsTimer
  2383  02E9  3800               	iorlw	0
  2384  02EA  1903               	btfsc	3,2
  2385  02EB  2AE4               	goto	l4996
  2386                           
  2387                           ;main.c: 1435: else
  2388                           ;main.c: 1436: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX3;
  2389  02EC  3006               	movlw	6
  2390  02ED  2B70               	goto	L20
  2391  02EE                     l5004:	
  2392                           
  2393                           ;main.c: 1443: {
  2394                           ;main.c: 1447: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2395                           ;main.c: 1449: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f =
      +                           0;
  2396                           ;main.c: 1451: if((getAdOriginalCh14Value() > 2800))
  2397  02EE  118A  25A4  118A   	fcall	_getAdOriginalCh14Value
  2398  02F1  300A               	movlw	10
  2399  02F2  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2400  02F3  30F1               	movlw	241
  2401  02F4  1903               	skipnz
  2402  02F5  0246               	subwf	?_getAdOriginalCh14Value,w
  2403  02F6  1C03               	skipc
  2404  02F7  2AFB               	goto	l5010
  2405                           
  2406                           ;main.c: 1452: {
  2407                           ;main.c: 1453: ucTimerForDACR0_CNT1++;
  2408  02F8  0AE3               	incf	main@ucTimerForDACR0_CNT1,f
  2409                           
  2410                           ;main.c: 1454: ucTimerForDACR0_CNT2 = 0;
  2411  02F9  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2412                           
  2413                           ;main.c: 1455: }
  2414  02FA  2AFD               	goto	l5014
  2415  02FB                     l5010:	
  2416                           
  2417                           ;main.c: 1456: else
  2418                           ;main.c: 1457: {
  2419                           ;main.c: 1458: ucTimerForDACR0_CNT2++;
  2420  02FB  0AE5               	incf	main@ucTimerForDACR0_CNT2,f
  2421                           
  2422                           ;main.c: 1459: ucTimerForDACR0_CNT1 = 0;
  2423  02FC  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2424  02FD                     l5014:	
  2425                           
  2426                           ;main.c: 1460: }
  2427                           ;main.c: 1462: if(ucTimerForDACR0_CNT1 >= 2)
  2428  02FD  3002               	movlw	2
  2429  02FE  0263               	subwf	main@ucTimerForDACR0_CNT1,w
  2430  02FF  1C03               	skipc
  2431  0300  2B03               	goto	l5018
  2432                           
  2433                           ;main.c: 1463: ucTimerForDACR0_CNT1_f = 1;
  2434  0301  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2435  0302  0AE4               	incf	main@ucTimerForDACR0_CNT1_f,f
  2436  0303                     l5018:	
  2437                           
  2438                           ;main.c: 1465: if(ucTimerForDACR0_CNT2 >= 2)
  2439  0303  3002               	movlw	2
  2440  0304  0265               	subwf	main@ucTimerForDACR0_CNT2,w
  2441  0305  1C03               	skipc
  2442  0306  2B09               	goto	l5022
  2443                           
  2444                           ;main.c: 1466: ucTimerForDACR0_CNT2_f = 1;
  2445  0307  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2446  0308  0AE6               	incf	main@ucTimerForDACR0_CNT2_f,f
  2447  0309                     l5022:	
  2448                           
  2449                           ;main.c: 1468: if(ucTimerForDACR0_CNT1_f)
  2450  0309  0864               	movf	main@ucTimerForDACR0_CNT1_f,w
  2451  030A  1903               	btfsc	3,2
  2452  030B  2B0E               	goto	l5026
  2453                           
  2454                           ;main.c: 1469: {
  2455                           ;main.c: 1471: DACR0=0x0F;
  2456  030C  300F               	movlw	15
  2457  030D  2B12               	goto	L10
  2458  030E                     l5026:	
  2459                           ;main.c: 1476: }
  2460                           
  2461                           ;main.c: 1475: ucADC4_Step = ADC4_STEP_FOURTH;
  2462                           
  2463                           
  2464                           ;main.c: 1477: else if(ucTimerForDACR0_CNT2_f)
  2465  030E  0866               	movf	main@ucTimerForDACR0_CNT2_f,w
  2466  030F  1903               	btfsc	3,2
  2467  0310  2B17               	goto	l5030
  2468                           
  2469                           ;main.c: 1478: {
  2470                           ;main.c: 1480: DACR0=0x09;
  2471  0311  3009               	movlw	9
  2472  0312                     L10:	
  2473  0312  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0313  0088               	movwf	8	;volatile
  2475                           
  2476                           ;main.c: 1484: ucADC4_Step = ADC4_STEP_FOURTH;
  2477  0314  300A               	movlw	10
  2478  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0316  00D2               	movwf	main@ucADC4_Step
  2480  0317                     l5030:	
  2481                           ;main.c: 1485: }
  2482                           
  2483                           
  2484                           ;main.c: 1489: }
  2485                           ;main.c: 1491: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2486  0317  0852               	movf	main@ucADC4_Step,w
  2487  0318  3A0A               	xorlw	10
  2488  0319  1D03               	skipz
  2489  031A  283A               	goto	l4560
  2490                           
  2491                           ;main.c: 1492: {
  2492                           ;main.c: 1493: ucTimerForDACR0_CNT1 = 0;
  2493  031B  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2494                           
  2495                           ;main.c: 1494: ucTimerForDACR0_CNT2 = 0;
  2496  031C  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2497                           
  2498                           ;main.c: 1495: ucTimerForDACR0_CNT1_f = 0;
  2499  031D  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2500                           
  2501                           ;main.c: 1496: ucTimerForDACR0_CNT2_f = 0;
  2502  031E  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2503  031F  283A               	goto	l4560
  2504  0320                     l5034:	
  2505                           
  2506                           ;main.c: 1504: {
  2507                           ;main.c: 1508: clearTwentySecondsTimer();
  2508  0320  118A  26C8  118A   	fcall	_clearTwentySecondsTimer
  2509                           
  2510                           ;main.c: 1510: setPA6(0);
  2511  0323  3000               	movlw	0
  2512  0324  118A  27A1  118A   	fcall	_setPA6
  2513                           
  2514                           ;main.c: 1512: PBOD6 = 0;
  2515  0327  1683               	bsf	3,5	;RP0=1, select bank3
  2516  0328  1703               	bsf	3,6	;RP1=1, select bank3
  2517  0329  1308               	bcf	8,6
  2518                           
  2519                           ;main.c: 1513: PB6 = 1;
  2520  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2521  032B  3007               	movlw	7
  2522  032C  2B3A               	goto	L21
  2523  032D                     l5042:	
  2524                           ;main.c: 1519: break;
  2525                           
  2526                           ;main.c: 1518: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX4;
  2527                           
  2528  032D  3005               	movlw	5
  2529                           
  2530                           ;main.c: 1525: {
  2531                           ;main.c: 1530: static unsigned char ucDelayPrefix4TimerP5s;
  2532                           ;main.c: 1532: ucDelayPrefix4TimerP5s++;
  2533  032E  0AD4               	incf	main@ucDelayPrefix4TimerP5s,f
  2534                           
  2535                           ;main.c: 1534: if( ucDelayPrefix4TimerP5s >= 5)
  2536  032F  0254               	subwf	main@ucDelayPrefix4TimerP5s,w
  2537  0330  1C03               	skipc
  2538  0331  283A               	goto	l4560
  2539  0332  3008               	movlw	8
  2540                           
  2541                           ;main.c: 1535: {
  2542                           ;main.c: 1536: ucDelayPrefix4TimerP5s = 0;
  2543  0333  01D4               	clrf	main@ucDelayPrefix4TimerP5s
  2544                           
  2545                           ;main.c: 1538: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX5;
  2546  0334  2B71               	goto	L14
  2547  0335                     l977:	
  2548                           ;main.c: 1541: }
  2549                           ;main.c: 1543: case ADC4_STEP_FOURTH_PREFIX5:
  2550                           
  2551                           
  2552                           ;main.c: 1544: {
  2553                           ;main.c: 1550: PBOD6 = 1;
  2554  0335  1683               	bsf	3,5	;RP0=1, select bank3
  2555  0336  1703               	bsf	3,6	;RP1=1, select bank3
  2556  0337  1708               	bsf	8,6
  2557                           
  2558                           ;main.c: 1551: PB6 = 1;
  2559  0338  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0339  3009               	movlw	9
  2561  033A                     L21:	
  2562  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2563  033B  1706               	bsf	6,6
  2564                           
  2565                           ;main.c: 1556: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX6;
  2566  033C  2B71               	goto	L14
  2567  033D                     l5052:	
  2568                           ;main.c: 1558: break;
  2569                           
  2570  033D  3002               	movlw	2
  2571                           
  2572                           ;main.c: 1563: {
  2573                           ;main.c: 1564: static unsigned char ucDelayPrefix6TimerP2s;
  2574                           ;main.c: 1566: ucDelayPrefix6TimerP2s++;
  2575  033E  0AD5               	incf	main@ucDelayPrefix6TimerP2s,f
  2576                           
  2577                           ;main.c: 1568: if( ucDelayPrefix6TimerP2s >= 2)
  2578  033F  0255               	subwf	main@ucDelayPrefix6TimerP2s,w
  2579  0340  1C03               	skipc
  2580  0341  283A               	goto	l4560
  2581                           
  2582                           ;main.c: 1569: {
  2583                           ;main.c: 1570: ucDelayPrefix6TimerP2s = 0;
  2584  0342  01D5               	clrf	main@ucDelayPrefix6TimerP2s
  2585  0343  2B7A               	goto	l5094
  2586  0344                     l5060:	
  2587                           ;main.c: 1572: ucADC4_Step = ADC4_STEP_INIT;
  2588                           
  2589                           
  2590                           ;main.c: 1581: {
  2591                           ;main.c: 1585: static unsigned char ucCheckTimerP2sLess = 0;
  2592                           ;main.c: 1587: static unsigned char ucCheckTimerP2sMore = 0;
  2593                           ;main.c: 1589: if( getAdOriginalCh1Value() < 85)
  2594  0344  118A  259A  118A   	fcall	_getAdOriginalCh1Value
  2595  0347  3000               	movlw	0
  2596  0348  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2597  0349  3055               	movlw	85
  2598  034A  1903               	skipnz
  2599  034B  0246               	subwf	?_getAdOriginalCh1Value,w
  2600  034C  1803               	skipnc
  2601  034D  2B52               	goto	l5066
  2602                           
  2603                           ;main.c: 1590: {
  2604                           ;main.c: 1591: ucCheckTimerP2sLess++;
  2605  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2606  034F  0AAF               	incf	main@ucCheckTimerP2sLess^(0+128),f
  2607                           
  2608                           ;main.c: 1592: ucCheckTimerP2sMore = 0;
  2609  0350  01B0               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2610                           
  2611                           ;main.c: 1593: }
  2612  0351  2B55               	goto	l5070
  2613  0352                     l5066:	
  2614                           
  2615                           ;main.c: 1594: else
  2616                           ;main.c: 1595: {
  2617                           ;main.c: 1596: ucCheckTimerP2sMore++;
  2618  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0353  0AB0               	incf	main@ucCheckTimerP2sMore^(0+128),f
  2620                           
  2621                           ;main.c: 1597: ucCheckTimerP2sLess = 0;
  2622  0354  01AF               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2623  0355                     l5070:	
  2624                           
  2625                           ;main.c: 1598: }
  2626                           ;main.c: 1600: if( ucCheckTimerP2sMore > 2)
  2627  0355  3003               	movlw	3
  2628  0356  0230               	subwf	main@ucCheckTimerP2sMore^(0+128),w
  2629  0357  1C03               	skipc
  2630  0358  2B5F               	goto	l5076
  2631                           
  2632                           ;main.c: 1601: {
  2633                           ;main.c: 1602: ucCheckTimerP2sMore = 0;
  2634  0359  01B0               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2635                           
  2636                           ;main.c: 1603: ucCheckTimerP2sLess = 0;
  2637  035A  01AF               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2638                           
  2639                           ;main.c: 1605: ucADC4_Step = ADC4_STEP_INIT;
  2640  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2641  035C  3003               	movlw	3
  2642  035D  01D2               	clrf	main@ucADC4_Step
  2643                           
  2644                           ;main.c: 1607: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  2645  035E  00D1               	movwf	main@enumMainLoopStep
  2646  035F                     l5076:	
  2647                           
  2648                           ;main.c: 1608: }
  2649                           ;main.c: 1610: if( ucCheckTimerP2sLess > 2)
  2650  035F  3003               	movlw	3
  2651  0360  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0361  022F               	subwf	main@ucCheckTimerP2sLess^(0+128),w
  2653  0362  1C03               	skipc
  2654  0363  283A               	goto	l4560
  2655  0364  300B               	movlw	11
  2656                           
  2657                           ;main.c: 1611: {
  2658                           ;main.c: 1612: ucCheckTimerP2sMore = 0;
  2659  0365  01B0               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2660                           
  2661                           ;main.c: 1613: ucCheckTimerP2sLess = 0;
  2662  0366  01AF               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2663                           
  2664                           ;main.c: 1615: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX1;
  2665  0367  2B70               	goto	L20
  2666  0368                     l5082:	
  2667                           
  2668                           ;main.c: 1624: {
  2669                           ;main.c: 1628: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2670                           ;main.c: 1630: ucFourthSuffix1TimerP3s++;
  2671  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2672  0369  3004               	movlw	4
  2673  036A  0AB1               	incf	main@ucFourthSuffix1TimerP3s^(0+128),f
  2674                           
  2675                           ;main.c: 1632: if( ucFourthSuffix1TimerP3s > 3)
  2676  036B  0231               	subwf	main@ucFourthSuffix1TimerP3s^(0+128),w
  2677  036C  1C03               	skipc
  2678  036D  283A               	goto	l4560
  2679  036E  300C               	movlw	12
  2680                           
  2681                           ;main.c: 1633: {
  2682                           ;main.c: 1634: ucFourthSuffix1TimerP3s = 0;
  2683  036F  01B1               	clrf	main@ucFourthSuffix1TimerP3s^(0+128)
  2684  0370                     L20:	
  2685                           ;main.c: 1635: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2686                           
  2687  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0371                     L14:	
  2689  0371  00D2               	movwf	main@ucADC4_Step
  2690  0372  283A               	goto	l4560
  2691  0373                     l5090:	
  2692                           
  2693                           ;main.c: 1642: {
  2694                           ;main.c: 1647: setPA6(0);
  2695  0373  3000               	movlw	0
  2696  0374  118A  27A1  118A   	fcall	_setPA6
  2697                           
  2698                           ;main.c: 1649: clearPinPortAndTimer();
  2699  0377  118A  26AA  118A   	fcall	_clearPinPortAndTimer
  2700  037A                     l5094:	
  2701                           
  2702                           ;main.c: 1650: ucADC4_Step = ADC4_STEP_INIT;
  2703  037A  01D2               	clrf	main@ucADC4_Step
  2704  037B  285A               	goto	l4578
  2705  037C                     l5100:	
  2706  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2707  037D  0852               	movf	main@ucADC4_Step,w
  2708                           
  2709                           ; Switch size 1, requested type "space"
  2710                           ; Number of cases is 13, Range of values is 0 to 12
  2711                           ; switch strategies available:
  2712                           ; Name         Instructions Cycles
  2713                           ; direct_byte           33     7 (fixed)
  2714                           ; simple_byte           40    21 (average)
  2715                           ; jumptable            260     6 (fixed)
  2716                           ; rangetable            17     6 (fixed)
  2717                           ; spacedrange           32     9 (fixed)
  2718                           ; locatedrange          13     3 (fixed)
  2719                           ;	Chosen strategy is direct_byte
  2720  037E  0084               	movwf	4
  2721  037F  300D               	movlw	13
  2722  0380  0204               	subwf	4,w
  2723  0381  1803               	skipnc
  2724  0382  283A               	goto	l4560
  2725  0383  3006               	movlw	high S5516
  2726  0384  008A               	movwf	10
  2727  0385  1003               	clrc
  2728  0386  0D04               	rlf	4,w
  2729  0387  3ECE               	addlw	low S5516
  2730  0388  0082               	movwf	2
  2731  0389                     l1001:	
  2732                           ;main.c: 1679: {
  2733                           ;main.c: 1680: case HOUR_3_BRANCH_STEP_FIRST:
  2734                           
  2735                           
  2736                           ;main.c: 1681: {
  2737                           ;main.c: 1683: PB7 = 1;
  2738  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2739  038A  1786               	bsf	6,7
  2740                           
  2741                           ;main.c: 1684: PBOD7 = 1;
  2742  038B  1683               	bsf	3,5	;RP0=1, select bank3
  2743  038C  3030               	movlw	48
  2744  038D  1703               	bsf	3,6	;RP1=1, select bank3
  2745  038E  1788               	bsf	8,7
  2746                           
  2747                           ;main.c: 1689: startThreeHoursTimer(10800);
  2748  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0391  00A0               	movwf	?_startThreeHoursTimer
  2751  0392  302A               	movlw	42
  2752  0393  00A1               	movwf	?_startThreeHoursTimer+1
  2753  0394  118A  26FF  118A   	fcall	_startThreeHoursTimer
  2754                           
  2755                           ;main.c: 1692: setPB0(1);
  2756  0397  3001               	movlw	1
  2757  0398  118A  27AA  118A   	fcall	_setPB0
  2758                           
  2759                           ;main.c: 1694: setPA0(1);
  2760  039B  3001               	movlw	1
  2761  039C  118A  27DB  118A   	fcall	_setPA0
  2762                           
  2763                           ;main.c: 1696: setPA1(1);
  2764  039F  3001               	movlw	1
  2765  03A0  118A  27D3  118A   	fcall	_setPA1
  2766                           
  2767                           ;main.c: 1698: setPA2(1);
  2768  03A3  3001               	movlw	1
  2769  03A4  118A  27CB  118A   	fcall	_setPA2
  2770                           
  2771                           ;main.c: 1700: setPA3(1);
  2772  03A7  3001               	movlw	1
  2773  03A8  118A  27C3  118A   	fcall	_setPA3
  2774                           
  2775                           ;main.c: 1702: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2776  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2777  03AC  01AD               	clrf	main@enumBranchStep^(0+128)
  2778  03AD  0AAD               	incf	main@enumBranchStep^(0+128),f
  2779                           
  2780                           ;main.c: 1703: break;
  2781  03AE  283A               	goto	l4560
  2782  03AF                     l5106:	
  2783                           
  2784                           ;main.c: 1707: {
  2785                           ;main.c: 1711: static unsigned char ucTimer20s = 0;
  2786                           ;main.c: 1713: if(ucTimer20s < 200)
  2787  03AF  30C8               	movlw	200
  2788  03B0  0233               	subwf	main@ucTimer20s^(0+128),w
  2789  03B1  1803               	skipnc
  2790  03B2  2BB5               	goto	l5110
  2791                           
  2792                           ;main.c: 1714: {
  2793                           ;main.c: 1715: ucTimer20s++;
  2794  03B3  0AB3               	incf	main@ucTimer20s^(0+128),f
  2795                           
  2796                           ;main.c: 1717: }
  2797  03B4  283A               	goto	l4560
  2798  03B5                     l5110:	
  2799  03B5  3002               	movlw	2
  2800                           
  2801                           ;main.c: 1718: else
  2802                           ;main.c: 1719: {
  2803                           ;main.c: 1721: ucTimer20s = 0;
  2804  03B6  01B3               	clrf	main@ucTimer20s^(0+128)
  2805                           
  2806                           ;main.c: 1723: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2807  03B7  00AD               	movwf	main@enumBranchStep^(0+128)
  2808                           
  2809                           ;main.c: 1726: setPA6(0);
  2810  03B8  3000               	movlw	0
  2811  03B9  118A  27A1  118A   	fcall	_setPA6
  2812  03BC  283A               	goto	l4560
  2813  03BD                     l5116:	
  2814                           
  2815                           ;main.c: 1732: {
  2816                           ;main.c: 1736: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2817  03BD  118A  278B  118A   	fcall	_isFinishedTwelveHoursTimer
  2818  03C0  3800               	iorlw	0
  2819  03C1  1D03               	skipz
  2820  03C2  2BC9               	goto	l5120
  2821  03C3  118A  2773  118A   	fcall	_isFinishedThreeHoursTimer
  2822  03C6  3A00               	xorlw	0
  2823  03C7  1903               	skipnz
  2824  03C8  2BCC               	goto	l5124
  2825  03C9                     l5120:	
  2826                           
  2827                           ;main.c: 1737: {
  2828                           ;main.c: 1738: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2829  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2830  03CA  3009               	movlw	9
  2831  03CB  2BEC               	goto	L22
  2832  03CC                     l5124:	
  2833                           ;main.c: 1740: }
  2834                           
  2835                           ;main.c: 1739: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  2836                           
  2837                           
  2838                           ;main.c: 1741: else
  2839                           ;main.c: 1742: {
  2840                           ;main.c: 1743: static unsigned char ucTimerX1P5s = 0;
  2841                           ;main.c: 1745: static unsigned char ucTimerLessX1P5s = 0;
  2842                           ;main.c: 1747: if(getAdOriginalCh1Value() < 115)
  2843  03CC  118A  259A  118A   	fcall	_getAdOriginalCh1Value
  2844  03CF  3000               	movlw	0
  2845  03D0  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2846  03D1  3073               	movlw	115
  2847  03D2  1903               	skipnz
  2848  03D3  0246               	subwf	?_getAdOriginalCh1Value,w
  2849  03D4  1803               	skipnc
  2850  03D5  2BDA               	goto	l5130
  2851                           
  2852                           ;main.c: 1748: {
  2853                           ;main.c: 1749: ucTimerX1P5s = 0;
  2854  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2855  03D7  01B7               	clrf	main@ucTimerX1P5s^(0+128)
  2856                           
  2857                           ;main.c: 1750: ucTimerLessX1P5s++;
  2858  03D8  0AB4               	incf	main@ucTimerLessX1P5s^(0+128),f
  2859                           
  2860                           ;main.c: 1751: }
  2861  03D9  2BDD               	goto	l5134
  2862  03DA                     l5130:	
  2863                           
  2864                           ;main.c: 1752: else
  2865                           ;main.c: 1753: {
  2866                           ;main.c: 1754: ucTimerX1P5s++;
  2867  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2868  03DB  0AB7               	incf	main@ucTimerX1P5s^(0+128),f
  2869                           
  2870                           ;main.c: 1755: ucTimerLessX1P5s = 0;
  2871  03DC  01B4               	clrf	main@ucTimerLessX1P5s^(0+128)
  2872  03DD                     l5134:	
  2873                           
  2874                           ;main.c: 1756: }
  2875                           ;main.c: 1758: if(ucTimerX1P5s >= 5)
  2876  03DD  3005               	movlw	5
  2877  03DE  0237               	subwf	main@ucTimerX1P5s^(0+128),w
  2878  03DF  1C03               	skipc
  2879  03E0  2BF0               	goto	l5148
  2880                           
  2881                           ;main.c: 1759: {
  2882                           ;main.c: 1760: ucTimerX1P5s = 0;
  2883  03E1  01B7               	clrf	main@ucTimerX1P5s^(0+128)
  2884                           
  2885                           ;main.c: 1764: PBOD7 = 0;
  2886  03E2  1703               	bsf	3,6	;RP1=1, select bank3
  2887  03E3  1388               	bcf	8,7
  2888                           
  2889                           ;main.c: 1765: PB7 = 0;
  2890  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2891  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2892  03E6  1386               	bcf	6,7
  2893                           
  2894                           ;main.c: 1770: clearThreeHoursTimer();
  2895  03E7  118A  26C2  118A   	fcall	_clearThreeHoursTimer
  2896                           
  2897                           ;main.c: 1772: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2898  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2899  03EB  3002               	movlw	2
  2900  03EC                     L22:	
  2901  03EC  01AD               	clrf	main@enumBranchStep^(0+128)
  2902                           
  2903                           ;main.c: 1774: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2904  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2905  03EE                     L15:	
  2906  03EE  00D1               	movwf	main@enumMainLoopStep
  2907                           
  2908                           ;main.c: 1775: }
  2909  03EF  283A               	goto	l4560
  2910  03F0                     l5148:	
  2911                           
  2912                           ;main.c: 1776: else if(ucTimerLessX1P5s >= 5)
  2913  03F0  3005               	movlw	5
  2914  03F1  0234               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2915  03F2  1C03               	skipc
  2916  03F3  283A               	goto	l4560
  2917                           
  2918                           ;main.c: 1777: {
  2919                           ;main.c: 1778: static unsigned char ucTimerX2P5s = 0;
  2920                           ;main.c: 1780: static unsigned char ucTimerLessX2P5s = 0;
  2921                           ;main.c: 1782: if(getAdOriginalCh14Value() >= 1950)
  2922  03F4  118A  25A4  118A   	fcall	_getAdOriginalCh14Value
  2923  03F7  3007               	movlw	7
  2924  03F8  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2925  03F9  309E               	movlw	158
  2926  03FA  1903               	skipnz
  2927  03FB  0246               	subwf	?_getAdOriginalCh14Value,w
  2928  03FC  1C03               	skipc
  2929  03FD  2C02               	goto	l5156
  2930                           
  2931                           ;main.c: 1783: {
  2932                           ;main.c: 1784: ucTimerX2P5s++;
  2933  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2934  03FF  0AB8               	incf	main@ucTimerX2P5s^(0+128),f
  2935                           
  2936                           ;main.c: 1785: ucTimerLessX2P5s = 0;
  2937  0400  01B5               	clrf	main@ucTimerLessX2P5s^(0+128)
  2938                           
  2939                           ;main.c: 1786: }
  2940  0401  2C05               	goto	l5160
  2941  0402                     l5156:	
  2942                           
  2943                           ;main.c: 1787: else
  2944                           ;main.c: 1788: {
  2945                           ;main.c: 1789: ucTimerX2P5s = 0;
  2946  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2947  0403  01B8               	clrf	main@ucTimerX2P5s^(0+128)
  2948                           
  2949                           ;main.c: 1790: ucTimerLessX2P5s++;
  2950  0404  0AB5               	incf	main@ucTimerLessX2P5s^(0+128),f
  2951  0405                     l5160:	
  2952                           
  2953                           ;main.c: 1791: }
  2954                           ;main.c: 1793: if(ucTimerX2P5s >= 5)
  2955  0405  3005               	movlw	5
  2956  0406  0238               	subwf	main@ucTimerX2P5s^(0+128),w
  2957  0407  1C03               	skipc
  2958  0408  2C0B               	goto	l5164
  2959                           
  2960                           ;main.c: 1794: {
  2961                           ;main.c: 1795: ucTimerX2P5s = 0;
  2962  0409  01B8               	clrf	main@ucTimerX2P5s^(0+128)
  2963                           
  2964                           ;main.c: 1796: }
  2965  040A  283A               	goto	l4560
  2966  040B                     l5164:	
  2967                           
  2968                           ;main.c: 1797: else if(ucTimerLessX2P5s >= 5)
  2969  040B  3005               	movlw	5
  2970  040C  0235               	subwf	main@ucTimerLessX2P5s^(0+128),w
  2971  040D  1C03               	skipc
  2972  040E  283A               	goto	l4560
  2973                           
  2974                           ;main.c: 1798: {
  2975                           ;main.c: 1799: clearPinPortAndTimer();
  2976  040F  118A  26AA  118A   	fcall	_clearPinPortAndTimer
  2977                           
  2978                           ;main.c: 1800: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2979  0412  01D1               	clrf	main@enumMainLoopStep
  2980  0413  0AD1               	incf	main@enumMainLoopStep,f
  2981                           
  2982                           ;main.c: 1801: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2983  0414  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0415  01AD               	clrf	main@enumBranchStep^(0+128)
  2985                           
  2986                           ;main.c: 1802: }
  2987  0416  283A               	goto	l4560
  2988  0417                     l5174:	
  2989  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2990  0418  082D               	movf	main@enumBranchStep^(0+128),w
  2991                           
  2992                           ; Switch size 1, requested type "space"
  2993                           ; Number of cases is 3, Range of values is 0 to 2
  2994                           ; switch strategies available:
  2995                           ; Name         Instructions Cycles
  2996                           ; simple_byte           10     6 (average)
  2997                           ; direct_byte           13     7 (fixed)
  2998                           ; jumptable            260     6 (fixed)
  2999                           ; rangetable             7     6 (fixed)
  3000                           ; spacedrange           12     9 (fixed)
  3001                           ; locatedrange           3     3 (fixed)
  3002                           ;	Chosen strategy is simple_byte
  3003  0419  3A00               	xorlw	0	; case 0
  3004  041A  1903               	skipnz
  3005  041B  2B89               	goto	l1001
  3006  041C  3A01               	xorlw	1	; case 1
  3007  041D  1903               	skipnz
  3008  041E  2BAF               	goto	l5106
  3009  041F  3A03               	xorlw	3	; case 2
  3010  0420  1903               	skipnz
  3011  0421  2BBD               	goto	l5116
  3012  0422  285C               	goto	l748
  3013  0423                     l5176:	
  3014                           
  3015                           ;main.c: 1843: {
  3016                           ;main.c: 1848: setPB0(0);
  3017  0423  3000               	movlw	0
  3018  0424  118A  27AA  118A   	fcall	_setPB0
  3019                           
  3020                           ;main.c: 1850: setPB1(0);
  3021  0427  3000               	movlw	0
  3022  0428  118A  27E3  118A   	fcall	_setPB1
  3023                           
  3024                           ;main.c: 1852: setPA0(0);
  3025  042B  3000               	movlw	0
  3026  042C  118A  27DB  118A   	fcall	_setPA0
  3027                           
  3028                           ;main.c: 1854: setPA1(0);
  3029  042F  3000               	movlw	0
  3030  0430  118A  27D3  118A   	fcall	_setPA1
  3031                           
  3032                           ;main.c: 1856: setPA2(0);
  3033  0433  3000               	movlw	0
  3034  0434  118A  27CB  118A   	fcall	_setPA2
  3035                           
  3036                           ;main.c: 1858: setPA3(0);
  3037  0437  3000               	movlw	0
  3038  0438  118A  27C3  118A   	fcall	_setPA3
  3039                           
  3040                           ;main.c: 1861: PBOD6 = 0;
  3041  043B  1683               	bsf	3,5	;RP0=1, select bank3
  3042  043C  1703               	bsf	3,6	;RP1=1, select bank3
  3043  043D  1308               	bcf	8,6
  3044                           
  3045                           ;main.c: 1862: PB6 = 1;
  3046  043E  1283               	bcf	3,5	;RP0=0, select bank0
  3047  043F  3000               	movlw	0
  3048  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0441  1706               	bsf	6,6
  3050                           
  3051                           ;main.c: 1868: setPA6(0);
  3052  0442  118A  27A1  118A   	fcall	_setPA6
  3053                           
  3054                           ;main.c: 1870: enumInteralStep = INTERNAL_SECOND_STEP;
  3055  0445  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0446  01AE               	clrf	main@enumInteralStep^(0+128)
  3057  0447  0AAE               	incf	main@enumInteralStep^(0+128),f
  3058                           
  3059                           ;main.c: 1871: break;
  3060  0448  283A               	goto	l4560
  3061  0449                     l5184:	
  3062                           
  3063                           ;main.c: 1875: {
  3064                           ;main.c: 1879: static unsigned char ucTimer1s = 0;
  3065                           ;main.c: 1881: if(getAdOriginalCh14Value() <= 1000)
  3066  0449  118A  25A4  118A   	fcall	_getAdOriginalCh14Value
  3067  044C  3003               	movlw	3
  3068  044D  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3069  044E  30E9               	movlw	233
  3070  044F  1903               	skipnz
  3071  0450  0246               	subwf	?_getAdOriginalCh14Value,w
  3072  0451  1803               	skipnc
  3073  0452  2C56               	goto	l5188
  3074                           
  3075                           ;main.c: 1882: {
  3076                           ;main.c: 1883: ucTimer1s++;
  3077  0453  1683               	bsf	3,5	;RP0=1, select bank1
  3078  0454  0AB2               	incf	main@ucTimer1s^(0+128),f
  3079                           
  3080                           ;main.c: 1884: }
  3081  0455  2C58               	goto	l5190
  3082  0456                     l5188:	
  3083                           
  3084                           ;main.c: 1885: else
  3085                           ;main.c: 1886: ucTimer1s = 0;
  3086  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0457  01B2               	clrf	main@ucTimer1s^(0+128)
  3088  0458                     l5190:	
  3089                           
  3090                           ;main.c: 1888: if(ucTimer1s >= 10)
  3091  0458  300A               	movlw	10
  3092  0459  0232               	subwf	main@ucTimer1s^(0+128),w
  3093  045A  1C03               	skipc
  3094  045B  283A               	goto	l4560
  3095                           
  3096                           ;main.c: 1889: {
  3097                           ;main.c: 1890: enumInteralStep = INTERNAL_THIRD_STEP;
  3098  045C  3002               	movlw	2
  3099  045D  00AE               	movwf	main@enumInteralStep^(0+128)
  3100                           
  3101                           ;main.c: 1891: ucTimer1s = 0;
  3102  045E  01B2               	clrf	main@ucTimer1s^(0+128)
  3103  045F  283A               	goto	l4560
  3104  0460                     l5196:	
  3105                           
  3106                           ;main.c: 1897: {
  3107                           ;main.c: 1901: static unsigned char ucTimerP3s = 0;
  3108                           ;main.c: 1903: if(getAdOriginalCh14Value() >= 1950)
  3109  0460  118A  25A4  118A   	fcall	_getAdOriginalCh14Value
  3110  0463  3007               	movlw	7
  3111  0464  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3112  0465  309E               	movlw	158
  3113  0466  1903               	skipnz
  3114  0467  0246               	subwf	?_getAdOriginalCh14Value,w
  3115  0468  1C03               	skipc
  3116  0469  2C6D               	goto	l5200
  3117                           
  3118                           ;main.c: 1904: {
  3119                           ;main.c: 1905: ucTimerP3s++;
  3120  046A  1683               	bsf	3,5	;RP0=1, select bank1
  3121  046B  0AB6               	incf	main@ucTimerP3s^(0+128),f
  3122                           
  3123                           ;main.c: 1906: }
  3124  046C  2C6F               	goto	l5202
  3125  046D                     l5200:	
  3126                           
  3127                           ;main.c: 1907: else
  3128                           ;main.c: 1908: ucTimerP3s = 0;
  3129  046D  1683               	bsf	3,5	;RP0=1, select bank1
  3130  046E  01B6               	clrf	main@ucTimerP3s^(0+128)
  3131  046F                     l5202:	
  3132                           
  3133                           ;main.c: 1910: if(ucTimerP3s >= 3)
  3134  046F  3003               	movlw	3
  3135  0470  0236               	subwf	main@ucTimerP3s^(0+128),w
  3136  0471  1C03               	skipc
  3137  0472  283A               	goto	l4560
  3138                           
  3139                           ;main.c: 1911: {
  3140                           ;main.c: 1912: enumInteralStep = INTERNAL_FIRST_STEP;
  3141  0473  01AE               	clrf	main@enumInteralStep^(0+128)
  3142                           
  3143                           ;main.c: 1913: ucTimerP3s = 0;
  3144  0474  01B6               	clrf	main@ucTimerP3s^(0+128)
  3145                           
  3146                           ;main.c: 1915: clearAllTimer();
  3147  0475  118A  26B7  118A   	fcall	_clearAllTimer
  3148                           
  3149                           ;main.c: 1917: DACR0=0x0F;
  3150  0478  300F               	movlw	15
  3151  0479  1683               	bsf	3,5	;RP0=1, select bank1
  3152  047A  0088               	movwf	8	;volatile
  3153                           
  3154                           ;main.c: 1921: initPin();
  3155  047B  118A  2727  118A   	fcall	_initPin
  3156                           
  3157                           ;main.c: 1924: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3158  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3159  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0480  01D1               	clrf	main@enumMainLoopStep
  3161  0481                     l1053:	
  3162  0481  2C81               	goto	l1053
  3163  0482                     l5216:	
  3164  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3165  0483  082E               	movf	main@enumInteralStep^(0+128),w
  3166                           
  3167                           ; Switch size 1, requested type "space"
  3168                           ; Number of cases is 3, Range of values is 0 to 2
  3169                           ; switch strategies available:
  3170                           ; Name         Instructions Cycles
  3171                           ; simple_byte           10     6 (average)
  3172                           ; direct_byte           13     7 (fixed)
  3173                           ; jumptable            260     6 (fixed)
  3174                           ; rangetable             7     6 (fixed)
  3175                           ; spacedrange           12     9 (fixed)
  3176                           ; locatedrange           3     3 (fixed)
  3177                           ;	Chosen strategy is simple_byte
  3178  0484  3A00               	xorlw	0	; case 0
  3179  0485  1903               	skipnz
  3180  0486  2C23               	goto	l5176
  3181  0487  3A01               	xorlw	1	; case 1
  3182  0488  1903               	skipnz
  3183  0489  2C49               	goto	l5184
  3184  048A  3A03               	xorlw	3	; case 2
  3185  048B  1903               	skipnz
  3186  048C  2C60               	goto	l5196
  3187  048D  285C               	goto	l748
  3188  048E                     l5220:	
  3189  048E  1283               	bcf	3,5	;RP0=0, select bank0
  3190  048F  0851               	movf	main@enumMainLoopStep,w
  3191                           
  3192                           ; Switch size 1, requested type "space"
  3193                           ; Number of cases is 8, Range of values is 0 to 9
  3194                           ; switch strategies available:
  3195                           ; Name         Instructions Cycles
  3196                           ; simple_byte           25    13 (average)
  3197                           ; direct_byte           27     7 (fixed)
  3198                           ; jumptable            260     6 (fixed)
  3199                           ; rangetable            14     6 (fixed)
  3200                           ; spacedrange           26     9 (fixed)
  3201                           ; locatedrange          10     3 (fixed)
  3202                           ;	Chosen strategy is simple_byte
  3203  0490  3A00               	xorlw	0	; case 0
  3204  0491  1903               	skipnz
  3205  0492  2848               	goto	l4568
  3206  0493  3A01               	xorlw	1	; case 1
  3207  0494  1903               	skipnz
  3208  0495  285D               	goto	l4580
  3209  0496  3A03               	xorlw	3	; case 2
  3210  0497  1903               	skipnz
  3211  0498  2875               	goto	l4594
  3212  0499  3A01               	xorlw	1	; case 3
  3213  049A  1903               	skipnz
  3214  049B  2882               	goto	l4604
  3215  049C  3A07               	xorlw	7	; case 4
  3216  049D  1903               	skipnz
  3217  049E  28BD               	goto	l4640
  3218  049F  3A01               	xorlw	1	; case 5
  3219  04A0  1903               	skipnz
  3220  04A1  28C9               	goto	l4646
  3221  04A2  3A0D               	xorlw	13	; case 8
  3222  04A3  1903               	skipnz
  3223  04A4  2C17               	goto	l5174
  3224  04A5  3A01               	xorlw	1	; case 9
  3225  04A6  1903               	skipnz
  3226  04A7  2C82               	goto	l5216
  3227  04A8  285C               	goto	l748
  3228  04A9  118A  2811         	ljmp	start
  3229  04AB                     __end_of_main:	
  3230                           
  3231                           	psect	swtext1
  3232  074B                     __pswtext1:	
  3233  074B                     S5510:	
  3234  074B  118A  2962         	ljmp	l829
  3235  074D  118A  2965         	ljmp	l4706
  3236  074F  118A  296E         	ljmp	l4716
  3237  0751  118A  2974         	ljmp	l4726
  3238  0753  118A  297A         	ljmp	l4736
  3239  0755  118A  2980         	ljmp	l4746
  3240  0757  118A  298A         	ljmp	l4756
  3241                           
  3242                           	psect	swtext2
  3243  0759                     __pswtext2:	
  3244  0759                     S5512:	
  3245  0759  118A  299D         	ljmp	l857
  3246  075B  118A  29A0         	ljmp	l4770
  3247  075D  118A  29A9         	ljmp	l4780
  3248  075F  118A  29AF         	ljmp	l4790
  3249  0761  118A  29B8         	ljmp	l4800
  3250  0763  118A  29C1         	ljmp	l4810
  3251  0765  118A  29D6         	ljmp	l4820
  3252                           
  3253                           	psect	swtext3
  3254  0767                     __pswtext3:	
  3255  0767                     S5514:	
  3256  0767  118A  29E8         	ljmp	l4832
  3257  0769  118A  29F2         	ljmp	l4836
  3258  076B  118A  29FE         	ljmp	l4846
  3259  076D  118A  2A07         	ljmp	l4856
  3260  076F  118A  2A10         	ljmp	l4866
  3261  0771  118A  2A21         	ljmp	l4876
  3262                           
  3263                           	psect	swtext4
  3264  06CE                     __pswtext4:	
  3265  06CE                     S5516:	
  3266  06CE  118A  28D8         	ljmp	l790
  3267  06D0  118A  28DB         	ljmp	l4654
  3268  06D2  118A  2AB2         	ljmp	l4972
  3269  06D4  118A  2AC3         	ljmp	l4974
  3270  06D6  118A  2AE6         	ljmp	l4998
  3271  06D8  118A  2AEE         	ljmp	l5004
  3272  06DA  118A  2B20         	ljmp	l5034
  3273  06DC  118A  2B2D         	ljmp	l5042
  3274  06DE  118A  2B35         	ljmp	l977
  3275  06E0  118A  2B3D         	ljmp	l5052
  3276  06E2  118A  2B44         	ljmp	l5060
  3277  06E4  118A  2B68         	ljmp	l5082
  3278  06E6  118A  2B73         	ljmp	l5090
  3279                           
  3280                           	psect	text796
  3281  065C                     __ptext796:	
  3282 ;; =============== function _main ends ============
  3283                           
  3284                           
  3285 ;; *************** function _process_AD_Converter_Value *****************
  3286 ;; Defined at:
  3287 ;;		line 280 in file "C:\temp\dev\AK7030-OTP\common.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;		None               void
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 40/0
  3299 ;;		Unchanged: FFF9F/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    4
  3308 ;; This function calls:
  3309 ;;		_getAD_ConvertFlag
  3310 ;;		_setAD_ConvertFlag
  3311 ;;		_AD_Sample
  3312 ;;		_adc_start
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317  065C                     _process_AD_Converter_Value:	
  3318                           
  3319                           ;common.c: 281: if(getAD_ConvertFlag())
  3320                           
  3321                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3322  065C  2667  118A         	fcall	_getAD_ConvertFlag
  3323  065E  3A00               	xorlw	0
  3324  065F  1903               	skipnz
  3325  0660  0008               	return
  3326                           
  3327                           ;common.c: 282: {
  3328                           ;common.c: 283: setAD_ConvertFlag(0);
  3329  0661  3000               	movlw	0
  3330  0662  266B  118A         	fcall	_setAD_ConvertFlag
  3331                           
  3332                           ;common.c: 284: AD_Sample();
  3333  0664  2673  118A         	fcall	_AD_Sample
  3334                           
  3335                           ;common.c: 296: adc_start();
  3336  0666  2E70               	ljmp	l4258
  3337  0667                     __end_of_process_AD_Converter_Value:	
  3338  0667                     __ptext804:	
  3339 ;; =============== function _setAD_ConvertFlag ends ============
  3340                           
  3341                           
  3342 ;; *************** function _getAD_ConvertFlag *****************
  3343 ;; Defined at:
  3344 ;;		line 229 in file "C:\temp\dev\AK7030-OTP\common.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      unsigned char 
  3351 ;; Registers used:
  3352 ;;		wreg
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 60/20
  3356 ;;		Unchanged: FFF9F/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    2
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_process_AD_Converter_Value
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371  0667                     _getAD_ConvertFlag:	
  3372                           
  3373                           ;common.c: 230: return adc_convert_flag;
  3374                           
  3375                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3376  0667  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0668  1303               	bcf	3,6	;RP1=0, select bank1
  3378  0669  082B               	movf	_adc_convert_flag^(0+128),w
  3379  066A  0008               	return
  3380  066B                     __end_of_getAD_ConvertFlag:	
  3381  066B                     __ptext803:	
  3382 ;; =============== function _clearAllTimer ends ============
  3383                           
  3384                           
  3385 ;; *************** function _setAD_ConvertFlag *****************
  3386 ;; Defined at:
  3387 ;;		line 235 in file "C:\temp\dev\AK7030-OTP\common.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  flag            1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  flag            1    0[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;		None               void
  3394 ;; Registers used:
  3395 ;;		wreg
  3396 ;; Tracked objects:
  3397 ;;		On entry : 60/20
  3398 ;;		On exit  : 60/20
  3399 ;;		Unchanged: FFF9F/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       1       0       0       0
  3403 ;;      Temps:          0       0       0       0       0
  3404 ;;      Totals:         0       1       0       0       0
  3405 ;;Total ram usage:        1 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    2
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_process_AD_Converter_Value
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414  066B                     _setAD_ConvertFlag:	
  3415                           
  3416                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3417                           ;setAD_ConvertFlag@flag stored from wreg
  3418  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3419  066C  00A0               	movwf	setAD_ConvertFlag@flag
  3420                           
  3421                           ;common.c: 236: adc_convert_flag = flag;
  3422  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3423  066E  00AB               	movwf	_adc_convert_flag^(0+128)
  3424  066F  0008               	return
  3425  0670                     __end_of_setAD_ConvertFlag:	
  3426  0670                     __ptext814:	
  3427 ;; =============== function _isPermitSampleTime ends ============
  3428                           
  3429                           
  3430 ;; *************** function _adc_start *****************
  3431 ;; Defined at:
  3432 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		None
  3441 ;; Tracked objects:
  3442 ;;		On entry : 40/20
  3443 ;;		On exit  : 60/0
  3444 ;;		Unchanged: FFF9F/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    2
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;;		_process_AD_Converter_Value
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460  0670                     _adc_start:	
  3461  0670                     l4258:	
  3462                           ; Regs used in _adc_start: []
  3463                           
  3464                           
  3465                           ;periph.c: 101: GO=1;
  3466  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0671  149F               	bsf	31,1
  3468  0672  0008               	return
  3469  0673                     __end_of_adc_start:	
  3470  0673                     __ptext798:	
  3471 ;; =============== function _clearPinPortAndTimer ends ============
  3472                           
  3473                           
  3474 ;; *************** function _AD_Sample *****************
  3475 ;; Defined at:
  3476 ;;		line 310 in file "C:\temp\dev\AK7030-OTP\common.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;		None               void
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 60/20
  3487 ;;		On exit  : 40/0
  3488 ;;		Unchanged: FFF9F/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         0       0       0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    3
  3497 ;; This function calls:
  3498 ;;		_adc_test_init
  3499 ;; This function is called by:
  3500 ;;		_process_AD_Converter_Value
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503  0673                     _AD_Sample:	
  3504                           
  3505                           ;common.c: 311: if(sampleTimes < 12)
  3506                           
  3507                           ; Regs used in _AD_Sample: [wreg+status,2+status,0+pclath+cstack]
  3508  0673  300C               	movlw	12
  3509  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0675  024E               	subwf	_sampleTimes,w
  3511  0676  1803               	skipnc
  3512  0677  0008               	return
  3513  0678  300C               	movlw	12
  3514                           
  3515                           ;common.c: 312: {
  3516                           ;common.c: 314: sampleTimes++;
  3517  0679  0ACE               	incf	_sampleTimes,f
  3518                           
  3519                           ;common.c: 316: if(sampleTimes >= 12)
  3520  067A  024E               	subwf	_sampleTimes,w
  3521  067B  1C03               	skipc
  3522  067C  0008               	return
  3523                           
  3524                           ;common.c: 317: {
  3525                           ;common.c: 318: sampleTimes = 0;
  3526  067D  01CE               	clrf	_sampleTimes
  3527                           
  3528                           ;common.c: 320: if(sampleChannelSelect == 0)
  3529  067E  08CD               	movf	_sampleChannelSelect,f
  3530  067F  1D03               	skipz
  3531  0680  2E83               	goto	l4520
  3532                           
  3533                           ;common.c: 321: {
  3534                           ;common.c: 324: sampleChannelSelect = 2;
  3535  0681  3002               	movlw	2
  3536  0682  2E8E               	goto	L24
  3537  0683                     l4520:	
  3538                           ;common.c: 325: }
  3539                           
  3540                           
  3541                           ;common.c: 326: else if(sampleChannelSelect == 2)
  3542  0683  084D               	movf	_sampleChannelSelect,w
  3543  0684  3A02               	xorlw	2
  3544  0685  1D03               	skipz
  3545  0686  2E89               	goto	l4524
  3546                           
  3547                           ;common.c: 327: {
  3548                           ;common.c: 329: sampleChannelSelect = 5;
  3549  0687  3005               	movlw	5
  3550  0688  2E8E               	goto	L24
  3551  0689                     l4524:	
  3552                           ;common.c: 330: }
  3553                           
  3554                           
  3555                           ;common.c: 331: else if(sampleChannelSelect == 5)
  3556  0689  084D               	movf	_sampleChannelSelect,w
  3557  068A  3A05               	xorlw	5
  3558  068B  1D03               	skipz
  3559  068C  2E90               	goto	l4528
  3560                           
  3561                           ;common.c: 332: {
  3562                           ;common.c: 334: sampleChannelSelect = 6;
  3563  068D  3006               	movlw	6
  3564  068E                     L24:	
  3565  068E  00CD               	movwf	_sampleChannelSelect
  3566                           
  3567                           ;common.c: 335: }
  3568  068F  2E91               	goto	l4530
  3569  0690                     l4528:	
  3570                           
  3571                           ;common.c: 336: else
  3572                           ;common.c: 337: {
  3573                           ;common.c: 339: sampleChannelSelect = 0;
  3574  0690  01CD               	clrf	_sampleChannelSelect
  3575  0691                     l4530:	
  3576                           
  3577                           ;common.c: 340: }
  3578                           ;common.c: 345: adc_test_init(sampleChannelSelect,3);
  3579  0691  3003               	movlw	3
  3580  0692  00A0               	movwf	?_adc_test_init
  3581  0693  084D               	movf	_sampleChannelSelect,w
  3582  0694  2E95               	ljmp	_adc_test_init
  3583  0695                     __end_of_AD_Sample:	
  3584  0695                     __ptext816:	
  3585 ;; =============== function _dac_init ends ============
  3586                           
  3587                           
  3588 ;; *************** function _adc_test_init *****************
  3589 ;; Defined at:
  3590 ;;		line 85 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  channel         1    wreg     unsigned char 
  3593 ;;  ref             1    0[BANK0 ] unsigned char 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  channel         1    2[BANK0 ] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;		None               void
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 60/0
  3602 ;;		On exit  : 60/20
  3603 ;;		Unchanged: FFF9F/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3605 ;;      Params:         0       1       0       0       0
  3606 ;;      Locals:         0       1       0       0       0
  3607 ;;      Temps:          0       1       0       0       0
  3608 ;;      Totals:         0       3       0       0       0
  3609 ;;Total ram usage:        3 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    2
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;;		_AD_Sample
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619  0695                     _adc_test_init:	
  3620                           
  3621                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3622                           ;adc_test_init@channel stored from wreg
  3623  0695  00A2               	movwf	adc_test_init@channel
  3624                           
  3625                           ;periph.c: 86: ADCON0 = 0x00;
  3626  0696  019F               	clrf	31	;volatile
  3627                           
  3628                           ;periph.c: 87: ADCON0|=channel<<2;
  3629  0697  00A1               	movwf	??_adc_test_init
  3630  0698  1003               	clrc
  3631  0699  0DA1               	rlf	??_adc_test_init,f
  3632  069A  1003               	clrc
  3633  069B  0D21               	rlf	??_adc_test_init,w
  3634  069C  049F               	iorwf	31,f	;volatile
  3635                           
  3636                           ;periph.c: 88: ADCON1|=ref<<6;
  3637  069D  0820               	movf	adc_test_init@ref,w
  3638  069E  00A1               	movwf	??_adc_test_init
  3639  069F  0CA1               	rrf	??_adc_test_init,f
  3640  06A0  0CA1               	rrf	??_adc_test_init,f
  3641  06A1  0C21               	rrf	??_adc_test_init,w
  3642  06A2  39C0               	andlw	192
  3643  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  3644  06A4  049F               	iorwf	31,f	;volatile
  3645                           
  3646                           ;periph.c: 89: ADON=1;
  3647  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3648  06A6  141F               	bsf	31,0
  3649                           
  3650                           ;periph.c: 90: ADIE=1;
  3651  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3652  06A8  150D               	bsf	13,2
  3653  06A9  0008               	return
  3654  06AA                     __end_of_adc_test_init:	
  3655                           
  3656                           	psect	text797
  3657  06AA                     __ptext797:	
  3658 ;; =============== function _process_AD_Converter_Value ends ============
  3659                           
  3660                           
  3661 ;; *************** function _clearPinPortAndTimer *****************
  3662 ;; Defined at:
  3663 ;;		line 104 in file "C:\temp\dev\AK7030-OTP\main.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		status,2, status,0, pclath, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 40/0
  3674 ;;		On exit  : 60/0
  3675 ;;		Unchanged: FFF9F/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0
  3680 ;;      Totals:         0       0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    4
  3684 ;; This function calls:
  3685 ;;		_clearAllTimer
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690  06AA                     _clearPinPortAndTimer:	
  3691                           
  3692                           ;main.c: 106: PB0 = 0;
  3693                           
  3694                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3695  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3696  06AB  1006               	bcf	6,0
  3697                           
  3698                           ;main.c: 107: PA0 = 0;
  3699  06AC  1005               	bcf	5,0
  3700                           
  3701                           ;main.c: 108: PA1 = 0;
  3702  06AD  1085               	bcf	5,1
  3703                           
  3704                           ;main.c: 109: PA2 = 0;
  3705  06AE  1105               	bcf	5,2
  3706                           
  3707                           ;main.c: 110: PA3 = 0;
  3708  06AF  1185               	bcf	5,3
  3709                           
  3710                           ;main.c: 113: PBOD7 = 0;
  3711  06B0  1683               	bsf	3,5	;RP0=1, select bank3
  3712  06B1  1703               	bsf	3,6	;RP1=1, select bank3
  3713  06B2  1388               	bcf	8,7
  3714                           
  3715                           ;main.c: 114: PB7 = 0;
  3716  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3717  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3718  06B5  1386               	bcf	6,7
  3719                           
  3720                           ;main.c: 115: clearAllTimer();
  3721  06B6  2EB7               	ljmp	l4494
  3722  06B7                     __end_of_clearPinPortAndTimer:	
  3723  06B7                     __ptext802:	
  3724 ;; =============== function _getAdOriginalCh14Value ends ============
  3725                           
  3726                           
  3727 ;; *************** function _clearAllTimer *****************
  3728 ;; Defined at:
  3729 ;;		line 95 in file "C:\temp\dev\AK7030-OTP\main.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;		None               void
  3736 ;; Registers used:
  3737 ;;		status,2, status,0, pclath, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 40/20
  3740 ;;		On exit  : 60/0
  3741 ;;		Unchanged: FFF9F/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3743 ;;      Params:         0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0
  3746 ;;      Totals:         0       0       0       0       0
  3747 ;;Total ram usage:        0 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    3
  3750 ;; This function calls:
  3751 ;;		_clearTwelveHoursTimer
  3752 ;;		_clearThreeHoursTimer
  3753 ;;		_clearTwentySecondsTimer
  3754 ;; This function is called by:
  3755 ;;		_clearPinPortAndTimer
  3756 ;;		_main
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759  06B7                     _clearAllTimer:	
  3760  06B7                     l4494:	
  3761                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3762                           
  3763                           
  3764                           ;main.c: 96: clearTwelveHoursTimer();
  3765  06B7  26BC  118A         	fcall	_clearTwelveHoursTimer
  3766                           
  3767                           ;main.c: 97: clearThreeHoursTimer();
  3768  06B9  26C2  118A         	fcall	_clearThreeHoursTimer
  3769                           
  3770                           ;main.c: 98: clearTwentySecondsTimer();
  3771  06BB  2EC8               	ljmp	l4200
  3772  06BC                     __end_of_clearAllTimer:	
  3773  06BC                     __ptext830:	
  3774 ;; =============== function _clearThreeHoursTimer ends ============
  3775                           
  3776                           
  3777 ;; *************** function _clearTwelveHoursTimer *****************
  3778 ;; Defined at:
  3779 ;;		line 384 in file "C:\temp\dev\AK7030-OTP\common.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;		None               void
  3786 ;; Registers used:
  3787 ;;		status,2
  3788 ;; Tracked objects:
  3789 ;;		On entry : 40/20
  3790 ;;		On exit  : 60/0
  3791 ;;		Unchanged: FFF9F/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    2
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_clearAllTimer
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806  06BC                     _clearTwelveHoursTimer:	
  3807                           
  3808                           ;common.c: 385: uiBigTimer = 0;
  3809                           
  3810                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3811  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3812  06BD  01A0               	clrf	_uiBigTimer^(0+128)
  3813  06BE  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  3814                           
  3815                           ;common.c: 386: bBigTimerStartFlag = 0;
  3816  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3817  06C0  01CA               	clrf	_bBigTimerStartFlag
  3818  06C1  0008               	return
  3819  06C2                     __end_of_clearTwelveHoursTimer:	
  3820  06C2                     __ptext829:	
  3821 ;; =============== function _clearTwentySecondsTimer ends ============
  3822                           
  3823                           
  3824 ;; *************** function _clearThreeHoursTimer *****************
  3825 ;; Defined at:
  3826 ;;		line 391 in file "C:\temp\dev\AK7030-OTP\common.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;		None               void
  3833 ;; Registers used:
  3834 ;;		status,2
  3835 ;; Tracked objects:
  3836 ;;		On entry : 60/0
  3837 ;;		On exit  : 60/0
  3838 ;;		Unchanged: FFF9F/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0
  3843 ;;      Totals:         0       0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    2
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_clearAllTimer
  3851 ;;		_main
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854  06C2                     _clearThreeHoursTimer:	
  3855                           
  3856                           ;common.c: 392: uiSmallTimer = 0;
  3857                           
  3858                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3859  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  3860  06C3  01A2               	clrf	_uiSmallTimer^(0+128)
  3861  06C4  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  3862                           
  3863                           ;common.c: 393: bSmallTimerStartFlag = 0;
  3864  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3865  06C6  01CB               	clrf	_bSmallTimerStartFlag
  3866  06C7  0008               	return
  3867  06C8                     __end_of_clearThreeHoursTimer:	
  3868  06C8                     __ptext828:	
  3869 ;; =============== function _initPin ends ============
  3870                           
  3871                           
  3872 ;; *************** function _clearTwentySecondsTimer *****************
  3873 ;; Defined at:
  3874 ;;		line 397 in file "C:\temp\dev\AK7030-OTP\common.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;		None               void
  3881 ;; Registers used:
  3882 ;;		status,2
  3883 ;; Tracked objects:
  3884 ;;		On entry : 60/0
  3885 ;;		On exit  : 60/0
  3886 ;;		Unchanged: FFF9F/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         0       0       0       0       0
  3889 ;;      Locals:         0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0
  3891 ;;      Totals:         0       0       0       0       0
  3892 ;;Total ram usage:        0 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    2
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_clearAllTimer
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902  06C8                     _clearTwentySecondsTimer:	
  3903  06C8                     l4200:	
  3904                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3905                           
  3906                           
  3907                           ;common.c: 398: uiTwentySecondsTimer = 0;
  3908  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3909  06C9  01A4               	clrf	_uiTwentySecondsTimer^(0+128)
  3910  06CA  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3911                           
  3912                           ;common.c: 399: bTwentySecStartFlag = 0;
  3913  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3914  06CC  01CC               	clrf	_bTwentySecStartFlag
  3915  06CD  0008               	return
  3916  06CE                     __end_of_clearTwentySecondsTimer:	
  3917                           
  3918                           	psect	text799
  3919  0590                     __ptext799:	
  3920 ;; =============== function _AD_Sample ends ============
  3921                           
  3922                           
  3923 ;; *************** function _getAdOriginaCh4Value *****************
  3924 ;; Defined at:
  3925 ;;		line 258 in file "C:\temp\dev\AK7030-OTP\common.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  2   38[BANK0 ] unsigned int 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 40/0
  3936 ;;		On exit  : 160/0
  3937 ;;		Unchanged: FFE00/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       2       0       0       0
  3940 ;;      Locals:         0       0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0
  3942 ;;      Totals:         0       2       0       0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    3
  3946 ;; This function calls:
  3947 ;;		_Filter
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952  0590                     _getAdOriginaCh4Value:	
  3953                           
  3954                           ;common.c: 260: return Filter(uiSampleChannelSecond);
  3955                           
  3956                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3957  0590  30B9               	movlw	_uiSampleChannelSecond& (0+255)
  3958  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3959  0592  00A0               	movwf	?_Filter
  3960  0593  01A1               	clrf	?_Filter+1
  3961  0594  25AF               	fcall	_Filter
  3962  0595  0821               	movf	?_Filter+1,w
  3963  0596  00C7               	movwf	?_getAdOriginaCh4Value+1
  3964  0597  0820               	movf	?_Filter,w
  3965  0598  00C6               	movwf	?_getAdOriginaCh4Value
  3966  0599  0008               	return
  3967  059A                     __end_of_getAdOriginaCh4Value:	
  3968  059A                     __ptext800:	
  3969 ;; =============== function _getAdOriginaCh4Value ends ============
  3970                           
  3971                           
  3972 ;; *************** function _getAdOriginalCh1Value *****************
  3973 ;; Defined at:
  3974 ;;		line 246 in file "C:\temp\dev\AK7030-OTP\common.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2   38[BANK0 ] unsigned int 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 40/0
  3985 ;;		On exit  : 160/0
  3986 ;;		Unchanged: FFE00/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3988 ;;      Params:         0       2       0       0       0
  3989 ;;      Locals:         0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0
  3991 ;;      Totals:         0       2       0       0       0
  3992 ;;Total ram usage:        2 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    3
  3995 ;; This function calls:
  3996 ;;		_Filter
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001  059A                     _getAdOriginalCh1Value:	
  4002                           
  4003                           ;common.c: 249: return Filter(uiSampleZero);
  4004                           
  4005                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  4006  059A  30D1               	movlw	_uiSampleZero& (0+255)
  4007  059B  1283               	bcf	3,5	;RP0=0, select bank0
  4008  059C  00A0               	movwf	?_Filter
  4009  059D  01A1               	clrf	?_Filter+1
  4010  059E  25AF               	fcall	_Filter
  4011  059F  0821               	movf	?_Filter+1,w
  4012  05A0  00C7               	movwf	?_getAdOriginalCh1Value+1
  4013  05A1  0820               	movf	?_Filter,w
  4014  05A2  00C6               	movwf	?_getAdOriginalCh1Value
  4015  05A3  0008               	return
  4016  05A4                     __end_of_getAdOriginalCh1Value:	
  4017  05A4                     __ptext801:	
  4018 ;; =============== function _getAdOriginalCh1Value ends ============
  4019                           
  4020                           
  4021 ;; *************** function _getAdOriginalCh14Value *****************
  4022 ;; Defined at:
  4023 ;;		line 269 in file "C:\temp\dev\AK7030-OTP\common.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  2   38[BANK0 ] unsigned int 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 40/0
  4034 ;;		On exit  : 160/0
  4035 ;;		Unchanged: FFE00/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       2       0       0       0
  4038 ;;      Locals:         0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0
  4040 ;;      Totals:         0       2       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    3
  4044 ;; This function calls:
  4045 ;;		_Filter
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050  05A4                     _getAdOriginalCh14Value:	
  4051                           
  4052                           ;common.c: 271: return Filter(uiSampleChannelFifth);
  4053                           
  4054                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4055  05A4  30A8               	movlw	_uiSampleChannelFifth& (0+255)
  4056  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  4057  05A6  00A0               	movwf	?_Filter
  4058  05A7  3001               	movlw	1
  4059  05A8  00A1               	movwf	?_Filter+1
  4060  05A9  25AF               	fcall	_Filter
  4061  05AA  0821               	movf	?_Filter+1,w
  4062  05AB  00C7               	movwf	?_getAdOriginalCh14Value+1
  4063  05AC  0820               	movf	?_Filter,w
  4064  05AD  00C6               	movwf	?_getAdOriginalCh14Value
  4065  05AE  0008               	return
  4066  05AF                     __end_of_getAdOriginalCh14Value:	
  4067  05AF                     __ptext805:	
  4068 ;; =============== function _getAD_ConvertFlag ends ============
  4069                           
  4070                           
  4071 ;; *************** function _Filter *****************
  4072 ;; Defined at:
  4073 ;;		line 63 in file "C:\temp\dev\AK7030-OTP\common.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  tmpValue        2    0[BANK0 ] PTR int 
  4076 ;;		 -> uiSampleChannelFifth(24), uiSampleChannelSecond(24), uiSampleZero(24), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  cir             2   34[BANK0 ] int 
  4079 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  4080 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  4081 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  4082 ;;  i               1   37[BANK0 ] unsigned char 
  4083 ;;  j               1   36[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2    0[BANK0 ] unsigned int 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4088 ;; Tracked objects:
  4089 ;;		On entry : 60/0
  4090 ;;		On exit  : 160/0
  4091 ;;		Unchanged: FFE00/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       2       0       0       0
  4094 ;;      Locals:         0      32       0       0       0
  4095 ;;      Temps:          0       4       0       0       0
  4096 ;;      Totals:         0      38       0       0       0
  4097 ;;Total ram usage:       38 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    2
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_getAdOriginalCh1Value
  4104 ;;		_getAdOriginaCh4Value
  4105 ;;		_getAdOriginalCh14Value
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108  05AF                     _Filter:	
  4109                           
  4110                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4111  05AF  01C4               	clrf	Filter@j
  4112                           
  4113                           ;common.c: 67: unsigned int filter_temp = 0, filter_sum = 0;
  4114  05B0  01BE               	clrf	Filter@filter_temp
  4115  05B1  01BF               	clrf	Filter@filter_temp+1
  4116  05B2  01C0               	clrf	Filter@filter_sum
  4117  05B3  01C1               	clrf	Filter@filter_sum+1
  4118                           
  4119                           ;common.c: 69: unsigned int filter_buf[12];
  4120                           ;common.c: 71: for(int cir = 0;cir < 12; cir++)
  4121  05B4  01C2               	clrf	Filter@cir
  4122  05B5  01C3               	clrf	Filter@cir+1
  4123  05B6                     l4352:	
  4124                           
  4125                           ;common.c: 72: filter_buf[cir] = *tmpValue++;
  4126  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  4127  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  4128  05B8  0820               	movf	Filter@tmpValue,w
  4129  05B9  0084               	movwf	4
  4130  05BA  1783               	bsf	3,7
  4131  05BB  1C21               	btfss	Filter@tmpValue+1,0
  4132  05BC  1383               	bcf	3,7
  4133  05BD  0800               	movf	0,w
  4134  05BE  2650  118A         	fcall	PL5	;call to abstracted procedure
  4135  05C0  0D42               	rlf	Filter@cir,w
  4136  05C1  3E26               	addlw	Filter@filter_buf& (0+255)
  4137  05C2  0084               	movwf	4
  4138  05C3  0822               	movf	??_Filter,w
  4139  05C4  1383               	bcf	3,7	;select IRP bank0
  4140  05C5  0080               	movwf	0
  4141  05C6  0A84               	incf	4,f
  4142  05C7  0823               	movf	??_Filter+1,w
  4143  05C8  0080               	movwf	0
  4144  05C9  3002               	movlw	2
  4145  05CA  07A0               	addwf	Filter@tmpValue,f
  4146  05CB  1803               	skipnc
  4147  05CC  0AA1               	incf	Filter@tmpValue+1,f
  4148  05CD  0AC2               	incf	Filter@cir,f
  4149  05CE  1903               	skipnz
  4150  05CF  0AC3               	incf	Filter@cir+1,f
  4151  05D0  0843               	movf	Filter@cir+1,w
  4152  05D1  3A80               	xorlw	128
  4153  05D2  00FF               	movwf	127
  4154  05D3  3080               	movlw	128
  4155  05D4  027F               	subwf	127,w
  4156  05D5  1D03               	skipz
  4157  05D6  2DD9               	goto	u1485
  4158  05D7  300C               	movlw	12
  4159  05D8  0242               	subwf	Filter@cir,w
  4160  05D9                     u1485:	
  4161  05D9  1C03               	skipc
  4162  05DA  2DB6               	goto	l4352
  4163                           
  4164                           ;common.c: 75: for(j = 0; j < 12 - 1; j++)
  4165  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  4166  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  4167  05DD  01C4               	clrf	Filter@j
  4168  05DE                     l4366:	
  4169                           
  4170                           ;common.c: 76: {
  4171                           ;common.c: 77: for(i = 0; i < 12 - 1 - j; i++)
  4172  05DE  01C5               	clrf	Filter@i
  4173  05DF                     l4374:	
  4174  05DF  01A3               	clrf	??_Filter+1
  4175  05E0  0844               	movf	Filter@j,w
  4176  05E1  3C0B               	sublw	11
  4177  05E2  00A2               	movwf	??_Filter
  4178  05E3  1C03               	skipc
  4179  05E4  03A3               	decf	??_Filter+1,f
  4180  05E5  0823               	movf	??_Filter+1,w
  4181  05E6  3A80               	xorlw	128
  4182  05E7  3C80               	sublw	128
  4183  05E8  1D03               	skipz
  4184  05E9  2DEC               	goto	u1505
  4185  05EA  0822               	movf	??_Filter,w
  4186  05EB  0245               	subwf	Filter@i,w
  4187  05EC                     u1505:	
  4188  05EC  1803               	btfsc	3,0
  4189  05ED  2E21               	goto	l4376
  4190                           
  4191                           ;common.c: 78: {
  4192                           ;common.c: 79: if(filter_buf[i] > filter_buf[i + 1])
  4193  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  4194  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  4195  05F0  1003               	clrc
  4196  05F1  2646  118A         	fcall	PL3	;call to abstracted procedure
  4197  05F3  2656  118A         	fcall	PL6	;call to abstracted procedure
  4198  05F5  0800               	movf	0,w
  4199  05F6  00A4               	movwf	??_Filter+2
  4200  05F7  0A84               	incf	4,f
  4201  05F8  0800               	movf	0,w
  4202  05F9  00A5               	movwf	??_Filter+3
  4203  05FA  0823               	movf	??_Filter+1,w
  4204  05FB  0225               	subwf	??_Filter+3,w
  4205  05FC  1D03               	skipz
  4206  05FD  2E00               	goto	u1495
  4207  05FE  0822               	movf	??_Filter,w
  4208  05FF  0224               	subwf	??_Filter+2,w
  4209  0600                     u1495:	
  4210  0600  1803               	skipnc
  4211  0601  2E1F               	goto	l4372
  4212                           
  4213                           ;common.c: 80: {
  4214                           ;common.c: 82: filter_temp = filter_buf[i];
  4215  0602  1003               	clrc
  4216  0603  0D45               	rlf	Filter@i,w
  4217  0604  3E26               	addlw	Filter@filter_buf& (0+255)
  4218  0605  0084               	movwf	4
  4219  0606  0800               	movf	0,w
  4220  0607  00BE               	movwf	Filter@filter_temp
  4221  0608  0A84               	incf	4,f
  4222  0609  0800               	movf	0,w
  4223  060A  00BF               	movwf	Filter@filter_temp+1
  4224                           
  4225                           ;common.c: 84: filter_buf[i] = filter_buf[i + 1];
  4226  060B  2656  118A         	fcall	PL6	;call to abstracted procedure
  4227  060D  0800               	movf	0,w
  4228  060E  2650  118A         	fcall	PL5	;call to abstracted procedure
  4229  0610  0D45               	rlf	Filter@i,w
  4230  0611  3E26               	addlw	Filter@filter_buf& (0+255)
  4231  0612  0084               	movwf	4
  4232  0613  0822               	movf	??_Filter,w
  4233  0614  0080               	movwf	0
  4234  0615  0A84               	incf	4,f
  4235  0616  0823               	movf	??_Filter+1,w
  4236  0617  0080               	movwf	0
  4237                           
  4238                           ;common.c: 86: filter_buf[i + 1] = filter_temp;
  4239  0618  2656  118A         	fcall	PL6	;call to abstracted procedure
  4240  061A  083E               	movf	Filter@filter_temp,w
  4241  061B  0080               	movwf	0
  4242  061C  0A84               	incf	4,f
  4243  061D  083F               	movf	Filter@filter_temp+1,w
  4244  061E  0080               	movwf	0
  4245  061F                     l4372:	
  4246  061F  0AC5               	incf	Filter@i,f
  4247  0620  2DDF               	goto	l4374
  4248  0621                     l4376:	
  4249  0621  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0622  300B               	movlw	11
  4251  0623  1303               	bcf	3,6	;RP1=0, select bank0
  4252  0624  0AC4               	incf	Filter@j,f
  4253  0625  0244               	subwf	Filter@j,w
  4254  0626  1C03               	skipc
  4255  0627  2DDE               	goto	l4366
  4256                           
  4257                           ;common.c: 87: }
  4258                           ;common.c: 88: }
  4259                           ;common.c: 89: }
  4260                           ;common.c: 91: for(i = 2; i < 12 - 2; i++)
  4261  0628  3002               	movlw	2
  4262  0629  00C5               	movwf	Filter@i
  4263                           
  4264                           ;common.c: 92: {
  4265                           ;common.c: 93: filter_sum += filter_buf[i];
  4266  062A  1003               	clrc
  4267  062B                     L25:	
  4268  062B  2646  118A         	fcall	PL3	;call to abstracted procedure
  4269  062D  0822               	movf	??_Filter,w
  4270  062E  07C0               	addwf	Filter@filter_sum,f
  4271  062F  1803               	skipnc
  4272  0630  0AC1               	incf	Filter@filter_sum+1,f
  4273  0631  0823               	movf	??_Filter+1,w
  4274  0632  07C1               	addwf	Filter@filter_sum+1,f
  4275  0633  300A               	movlw	10
  4276  0634  0AC5               	incf	Filter@i,f
  4277  0635  0245               	subwf	Filter@i,w
  4278  0636  1C03               	skipc
  4279  0637  2E2B               	goto	L25
  4280                           
  4281                           ;common.c: 94: }
  4282                           ;common.c: 96: return (filter_sum >> 3);
  4283  0638  0841               	movf	Filter@filter_sum+1,w
  4284  0639  00A1               	movwf	?_Filter+1
  4285  063A  0840               	movf	Filter@filter_sum,w
  4286  063B  00A0               	movwf	?_Filter
  4287  063C  1003               	clrc
  4288  063D  0CA1               	rrf	?_Filter+1,f
  4289  063E  0CA0               	rrf	?_Filter,f
  4290  063F  1003               	clrc
  4291  0640  0CA1               	rrf	?_Filter+1,f
  4292  0641  0CA0               	rrf	?_Filter,f
  4293  0642  1003               	clrc
  4294  0643  0CA1               	rrf	?_Filter+1,f
  4295  0644  0CA0               	rrf	?_Filter,f
  4296  0645  0008               	return
  4297  0646                     __end_of_Filter:	
  4298  0646                     PL3:	
  4299  0646  0D45               	rlf	Filter@i,w
  4300  0647  3E26               	addlw	Filter@filter_buf& (0+255)
  4301  0648  0084               	movwf	4
  4302  0649  1383               	bcf	3,7	;select IRP bank0
  4303  064A  0800               	movf	0,w
  4304  064B  00A2               	movwf	??_Filter
  4305  064C  0A84               	incf	4,f
  4306  064D  0800               	movf	0,w
  4307  064E  00A3               	movwf	??_Filter+1
  4308  064F  0008               	return
  4309  0650                     PL5:	
  4310  0650  00A2               	movwf	??_Filter
  4311  0651  0A84               	incf	4,f
  4312  0652  0800               	movf	0,w
  4313  0653  00A3               	movwf	??_Filter+1
  4314  0654  1003               	clrc
  4315  0655  0008               	return
  4316  0656                     PL6:	
  4317  0656  1003               	clrc
  4318  0657  0D45               	rlf	Filter@i,w
  4319  0658  3E02               	addlw	2
  4320  0659  3E26               	addlw	Filter@filter_buf& (0+255)
  4321  065A  0084               	movwf	4
  4322  065B  0008               	return
  4323                           
  4324                           	psect	text806
  4325  0773                     __ptext806:	
  4326 ;; =============== function _Filter ends ============
  4327                           
  4328                           
  4329 ;; *************** function _isFinishedThreeHoursTimer *****************
  4330 ;; Defined at:
  4331 ;;		line 451 in file "C:\temp\dev\AK7030-OTP\common.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 40/20
  4342 ;;		On exit  : 40/0
  4343 ;;		Unchanged: FFF9F/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4345 ;;      Params:         0       0       0       0       0
  4346 ;;      Locals:         0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0
  4348 ;;      Totals:         0       0       0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    2
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_main
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358  0773                     _isFinishedThreeHoursTimer:	
  4359                           
  4360                           ;common.c: 452: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  4361                           
  4362                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  4363  0773  1683               	bsf	3,5	;RP0=1, select bank1
  4364  0774  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4365  0775  0422               	iorwf	_uiSmallTimer^(0+128),w
  4366  0776  1D03               	skipz
  4367  0777  3400               	retlw	0
  4368  0778  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0779  084B               	movf	_bSmallTimerStartFlag,w
  4370  077A  1903               	btfsc	3,2
  4371  077B  3400               	retlw	0
  4372  077C  3001               	movlw	1
  4373                           
  4374                           ;common.c: 453: {
  4375                           ;common.c: 454: bSmallTimerStartFlag = 0;
  4376  077D  01CB               	clrf	_bSmallTimerStartFlag
  4377                           
  4378                           ;common.c: 455: return 1;
  4379  077E  0008               	return
  4380  077F                     __end_of_isFinishedThreeHoursTimer:	
  4381                           ;common.c: 457: else
  4382                           ;common.c: 458: return 0;
  4383                           
  4384                           
  4385                           	psect	text807
  4386  06FF                     __ptext807:	
  4387 ;; =============== function _isFinishedThreeHoursTimer ends ============
  4388                           
  4389                           
  4390 ;; *************** function _startThreeHoursTimer *****************
  4391 ;; Defined at:
  4392 ;;		line 404 in file "C:\temp\dev\AK7030-OTP\common.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;		None               void
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 60/0
  4403 ;;		On exit  : 40/0
  4404 ;;		Unchanged: FFF9F/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4406 ;;      Params:         0       2       0       0       0
  4407 ;;      Locals:         0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0
  4409 ;;      Totals:         0       2       0       0       0
  4410 ;;Total ram usage:        2 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    2
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419  06FF                     _startThreeHoursTimer:	
  4420                           
  4421                           ;common.c: 405: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  4422                           
  4423                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  4424  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  4425  0700  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4426  0701  0422               	iorwf	_uiSmallTimer^(0+128),w
  4427  0702  1D03               	skipz
  4428  0703  0008               	return
  4429  0704  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0705  08CB               	movf	_bSmallTimerStartFlag,f
  4431  0706  1D03               	skipz
  4432  0707  0008               	return
  4433                           
  4434                           ;common.c: 406: {
  4435                           ;common.c: 407: uiSmallTimer = uiSetTime;
  4436  0708  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  4437  0709  1683               	bsf	3,5	;RP0=1, select bank1
  4438  070A  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  4439  070B  1283               	bcf	3,5	;RP0=0, select bank0
  4440  070C  0820               	movf	startThreeHoursTimer@uiSetTime,w
  4441  070D  1683               	bsf	3,5	;RP0=1, select bank1
  4442  070E  00A2               	movwf	_uiSmallTimer^(0+128)
  4443                           
  4444                           ;common.c: 408: bSmallTimerStartFlag = 1;
  4445  070F  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0710  01CB               	clrf	_bSmallTimerStartFlag
  4447  0711  0ACB               	incf	_bSmallTimerStartFlag,f
  4448  0712  0008               	return
  4449  0713                     __end_of_startThreeHoursTimer:	
  4450                           
  4451                           	psect	text808
  4452  077F                     __ptext808:	
  4453 ;; =============== function _startThreeHoursTimer ends ============
  4454                           
  4455                           
  4456 ;; *************** function _isFinishedTwentySecondsTimer *****************
  4457 ;; Defined at:
  4458 ;;		line 428 in file "C:\temp\dev\AK7030-OTP\common.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      unsigned char 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 60/0
  4469 ;;		On exit  : 40/0
  4470 ;;		Unchanged: FFF9F/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         0       0       0       0       0
  4473 ;;      Locals:         0       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0
  4475 ;;      Totals:         0       0       0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    2
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_main
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485  077F                     _isFinishedTwentySecondsTimer:	
  4486                           
  4487                           ;common.c: 429: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  4488                           
  4489                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4490  077F  1683               	bsf	3,5	;RP0=1, select bank1
  4491  0780  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4492  0781  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4493  0782  1D03               	skipz
  4494  0783  3400               	retlw	0
  4495  0784  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0785  084C               	movf	_bTwentySecStartFlag,w
  4497  0786  1903               	btfsc	3,2
  4498  0787  3400               	retlw	0
  4499  0788  3001               	movlw	1
  4500                           
  4501                           ;common.c: 430: {
  4502                           ;common.c: 431: bTwentySecStartFlag = 0;
  4503  0789  01CC               	clrf	_bTwentySecStartFlag
  4504                           
  4505                           ;common.c: 432: return 1;
  4506  078A  0008               	return
  4507  078B                     __end_of_isFinishedTwentySecondsTimer:	
  4508                           ;common.c: 434: else
  4509                           ;common.c: 435: return 0;
  4510                           
  4511                           
  4512                           	psect	text809
  4513  073A                     __ptext809:	
  4514 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4515                           
  4516                           
  4517 ;; *************** function _startTwentySecondsTimer *****************
  4518 ;; Defined at:
  4519 ;;		line 418 in file "C:\temp\dev\AK7030-OTP\common.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;		None               void
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0
  4528 ;; Tracked objects:
  4529 ;;		On entry : 160/0
  4530 ;;		On exit  : 140/0
  4531 ;;		Unchanged: FFE9F/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0
  4536 ;;      Totals:         0       0       0       0       0
  4537 ;;Total ram usage:        0 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    2
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546  073A                     _startTwentySecondsTimer:	
  4547                           
  4548                           ;common.c: 419: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  4549                           
  4550                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  4551  073A  1683               	bsf	3,5	;RP0=1, select bank1
  4552  073B  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4553  073C  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4554  073D  1D03               	skipz
  4555  073E  0008               	return
  4556  073F  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0740  08CC               	movf	_bTwentySecStartFlag,f
  4558  0741  1D03               	skipz
  4559  0742  0008               	return
  4560                           
  4561                           ;common.c: 420: {
  4562                           ;common.c: 421: uiTwentySecondsTimer = 20;
  4563  0743  3014               	movlw	20
  4564  0744  1683               	bsf	3,5	;RP0=1, select bank1
  4565  0745  00A4               	movwf	_uiTwentySecondsTimer^(0+128)
  4566  0746  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4567                           
  4568                           ;common.c: 422: bTwentySecStartFlag = 1;
  4569  0747  1283               	bcf	3,5	;RP0=0, select bank0
  4570  0748  01CC               	clrf	_bTwentySecStartFlag
  4571  0749  0ACC               	incf	_bTwentySecStartFlag,f
  4572  074A  0008               	return
  4573  074B                     __end_of_startTwentySecondsTimer:	
  4574                           
  4575                           	psect	text810
  4576  078B                     __ptext810:	
  4577 ;; =============== function _startTwentySecondsTimer ends ============
  4578                           
  4579                           
  4580 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4581 ;; Defined at:
  4582 ;;		line 440 in file "C:\temp\dev\AK7030-OTP\common.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      unsigned char 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 40/0
  4593 ;;		On exit  : 40/0
  4594 ;;		Unchanged: FFF9F/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4596 ;;      Params:         0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0
  4599 ;;      Totals:         0       0       0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    2
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609  078B                     _isFinishedTwelveHoursTimer:	
  4610                           
  4611                           ;common.c: 441: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  4612                           
  4613                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4614  078B  1683               	bsf	3,5	;RP0=1, select bank1
  4615  078C  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4616  078D  0420               	iorwf	_uiBigTimer^(0+128),w
  4617  078E  1D03               	skipz
  4618  078F  3400               	retlw	0
  4619  0790  1283               	bcf	3,5	;RP0=0, select bank0
  4620  0791  084A               	movf	_bBigTimerStartFlag,w
  4621  0792  1903               	btfsc	3,2
  4622  0793  3400               	retlw	0
  4623  0794  3001               	movlw	1
  4624                           
  4625                           ;common.c: 442: {
  4626                           ;common.c: 443: bBigTimerStartFlag = 0;
  4627  0795  01CA               	clrf	_bBigTimerStartFlag
  4628                           
  4629                           ;common.c: 444: return 1;
  4630  0796  0008               	return
  4631  0797                     __end_of_isFinishedTwelveHoursTimer:	
  4632                           ;common.c: 446: else
  4633                           ;common.c: 447: return 0;
  4634                           
  4635                           
  4636                           	psect	text811
  4637  0713                     __ptext811:	
  4638 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4639                           
  4640                           
  4641 ;; *************** function _startTwelveHourTimer *****************
  4642 ;; Defined at:
  4643 ;;		line 370 in file "C:\temp\dev\AK7030-OTP\common.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;		None               void
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 60/0
  4654 ;;		On exit  : 40/0
  4655 ;;		Unchanged: FFF9F/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4657 ;;      Params:         0       2       0       0       0
  4658 ;;      Locals:         0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0
  4660 ;;      Totals:         0       2       0       0       0
  4661 ;;Total ram usage:        2 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    2
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_main
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670  0713                     _startTwelveHourTimer:	
  4671                           
  4672                           ;common.c: 371: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  4673                           
  4674                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4675  0713  1683               	bsf	3,5	;RP0=1, select bank1
  4676  0714  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4677  0715  0420               	iorwf	_uiBigTimer^(0+128),w
  4678  0716  1D03               	skipz
  4679  0717  0008               	return
  4680  0718  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0719  08CA               	movf	_bBigTimerStartFlag,f
  4682  071A  1D03               	skipz
  4683  071B  0008               	return
  4684                           
  4685                           ;common.c: 372: {
  4686                           ;common.c: 373: uiBigTimer = uiSetTime;
  4687  071C  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4688  071D  1683               	bsf	3,5	;RP0=1, select bank1
  4689  071E  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4690  071F  1283               	bcf	3,5	;RP0=0, select bank0
  4691  0720  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4692  0721  1683               	bsf	3,5	;RP0=1, select bank1
  4693  0722  00A0               	movwf	_uiBigTimer^(0+128)
  4694                           
  4695                           ;common.c: 374: bBigTimerStartFlag = 1;
  4696  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4697  0724  01CA               	clrf	_bBigTimerStartFlag
  4698  0725  0ACA               	incf	_bBigTimerStartFlag,f
  4699  0726  0008               	return
  4700  0727                     __end_of_startTwelveHourTimer:	
  4701                           
  4702                           	psect	text812
  4703  07F9                     __ptext812:	
  4704 ;; =============== function _startTwelveHourTimer ends ============
  4705                           
  4706                           
  4707 ;; *************** function _clrSampeTime *****************
  4708 ;; Defined at:
  4709 ;;		line 472 in file "C:\temp\dev\AK7030-OTP\common.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;		None               void
  4716 ;; Registers used:
  4717 ;;		status,2
  4718 ;; Tracked objects:
  4719 ;;		On entry : 60/20
  4720 ;;		On exit  : 60/20
  4721 ;;		Unchanged: FFF9F/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4723 ;;      Params:         0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0
  4726 ;;      Totals:         0       0       0       0       0
  4727 ;;Total ram usage:        0 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    2
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736  07F9                     _clrSampeTime:	
  4737                           
  4738                           ;common.c: 473: timer.timer10msStopWatch = 0;
  4739                           
  4740                           ; Regs used in _clrSampeTime: [status,2]
  4741  07F9  01AC               	clrf	_timer^(0+128)
  4742  07FA  0008               	return
  4743  07FB                     __end_of_clrSampeTime:	
  4744                           
  4745                           	psect	text813
  4746  07EB                     __ptext813:	
  4747 ;; =============== function _clrSampeTime ends ============
  4748                           
  4749                           
  4750 ;; *************** function _isPermitSampleTime *****************
  4751 ;; Defined at:
  4752 ;;		line 462 in file "C:\temp\dev\AK7030-OTP\common.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      unsigned char 
  4759 ;; Registers used:
  4760 ;;		wreg
  4761 ;; Tracked objects:
  4762 ;;		On entry : 40/0
  4763 ;;		On exit  : 60/20
  4764 ;;		Unchanged: FFF9F/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0
  4769 ;;      Totals:         0       0       0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_main
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779  07EB                     _isPermitSampleTime:	
  4780                           
  4781                           ;common.c: 463: if(timer.timer10msStopWatch >= 10)
  4782                           
  4783                           ; Regs used in _isPermitSampleTime: [wreg]
  4784  07EB  300A               	movlw	10
  4785  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  4786  07ED  022C               	subwf	_timer^(0+128),w
  4787  07EE  1803               	btfsc	3,0
  4788                           
  4789                           ;common.c: 464: {
  4790                           ;common.c: 465: return 1;
  4791  07EF  3401               	retlw	1
  4792                           
  4793                           ;common.c: 467: else
  4794                           ;common.c: 468: return 0;
  4795  07F0  3400               	retlw	0
  4796  07F1                     __end_of_isPermitSampleTime:	
  4797                           
  4798                           	psect	text815
  4799  07F1                     __ptext815:	
  4800 ;; =============== function _adc_start ends ============
  4801                           
  4802                           
  4803 ;; *************** function _dac_init *****************
  4804 ;; Defined at:
  4805 ;;		line 14 in file "C:\temp\dev\AK7030-OTP\periph.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;		None               void
  4812 ;; Registers used:
  4813 ;;		wreg
  4814 ;; Tracked objects:
  4815 ;;		On entry : 17F/20
  4816 ;;		On exit  : 17F/20
  4817 ;;		Unchanged: FFE80/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    2
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832  07F1                     _dac_init:	
  4833                           
  4834                           ;periph.c: 15: DACCON|=1;
  4835                           
  4836                           ; Regs used in _dac_init: [wreg]
  4837  07F1  1407               	bsf	7,0	;volatile
  4838                           
  4839                           ;periph.c: 17: DACR0=0x0F;
  4840  07F2  300F               	movlw	15
  4841  07F3  0088               	movwf	8	;volatile
  4842                           
  4843                           ;periph.c: 18: DACCON|=(1)<<2;
  4844  07F4  1507               	bsf	7,2	;volatile
  4845  07F5  0008               	return
  4846  07F6                     __end_of_dac_init:	
  4847                           
  4848                           	psect	text817
  4849  07F6                     __ptext817:	
  4850 ;; =============== function _adc_test_init ends ============
  4851                           
  4852                           
  4853 ;; *************** function _timer1_interrupt_config *****************
  4854 ;; Defined at:
  4855 ;;		line 221 in file "C:\temp\dev\AK7030-OTP\common.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;		None               void
  4862 ;; Registers used:
  4863 ;;		None
  4864 ;; Tracked objects:
  4865 ;;		On entry : 17F/20
  4866 ;;		On exit  : 17F/20
  4867 ;;		Unchanged: FFE80/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4869 ;;      Params:         0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    2
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882  07F6                     _timer1_interrupt_config:	
  4883                           
  4884                           ;common.c: 222: GIE = 1;
  4885                           
  4886                           ; Regs used in _timer1_interrupt_config: []
  4887  07F6  178B               	bsf	11,7
  4888                           
  4889                           ;common.c: 223: PEIE = 1;
  4890  07F7  170B               	bsf	11,6
  4891  07F8  0008               	return
  4892  07F9                     __end_of_timer1_interrupt_config:	
  4893                           
  4894                           	psect	text818
  4895  0797                     __ptext818:	
  4896 ;; =============== function _timer1_interrupt_config ends ============
  4897                           
  4898                           
  4899 ;; *************** function _timer1_config *****************
  4900 ;; Defined at:
  4901 ;;		line 209 in file "C:\temp\dev\AK7030-OTP\common.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;		None               void
  4908 ;; Registers used:
  4909 ;;		wreg
  4910 ;; Tracked objects:
  4911 ;;		On entry : 17F/40
  4912 ;;		On exit  : 17F/20
  4913 ;;		Unchanged: FFE80/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4915 ;;      Params:         0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    2
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928  0797                     _timer1_config:	
  4929                           
  4930                           ;common.c: 211: TMR1H=0xCF;
  4931                           
  4932                           ; Regs used in _timer1_config: [wreg]
  4933  0797  30CF               	movlw	207
  4934  0798  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0799  008F               	movwf	15	;volatile
  4936                           
  4937                           ;common.c: 212: TMR1L=0x2C;
  4938  079A  302C               	movlw	44
  4939  079B  008E               	movwf	14	;volatile
  4940                           
  4941                           ;common.c: 213: T1CON=0xE1;
  4942  079C  30E1               	movlw	225
  4943  079D  0090               	movwf	16	;volatile
  4944                           
  4945                           ;common.c: 214: TMR1IE=1;
  4946  079E  1683               	bsf	3,5	;RP0=1, select bank1
  4947  079F  140C               	bsf	12,0
  4948  07A0  0008               	return
  4949  07A1                     __end_of_timer1_config:	
  4950                           
  4951                           	psect	text819
  4952  07BB                     __ptext819:	
  4953 ;; =============== function _timer1_config ends ============
  4954                           
  4955                           
  4956 ;; *************** function _clock_config *****************
  4957 ;; Defined at:
  4958 ;;		line 201 in file "C:\temp\dev\AK7030-OTP\common.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;		None               void
  4965 ;; Registers used:
  4966 ;;		wreg, status,2
  4967 ;; Tracked objects:
  4968 ;;		On entry : 17F/20
  4969 ;;		On exit  : 17F/40
  4970 ;;		Unchanged: FFE80/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4972 ;;      Params:         0       0       0       0       0
  4973 ;;      Locals:         0       0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0
  4975 ;;      Totals:         0       0       0       0       0
  4976 ;;Total ram usage:        0 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    2
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985  07BB                     _clock_config:	
  4986                           
  4987                           ;common.c: 203: CLKPR = 0x80;
  4988                           
  4989                           ; Regs used in _clock_config: [wreg+status,2]
  4990  07BB  3080               	movlw	128
  4991  07BC  1283               	bcf	3,5	;RP0=0, select bank2
  4992  07BD  1703               	bsf	3,6	;RP1=1, select bank2
  4993  07BE  0088               	movwf	8	;volatile
  4994                           
  4995                           ;common.c: 204: CLKPR = 0x00;
  4996  07BF  0188               	clrf	8	;volatile
  4997  07C0                     l1770:	
  4998                           ;common.c: 205: while(CLKPCE);
  4999                           
  5000  07C0  1F88               	btfss	8,7
  5001  07C1  0008               	return
  5002  07C2  2FC0               	goto	l1770
  5003  07C3                     __end_of_clock_config:	
  5004                           
  5005                           	psect	text820
  5006  07A1                     __ptext820:	
  5007 ;; =============== function _clock_config ends ============
  5008                           
  5009                           
  5010 ;; *************** function _setPA6 *****************
  5011 ;; Defined at:
  5012 ;;		line 281 in file "C:\temp\dev\AK7030-OTP\main.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  bValue          1    wreg     unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  bValue          1    0[BANK0 ] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg
  5021 ;; Tracked objects:
  5022 ;;		On entry : 40/0
  5023 ;;		On exit  : 60/0
  5024 ;;		Unchanged: FFF9F/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5026 ;;      Params:         0       0       0       0       0
  5027 ;;      Locals:         0       1       0       0       0
  5028 ;;      Temps:          0       0       0       0       0
  5029 ;;      Totals:         0       1       0       0       0
  5030 ;;Total ram usage:        1 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    2
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_main
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039  07A1                     _setPA6:	
  5040                           
  5041                           ; Regs used in _setPA6: [wreg]
  5042                           ;setPA6@bValue stored from wreg
  5043  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  5044  07A2  00A0               	movwf	setPA6@bValue
  5045                           
  5046                           ;main.c: 282: if( bValue )
  5047  07A3  0820               	movf	setPA6@bValue,w
  5048  07A4  1903               	btfsc	3,2
  5049  07A5  2FA8               	goto	l719
  5050                           
  5051                           ;main.c: 284: PA6 = 1;
  5052  07A6  1705               	bsf	5,6
  5053  07A7  0008               	return
  5054  07A8                     l719:	
  5055                           
  5056                           ;main.c: 288: else
  5057                           ;main.c: 290: PA6= 0;
  5058  07A8  1305               	bcf	5,6
  5059  07A9  0008               	return
  5060  07AA                     __end_of_setPA6:	
  5061                           
  5062                           	psect	text821
  5063  07C3                     __ptext821:	
  5064 ;; =============== function _setPA6 ends ============
  5065                           
  5066                           
  5067 ;; *************** function _setPA3 *****************
  5068 ;; Defined at:
  5069 ;;		line 235 in file "C:\temp\dev\AK7030-OTP\main.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  bValue          1    wreg     unsigned char 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  bValue          1    0[BANK0 ] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;		None               void
  5076 ;; Registers used:
  5077 ;;		wreg
  5078 ;; Tracked objects:
  5079 ;;		On entry : 60/0
  5080 ;;		On exit  : 60/0
  5081 ;;		Unchanged: FFF9F/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         0       0       0       0       0
  5084 ;;      Locals:         0       1       0       0       0
  5085 ;;      Temps:          0       0       0       0       0
  5086 ;;      Totals:         0       1       0       0       0
  5087 ;;Total ram usage:        1 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    2
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_main
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096  07C3                     _setPA3:	
  5097                           
  5098                           ; Regs used in _setPA3: [wreg]
  5099                           ;setPA3@bValue stored from wreg
  5100  07C3  00A0               	movwf	setPA3@bValue
  5101                           
  5102                           ;main.c: 236: if( bValue )
  5103  07C4  0820               	movf	setPA3@bValue,w
  5104  07C5  1903               	btfsc	3,2
  5105  07C6  2FC9               	goto	l709
  5106                           
  5107                           ;main.c: 238: PA3 = 1;
  5108  07C7  1585               	bsf	5,3
  5109  07C8  0008               	return
  5110  07C9                     l709:	
  5111                           
  5112                           ;main.c: 242: else
  5113                           ;main.c: 244: PA3 = 0;
  5114  07C9  1185               	bcf	5,3
  5115  07CA  0008               	return
  5116  07CB                     __end_of_setPA3:	
  5117                           
  5118                           	psect	text822
  5119  07CB                     __ptext822:	
  5120 ;; =============== function _setPA3 ends ============
  5121                           
  5122                           
  5123 ;; *************** function _setPA2 *****************
  5124 ;; Defined at:
  5125 ;;		line 218 in file "C:\temp\dev\AK7030-OTP\main.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  bValue          1    wreg     unsigned char 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  bValue          1    0[BANK0 ] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;		None               void
  5132 ;; Registers used:
  5133 ;;		wreg
  5134 ;; Tracked objects:
  5135 ;;		On entry : 60/0
  5136 ;;		On exit  : 60/0
  5137 ;;		Unchanged: FFF9F/0
  5138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5139 ;;      Params:         0       0       0       0       0
  5140 ;;      Locals:         0       1       0       0       0
  5141 ;;      Temps:          0       0       0       0       0
  5142 ;;      Totals:         0       1       0       0       0
  5143 ;;Total ram usage:        1 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    2
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_main
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152  07CB                     _setPA2:	
  5153                           
  5154                           ; Regs used in _setPA2: [wreg]
  5155                           ;setPA2@bValue stored from wreg
  5156  07CB  00A0               	movwf	setPA2@bValue
  5157                           
  5158                           ;main.c: 219: if( bValue )
  5159  07CC  0820               	movf	setPA2@bValue,w
  5160  07CD  1903               	btfsc	3,2
  5161  07CE  2FD1               	goto	l704
  5162                           
  5163                           ;main.c: 221: PA2 = 1;
  5164  07CF  1505               	bsf	5,2
  5165  07D0  0008               	return
  5166  07D1                     l704:	
  5167                           
  5168                           ;main.c: 225: else
  5169                           ;main.c: 227: PA2 = 0;
  5170  07D1  1105               	bcf	5,2
  5171  07D2  0008               	return
  5172  07D3                     __end_of_setPA2:	
  5173                           
  5174                           	psect	text823
  5175  07D3                     __ptext823:	
  5176 ;; =============== function _setPA2 ends ============
  5177                           
  5178                           
  5179 ;; *************** function _setPA1 *****************
  5180 ;; Defined at:
  5181 ;;		line 200 in file "C:\temp\dev\AK7030-OTP\main.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  bValue          1    wreg     unsigned char 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  bValue          1    0[BANK0 ] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;		None               void
  5188 ;; Registers used:
  5189 ;;		wreg
  5190 ;; Tracked objects:
  5191 ;;		On entry : 60/0
  5192 ;;		On exit  : 60/0
  5193 ;;		Unchanged: FFF9F/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5195 ;;      Params:         0       0       0       0       0
  5196 ;;      Locals:         0       1       0       0       0
  5197 ;;      Temps:          0       0       0       0       0
  5198 ;;      Totals:         0       1       0       0       0
  5199 ;;Total ram usage:        1 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    2
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_main
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208  07D3                     _setPA1:	
  5209                           
  5210                           ; Regs used in _setPA1: [wreg]
  5211                           ;setPA1@bValue stored from wreg
  5212  07D3  00A0               	movwf	setPA1@bValue
  5213                           
  5214                           ;main.c: 201: if( bValue )
  5215  07D4  0820               	movf	setPA1@bValue,w
  5216  07D5  1903               	btfsc	3,2
  5217  07D6  2FD9               	goto	l699
  5218                           
  5219                           ;main.c: 203: PA1 = 1;
  5220  07D7  1485               	bsf	5,1
  5221  07D8  0008               	return
  5222  07D9                     l699:	
  5223                           
  5224                           ;main.c: 207: else
  5225                           ;main.c: 209: PA1 = 0;
  5226  07D9  1085               	bcf	5,1
  5227  07DA  0008               	return
  5228  07DB                     __end_of_setPA1:	
  5229                           
  5230                           	psect	text824
  5231  07DB                     __ptext824:	
  5232 ;; =============== function _setPA1 ends ============
  5233                           
  5234                           
  5235 ;; *************** function _setPA0 *****************
  5236 ;; Defined at:
  5237 ;;		line 183 in file "C:\temp\dev\AK7030-OTP\main.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  bValue          1    wreg     unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  bValue          1    0[BANK0 ] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;		None               void
  5244 ;; Registers used:
  5245 ;;		wreg
  5246 ;; Tracked objects:
  5247 ;;		On entry : 60/0
  5248 ;;		On exit  : 60/0
  5249 ;;		Unchanged: FFF9F/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5251 ;;      Params:         0       0       0       0       0
  5252 ;;      Locals:         0       1       0       0       0
  5253 ;;      Temps:          0       0       0       0       0
  5254 ;;      Totals:         0       1       0       0       0
  5255 ;;Total ram usage:        1 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    2
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_main
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264  07DB                     _setPA0:	
  5265                           
  5266                           ; Regs used in _setPA0: [wreg]
  5267                           ;setPA0@bValue stored from wreg
  5268  07DB  00A0               	movwf	setPA0@bValue
  5269                           
  5270                           ;main.c: 184: if( bValue )
  5271  07DC  0820               	movf	setPA0@bValue,w
  5272  07DD  1903               	btfsc	3,2
  5273  07DE  2FE1               	goto	l694
  5274                           
  5275                           ;main.c: 186: PA0 = 1;
  5276  07DF  1405               	bsf	5,0
  5277  07E0  0008               	return
  5278  07E1                     l694:	
  5279                           
  5280                           ;main.c: 190: else
  5281                           ;main.c: 192: PA0 = 0;
  5282  07E1  1005               	bcf	5,0
  5283  07E2  0008               	return
  5284  07E3                     __end_of_setPA0:	
  5285                           
  5286                           	psect	text825
  5287  07E3                     __ptext825:	
  5288 ;; =============== function _setPA0 ends ============
  5289                           
  5290                           
  5291 ;; *************** function _setPB1 *****************
  5292 ;; Defined at:
  5293 ;;		line 166 in file "C:\temp\dev\AK7030-OTP\main.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  bValue          1    wreg     unsigned char 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  bValue          1    0[BANK0 ] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;		None               void
  5300 ;; Registers used:
  5301 ;;		wreg
  5302 ;; Tracked objects:
  5303 ;;		On entry : 60/0
  5304 ;;		On exit  : 60/0
  5305 ;;		Unchanged: FFF9F/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5307 ;;      Params:         0       0       0       0       0
  5308 ;;      Locals:         0       1       0       0       0
  5309 ;;      Temps:          0       0       0       0       0
  5310 ;;      Totals:         0       1       0       0       0
  5311 ;;Total ram usage:        1 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    2
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_main
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320  07E3                     _setPB1:	
  5321                           
  5322                           ; Regs used in _setPB1: [wreg]
  5323                           ;setPB1@bValue stored from wreg
  5324  07E3  00A0               	movwf	setPB1@bValue
  5325                           
  5326                           ;main.c: 167: if( bValue )
  5327  07E4  0820               	movf	setPB1@bValue,w
  5328  07E5  1903               	btfsc	3,2
  5329  07E6  2FE9               	goto	l689
  5330                           
  5331                           ;main.c: 169: PB1 = 1;
  5332  07E7  1486               	bsf	6,1
  5333  07E8  0008               	return
  5334  07E9                     l689:	
  5335                           
  5336                           ;main.c: 173: else
  5337                           ;main.c: 175: PB1 = 0;
  5338  07E9  1086               	bcf	6,1
  5339  07EA  0008               	return
  5340  07EB                     __end_of_setPB1:	
  5341                           
  5342                           	psect	text826
  5343  07AA                     __ptext826:	
  5344 ;; =============== function _setPB1 ends ============
  5345                           
  5346                           
  5347 ;; *************** function _setPB0 *****************
  5348 ;; Defined at:
  5349 ;;		line 149 in file "C:\temp\dev\AK7030-OTP\main.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  bValue          1    wreg     unsigned char 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  bValue          1    0[BANK0 ] unsigned char 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;		None               void
  5356 ;; Registers used:
  5357 ;;		wreg
  5358 ;; Tracked objects:
  5359 ;;		On entry : 40/0
  5360 ;;		On exit  : 60/0
  5361 ;;		Unchanged: FFF9F/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5363 ;;      Params:         0       0       0       0       0
  5364 ;;      Locals:         0       1       0       0       0
  5365 ;;      Temps:          0       0       0       0       0
  5366 ;;      Totals:         0       1       0       0       0
  5367 ;;Total ram usage:        1 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    2
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_main
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376  07AA                     _setPB0:	
  5377                           
  5378                           ; Regs used in _setPB0: [wreg]
  5379                           ;setPB0@bValue stored from wreg
  5380  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  5381  07AB  00A0               	movwf	setPB0@bValue
  5382                           
  5383                           ;main.c: 150: if( bValue )
  5384  07AC  0820               	movf	setPB0@bValue,w
  5385  07AD  1903               	btfsc	3,2
  5386  07AE  2FB1               	goto	l684
  5387                           
  5388                           ;main.c: 152: PB0 = 1;
  5389  07AF  1406               	bsf	6,0
  5390  07B0  0008               	return
  5391  07B1                     l684:	
  5392                           
  5393                           ;main.c: 156: else
  5394                           ;main.c: 158: PB0 = 0;
  5395  07B1  1006               	bcf	6,0
  5396  07B2  0008               	return
  5397  07B3                     __end_of_setPB0:	
  5398                           
  5399                           	psect	text827
  5400  0727                     __ptext827:	
  5401 ;; =============== function _setPB0 ends ============
  5402                           
  5403                           
  5404 ;; *************** function _initPin *****************
  5405 ;; Defined at:
  5406 ;;		line 123 in file "C:\temp\dev\AK7030-OTP\main.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;		None               void
  5413 ;; Registers used:
  5414 ;;		None
  5415 ;; Tracked objects:
  5416 ;;		On entry : 160/20
  5417 ;;		On exit  : 160/60
  5418 ;;		Unchanged: FFE9F/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5420 ;;      Params:         0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    2
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433  0727                     _initPin:	
  5434                           
  5435                           ;main.c: 125: PB6 = 1;
  5436                           
  5437                           ; Regs used in _initPin: []
  5438  0727  1283               	bcf	3,5	;RP0=0, select bank0
  5439  0728  1706               	bsf	6,6
  5440                           
  5441                           ;main.c: 126: PBOD6 = 1;
  5442  0729  1683               	bsf	3,5	;RP0=1, select bank3
  5443  072A  1703               	bsf	3,6	;RP1=1, select bank3
  5444  072B  1708               	bsf	8,6
  5445                           
  5446                           ;main.c: 130: PA0 = 0;
  5447  072C  1283               	bcf	3,5	;RP0=0, select bank0
  5448  072D  1303               	bcf	3,6	;RP1=0, select bank0
  5449  072E  1005               	bcf	5,0
  5450                           
  5451                           ;main.c: 131: PA1 = 0;
  5452  072F  1085               	bcf	5,1
  5453                           
  5454                           ;main.c: 132: PA2 = 0;
  5455  0730  1105               	bcf	5,2
  5456                           
  5457                           ;main.c: 133: PA3 = 0;
  5458  0731  1185               	bcf	5,3
  5459                           
  5460                           ;main.c: 134: PB0 = 0;
  5461  0732  1006               	bcf	6,0
  5462                           
  5463                           ;main.c: 135: PB1 = 1;
  5464  0733  1486               	bsf	6,1
  5465                           
  5466                           ;main.c: 136: PA6 = 0;
  5467  0734  1305               	bcf	5,6
  5468                           
  5469                           ;main.c: 138: PB7 = 0;
  5470  0735  1386               	bcf	6,7
  5471                           
  5472                           ;main.c: 139: PBOD7 = 0;
  5473  0736  1683               	bsf	3,5	;RP0=1, select bank3
  5474  0737  1703               	bsf	3,6	;RP1=1, select bank3
  5475  0738  1388               	bcf	8,7
  5476  0739  0008               	return
  5477  073A                     __end_of_initPin:	
  5478                           
  5479                           	psect	text831
  5480  04AB                     __ptext831:	
  5481 ;; =============== function _clearTwelveHoursTimer ends ============
  5482                           
  5483                           
  5484 ;; *************** function _ISR *****************
  5485 ;; Defined at:
  5486 ;;		line 477 in file "C:\temp\dev\AK7030-OTP\common.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;		None               void
  5493 ;; Registers used:
  5494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 60/0
  5498 ;;		Unchanged: FFE00/0
  5499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5500 ;;      Params:         0       0       0       0       0
  5501 ;;      Locals:         0       0       0       0       0
  5502 ;;      Temps:          4       0       0       0       0
  5503 ;;      Totals:         4       0       0       0       0
  5504 ;;Total ram usage:        4 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    1
  5507 ;; This function calls:
  5508 ;;		i1_setAD_ConvertFlag
  5509 ;;		_adc_get
  5510 ;;		_vPutSampleDataIntoTable
  5511 ;; This function is called by:
  5512 ;;		Interrupt level 1
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515  04AB                     _ISR:	
  5516                           
  5517                           ;common.c: 478: static unsigned char ucTimer1sCnt = 0;
  5518                           ;common.c: 480: if(TMR1IF == 1)
  5519  04AB  1C0C               	btfss	12,0
  5520  04AC  2CD4               	goto	i1l4480
  5521                           
  5522                           ;common.c: 481: {
  5523                           ;common.c: 482: TMR1IF = 0 ;
  5524  04AD  100C               	bcf	12,0
  5525                           
  5526                           ;common.c: 483: timer.timer10msStopWatch++;
  5527  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  5528  04AF  3064               	movlw	100
  5529  04B0  0AAC               	incf	_timer^(0+128),f
  5530                           
  5531                           ;common.c: 484: ucTimer1sCnt++;
  5532  04B1  0AAA               	incf	ISR@ucTimer1sCnt^(0+128),f
  5533                           
  5534                           ;common.c: 486: if(ucTimer1sCnt >= 100)
  5535  04B2  022A               	subwf	ISR@ucTimer1sCnt^(0+128),w
  5536  04B3  1C03               	skipc
  5537  04B4  2CD4               	goto	i1l4480
  5538                           
  5539                           ;common.c: 487: {
  5540                           ;common.c: 488: ucTimer1sCnt = 0;
  5541  04B5  01AA               	clrf	ISR@ucTimer1sCnt^(0+128)
  5542                           
  5543                           ;common.c: 489: if(uiBigTimer > 0)
  5544  04B6  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5545  04B7  0420               	iorwf	_uiBigTimer^(0+128),w
  5546  04B8  1903               	skipnz
  5547  04B9  2CC0               	goto	i1l1863
  5548                           
  5549                           ;common.c: 490: uiBigTimer--;
  5550  04BA  3001               	movlw	1
  5551  04BB  02A0               	subwf	_uiBigTimer^(0+128),f
  5552  04BC  3000               	movlw	0
  5553  04BD  1C03               	skipc
  5554  04BE  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  5555  04BF  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  5556  04C0                     i1l1863:	
  5557                           
  5558                           ;common.c: 492: if(uiSmallTimer)
  5559  04C0  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5560  04C1  0422               	iorwf	_uiSmallTimer^(0+128),w
  5561  04C2  1903               	skipnz
  5562  04C3  2CCA               	goto	i1l1864
  5563                           
  5564                           ;common.c: 493: uiSmallTimer--;
  5565  04C4  3001               	movlw	1
  5566  04C5  02A2               	subwf	_uiSmallTimer^(0+128),f
  5567  04C6  3000               	movlw	0
  5568  04C7  1C03               	skipc
  5569  04C8  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  5570  04C9  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  5571  04CA                     i1l1864:	
  5572                           
  5573                           ;common.c: 495: if(uiTwentySecondsTimer)
  5574  04CA  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5575  04CB  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5576  04CC  1903               	skipnz
  5577  04CD  2CD4               	goto	i1l4480
  5578                           
  5579                           ;common.c: 496: uiTwentySecondsTimer--;
  5580  04CE  3001               	movlw	1
  5581  04CF  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  5582  04D0  3000               	movlw	0
  5583  04D1  1C03               	skipc
  5584  04D2  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  5585  04D3  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  5586  04D4                     i1l4480:	
  5587                           
  5588                           ;common.c: 497: }
  5589                           ;common.c: 498: }
  5590                           ;common.c: 500: if(ADIF)
  5591  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  5592  04D5  1D0D               	btfss	13,2
  5593  04D6  2CE5               	goto	i1l1867
  5594  04D7  3001               	movlw	1
  5595                           
  5596                           ;common.c: 501: {
  5597                           ;common.c: 502: ADIF=0;
  5598  04D8  110D               	bcf	13,2
  5599                           
  5600                           ;common.c: 503: setAD_ConvertFlag(1);
  5601  04D9  2575  118A         	fcall	i1_setAD_ConvertFlag
  5602                           
  5603                           ;common.c: 504: vPutSampleDataIntoTable(adc_get(),sampleChannelSelect);
  5604  04DB  2569  118A         	fcall	_adc_get
  5605  04DD  0871               	movf	?_adc_get+1,w
  5606  04DE  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5607  04DF  0870               	movf	?_adc_get,w
  5608  04E0  00F4               	movwf	?_vPutSampleDataIntoTable
  5609  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  5610  04E2  084D               	movf	_sampleChannelSelect,w
  5611  04E3  00F6               	movwf	?_vPutSampleDataIntoTable+2
  5612  04E4  24F2               	fcall	_vPutSampleDataIntoTable
  5613  04E5                     i1l1867:	
  5614  04E5  087C               	movf	??_ISR+3,w
  5615  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  5616  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  5617  04E8  00FF               	movwf	127
  5618  04E9  087B               	movf	??_ISR+2,w
  5619  04EA  008A               	movwf	10
  5620  04EB  087A               	movf	??_ISR+1,w
  5621  04EC  0084               	movwf	4
  5622  04ED  0E79               	swapf	??_ISR^(0+-128),w
  5623  04EE  0083               	movwf	3
  5624  04EF  0EFE               	swapf	126,f
  5625  04F0  0E7E               	swapf	126,w
  5626  04F1  0009               	retfie
  5627  04F2                     __end_of_ISR:	
  5628  04F2                     __ptext834:	
  5629 ;; =============== function _adc_get ends ============
  5630                           
  5631                           
  5632 ;; *************** function _vPutSampleDataIntoTable *****************
  5633 ;; Defined at:
  5634 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\common.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  uiSampleData    2    4[COMMON] unsigned int 
  5637 ;;  channel         1    6[COMMON] unsigned char 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  i               2    7[COMMON] int 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;		None               void
  5642 ;; Registers used:
  5643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5644 ;; Tracked objects:
  5645 ;;		On entry : 60/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: FFE00/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5649 ;;      Params:         3       0       0       0       0
  5650 ;;      Locals:         2       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0
  5652 ;;      Totals:         5       0       0       0       0
  5653 ;;Total ram usage:        5 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_ISR
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661  04F2                     _vPutSampleDataIntoTable:	
  5662                           
  5663                           ;common.c: 107: static unsigned char ucChannelZeroLength = 0;
  5664                           ;common.c: 109: static unsigned char ucChannelSecondLength = 0;
  5665                           ;common.c: 111: static unsigned char ucChannelFifthLength = 0;
  5666                           ;common.c: 113: static unsigned char ucChannelSixthLength = 0;
  5667                           ;common.c: 115: if(channel == 0)
  5668                           
  5669                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  5670  04F2  08F6               	movf	vPutSampleDataIntoTable@channel,f
  5671  04F3  1D03               	skipz
  5672  04F4  2D05               	goto	i1l4408
  5673                           
  5674                           ;common.c: 116: {
  5675                           ;common.c: 117: if(ucChannelZeroLength < 12)
  5676  04F5  300C               	movlw	12
  5677  04F6  027D               	subwf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  5678  04F7  1803               	skipnc
  5679  04F8  2CFF               	goto	i1l4404
  5680                           
  5681                           ;common.c: 118: {
  5682                           ;common.c: 119: uiSampleZero[ucChannelZeroLength] = uiSampleData;
  5683  04F9  1003               	clrc
  5684  04FA  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  5685  04FB  3ED1               	addlw	_uiSampleZero& (0+255)
  5686  04FC  2579               	fcall	PL2	;call to abstracted procedure
  5687                           
  5688                           ;common.c: 121: ucChannelZeroLength++;
  5689  04FD  0AFD               	incf	vPutSampleDataIntoTable@ucChannelZeroLength,f
  5690                           
  5691                           ;common.c: 122: }
  5692  04FE  0008               	return
  5693  04FF                     i1l4404:	
  5694                           
  5695                           ;common.c: 123: else
  5696                           ;common.c: 124: {
  5697                           ;common.c: 125: ucChannelZeroLength = 0;
  5698  04FF  01FD               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  5699                           
  5700                           ;common.c: 127: uiSampleZero[ucChannelZeroLength] = uiSampleData;
  5701  0500  1003               	clrc
  5702  0501  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  5703  0502  3ED1               	addlw	_uiSampleZero& (0+255)
  5704  0503  2579               	fcall	PL2	;call to abstracted procedure
  5705  0504  0008               	return
  5706  0505                     i1l4408:	
  5707                           
  5708                           ;common.c: 130: else if(channel == 2)
  5709  0505  0876               	movf	vPutSampleDataIntoTable@channel,w
  5710  0506  3A02               	xorlw	2
  5711  0507  1D03               	skipz
  5712  0508  2D19               	goto	i1l4420
  5713                           
  5714                           ;common.c: 131: {
  5715                           ;common.c: 132: if(ucChannelSecondLength < 12)
  5716  0509  300C               	movlw	12
  5717  050A  026D               	subwf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  5718  050B  1803               	skipnc
  5719  050C  2D13               	goto	i1l4416
  5720                           
  5721                           ;common.c: 133: {
  5722                           ;common.c: 134: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  5723  050D  1003               	clrc
  5724  050E  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  5725  050F  3EB9               	addlw	_uiSampleChannelSecond& (0+255)
  5726  0510  2579               	fcall	PL2	;call to abstracted procedure
  5727                           
  5728                           ;common.c: 136: ucChannelSecondLength++;
  5729  0511  0AED               	incf	vPutSampleDataIntoTable@ucChannelSecondLength,f
  5730                           
  5731                           ;common.c: 137: }
  5732  0512  0008               	return
  5733  0513                     i1l4416:	
  5734                           
  5735                           ;common.c: 138: else
  5736                           ;common.c: 139: {
  5737                           ;common.c: 140: ucChannelSecondLength = 0;
  5738  0513  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  5739                           
  5740                           ;common.c: 142: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  5741  0514  1003               	clrc
  5742  0515  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  5743  0516  3EB9               	addlw	_uiSampleChannelSecond& (0+255)
  5744  0517  2579               	fcall	PL2	;call to abstracted procedure
  5745  0518  0008               	return
  5746  0519                     i1l4420:	
  5747                           
  5748                           ;common.c: 145: else if(channel == 5)
  5749  0519  0876               	movf	vPutSampleDataIntoTable@channel,w
  5750  051A  3A05               	xorlw	5
  5751  051B  1D03               	skipz
  5752  051C  2D2C               	goto	i1l4432
  5753                           
  5754                           ;common.c: 146: {
  5755                           ;common.c: 147: if(ucChannelFifthLength < 12)
  5756  051D  300C               	movlw	12
  5757  051E  026C               	subwf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  5758  051F  1803               	skipnc
  5759  0520  2D26               	goto	i1l4428
  5760                           
  5761                           ;common.c: 148: {
  5762                           ;common.c: 149: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  5763  0521  1003               	clrc
  5764  0522  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  5765  0523  2581               	fcall	PL4	;call to abstracted procedure
  5766                           
  5767                           ;common.c: 151: ucChannelFifthLength++;
  5768  0524  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFifthLength,f
  5769                           
  5770                           ;common.c: 152: }
  5771  0525  0008               	return
  5772  0526                     i1l4428:	
  5773                           
  5774                           ;common.c: 153: else
  5775                           ;common.c: 154: {
  5776                           ;common.c: 155: ucChannelFifthLength = 0;
  5777  0526  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  5778                           
  5779                           ;common.c: 157: uiSampleChannelSecond[ucChannelFifthLength] = uiSampleData;
  5780  0527  1003               	clrc
  5781  0528  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  5782  0529  3EB9               	addlw	_uiSampleChannelSecond& (0+255)
  5783  052A  2579               	fcall	PL2	;call to abstracted procedure
  5784  052B  0008               	return
  5785  052C                     i1l4432:	
  5786                           
  5787                           ;common.c: 160: else if(channel == 6)
  5788  052C  0876               	movf	vPutSampleDataIntoTable@channel,w
  5789  052D  3A06               	xorlw	6
  5790  052E  1D03               	skipz
  5791  052F  2D3F               	goto	i1l4444
  5792                           
  5793                           ;common.c: 161: {
  5794                           ;common.c: 162: if(ucChannelSixthLength < 12)
  5795  0530  300C               	movlw	12
  5796  0531  026E               	subwf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  5797  0532  1803               	skipnc
  5798  0533  2D39               	goto	i1l4440
  5799                           
  5800                           ;common.c: 163: {
  5801                           ;common.c: 164: uiSampleChannelFifth[ucChannelSixthLength] = uiSampleData;
  5802  0534  1003               	clrc
  5803  0535  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  5804  0536  2581               	fcall	PL4	;call to abstracted procedure
  5805                           
  5806                           ;common.c: 166: ucChannelSixthLength++;
  5807  0537  0AEE               	incf	vPutSampleDataIntoTable@ucChannelSixthLength,f
  5808                           
  5809                           ;common.c: 167: }
  5810  0538  0008               	return
  5811  0539                     i1l4440:	
  5812                           
  5813                           ;common.c: 168: else
  5814                           ;common.c: 169: {
  5815                           ;common.c: 170: ucChannelSixthLength = 0;
  5816  0539  01EE               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  5817                           
  5818                           ;common.c: 172: uiSampleChannelSecond[ucChannelSixthLength] = uiSampleData;
  5819  053A  1003               	clrc
  5820  053B  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  5821  053C  3EB9               	addlw	_uiSampleChannelSecond& (0+255)
  5822  053D  2579               	fcall	PL2	;call to abstracted procedure
  5823  053E  0008               	return
  5824  053F                     i1l4444:	
  5825                           
  5826                           ;common.c: 175: else
  5827                           ;common.c: 176: {
  5828                           ;common.c: 177: ucChannelZeroLength = 0;
  5829  053F  01FD               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  5830                           
  5831                           ;common.c: 179: ucChannelSecondLength = 0;
  5832  0540  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  5833                           
  5834                           ;common.c: 181: ucChannelFifthLength = 0;
  5835  0541  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  5836                           
  5837                           ;common.c: 183: ucChannelSixthLength = 0;
  5838  0542  01EE               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  5839                           
  5840                           ;common.c: 185: for(int i = 0;i < 12; i++)
  5841  0543  01F7               	clrf	vPutSampleDataIntoTable@i
  5842  0544  01F8               	clrf	vPutSampleDataIntoTable@i+1
  5843  0545                     i1l4450:	
  5844                           
  5845                           ;common.c: 186: {
  5846                           ;common.c: 187: uiSampleZero[i] = 0;
  5847  0545  1003               	clrc
  5848  0546  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5849  0547  3ED1               	addlw	_uiSampleZero& (0+255)
  5850  0548  0084               	movwf	4
  5851  0549  1383               	bcf	3,7	;select IRP bank1
  5852                           
  5853                           ;common.c: 189: uiSampleChannelSecond[i] = 0;
  5854  054A  258A  118A         	fcall	PL7	;call to abstracted procedure
  5855  054C  3EB9               	addlw	_uiSampleChannelSecond& (0+255)
  5856  054D  0084               	movwf	4
  5857                           
  5858                           ;common.c: 191: uiSampleChannelFifth[i] = 0;
  5859  054E  258A  118A         	fcall	PL7	;call to abstracted procedure
  5860  0550  3EA8               	addlw	_uiSampleChannelFifth& (0+255)
  5861  0551  0084               	movwf	4
  5862  0552  1783               	bsf	3,7	;select IRP bank3
  5863                           
  5864                           ;common.c: 193: uiSampleChannelSixth[i] = 0;
  5865  0553  258A  118A         	fcall	PL7	;call to abstracted procedure
  5866  0555  3E90               	addlw	_uiSampleChannelSixth& (0+255)
  5867  0556  0084               	movwf	4
  5868  0557  0180               	clrf	0
  5869  0558  0A84               	incf	4,f
  5870  0559  0180               	clrf	0
  5871  055A  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5872  055B  1903               	skipnz
  5873  055C  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5874  055D  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5875  055E  3A80               	xorlw	128
  5876  055F  00FF               	movwf	127
  5877  0560  3080               	movlw	128
  5878  0561  027F               	subwf	127,w
  5879  0562  1D03               	skipz
  5880  0563  2D66               	goto	u161_25
  5881  0564  300C               	movlw	12
  5882  0565  0277               	subwf	vPutSampleDataIntoTable@i,w
  5883  0566                     u161_25:	
  5884  0566  1803               	btfsc	3,0
  5885  0567  0008               	return
  5886  0568  2D45               	goto	i1l4450
  5887  0569                     __end_of_vPutSampleDataIntoTable:	
  5888  0569                     __ptext833:	
  5889 ;; =============== function i1_setAD_ConvertFlag ends ============
  5890                           
  5891                           
  5892 ;; *************** function _adc_get *****************
  5893 ;; Defined at:
  5894 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\periph.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  val             2    2[COMMON] unsigned int 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  2    0[COMMON] unsigned int 
  5901 ;; Registers used:
  5902 ;;		wreg
  5903 ;; Tracked objects:
  5904 ;;		On entry : 60/20
  5905 ;;		On exit  : 60/20
  5906 ;;		Unchanged: FFF9F/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5908 ;;      Params:         2       0       0       0       0
  5909 ;;      Locals:         2       0       0       0       0
  5910 ;;      Temps:          0       0       0       0       0
  5911 ;;      Totals:         4       0       0       0       0
  5912 ;;Total ram usage:        4 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_ISR
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920  0569                     _adc_get:	
  5921                           
  5922                           ;periph.c: 106: unsigned int val;
  5923                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  5924                           
  5925                           ; Regs used in _adc_get: [wreg]
  5926  0569  1283               	bcf	3,5	;RP0=0, select bank0
  5927  056A  081E               	movf	30,w	;volatile
  5928  056B  00F3               	movwf	adc_get@val+1
  5929  056C  01F2               	clrf	adc_get@val
  5930  056D  1683               	bsf	3,5	;RP0=1, select bank1
  5931  056E  081E               	movf	30,w	;volatile
  5932  056F  04F2               	iorwf	adc_get@val,f
  5933                           
  5934                           ;periph.c: 108: return val;
  5935  0570  0873               	movf	adc_get@val+1,w
  5936  0571  00F1               	movwf	?_adc_get+1
  5937  0572  0872               	movf	adc_get@val,w
  5938  0573  00F0               	movwf	?_adc_get
  5939  0574  0008               	return
  5940  0575                     __end_of_adc_get:	
  5941  0575                     __ptext832:	
  5942 ;; =============== function _ISR ends ============
  5943                           
  5944                           
  5945 ;; *************** function i1_setAD_ConvertFlag *****************
  5946 ;; Defined at:
  5947 ;;		line 235 in file "C:\temp\dev\AK7030-OTP\common.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  setAD_Conver    1    wreg     unsigned char 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;		None               void
  5954 ;; Registers used:
  5955 ;;		wreg
  5956 ;; Tracked objects:
  5957 ;;		On entry : 60/0
  5958 ;;		On exit  : 60/20
  5959 ;;		Unchanged: FFF9F/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5961 ;;      Params:         0       0       0       0       0
  5962 ;;      Locals:         1       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0
  5964 ;;      Totals:         1       0       0       0       0
  5965 ;;Total ram usage:        1 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_ISR
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973  0575                     i1_setAD_ConvertFlag:	
  5974                           
  5975                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5976                           ;i1setAD_ConvertFlag@flag stored from wreg
  5977  0575  00F0               	movwf	i1setAD_ConvertFlag@flag
  5978                           
  5979                           ;common.c: 236: adc_convert_flag = flag;
  5980  0576  1683               	bsf	3,5	;RP0=1, select bank1
  5981  0577  00AB               	movwf	_adc_convert_flag^(0+128)
  5982  0578  0008               	return
  5983  0579                     __end_ofi1_setAD_ConvertFlag:	
  5984  0579                     PL2:	
  5985  0579  0084               	movwf	4
  5986  057A  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5987  057B  1383               	bcf	3,7	;select IRP bank1
  5988  057C  0080               	movwf	0
  5989  057D  0A84               	incf	4,f
  5990  057E  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5991  057F  0080               	movwf	0
  5992  0580  0008               	return
  5993  0581                     PL4:	
  5994  0581  3EA8               	addlw	_uiSampleChannelFifth& (0+255)
  5995  0582  0084               	movwf	4
  5996  0583  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5997  0584  1783               	bsf	3,7	;select IRP bank3
  5998  0585  0080               	movwf	0
  5999  0586  0A84               	incf	4,f
  6000  0587  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6001  0588  0080               	movwf	0
  6002  0589  0008               	return
  6003  058A                     PL7:	
  6004  058A  0180               	clrf	0
  6005  058B  0A84               	incf	4,f
  6006  058C  0180               	clrf	0
  6007  058D  1003               	clrc
  6008  058E  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6009  058F  0008               	return
  6010                           
  6011                           	psect	intentry
  6012  0004                     __pintentry:	
  6013                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6014                           
  6015  0004                     interrupt_function:	
  6016  007E                     saved_w	set	btemp
  6017  0004  00FE               	movwf	btemp
  6018  0005  0E03               	swapf	3,w
  6019  0006  00F9               	movwf	??_ISR
  6020  0007  0804               	movf	4,w
  6021  0008  00FA               	movwf	??_ISR+1
  6022  0009  080A               	movf	10,w
  6023  000A  00FB               	movwf	??_ISR+2
  6024  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6025  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6026  000D  087F               	movf	btemp+1,w
  6027  000E  00FC               	movwf	??_ISR+3
  6028  000F  118A  2CAB         	ljmp	_ISR
  6029                           
  6030                           	psect	text835
  6031  0000                     __ptext835:	
  6032 ;; =============== function _vPutSampleDataIntoTable ends ============
  6033                           
  6034  007E                     btemp	set	126	;btemp
  6035  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Feb 12 14:27:36 2020

                              ??_clock_config 0020                                             pc 0002  
                                          _GO 00F9                                            fsr 0004  
                    ?_timer1_interrupt_config 0070                                           l704 07D1  
                                         l709 07C9                                           l814 0160  
                                         l719 07A8                                           l681 0000  
                                         l675 0000                                           l684 07B1  
                                         l748 005C                                           l829 0162  
                                         l694 07E1                                           l678 0000  
                                         l790 00D8                                           l689 07E9  
                                         l857 019D                                           l699 07D9  
                                         l977 0335                                           _PA0 0028  
                                         _PA1 0029                                           _GIE 005F  
                                         _PB0 0030                                           _PA2 002A  
                                         _PB1 0031                                           _PA3 002B  
                                         _PA6 002E                                           _PB6 0036  
                                         _PB7 0037                                           _ISR 04AB  
                                         fsr0 0004                                           indf 0000  
                      ??_startThreeHoursTimer 0022                                          S5510 074B  
                                        S5512 0759                                          S5514 0767  
                                        S5516 06CE                                          ?_ISR 0070  
                          __size_of_AD_Sample 0022                        ?_getAdOriginalCh1Value 0046  
                                        l1001 0389                                          l1053 0481  
                                        l2500 0000                                          l4200 06C8  
                                        l2520 0000                                          l4202 0000  
                                        l4210 0000                                          l2514 0000  
                                        l5010 02FB                                          l4204 0000  
                                        l4212 0000                                          l4220 0000  
                                        l5012 0000                                          l5004 02EE  
                                        l5100 037C                                          l1822 0000  
                                        l4206 0000                                          l4214 0000  
                                        l4222 0000                                          l4230 0000  
                                        l4310 0000                                          l5110 03B5  
                                        l5102 0000                                          l5030 0317  
                                        l5022 0309                                          l5014 02FD  
                                        l4208 0000                                          l4216 0000  
                                        l4224 0000                                          l4232 0000  
                                        l4240 0000                                          l4304 0000  
                                        l4312 0000                                          l5200 046D  
                                        l5120 03C9                                          l5112 0000  
                                        l5104 0000                                          l5040 0000  
                                        l5024 0000                                          l5008 0000  
                                        l1825 0000                                          l4218 0000  
                                        l4226 0000                                          l1770 07C0  
                                        l4234 0000                                          l4250 0000  
                                        l4242 0000                                          l4306 0000  
                                        l4322 0000                                          l4330 0000  
                                        l1738 0000                                          l5210 0000  
                                        l5202 046F                                          l5130 03DA  
                                        l5122 0000                                          l5114 0000  
                                        l5106 03AF                                          l5050 0000  
                                        l5042 032D                                          l5034 0320  
                                        l5026 030E                                          l5018 0303  
                                        l1819 0000                                          l4228 0000  
                                        l4236 0000                                          l4244 0000  
                                        l4252 0000                                          l4260 0000  
                                        l4500 0000                                          l5212 0000  
                                        l5140 0000                                          l5132 0000  
                                        l5124 03CC                                          l5116 03BD  
                                        l5060 0344                                          l5052 033D  
                                        l5044 0000                                          l5036 0000  
                                        l5028 0000                                          l5220 048E  
                                        l1773 0000                                          l4238 0000  
                                        l4246 0000                                          l4254 0000  
                                        l4334 0000                                          l1782 0000  
                                        l5206 0000                                          l5142 0000  
                                        l5134 03DD                                          l5070 0355  
                                        l5054 0000                                          l5038 0000  
                                        l1791 0000                                          l1776 0000  
                                        l4248 0000                                          l4256 0000  
                                        l1856 0000                                          l4272 0000  
                                        l4280 0000                                          l4328 0000  
                                        l4336 0000                                          l4352 05B6  
                                        l4504 0000                                          l4520 0683  
                                        l4512 0000                                          l5216 0482  
                                        l5208 0000                                          l5160 0405  
                                        l5144 0000                                          l5128 0000  
                                        l5080 0000                                          l5064 0000  
                                        l5048 0000                                          l4600 007F  
                                        l1785 0000                                          l4258 0670  
                                        l4274 0000                                          l4282 0000  
                                        l4354 0000                                          l4346 0000  
                                        l1794 0000                                          l4530 0691  
                                        l5170 0000                                          l5154 0000  
                                        l5146 0000                                          l5138 0000  
                                        l5090 0373                                          l5082 0368  
                                        l5074 0000                                          l5066 0352  
                                        l4610 008F                                          l4602 0000  
                                        l1779 0000                                          l4196 0000  
                                        l4372 061F                                          l4356 0000  
                                        l4460 0000                                          l1788 0000  
                                        l4524 0689                                          l4516 0000  
                                        l4508 0000                                          l4532 0000  
                                        l4540 0000                                          l5180 0000  
                                        l5164 040B                                          l5156 0402  
                                        l5148 03F0                                          l5092 0000  
                                        l5084 0000                                          l5076 035F  
                                        l5068 0000                                          l4620 0098  
                                        l4612 0000                                          l4604 0082  
                                        l4198 0000                                          l4286 0000  
                                        l4374 05DF                                          l4366 05DE  
                                        l4358 0000                                          l4534 0000  
                                        l5190 0458                                          l5182 0000  
                                        l5174 0417                                          l5158 0000  
                                        l5094 037A                                          l4710 016A  
                                        l4702 015E                                          l4614 0091  
                                        l4550 0000                                          l4542 0000  
                                        l4288 0000                                          l4392 0000  
                                        l4376 0621                                          l4456 0000  
                                        l4528 0690                                          l4536 0000  
                                        l5184 0449                                          l5176 0423  
                                        l5168 0000                                          l5088 0000  
                                        l4800 01B8                                          l4704 0163  
                                        l4640 00BD                                          l4632 0000  
                                        l4608 0000                                          l4560 003A  
                                        l4552 0000                                          l4544 0000  
                                        l4298 0000                                          l4386 0000  
                                        l4378 0000                                          l5194 0000  
                                        l5178 0000                                          l4810 01C1  
                                        l4714 016C                                          l4706 0165  
                                        l4642 0000                                          l4626 00A8  
                                        l4634 00B1                                          l4618 0000  
                                        l4562 0000                                          l4554 0000  
                                        l4546 0000                                          l4388 0000  
                                        l5196 0460                                          l5188 0456  
                                        l4900 024B                                          l4820 01D6  
                                        l4716 016E                                          l4660 00E7  
                                        l4652 0000                                          l4644 0000  
                                        l4628 00A9                                          l4580 005D  
                                        l4572 0054                                          l4564 0000  
                                        l4556 0000                                          l4548 0000  
                                        l4494 06B7                                          l4902 024D  
                                        l4830 01DC                                          l4822 0000  
                                        l4726 0174                                          l4670 00FA  
                                        l4654 00DB                                          l4646 00C9  
                                        l4638 00B9                                          l4574 0055  
                                        l4558 0000                                          l4496 0000  
                                        l4912 0256                                          l4840 01FA  
                                        l4832 01E8                                          l4760 018F  
                                        l4736 017A                                          l4664 0000  
                                        l4592 0000                                          l4584 0000  
                                        l4568 0048                                          l4922 0263  
                                        l4834 01F0                                          l4770 01A0  
                                        l4746 0180                                          l4690 0142  
                                        l4674 0105                                          l4666 00EF  
                                        l4658 0000                                          l4594 0075  
                                        l4586 006B                                          l4578 005A  
                                        l4932 0269                                          l4924 0000  
                                        l4844 01FC                                          l4836 01F2  
                                        l4780 01A9                                          l4756 018A  
                                        l4684 0131                                          l4668 0000  
                                        l4596 0000                                          l4588 0000  
                                        l4934 027A                                          l4846 01FE  
                                        l4790 01AF                                          l4774 01A5  
                                        l4766 0191                                          l4758 0000  
                                        l4694 014C                                          l4686 0138  
                                        l4678 010B                                          _ADIE 046A  
                                        l4960 0000                                          l4936 028A  
                                        l4856 0207                                          l4768 019E  
                                        _ADIF 006A                                          l4946 0296  
                                        l4938 028C                                          l4890 023F  
                                        l4866 0210                                          l4778 01A7  
                                        l4698 0155                                          l4980 02D0  
                                        l4972 02B2                                          l4948 0298  
                                        l4892 0241                                          l4876 0221  
                                        l4990 0000                                          l4982 0000  
                                        l4974 02C3                                          l4958 029E  
                                        l4886 0227                                          l4878 0000  
                                        l4992 02DE                                          l4984 02D2  
                                        l4968 02A4                                          l4896 0249  
                                        l4888 0233                                          l4978 0000  
                                        l4996 02E4                                          l4988 0000  
                                        l4998 02E6                                          _ADON 00F8  
               startTwelveHourTimer@uiSetTime 0020                                          u1505 05EC  
                                        u1485 05D9                                          u1495 0600  
                                        u1945 0121                                          u1955 012F  
                                        _PEIE 005E                                          _main 0013  
                                        btemp 007E                       _clearTwentySecondsTimer 06C8  
                                        start 0011                       ?_getAdOriginalCh14Value 0046  
                           main@ucTimerDelay1 005D                             main@ucTimerDelay2 005E  
                           main@ucTimerDelay3 005F                             main@ucTimerDelay4 0060  
                                       ??_ISR 0079                    __end_of_isPermitSampleTime 07F1  
                               main@bInitFlag 0050                           _sampleChannelSelect 004D  
                      ??_getAdOriginaCh4Value 0048                                         ?_main 0070  
                                       _DACR0 0088                                         _CLKPR 0108  
                                       _T1CON 0010                               __end_of_adc_get 0575  
                                       _PBOD6 0C46                                         _PBOD7 0C47  
                                       _TMR1H 000F                                         _TMR1L 000E  
                       setAD_ConvertFlag@flag 0020                       _vPutSampleDataIntoTable 04F2  
                             __end_of_initPin 073A                                         _timer 00AC  
                                       pclath 000A                                         status 0003  
                                       wtemp0 007E                __end_of_getAdOriginalCh14Value 05AF  
               __size_of_startTwelveHourTimer 0014                          __end_of_clrSampeTime 07FB  
                       __end_of_clearAllTimer 06BC                                  __end_of_main 04AB  
                      __size_of_adc_test_init 0015                             __end_of_AD_Sample 0695  
                                      ??_main 0048                          _clearPinPortAndTimer 06AA  
                                      _ADCON0 001F                                        _ADCON1 009F  
                        __end_of_clock_config 07C3                                        _DACCON 0087  
                                      _ADRESH 001E                                        _ADRESL 009E  
                                      _CLKPCE 0847                                        i1l2523 0000  
                                      i1l4402 0000                                        i1l4420 0519  
                                      i1l4404 04FF                                        i1l4430 0000  
                                      i1l4414 0000                                        i1l4406 0000  
                                      i1l1863 04C0                                        i1l4440 0539  
                                      i1l4432 052C                                        i1l4416 0513  
                                      i1l4408 0505                                        i1l1864 04CA  
                                      i1l1785 0000                                        i1l4450 0545  
                                      i1l4442 0000                                        i1l4426 0000  
                                      i1l4418 0000                                        i1l1867 04E5  
                                      i1l4452 0000                                        i1l4444 053F  
                                      i1l4428 0526                                        i1l4454 0000  
                                      i1l4438 0000                                        i1l4462 0000  
                                      i1l4472 0000                                        i1l4480 04D4  
                                      i1l4466 0000                                        i1l4396 0000  
                                      i1l4492 0000                                        i1l4484 0000  
                                      i1l4468 0000                                        i1l4486 0000  
                                      i1l4488 0000                                        u161_25 0566  
                            __end_of_dac_init 07F6                     ??_clearTwentySecondsTimer 0020  
                                      _TMR1IE 0460                                        _TMR1IF 0060  
                           _getAD_ConvertFlag 0667                             _setAD_ConvertFlag 066B  
                                      _TRISA0 0428                                        _TRISA1 0429  
                                      _TRISB0 0430                                        _TRISA2 042A  
                                      _TRISB1 0431                                        _TRISA3 042B  
                                      _TRISB2 0432                                        _TRISB4 0434  
                                      _TRISA6 042E                                        _TRISA7 042F  
                                      _TRISB6 0436                                        _TRISB7 0437  
                               main@ucTimer1s 00B2                            ?_getAD_ConvertFlag 0070  
                                      _Filter 05AF                            ?_setAD_ConvertFlag 0070  
                 ??_isFinishedThreeHoursTimer 0020                 __size_of_clearThreeHoursTimer 0006  
                                   ??_adc_get 0072                           ??_getAD_ConvertFlag 0020  
                         ??_setAD_ConvertFlag 0020                                        _setPA0 07DB  
                                      _setPA1 07D3                                        _setPB0 07AA  
                                      _setPA2 07CB                                        _setPB1 07E3  
                                      _setPA3 07C3                                        _setPA6 07A1  
                                      clrloop 07B4                              Filter@filter_buf 0026  
                            Filter@filter_sum 0040                                     ??_initPin 0020  
                     main@ucTimerDelayP2sLess 0061                       main@ucTimerDelayP2sMore 0062  
                   ??_vPutSampleDataIntoTable 0077                         ?_clearPinPortAndTimer 0070  
                                      saved_w 007E                       ??_clearTwelveHoursTimer 0020  
                 ?_process_AD_Converter_Value 0070                                 _adc_test_init 0695  
            __size_of_startTwentySecondsTimer 0011                     __end_of_getAD_ConvertFlag 066B  
                   __end_of_setAD_ConvertFlag 0670   vPutSampleDataIntoTable@ucChannelFifthLength 006C  
                          __size_of_adc_start 0003                                __pcstackCOMMON 0070  
             __end_of_clearTwentySecondsTimer 06CE                          _uiSampleChannelFifth 01A8  
                        _uiSampleChannelSixth 0190    vPutSampleDataIntoTable@ucChannelZeroLength 007D  
              vPutSampleDataIntoTable@channel 0076                           main@ucTimerRightP5s 0069  
                   _isFinishedThreeHoursTimer 0773                       ??_getAdOriginalCh1Value 0048  
                       __end_of_timer1_config 07A1                                ?_adc_test_init 0020  
            __size_of_timer1_interrupt_config 0003                         __size_of_clrSampeTime 0002  
                                  __pbssBANK0 0048                                    __pbssBANK1 00A0  
                                  __pbssBANK3 0190                  __size_ofi1_setAD_ConvertFlag 0004  
                                  adc_get@val 0072               __end_of_vPutSampleDataIntoTable 0569  
                                     ?_Filter 0020                                    __pmaintext 0013  
                                  __pintentry 0004                           main@enumInteralStep 00AE  
                                     ?_setPA0 0070                                       ?_setPA1 0070  
                                     ?_setPA2 0070                                       ?_setPB0 0070  
                                     ?_setPA3 0070                                       ?_setPB1 0070  
                                     ?_setPA6 0070                                     ?_dac_init 0070  
                      ??_clearPinPortAndTimer 0020                         __size_of_clock_config 0008  
                                _clrSampeTime 07F9                             __end_of_adc_start 0673  
                        _uiTwentySecondsTimer 00A4                            _isPermitSampleTime 07EB  
                                     Filter@i 0045                                       Filter@j 0044  
               __size_of_startThreeHoursTimer 0014                    __size_of_getAD_ConvertFlag 0004  
                  __size_of_setAD_ConvertFlag 0005                                main@ucTimer20s 00B3  
                              main@ucTimerP3s 00B6                                main@ucTimerP5s 0068  
                         ?_isPermitSampleTime 0070                                main@uiMaxValue 00A6  
                              main@uiMinValue 00A8                                  setPA0@bValue 0020  
                              main@uiOldValue 0048                                  setPA1@bValue 0020  
                             __size_of_Filter 0097                                  setPA2@bValue 0020  
                                setPB0@bValue 0020                                    _uiBigTimer 00A0  
                                setPA3@bValue 0020                                  setPB1@bValue 0020  
                                setPA6@bValue 0020                                  _clock_config 07BB  
                                     _adc_get 0569                               __size_of_setPA0 0008  
                             __size_of_setPA1 0008                               __size_of_setPB0 0009  
                             __size_of_setPA2 0008                               __size_of_setPB1 0008  
                             __size_of_setPA3 0008                               __size_of_setPA6 0009  
        __end_of_isFinishedTwentySecondsTimer 078B         __size_of_isFinishedTwentySecondsTimer 000C  
                _isFinishedTwentySecondsTimer 077F                          ??_isPermitSampleTime 0020  
                __end_of_startTwelveHourTimer 0727                                    ??_dac_init 0020  
                                   _AD_Sample 0673                                  __size_of_ISR 0047  
                                     _initPin 0727                          _bSmallTimerStartFlag 004B  
               __size_of_getAdOriginaCh4Value 000A                               ??_adc_test_init 0021  
                     _startTwentySecondsTimer 073A                          end_of_initialization 06FC  
                           Filter@filter_temp 003E                              main@ucLoaderStep 0056  
                                  ?_AD_Sample 0070                 ?_isFinishedTwentySecondsTimer 0070  
                        main@enumMainLoopStep 0051                            main@ucChannel4Type 0053  
                ??_isFinishedTwelveHoursTimer 0020                                     Filter@cir 0042  
                            _adc_convert_flag 00AB                        __size_of_clearAllTimer 0005  
                __end_of_clearThreeHoursTimer 06C8                        main@ucTimerADC1ZeroP5s 005B  
              __size_of_clearTwelveHoursTimer 0006                       _timer1_interrupt_config 07F6  
               __end_of_clearTwelveHoursTimer 06C2                      main@ucTimerForDACR0_CNT1 0063  
                    main@ucTimerForDACR0_CNT2 0065            __size_of_isFinishedThreeHoursTimer 000C  
                            main@ucTimerX1P5s 00B7                              main@ucTimerX2P5s 00B8  
                      main@ucTimerZeroPoint3s 006A                        main@ucTimerZeroPoint5s 006B  
                            main@ucTimerDelay 005C                                __end_of_Filter 0646  
                             main@ucADC4_Step 0052                           _bTwentySecStartFlag 004C  
         __size_of_isFinishedTwelveHoursTimer 000C   vPutSampleDataIntoTable@ucChannelSixthLength 006E  
                    vPutSampleDataIntoTable@i 0077                           i1_setAD_ConvertFlag 0575  
                              __end_of_setPA0 07E3                                __end_of_setPA1 07DB  
                              __end_of_setPB0 07B3                                __end_of_setPA2 07D3  
                              __end_of_setPB1 07EB                                __end_of_setPA3 07CB  
                              __end_of_setPA6 07AA                     ??_startTwentySecondsTimer 0020  
                         start_initialization 06E8                                   __end_of_ISR 04F2  
                        main@ucTimerLessX1P5s 00B4                          main@ucTimerLessX2P5s 00B5  
                    ?_clearTwentySecondsTimer 0070                __size_of_getAdOriginalCh1Value 000A  
                       _uiSampleChannelSecond 00B9                 __end_of_getAdOriginalCh1Value 05A4  
                    ??_getAdOriginalCh14Value 0048                          ?i1_setAD_ConvertFlag 0070  
                        _startTwelveHourTimer 0713             __end_of_isFinishedThreeHoursTimer 077F  
                          main@enumBranchStep 00AD                                      ??_Filter 0022  
                               _clearAllTimer 06B7                                      ??_setPA0 0020  
                                    ??_setPA1 0020                                      ??_setPA2 0020  
                                    ??_setPB0 0020                                      ??_setPA3 0020  
                                    ??_setPB1 0020                                      ??_setPA6 0020  
                    ?_vPutSampleDataIntoTable 0074                    main@ucDelayPrefix4TimerP5s 0054  
                                 ??_AD_Sample 0023                     ??_timer1_interrupt_config 0020  
                  main@ucDelayPrefix6TimerP2s 0055                                   __pbssCOMMON 007D  
                           __size_of_dac_init 0005                                 __pcstackBANK0 0020  
              ??_isFinishedTwentySecondsTimer 0020                                     _adc_start 0670  
                       ??i1_setAD_ConvertFlag 0070                         ?_startTwelveHourTimer 0020  
             __end_of_startTwentySecondsTimer 074B                                ?_clearAllTimer 0070  
                      __size_of_timer1_config 000A                          _clearThreeHoursTimer 06C2  
                __end_of_startThreeHoursTimer 0713                                     __ptext800 059A  
                                   __ptext801 05A4                                     __ptext810 078B  
                                   __ptext802 06B7                                     __ptext811 0713  
                                   __ptext803 066B                                     __ptext820 07A1  
                                   __ptext812 07F9                                     __ptext804 0667  
                                   __ptext821 07C3                                     __ptext813 07EB  
                                   __ptext805 05AF                                     __ptext830 06BC  
                                   __ptext822 07CB                                     __ptext814 0670  
                                   __ptext806 0773                                     __ptext831 04AB  
                                   __ptext823 07D3                                     __ptext815 07F1  
                                   __ptext807 06FF                                     __ptext832 0575  
                                   __ptext824 07DB                                     __ptext816 0695  
                                   __ptext808 077F                                     __ptext833 0569  
                                   __ptext825 07E3                                     __ptext817 07F6  
                                   __ptext809 073A                                     __ptext834 04F2  
                                   __ptext826 07AA                                     __ptext818 0797  
                                   __ptext835 0000                                     __ptext827 0727  
                                   __ptext819 07BB                                     __ptext828 06C8  
                                   __ptext829 06C2                                     __ptext795 0000  
                                   __ptext796 065C                                     __ptext797 06AA  
                                   __ptext798 0673                                     __ptext799 0590  
                                    ?_adc_get 0070                                     __pswtext1 074B  
                                   __pswtext2 0759                                     __pswtext3 0767  
                                   __pswtext4 06CE            __end_of_isFinishedTwelveHoursTimer 0797  
                  _isFinishedTwelveHoursTimer 078B                               ISR@ucTimer1sCnt 00AA  
                                    ?_initPin 0070                 __size_of_clearPinPortAndTimer 000D  
                                  ?_adc_start 0070               __size_of_getAdOriginalCh14Value 000B  
                           interrupt_function 0004                  __end_of_getAdOriginaCh4Value 059A  
             __end_of_timer1_interrupt_config 07F9                    main@ucTimerLessADC1ZeroP5s 0067  
                       ?_clearThreeHoursTimer 0070                          adc_test_init@channel 0022  
                                _uiSampleZero 00D1           vPutSampleDataIntoTable@uiSampleData 0074  
                 __size_of_isPermitSampleTime 0006                                  _uiSmallTimer 00A2  
                       __end_of_adc_test_init 06AA                                 _timer1_config 0797  
                ??_process_AD_Converter_Value 0023                        ??_startTwelveHourTimer 0022  
                             ??_clearAllTimer 0020                   main@ucFourthSuffix1TimerP3s 00B1  
                      _getAdOriginalCh14Value 05A4                              __size_of_adc_get 000C  
         __size_of_process_AD_Converter_Value 000B                                      _dac_init 07F1  
                  main@ucTimerForDACR0_CNT1_f 0064                    main@ucTimerForDACR0_CNT2_f 0066  
                            __size_of_initPin 0013                                Filter@tmpValue 0020  
                              ?_timer1_config 0070                                   ??_adc_start 0020  
vPutSampleDataIntoTable@ucChannelSecondLength 006D                          _startThreeHoursTimer 06FF  
                       _clearTwelveHoursTimer 06BC                                 __size_of_main 0498  
                                    clear_ram 07B3                        ??_clearThreeHoursTimer 0020  
            __size_of_clearTwentySecondsTimer 0006                                 ?_clrSampeTime 0070  
                        _getAdOriginaCh4Value 0590                                   _sampleTimes 004E  
                       ?_startThreeHoursTimer 0020              __size_of_vPutSampleDataIntoTable 0077  
                                    intlevel1 0000                         _getAdOriginalCh1Value 059A  
                  ?_isFinishedThreeHoursTimer 0070                             main@ucLoaderStep1 0057  
                           main@ucLoaderStep2 0058                             main@ucLoaderStep3 0059  
                           main@ucLoaderStep4 005A                                 ?_clock_config 0070  
                    ?_startTwentySecondsTimer 0070                 startThreeHoursTimer@uiSetTime 0020  
                     i1setAD_ConvertFlag@flag 0070                                ??_clrSampeTime 0020  
                 ?_isFinishedTwelveHoursTimer 0070                            _bBigTimerStartFlag 004A  
                       ?_getAdOriginaCh4Value 0046                               ??_timer1_config 0020  
                           main@bCheckTweHour 004F                   __end_ofi1_setAD_ConvertFlag 0579  
          __end_of_process_AD_Converter_Value 0667                    _process_AD_Converter_Value 065C  
                      ?_clearTwelveHoursTimer 0070                       main@ucCheckTimerP2sLess 00AF  
                     main@ucCheckTimerP2sMore 00B0                              adc_test_init@ref 0020  
                __end_of_clearPinPortAndTimer 06B7  
