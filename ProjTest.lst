

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Dec 04 21:50:08 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1365,local,class=CODE,delta=2
    17                           	psect	text1366,local,class=CODE,delta=2
    18                           	psect	text1367,local,class=CODE,delta=2
    19                           	psect	text1368,local,class=CODE,delta=2
    20                           	psect	text1369,local,class=CODE,delta=2
    21                           	psect	text1374,local,class=CODE,delta=2
    22                           	psect	text1375,local,class=CODE,delta=2
    23                           	psect	text1376,local,class=CODE,delta=2
    24                           	psect	text1377,local,class=CODE,delta=2
    25                           	psect	text1378,local,class=CODE,delta=2
    26                           	psect	text1379,local,class=CODE,delta=2
    27                           	psect	text1380,local,class=CODE,delta=2
    28                           	psect	text1381,local,class=CODE,delta=2
    29                           	psect	text1382,local,class=CODE,delta=2
    30                           	psect	text1383,local,class=CODE,delta=2
    31                           	psect	text1385,local,class=CODE,delta=2
    32                           	psect	text1387,local,class=CODE,delta=2
    33                           	psect	text1388,local,class=CODE,delta=2
    34                           	psect	text1389,local,class=CODE,delta=2
    35                           	psect	text1394,local,class=CODE,delta=2
    36                           	psect	text1395,local,class=CODE,delta=2
    37                           	psect	text1396,local,class=CODE,delta=2
    38                           	psect	text1404,local,class=CODE,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text1411,local,class=CODE,delta=2
    41                           	psect	pa_nodes,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  000A                     	;#
    44                           
    45                           	psect	config
    46  2000  0FFF               	dw	4095	;#
    47  2001  3FDE               	dw	16350	;#
    48  2002  3F78               	dw	16248	;#
    49                           
    50                           	psect	idataBANK0
    51  0000                     __pidataBANK0:	
    52  001F                     _ADCON0	set	31
    53  001E                     _ADRESH	set	30
    54  0017                     _CCP1CON	set	23
    55  0015                     _CCPR1L	set	21
    56  0010                     _T1CON	set	16
    57  0012                     _T2CON	set	18
    58  000F                     _TMR1H	set	15
    59  000E                     _TMR1L	set	14
    60  006A                     _ADIF	set	106
    61  00F8                     _ADON	set	248
    62  005F                     _GIE	set	95
    63  00F9                     _GO	set	249
    64  0032                     _PB2	set	50
    65  0033                     _PB3	set	51
    66  0034                     _PB4	set	52
    67  0035                     _PB5	set	53
    68  005E                     _PEIE	set	94
    69  0060                     _TMR1IF	set	96
    70  009F                     _ADCON1	set	159
    71  009E                     _ADRESL	set	158
    72  0092                     _PR2	set	146
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0430                     _TRISB0	set	1072
    76  0431                     _TRISB1	set	1073
    77  0432                     _TRISB2	set	1074
    78  0433                     _TRISB3	set	1075
    79  0434                     _TRISB4	set	1076
    80  0435                     _TRISB5	set	1077
    81  0108                     _CLKPR	set	264
    82  0847                     _CLKPCE	set	2119
    83  0C42                     _PBOD2	set	3138
    84                           
    85                           	psect	cinit
    86  055B                     start_initialization:	
    87  055B  3043               	movlw	low __pbssBANK0
    88                           
    89                           ; Clear objects allocated to COMMON
    90  055C  01FD               	clrf	__pbssCOMMON& (0+127)
    91                           
    92                           ; Clear objects allocated to BANK0
    93  055D  1383               	bcf	3,7	;select IRP bank0
    94  055E  0084               	movwf	4
    95  055F  3063               	movlw	low (__pbssBANK0+32)
    96  0560  118A  25F1  118A   	fcall	clear_ram
    97                           
    98                           ; Clear objects allocated to BANK1
    99  0563  30A0               	movlw	low __pbssBANK1
   100  0564  0084               	movwf	4
   101  0565  30BD               	movlw	low (__pbssBANK1+29)
   102  0566  118A  25F1         	fcall	clear_ram
   103                           
   104                           ;initializer for _sampleChannelSelect
   105  0568  300C               	movlw	12
   106  0569  00E3               	movwf	__pdataBANK0& (0+127)
   107                           
   108                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   109  056A  304B               	movlw	75
   110  056B  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   111  056C                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  056C  0183               	clrf	3
   115  056D  118A  2A3F         	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMMON
   118  007D                     __pbssCOMMON:	
   119  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   120  007D                     	ds	1
   121                           
   122                           	psect	bssBANK0
   123  0043                     __pbssBANK0:	
   124  0043                     _uiBigTimer:	
   125  0043                     	ds	2
   126  0045                     _uiOneHourTimer:	
   127  0045                     	ds	2
   128  0047                     _uiSmallTimer:	
   129  0047                     	ds	2
   130  0049                     _uiTwentyMinTimer:	
   131  0049                     	ds	2
   132  004B                     _uiTwentySecondsTimer:	
   133  004B                     	ds	2
   134  004D                     vPutSampleDataIntoTable@uiCalWidthArray1:	
   135  004D                     	ds	2
   136  004F                     vPutSampleDataIntoTable@uiCalWidthArray2:	
   137  004F                     	ds	2
   138  0051                     vPutSampleDataIntoTable@uiCalWidthArray3:	
   139  0051                     	ds	2
   140  0053                     vPutSampleDataIntoTable@uiCalWidthArray4:	
   141  0053                     	ds	2
   142  0055                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   143  0055                     	ds	2
   144  0057                     ISR@ucTimer1sCnt:	
   145  0057                     	ds	1
   146  0058                     _adc_convert_flag:	
   147  0058                     	ds	1
   148  0059                     _bBigTimerStartFlag:	
   149  0059                     	ds	1
   150  005A                     _bOneHourTimerStartFlag:	
   151  005A                     	ds	1
   152  005B                     _bSmallTimerStartFlag:	
   153  005B                     	ds	1
   154  005C                     _bTwentyMinStartFlag:	
   155  005C                     	ds	1
   156  005D                     _bWaitResetFlag:	
   157  005D                     	ds	1
   158  005E                     _sampleTimes:	
   159  005E                     	ds	1
   160  005F                     _timer:	
   161  005F                     	ds	1
   162  0060                     vPutSampleDataIntoTable@ucCh13Length:	
   163  0060                     	ds	1
   164  0061                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   165  0061                     	ds	1
   166  0062                     vPutSampleDataIntoTable@ucInitFlag:	
   167  0062                     	ds	1
   168                           
   169                           	psect	dataBANK0
   170  0063                     __pdataBANK0:	
   171  0063                     _sampleChannelSelect:	
   172  0063                     	ds	1
   173  0064                     vPutSampleDataIntoTable@uiInitWidth:	
   174  0064                     	ds	1
   175                           
   176                           	psect	bssBANK1
   177  00A0                     __pbssBANK1:	
   178  00A0                     main@ucDelay1s:	
   179  00A0                     	ds	2
   180  00A2                     main@uiTimerOneP5s:	
   181  00A2                     	ds	2
   182  00A4                     main@uiTimerTwoP5s:	
   183  00A4                     	ds	2
   184  00A6                     main@cTimerP5s_786:	
   185  00A6                     	ds	1
   186  00A7                     main@cTimerP5s_792:	
   187  00A7                     	ds	1
   188  00A8                     main@ucStep:	
   189  00A8                     	ds	1
   190  00A9                     main@ucTimerP3s:	
   191  00A9                     	ds	1
   192  00AA                     main@ucTimerP5s:	
   193  00AA                     	ds	1
   194  00AB                     _uiSampleCh12:	
   195  00AB                     	ds	6
   196  00B1                     _uiSampleCh13:	
   197  00B1                     	ds	6
   198  00B7                     _uiSampleChannelFourteenth:	
   199  00B7                     	ds	6
   200                           
   201                           	psect	clrtext
   202  05F1                     clear_ram:	
   203                           ;	Called with FSR containing the base address, and
   204                           ;	W with the last address+1
   205                           
   206  05F1  0064               	clrwdt	;clear the watchdog before getting into this loop
   207  05F2                     clrloop:	
   208  05F2  0180               	clrf	0	;clear RAM location pointed to by FSR
   209  05F3  0A84               	incf	4,f	;increment pointer
   210  05F4  0604               	xorwf	4,w	;XOR with final address
   211  05F5  1903               	btfsc	3,2	;have we reached the end yet?
   212  05F6  3400               	retlw	0	;all done for this memory range, return
   213  05F7  0604               	xorwf	4,w	;XOR again to restore value
   214  05F8  2DF2               	goto	clrloop	;do the next byte
   215                           
   216                           	psect	cstackBANK1
   217  00BD                     __pcstackBANK1:	
   218  00BD                     ??_clearTwelveHoursTimer:	
   219  00BD                     ??_clearThreeHoursTimer:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  00BD                     ??_clearOneHoursTimer:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  00BD                     ??_clearTwentyMinTimer:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  00BD                     ??_clock_config:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  00BD                     ??_timer1_config:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  00BD                     ??_timer1_interrupt_config:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  00BD                     ?_adc_test_init:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  00BD                     ?_startTwentyMinTimer:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  00BD                     ??_adc_start:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  00BD                     ??_isPermitSampleTime:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  00BD                     ??_clrSampeTime:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  00BD                     ??_isFinishedTwentyMinTimer:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  00BD                     ?_startTwelveHourTimer:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  00BD                     ??_isFinishedTwelveHoursTimer:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  00BD                     ?_startThreeHoursTimer:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  00BD                     ??_isFinishedThreeHoursTimer:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  00BD                     ?_startOneHoursTimer:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  00BD                     ??_isFinishedOneHoursTimer:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  00BD                     ??_setWaitResetFlag:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  00BD                     ??_AD_Sample:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  00BD                     ??_initPB3:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  00BD                     ??_setPB3:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  00BD                     ??_initPB4:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  00BD                     ??_setPB4:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  00BD                     ??_initPB5:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  00BD                     ??_setPB5:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  00BD                     ??_initPB2_AsHighResistence:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  00BD                     ?_pwm_start:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  00BD                     ??_selectAdChannel:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  00BD                     ??_reset:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  00BD                     ??_resetAllTimer:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  00BD                     ??_getAD_ConvertFlag:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  00BD                     ??_setAD_ConvertFlag:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  00BD                     ?_FilterCh13:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  00BD                     initPB3@bValue:	
   322                           ; 2 bytes @ 0x0
   323                           
   324  00BD                     setPB3@bValue:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  00BD                     initPB4@bValue:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  00BD                     setPB4@bValue:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  00BD                     initPB5@bValue:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  00BD                     setPB5@bValue:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  00BD                     pwm_start@ucPulseFrequency:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  00BD                     setWaitResetFlag@bValue:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  00BD                     setAD_ConvertFlag@flag:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  00BD                     adc_test_init@ref:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  00BD                     startTwelveHourTimer@uiSetTime:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  00BD                     startThreeHoursTimer@uiSetTime:	
   355                           ; 2 bytes @ 0x0
   356                           
   357  00BD                     startOneHoursTimer@uiSetTime:	
   358                           ; 2 bytes @ 0x0
   359                           
   360  00BD                     startTwentyMinTimer@uiSetValue:	
   361                           ; 2 bytes @ 0x0
   362                           
   363                           
   364                           ; 2 bytes @ 0x0
   365  00BD                     	ds	1
   366  00BE                     ??_adc_test_init:	
   367  00BE                     ??_pwm_start:	
   368                           ; 0 bytes @ 0x1
   369                           
   370  00BE                     ??_initPin:	
   371                           ; 0 bytes @ 0x1
   372                           
   373  00BE                     ??_setPinInitVaule:	
   374                           ; 0 bytes @ 0x1
   375                           
   376  00BE                     pwm_start@ucPulseWidth:	
   377                           ; 0 bytes @ 0x1
   378                           
   379                           
   380                           ; 1 bytes @ 0x1
   381  00BE                     	ds	1
   382  00BF                     ??_startTwentyMinTimer:	
   383  00BF                     ??_startTwelveHourTimer:	
   384                           ; 0 bytes @ 0x2
   385                           
   386  00BF                     ??_startThreeHoursTimer:	
   387                           ; 0 bytes @ 0x2
   388                           
   389  00BF                     ??_startOneHoursTimer:	
   390                           ; 0 bytes @ 0x2
   391                           
   392  00BF                     ??_FilterCh13:	
   393                           ; 0 bytes @ 0x2
   394                           
   395  00BF                     adc_test_init@channel:	
   396                           ; 0 bytes @ 0x2
   397                           
   398                           
   399                           ; 1 bytes @ 0x2
   400  00BF                     	ds	1
   401  00C0                     ??_process_AD_Converter_Value:	
   402                           
   403                           ; 0 bytes @ 0x3
   404  00C0                     	ds	3
   405  00C3                     FilterCh13@tmpValue:	
   406                           
   407                           ; 1 bytes @ 0x6
   408  00C3                     	ds	1
   409  00C4                     FilterCh13@filter_temp:	
   410                           
   411                           ; 2 bytes @ 0x7
   412  00C4                     	ds	2
   413  00C6                     FilterCh13@filter_sum:	
   414                           
   415                           ; 2 bytes @ 0x9
   416  00C6                     	ds	2
   417  00C8                     FilterCh13@filter_buf:	
   418                           
   419                           ; 6 bytes @ 0xB
   420  00C8                     	ds	6
   421  00CE                     FilterCh13@cir:	
   422                           
   423                           ; 2 bytes @ 0x11
   424  00CE                     	ds	2
   425  00D0                     FilterCh13@j:	
   426                           
   427                           ; 1 bytes @ 0x13
   428  00D0                     	ds	1
   429  00D1                     FilterCh13@i:	
   430                           
   431                           ; 1 bytes @ 0x14
   432  00D1                     	ds	1
   433  00D2                     ?_getAdOriginalCh13Value:	
   434                           
   435                           ; 2 bytes @ 0x15
   436  00D2                     	ds	2
   437  00D4                     ??_getAdOriginalCh13Value:	
   438  00D4                     ??_main:	
   439                           ; 0 bytes @ 0x17
   440                           
   441                           
   442                           ; 0 bytes @ 0x17
   443  00D4                     	ds	1
   444  00D5                     main@ucChValue:	
   445                           
   446                           ; 2 bytes @ 0x18
   447  00D5                     	ds	2
   448  00D7                     main@uiCh13Value:	
   449                           
   450                           ; 2 bytes @ 0x1A
   451  00D7                     	ds	2
   452                           
   453                           	psect	cstackCOMMON
   454  0070                     __pcstackCOMMON:	
   455  0070                     ?_clearTwelveHoursTimer:	
   456  0070                     ?_clearThreeHoursTimer:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0070                     ?_clearOneHoursTimer:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0070                     ?_clearTwentyMinTimer:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0070                     ?_clock_config:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0070                     ?_timer1_config:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0070                     ?_timer1_interrupt_config:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0070                     ?_adc_start:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0070                     ?_process_AD_Converter_Value:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0070                     ?_clrSampeTime:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0070                     ?_setWaitResetFlag:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0070                     ?_AD_Sample:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0070                     ?_initPB3:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0070                     ?_setPB3:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0070                     ?_initPB4:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0070                     ?_setPB4:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0070                     ?_initPB5:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0070                     ?_setPB5:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0070                     ?_initPB2_AsHighResistence:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0070                     ?_initPin:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0070                     ?_setPinInitVaule:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0070                     ?_selectAdChannel:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0070                     ?_reset:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0070                     ?_resetAllTimer:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ??_getWaitResetFlag:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ?_setPWM_Width:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0070                     ??_setPWM_Width:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0070                     ?_setAD_ConvertFlag:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0070                     ?_ISR:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0070                     ?i1_setAD_ConvertFlag:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0070                     ??i1_setAD_ConvertFlag:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0070                     ?_isPermitSampleTime:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0070                     ?_isFinishedTwentyMinTimer:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_isFinishedTwelveHoursTimer:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_isFinishedThreeHoursTimer:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_isFinishedOneHoursTimer:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_getWaitResetFlag:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_getAD_ConvertFlag:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_adc_get:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_main:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ?_Filter:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     setPWM_Width@ucWidth:	
   577                           ; 2 bytes @ 0x0
   578                           
   579  0070                     i1setAD_ConvertFlag@flag:	
   580                           ; 1 bytes @ 0x0
   581                           
   582                           
   583                           ; 1 bytes @ 0x0
   584  0070                     	ds	2
   585  0072                     ??_adc_get:	
   586  0072                     ??_Filter:	
   587                           ; 0 bytes @ 0x2
   588                           
   589  0072                     adc_get@val:	
   590                           ; 0 bytes @ 0x2
   591                           
   592                           
   593                           ; 2 bytes @ 0x2
   594  0072                     	ds	4
   595  0076                     ?_vPutSampleDataIntoTable:	
   596  0076                     vPutSampleDataIntoTable@uiSampleData:	
   597                           ; 0 bytes @ 0x6
   598                           
   599                           
   600                           ; 2 bytes @ 0x6
   601  0076                     	ds	2
   602  0078                     vPutSampleDataIntoTable@channel:	
   603                           
   604                           ; 1 bytes @ 0x8
   605  0078                     	ds	1
   606  0079                     vPutSampleDataIntoTable@uiDeviationValue:	
   607                           
   608                           ; 2 bytes @ 0x9
   609  0079                     	ds	2
   610  007B                     vPutSampleDataIntoTable@i:	
   611                           
   612                           ; 2 bytes @ 0xB
   613  007B                     	ds	2
   614                           
   615                           	psect	cstackBANK0
   616  0020                     __pcstackBANK0:	
   617  0020                     Filter@filter_temp:	
   618                           
   619                           ; 2 bytes @ 0x0
   620  0020                     	ds	2
   621  0022                     Filter@filter_sum:	
   622                           
   623                           ; 2 bytes @ 0x2
   624  0022                     	ds	2
   625  0024                     Filter@tmpValue:	
   626                           
   627                           ; 1 bytes @ 0x4
   628  0024                     	ds	1
   629  0025                     Filter@filter_buf:	
   630                           
   631                           ; 6 bytes @ 0x5
   632  0025                     	ds	6
   633  002B                     Filter@cir:	
   634                           
   635                           ; 2 bytes @ 0xB
   636  002B                     	ds	2
   637  002D                     Filter@j:	
   638                           
   639                           ; 1 bytes @ 0xD
   640  002D                     	ds	1
   641  002E                     Filter@i:	
   642                           
   643                           ; 1 bytes @ 0xE
   644  002E                     	ds	1
   645  002F                     ??_vPutSampleDataIntoTable:	
   646                           
   647                           ; 0 bytes @ 0xF
   648  002F                     	ds	16
   649  003F                     ??_ISR:	
   650                           
   651                           ; 0 bytes @ 0x1F
   652  003F                     	ds	4
   653                           
   654                           	psect	maintext
   655  023F                     __pmaintext:	
   656 ;;Data sizes: Strings 0, constant 0, data 2, bss 62, persistent 0 stack 0
   657 ;;Auto spaces:   Size  Autos    Used
   658 ;; COMMON          14     13      14
   659 ;; BANK0           80     35      69
   660 ;; BANK1           80     28      57
   661 ;; BANK3           96      0       0
   662 ;; BANK2           96      0       0
   663 ;;
   664 ;; Pointer list with targets:
   665 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   666 ;;
   667 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   668 ;;
   669 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   670 ;;
   671 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   672 ;;
   673 ;; Filter@tmpValue	PTR unsigned int  size(1) Largest target is 6
   674 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   675 ;;
   676 ;; FilterCh13@tmpValue	PTR unsigned int  size(1) Largest target is 6
   677 ;;		 -> uiSampleCh13(BANK1[6]), 
   678 ;;
   679 ;;
   680 ;; Critical Paths under _main in COMMON
   681 ;;
   682 ;;   None.
   683 ;;
   684 ;; Critical Paths under _ISR in COMMON
   685 ;;
   686 ;;   _ISR->_vPutSampleDataIntoTable
   687 ;;   _vPutSampleDataIntoTable->_Filter
   688 ;;
   689 ;; Critical Paths under _main in BANK0
   690 ;;
   691 ;;   None.
   692 ;;
   693 ;; Critical Paths under _ISR in BANK0
   694 ;;
   695 ;;   _ISR->_vPutSampleDataIntoTable
   696 ;;   _vPutSampleDataIntoTable->_Filter
   697 ;;
   698 ;; Critical Paths under _main in BANK1
   699 ;;
   700 ;;   _main->_getAdOriginalCh13Value
   701 ;;   _getAdOriginalCh13Value->_FilterCh13
   702 ;;   _process_AD_Converter_Value->_adc_test_init
   703 ;;   _setPinInitVaule->_setPB3
   704 ;;   _setPinInitVaule->_setPB4
   705 ;;   _setPinInitVaule->_setPB5
   706 ;;   _initPin->_initPB3
   707 ;;   _initPin->_initPB4
   708 ;;   _initPin->_initPB5
   709 ;;
   710 ;; Critical Paths under _ISR in BANK1
   711 ;;
   712 ;;   None.
   713 ;;
   714 ;; Critical Paths under _main in BANK3
   715 ;;
   716 ;;   None.
   717 ;;
   718 ;; Critical Paths under _ISR in BANK3
   719 ;;
   720 ;;   None.
   721 ;;
   722 ;; Critical Paths under _main in BANK2
   723 ;;
   724 ;;   None.
   725 ;;
   726 ;; Critical Paths under _ISR in BANK2
   727 ;;
   728 ;;   None.
   729 ;;
   730 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   731 ;;
   732 ;;
   733 ;;Call Graph Tables:
   734 ;;
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (0) _main                                                 5     5      0    1665
   739 ;;                                             23 BANK1      5     5      0
   740 ;;                            _initPin
   741 ;;                    _setPinInitVaule
   742 ;;                    _selectAdChannel
   743 ;;                       _clock_config
   744 ;;                      _timer1_config
   745 ;;            _timer1_interrupt_config
   746 ;;                      _adc_test_init
   747 ;;                _startTwentyMinTimer
   748 ;;                          _adc_start
   749 ;;         _process_AD_Converter_Value
   750 ;;                 _isPermitSampleTime
   751 ;;                       _clrSampeTime
   752 ;;           _isFinishedTwentyMinTimer
   753 ;;             _getAdOriginalCh13Value
   754 ;;                          _pwm_start
   755 ;;                             _setPB3
   756 ;;                             _setPB4
   757 ;;                             _setPB5
   758 ;;                _clearTwentyMinTimer
   759 ;;               _startTwelveHourTimer
   760 ;;         _isFinishedTwelveHoursTimer
   761 ;;              _clearTwelveHoursTimer
   762 ;;               _startThreeHoursTimer
   763 ;;          _isFinishedThreeHoursTimer
   764 ;;               _clearThreeHoursTimer
   765 ;;                 _startOneHoursTimer
   766 ;;            _isFinishedOneHoursTimer
   767 ;;                      _resetAllTimer
   768 ;;                   _setWaitResetFlag
   769 ;;                              _reset
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   772 ;;                                             21 BANK1      2     0      2
   773 ;;                         _FilterCh13
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   776 ;;                  _getAD_ConvertFlag
   777 ;;                  _setAD_ConvertFlag
   778 ;;                          _AD_Sample
   779 ;;                      _adc_test_init
   780 ;;                          _adc_start
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _resetAllTimer                                        0     0      0       0
   783 ;;              _clearTwelveHoursTimer
   784 ;;               _clearThreeHoursTimer
   785 ;;                 _clearOneHoursTimer
   786 ;;                _clearTwentyMinTimer
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (1) _setPinInitVaule                                      0     0      0      93
   789 ;;                             _setPB3
   790 ;;                             _setPB4
   791 ;;                             _setPB5
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (1) _initPin                                              0     0      0      93
   794 ;;           _initPB2_AsHighResistence
   795 ;;                            _initPB3
   796 ;;                            _initPB4
   797 ;;                            _initPB5
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (2) _AD_Sample                                            0     0      0       0
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   802 ;;                                              0 BANK1      1     1      0
   803 ;; ---------------------------------------------------------------------------------
   804 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (2) _FilterCh13                                          21    19      2     915
   807 ;;                                              0 BANK1     21    19      2
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _setWaitResetFlag                                     1     1      0      31
   810 ;;                                              0 BANK1      1     1      0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _startOneHoursTimer                                   2     0      2      31
   815 ;;                                              0 BANK1      2     0      2
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   820 ;;                                              0 BANK1      2     0      2
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   825 ;;                                              0 BANK1      2     0      2
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _clrSampeTime                                         0     0      0       0
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (1) _isPermitSampleTime                                   0     0      0       0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (2) _adc_start                                            0     0      0       0
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   836 ;;                                              0 BANK1      2     0      2
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (2) _adc_test_init                                        3     2      1      62
   839 ;;                                              0 BANK1      3     2      1
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _timer1_interrupt_config                              0     0      0       0
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (1) _timer1_config                                        0     0      0       0
   844 ;; ---------------------------------------------------------------------------------
   845 ;; (1) _clock_config                                         0     0      0       0
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (2) _clearTwentyMinTimer                                  0     0      0       0
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (2) _clearOneHoursTimer                                   0     0      0       0
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (1) _reset                                                0     0      0       0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (1) _selectAdChannel                                      0     0      0       0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _pwm_start                                            2     1      1      62
   860 ;;                                              0 BANK1      2     1      1
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (1) _setPB5                                               1     1      0      31
   865 ;;                                              0 BANK1      1     1      0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (2) _initPB5                                              1     1      0      31
   868 ;;                                              0 BANK1      1     1      0
   869 ;; ---------------------------------------------------------------------------------
   870 ;; (1) _setPB4                                               1     1      0      31
   871 ;;                                              0 BANK1      1     1      0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (2) _initPB4                                              1     1      0      31
   874 ;;                                              0 BANK1      1     1      0
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (1) _setPB3                                               1     1      0      31
   877 ;;                                              0 BANK1      1     1      0
   878 ;; ---------------------------------------------------------------------------------
   879 ;; (2) _initPB3                                              1     1      0      31
   880 ;;                                              0 BANK1      1     1      0
   881 ;; ---------------------------------------------------------------------------------
   882 ;; Estimated maximum stack depth 2
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   885 ;; ---------------------------------------------------------------------------------
   886 ;; (3) _ISR                                                  4     4      0    1107
   887 ;;                                             31 BANK0      4     4      0
   888 ;;                i1_setAD_ConvertFlag
   889 ;;                            _adc_get
   890 ;;            _vPutSampleDataIntoTable
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (4) _vPutSampleDataIntoTable                             25    22      3    1010
   893 ;;                                              6 COMMON     7     4      3
   894 ;;                                             15 BANK0     16    16      0
   895 ;;                             _Filter
   896 ;;                   _getWaitResetFlag
   897 ;;                       _setPWM_Width
   898 ;;                            _adc_get (ARG)
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   901 ;;                                              0 COMMON     1     1      0
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (4) _adc_get                                              4     2      2      24
   904 ;;                                              0 COMMON     4     2      2
   905 ;; ---------------------------------------------------------------------------------
   906 ;; (5) _Filter                                              21    19      2     620
   907 ;;                                              0 COMMON     6     4      2
   908 ;;                                              0 BANK0     15    15      0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; (5) _setPWM_Width                                         1     1      0      33
   911 ;;                                              0 COMMON     1     1      0
   912 ;; ---------------------------------------------------------------------------------
   913 ;; (5) _getWaitResetFlag                                     0     0      0       0
   914 ;; ---------------------------------------------------------------------------------
   915 ;; Estimated maximum stack depth 5
   916 ;; ---------------------------------------------------------------------------------
   917 ;; Call Graph Graphs:
   918 ;; _main (ROOT)
   919 ;;   _initPin
   920 ;;     _initPB2_AsHighResistence
   921 ;;     _initPB3
   922 ;;     _initPB4
   923 ;;     _initPB5
   924 ;;   _setPinInitVaule
   925 ;;     _setPB3
   926 ;;     _setPB4
   927 ;;     _setPB5
   928 ;;   _selectAdChannel
   929 ;;   _clock_config
   930 ;;   _timer1_config
   931 ;;   _timer1_interrupt_config
   932 ;;   _adc_test_init
   933 ;;   _startTwentyMinTimer
   934 ;;   _adc_start
   935 ;;   _process_AD_Converter_Value
   936 ;;     _getAD_ConvertFlag
   937 ;;     _setAD_ConvertFlag
   938 ;;     _AD_Sample
   939 ;;     _adc_test_init
   940 ;;     _adc_start
   941 ;;   _isPermitSampleTime
   942 ;;   _clrSampeTime
   943 ;;   _isFinishedTwentyMinTimer
   944 ;;   _getAdOriginalCh13Value
   945 ;;     _FilterCh13
   946 ;;   _pwm_start
   947 ;;   _setPB3
   948 ;;   _setPB4
   949 ;;   _setPB5
   950 ;;   _clearTwentyMinTimer
   951 ;;   _startTwelveHourTimer
   952 ;;   _isFinishedTwelveHoursTimer
   953 ;;   _clearTwelveHoursTimer
   954 ;;   _startThreeHoursTimer
   955 ;;   _isFinishedThreeHoursTimer
   956 ;;   _clearThreeHoursTimer
   957 ;;   _startOneHoursTimer
   958 ;;   _isFinishedOneHoursTimer
   959 ;;   _resetAllTimer
   960 ;;     _clearTwelveHoursTimer
   961 ;;     _clearThreeHoursTimer
   962 ;;     _clearOneHoursTimer
   963 ;;     _clearTwentyMinTimer
   964 ;;   _setWaitResetFlag
   965 ;;   _reset
   966 ;;
   967 ;; _ISR (ROOT)
   968 ;;   i1_setAD_ConvertFlag
   969 ;;   _adc_get
   970 ;;   _vPutSampleDataIntoTable
   971 ;;     _Filter
   972 ;;     _getWaitResetFlag
   973 ;;     _setPWM_Width
   974 ;;     _adc_get (ARG)
   975 ;;
   976 ;; Address spaces:
   977 ;;Name               Size   Autos  Total    Cost      Usage
   978 ;;BANK3               60      0       0      10        0.0%
   979 ;;BITBANK3            60      0       0       9        0.0%
   980 ;;SFR3                 0      0       0       4        0.0%
   981 ;;BITSFR3              0      0       0       4        0.0%
   982 ;;BANK2               60      0       0      12        0.0%
   983 ;;BITBANK2            60      0       0      11        0.0%
   984 ;;SFR2                 0      0       0       5        0.0%
   985 ;;BITSFR2              0      0       0       5        0.0%
   986 ;;SFR1                 0      0       0       2        0.0%
   987 ;;BITSFR1              0      0       0       2        0.0%
   988 ;;BANK1               50     1C      39       8       71.3%
   989 ;;BITBANK1            50      0       0       7        0.0%
   990 ;;CODE                 0      0       0       0        0.0%
   991 ;;DATA                 0      0      94       6        0.0%
   992 ;;ABS                  0      0      8C       3        0.0%
   993 ;;NULL                 0      0       0       0        0.0%
   994 ;;STACK                0      0       8       2        0.0%
   995 ;;BANK0               50     23      45       5       86.3%
   996 ;;BITBANK0            50      0       0       4        0.0%
   997 ;;SFR0                 0      0       0       1        0.0%
   998 ;;BITSFR0              0      0       0       1        0.0%
   999 ;;COMMON               E      D       E       1      100.0%
  1000 ;;BITCOMMON            E      0       0       0        0.0%
  1001                           
  1002                           
  1003 ;; *************** function _main *****************
  1004 ;; Defined at:
  1005 ;;		line 516 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  ucChValue       2   24[BANK1 ] unsigned int 
  1010 ;;  uiCh13Value     2   26[BANK1 ] unsigned int 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2  732[COMMON] int 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 17F/0
  1017 ;;		On exit  : 60/20
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       0       0       0       0
  1021 ;;      Locals:         0       0       4       0       0
  1022 ;;      Temps:          0       0       1       0       0
  1023 ;;      Totals:         0       0       5       0       0
  1024 ;;Total ram usage:        5 bytes
  1025 ;; Hardware stack levels required when called:    5
  1026 ;; This function calls:
  1027 ;;		_initPin
  1028 ;;		_setPinInitVaule
  1029 ;;		_selectAdChannel
  1030 ;;		_clock_config
  1031 ;;		_timer1_config
  1032 ;;		_timer1_interrupt_config
  1033 ;;		_adc_test_init
  1034 ;;		_startTwentyMinTimer
  1035 ;;		_adc_start
  1036 ;;		_process_AD_Converter_Value
  1037 ;;		_isPermitSampleTime
  1038 ;;		_clrSampeTime
  1039 ;;		_isFinishedTwentyMinTimer
  1040 ;;		_getAdOriginalCh13Value
  1041 ;;		_pwm_start
  1042 ;;		_setPB3
  1043 ;;		_setPB4
  1044 ;;		_setPB5
  1045 ;;		_clearTwentyMinTimer
  1046 ;;		_startTwelveHourTimer
  1047 ;;		_isFinishedTwelveHoursTimer
  1048 ;;		_clearTwelveHoursTimer
  1049 ;;		_startThreeHoursTimer
  1050 ;;		_isFinishedThreeHoursTimer
  1051 ;;		_clearThreeHoursTimer
  1052 ;;		_startOneHoursTimer
  1053 ;;		_isFinishedOneHoursTimer
  1054 ;;		_resetAllTimer
  1055 ;;		_setWaitResetFlag
  1056 ;;		_reset
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061  023F                     _main:	
  1062                           
  1063                           ;main.c: 517: enum systemStep {
  1064                           ;main.c: 518: INIT_STEP = 0,
  1065                           ;main.c: 519: START_UP_PWM_STEP,
  1066                           ;main.c: 520: CHECK_10_HOUR_TIMER_STEP,
  1067                           ;main.c: 521: STARTUP_3_HOUR_TIMER_STEP,
  1068                           ;main.c: 522: CHECK_3_HOUR_TIMER_STEP,
  1069                           ;main.c: 523: STARTUP_1_HOUR_TIMER_STEP,
  1070                           ;main.c: 524: CHECK_1_HOUR_TIMER_STEP,
  1071                           ;main.c: 525: READY_FOR_RESET_STEP = 99,
  1072                           ;main.c: 526: DELAY_ONE_SECOND_FOR_PWM,
  1073                           ;main.c: 527: MEET_RESET_CONDITION_STEP,
  1074                           ;main.c: 528: RESET_STEP,
  1075                           ;main.c: 529: };
  1076                           ;main.c: 531: static enum systemStep ucStep = INIT_STEP;
  1077                           
  1078                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1079  023F  118A  2504  118A   	fcall	_initPin
  1080                           
  1081                           ;main.c: 545: setPinInitVaule();
  1082  0242  118A  24DB  118A   	fcall	_setPinInitVaule
  1083                           
  1084                           ;main.c: 546: selectAdChannel();
  1085  0245  118A  260A  118A   	fcall	_selectAdChannel
  1086                           
  1087                           ;main.c: 548: clock_config();
  1088  0248  118A  25F9  118A   	fcall	_clock_config
  1089                           
  1090                           ;main.c: 549: timer1_config();
  1091  024B  118A  25E7  118A   	fcall	_timer1_config
  1092                           
  1093                           ;main.c: 550: timer1_interrupt_config();
  1094  024E  118A  260E  118A   	fcall	_timer1_interrupt_config
  1095                           
  1096                           ;main.c: 552: adc_test_init(12,3);
  1097  0251  3003               	movlw	3
  1098  0252  00BD               	movwf	?_adc_test_init^(0+128)
  1099  0253  300C               	movlw	12
  1100  0254  118A  24BB  118A   	fcall	_adc_test_init
  1101                           
  1102                           ;main.c: 558: startTwentyMinTimer( 60 );
  1103  0257  303C               	movlw	60
  1104  0258  00BD               	movwf	?_startTwentyMinTimer^(0+128)
  1105  0259  01BE               	clrf	(?_startTwentyMinTimer+1)^(0+128)
  1106  025A  118A  25A8  118A   	fcall	_startTwentyMinTimer
  1107                           
  1108                           ;main.c: 559: _delay(1000);
  1109  025D  30F9               	movlw	249
  1110  025E  1683               	bsf	3,5	;RP0=1, select bank1
  1111  025F  00D4               	movwf	??_main^(0+128)
  1112  0260                     u2217:	
  1113  0260  0064               	clrwdt
  1114  0261  0BD4               	decfsz	??_main^(0+128),f
  1115  0262  2A60               	goto	u2217
  1116  0263  2A64               	nop2	;nop
  1117  0264  0064               	clrwdt
  1118                           
  1119                           ;main.c: 560: adc_start();
  1120  0265  118A  24D7  118A   	fcall	_adc_start
  1121                           
  1122                           ;main.c: 588: switch(ucStep)
  1123  0268  2BAE               	goto	l4261
  1124  0269                     l4269:	
  1125                           
  1126                           ;main.c: 592: {
  1127                           ;main.c: 597: static unsigned char ucTimerP3s = 0;
  1128                           ;main.c: 599: if( isFinishedTwentyMinTimer() )
  1129  0269  118A  25DC  118A   	fcall	_isFinishedTwentyMinTimer
  1130  026C  3A00               	xorlw	0
  1131  026D  1903               	skipnz
  1132  026E  2A74               	goto	l4275
  1133                           
  1134                           ;main.c: 600: {
  1135                           ;main.c: 601: ucStep = READY_FOR_RESET_STEP;
  1136  026F  3063               	movlw	99
  1137  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1138  0271  00A8               	movwf	main@ucStep^(0+128)
  1139                           
  1140                           ;main.c: 602: ucTimerP3s = 0;
  1141  0272  01A9               	clrf	main@ucTimerP3s^(0+128)
  1142                           
  1143                           ;main.c: 603: }
  1144  0273  2BAE               	goto	l4261
  1145  0274                     l4275:	
  1146                           
  1147                           ;main.c: 604: else
  1148                           ;main.c: 605: {
  1149                           ;main.c: 606: if( getAdOriginalCh13Value() > 90 )
  1150  0274  118A  23E0  118A   	fcall	_getAdOriginalCh13Value
  1151  0277  3000               	movlw	0
  1152  0278  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1153  0279  305B               	movlw	91
  1154  027A  1903               	skipnz
  1155  027B  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1156  027C  1C03               	skipc
  1157  027D  2A80               	goto	l4279
  1158                           
  1159                           ;main.c: 607: {
  1160                           ;main.c: 608: ucTimerP3s++;
  1161  027E  0AA9               	incf	main@ucTimerP3s^(0+128),f
  1162                           
  1163                           ;main.c: 609: }
  1164  027F  2A81               	goto	l4281
  1165  0280                     l4279:	
  1166                           
  1167                           ;main.c: 610: else
  1168                           ;main.c: 611: ucTimerP3s = 0;
  1169  0280  01A9               	clrf	main@ucTimerP3s^(0+128)
  1170  0281                     l4281:	
  1171                           
  1172                           ;main.c: 613: if( ucTimerP3s >= 30)
  1173  0281  301E               	movlw	30
  1174  0282  0229               	subwf	main@ucTimerP3s^(0+128),w
  1175  0283  1C03               	skipc
  1176  0284  2BAE               	goto	l4261
  1177                           
  1178                           ;main.c: 614: {
  1179                           ;main.c: 615: ucTimerP3s = 0;
  1180  0285  01A9               	clrf	main@ucTimerP3s^(0+128)
  1181  0286                     l4285:	
  1182                           
  1183                           ;main.c: 616: ucStep = START_UP_PWM_STEP;
  1184  0286  1683               	bsf	3,5	;RP0=1, select bank1
  1185  0287  01A8               	clrf	main@ucStep^(0+128)
  1186  0288  0AA8               	incf	main@ucStep^(0+128),f
  1187  0289  2BAE               	goto	l4261
  1188  028A                     l4287:	
  1189                           
  1190                           ;main.c: 627: {
  1191                           ;main.c: 632: pwm_start(150,249);
  1192  028A  30F9               	movlw	249
  1193  028B  00BD               	movwf	?_pwm_start^(0+128)
  1194  028C  3096               	movlw	150
  1195  028D  118A  2545  118A   	fcall	_pwm_start
  1196                           
  1197                           ;main.c: 634: setPB3(0);
  1198  0290  3000               	movlw	0
  1199  0291  118A  24E3  118A   	fcall	_setPB3
  1200                           
  1201                           ;main.c: 635: setPB4(1);
  1202  0294  3001               	movlw	1
  1203  0295  118A  24EE  118A   	fcall	_setPB4
  1204                           
  1205                           ;main.c: 636: setPB5(0);
  1206  0298  3000               	movlw	0
  1207  0299  118A  24F9  118A   	fcall	_setPB5
  1208                           
  1209                           ;main.c: 637: clearTwentyMinTimer();
  1210  029C  118A  2541  118A   	fcall	_clearTwentyMinTimer
  1211                           
  1212                           ;main.c: 638: startTwelveHourTimer( 240);
  1213  029F  30F0               	movlw	240
  1214  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  1215  02A1  00BD               	movwf	?_startTwelveHourTimer^(0+128)
  1216  02A2  01BE               	clrf	(?_startTwelveHourTimer+1)^(0+128)
  1217  02A3  118A  2595  118A   	fcall	_startTwelveHourTimer
  1218                           
  1219                           ;main.c: 639: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1220  02A6  3002               	movlw	2
  1221  02A7  2B81               	goto	L9
  1222  02A8                     l4295:	
  1223                           ;main.c: 640: break;
  1224                           
  1225                           
  1226                           ;main.c: 644: {
  1227                           ;main.c: 649: static unsigned char ucTimerP5s = 0;
  1228                           ;main.c: 651: if( isFinishedTwelveHoursTimer () )
  1229  02A8  118A  25D1  118A   	fcall	_isFinishedTwelveHoursTimer
  1230  02AB  3A00               	xorlw	0
  1231  02AC  1903               	skipnz
  1232  02AD  2AB0               	goto	l4299
  1233  02AE                     l4297:	
  1234                           
  1235                           ;main.c: 652: ucStep = READY_FOR_RESET_STEP;
  1236  02AE  3063               	movlw	99
  1237  02AF  2B81               	goto	L9
  1238  02B0                     l4299:	
  1239                           
  1240                           ;main.c: 653: else
  1241                           ;main.c: 654: {
  1242                           ;main.c: 655: if( getAdOriginalCh13Value() < 200 )
  1243  02B0  118A  23E0  118A   	fcall	_getAdOriginalCh13Value
  1244  02B3  3000               	movlw	0
  1245  02B4  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1246  02B5  30C8               	movlw	200
  1247  02B6  1903               	skipnz
  1248  02B7  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1249  02B8  1803               	skipnc
  1250  02B9  2ABC               	goto	l4303
  1251                           
  1252                           ;main.c: 656: ucTimerP5s++;
  1253  02BA  0AAA               	incf	main@ucTimerP5s^(0+128),f
  1254  02BB  2ABD               	goto	l4305
  1255  02BC                     l4303:	
  1256                           
  1257                           ;main.c: 657: else
  1258                           ;main.c: 658: ucTimerP5s = 0;
  1259  02BC  01AA               	clrf	main@ucTimerP5s^(0+128)
  1260  02BD                     l4305:	
  1261                           
  1262                           ;main.c: 660: if( ucTimerP5s >= 10)
  1263  02BD  300A               	movlw	10
  1264  02BE  022A               	subwf	main@ucTimerP5s^(0+128),w
  1265  02BF  1C03               	skipc
  1266  02C0  2BAE               	goto	l4261
  1267  02C1  3003               	movlw	3
  1268                           
  1269                           ;main.c: 661: {
  1270                           ;main.c: 662: ucTimerP5s = 0;
  1271  02C2  01AA               	clrf	main@ucTimerP5s^(0+128)
  1272                           
  1273                           ;main.c: 663: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1274  02C3  2BA8               	goto	L8
  1275  02C4                     l4311:	
  1276                           
  1277                           ;main.c: 671: {
  1278                           ;main.c: 672: clearTwelveHoursTimer();
  1279  02C4  118A  2533  118A   	fcall	_clearTwelveHoursTimer
  1280                           
  1281                           ;main.c: 673: startThreeHoursTimer(180);
  1282  02C7  30B4               	movlw	180
  1283  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  1284  02C9  00BD               	movwf	?_startThreeHoursTimer^(0+128)
  1285  02CA  01BE               	clrf	(?_startThreeHoursTimer+1)^(0+128)
  1286  02CB  118A  2582  118A   	fcall	_startThreeHoursTimer
  1287                           
  1288                           ;main.c: 674: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1289  02CE  3004               	movlw	4
  1290  02CF  2B81               	goto	L9
  1291  02D0                     l4315:	
  1292                           ;main.c: 675: break;
  1293                           
  1294                           
  1295                           ;main.c: 679: {
  1296                           ;main.c: 680: static unsigned char ucTimerP5s = 0;
  1297                           ;main.c: 682: if( isFinishedThreeHoursTimer() )
  1298  02D0  118A  25C6  118A   	fcall	_isFinishedThreeHoursTimer
  1299  02D3  3A00               	xorlw	0
  1300  02D4  1D03               	btfss	3,2
  1301  02D5  2AAE               	goto	l4297
  1302                           
  1303                           ;main.c: 684: else
  1304                           ;main.c: 685: {
  1305                           ;main.c: 686: if( getAdOriginalCh13Value() < 65 )
  1306  02D6  118A  23E0  118A   	fcall	_getAdOriginalCh13Value
  1307  02D9  3000               	movlw	0
  1308  02DA  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1309  02DB  3041               	movlw	65
  1310  02DC  1903               	skipnz
  1311  02DD  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1312  02DE  1803               	skipnc
  1313  02DF  2AE2               	goto	l4323
  1314                           
  1315                           ;main.c: 687: ucTimerP5s++;
  1316  02E0  0AA6               	incf	main@cTimerP5s_786^(0+128),f
  1317  02E1  2AE3               	goto	l4325
  1318  02E2                     l4323:	
  1319                           
  1320                           ;main.c: 688: else
  1321                           ;main.c: 689: ucTimerP5s = 0;
  1322  02E2  01A6               	clrf	main@cTimerP5s_786^(0+128)
  1323  02E3                     l4325:	
  1324                           
  1325                           ;main.c: 691: if( ucTimerP5s >= 10)
  1326  02E3  300A               	movlw	10
  1327  02E4  0226               	subwf	main@cTimerP5s_786^(0+128),w
  1328  02E5  1C03               	skipc
  1329  02E6  2BAE               	goto	l4261
  1330  02E7  3005               	movlw	5
  1331                           
  1332                           ;main.c: 692: {
  1333                           ;main.c: 693: ucTimerP5s = 0;
  1334  02E8  01A6               	clrf	main@cTimerP5s_786^(0+128)
  1335                           
  1336                           ;main.c: 694: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1337  02E9  2BA8               	goto	L8
  1338  02EA                     l4331:	
  1339                           
  1340                           ;main.c: 701: {
  1341                           ;main.c: 702: clearThreeHoursTimer();
  1342  02EA  118A  2538  118A   	fcall	_clearThreeHoursTimer
  1343                           
  1344                           ;main.c: 703: startOneHoursTimer( 120 );
  1345  02ED  3078               	movlw	120
  1346  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1347  02EF  00BD               	movwf	?_startOneHoursTimer^(0+128)
  1348  02F0  01BE               	clrf	(?_startOneHoursTimer+1)^(0+128)
  1349  02F1  118A  256F  118A   	fcall	_startOneHoursTimer
  1350                           
  1351                           ;main.c: 704: setPB3(1);
  1352  02F4  3001               	movlw	1
  1353  02F5  118A  24E3  118A   	fcall	_setPB3
  1354                           
  1355                           ;main.c: 705: setPB4(0);
  1356  02F8  3000               	movlw	0
  1357  02F9  118A  24EE  118A   	fcall	_setPB4
  1358                           
  1359                           ;main.c: 706: setPB5(1);
  1360  02FC  3001               	movlw	1
  1361  02FD  118A  24F9  118A   	fcall	_setPB5
  1362                           
  1363                           ;main.c: 707: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1364  0300  3006               	movlw	6
  1365  0301  2B81               	goto	L9
  1366  0302                     l4343:	
  1367                           ;main.c: 708: break;
  1368                           
  1369                           
  1370                           ;main.c: 712: {
  1371                           ;main.c: 717: static unsigned int uiTimerOneP5s = 0;
  1372                           ;main.c: 718: static unsigned int uiTimerTwoP5s = 0;
  1373                           ;main.c: 719: static unsigned int uiTimerThreeP5s = 0;
  1374                           ;main.c: 721: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1375  0302  118A  23E0  118A   	fcall	_getAdOriginalCh13Value
  1376  0305  0853               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1377  0306  00D8               	movwf	(main@uiCh13Value+1)^(0+128)
  1378  0307  0852               	movf	?_getAdOriginalCh13Value^(0+128),w
  1379  0308  00D7               	movwf	main@uiCh13Value^(0+128)
  1380                           
  1381                           ;main.c: 724: if( isFinishedOneHoursTimer() )
  1382  0309  118A  25BB  118A   	fcall	_isFinishedOneHoursTimer
  1383  030C  3A00               	xorlw	0
  1384  030D  1D03               	btfss	3,2
  1385  030E  2AAE               	goto	l4297
  1386                           
  1387                           ;main.c: 726: else
  1388                           ;main.c: 727: {
  1389                           ;main.c: 728: if( uiCh13Value > 90 )
  1390  030F  3000               	movlw	0
  1391  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1392  0311  0258               	subwf	(main@uiCh13Value+1)^(0+128),w
  1393  0312  305B               	movlw	91
  1394  0313  1903               	skipnz
  1395  0314  0257               	subwf	main@uiCh13Value^(0+128),w
  1396  0315  1C03               	skipc
  1397  0316  2B24               	goto	l4357
  1398                           
  1399                           ;main.c: 729: {
  1400                           ;main.c: 730: if( uiTimerOneP5s <= 10 )
  1401  0317  3000               	movlw	0
  1402  0318  0223               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1403  0319  300B               	movlw	11
  1404  031A  1903               	skipnz
  1405  031B  0222               	subwf	main@uiTimerOneP5s^(0+128),w
  1406  031C  1803               	skipnc
  1407  031D  2B21               	goto	l4355
  1408                           
  1409                           ;main.c: 731: uiTimerOneP5s++;
  1410  031E  0AA2               	incf	main@uiTimerOneP5s^(0+128),f
  1411  031F  1903               	skipnz
  1412  0320  0AA3               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1413  0321                     l4355:	
  1414                           
  1415                           ;main.c: 733: uiTimerThreeP5s = 0;
  1416  0321  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1417  0322  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1418                           
  1419                           ;main.c: 734: }
  1420  0323  2B26               	goto	l4359
  1421  0324                     l4357:	
  1422                           
  1423                           ;main.c: 735: else
  1424                           ;main.c: 736: {
  1425                           ;main.c: 737: uiTimerOneP5s = 0;
  1426  0324  01A2               	clrf	main@uiTimerOneP5s^(0+128)
  1427  0325  01A3               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1428  0326                     l4359:	
  1429                           
  1430                           ;main.c: 738: }
  1431                           ;main.c: 741: if(uiTimerOneP5s > 10)
  1432  0326  3000               	movlw	0
  1433  0327  0223               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1434  0328  300B               	movlw	11
  1435  0329  1903               	skipnz
  1436  032A  0222               	subwf	main@uiTimerOneP5s^(0+128),w
  1437                           
  1438                           ;main.c: 742: {
  1439                           ;main.c: 743: setPB3(0);
  1440  032B  3000               	movlw	0
  1441  032C  1C03               	skipc
  1442  032D  2B42               	goto	L11
  1443  032E  118A  24E3  118A   	fcall	_setPB3
  1444                           
  1445                           ;main.c: 744: setPB4(1);
  1446  0331  3001               	movlw	1
  1447  0332  118A  24EE  118A   	fcall	_setPB4
  1448                           
  1449                           ;main.c: 745: setPB5(0);
  1450  0335  3000               	movlw	0
  1451  0336  118A  24F9  118A   	fcall	_setPB5
  1452                           
  1453                           ;main.c: 747: uiTimerOneP5s = 0;
  1454  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1455  033A  01A2               	clrf	main@uiTimerOneP5s^(0+128)
  1456  033B  01A3               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1457                           
  1458                           ;main.c: 748: uiTimerTwoP5s = 0;
  1459  033C  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1460  033D  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1461                           
  1462                           ;main.c: 750: resetAllTimer();
  1463  033E  118A  252C  118A   	fcall	_resetAllTimer
  1464  0341  2A86               	goto	l4285
  1465  0342                     L11:	
  1466                           ;main.c: 754: else
  1467                           ;main.c: 755: {
  1468                           ;main.c: 756: if( uiCh13Value < 65 )
  1469                           
  1470  0342  0258               	subwf	(main@uiCh13Value+1)^(0+128),w
  1471  0343  3041               	movlw	65
  1472  0344  1903               	skipnz
  1473  0345  0257               	subwf	main@uiCh13Value^(0+128),w
  1474  0346  1803               	skipnc
  1475  0347  2B53               	goto	l4377
  1476                           
  1477                           ;main.c: 757: {
  1478                           ;main.c: 759: if( uiTimerTwoP5s <= 10)
  1479  0348  3000               	movlw	0
  1480  0349  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1481  034A  300B               	movlw	11
  1482  034B  1903               	skipnz
  1483  034C  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1484  034D  1803               	skipnc
  1485  034E  2B55               	goto	l4379
  1486                           
  1487                           ;main.c: 760: uiTimerTwoP5s++;
  1488  034F  0AA4               	incf	main@uiTimerTwoP5s^(0+128),f
  1489  0350  1903               	skipnz
  1490  0351  0AA5               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1491  0352  2B55               	goto	l4379
  1492  0353                     l4377:	
  1493                           
  1494                           ;main.c: 765: uiTimerThreeP5s = 0;
  1495  0353  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1496  0354  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1497  0355                     l4379:	
  1498                           
  1499                           ;main.c: 766: }
  1500                           ;main.c: 768: if(uiTimerTwoP5s > 10)
  1501  0355  3000               	movlw	0
  1502  0356  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1503  0357  300B               	movlw	11
  1504  0358  1903               	skipnz
  1505  0359  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1506  035A  1C03               	skipc
  1507  035B  2BAE               	goto	l4261
  1508                           
  1509                           ;main.c: 769: {
  1510                           ;main.c: 770: setPB3(1);
  1511  035C  3001               	movlw	1
  1512  035D  118A  24E3  118A   	fcall	_setPB3
  1513                           
  1514                           ;main.c: 771: setPB4(0);
  1515  0360  3000               	movlw	0
  1516  0361  118A  24EE  118A   	fcall	_setPB4
  1517                           
  1518                           ;main.c: 772: setPB5(1);
  1519  0364  3001               	movlw	1
  1520  0365  118A  24F9  118A   	fcall	_setPB5
  1521  0368  2BAE               	goto	l4261
  1522  0369                     l4383:	
  1523                           
  1524                           ;main.c: 791: {
  1525                           ;main.c: 792: setPB3(0);
  1526  0369  3000               	movlw	0
  1527  036A  118A  24E3  118A   	fcall	_setPB3
  1528                           
  1529                           ;main.c: 793: setPB4(0);
  1530  036D  3000               	movlw	0
  1531  036E  118A  24EE  118A   	fcall	_setPB4
  1532                           
  1533                           ;main.c: 794: setPB5(1);
  1534  0371  3001               	movlw	1
  1535  0372  118A  24F9  118A   	fcall	_setPB5
  1536                           
  1537                           ;main.c: 797: setWaitResetFlag(1);
  1538  0375  3001               	movlw	1
  1539  0376  118A  2601  118A   	fcall	_setWaitResetFlag
  1540                           
  1541                           ;main.c: 798: pwm_start(150,249);
  1542  0379  30F9               	movlw	249
  1543  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1544  037B  00BD               	movwf	?_pwm_start^(0+128)
  1545  037C  3096               	movlw	150
  1546  037D  118A  2545  118A   	fcall	_pwm_start
  1547                           
  1548                           ;main.c: 804: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1549  0380  3064               	movlw	100
  1550  0381                     L9:	
  1551  0381  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0382  2BA8               	goto	L8
  1553  0383                     l4387:	
  1554                           ;main.c: 805: break;
  1555                           
  1556                           
  1557                           ;main.c: 809: {
  1558                           ;main.c: 810: static unsigned ucDelay1s = 0;
  1559                           ;main.c: 811: if(ucDelay1s <= 50)
  1560  0383  3000               	movlw	0
  1561  0384  0221               	subwf	(main@ucDelay1s+1)^(0+128),w
  1562  0385  3033               	movlw	51
  1563  0386  1903               	skipnz
  1564  0387  0220               	subwf	main@ucDelay1s^(0+128),w
  1565  0388  1803               	skipnc
  1566  0389  2B8E               	goto	l4391
  1567                           
  1568                           ;main.c: 812: ucDelay1s++;
  1569  038A  0AA0               	incf	main@ucDelay1s^(0+128),f
  1570  038B  1903               	skipnz
  1571  038C  0AA1               	incf	(main@ucDelay1s+1)^(0+128),f
  1572  038D  2BAE               	goto	l4261
  1573  038E                     l4391:	
  1574  038E  3065               	movlw	101
  1575                           
  1576                           ;main.c: 813: else
  1577                           ;main.c: 814: {
  1578                           ;main.c: 815: ucDelay1s = 0;
  1579  038F  01A0               	clrf	main@ucDelay1s^(0+128)
  1580  0390  01A1               	clrf	(main@ucDelay1s+1)^(0+128)
  1581                           
  1582                           ;main.c: 816: ucStep = MEET_RESET_CONDITION_STEP;
  1583  0391  2BA8               	goto	L8
  1584  0392                     l4395:	
  1585                           
  1586                           ;main.c: 826: {
  1587                           ;main.c: 827: static unsigned char ucTimerP5s = 0;
  1588                           ;main.c: 828: unsigned int ucChValue = getAdOriginalCh13Value();
  1589  0392  118A  23E0  118A   	fcall	_getAdOriginalCh13Value
  1590  0395  0853               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1591  0396  00D6               	movwf	(main@ucChValue+1)^(0+128)
  1592  0397  0852               	movf	?_getAdOriginalCh13Value^(0+128),w
  1593  0398  00D5               	movwf	main@ucChValue^(0+128)
  1594                           
  1595                           ;main.c: 830: if( ucChValue > 50 )
  1596  0399  3000               	movlw	0
  1597  039A  0256               	subwf	(main@ucChValue+1)^(0+128),w
  1598  039B  3033               	movlw	51
  1599  039C  1903               	skipnz
  1600  039D  0255               	subwf	main@ucChValue^(0+128),w
  1601  039E  1C03               	skipc
  1602  039F  2BA2               	goto	l4401
  1603                           
  1604                           ;main.c: 831: ucTimerP5s++;
  1605  03A0  0AA7               	incf	main@cTimerP5s_792^(0+128),f
  1606  03A1  2BA3               	goto	l4403
  1607  03A2                     l4401:	
  1608                           
  1609                           ;main.c: 832: else
  1610                           ;main.c: 833: ucTimerP5s = 0;
  1611  03A2  01A7               	clrf	main@cTimerP5s_792^(0+128)
  1612  03A3                     l4403:	
  1613                           
  1614                           ;main.c: 835: if(ucTimerP5s >= 50)
  1615  03A3  3032               	movlw	50
  1616  03A4  0227               	subwf	main@cTimerP5s_792^(0+128),w
  1617  03A5  1C03               	skipc
  1618  03A6  2BAE               	goto	l4261
  1619                           
  1620                           ;main.c: 836: ucStep = RESET_STEP;
  1621  03A7  3066               	movlw	102
  1622  03A8                     L8:	
  1623  03A8  00A8               	movwf	main@ucStep^(0+128)
  1624  03A9  2BAE               	goto	l4261
  1625  03AA                     l4407:	
  1626                           
  1627                           ;main.c: 841: {
  1628                           ;main.c: 842: ucStep = INIT_STEP;
  1629  03AA  01A8               	clrf	main@ucStep^(0+128)
  1630                           
  1631                           ;main.c: 843: reset();
  1632  03AB  118A  2613  118A   	fcall	_reset
  1633  03AE                     l4261:	
  1634                           ;main.c: 844: break;
  1635                           
  1636  03AE  0064               	clrwdt	;#
  1637                           
  1638                           ;main.c: 573: process_AD_Converter_Value();
  1639  03AF  118A  2485  118A   	fcall	_process_AD_Converter_Value
  1640                           
  1641                           ;main.c: 575: if( isPermitSampleTime() )
  1642  03B2  118A  2606  118A   	fcall	_isPermitSampleTime
  1643  03B5  3A00               	xorlw	0
  1644  03B6  1903               	skipnz
  1645  03B7  2BAE               	goto	l4261
  1646                           
  1647                           ;main.c: 576: {
  1648                           ;main.c: 579: clrSampeTime();
  1649  03B8  118A  2611  118A   	fcall	_clrSampeTime
  1650  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1651  03BC  0828               	movf	main@ucStep^(0+128),w
  1652                           
  1653                           ; Switch size 1, requested type "space"
  1654                           ; Number of cases is 11, Range of values is 0 to 102
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte           34    18 (average)
  1658                           ; direct_byte          213     7 (fixed)
  1659                           ; jumptable            260     6 (fixed)
  1660                           ; rangetable           107     6 (fixed)
  1661                           ; spacedrange          212     9 (fixed)
  1662                           ; locatedrange         103     3 (fixed)
  1663                           ;	Chosen strategy is simple_byte
  1664  03BD  3A00               	xorlw	0	; case 0
  1665  03BE  1903               	skipnz
  1666  03BF  2A69               	goto	l4269
  1667  03C0  3A01               	xorlw	1	; case 1
  1668  03C1  1903               	skipnz
  1669  03C2  2A8A               	goto	l4287
  1670  03C3  3A03               	xorlw	3	; case 2
  1671  03C4  1903               	skipnz
  1672  03C5  2AA8               	goto	l4295
  1673  03C6  3A01               	xorlw	1	; case 3
  1674  03C7  1903               	skipnz
  1675  03C8  2AC4               	goto	l4311
  1676  03C9  3A07               	xorlw	7	; case 4
  1677  03CA  1903               	skipnz
  1678  03CB  2AD0               	goto	l4315
  1679  03CC  3A01               	xorlw	1	; case 5
  1680  03CD  1903               	skipnz
  1681  03CE  2AEA               	goto	l4331
  1682  03CF  3A03               	xorlw	3	; case 6
  1683  03D0  1903               	skipnz
  1684  03D1  2B02               	goto	l4343
  1685  03D2  3A65               	xorlw	101	; case 99
  1686  03D3  1903               	skipnz
  1687  03D4  2B69               	goto	l4383
  1688  03D5  3A07               	xorlw	7	; case 100
  1689  03D6  1903               	skipnz
  1690  03D7  2B83               	goto	l4387
  1691  03D8  3A01               	xorlw	1	; case 101
  1692  03D9  1903               	skipnz
  1693  03DA  2B92               	goto	l4395
  1694  03DB  3A03               	xorlw	3	; case 102
  1695  03DC  1903               	skipnz
  1696  03DD  2BAA               	goto	l4407
  1697  03DE  2BDF               	goto	l736
  1698  03DF                     l736:	
  1699  03DF  2BAE               	goto	l4261
  1700  03E0                     __end_of_main:	
  1701                           
  1702                           	psect	text1365
  1703  03E0                     __ptext1365:	
  1704 ;; =============== function _main ends ============
  1705                           
  1706                           
  1707 ;; *************** function _getAdOriginalCh13Value *****************
  1708 ;; Defined at:
  1709 ;;		line 397 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  2   21[BANK1 ] unsigned int 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 40/0
  1720 ;;		On exit  : 160/20
  1721 ;;		Unchanged: FFE00/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       0       2       0       0
  1724 ;;      Locals:         0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0
  1726 ;;      Totals:         0       0       2       0       0
  1727 ;;Total ram usage:        2 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    4
  1730 ;; This function calls:
  1731 ;;		_FilterCh13
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736  03E0                     _getAdOriginalCh13Value:	
  1737                           
  1738                           ;common.c: 399: return FilterCh13(uiSampleCh13);
  1739                           
  1740                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1741  03E0  30B1               	movlw	_uiSampleCh13& (0+255)
  1742  03E1  23E7               	fcall	_FilterCh13
  1743  03E2  083E               	movf	(?_FilterCh13+1)^(0+128),w
  1744  03E3  00D3               	movwf	(?_getAdOriginalCh13Value+1)^(0+128)
  1745  03E4  083D               	movf	?_FilterCh13^(0+128),w
  1746  03E5  00D2               	movwf	?_getAdOriginalCh13Value^(0+128)
  1747  03E6  0008               	return
  1748  03E7                     __end_of_getAdOriginalCh13Value:	
  1749  03E7                     __ptext1373:	
  1750 ;; =============== function _getAD_ConvertFlag ends ============
  1751                           
  1752                           
  1753 ;; *************** function _FilterCh13 *****************
  1754 ;; Defined at:
  1755 ;;		line 76 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  tmpValue        1    wreg     PTR unsigned int 
  1758 ;;		 -> uiSampleCh13(6), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  tmpValue        1    6[BANK1 ] PTR unsigned int 
  1761 ;;		 -> uiSampleCh13(6), 
  1762 ;;  cir             2   17[BANK1 ] int 
  1763 ;;  filter_buf      6   11[BANK1 ] unsigned int [3]
  1764 ;;  filter_sum      2    9[BANK1 ] unsigned int 
  1765 ;;  filter_temp     2    7[BANK1 ] unsigned int 
  1766 ;;  i               1   20[BANK1 ] unsigned char 
  1767 ;;  j               1   19[BANK1 ] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    0[BANK1 ] unsigned int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1772 ;; Tracked objects:
  1773 ;;		On entry : 40/0
  1774 ;;		On exit  : 160/20
  1775 ;;		Unchanged: FFE00/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0       2       0       0
  1778 ;;      Locals:         0       0      15       0       0
  1779 ;;      Temps:          0       0       4       0       0
  1780 ;;      Totals:         0       0      21       0       0
  1781 ;;Total ram usage:       21 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_getAdOriginalCh13Value
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790  03E7                     _FilterCh13:	
  1791                           
  1792                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1793                           ;FilterCh13@tmpValue stored from wreg
  1794  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  1795  03E8  00C3               	movwf	FilterCh13@tmpValue^(0+128)
  1796  03E9  01D0               	clrf	FilterCh13@j^(0+128)
  1797                           
  1798                           ;common.c: 79: unsigned int filter_temp = 0, filter_sum = 0;
  1799  03EA  01C4               	clrf	FilterCh13@filter_temp^(0+128)
  1800  03EB  01C5               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1801  03EC  01C6               	clrf	FilterCh13@filter_sum^(0+128)
  1802  03ED  01C7               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1803                           
  1804                           ;common.c: 81: unsigned int filter_buf[3];
  1805                           ;common.c: 83: for(int cir = 0;cir < 3; cir++)
  1806  03EE  01CE               	clrf	FilterCh13@cir^(0+128)
  1807  03EF  01CF               	clrf	(FilterCh13@cir+1)^(0+128)
  1808  03F0                     l4159:	
  1809                           
  1810                           ;common.c: 84: filter_buf[cir] = *tmpValue++;
  1811  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  1812  03F1  1303               	bcf	3,6	;RP1=0, select bank1
  1813  03F2  0843               	movf	FilterCh13@tmpValue^(0+128),w
  1814  03F3  0084               	movwf	4
  1815  03F4  1383               	bcf	3,7	;select IRP bank0
  1816  03F5  2470  118A         	fcall	PL5	;call to abstracted procedure
  1817  03F7  0D4E               	rlf	FilterCh13@cir^(0+128),w
  1818  03F8  2477  118A         	fcall	PL6	;call to abstracted procedure
  1819  03FA  0AC3               	incf	FilterCh13@tmpValue^(0+128),f
  1820  03FB  0AC3               	incf	FilterCh13@tmpValue^(0+128),f
  1821  03FC  0ACE               	incf	FilterCh13@cir^(0+128),f
  1822  03FD  1903               	skipnz
  1823  03FE  0ACF               	incf	(FilterCh13@cir+1)^(0+128),f
  1824  03FF  084F               	movf	(FilterCh13@cir+1)^(0+128),w
  1825  0400  3A80               	xorlw	128
  1826  0401  00FF               	movwf	127
  1827  0402  3080               	movlw	128
  1828  0403  027F               	subwf	127,w
  1829  0404  1D03               	skipz
  1830  0405  2C08               	goto	u1915
  1831  0406  3003               	movlw	3
  1832  0407  024E               	subwf	FilterCh13@cir^(0+128),w
  1833  0408                     u1915:	
  1834  0408  1C03               	skipc
  1835  0409  2BF0               	goto	l4159
  1836                           
  1837                           ;common.c: 88: for(j = 0; j < 3 - 1; j++)
  1838  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1839  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1840  040C  01D0               	clrf	FilterCh13@j^(0+128)
  1841                           
  1842                           ;common.c: 89: {
  1843                           ;common.c: 90: for(i = 0; i < 3 - 1 - j; i++)
  1844  040D  01D1               	clrf	FilterCh13@i^(0+128)
  1845  040E                     l4181:	
  1846  040E  01C0               	clrf	(??_FilterCh13^(0+128)+1)
  1847  040F  0850               	movf	FilterCh13@j^(0+128),w
  1848  0410  3C02               	sublw	2
  1849  0411  00BF               	movwf	??_FilterCh13^(0+128)
  1850  0412  1C03               	skipc
  1851  0413  03C0               	decf	(??_FilterCh13^(0+128)+1),f
  1852  0414  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1853  0415  3A80               	xorlw	128
  1854  0416  3C80               	sublw	128
  1855  0417  1D03               	skipz
  1856  0418  2C1B               	goto	u1935
  1857  0419  083F               	movf	??_FilterCh13^(0+128),w
  1858  041A  0251               	subwf	FilterCh13@i^(0+128),w
  1859  041B                     u1935:	
  1860  041B  1803               	btfsc	3,0
  1861  041C  2C4A               	goto	l4183
  1862                           
  1863                           ;common.c: 91: {
  1864                           ;common.c: 92: if(filter_buf[i] > filter_buf[i + 1])
  1865  041D  1683               	bsf	3,5	;RP0=1, select bank1
  1866  041E  1303               	bcf	3,6	;RP1=0, select bank1
  1867  041F  1003               	clrc
  1868  0420  2466  118A         	fcall	PL4	;call to abstracted procedure
  1869  0422  247F  118A         	fcall	PL8	;call to abstracted procedure
  1870  0424  0800               	movf	0,w
  1871  0425  00C1               	movwf	(??_FilterCh13+2)^(0+128)
  1872  0426  0A84               	incf	4,f
  1873  0427  0800               	movf	0,w
  1874  0428  00C2               	movwf	((??_FilterCh13+2)^(0+128)+1)
  1875  0429  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1876  042A  0242               	subwf	(??_FilterCh13+3)^(0+128),w
  1877  042B  1D03               	skipz
  1878  042C  2C2F               	goto	u1925
  1879  042D  083F               	movf	??_FilterCh13^(0+128),w
  1880  042E  0241               	subwf	(??_FilterCh13+2)^(0+128),w
  1881  042F                     u1925:	
  1882  042F  1803               	skipnc
  1883  0430  2C48               	goto	l4179
  1884                           
  1885                           ;common.c: 93: {
  1886                           ;common.c: 95: filter_temp = filter_buf[i];
  1887  0431  1003               	clrc
  1888  0432  0D51               	rlf	FilterCh13@i^(0+128),w
  1889  0433  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1890  0434  0084               	movwf	4
  1891  0435  0800               	movf	0,w
  1892  0436  00C4               	movwf	FilterCh13@filter_temp^(0+128)
  1893  0437  0A84               	incf	4,f
  1894  0438  0800               	movf	0,w
  1895  0439  00C5               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1896                           
  1897                           ;common.c: 97: filter_buf[i] = filter_buf[i + 1];
  1898  043A  247F  118A         	fcall	PL8	;call to abstracted procedure
  1899  043C  2470  118A         	fcall	PL5	;call to abstracted procedure
  1900  043E  0D51               	rlf	FilterCh13@i^(0+128),w
  1901  043F  2477  118A         	fcall	PL6	;call to abstracted procedure
  1902                           
  1903                           ;common.c: 99: filter_buf[i + 1] = filter_temp;
  1904  0441  247F  118A         	fcall	PL8	;call to abstracted procedure
  1905  0443  0844               	movf	FilterCh13@filter_temp^(0+128),w
  1906  0444  0080               	movwf	0
  1907  0445  0A84               	incf	4,f
  1908  0446  0845               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1909  0447  0080               	movwf	0
  1910  0448                     l4179:	
  1911  0448  0AD1               	incf	FilterCh13@i^(0+128),f
  1912  0449  2C0E               	goto	l4181
  1913  044A                     l4183:	
  1914  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1915  044B  3002               	movlw	2
  1916  044C  1303               	bcf	3,6	;RP1=0, select bank1
  1917  044D  0AD0               	incf	FilterCh13@j^(0+128),f
  1918  044E  0250               	subwf	FilterCh13@j^(0+128),w
  1919                           
  1920                           ;common.c: 100: }
  1921                           ;common.c: 101: }
  1922                           ;common.c: 102: }
  1923                           ;common.c: 104: for(i = 1; i < 3 - 1; i++)
  1924  044F  01D1               	clrf	FilterCh13@i^(0+128)
  1925  0450  1C03               	skipc
  1926  0451  2C0E               	goto	l4181
  1927  0452  0AD1               	incf	FilterCh13@i^(0+128),f
  1928                           
  1929                           ;common.c: 105: {
  1930                           ;common.c: 106: filter_sum += filter_buf[i];
  1931  0453  1003               	clrc
  1932  0454                     L14:	
  1933  0454  2466  118A         	fcall	PL4	;call to abstracted procedure
  1934  0456  083F               	movf	??_FilterCh13^(0+128),w
  1935  0457  07C6               	addwf	FilterCh13@filter_sum^(0+128),f
  1936  0458  1803               	skipnc
  1937  0459  0AC7               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1938  045A  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1939  045B  07C7               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1940  045C  3002               	movlw	2
  1941  045D  0AD1               	incf	FilterCh13@i^(0+128),f
  1942  045E  0251               	subwf	FilterCh13@i^(0+128),w
  1943  045F  1C03               	skipc
  1944  0460  2C54               	goto	L14
  1945                           
  1946                           ;common.c: 107: }
  1947                           ;common.c: 110: return (filter_sum >> 0 );
  1948  0461  0847               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1949  0462  00BE               	movwf	(?_FilterCh13+1)^(0+128)
  1950  0463  0846               	movf	FilterCh13@filter_sum^(0+128),w
  1951  0464  00BD               	movwf	?_FilterCh13^(0+128)
  1952  0465  0008               	return
  1953  0466                     __end_of_FilterCh13:	
  1954  0466                     PL4:	
  1955  0466  0D51               	rlf	FilterCh13@i^(0+128),w
  1956  0467  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1957  0468  0084               	movwf	4
  1958  0469  1383               	bcf	3,7	;select IRP bank1
  1959  046A  0800               	movf	0,w
  1960  046B  00BF               	movwf	??_FilterCh13^(0+128)
  1961  046C  0A84               	incf	4,f
  1962  046D  0800               	movf	0,w
  1963  046E  00C0               	movwf	(??_FilterCh13^(0+128)+1)
  1964  046F  0008               	return
  1965  0470                     PL5:	
  1966  0470  0800               	movf	0,w
  1967  0471  00BF               	movwf	??_FilterCh13^(0+128)
  1968  0472  0A84               	incf	4,f
  1969  0473  0800               	movf	0,w
  1970  0474  00C0               	movwf	(??_FilterCh13^(0+128)+1)
  1971  0475  1003               	clrc
  1972  0476  0008               	return
  1973  0477                     PL6:	
  1974  0477  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1975  0478  0084               	movwf	4
  1976  0479  083F               	movf	??_FilterCh13^(0+128),w
  1977  047A  0080               	movwf	0
  1978  047B  0A84               	incf	4,f
  1979  047C  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1980  047D  0080               	movwf	0
  1981  047E  0008               	return
  1982  047F                     PL8:	
  1983  047F  1003               	clrc
  1984  0480  0D51               	rlf	FilterCh13@i^(0+128),w
  1985  0481  3E02               	addlw	2
  1986  0482  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1987  0483  0084               	movwf	4
  1988  0484  0008               	return
  1989                           
  1990                           	psect	text1366
  1991  0485                     __ptext1366:	
  1992 ;; =============== function _getAdOriginalCh13Value ends ============
  1993                           
  1994                           
  1995 ;; *************** function _process_AD_Converter_Value *****************
  1996 ;; Defined at:
  1997 ;;		line 419 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;		None               void
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 60/0
  2009 ;;		Unchanged: FFF9F/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    4
  2018 ;; This function calls:
  2019 ;;		_getAD_ConvertFlag
  2020 ;;		_setAD_ConvertFlag
  2021 ;;		_AD_Sample
  2022 ;;		_adc_test_init
  2023 ;;		_adc_start
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028  0485                     _process_AD_Converter_Value:	
  2029                           
  2030                           ;common.c: 420: if(getAD_ConvertFlag())
  2031                           
  2032                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2033  0485  249E  118A         	fcall	_getAD_ConvertFlag
  2034  0487  3A00               	xorlw	0
  2035  0488  1903               	skipnz
  2036  0489  0008               	return
  2037                           
  2038                           ;common.c: 421: {
  2039                           ;common.c: 422: setAD_ConvertFlag(0);
  2040  048A  3000               	movlw	0
  2041  048B  24A2  118A         	fcall	_setAD_ConvertFlag
  2042                           
  2043                           ;common.c: 423: AD_Sample();
  2044  048D  24A7  118A         	fcall	_AD_Sample
  2045                           
  2046                           ;common.c: 424: if(12 == sampleChannelSelect)
  2047  048F  0863               	movf	_sampleChannelSelect,w
  2048  0490  3A0C               	xorlw	12
  2049                           
  2050                           ;common.c: 425: adc_test_init(12,3);
  2051  0491  3003               	movlw	3
  2052  0492  1D03               	skipz
  2053  0493  2C98               	goto	L13
  2054  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0495  00BD               	movwf	?_adc_test_init^(0+128)
  2056  0496  300C               	movlw	12
  2057  0497  2C9B               	goto	L12
  2058  0498                     L13:	
  2059                           ;common.c: 426: else
  2060                           ;common.c: 427: adc_test_init(13,3);
  2061                           
  2062  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0499  00BD               	movwf	?_adc_test_init^(0+128)
  2064  049A  300D               	movlw	13
  2065  049B                     L12:	
  2066  049B  24BB  118A         	fcall	_adc_test_init
  2067                           
  2068                           ;common.c: 428: adc_start();
  2069  049D  2CD7               	ljmp	l4047
  2070  049E                     __end_of_process_AD_Converter_Value:	
  2071  049E                     __ptext1372:	
  2072 ;; =============== function _setAD_ConvertFlag ends ============
  2073                           
  2074                           
  2075 ;; *************** function _getAD_ConvertFlag *****************
  2076 ;; Defined at:
  2077 ;;		line 368 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      unsigned char 
  2084 ;; Registers used:
  2085 ;;		wreg
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 60/0
  2089 ;;		Unchanged: FFF9F/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0
  2094 ;;      Totals:         0       0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    3
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_process_AD_Converter_Value
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104  049E                     _getAD_ConvertFlag:	
  2105                           
  2106                           ;common.c: 369: return adc_convert_flag;
  2107                           
  2108                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2109  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2110  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2111  04A0  0858               	movf	_adc_convert_flag,w
  2112  04A1  0008               	return
  2113  04A2                     __end_of_getAD_ConvertFlag:	
  2114  04A2                     __ptext1371:	
  2115 ;; =============== function _AD_Sample ends ============
  2116                           
  2117                           
  2118 ;; *************** function _setAD_ConvertFlag *****************
  2119 ;; Defined at:
  2120 ;;		line 374 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  flag            1    wreg     unsigned char 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  flag            1    0[BANK1 ] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;		None               void
  2127 ;; Registers used:
  2128 ;;		wreg
  2129 ;; Tracked objects:
  2130 ;;		On entry : 60/0
  2131 ;;		On exit  : 60/0
  2132 ;;		Unchanged: FFF9F/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       0       0       0       0
  2135 ;;      Locals:         0       0       1       0       0
  2136 ;;      Temps:          0       0       0       0       0
  2137 ;;      Totals:         0       0       1       0       0
  2138 ;;Total ram usage:        1 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    3
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_process_AD_Converter_Value
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147  04A2                     _setAD_ConvertFlag:	
  2148                           
  2149                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2150                           ;setAD_ConvertFlag@flag stored from wreg
  2151  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2152  04A3  00BD               	movwf	setAD_ConvertFlag@flag^(0+128)
  2153                           
  2154                           ;common.c: 375: adc_convert_flag = flag;
  2155  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2156  04A5  00D8               	movwf	_adc_convert_flag
  2157  04A6  0008               	return
  2158  04A7                     __end_of_setAD_ConvertFlag:	
  2159  04A7                     __ptext1370:	
  2160 ;; =============== function _initPin ends ============
  2161                           
  2162                           
  2163 ;; *************** function _AD_Sample *****************
  2164 ;; Defined at:
  2165 ;;		line 442 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;		None               void
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 60/0
  2176 ;;		On exit  : 60/0
  2177 ;;		Unchanged: FFF9F/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0
  2182 ;;      Totals:         0       0       0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    3
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_process_AD_Converter_Value
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192  04A7                     _AD_Sample:	
  2193                           
  2194                           ;common.c: 443: if(sampleTimes < 3)
  2195                           
  2196                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2197  04A7  3003               	movlw	3
  2198  04A8  025E               	subwf	_sampleTimes,w
  2199  04A9  1803               	skipnc
  2200  04AA  0008               	return
  2201  04AB  3003               	movlw	3
  2202                           
  2203                           ;common.c: 444: {
  2204                           ;common.c: 445: sampleTimes++;
  2205  04AC  0ADE               	incf	_sampleTimes,f
  2206                           
  2207                           ;common.c: 447: if(sampleTimes >= 3)
  2208  04AD  025E               	subwf	_sampleTimes,w
  2209  04AE  1C03               	skipc
  2210  04AF  0008               	return
  2211                           
  2212                           ;common.c: 448: {
  2213                           ;common.c: 449: sampleTimes = 0;
  2214  04B0  01DE               	clrf	_sampleTimes
  2215                           
  2216                           ;common.c: 451: if(sampleChannelSelect == 12)
  2217  04B1  0863               	movf	_sampleChannelSelect,w
  2218  04B2  3A0C               	xorlw	12
  2219  04B3  1D03               	skipz
  2220  04B4  2CB8               	goto	l4219
  2221                           
  2222                           ;common.c: 452: {
  2223                           ;common.c: 453: sampleChannelSelect = 13;
  2224  04B5  300D               	movlw	13
  2225  04B6  00E3               	movwf	_sampleChannelSelect
  2226                           
  2227                           ;common.c: 454: }
  2228  04B7  0008               	return
  2229  04B8                     l4219:	
  2230                           
  2231                           ;common.c: 456: else
  2232                           ;common.c: 457: {
  2233                           ;common.c: 458: sampleChannelSelect = 12;
  2234  04B8  300C               	movlw	12
  2235  04B9  00E3               	movwf	_sampleChannelSelect
  2236  04BA  0008               	return
  2237  04BB                     __end_of_AD_Sample:	
  2238  04BB                     __ptext1386:	
  2239 ;; =============== function _startTwentyMinTimer ends ============
  2240                           
  2241                           
  2242 ;; *************** function _adc_test_init *****************
  2243 ;; Defined at:
  2244 ;;		line 85 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  channel         1    wreg     unsigned char 
  2247 ;;  ref             1    0[BANK1 ] unsigned char 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  channel         1    2[BANK1 ] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;		None               void
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0
  2254 ;; Tracked objects:
  2255 ;;		On entry : 60/20
  2256 ;;		On exit  : 60/20
  2257 ;;		Unchanged: FFF9F/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       1       0       0
  2260 ;;      Locals:         0       0       1       0       0
  2261 ;;      Temps:          0       0       1       0       0
  2262 ;;      Totals:         0       0       3       0       0
  2263 ;;Total ram usage:        3 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    3
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;;		_process_AD_Converter_Value
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273  04BB                     _adc_test_init:	
  2274                           
  2275                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2276                           ;adc_test_init@channel stored from wreg
  2277  04BB  00BF               	movwf	adc_test_init@channel^(0+128)
  2278                           
  2279                           ;periph.c: 86: ADCON0 = 0x40;
  2280  04BC  3040               	movlw	64
  2281  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2282  04BE  009F               	movwf	31	;volatile
  2283                           
  2284                           ;periph.c: 87: ADCON0|=channel<<2;
  2285  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  2286  04C0  083F               	movf	adc_test_init@channel^(0+128),w
  2287  04C1  00BE               	movwf	??_adc_test_init^(0+128)
  2288  04C2  1003               	clrc
  2289  04C3  0DBE               	rlf	??_adc_test_init^(0+128),f
  2290  04C4  1003               	clrc
  2291  04C5  0D3E               	rlf	??_adc_test_init^(0+128),w
  2292  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2293  04C7  049F               	iorwf	31,f	;volatile
  2294                           
  2295                           ;periph.c: 88: ADCON1 = 0x35;
  2296  04C8  3035               	movlw	53
  2297  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2298  04CA  009F               	movwf	31	;volatile
  2299                           
  2300                           ;periph.c: 89: ADCON1|=ref<<6;
  2301  04CB  083D               	movf	adc_test_init@ref^(0+128),w
  2302  04CC  00BE               	movwf	??_adc_test_init^(0+128)
  2303  04CD  0CBE               	rrf	??_adc_test_init^(0+128),f
  2304  04CE  0CBE               	rrf	??_adc_test_init^(0+128),f
  2305  04CF  0C3E               	rrf	??_adc_test_init^(0+128),w
  2306  04D0  39C0               	andlw	192
  2307  04D1  049F               	iorwf	31,f	;volatile
  2308                           
  2309                           ;periph.c: 90: ADON=1;
  2310  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2311  04D3  141F               	bsf	31,0
  2312                           
  2313                           ;periph.c: 91: ADIE=1;
  2314  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2315  04D5  150D               	bsf	13,2
  2316  04D6  0008               	return
  2317  04D7                     __end_of_adc_test_init:	
  2318  04D7                     __ptext1384:	
  2319 ;; =============== function _isPermitSampleTime ends ============
  2320                           
  2321                           
  2322 ;; *************** function _adc_start *****************
  2323 ;; Defined at:
  2324 ;;		line 101 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;		None               void
  2331 ;; Registers used:
  2332 ;;		None
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 60/0
  2336 ;;		Unchanged: FFF9F/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         0       0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0
  2341 ;;      Totals:         0       0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    3
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;;		_process_AD_Converter_Value
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352  04D7                     _adc_start:	
  2353  04D7                     l4047:	
  2354                           ; Regs used in _adc_start: []
  2355                           
  2356                           
  2357                           ;periph.c: 102: GO=1;
  2358  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2359  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2360  04D9  149F               	bsf	31,1
  2361  04DA  0008               	return
  2362  04DB                     __end_of_adc_start:	
  2363                           
  2364                           	psect	text1367
  2365  052C                     __ptext1367:	
  2366 ;; =============== function _process_AD_Converter_Value ends ============
  2367                           
  2368                           
  2369 ;; *************** function _resetAllTimer *****************
  2370 ;; Defined at:
  2371 ;;		line 481 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		status,2, status,0, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 160/20
  2382 ;;		On exit  : 160/0
  2383 ;;		Unchanged: FFE9F/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    4
  2392 ;; This function calls:
  2393 ;;		_clearTwelveHoursTimer
  2394 ;;		_clearThreeHoursTimer
  2395 ;;		_clearOneHoursTimer
  2396 ;;		_clearTwentyMinTimer
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401  052C                     _resetAllTimer:	
  2402                           
  2403                           ;main.c: 482: clearTwelveHoursTimer();
  2404                           
  2405                           ; Regs used in _resetAllTimer: [status,2+status,0+pclath+cstack]
  2406  052C  2533  118A         	fcall	_clearTwelveHoursTimer
  2407                           
  2408                           ;main.c: 483: clearThreeHoursTimer();
  2409  052E  2538  118A         	fcall	_clearThreeHoursTimer
  2410                           
  2411                           ;main.c: 484: clearOneHoursTimer();
  2412  0530  253D  118A         	fcall	_clearOneHoursTimer
  2413                           
  2414                           ;main.c: 485: clearTwentyMinTimer();
  2415  0532  2D41               	ljmp	l4017
  2416  0533                     __end_of_resetAllTimer:	
  2417  0533                     __ptext1393:	
  2418 ;; =============== function _clearThreeHoursTimer ends ============
  2419                           
  2420                           
  2421 ;; *************** function _clearTwelveHoursTimer *****************
  2422 ;; Defined at:
  2423 ;;		line 485 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;		None               void
  2430 ;; Registers used:
  2431 ;;		status,2
  2432 ;; Tracked objects:
  2433 ;;		On entry : 40/20
  2434 ;;		On exit  : 60/0
  2435 ;;		Unchanged: FFF9F/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0
  2440 ;;      Totals:         0       0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_resetAllTimer
  2448 ;;		_main
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451  0533                     _clearTwelveHoursTimer:	
  2452                           
  2453                           ;common.c: 486: uiBigTimer = 0;
  2454                           
  2455                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2456  0533  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0534  01C3               	clrf	_uiBigTimer
  2458  0535  01C4               	clrf	_uiBigTimer+1
  2459                           
  2460                           ;common.c: 487: bBigTimerStartFlag = 0;
  2461  0536  01D9               	clrf	_bBigTimerStartFlag
  2462  0537  0008               	return
  2463  0538                     __end_of_clearTwelveHoursTimer:	
  2464  0538                     __ptext1392:	
  2465 ;; =============== function _clearOneHoursTimer ends ============
  2466                           
  2467                           
  2468 ;; *************** function _clearThreeHoursTimer *****************
  2469 ;; Defined at:
  2470 ;;		line 492 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;		None               void
  2477 ;; Registers used:
  2478 ;;		status,2
  2479 ;; Tracked objects:
  2480 ;;		On entry : 40/20
  2481 ;;		On exit  : 60/0
  2482 ;;		Unchanged: FFF9F/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0
  2487 ;;      Totals:         0       0       0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    3
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_resetAllTimer
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498  0538                     _clearThreeHoursTimer:	
  2499                           
  2500                           ;common.c: 493: uiSmallTimer = 0;
  2501                           
  2502                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2503  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0539  01C7               	clrf	_uiSmallTimer
  2505  053A  01C8               	clrf	_uiSmallTimer+1
  2506                           
  2507                           ;common.c: 494: bSmallTimerStartFlag = 0;
  2508  053B  01DB               	clrf	_bSmallTimerStartFlag
  2509  053C  0008               	return
  2510  053D                     __end_of_clearThreeHoursTimer:	
  2511  053D                     __ptext1391:	
  2512 ;; =============== function _clearTwentyMinTimer ends ============
  2513                           
  2514                           
  2515 ;; *************** function _clearOneHoursTimer *****************
  2516 ;; Defined at:
  2517 ;;		line 498 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		status,2
  2526 ;; Tracked objects:
  2527 ;;		On entry : 160/0
  2528 ;;		On exit  : 160/0
  2529 ;;		Unchanged: FFE9F/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    3
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_resetAllTimer
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544  053D                     _clearOneHoursTimer:	
  2545                           
  2546                           ;common.c: 499: uiOneHourTimer = 0;
  2547                           
  2548                           ; Regs used in _clearOneHoursTimer: [status,2]
  2549  053D  01C5               	clrf	_uiOneHourTimer
  2550  053E  01C6               	clrf	_uiOneHourTimer+1
  2551                           
  2552                           ;common.c: 500: bOneHourTimerStartFlag = 0;
  2553  053F  01DA               	clrf	_bOneHourTimerStartFlag
  2554  0540  0008               	return
  2555  0541                     __end_of_clearOneHoursTimer:	
  2556  0541                     __ptext1390:	
  2557 ;; =============== function _clock_config ends ============
  2558                           
  2559                           
  2560 ;; *************** function _clearTwentyMinTimer *****************
  2561 ;; Defined at:
  2562 ;;		line 505 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		status,2
  2571 ;; Tracked objects:
  2572 ;;		On entry : 60/0
  2573 ;;		On exit  : 60/0
  2574 ;;		Unchanged: FFF9F/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    3
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_resetAllTimer
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590  0541                     _clearTwentyMinTimer:	
  2591  0541                     l4017:	
  2592                           ; Regs used in _clearTwentyMinTimer: [status,2]
  2593                           
  2594                           
  2595                           ;common.c: 506: uiTwentyMinTimer = 0;
  2596  0541  01C9               	clrf	_uiTwentyMinTimer
  2597  0542  01CA               	clrf	_uiTwentyMinTimer+1
  2598                           
  2599                           ;common.c: 507: bTwentyMinStartFlag = 0;
  2600  0543  01DC               	clrf	_bTwentyMinStartFlag
  2601  0544  0008               	return
  2602  0545                     __end_of_clearTwentyMinTimer:	
  2603                           
  2604                           	psect	text1368
  2605  04DB                     __ptext1368:	
  2606 ;; =============== function _resetAllTimer ends ============
  2607                           
  2608                           
  2609 ;; *************** function _setPinInitVaule *****************
  2610 ;; Defined at:
  2611 ;;		line 272 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;		None               void
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0, pclath, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 17F/20
  2622 ;;		On exit  : 17F/0
  2623 ;;		Unchanged: FFE80/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    4
  2632 ;; This function calls:
  2633 ;;		_setPB3
  2634 ;;		_setPB4
  2635 ;;		_setPB5
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640  04DB                     _setPinInitVaule:	
  2641                           
  2642                           ;main.c: 274: setPB3(1);
  2643                           
  2644                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2645  04DB  3001               	movlw	1
  2646  04DC  24E3  118A         	fcall	_setPB3
  2647                           
  2648                           ;main.c: 275: setPB4(0);
  2649  04DE  3000               	movlw	0
  2650  04DF  24EE  118A         	fcall	_setPB4
  2651                           
  2652                           ;main.c: 276: setPB5(1);
  2653  04E1  3001               	movlw	1
  2654  04E2  2CF9               	ljmp	_setPB5
  2655  04E3                     __end_of_setPinInitVaule:	
  2656  04E3                     __ptext1402:	
  2657 ;; =============== function _initPB4 ends ============
  2658                           
  2659                           
  2660 ;; *************** function _setPB3 *****************
  2661 ;; Defined at:
  2662 ;;		line 133 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  bValue          1    wreg     unsigned char 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  bValue          1    0[BANK1 ] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;		None               void
  2669 ;; Registers used:
  2670 ;;		wreg
  2671 ;; Tracked objects:
  2672 ;;		On entry : 40/0
  2673 ;;		On exit  : 60/0
  2674 ;;		Unchanged: FFF9F/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2676 ;;      Params:         0       0       0       0       0
  2677 ;;      Locals:         0       0       1       0       0
  2678 ;;      Temps:          0       0       0       0       0
  2679 ;;      Totals:         0       0       1       0       0
  2680 ;;Total ram usage:        1 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    3
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_setPinInitVaule
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690  04E3                     _setPB3:	
  2691                           
  2692                           ; Regs used in _setPB3: [wreg]
  2693                           ;setPB3@bValue stored from wreg
  2694  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2695  04E4  00BD               	movwf	setPB3@bValue^(0+128)
  2696                           
  2697                           ;main.c: 134: if( bValue )
  2698  04E5  083D               	movf	setPB3@bValue^(0+128),w
  2699  04E6  1903               	btfsc	3,2
  2700  04E7  2CEB               	goto	l684
  2701                           
  2702                           ;main.c: 136: PB3 = 1;
  2703  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2704  04E9  1586               	bsf	6,3
  2705  04EA  0008               	return
  2706  04EB                     l684:	
  2707                           
  2708                           ;main.c: 140: else
  2709                           ;main.c: 142: PB3= 0;
  2710  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2711  04EC  1186               	bcf	6,3
  2712  04ED  0008               	return
  2713  04EE                     __end_of_setPB3:	
  2714  04EE                     __ptext1400:	
  2715 ;; =============== function _initPB5 ends ============
  2716                           
  2717                           
  2718 ;; *************** function _setPB4 *****************
  2719 ;; Defined at:
  2720 ;;		line 168 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  bValue          1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  bValue          1    0[BANK1 ] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;		None               void
  2727 ;; Registers used:
  2728 ;;		wreg
  2729 ;; Tracked objects:
  2730 ;;		On entry : 60/0
  2731 ;;		On exit  : 60/0
  2732 ;;		Unchanged: FFF9F/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       0       0       0       0
  2735 ;;      Locals:         0       0       1       0       0
  2736 ;;      Temps:          0       0       0       0       0
  2737 ;;      Totals:         0       0       1       0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    3
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_setPinInitVaule
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748  04EE                     _setPB4:	
  2749                           
  2750                           ; Regs used in _setPB4: [wreg]
  2751                           ;setPB4@bValue stored from wreg
  2752  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2753  04EF  00BD               	movwf	setPB4@bValue^(0+128)
  2754                           
  2755                           ;main.c: 169: if( bValue )
  2756  04F0  083D               	movf	setPB4@bValue^(0+128),w
  2757  04F1  1903               	btfsc	3,2
  2758  04F2  2CF6               	goto	l694
  2759                           
  2760                           ;main.c: 171: PB4 = 1;
  2761  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2762  04F4  1606               	bsf	6,4
  2763  04F5  0008               	return
  2764  04F6                     l694:	
  2765                           
  2766                           ;main.c: 175: else
  2767                           ;main.c: 177: PB4= 0;
  2768  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2769  04F7  1206               	bcf	6,4
  2770  04F8  0008               	return
  2771  04F9                     __end_of_setPB4:	
  2772  04F9                     __ptext1398:	
  2773 ;; =============== function _initPB2_AsHighResistence ends ============
  2774                           
  2775                           
  2776 ;; *************** function _setPB5 *****************
  2777 ;; Defined at:
  2778 ;;		line 202 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  bValue          1    wreg     unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  bValue          1    0[BANK1 ] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;		None               void
  2785 ;; Registers used:
  2786 ;;		wreg
  2787 ;; Tracked objects:
  2788 ;;		On entry : 60/0
  2789 ;;		On exit  : 60/0
  2790 ;;		Unchanged: FFF9F/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       0       0       0       0
  2793 ;;      Locals:         0       0       1       0       0
  2794 ;;      Temps:          0       0       0       0       0
  2795 ;;      Totals:         0       0       1       0       0
  2796 ;;Total ram usage:        1 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    3
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_setPinInitVaule
  2803 ;;		_main
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806  04F9                     _setPB5:	
  2807                           
  2808                           ; Regs used in _setPB5: [wreg]
  2809                           ;setPB5@bValue stored from wreg
  2810  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2811  04FA  00BD               	movwf	setPB5@bValue^(0+128)
  2812                           
  2813                           ;main.c: 203: if( bValue )
  2814  04FB  083D               	movf	setPB5@bValue^(0+128),w
  2815  04FC  1903               	btfsc	3,2
  2816  04FD  2D01               	goto	l704
  2817                           
  2818                           ;main.c: 205: PB5 = 1;
  2819  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2820  04FF  1686               	bsf	6,5
  2821  0500  0008               	return
  2822  0501                     l704:	
  2823                           
  2824                           ;main.c: 209: else
  2825                           ;main.c: 211: PB5= 0;
  2826  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0502  1286               	bcf	6,5
  2828  0503  0008               	return
  2829  0504                     __end_of_setPB5:	
  2830                           
  2831                           	psect	text1369
  2832  0504                     __ptext1369:	
  2833 ;; =============== function _setPinInitVaule ends ============
  2834                           
  2835                           
  2836 ;; *************** function _initPin *****************
  2837 ;; Defined at:
  2838 ;;		line 256 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;		None               void
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, pclath, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 17F/0
  2849 ;;		On exit  : 17F/20
  2850 ;;		Unchanged: FFE80/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0
  2855 ;;      Totals:         0       0       0       0       0
  2856 ;;Total ram usage:        0 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    4
  2859 ;; This function calls:
  2860 ;;		_initPB2_AsHighResistence
  2861 ;;		_initPB3
  2862 ;;		_initPB4
  2863 ;;		_initPB5
  2864 ;; This function is called by:
  2865 ;;		_main
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868  0504                     _initPin:	
  2869                           
  2870                           ;main.c: 258: initPB2_AsHighResistence();
  2871                           
  2872                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2873  0504  2517  118A         	fcall	_initPB2_AsHighResistence
  2874                           
  2875                           ;main.c: 260: initPB3(0);
  2876  0506  3000               	movlw	0
  2877  0507  250E  118A         	fcall	_initPB3
  2878                           
  2879                           ;main.c: 262: initPB4(0);
  2880  0509  3000               	movlw	0
  2881  050A  251C  118A         	fcall	_initPB4
  2882                           
  2883                           ;main.c: 264: initPB5(0);
  2884  050C  3000               	movlw	0
  2885  050D  2D24               	ljmp	_initPB5
  2886  050E                     __end_of_initPin:	
  2887  050E                     __ptext1403:	
  2888 ;; =============== function _setPB3 ends ============
  2889                           
  2890                           
  2891 ;; *************** function _initPB3 *****************
  2892 ;; Defined at:
  2893 ;;		line 116 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  bValue          1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  bValue          1    0[BANK1 ] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;		None               void
  2900 ;; Registers used:
  2901 ;;		wreg
  2902 ;; Tracked objects:
  2903 ;;		On entry : 17F/60
  2904 ;;		On exit  : 17F/20
  2905 ;;		Unchanged: FFE80/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         0       0       0       0       0
  2908 ;;      Locals:         0       0       1       0       0
  2909 ;;      Temps:          0       0       0       0       0
  2910 ;;      Totals:         0       0       1       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    3
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_initPin
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920  050E                     _initPB3:	
  2921                           
  2922                           ; Regs used in _initPB3: [wreg]
  2923                           ;initPB3@bValue stored from wreg
  2924  050E  1303               	bcf	3,6	;RP1=0, select bank1
  2925  050F  00BD               	movwf	initPB3@bValue^(0+128)
  2926                           
  2927                           ;main.c: 117: if( bValue )
  2928  0510  083D               	movf	initPB3@bValue^(0+128),w
  2929  0511  1903               	btfsc	3,2
  2930  0512  2D15               	goto	l679
  2931                           
  2932                           ;main.c: 119: TRISB3 = 1;
  2933  0513  1586               	bsf	6,3
  2934  0514  0008               	return
  2935  0515                     l679:	
  2936                           
  2937                           ;main.c: 123: else
  2938                           ;main.c: 125: TRISB3 = 0;
  2939  0515  1186               	bcf	6,3
  2940  0516  0008               	return
  2941  0517                     __end_of_initPB3:	
  2942  0517                     __ptext1397:	
  2943 ;; =============== function _pwm_start ends ============
  2944                           
  2945                           
  2946 ;; *************** function _initPB2_AsHighResistence *****************
  2947 ;; Defined at:
  2948 ;;		line 219 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;		None               void
  2955 ;; Registers used:
  2956 ;;		None
  2957 ;; Tracked objects:
  2958 ;;		On entry : 17F/0
  2959 ;;		On exit  : 17F/60
  2960 ;;		Unchanged: FFE80/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2962 ;;      Params:         0       0       0       0       0
  2963 ;;      Locals:         0       0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0
  2965 ;;      Totals:         0       0       0       0       0
  2966 ;;Total ram usage:        0 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    3
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_initPin
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975  0517                     _initPB2_AsHighResistence:	
  2976                           
  2977                           ;main.c: 221: PB2 = 1;
  2978                           
  2979                           ; Regs used in _initPB2_AsHighResistence: []
  2980  0517  1506               	bsf	6,2
  2981                           
  2982                           ;main.c: 222: PBOD2 = 1;
  2983  0518  1683               	bsf	3,5	;RP0=1, select bank3
  2984  0519  1703               	bsf	3,6	;RP1=1, select bank3
  2985  051A  1508               	bsf	8,2
  2986  051B  0008               	return
  2987  051C                     __end_of_initPB2_AsHighResistence:	
  2988  051C                     __ptext1401:	
  2989 ;; =============== function _setPB4 ends ============
  2990                           
  2991                           
  2992 ;; *************** function _initPB4 *****************
  2993 ;; Defined at:
  2994 ;;		line 151 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  bValue          1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  bValue          1    0[BANK1 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;		None               void
  3001 ;; Registers used:
  3002 ;;		wreg
  3003 ;; Tracked objects:
  3004 ;;		On entry : 17F/20
  3005 ;;		On exit  : 17F/20
  3006 ;;		Unchanged: FFE80/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       0       0       0       0
  3009 ;;      Locals:         0       0       1       0       0
  3010 ;;      Temps:          0       0       0       0       0
  3011 ;;      Totals:         0       0       1       0       0
  3012 ;;Total ram usage:        1 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    3
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_initPin
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021  051C                     _initPB4:	
  3022                           
  3023                           ; Regs used in _initPB4: [wreg]
  3024                           ;initPB4@bValue stored from wreg
  3025  051C  00BD               	movwf	initPB4@bValue^(0+128)
  3026                           
  3027                           ;main.c: 152: if( bValue )
  3028  051D  083D               	movf	initPB4@bValue^(0+128),w
  3029  051E  1903               	btfsc	3,2
  3030  051F  2D22               	goto	l689
  3031                           
  3032                           ;main.c: 154: TRISB4 = 1;
  3033  0520  1606               	bsf	6,4
  3034  0521  0008               	return
  3035  0522                     l689:	
  3036                           
  3037                           ;main.c: 158: else
  3038                           ;main.c: 160: TRISB4= 0;
  3039  0522  1206               	bcf	6,4
  3040  0523  0008               	return
  3041  0524                     __end_of_initPB4:	
  3042  0524                     __ptext1399:	
  3043 ;; =============== function _setPB5 ends ============
  3044                           
  3045                           
  3046 ;; *************** function _initPB5 *****************
  3047 ;; Defined at:
  3048 ;;		line 185 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  bValue          1    wreg     unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  bValue          1    0[BANK1 ] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;		None               void
  3055 ;; Registers used:
  3056 ;;		wreg
  3057 ;; Tracked objects:
  3058 ;;		On entry : 17F/20
  3059 ;;		On exit  : 17F/20
  3060 ;;		Unchanged: FFE80/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       0       0       0       0
  3063 ;;      Locals:         0       0       1       0       0
  3064 ;;      Temps:          0       0       0       0       0
  3065 ;;      Totals:         0       0       1       0       0
  3066 ;;Total ram usage:        1 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    3
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_initPin
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075  0524                     _initPB5:	
  3076                           
  3077                           ; Regs used in _initPB5: [wreg]
  3078                           ;initPB5@bValue stored from wreg
  3079  0524  00BD               	movwf	initPB5@bValue^(0+128)
  3080                           
  3081                           ;main.c: 186: if( bValue )
  3082  0525  083D               	movf	initPB5@bValue^(0+128),w
  3083  0526  1903               	btfsc	3,2
  3084  0527  2D2A               	goto	l699
  3085                           
  3086                           ;main.c: 188: TRISB5 = 1;
  3087  0528  1686               	bsf	6,5
  3088  0529  0008               	return
  3089  052A                     l699:	
  3090                           
  3091                           ;main.c: 192: else
  3092                           ;main.c: 194: TRISB5= 0;
  3093  052A  1286               	bcf	6,5
  3094  052B  0008               	return
  3095  052C                     __end_of_initPB5:	
  3096                           
  3097                           	psect	text1374
  3098  0601                     __ptext1374:	
  3099 ;; =============== function _FilterCh13 ends ============
  3100                           
  3101                           
  3102 ;; *************** function _setWaitResetFlag *****************
  3103 ;; Defined at:
  3104 ;;		line 55 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  bValue          1    wreg     unsigned char 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  bValue          1    0[BANK1 ] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;		None               void
  3111 ;; Registers used:
  3112 ;;		wreg
  3113 ;; Tracked objects:
  3114 ;;		On entry : 60/0
  3115 ;;		On exit  : 60/0
  3116 ;;		Unchanged: FFF9F/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       0       0       0       0
  3119 ;;      Locals:         0       0       1       0       0
  3120 ;;      Temps:          0       0       0       0       0
  3121 ;;      Totals:         0       0       1       0       0
  3122 ;;Total ram usage:        1 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    3
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131  0601                     _setWaitResetFlag:	
  3132                           
  3133                           ; Regs used in _setWaitResetFlag: [wreg]
  3134                           ;setWaitResetFlag@bValue stored from wreg
  3135  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3136  0602  00BD               	movwf	setWaitResetFlag@bValue^(0+128)
  3137                           
  3138                           ;common.c: 56: bWaitResetFlag = bValue;
  3139  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0604  00DD               	movwf	_bWaitResetFlag
  3141  0605  0008               	return
  3142  0606                     __end_of_setWaitResetFlag:	
  3143                           
  3144                           	psect	text1375
  3145  05BB                     __ptext1375:	
  3146 ;; =============== function _setWaitResetFlag ends ============
  3147                           
  3148                           
  3149 ;; *************** function _isFinishedOneHoursTimer *****************
  3150 ;; Defined at:
  3151 ;;		line 608 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      unsigned char 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 160/20
  3162 ;;		On exit  : 160/0
  3163 ;;		Unchanged: FFE9F/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0
  3168 ;;      Totals:         0       0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    3
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178  05BB                     _isFinishedOneHoursTimer:	
  3179                           
  3180                           ;common.c: 609: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3181                           
  3182                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3183  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3184  05BC  0846               	movf	_uiOneHourTimer+1,w
  3185  05BD  0445               	iorwf	_uiOneHourTimer,w
  3186  05BE  1D03               	skipz
  3187  05BF  3400               	retlw	0
  3188  05C0  085A               	movf	_bOneHourTimerStartFlag,w
  3189  05C1  1903               	btfsc	3,2
  3190  05C2  3400               	retlw	0
  3191  05C3  3001               	movlw	1
  3192                           
  3193                           ;common.c: 610: {
  3194                           ;common.c: 611: bOneHourTimerStartFlag = 0;
  3195  05C4  01DA               	clrf	_bOneHourTimerStartFlag
  3196                           
  3197                           ;common.c: 612: return 1;
  3198  05C5  0008               	return
  3199  05C6                     __end_of_isFinishedOneHoursTimer:	
  3200                           ;common.c: 614: else
  3201                           ;common.c: 615: return 0;
  3202                           
  3203                           
  3204                           	psect	text1376
  3205  056F                     __ptext1376:	
  3206 ;; =============== function _isFinishedOneHoursTimer ends ============
  3207                           
  3208                           
  3209 ;; *************** function _startOneHoursTimer *****************
  3210 ;; Defined at:
  3211 ;;		line 525 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 60/20
  3222 ;;		On exit  : 60/0
  3223 ;;		Unchanged: FFF9F/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       2       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         0       0       2       0       0
  3229 ;;Total ram usage:        2 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    3
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238  056F                     _startOneHoursTimer:	
  3239                           
  3240                           ;common.c: 526: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3241                           
  3242                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3243  056F  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0570  0846               	movf	_uiOneHourTimer+1,w
  3245  0571  0445               	iorwf	_uiOneHourTimer,w
  3246  0572  1D03               	skipz
  3247  0573  0008               	return
  3248  0574  08DA               	movf	_bOneHourTimerStartFlag,f
  3249  0575  1D03               	skipz
  3250  0576  0008               	return
  3251                           
  3252                           ;common.c: 527: {
  3253                           ;common.c: 528: uiOneHourTimer = uiSetTime;
  3254  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3255  0578  083E               	movf	(startOneHoursTimer@uiSetTime+1)^(0+128),w
  3256  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3257  057A  00C6               	movwf	_uiOneHourTimer+1
  3258  057B  1683               	bsf	3,5	;RP0=1, select bank1
  3259  057C  083D               	movf	startOneHoursTimer@uiSetTime^(0+128),w
  3260  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3261  057E  00C5               	movwf	_uiOneHourTimer
  3262                           
  3263                           ;common.c: 529: bOneHourTimerStartFlag = 1;
  3264  057F  01DA               	clrf	_bOneHourTimerStartFlag
  3265  0580  0ADA               	incf	_bOneHourTimerStartFlag,f
  3266  0581  0008               	return
  3267  0582                     __end_of_startOneHoursTimer:	
  3268                           
  3269                           	psect	text1377
  3270  05C6                     __ptext1377:	
  3271 ;; =============== function _startOneHoursTimer ends ============
  3272                           
  3273                           
  3274 ;; *************** function _isFinishedThreeHoursTimer *****************
  3275 ;; Defined at:
  3276 ;;		line 595 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0
  3285 ;; Tracked objects:
  3286 ;;		On entry : 40/20
  3287 ;;		On exit  : 60/0
  3288 ;;		Unchanged: FFF9F/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    3
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303  05C6                     _isFinishedThreeHoursTimer:	
  3304                           
  3305                           ;common.c: 596: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3306                           
  3307                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3308  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3309  05C7  0848               	movf	_uiSmallTimer+1,w
  3310  05C8  0447               	iorwf	_uiSmallTimer,w
  3311  05C9  1D03               	skipz
  3312  05CA  3400               	retlw	0
  3313  05CB  085B               	movf	_bSmallTimerStartFlag,w
  3314  05CC  1903               	btfsc	3,2
  3315  05CD  3400               	retlw	0
  3316  05CE  3001               	movlw	1
  3317                           
  3318                           ;common.c: 597: {
  3319                           ;common.c: 598: bSmallTimerStartFlag = 0;
  3320  05CF  01DB               	clrf	_bSmallTimerStartFlag
  3321                           
  3322                           ;common.c: 599: return 1;
  3323  05D0  0008               	return
  3324  05D1                     __end_of_isFinishedThreeHoursTimer:	
  3325                           ;common.c: 601: else
  3326                           ;common.c: 602: return 0;
  3327                           
  3328                           
  3329                           	psect	text1378
  3330  0582                     __ptext1378:	
  3331 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3332                           
  3333                           
  3334 ;; *************** function _startThreeHoursTimer *****************
  3335 ;; Defined at:
  3336 ;;		line 512 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;		None               void
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 60/20
  3347 ;;		On exit  : 60/0
  3348 ;;		Unchanged: FFF9F/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       0       2       0       0
  3351 ;;      Locals:         0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0
  3353 ;;      Totals:         0       0       2       0       0
  3354 ;;Total ram usage:        2 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    3
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363  0582                     _startThreeHoursTimer:	
  3364                           
  3365                           ;common.c: 513: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3366                           
  3367                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3368  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0583  0848               	movf	_uiSmallTimer+1,w
  3370  0584  0447               	iorwf	_uiSmallTimer,w
  3371  0585  1D03               	skipz
  3372  0586  0008               	return
  3373  0587  08DB               	movf	_bSmallTimerStartFlag,f
  3374  0588  1D03               	skipz
  3375  0589  0008               	return
  3376                           
  3377                           ;common.c: 514: {
  3378                           ;common.c: 515: uiSmallTimer = uiSetTime;
  3379  058A  1683               	bsf	3,5	;RP0=1, select bank1
  3380  058B  083E               	movf	(startThreeHoursTimer@uiSetTime+1)^(0+128),w
  3381  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3382  058D  00C8               	movwf	_uiSmallTimer+1
  3383  058E  1683               	bsf	3,5	;RP0=1, select bank1
  3384  058F  083D               	movf	startThreeHoursTimer@uiSetTime^(0+128),w
  3385  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0591  00C7               	movwf	_uiSmallTimer
  3387                           
  3388                           ;common.c: 516: bSmallTimerStartFlag = 1;
  3389  0592  01DB               	clrf	_bSmallTimerStartFlag
  3390  0593  0ADB               	incf	_bSmallTimerStartFlag,f
  3391  0594  0008               	return
  3392  0595                     __end_of_startThreeHoursTimer:	
  3393                           
  3394                           	psect	text1379
  3395  05D1                     __ptext1379:	
  3396 ;; =============== function _startThreeHoursTimer ends ============
  3397                           
  3398                           
  3399 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3400 ;; Defined at:
  3401 ;;		line 584 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      unsigned char 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 40/20
  3412 ;;		On exit  : 60/0
  3413 ;;		Unchanged: FFF9F/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3415 ;;      Params:         0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    3
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428  05D1                     _isFinishedTwelveHoursTimer:	
  3429                           
  3430                           ;common.c: 585: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3431                           
  3432                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3433  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3434  05D2  0844               	movf	_uiBigTimer+1,w
  3435  05D3  0443               	iorwf	_uiBigTimer,w
  3436  05D4  1D03               	skipz
  3437  05D5  3400               	retlw	0
  3438  05D6  0859               	movf	_bBigTimerStartFlag,w
  3439  05D7  1903               	btfsc	3,2
  3440  05D8  3400               	retlw	0
  3441  05D9  3001               	movlw	1
  3442                           
  3443                           ;common.c: 586: {
  3444                           ;common.c: 587: bBigTimerStartFlag = 0;
  3445  05DA  01D9               	clrf	_bBigTimerStartFlag
  3446                           
  3447                           ;common.c: 588: return 1;
  3448  05DB  0008               	return
  3449  05DC                     __end_of_isFinishedTwelveHoursTimer:	
  3450                           ;common.c: 590: else
  3451                           ;common.c: 591: return 0;
  3452                           
  3453                           
  3454                           	psect	text1380
  3455  0595                     __ptext1380:	
  3456 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3457                           
  3458                           
  3459 ;; *************** function _startTwelveHourTimer *****************
  3460 ;; Defined at:
  3461 ;;		line 471 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 60/20
  3472 ;;		On exit  : 60/0
  3473 ;;		Unchanged: FFF9F/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3475 ;;      Params:         0       0       2       0       0
  3476 ;;      Locals:         0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0
  3478 ;;      Totals:         0       0       2       0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    3
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488  0595                     _startTwelveHourTimer:	
  3489                           
  3490                           ;common.c: 472: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3491                           
  3492                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3493  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0596  0844               	movf	_uiBigTimer+1,w
  3495  0597  0443               	iorwf	_uiBigTimer,w
  3496  0598  1D03               	skipz
  3497  0599  0008               	return
  3498  059A  08D9               	movf	_bBigTimerStartFlag,f
  3499  059B  1D03               	skipz
  3500  059C  0008               	return
  3501                           
  3502                           ;common.c: 473: {
  3503                           ;common.c: 474: uiBigTimer = uiSetTime;
  3504  059D  1683               	bsf	3,5	;RP0=1, select bank1
  3505  059E  083E               	movf	(startTwelveHourTimer@uiSetTime+1)^(0+128),w
  3506  059F  1283               	bcf	3,5	;RP0=0, select bank0
  3507  05A0  00C4               	movwf	_uiBigTimer+1
  3508  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  3509  05A2  083D               	movf	startTwelveHourTimer@uiSetTime^(0+128),w
  3510  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3511  05A4  00C3               	movwf	_uiBigTimer
  3512                           
  3513                           ;common.c: 475: bBigTimerStartFlag = 1;
  3514  05A5  01D9               	clrf	_bBigTimerStartFlag
  3515  05A6  0AD9               	incf	_bBigTimerStartFlag,f
  3516  05A7  0008               	return
  3517  05A8                     __end_of_startTwelveHourTimer:	
  3518                           
  3519                           	psect	text1381
  3520  05DC                     __ptext1381:	
  3521 ;; =============== function _startTwelveHourTimer ends ============
  3522                           
  3523                           
  3524 ;; *************** function _isFinishedTwentyMinTimer *****************
  3525 ;; Defined at:
  3526 ;;		line 560 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 40/20
  3537 ;;		On exit  : 60/0
  3538 ;;		Unchanged: FFF9F/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3540 ;;      Params:         0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0
  3543 ;;      Totals:         0       0       0       0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    3
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553  05DC                     _isFinishedTwentyMinTimer:	
  3554                           
  3555                           ;common.c: 561: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3556                           
  3557                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3558  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3559  05DD  084A               	movf	_uiTwentyMinTimer+1,w
  3560  05DE  0449               	iorwf	_uiTwentyMinTimer,w
  3561  05DF  1D03               	skipz
  3562  05E0  3400               	retlw	0
  3563  05E1  085C               	movf	_bTwentyMinStartFlag,w
  3564  05E2  1903               	btfsc	3,2
  3565  05E3  3400               	retlw	0
  3566  05E4  3001               	movlw	1
  3567                           
  3568                           ;common.c: 562: {
  3569                           ;common.c: 563: bTwentyMinStartFlag = 0;
  3570  05E5  01DC               	clrf	_bTwentyMinStartFlag
  3571                           
  3572                           ;common.c: 564: return 1;
  3573  05E6  0008               	return
  3574  05E7                     __end_of_isFinishedTwentyMinTimer:	
  3575                           ;common.c: 566: else
  3576                           ;common.c: 567: return 0;
  3577                           
  3578                           
  3579                           	psect	text1382
  3580  0611                     __ptext1382:	
  3581 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3582                           
  3583                           
  3584 ;; *************** function _clrSampeTime *****************
  3585 ;; Defined at:
  3586 ;;		line 630 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;		None               void
  3593 ;; Registers used:
  3594 ;;		status,2
  3595 ;; Tracked objects:
  3596 ;;		On entry : 60/0
  3597 ;;		On exit  : 60/0
  3598 ;;		Unchanged: FFF9F/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    3
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613  0611                     _clrSampeTime:	
  3614                           
  3615                           ;common.c: 631: timer.timer10msStopWatch = 0;
  3616                           
  3617                           ; Regs used in _clrSampeTime: [status,2]
  3618  0611  01DF               	clrf	_timer
  3619  0612  0008               	return
  3620  0613                     __end_of_clrSampeTime:	
  3621                           
  3622                           	psect	text1383
  3623  0606                     __ptext1383:	
  3624 ;; =============== function _clrSampeTime ends ============
  3625                           
  3626                           
  3627 ;; *************** function _isPermitSampleTime *****************
  3628 ;; Defined at:
  3629 ;;		line 620 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      unsigned char 
  3636 ;; Registers used:
  3637 ;;		wreg
  3638 ;; Tracked objects:
  3639 ;;		On entry : 60/0
  3640 ;;		On exit  : 60/0
  3641 ;;		Unchanged: FFF9F/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    3
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656  0606                     _isPermitSampleTime:	
  3657                           
  3658                           ;common.c: 621: if(timer.timer10msStopWatch >= 1)
  3659                           
  3660                           ; Regs used in _isPermitSampleTime: [wreg]
  3661  0606  085F               	movf	_timer,w
  3662  0607  1D03               	skipz
  3663                           
  3664                           ;common.c: 622: {
  3665                           ;common.c: 623: return 1;
  3666  0608  3401               	retlw	1
  3667                           
  3668                           ;common.c: 625: else
  3669                           ;common.c: 626: return 0;
  3670  0609  3400               	retlw	0
  3671  060A                     __end_of_isPermitSampleTime:	
  3672                           
  3673                           	psect	text1385
  3674  05A8                     __ptext1385:	
  3675 ;; =============== function _adc_start ends ============
  3676                           
  3677                           
  3678 ;; *************** function _startTwentyMinTimer *****************
  3679 ;; Defined at:
  3680 ;;		line 550 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  uiSetValue      2    0[BANK1 ] unsigned int 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;		None               void
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 17F/20
  3691 ;;		On exit  : 17F/0
  3692 ;;		Unchanged: FFE80/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       0       2       0       0
  3695 ;;      Locals:         0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0
  3697 ;;      Totals:         0       0       2       0       0
  3698 ;;Total ram usage:        2 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707  05A8                     _startTwentyMinTimer:	
  3708                           
  3709                           ;common.c: 551: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3710                           
  3711                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3712  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3713  05A9  084A               	movf	_uiTwentyMinTimer+1,w
  3714  05AA  0449               	iorwf	_uiTwentyMinTimer,w
  3715  05AB  1D03               	skipz
  3716  05AC  0008               	return
  3717  05AD  08DC               	movf	_bTwentyMinStartFlag,f
  3718  05AE  1D03               	skipz
  3719  05AF  0008               	return
  3720                           
  3721                           ;common.c: 552: {
  3722                           ;common.c: 553: uiTwentyMinTimer = uiSetValue;
  3723  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3724  05B1  083E               	movf	(startTwentyMinTimer@uiSetValue+1)^(0+128),w
  3725  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3726  05B3  00CA               	movwf	_uiTwentyMinTimer+1
  3727  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  3728  05B5  083D               	movf	startTwentyMinTimer@uiSetValue^(0+128),w
  3729  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3730  05B7  00C9               	movwf	_uiTwentyMinTimer
  3731                           
  3732                           ;common.c: 554: bTwentyMinStartFlag = 1;
  3733  05B8  01DC               	clrf	_bTwentyMinStartFlag
  3734  05B9  0ADC               	incf	_bTwentyMinStartFlag,f
  3735  05BA  0008               	return
  3736  05BB                     __end_of_startTwentyMinTimer:	
  3737                           
  3738                           	psect	text1387
  3739  060E                     __ptext1387:	
  3740 ;; =============== function _adc_test_init ends ============
  3741                           
  3742                           
  3743 ;; *************** function _timer1_interrupt_config *****************
  3744 ;; Defined at:
  3745 ;;		line 360 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;		None               void
  3752 ;; Registers used:
  3753 ;;		None
  3754 ;; Tracked objects:
  3755 ;;		On entry : 17F/20
  3756 ;;		On exit  : 17F/20
  3757 ;;		Unchanged: FFE80/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0
  3762 ;;      Totals:         0       0       0       0       0
  3763 ;;Total ram usage:        0 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    3
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772  060E                     _timer1_interrupt_config:	
  3773                           
  3774                           ;common.c: 361: GIE = 1;
  3775                           
  3776                           ; Regs used in _timer1_interrupt_config: []
  3777  060E  178B               	bsf	11,7
  3778                           
  3779                           ;common.c: 362: PEIE = 1;
  3780  060F  170B               	bsf	11,6
  3781  0610  0008               	return
  3782  0611                     __end_of_timer1_interrupt_config:	
  3783                           
  3784                           	psect	text1388
  3785  05E7                     __ptext1388:	
  3786 ;; =============== function _timer1_interrupt_config ends ============
  3787                           
  3788                           
  3789 ;; *************** function _timer1_config *****************
  3790 ;; Defined at:
  3791 ;;		line 348 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;		None               void
  3798 ;; Registers used:
  3799 ;;		wreg
  3800 ;; Tracked objects:
  3801 ;;		On entry : 17F/40
  3802 ;;		On exit  : 17F/20
  3803 ;;		Unchanged: FFE80/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0
  3808 ;;      Totals:         0       0       0       0       0
  3809 ;;Total ram usage:        0 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    3
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818  05E7                     _timer1_config:	
  3819                           
  3820                           ;common.c: 350: TMR1H=0xCF;
  3821                           
  3822                           ; Regs used in _timer1_config: [wreg]
  3823  05E7  30CF               	movlw	207
  3824  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  3825  05E9  008F               	movwf	15	;volatile
  3826                           
  3827                           ;common.c: 351: TMR1L=0x2C;
  3828  05EA  302C               	movlw	44
  3829  05EB  008E               	movwf	14	;volatile
  3830                           
  3831                           ;common.c: 352: T1CON=0xE1;
  3832  05EC  30E1               	movlw	225
  3833  05ED  0090               	movwf	16	;volatile
  3834                           
  3835                           ;common.c: 353: TMR1IE=1;
  3836  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3837  05EF  140C               	bsf	12,0
  3838  05F0  0008               	return
  3839  05F1                     __end_of_timer1_config:	
  3840                           
  3841                           	psect	text1389
  3842  05F9                     __ptext1389:	
  3843 ;; =============== function _timer1_config ends ============
  3844                           
  3845                           
  3846 ;; *************** function _clock_config *****************
  3847 ;; Defined at:
  3848 ;;		line 340 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg, status,2
  3857 ;; Tracked objects:
  3858 ;;		On entry : 17F/20
  3859 ;;		On exit  : 17F/40
  3860 ;;		Unchanged: FFE80/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    3
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_main
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875  05F9                     _clock_config:	
  3876                           
  3877                           ;common.c: 342: CLKPR = 0x80;
  3878                           
  3879                           ; Regs used in _clock_config: [wreg+status,2]
  3880  05F9  3080               	movlw	128
  3881  05FA  1283               	bcf	3,5	;RP0=0, select bank2
  3882  05FB  1703               	bsf	3,6	;RP1=1, select bank2
  3883  05FC  0088               	movwf	8	;volatile
  3884                           
  3885                           ;common.c: 343: CLKPR = 0x00;
  3886  05FD  0188               	clrf	8	;volatile
  3887  05FE                     l1569:	
  3888                           ;common.c: 344: while(CLKPCE);
  3889                           
  3890  05FE  1F88               	btfss	8,7
  3891  05FF  0008               	return
  3892  0600  2DFE               	goto	l1569
  3893  0601                     __end_of_clock_config:	
  3894                           
  3895                           	psect	text1394
  3896  0613                     __ptext1394:	
  3897 ;; =============== function _clearTwelveHoursTimer ends ============
  3898                           
  3899                           
  3900 ;; *************** function _reset *****************
  3901 ;; Defined at:
  3902 ;;		line 294 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;		None               void
  3909 ;; Registers used:
  3910 ;;		None
  3911 ;; Tracked objects:
  3912 ;;		On entry : 60/20
  3913 ;;		On exit  : 60/20
  3914 ;;		Unchanged: FFFFFF9F/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    3
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929  0613                     _reset:	
  3930  0613                     l724:	
  3931                           ; Regs used in _reset: []
  3932                           ;main.c: 296: while(1);
  3933                           
  3934  0613  2E13               	goto	l724
  3935                           
  3936                           	psect	text1395
  3937  060A                     __ptext1395:	
  3938  060A                     __end_of_reset:	
  3939                           
  3940 ;; =============== function _reset ends ============
  3941 ;; *************** function _selectAdChannel *****************
  3942 ;; Defined at:
  3943 ;;		line 283 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;		None               void
  3950 ;; Registers used:
  3951 ;;		None
  3952 ;; Tracked objects:
  3953 ;;		On entry : 17F/0
  3954 ;;		On exit  : 17F/20
  3955 ;;		Unchanged: FFE80/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3957 ;;      Params:         0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    3
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970  060A                     _selectAdChannel:	
  3971                           
  3972                           ;main.c: 285: TRISB0 = 1;
  3973                           
  3974                           ; Regs used in _selectAdChannel: []
  3975  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3976  060B  1406               	bsf	6,0
  3977                           
  3978                           ;main.c: 286: TRISB1 = 1;
  3979  060C  1486               	bsf	6,1
  3980  060D  0008               	return
  3981  060E                     __end_of_selectAdChannel:	
  3982                           
  3983                           	psect	text1396
  3984  0545                     __ptext1396:	
  3985 ;; =============== function _selectAdChannel ends ============
  3986                           
  3987                           
  3988 ;; *************** function _pwm_start *****************
  3989 ;; Defined at:
  3990 ;;		line 231 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  ucPulseWidth    1    wreg     unsigned char 
  3993 ;;  ucPulseFrequ    1    0[BANK1 ] unsigned char 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  ucPulseWidth    1    1[BANK1 ] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;		None               void
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 60/20
  4002 ;;		On exit  : 60/0
  4003 ;;		Unchanged: FFF9F/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       1       0       0
  4006 ;;      Locals:         0       0       1       0       0
  4007 ;;      Temps:          0       0       0       0       0
  4008 ;;      Totals:         0       0       2       0       0
  4009 ;;Total ram usage:        2 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    3
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018  0545                     _pwm_start:	
  4019                           
  4020                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  4021                           ;pwm_start@ucPulseWidth stored from wreg
  4022  0545  00BE               	movwf	pwm_start@ucPulseWidth^(0+128)
  4023                           
  4024                           ;main.c: 233: CCP1CON&= 0xf0;
  4025  0546  30F0               	movlw	240
  4026  0547  1283               	bcf	3,5	;RP0=0, select bank0
  4027  0548  0597               	andwf	23,f	;volatile
  4028                           
  4029                           ;main.c: 235: T2CON=0x04;
  4030  0549  3004               	movlw	4
  4031  054A  0092               	movwf	18	;volatile
  4032                           
  4033                           ;main.c: 236: PR2 = ucPulseFrequency;
  4034  054B  1683               	bsf	3,5	;RP0=1, select bank1
  4035  054C  083D               	movf	pwm_start@ucPulseFrequency^(0+128),w
  4036  054D  0092               	movwf	18	;volatile
  4037                           
  4038                           ;main.c: 237: CCPR1L = ucPulseWidth;
  4039  054E  083E               	movf	pwm_start@ucPulseWidth^(0+128),w
  4040  054F  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0550  0095               	movwf	21	;volatile
  4042                           
  4043                           ;main.c: 238: CCP1CON=0x00;
  4044  0551  0197               	clrf	23	;volatile
  4045                           
  4046                           ;main.c: 240: TRISB2=0;
  4047  0552  1683               	bsf	3,5	;RP0=1, select bank1
  4048  0553  300C               	movlw	12
  4049  0554  1106               	bcf	6,2
  4050                           
  4051                           ;main.c: 241: PBOD2 = 0;
  4052  0555  1703               	bsf	3,6	;RP1=1, select bank3
  4053  0556  1108               	bcf	8,2
  4054                           
  4055                           ;main.c: 243: CCP1CON|= 0x0c;
  4056  0557  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0558  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0559  0497               	iorwf	23,f	;volatile
  4059  055A  0008               	return
  4060  055B                     __end_of_pwm_start:	
  4061                           
  4062                           	psect	text1404
  4063  0013                     __ptext1404:	
  4064 ;; =============== function _initPB3 ends ============
  4065                           
  4066                           
  4067 ;; *************** function _ISR *****************
  4068 ;; Defined at:
  4069 ;;		line 638 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 60/0
  4081 ;;		Unchanged: FFE00/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0
  4085 ;;      Temps:          0       4       0       0       0
  4086 ;;      Totals:         0       4       0       0       0
  4087 ;;Total ram usage:        4 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    2
  4090 ;; This function calls:
  4091 ;;		i1_setAD_ConvertFlag
  4092 ;;		_adc_get
  4093 ;;		_vPutSampleDataIntoTable
  4094 ;; This function is called by:
  4095 ;;		Interrupt level 1
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098  0013                     _ISR:	
  4099                           
  4100                           ;common.c: 639: static unsigned char ucTimer1sCnt = 0;
  4101                           ;common.c: 642: if(TMR1IF == 1)
  4102  0013  1C0C               	btfss	12,0
  4103  0014  284F               	goto	i1l3755
  4104  0015  3064               	movlw	100
  4105                           
  4106                           ;common.c: 643: {
  4107                           ;common.c: 644: TMR1IF = 0 ;
  4108  0016  100C               	bcf	12,0
  4109                           
  4110                           ;common.c: 645: timer.timer10msStopWatch++;
  4111  0017  0ADF               	incf	_timer,f
  4112                           
  4113                           ;common.c: 646: ucTimer1sCnt++;
  4114  0018  0AD7               	incf	ISR@ucTimer1sCnt,f
  4115                           
  4116                           ;common.c: 650: if(ucTimer1sCnt >= 100)
  4117  0019  0257               	subwf	ISR@ucTimer1sCnt,w
  4118  001A  1C03               	skipc
  4119  001B  284F               	goto	i1l3755
  4120                           
  4121                           ;common.c: 651: {
  4122                           ;common.c: 652: ucTimer1sCnt = 0;
  4123  001C  01D7               	clrf	ISR@ucTimer1sCnt
  4124                           
  4125                           ;common.c: 653: if(uiBigTimer > 0)
  4126  001D  0844               	movf	_uiBigTimer+1,w
  4127  001E  0443               	iorwf	_uiBigTimer,w
  4128  001F  1903               	skipnz
  4129  0020  2827               	goto	i1l1672
  4130                           
  4131                           ;common.c: 654: uiBigTimer--;
  4132  0021  3001               	movlw	1
  4133  0022  02C3               	subwf	_uiBigTimer,f
  4134  0023  3000               	movlw	0
  4135  0024  1C03               	skipc
  4136  0025  03C4               	decf	_uiBigTimer+1,f
  4137  0026  02C4               	subwf	_uiBigTimer+1,f
  4138  0027                     i1l1672:	
  4139                           
  4140                           ;common.c: 656: if(uiSmallTimer)
  4141  0027  0848               	movf	_uiSmallTimer+1,w
  4142  0028  0447               	iorwf	_uiSmallTimer,w
  4143  0029  1903               	skipnz
  4144  002A  2831               	goto	i1l1673
  4145                           
  4146                           ;common.c: 657: uiSmallTimer--;
  4147  002B  3001               	movlw	1
  4148  002C  02C7               	subwf	_uiSmallTimer,f
  4149  002D  3000               	movlw	0
  4150  002E  1C03               	skipc
  4151  002F  03C8               	decf	_uiSmallTimer+1,f
  4152  0030  02C8               	subwf	_uiSmallTimer+1,f
  4153  0031                     i1l1673:	
  4154                           
  4155                           ;common.c: 659: if(uiTwentySecondsTimer)
  4156  0031  084C               	movf	_uiTwentySecondsTimer+1,w
  4157  0032  044B               	iorwf	_uiTwentySecondsTimer,w
  4158  0033  1903               	skipnz
  4159  0034  283B               	goto	i1l1674
  4160                           
  4161                           ;common.c: 660: uiTwentySecondsTimer--;
  4162  0035  3001               	movlw	1
  4163  0036  02CB               	subwf	_uiTwentySecondsTimer,f
  4164  0037  3000               	movlw	0
  4165  0038  1C03               	skipc
  4166  0039  03CC               	decf	_uiTwentySecondsTimer+1,f
  4167  003A  02CC               	subwf	_uiTwentySecondsTimer+1,f
  4168  003B                     i1l1674:	
  4169                           
  4170                           ;common.c: 662: if(uiTwentyMinTimer)
  4171  003B  084A               	movf	_uiTwentyMinTimer+1,w
  4172  003C  0449               	iorwf	_uiTwentyMinTimer,w
  4173  003D  1903               	skipnz
  4174  003E  2845               	goto	i1l1675
  4175                           
  4176                           ;common.c: 663: uiTwentyMinTimer--;
  4177  003F  3001               	movlw	1
  4178  0040  02C9               	subwf	_uiTwentyMinTimer,f
  4179  0041  3000               	movlw	0
  4180  0042  1C03               	skipc
  4181  0043  03CA               	decf	_uiTwentyMinTimer+1,f
  4182  0044  02CA               	subwf	_uiTwentyMinTimer+1,f
  4183  0045                     i1l1675:	
  4184                           
  4185                           ;common.c: 665: if( uiOneHourTimer )
  4186  0045  0846               	movf	_uiOneHourTimer+1,w
  4187  0046  0445               	iorwf	_uiOneHourTimer,w
  4188  0047  1903               	skipnz
  4189  0048  284F               	goto	i1l3755
  4190                           
  4191                           ;common.c: 666: uiOneHourTimer--;
  4192  0049  3001               	movlw	1
  4193  004A  02C5               	subwf	_uiOneHourTimer,f
  4194  004B  3000               	movlw	0
  4195  004C  1C03               	skipc
  4196  004D  03C6               	decf	_uiOneHourTimer+1,f
  4197  004E  02C6               	subwf	_uiOneHourTimer+1,f
  4198  004F                     i1l3755:	
  4199                           
  4200                           ;common.c: 667: }
  4201                           ;common.c: 668: }
  4202                           ;common.c: 670: if(ADIF)
  4203  004F  1D0D               	btfss	13,2
  4204  0050  286A               	goto	i1l1680
  4205  0051  3001               	movlw	1
  4206                           
  4207                           ;common.c: 671: {
  4208                           ;common.c: 673: ADIF=0;
  4209  0052  110D               	bcf	13,2
  4210                           
  4211                           ;common.c: 674: setAD_ConvertFlag(1);
  4212  0053  2082  118A         	fcall	i1_setAD_ConvertFlag
  4213                           
  4214                           ;common.c: 676: if(sampleChannelSelect == 12)
  4215  0055  0863               	movf	_sampleChannelSelect,w
  4216  0056  3A0C               	xorlw	12
  4217  0057  1D03               	skipz
  4218  0058  2861               	goto	i1l3765
  4219                           
  4220                           ;common.c: 677: {
  4221                           ;common.c: 680: vPutSampleDataIntoTable(adc_get(),12);
  4222  0059  2077  118A         	fcall	_adc_get
  4223  005B  0871               	movf	?_adc_get+1,w
  4224  005C  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4225  005D  0870               	movf	?_adc_get,w
  4226  005E  00F6               	movwf	?_vPutSampleDataIntoTable
  4227  005F  300C               	movlw	12
  4228  0060  2868               	goto	L15
  4229  0061                     i1l3765:	
  4230                           ;common.c: 684: }
  4231                           
  4232                           
  4233                           ;common.c: 685: else
  4234                           ;common.c: 686: {
  4235                           ;common.c: 690: vPutSampleDataIntoTable(adc_get(),13);
  4236  0061  2077  118A         	fcall	_adc_get
  4237  0063  0871               	movf	?_adc_get+1,w
  4238  0064  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4239  0065  0870               	movf	?_adc_get,w
  4240  0066  00F6               	movwf	?_vPutSampleDataIntoTable
  4241  0067  300D               	movlw	13
  4242  0068                     L15:	
  4243  0068  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4244  0069  2085               	fcall	_vPutSampleDataIntoTable
  4245  006A                     i1l1680:	
  4246  006A  1283               	bcf	3,5	;RP0=0, select bank0
  4247  006B  1303               	bcf	3,6	;RP1=0, select bank0
  4248  006C  0842               	movf	??_ISR+3,w
  4249  006D  00FF               	movwf	127
  4250  006E  0841               	movf	??_ISR+2,w
  4251  006F  008A               	movwf	10
  4252  0070  0840               	movf	??_ISR+1,w
  4253  0071  0084               	movwf	4
  4254  0072  0E3F               	swapf	??_ISR^0,w
  4255  0073  0083               	movwf	3
  4256  0074  0EFE               	swapf	126,f
  4257  0075  0E7E               	swapf	126,w
  4258  0076  0009               	retfie
  4259  0077                     __end_of_ISR:	
  4260  0077                     __ptext1407:	
  4261 ;; =============== function i1_setAD_ConvertFlag ends ============
  4262                           
  4263                           
  4264 ;; *************** function _adc_get *****************
  4265 ;; Defined at:
  4266 ;;		line 106 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  val             2    2[COMMON] unsigned int 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2    0[COMMON] unsigned int 
  4273 ;; Registers used:
  4274 ;;		wreg
  4275 ;; Tracked objects:
  4276 ;;		On entry : 60/0
  4277 ;;		On exit  : 60/20
  4278 ;;		Unchanged: FFF9F/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4280 ;;      Params:         2       0       0       0       0
  4281 ;;      Locals:         2       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0
  4283 ;;      Totals:         4       0       0       0       0
  4284 ;;Total ram usage:        4 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_ISR
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292  0077                     _adc_get:	
  4293                           
  4294                           ;periph.c: 107: unsigned int val;
  4295                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4296                           
  4297                           ; Regs used in _adc_get: [wreg]
  4298  0077  081E               	movf	30,w	;volatile
  4299  0078  00F3               	movwf	adc_get@val+1
  4300  0079  01F2               	clrf	adc_get@val
  4301  007A  1683               	bsf	3,5	;RP0=1, select bank1
  4302  007B  081E               	movf	30,w	;volatile
  4303  007C  04F2               	iorwf	adc_get@val,f
  4304                           
  4305                           ;periph.c: 109: return val;
  4306  007D  0873               	movf	adc_get@val+1,w
  4307  007E  00F1               	movwf	?_adc_get+1
  4308  007F  0872               	movf	adc_get@val,w
  4309  0080  00F0               	movwf	?_adc_get
  4310  0081  0008               	return
  4311  0082                     __end_of_adc_get:	
  4312  0082                     __ptext1406:	
  4313 ;; =============== function _vPutSampleDataIntoTable ends ============
  4314                           
  4315                           
  4316 ;; *************** function i1_setAD_ConvertFlag *****************
  4317 ;; Defined at:
  4318 ;;		line 374 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  setAD_Conver    1    wreg     unsigned char 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;		None               void
  4325 ;; Registers used:
  4326 ;;		wreg
  4327 ;; Tracked objects:
  4328 ;;		On entry : 60/0
  4329 ;;		On exit  : 60/0
  4330 ;;		Unchanged: FFF9F/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4332 ;;      Params:         0       0       0       0       0
  4333 ;;      Locals:         1       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0
  4335 ;;      Totals:         1       0       0       0       0
  4336 ;;Total ram usage:        1 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_ISR
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344  0082                     i1_setAD_ConvertFlag:	
  4345                           
  4346                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4347                           ;i1setAD_ConvertFlag@flag stored from wreg
  4348  0082  00F0               	movwf	i1setAD_ConvertFlag@flag
  4349                           
  4350                           ;common.c: 375: adc_convert_flag = flag;
  4351  0083  00D8               	movwf	_adc_convert_flag
  4352  0084  0008               	return
  4353  0085                     __end_ofi1_setAD_ConvertFlag:	
  4354  0085                     __ptext1405:	
  4355 ;; =============== function _ISR ends ============
  4356                           
  4357                           
  4358 ;; *************** function _vPutSampleDataIntoTable *****************
  4359 ;; Defined at:
  4360 ;;		line 165 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4363 ;;  channel         1    8[COMMON] unsigned char 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  uiDeviationV    2    9[COMMON] unsigned int 
  4366 ;;  uiAbstractVa    2    0        unsigned int 
  4367 ;;  i               2   11[COMMON] int 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;		None               void
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 60/20
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: FFE00/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4377 ;;      Params:         3       0       0       0       0
  4378 ;;      Locals:         4       0       0       0       0
  4379 ;;      Temps:          0      16       0       0       0
  4380 ;;      Totals:         7      16       0       0       0
  4381 ;;Total ram usage:       23 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    1
  4384 ;; This function calls:
  4385 ;;		_Filter
  4386 ;;		_getWaitResetFlag
  4387 ;;		_setPWM_Width
  4388 ;; This function is called by:
  4389 ;;		_ISR
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392  0085                     _vPutSampleDataIntoTable:	
  4393                           
  4394                           ;common.c: 167: static unsigned char ucCh12Length = 0;
  4395                           ;common.c: 169: static unsigned char ucCh13Length = 0;
  4396                           ;common.c: 171: static unsigned char ucChannelFourteenthLength = 0;
  4397                           ;common.c: 172: static unsigned int uiCalWidthArrayNew = 0;
  4398                           ;common.c: 173: static unsigned int uiCalWidthArrayOld = 0;
  4399                           ;common.c: 175: static unsigned int uiCalWidthArray1 = 0;
  4400                           ;common.c: 176: static unsigned int uiCalWidthArray2 = 0;
  4401                           ;common.c: 177: static unsigned int uiCalWidthArray3 = 0;
  4402                           ;common.c: 178: static unsigned int uiCalWidthArray4 = 0;
  4403                           
  4404                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4405  0085  0878               	movf	vPutSampleDataIntoTable@channel,w
  4406  0086  3A0C               	xorlw	12
  4407  0087  1D03               	skipz
  4408  0088  2941               	goto	i1l3677
  4409                           
  4410                           ;common.c: 183: {
  4411                           ;common.c: 184: if(ucCh12Length < 3)
  4412  0089  3003               	movlw	3
  4413  008A  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4414  008B  1803               	skipnc
  4415  008C  293B               	goto	i1l3673
  4416                           
  4417                           ;common.c: 185: {
  4418                           ;common.c: 186: uiSampleCh12[ucCh12Length] = uiSampleData;
  4419  008D  1003               	clrc
  4420  008E  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4421  008F  3EAB               	addlw	_uiSampleCh12& (0+255)
  4422  0090  221B  118A         	fcall	PL2	;call to abstracted procedure
  4423                           
  4424                           ;common.c: 188: ucCh12Length++;
  4425  0092  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4426                           
  4427                           ;common.c: 190: if( 3 == ucCh12Length )
  4428  0093  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4429  0094  3A03               	xorlw	3
  4430  0095  1D03               	skipz
  4431  0096  0008               	return
  4432  0097  30AB               	movlw	_uiSampleCh12& (0+255)
  4433                           
  4434                           ;common.c: 191: {
  4435                           ;common.c: 192: ucCh12Length = 0;
  4436  0098  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4437                           
  4438                           ;common.c: 196: static unsigned char bInitArrayFlag = 0;
  4439                           ;common.c: 198: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4440                           ;common.c: 200: static unsigned char uiInitWidth = 75;
  4441                           ;common.c: 203: uiCalWidthArray1 = Filter(uiSampleCh12);
  4442  0099  2192  118A         	fcall	_Filter
  4443  009B  0871               	movf	?_Filter+1,w
  4444  009C  00CE               	movwf	vPutSampleDataIntoTable@uiCalWidthArray1+1
  4445  009D  0870               	movf	?_Filter,w
  4446  009E  00CD               	movwf	vPutSampleDataIntoTable@uiCalWidthArray1
  4447                           
  4448                           ;common.c: 205: if( 0 == ucInitFlag)
  4449  009F  08E2               	movf	vPutSampleDataIntoTable@ucInitFlag,f
  4450  00A0  1D03               	skipz
  4451  00A1  28B0               	goto	i1l3649
  4452                           
  4453                           ;common.c: 206: {
  4454                           ;common.c: 207: ucInitFlag = 1;
  4455  00A2  01E2               	clrf	vPutSampleDataIntoTable@ucInitFlag
  4456  00A3  0AE2               	incf	vPutSampleDataIntoTable@ucInitFlag,f
  4457                           
  4458                           ;common.c: 209: uiCalWidthArray2 = uiCalWidthArray1;
  4459  00A4  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4460  00A5  00D0               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2+1
  4461  00A6  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4462  00A7  00CF               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2
  4463                           
  4464                           ;common.c: 210: uiCalWidthArray3 = uiCalWidthArray1;
  4465  00A8  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4466  00A9  00D2               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3+1
  4467  00AA  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4468  00AB  00D1               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3
  4469                           
  4470                           ;common.c: 211: uiCalWidthArray4 = uiCalWidthArray1;
  4471  00AC  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4472  00AD  00D4               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4+1
  4473  00AE  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4474  00AF  00D3               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4
  4475  00B0                     i1l3649:	
  4476                           
  4477                           ;common.c: 228: uiDeviationValue = (uiCalWidthArray1 >> 2) + (uiCalWidthArray2 >> 2)
  4478                           ;common.c: 229: + (uiCalWidthArray3 >> 2) + (uiCalWidthArray4 >> 2) + uiCalWidthArray4 -
      +                           uiCalWidthArray3;
  4479  00B0  0854               	movf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4480  00B1  00B0               	movwf	??_vPutSampleDataIntoTable+1
  4481  00B2  0853               	movf	vPutSampleDataIntoTable@uiCalWidthArray4,w
  4482  00B3  00AF               	movwf	??_vPutSampleDataIntoTable
  4483  00B4  1003               	clrc
  4484  00B5  0CB0               	rrf	??_vPutSampleDataIntoTable+1,f
  4485  00B6  0CAF               	rrf	??_vPutSampleDataIntoTable,f
  4486  00B7  1003               	clrc
  4487  00B8  0CB0               	rrf	??_vPutSampleDataIntoTable+1,f
  4488  00B9  0CAF               	rrf	??_vPutSampleDataIntoTable,f
  4489  00BA  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4490  00BB  00B2               	movwf	??_vPutSampleDataIntoTable+3
  4491  00BC  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4492  00BD  00B1               	movwf	??_vPutSampleDataIntoTable+2
  4493  00BE  1003               	clrc
  4494  00BF  0CB2               	rrf	??_vPutSampleDataIntoTable+3,f
  4495  00C0  0CB1               	rrf	??_vPutSampleDataIntoTable+2,f
  4496  00C1  1003               	clrc
  4497  00C2  0CB2               	rrf	??_vPutSampleDataIntoTable+3,f
  4498  00C3  0CB1               	rrf	??_vPutSampleDataIntoTable+2,f
  4499  00C4  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray2+1,w
  4500  00C5  00B4               	movwf	??_vPutSampleDataIntoTable+5
  4501  00C6  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray2,w
  4502  00C7  00B3               	movwf	??_vPutSampleDataIntoTable+4
  4503  00C8  1003               	clrc
  4504  00C9  0CB4               	rrf	??_vPutSampleDataIntoTable+5,f
  4505  00CA  0CB3               	rrf	??_vPutSampleDataIntoTable+4,f
  4506  00CB  1003               	clrc
  4507  00CC  0CB4               	rrf	??_vPutSampleDataIntoTable+5,f
  4508  00CD  0CB3               	rrf	??_vPutSampleDataIntoTable+4,f
  4509  00CE  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4510  00CF  00B6               	movwf	??_vPutSampleDataIntoTable+7
  4511  00D0  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4512  00D1  00B5               	movwf	??_vPutSampleDataIntoTable+6
  4513  00D2  1003               	clrc
  4514  00D3  0CB6               	rrf	??_vPutSampleDataIntoTable+7,f
  4515  00D4  0CB5               	rrf	??_vPutSampleDataIntoTable+6,f
  4516  00D5  1003               	clrc
  4517  00D6  0CB6               	rrf	??_vPutSampleDataIntoTable+7,f
  4518  00D7  0CB5               	rrf	??_vPutSampleDataIntoTable+6,f
  4519  00D8  0833               	movf	??_vPutSampleDataIntoTable+4,w
  4520  00D9  0735               	addwf	??_vPutSampleDataIntoTable+6,w
  4521  00DA  00B7               	movwf	??_vPutSampleDataIntoTable+8
  4522  00DB  0834               	movf	??_vPutSampleDataIntoTable+5,w
  4523  00DC  1803               	skipnc
  4524  00DD  0A34               	incf	??_vPutSampleDataIntoTable+5,w
  4525  00DE  0736               	addwf	??_vPutSampleDataIntoTable+7,w
  4526  00DF  00B8               	movwf	??_vPutSampleDataIntoTable+9
  4527  00E0  0831               	movf	??_vPutSampleDataIntoTable+2,w
  4528  00E1  0737               	addwf	??_vPutSampleDataIntoTable+8,w
  4529  00E2  00B9               	movwf	??_vPutSampleDataIntoTable+10
  4530  00E3  0832               	movf	??_vPutSampleDataIntoTable+3,w
  4531  00E4  1803               	skipnc
  4532  00E5  0A32               	incf	??_vPutSampleDataIntoTable+3,w
  4533  00E6  0738               	addwf	??_vPutSampleDataIntoTable+9,w
  4534  00E7  00BA               	movwf	??_vPutSampleDataIntoTable+11
  4535  00E8  082F               	movf	??_vPutSampleDataIntoTable,w
  4536  00E9  0739               	addwf	??_vPutSampleDataIntoTable+10,w
  4537  00EA  00BB               	movwf	??_vPutSampleDataIntoTable+12
  4538  00EB  0830               	movf	??_vPutSampleDataIntoTable+1,w
  4539  00EC  1803               	skipnc
  4540  00ED  0A30               	incf	??_vPutSampleDataIntoTable+1,w
  4541  00EE  073A               	addwf	??_vPutSampleDataIntoTable+11,w
  4542  00EF  00BC               	movwf	??_vPutSampleDataIntoTable+13
  4543  00F0  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4544  00F1  023B               	subwf	??_vPutSampleDataIntoTable+12,w
  4545  00F2  00BD               	movwf	??_vPutSampleDataIntoTable+14
  4546  00F3  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4547  00F4  1C03               	skipc
  4548  00F5  0A52               	incf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4549  00F6  023C               	subwf	??_vPutSampleDataIntoTable+13,w
  4550  00F7  00BE               	movwf	??_vPutSampleDataIntoTable+15
  4551  00F8  0853               	movf	vPutSampleDataIntoTable@uiCalWidthArray4,w
  4552  00F9  073D               	addwf	??_vPutSampleDataIntoTable+14,w
  4553  00FA  00F9               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4554  00FB  0854               	movf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4555  00FC  1803               	skipnc
  4556  00FD  0A54               	incf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4557  00FE  073E               	addwf	??_vPutSampleDataIntoTable+15,w
  4558  00FF  00FA               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4559                           
  4560                           ;common.c: 233: if(uiCalWidthCnt>400)
  4561  0100  3001               	movlw	1
  4562  0101  0256               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt+1,w
  4563  0102  3091               	movlw	145
  4564  0103  1903               	skipnz
  4565  0104  0255               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4566  0105  1C03               	skipc
  4567  0106  290B               	goto	i1l1545
  4568                           
  4569                           ;common.c: 234: uiDeviationValue =400;
  4570  0107  3090               	movlw	144
  4571  0108  00F9               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4572  0109  3001               	movlw	1
  4573  010A  00FA               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4574  010B                     i1l1545:	
  4575                           
  4576                           ;common.c: 236: uiCalWidthArray4 = uiCalWidthArray3;
  4577  010B  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4578  010C  00D4               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4+1
  4579  010D  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4580  010E  00D3               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4
  4581                           
  4582                           ;common.c: 237: uiCalWidthArray3 = uiCalWidthArray2;
  4583  010F  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray2+1,w
  4584  0110  00D2               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3+1
  4585  0111  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray2,w
  4586  0112  00D1               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3
  4587                           
  4588                           ;common.c: 241: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4589  0113  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4590  0114  00D0               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2+1
  4591  0115  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4592  0116  00CF               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2
  4593                           
  4594                           ;common.c: 246: if(uiDeviationValue > (295))
  4595  0117  3001               	movlw	1
  4596  0118  027A               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4597  0119  3028               	movlw	40
  4598  011A  1903               	skipnz
  4599  011B  0279               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4600  011C  1C03               	skipc
  4601  011D  2920               	goto	i1l3657
  4602                           
  4603                           ;common.c: 247: {
  4604                           ;common.c: 250: uiInitWidth++;
  4605  011E  0AE4               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4606                           
  4607                           ;common.c: 252: }
  4608  011F  2927               	goto	i1l3661
  4609  0120                     i1l3657:	
  4610                           
  4611                           ;common.c: 253: else if(uiDeviationValue < (295))
  4612  0120  3001               	movlw	1
  4613  0121  027A               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4614  0122  3027               	movlw	39
  4615  0123  1903               	skipnz
  4616  0124  0279               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4617  0125  1C03               	btfss	3,0
  4618                           
  4619                           ;common.c: 254: {
  4620                           ;common.c: 257: uiInitWidth--;
  4621  0126  03E4               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4622  0127                     i1l3661:	
  4623                           ;common.c: 259: }
  4624                           
  4625                           
  4626                           ;common.c: 263: if(uiInitWidth > 249)
  4627  0127  30FA               	movlw	250
  4628  0128  0264               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4629  0129  1C03               	skipc
  4630  012A  292D               	goto	i1l1550
  4631                           
  4632                           ;common.c: 264: uiInitWidth = 249;
  4633  012B  30F9               	movlw	249
  4634  012C  00E4               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4635  012D                     i1l1550:	
  4636                           
  4637                           ;common.c: 266: if(uiInitWidth < 75)
  4638  012D  304B               	movlw	75
  4639  012E  0264               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4640  012F  1803               	skipnc
  4641  0130  2933               	goto	i1l3667
  4642                           
  4643                           ;common.c: 267: uiInitWidth = 75;
  4644  0131  304B               	movlw	75
  4645  0132  00E4               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4646  0133                     i1l3667:	
  4647                           
  4648                           ;common.c: 61: return bWaitResetFlag;
  4649                           
  4650                           ; Regs used in _getWaitResetFlag: [wreg]
  4651                           
  4652                           ;common.c: 271: if( 1 == getWaitResetFlag())
  4653  0133  085D               	movf	_bWaitResetFlag,w
  4654  0134  3A01               	xorlw	1
  4655  0135  1D03               	skipz
  4656  0136  2939               	goto	i1l3671
  4657                           
  4658                           ;common.c: 272: {
  4659                           ;common.c: 274: uiInitWidth = 150;
  4660  0137  3096               	movlw	150
  4661  0138  00E4               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4662  0139                     i1l3671:	
  4663                           
  4664                           ;common.c: 275: }
  4665                           ;common.c: 276: setPWM_Width(uiInitWidth);
  4666  0139  0864               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4667  013A  2A18               	ljmp	_setPWM_Width
  4668  013B                     i1l3673:	
  4669                           
  4670                           ;common.c: 281: else
  4671                           ;common.c: 282: {
  4672                           ;common.c: 283: ucCh12Length = 0;
  4673  013B  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4674                           
  4675                           ;common.c: 285: uiSampleCh12[ucCh12Length] = uiSampleData;
  4676  013C  1003               	clrc
  4677  013D  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4678  013E  3EAB               	addlw	_uiSampleCh12& (0+255)
  4679  013F  221B               	fcall	PL2	;call to abstracted procedure
  4680  0140  0008               	return
  4681  0141                     i1l3677:	
  4682                           
  4683                           ;common.c: 288: else if(channel == 13)
  4684  0141  0878               	movf	vPutSampleDataIntoTable@channel,w
  4685  0142  3A0D               	xorlw	13
  4686  0143  1D03               	skipz
  4687  0144  2956               	goto	i1l3689
  4688                           
  4689                           ;common.c: 289: {
  4690                           ;common.c: 290: if(ucCh13Length < 3)
  4691  0145  3003               	movlw	3
  4692  0146  1283               	bcf	3,5	;RP0=0, select bank0
  4693  0147  0260               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4694  0148  1803               	skipnc
  4695  0149  2950               	goto	i1l3685
  4696                           
  4697                           ;common.c: 291: {
  4698                           ;common.c: 292: uiSampleCh13[ucCh13Length] = uiSampleData;
  4699  014A  1003               	clrc
  4700  014B  0D60               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4701  014C  3EB1               	addlw	_uiSampleCh13& (0+255)
  4702  014D  221B               	fcall	PL2	;call to abstracted procedure
  4703                           
  4704                           ;common.c: 294: ucCh13Length++;
  4705  014E  0AE0               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4706                           
  4707                           ;common.c: 295: }
  4708  014F  0008               	return
  4709  0150                     i1l3685:	
  4710                           
  4711                           ;common.c: 296: else
  4712                           ;common.c: 297: {
  4713                           ;common.c: 298: ucCh13Length = 0;
  4714  0150  01E0               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4715                           
  4716                           ;common.c: 300: uiSampleCh13[ucCh13Length] = uiSampleData;
  4717  0151  1003               	clrc
  4718  0152  0D60               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4719  0153  3EB1               	addlw	_uiSampleCh13& (0+255)
  4720  0154  221B               	fcall	PL2	;call to abstracted procedure
  4721  0155  0008               	return
  4722  0156                     i1l3689:	
  4723                           
  4724                           ;common.c: 303: else if(channel == 14)
  4725  0156  0878               	movf	vPutSampleDataIntoTable@channel,w
  4726  0157  3A0E               	xorlw	14
  4727  0158  1D03               	skipz
  4728  0159  296B               	goto	i1l3701
  4729                           
  4730                           ;common.c: 304: {
  4731                           ;common.c: 305: if(ucChannelFourteenthLength < 3)
  4732  015A  3003               	movlw	3
  4733  015B  1283               	bcf	3,5	;RP0=0, select bank0
  4734  015C  0261               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4735  015D  1803               	skipnc
  4736  015E  2965               	goto	i1l3697
  4737                           
  4738                           ;common.c: 306: {
  4739                           ;common.c: 307: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4740  015F  1003               	clrc
  4741  0160  0D61               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4742  0161  3EB7               	addlw	_uiSampleChannelFourteenth& (0+255)
  4743  0162  221B               	fcall	PL2	;call to abstracted procedure
  4744                           
  4745                           ;common.c: 309: ucChannelFourteenthLength++;
  4746  0163  0AE1               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4747                           
  4748                           ;common.c: 310: }
  4749  0164  0008               	return
  4750  0165                     i1l3697:	
  4751                           
  4752                           ;common.c: 311: else
  4753                           ;common.c: 312: {
  4754                           ;common.c: 313: ucChannelFourteenthLength = 0;
  4755  0165  01E1               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4756                           
  4757                           ;common.c: 315: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4758  0166  1003               	clrc
  4759  0167  0D61               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4760  0168  3EB1               	addlw	_uiSampleCh13& (0+255)
  4761  0169  221B               	fcall	PL2	;call to abstracted procedure
  4762  016A  0008               	return
  4763  016B                     i1l3701:	
  4764                           
  4765                           ;common.c: 318: else
  4766                           ;common.c: 319: {
  4767                           ;common.c: 320: ucCh12Length = 0;
  4768  016B  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4769                           
  4770                           ;common.c: 322: ucCh13Length = 0;
  4771  016C  1283               	bcf	3,5	;RP0=0, select bank0
  4772  016D  01E0               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4773                           
  4774                           ;common.c: 324: ucChannelFourteenthLength = 0;
  4775  016E  01E1               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4776                           
  4777                           ;common.c: 326: for(int i = 0;i < 3; i++)
  4778  016F  01FB               	clrf	vPutSampleDataIntoTable@i
  4779  0170  01FC               	clrf	vPutSampleDataIntoTable@i+1
  4780  0171                     i1l3707:	
  4781                           
  4782                           ;common.c: 327: {
  4783                           ;common.c: 328: uiSampleCh12[i] = 0;
  4784  0171  1003               	clrc
  4785  0172  0D7B               	rlf	vPutSampleDataIntoTable@i,w
  4786  0173  3EAB               	addlw	_uiSampleCh12& (0+255)
  4787  0174  0084               	movwf	4
  4788  0175  1383               	bcf	3,7	;select IRP bank1
  4789                           
  4790                           ;common.c: 330: uiSampleCh13[i] = 0;
  4791  0176  2239  118A         	fcall	PL10	;call to abstracted procedure
  4792  0178  3EB1               	addlw	_uiSampleCh13& (0+255)
  4793  0179  0084               	movwf	4
  4794                           
  4795                           ;common.c: 332: uiSampleChannelFourteenth[i] = 0;
  4796  017A  2239  118A         	fcall	PL10	;call to abstracted procedure
  4797  017C  3EB7               	addlw	_uiSampleChannelFourteenth& (0+255)
  4798  017D  0084               	movwf	4
  4799  017E  0180               	clrf	0
  4800  017F  0A84               	incf	4,f
  4801  0180  0180               	clrf	0
  4802  0181  0AFB               	incf	vPutSampleDataIntoTable@i,f
  4803  0182  1903               	skipnz
  4804  0183  0AFC               	incf	vPutSampleDataIntoTable@i+1,f
  4805  0184  087C               	movf	vPutSampleDataIntoTable@i+1,w
  4806  0185  3A80               	xorlw	128
  4807  0186  00FF               	movwf	127
  4808  0187  3080               	movlw	128
  4809  0188  027F               	subwf	127,w
  4810  0189  1D03               	skipz
  4811  018A  298D               	goto	u132_25
  4812  018B  3003               	movlw	3
  4813  018C  027B               	subwf	vPutSampleDataIntoTable@i,w
  4814  018D                     u132_25:	
  4815  018D  1803               	btfsc	3,0
  4816  018E  0008               	return
  4817  018F  2971               	goto	i1l3707
  4818  0190                     __end_of_vPutSampleDataIntoTable:	
  4819  0190                     __ptext1410:	
  4820 ;; =============== function _setPWM_Width ends ============
  4821                           
  4822                           
  4823 ;; *************** function _getWaitResetFlag *****************
  4824 ;; Defined at:
  4825 ;;		line 60 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      unsigned char 
  4832 ;; Registers used:
  4833 ;;		wreg
  4834 ;; Tracked objects:
  4835 ;;		On entry : 160/0
  4836 ;;		On exit  : 160/0
  4837 ;;		Unchanged: FFE9F/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4839 ;;      Params:         0       0       0       0       0
  4840 ;;      Locals:         0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0
  4842 ;;      Totals:         0       0       0       0       0
  4843 ;;Total ram usage:        0 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_vPutSampleDataIntoTable
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851  0190                     _getWaitResetFlag:	
  4852                           
  4853                           ;common.c: 61: return bWaitResetFlag;
  4854                           
  4855                           ; Regs used in _getWaitResetFlag: [wreg]
  4856  0190  085D               	movf	_bWaitResetFlag,w
  4857  0191  0008               	return
  4858  0192                     __end_of_getWaitResetFlag:	
  4859  0192                     __ptext1408:	
  4860 ;; =============== function _adc_get ends ============
  4861                           
  4862                           
  4863 ;; *************** function _Filter *****************
  4864 ;; Defined at:
  4865 ;;		line 117 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  tmpValue        1    wreg     PTR unsigned int 
  4868 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  tmpValue        1    4[BANK0 ] PTR unsigned int 
  4871 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4872 ;;  cir             2   11[BANK0 ] int 
  4873 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  4874 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  4875 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  4876 ;;  i               1   14[BANK0 ] unsigned char 
  4877 ;;  j               1   13[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    0[COMMON] unsigned int 
  4880 ;; Registers used:
  4881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4882 ;; Tracked objects:
  4883 ;;		On entry : 160/20
  4884 ;;		On exit  : 160/0
  4885 ;;		Unchanged: FFE00/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         2       0       0       0       0
  4888 ;;      Locals:         0      15       0       0       0
  4889 ;;      Temps:          4       0       0       0       0
  4890 ;;      Totals:         6      15       0       0       0
  4891 ;;Total ram usage:       21 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_vPutSampleDataIntoTable
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899  0192                     _Filter:	
  4900                           
  4901                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4902                           ;Filter@tmpValue stored from wreg
  4903  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0193  00A4               	movwf	Filter@tmpValue
  4905  0194  01AD               	clrf	Filter@j
  4906                           
  4907                           ;common.c: 121: unsigned int filter_temp = 0, filter_sum = 0;
  4908  0195  01A0               	clrf	Filter@filter_temp
  4909  0196  01A1               	clrf	Filter@filter_temp+1
  4910  0197  01A2               	clrf	Filter@filter_sum
  4911  0198  01A3               	clrf	Filter@filter_sum+1
  4912                           
  4913                           ;common.c: 123: unsigned int filter_buf[3];
  4914                           ;common.c: 125: for(int cir = 0;cir < 3; cir++)
  4915  0199  01AB               	clrf	Filter@cir
  4916  019A  01AC               	clrf	Filter@cir+1
  4917  019B                     i1l3585:	
  4918                           
  4919                           ;common.c: 126: filter_buf[cir] = *tmpValue++;
  4920  019B  1283               	bcf	3,5	;RP0=0, select bank0
  4921  019C  1303               	bcf	3,6	;RP1=0, select bank0
  4922  019D  0824               	movf	Filter@tmpValue,w
  4923  019E  2223  118A         	fcall	PL3	;call to abstracted procedure
  4924  01A0  1003               	clrc
  4925  01A1  0D2B               	rlf	Filter@cir,w
  4926  01A2  222B  118A         	fcall	PL7	;call to abstracted procedure
  4927  01A4  0AA4               	incf	Filter@tmpValue,f
  4928  01A5  0AA4               	incf	Filter@tmpValue,f
  4929  01A6  0AAB               	incf	Filter@cir,f
  4930  01A7  1903               	skipnz
  4931  01A8  0AAC               	incf	Filter@cir+1,f
  4932  01A9  082C               	movf	Filter@cir+1,w
  4933  01AA  3A80               	xorlw	128
  4934  01AB  00FF               	movwf	127
  4935  01AC  3080               	movlw	128
  4936  01AD  027F               	subwf	127,w
  4937  01AE  1D03               	skipz
  4938  01AF  29B2               	goto	u113_25
  4939  01B0  3003               	movlw	3
  4940  01B1  022B               	subwf	Filter@cir,w
  4941  01B2                     u113_25:	
  4942  01B2  1C03               	skipc
  4943  01B3  299B               	goto	i1l3585
  4944                           
  4945                           ;common.c: 130: for(j = 0; j < 3 - 1; j++)
  4946  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  4947  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  4948  01B6  01AD               	clrf	Filter@j
  4949                           
  4950                           ;common.c: 131: {
  4951                           ;common.c: 132: for(i = 0; i < 3 - 1 - j; i++)
  4952  01B7  01AE               	clrf	Filter@i
  4953  01B8                     i1l3607:	
  4954  01B8  01F3               	clrf	??_Filter+1
  4955  01B9  082D               	movf	Filter@j,w
  4956  01BA  3C02               	sublw	2
  4957  01BB  00F2               	movwf	??_Filter
  4958  01BC  1C03               	skipc
  4959  01BD  03F3               	decf	??_Filter+1,f
  4960  01BE  0873               	movf	??_Filter+1,w
  4961  01BF  3A80               	xorlw	128
  4962  01C0  3C80               	sublw	128
  4963  01C1  1D03               	skipz
  4964  01C2  29C5               	goto	u115_25
  4965  01C3  0872               	movf	??_Filter,w
  4966  01C4  022E               	subwf	Filter@i,w
  4967  01C5                     u115_25:	
  4968  01C5  1803               	btfsc	3,0
  4969  01C6  29FA               	goto	i1l3609
  4970                           
  4971                           ;common.c: 133: {
  4972                           ;common.c: 134: if(filter_buf[i] > filter_buf[i + 1])
  4973  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4974  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4975  01C9  1003               	clrc
  4976  01CA  0D2E               	rlf	Filter@i,w
  4977  01CB  3E25               	addlw	Filter@filter_buf& (0+255)
  4978  01CC  2223  118A         	fcall	PL3	;call to abstracted procedure
  4979  01CE  2233  118A         	fcall	PL9	;call to abstracted procedure
  4980  01D0  0800               	movf	0,w
  4981  01D1  00F4               	movwf	??_Filter+2
  4982  01D2  0A84               	incf	4,f
  4983  01D3  0800               	movf	0,w
  4984  01D4  00F5               	movwf	??_Filter+3
  4985  01D5  0873               	movf	??_Filter+1,w
  4986  01D6  0275               	subwf	??_Filter+3,w
  4987  01D7  1D03               	skipz
  4988  01D8  29DB               	goto	u114_25
  4989  01D9  0872               	movf	??_Filter,w
  4990  01DA  0274               	subwf	??_Filter+2,w
  4991  01DB                     u114_25:	
  4992  01DB  1803               	skipnc
  4993  01DC  29F8               	goto	i1l3605
  4994                           
  4995                           ;common.c: 135: {
  4996                           ;common.c: 137: filter_temp = filter_buf[i];
  4997  01DD  1003               	clrc
  4998  01DE  0D2E               	rlf	Filter@i,w
  4999  01DF  3E25               	addlw	Filter@filter_buf& (0+255)
  5000  01E0  0084               	movwf	4
  5001  01E1  0800               	movf	0,w
  5002  01E2  00A0               	movwf	Filter@filter_temp
  5003  01E3  0A84               	incf	4,f
  5004  01E4  0800               	movf	0,w
  5005  01E5  00A1               	movwf	Filter@filter_temp+1
  5006                           
  5007                           ;common.c: 139: filter_buf[i] = filter_buf[i + 1];
  5008  01E6  2233  118A         	fcall	PL9	;call to abstracted procedure
  5009  01E8  0800               	movf	0,w
  5010  01E9  00F2               	movwf	??_Filter
  5011  01EA  0A84               	incf	4,f
  5012  01EB  0800               	movf	0,w
  5013  01EC  00F3               	movwf	??_Filter+1
  5014  01ED  1003               	clrc
  5015  01EE  0D2E               	rlf	Filter@i,w
  5016  01EF  222B  118A         	fcall	PL7	;call to abstracted procedure
  5017                           
  5018                           ;common.c: 141: filter_buf[i + 1] = filter_temp;
  5019  01F1  2233  118A         	fcall	PL9	;call to abstracted procedure
  5020  01F3  0820               	movf	Filter@filter_temp,w
  5021  01F4  0080               	movwf	0
  5022  01F5  0A84               	incf	4,f
  5023  01F6  0821               	movf	Filter@filter_temp+1,w
  5024  01F7  0080               	movwf	0
  5025  01F8                     i1l3605:	
  5026  01F8  0AAE               	incf	Filter@i,f
  5027  01F9  29B8               	goto	i1l3607
  5028  01FA                     i1l3609:	
  5029  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  5030  01FB  3002               	movlw	2
  5031  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  5032  01FD  0AAD               	incf	Filter@j,f
  5033  01FE  022D               	subwf	Filter@j,w
  5034                           
  5035                           ;common.c: 142: }
  5036                           ;common.c: 143: }
  5037                           ;common.c: 144: }
  5038                           ;common.c: 146: for(i = 1; i < 3 - 1; i++)
  5039  01FF  01AE               	clrf	Filter@i
  5040  0200  1C03               	skipc
  5041  0201  29B8               	goto	i1l3607
  5042  0202  0AAE               	incf	Filter@i,f
  5043                           
  5044                           ;common.c: 147: {
  5045                           ;common.c: 148: filter_sum += filter_buf[i];
  5046  0203  1003               	clrc
  5047  0204                     L16:	
  5048  0204  0D2E               	rlf	Filter@i,w
  5049  0205  3E25               	addlw	Filter@filter_buf& (0+255)
  5050  0206  2223  118A         	fcall	PL3	;call to abstracted procedure
  5051  0208  0872               	movf	??_Filter,w
  5052  0209  07A2               	addwf	Filter@filter_sum,f
  5053  020A  1803               	skipnc
  5054  020B  0AA3               	incf	Filter@filter_sum+1,f
  5055  020C  0873               	movf	??_Filter+1,w
  5056  020D  07A3               	addwf	Filter@filter_sum+1,f
  5057  020E  3002               	movlw	2
  5058  020F  0AAE               	incf	Filter@i,f
  5059  0210  022E               	subwf	Filter@i,w
  5060  0211  1C03               	skipc
  5061  0212  2A04               	goto	L16
  5062                           
  5063                           ;common.c: 149: }
  5064                           ;common.c: 152: return (filter_sum );
  5065  0213  0823               	movf	Filter@filter_sum+1,w
  5066  0214  00F1               	movwf	?_Filter+1
  5067  0215  0822               	movf	Filter@filter_sum,w
  5068  0216  00F0               	movwf	?_Filter
  5069  0217  0008               	return
  5070  0218                     __end_of_Filter:	
  5071  0218                     __ptext1409:	
  5072 ;; =============== function _Filter ends ============
  5073                           
  5074                           
  5075 ;; *************** function _setPWM_Width *****************
  5076 ;; Defined at:
  5077 ;;		line 65 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  ucWidth         1    wreg     unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  ucWidth         1    0[COMMON] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;		None               void
  5084 ;; Registers used:
  5085 ;;		wreg
  5086 ;; Tracked objects:
  5087 ;;		On entry : 160/0
  5088 ;;		On exit  : 160/0
  5089 ;;		Unchanged: FFE9F/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5091 ;;      Params:         0       0       0       0       0
  5092 ;;      Locals:         1       0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0
  5094 ;;      Totals:         1       0       0       0       0
  5095 ;;Total ram usage:        1 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_vPutSampleDataIntoTable
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103  0218                     _setPWM_Width:	
  5104                           
  5105                           ; Regs used in _setPWM_Width: [wreg]
  5106                           ;setPWM_Width@ucWidth stored from wreg
  5107  0218  00F0               	movwf	setPWM_Width@ucWidth
  5108                           
  5109                           ;common.c: 71: ucOldWidth = ucWidth;
  5110  0219  0095               	movwf	21	;volatile
  5111  021A  0008               	return
  5112  021B                     __end_of_setPWM_Width:	
  5113  021B                     PL2:	
  5114  021B  0084               	movwf	4
  5115  021C  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5116  021D  1383               	bcf	3,7	;select IRP bank1
  5117  021E  0080               	movwf	0
  5118  021F  0A84               	incf	4,f
  5119  0220  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5120  0221  0080               	movwf	0
  5121  0222  0008               	return
  5122  0223                     PL3:	
  5123  0223  0084               	movwf	4
  5124  0224  1383               	bcf	3,7	;select IRP bank0
  5125  0225  0800               	movf	0,w
  5126  0226  00F2               	movwf	??_Filter
  5127  0227  0A84               	incf	4,f
  5128  0228  0800               	movf	0,w
  5129  0229  00F3               	movwf	??_Filter+1
  5130  022A  0008               	return
  5131  022B                     PL7:	
  5132  022B  3E25               	addlw	Filter@filter_buf& (0+255)
  5133  022C  0084               	movwf	4
  5134  022D  0872               	movf	??_Filter,w
  5135  022E  0080               	movwf	0
  5136  022F  0A84               	incf	4,f
  5137  0230  0873               	movf	??_Filter+1,w
  5138  0231  0080               	movwf	0
  5139  0232  0008               	return
  5140  0233                     PL9:	
  5141  0233  1003               	clrc
  5142  0234  0D2E               	rlf	Filter@i,w
  5143  0235  3E02               	addlw	2
  5144  0236  3E25               	addlw	Filter@filter_buf& (0+255)
  5145  0237  0084               	movwf	4
  5146  0238  0008               	return
  5147  0239                     PL10:	
  5148  0239  0180               	clrf	0
  5149  023A  0A84               	incf	4,f
  5150  023B  0180               	clrf	0
  5151  023C  1003               	clrc
  5152  023D  0D7B               	rlf	vPutSampleDataIntoTable@i,w
  5153  023E  0008               	return
  5154                           
  5155                           	psect	intentry
  5156  0004                     __pintentry:	
  5157                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5158                           
  5159  0004                     interrupt_function:	
  5160  007E                     saved_w	set	btemp
  5161  0004  00FE               	movwf	btemp
  5162  0005  0E03               	swapf	3,w
  5163  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5164  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5165  0008  00BF               	movwf	??_ISR
  5166  0009  0804               	movf	4,w
  5167  000A  00C0               	movwf	??_ISR+1
  5168  000B  080A               	movf	10,w
  5169  000C  00C1               	movwf	??_ISR+2
  5170  000D  087F               	movf	btemp+1,w
  5171  000E  00C2               	movwf	??_ISR+3
  5172  000F  118A  2813         	ljmp	_ISR
  5173                           
  5174                           	psect	text1411
  5175  0000                     __ptext1411:	
  5176 ;; =============== function _getWaitResetFlag ends ============
  5177                           
  5178  007E                     btemp	set	126	;btemp
  5179  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Dec 04 21:50:08 2019

                                  ??_clock_config 00BD                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 00BD                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l704 0501  
                                             l712 0000                                               l721 0000  
                                             l730 0000                                               l715 0000  
                                             l724 0613                                               l709 0000  
                                             l718 0000                                               l736 03DF  
                                             l684 04EB                                               l694 04F6  
                                             l679 0515                                               l689 0522  
                                             l699 052A                                               _GIE 005F  
                                             _PB2 0032                                               _PB3 0033  
                                             _PB4 0034                                               _PB5 0035  
                                             _PR2 0092                                               _ISR 0013  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 00BF                                              ?_ISR 0070  
                            ??_startOneHoursTimer 00BF                                __size_of_AD_Sample 0014  
                                            l4001 0000                                              l4003 0000  
                                            l4011 0000                                              l4005 0000  
                                            l4013 0000                                              l4021 0000  
                                            l2333 0000                                              l1622 0000  
                                            l4007 0000                                              l4015 0000  
                                            l4023 0000                                              l2327 0000  
                                            l4031 0000                                              l4103 0000  
                                            l4111 0000                                              l1616 0000  
                                            l4009 0000                                              l1625 0000  
                                            l4017 0541                                              l4025 0000  
                                            l4033 0000                                              l4201 0000  
                                            l1619 0000                                              l4019 0000  
                                            l4027 0000                                              l4035 0000  
                                            l4051 0000                                              l4115 0000  
                                            l1475 0000                                              l4211 0000  
                                            l1572 0000                                              l4037 0000  
                                            l4029 0000                                              l4045 0000  
                                            l4061 0000                                              l4109 0000  
                                            l4117 0000                                              l4133 0000  
                                            l4141 0000                                              l1581 0000  
                                            l4205 0000                                              l4221 0000  
                                            l1590 0000                                              l1575 0000  
                                            l4039 0000                                              l4047 04D7  
                                            l4063 0000                                              l4127 0000  
                                            l4135 0000                                              l4151 0000  
                                            l4215 0000                                              l4207 0000  
                                            l4223 0000                                              l4231 0000  
                                            l4311 02C4                                              l4303 02BC  
                                            l1584 0000                                              l1569 05FE  
                                            l4049 0000                                              l1665 0000  
                                            l1497 0000                                              l4161 0000  
                                            l4153 0000                                              l4225 0000  
                                            l4233 0000                                              l4401 03A2  
                                            l4313 0000                                              l4305 02BD  
                                            l1578 0000                                              l4067 0000  
                                            l4091 0000                                              l4139 0000  
                                            l4163 0000                                              l4219 04B8  
                                            l4227 0000                                              l4403 03A3  
                                            l4331 02EA                                              l4323 02E2  
                                            l4315 02D0                                              l4251 0000  
                                            l4069 0000                                              l4085 0000  
                                            l4093 0000                                              l4181 040E  
                                            l4165 0000                                              l4229 0000  
                                            l4237 0000                                              l4245 0000  
                                            l4341 0000                                              l4333 0000  
                                            l4325 02E3                                              l4309 0000  
                                            l4261 03AE                                              l4253 0000  
                                            l4079 0000                                              l4087 0000  
                                            l4183 044A                                              l4159 03F0  
                                            l4407 03AA                                              l4343 0302  
                                            l4335 0000                                              l4263 0000  
                                            l4255 0000                                              l4193 0000  
                                            l4185 0000                                              l4409 0000  
                                            l4345 0000                                              l4337 0000  
                                            l4329 0000                                              l4281 0281  
                                            l4273 0000                                              l4265 0000  
                                            l4257 0000                                              l4249 0000  
                                            l4195 0000                                              l4179 0448  
                                            l4363 0000                                              l4355 0321  
                                            l4339 0000                                              l4291 0000  
                                            l4275 0274                                              l4259 0000  
                                            l4365 0000                                              l4357 0324  
                                            l4293 0000                                              l4285 0286  
                                            l4269 0269                                              l4391 038E  
                                            l4383 0369                                              l4367 0000  
                                            l4359 0326                                              l4295 02A8  
                                            l4287 028A                                              l4279 0280  
                                            l4393 0000                                              l4385 0000  
                                            l4377 0353                                              l4297 02AE  
                                            l4289 0000                                              l4395 0392  
                                            l4387 0383                                              l4379 0355  
                                            l4299 02B0                                              l4397 0000  
                                            l3971 0000                                              l3973 0000  
                                            l3981 0000                                              l3967 0000  
                                            l3975 0000                                              l3983 0000  
                                            l3991 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              l3969 0000  
                                            l3977 0000                                              l3985 0000  
                                            l3993 0000                                              l3979 0000  
                                            l3987 0000                                              l3995 0000  
                                            l3989 0000                                              l3997 0000  
                                            l3999 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 00BD                                              u2217 0260  
                                            u1915 0408                                              u1925 042F  
                                            u1935 041B                                              _PEIE 005E  
                            FilterCh13@filter_buf 00C8                              FilterCh13@filter_sum 00C6  
                                            _main 023F                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 00D2  
                      ??_isFinishedTwentyMinTimer 00BD                                             ??_ISR 003F  
                               ??_setPinInitVaule 00BE                        __end_of_isPermitSampleTime 060A  
                             _sampleChannelSelect 0063                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 0082  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 00BD  
                               ??_selectAdChannel 00BD                             FilterCh13@filter_temp 00C4  
                                      _FilterCh13 03E7                                   __end_of_initPB3 0517  
                                 __end_of_initPB4 0524                                   __end_of_initPB5 052C  
                         _vPutSampleDataIntoTable 0085                                   __end_of_initPin 050E  
                                           _reset 0613                                             _timer 005F  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh13Value 03E7  
                   __size_of_startTwelveHourTimer 0013                              __end_of_clrSampeTime 0613  
                                    __end_of_main 03E0                            __size_of_adc_test_init 001C  
                               __end_of_AD_Sample 04BB                                            ??_main 00D4  
                             setPWM_Width@ucWidth 0070                                     main@ucChValue 00D5  
                                   main@ucDelay1s 00A0                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 0601  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l1510 0000  
                                          i1l1550 012D                                            i1l2336 0000  
                                          i1l1545 010B                                            i1l1484 0000  
                                          u113_25 01B2                                            i1l1478 0000  
                                          i1l1584 0000                                            i1l1680 006A  
                                          i1l1672 0027                                            i1l1673 0031  
                                          i1l1674 003B                                            i1l3611 0000  
                                          i1l1675 0045                                            i1l3525 0000  
                                          i1l3621 0000                                            i1l3605 01F8  
                                          u114_25 01DB                                            i1l3701 016B  
                                          i1l3607 01B8                                            i1l3711 0000  
                                          i1l3529 0000                                            i1l3609 01FA  
                                          i1l3641 0000                                            i1l3633 0000  
                                          i1l3619 0000                                            i1l3707 0171  
                                          i1l3651 0000                                            i1l3635 0000  
                                          i1l3627 0000                                            u115_25 01C5  
                                          i1l3709 0000                                            i1l3661 0127  
                                          i1l3645 0000                                            i1l3733 0000  
                                          i1l3591 0000                                            i1l3671 0139  
                                          i1l3639 0000                                            i1l3743 0000  
                                          i1l3585 019B                                            i1l3657 0120  
                                          i1l3649 00B0                                            i1l3673 013B  
                                          i1l3761 0000                                            i1l3737 0000  
                                          i1l3587 0000                                            i1l3579 0000  
                                          i1l3771 0000                                            i1l3683 0000  
                                          i1l3675 0000                                            i1l3667 0133  
                                          i1l3739 0000                                            i1l3755 004F  
                                          i1l3589 0000                                            u132_25 018D  
                                          i1l3685 0150                                            i1l3677 0141  
                                          i1l3765 0061                                            i1l3767 0000  
                                          i1l3695 0000                                            i1l3687 0000  
                                          i1l3759 0000                                            i1l3697 0165  
                                          i1l3689 0156                                            i1l3699 0000  
                           __end_of_resetAllTimer 0533                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 049E  
                               _setAD_ConvertFlag 04A2                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0192                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 00BD                     __size_of_clearThreeHoursTimer 0005  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 00BD  
                             ??_setAD_ConvertFlag 00BD                                            _setPB3 04E3  
                                          _setPB4 04EE                                            _setPB5 04F9  
                     __end_of_clearTwentyMinTimer 0545                                            clrloop 05F2  
                                Filter@filter_buf 0025                                         ??_initPB3 00BD  
                                       ??_initPB4 00BD                                         ??_initPB5 00BD  
                                Filter@filter_sum 0022                                         ??_initPin 00BE  
                       ??_vPutSampleDataIntoTable 002F                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 00BD                                       ?_FilterCh13 00BD  
                        __end_of_setWaitResetFlag 0606                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 04BB                         __end_of_getAD_ConvertFlag 04A2  
                       __end_of_setAD_ConvertFlag 04A7                                     ?_setPWM_Width 0070  
                              __size_of_adc_start 0004                          _initPB2_AsHighResistence 0517  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 05E7  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 00A2                                     __end_of_reset 060A  
                               main@uiTimerTwoP5s 00A4                            setWaitResetFlag@bValue 00BD  
         vPutSampleDataIntoTable@uiCalWidthArray1 004D           vPutSampleDataIntoTable@uiCalWidthArray2 004F  
         vPutSampleDataIntoTable@uiCalWidthArray3 0051           vPutSampleDataIntoTable@uiCalWidthArray4 0053  
                  vPutSampleDataIntoTable@channel 0078                         _isFinishedThreeHoursTimer 05C6  
                           __end_of_timer1_config 05F1                         __size_of_getWaitResetFlag 0002  
                                  ?_adc_test_init 00BD                       __end_of_startTwentyMinTimer 05BB  
                                         ??_reset 00BD                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0043  
                                      __pbssBANK1 00A0                                    ??_setPWM_Width 0070  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 04DB  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 0049  
                 __end_of_vPutSampleDataIntoTable 0190                                           ?_Filter 0070  
                     __size_of_clearOneHoursTimer 0004                                        __pmaintext 023F  
             vPutSampleDataIntoTable@ucCh12Length 007D                               __size_of_FilterCh13 007F  
             vPutSampleDataIntoTable@ucCh13Length 0060           vPutSampleDataIntoTable@uiDeviationValue 0079  
                                 _selectAdChannel 060A                                        __pintentry 0004  
                                         _CCP1CON 0017                                        __ptext1400 04EE  
                                      __ptext1401 051C                                        __ptext1410 0190  
                                      __ptext1402 04E3                                        __ptext1411 0000  
                                      __ptext1403 050E                                        __ptext1404 0013  
                                      __ptext1405 0085                                        __ptext1406 0082  
                                         ?_setPB3 0070                                        __ptext1407 0077  
                                         ?_setPB4 0070                                        __ptext1408 0192  
                                         ?_setPB5 0070                                        __ptext1409 0218  
                                      __ptext1370 04A7                                        __ptext1371 04A2  
                                      __ptext1380 0595                                        __ptext1372 049E  
                                      __ptext1381 05DC                                        __ptext1373 03E7  
                                      __ptext1365 03E0                                        __ptext1390 0541  
                                      __ptext1382 0611                                        __ptext1374 0601  
                                      __ptext1366 0485                                        __ptext1391 053D  
                                      __ptext1383 0606                                        __ptext1375 05BB  
                                      __ptext1367 052C                                        __ptext1392 0538  
                                      __ptext1384 04D7                                        __ptext1376 056F  
                                      __ptext1368 04DB                                        __ptext1393 0533  
                                      __ptext1385 05A8                                        __ptext1377 05C6  
                                      __ptext1369 0504                                        __ptext1394 0613  
                                      __ptext1386 04BB                                        __ptext1378 0582  
                                      __ptext1395 060A                                        __ptext1387 060E  
                                      __ptext1379 05D1                                        __ptext1396 0545  
                                      __ptext1388 05E7                                        __ptext1397 0517  
                                      __ptext1389 05F9                                        __ptext1398 04F9  
                                      __ptext1399 0524                             __size_of_clock_config 0008  
                                    _clrSampeTime 0611                                 __end_of_adc_start 04DB  
                            _uiTwentySecondsTimer 004B                                _isPermitSampleTime 0606  
                                         Filter@i 002E                                           Filter@j 002D  
                              __size_of_pwm_start 0016                       __size_of_startOneHoursTimer 0013  
                   __size_of_startThreeHoursTimer 0013                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0005                                    main@ucTimerP3s 00A9  
                                  main@ucTimerP5s 00AA                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0086                                        _uiBigTimer 0043  
                                    setPB3@bValue 00BD                                      setPB4@bValue 00BD  
                                    _clock_config 05F9                                      setPB5@bValue 00BD  
                                         _adc_get 0077                                   __size_of_setPB3 000B  
                                 __size_of_setPB4 000B                                   __size_of_setPB5 000B  
                            ??_isPermitSampleTime 00BD                      __end_of_startTwelveHourTimer 05A8  
                                   initPB3@bValue 00BD                                     initPB4@bValue 00BD  
                                       _AD_Sample 04A7                                           _initPB3 050E  
                                         _initPB4 051C                                           _initPB5 0524  
                                    __size_of_ISR 0064                                     initPB5@bValue 00BD  
                                         _initPin 0504                              _bSmallTimerStartFlag 005B  
                                 ??_adc_test_init 00BE                 __size_of_isFinishedTwentyMinTimer 000B  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 04E3  
                            end_of_initialization 056C                                 Filter@filter_temp 0020  
                           pwm_start@ucPulseWidth 00BE                           __end_of_selectAdChannel 060E  
                         _isFinishedOneHoursTimer 05BB                                 __end_of_pwm_start 055B  
                            __end_of_setPWM_Width 021B                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 00BD                                         Filter@cir 002B  
                             _bTwentyMinStartFlag 005C                                  _adc_convert_flag 0058  
                                    ??_FilterCh13 00BF                                  _getWaitResetFlag 0190  
                    __end_of_clearThreeHoursTimer 053D                    __size_of_clearTwelveHoursTimer 0005  
                               ?_setWaitResetFlag 0070                           _timer1_interrupt_config 060E  
                   __end_of_clearTwelveHoursTimer 0538                        ??_initPB2_AsHighResistence 00BD  
                              ??_setWaitResetFlag 00BD                __size_of_isFinishedThreeHoursTimer 000B  
                                      main@ucStep 00A8                                    __end_of_Filter 0218  
                   startTwentyMinTimer@uiSetValue 00BD               __size_of_isFinishedTwelveHoursTimer 000B  
                              FilterCh13@tmpValue 00C3                                __end_of_FilterCh13 0466  
                        vPutSampleDataIntoTable@i 007B                               i1_setAD_ConvertFlag 0082  
                                  __end_of_setPB3 04EE                                    __end_of_setPB4 04F9  
                                  __end_of_setPB5 0504                            __size_of_resetAllTimer 0007  
                             start_initialization 055B                                       __end_of_ISR 0077  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 00D4  
                    __size_of_clearTwentyMinTimer 0004                         ??_isFinishedOneHoursTimer 00BD  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 0595  
               __end_of_isFinishedThreeHoursTimer 05D1                                  ?_selectAdChannel 0070  
                                        ??_Filter 0072                 vPutSampleDataIntoTable@ucInitFlag 0062  
                                     __pdataBANK0 0063                                          ??_setPB3 00BD  
                                        ??_setPB4 00BD                                          ??_setPB5 00BD  
                        ?_vPutSampleDataIntoTable 0076                                       ??_AD_Sample 00BD  
                       ??_timer1_interrupt_config 00BD                                       __pbssCOMMON 007D  
                                   __pcstackBANK0 0020                                     __pcstackBANK1 00BD  
                                       _adc_start 04D7                             ??i1_setAD_ConvertFlag 0070  
                                 main@uiCh13Value 00D7                             ?_startTwelveHourTimer 00BD  
                                   _resetAllTimer 052C                        __end_of_clearOneHoursTimer 0541  
                    __size_of_startTwentyMinTimer 0013                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 0538                             __size_of_setPWM_Width 0003  
                    __end_of_startThreeHoursTimer 0595                                 main@cTimerP5s_792 00A7  
                               main@cTimerP5s_786 00A6                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 05C6                __end_of_isFinishedTwelveHoursTimer 05DC  
                      _isFinishedTwelveHoursTimer 05D1                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0057                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 0582                  __end_of_initPB2_AsHighResistence 051C  
                       _uiSampleChannelFourteenth 00B7                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh13Value 0007                                    __size_of_reset FFF7  
                                  ?_resetAllTimer 0070                                 interrupt_function 0004  
                                    _setPWM_Width 0218                                    _bWaitResetFlag 005D  
                 __end_of_timer1_interrupt_config 0611                         pwm_start@ucPulseFrequency 00BD  
                        __end_of_getWaitResetFlag 0192                             ?_clearThreeHoursTimer 0070  
                                    _uiSampleCh12 00AB                                      _uiSampleCh13 00B1  
                            adc_test_init@channel 00BF               vPutSampleDataIntoTable@uiSampleData 0076  
                     __size_of_isPermitSampleTime 0004                                         _pwm_start 0545  
                                    _uiSmallTimer 0047              vPutSampleDataIntoTable@uiCalWidthCnt 0055  
                           __end_of_adc_test_init 04D7                                     _timer1_config 05E7  
                    ??_process_AD_Converter_Value 00C0                            ??_startTwelveHourTimer 00BF  
                       __size_of_setWaitResetFlag 0005                            _getAdOriginalCh13Value 03E0  
                             _clearTwentyMinTimer 0541                       startOneHoursTimer@uiSetTime 00BD  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0019  
                                      ?_pwm_start 00BD                          _isFinishedTwentyMinTimer 05DC  
vPutSampleDataIntoTable@ucChannelFourteenthLength 0061                                  __size_of_initPB3 0009  
                                __size_of_initPB4 0008                                  __size_of_initPB5 0008  
                                __size_of_initPin 000A                                    Filter@tmpValue 0024  
                                  ?_timer1_config 0070                              ?_clearTwentyMinTimer 0070  
                                     ??_adc_start 00BD                                   ??_resetAllTimer 00BD  
                            _startThreeHoursTimer 0582                             _clearTwelveHoursTimer 0533  
                                  _uiOneHourTimer 0045                                     __size_of_main 01A1  
              vPutSampleDataIntoTable@uiInitWidth 0064                                     FilterCh13@cir 00CE  
                                        clear_ram 05F1                            ??_clearThreeHoursTimer 00BD  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 005A                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 05A8                                       _sampleTimes 005E  
                           ??_clearTwentyMinTimer 00BD                             ?_startThreeHoursTimer 00BD  
                __size_of_vPutSampleDataIntoTable 010B                                          intlevel1 0000  
                            ?_startTwentyMinTimer 00BD                          __size_of_setPinInitVaule 0008  
                      ?_isFinishedThreeHoursTimer 0070                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                                _clearOneHoursTimer 053D  
                   startThreeHoursTimer@uiSetTime 00BD                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 00BE                                    ??_clrSampeTime 00BD  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 0059  
                                 ??_timer1_config 00BD                                       FilterCh13@i 00D1  
                                     FilterCh13@j 00D0                               ?_clearOneHoursTimer 0070  
                     __end_ofi1_setAD_ConvertFlag 0085                __end_of_process_AD_Converter_Value 049E  
                      _process_AD_Converter_Value 0485                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 00BD  
                           ??_startTwentyMinTimer 00BF                                _startOneHoursTimer 056F  
                            ??_clearOneHoursTimer 00BD                                  _setWaitResetFlag 0601  
