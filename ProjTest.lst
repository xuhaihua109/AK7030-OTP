

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Mar 16 21:13:11 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text1003,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text1005,local,class=CODE,delta=2
    19                           	psect	text1011,local,class=CODE,delta=2
    20                           	psect	text1019,local,class=CODE,delta=2
    21                           	psect	text1020,local,class=CODE,delta=2
    22                           	psect	text1021,local,class=CODE,delta=2
    23                           	psect	text1022,local,class=CODE,delta=2
    24                           	psect	text1023,local,class=CODE,delta=2
    25                           	psect	text1024,local,class=CODE,delta=2
    26                           	psect	text1025,local,class=CODE,delta=2
    27                           	psect	text1026,local,class=CODE,delta=2
    28                           	psect	text1027,local,class=CODE,delta=2
    29                           	psect	text1028,local,class=CODE,delta=2
    30                           	psect	text1031,local,class=CODE,delta=2
    31                           	psect	text1032,local,class=CODE,delta=2
    32                           	psect	text1033,local,class=CODE,delta=2
    33                           	psect	text1035,local,class=CODE,delta=2
    34                           	psect	text1039,local,class=CODE,delta=2
    35                           	psect	text1045,local,class=CODE,delta=2
    36                           	psect	text1050,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text1054,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	text1003
    49  0000                     __ptext1003:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  0010                     _T1CON	set	16
    53  000F                     _TMR1H	set	15
    54  000E                     _TMR1L	set	14
    55  006A                     _ADIF	set	106
    56  00F8                     _ADON	set	248
    57  005F                     _GIE	set	95
    58  00F9                     _GO	set	249
    59  0028                     _PA0	set	40
    60  0029                     _PA1	set	41
    61  002A                     _PA2	set	42
    62  002B                     _PA3	set	43
    63  002E                     _PA6	set	46
    64  0030                     _PB0	set	48
    65  0031                     _PB1	set	49
    66  0032                     _PB2	set	50
    67  0034                     _PB4	set	52
    68  0036                     _PB6	set	54
    69  0037                     _PB7	set	55
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0428                     _TRISA0	set	1064
    77  0429                     _TRISA1	set	1065
    78  042A                     _TRISA2	set	1066
    79  042B                     _TRISA3	set	1067
    80  042E                     _TRISA6	set	1070
    81  042F                     _TRISA7	set	1071
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0436                     _TRISB6	set	1078
    89  0437                     _TRISB7	set	1079
    90  0108                     _CLKPR	set	264
    91  0847                     _CLKPCE	set	2119
    92  0C47                     _PBOD7	set	3143
    93                           
    94                           	psect	cinit
    95  0F74                     start_initialization:	
    96  0F74  304A               	movlw	low __pbssBANK0
    97                           
    98                           ; Clear objects allocated to COMMON
    99  0F75  01FD               	clrf	__pbssCOMMON& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  0F76  1383               	bcf	3,7	;select IRP bank0
   103  0F77  0084               	movwf	4
   104  0F78  306F               	movlw	low (__pbssBANK0+37)
   105  0F79  158A  26DE  158A   	fcall	clear_ram
   106                           
   107                           ; Clear objects allocated to BANK1
   108  0F7C  30A0               	movlw	low __pbssBANK1
   109  0F7D  0084               	movwf	4
   110  0F7E  30DC               	movlw	low (__pbssBANK1+60)
   111  0F7F  158A  26DE  158A   	fcall	clear_ram
   112  0F82  3090               	movlw	low __pbssBANK3
   113                           
   114                           ; Clear objects allocated to BANK3
   115  0F83  1783               	bsf	3,7	;select IRP bank2
   116  0F84  0084               	movwf	4
   117  0F85  30D8               	movlw	low (__pbssBANK3+72)
   118  0F86  158A  26DE         	fcall	clear_ram
   119  0F88                     end_of_initialization:	
   120                           ;End of C runtime variable initialization code
   121                           
   122  0F88  0183               	clrf	3
   123  0F89  118A  2813         	ljmp	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMMON
   126  007D                     __pbssCOMMON:	
   127  007D                     vHandle20sTimerOut@ucTimeCnt:	
   128  007D                     	ds	1
   129                           
   130                           	psect	bssBANK0
   131  004A                     __pbssBANK0:	
   132  004A                     main@uiOldValue:	
   133  004A                     	ds	2
   134  004C                     _bBigTimerStartFlag:	
   135  004C                     	ds	1
   136  004D                     _bSmallTimerStartFlag:	
   137  004D                     	ds	1
   138  004E                     _bTwentyMinStartFlag:	
   139  004E                     	ds	1
   140  004F                     _bTwentySecStartFlag:	
   141  004F                     	ds	1
   142  0050                     _enumMainLoopStep:	
   143  0050                     	ds	1
   144  0051                     _sampleChannelSelect:	
   145  0051                     	ds	1
   146  0052                     _sampleTimes:	
   147  0052                     	ds	1
   148  0053                     _ucADC4_Step:	
   149  0053                     	ds	1
   150  0054                     _ucChannel5Type:	
   151  0054                     	ds	1
   152  0055                     main@bCheckTweHour:	
   153  0055                     	ds	1
   154  0056                     main@bInitFlag:	
   155  0056                     	ds	1
   156  0057                     main@ucFourthSuffix1TimerP3s:	
   157  0057                     	ds	1
   158  0058                     main@ucLoaderStep:	
   159  0058                     	ds	1
   160  0059                     main@ucLoaderStep1:	
   161  0059                     	ds	1
   162  005A                     main@ucLoaderStep2:	
   163  005A                     	ds	1
   164  005B                     main@ucLoaderStep3:	
   165  005B                     	ds	1
   166  005C                     main@ucLoaderStep4:	
   167  005C                     	ds	1
   168  005D                     main@ucTimerCntP3s:	
   169  005D                     	ds	1
   170  005E                     main@ucTimerDelay:	
   171  005E                     	ds	1
   172  005F                     main@ucTimerDelay1:	
   173  005F                     	ds	1
   174  0060                     main@ucTimerDelay2:	
   175  0060                     	ds	1
   176  0061                     main@ucTimerDelay3:	
   177  0061                     	ds	1
   178  0062                     main@ucTimerDelay4:	
   179  0062                     	ds	1
   180  0063                     main@ucTimerDelayP2sLess:	
   181  0063                     	ds	1
   182  0064                     main@ucTimerDelayP2sMore:	
   183  0064                     	ds	1
   184  0065                     main@ucTimerLargeZeroP5s:	
   185  0065                     	ds	1
   186  0066                     main@ucTimerLessZeroP5s:	
   187  0066                     	ds	1
   188  0067                     main@ucTimerP5s:	
   189  0067                     	ds	1
   190  0068                     main@ucTimerRightP5s:	
   191  0068                     	ds	1
   192  0069                     main@ucTimerZeroPoint3s:	
   193  0069                     	ds	1
   194  006A                     main@ucTimerZeroPoint5s:	
   195  006A                     	ds	1
   196  006B                     vPutSampleDataIntoTable@ucChannelFifthLength:	
   197  006B                     	ds	1
   198  006C                     vPutSampleDataIntoTable@ucChannelSecondLength:	
   199  006C                     	ds	1
   200  006D                     vPutSampleDataIntoTable@ucChannelSixthLength:	
   201  006D                     	ds	1
   202  006E                     vPutSampleDataIntoTable@ucChannelZeroLength:	
   203  006E                     	ds	1
   204                           
   205                           	psect	bssBANK1
   206  00A0                     __pbssBANK1:	
   207  00A0                     _uiBigTimer:	
   208  00A0                     	ds	2
   209  00A2                     _uiSmallTimer:	
   210  00A2                     	ds	2
   211  00A4                     _uiTwentyMinuteTimer:	
   212  00A4                     	ds	2
   213  00A6                     _uiTwentySecondsTimer:	
   214  00A6                     	ds	2
   215  00A8                     main@uiMaxValue:	
   216  00A8                     	ds	2
   217  00AA                     main@uiMinValue:	
   218  00AA                     	ds	2
   219  00AC                     ISR@ucTimer1sCnt:	
   220  00AC                     	ds	1
   221  00AD                     _adc_convert_flag:	
   222  00AD                     	ds	1
   223  00AE                     _bPause20secTimer:	
   224  00AE                     	ds	1
   225  00AF                     _timer:	
   226  00AF                     	ds	1
   227  00B0                     main@enumBranchStep:	
   228  00B0                     	ds	1
   229  00B1                     main@enumInteralStep:	
   230  00B1                     	ds	1
   231  00B2                     main@ucTimer1s:	
   232  00B2                     	ds	1
   233  00B3                     main@ucTimerLessX1P5s:	
   234  00B3                     	ds	1
   235  00B4                     main@ucTimerLessX2P5s:	
   236  00B4                     	ds	1
   237  00B5                     main@ucTimerP3s:	
   238  00B5                     	ds	1
   239  00B6                     main@ucTimerX1P5s:	
   240  00B6                     	ds	1
   241  00B7                     main@ucTimerX2P5s:	
   242  00B7                     	ds	1
   243  00B8                     vHandle20sTimerOut@ucTimerOnBehaviorStep:	
   244  00B8                     	ds	1
   245  00B9                     vHandle20sTimeron@ucCompareStep:	
   246  00B9                     	ds	1
   247  00BA                     vHandle20sTimeron@ucLessThanP3sCnt:	
   248  00BA                     	ds	1
   249  00BB                     vHandle20sTimeron@ucLessThanP8sCnt:	
   250  00BB                     	ds	1
   251  00BC                     vHandle20sTimeron@ucMoreThanP3sCnt:	
   252  00BC                     	ds	1
   253  00BD                     vHandle20sTimeron@ucMoreThanP8sCnt:	
   254  00BD                     	ds	1
   255  00BE                     vHandle20sTimeron@ucTimeCntP2s:	
   256  00BE                     	ds	1
   257  00BF                     vHandle20sTimeron@ucTimerCntLess:	
   258  00BF                     	ds	1
   259  00C0                     vHandle20sTimeron@ucTimerCntMore:	
   260  00C0                     	ds	1
   261  00C1                     vHandle20sTimeron@ucTimerCntN1:	
   262  00C1                     	ds	1
   263  00C2                     vHandle20sTimeron@ucTimerCntP5s:	
   264  00C2                     	ds	1
   265  00C3                     vHandle20sTimeron@waitLoopStep:	
   266  00C3                     	ds	1
   267  00C4                     _uiSampleChannelZero:	
   268  00C4                     	ds	24
   269                           
   270                           	psect	bssBANK3
   271  0190                     __pbssBANK3:	
   272  0190                     _uiSampleChannelFifth:	
   273  0190                     	ds	24
   274  01A8                     _uiSampleChannelSecond:	
   275  01A8                     	ds	24
   276  01C0                     _uiSampleChannelSixth:	
   277  01C0                     	ds	24
   278                           
   279                           	psect	clrtext
   280  0EDE                     clear_ram:	
   281                           ;	Called with FSR containing the base address, and
   282                           ;	W with the last address+1
   283                           
   284  0EDE  0064               	clrwdt	;clear the watchdog before getting into this loop
   285  0EDF                     clrloop:	
   286  0EDF  0180               	clrf	0	;clear RAM location pointed to by FSR
   287  0EE0  0A84               	incf	4,f	;increment pointer
   288  0EE1  0604               	xorwf	4,w	;XOR with final address
   289  0EE2  1903               	btfsc	3,2	;have we reached the end yet?
   290  0EE3  3400               	retlw	0	;all done for this memory range, return
   291  0EE4  0604               	xorwf	4,w	;XOR again to restore value
   292  0EE5  2EDF               	goto	clrloop	;do the next byte
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:	
   296  0070                     ?_clearTwelveHoursTimer:	
   297  0070                     ?_clearThreeHoursTimer:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_clearTwentySecondsTimer:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_clearTwentyMinuteTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_clock_config:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_timer1_config:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_timer1_interrupt_config:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_adc_start:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_process_AD_Converter_Value:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_clrSampeTime:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_startTwentySecondsTimer:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_vHandle20sTimeron:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_vHandle20sTimerOut:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_vPause20sTimer:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_AD_Sample:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_clearAllTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_clearPinPortAndTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_initPin:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_setPB0:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ?_setPB1:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?_setPB2:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ?_setPA0:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?_setPA1:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_setPA2:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_setPA3:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_setPB6:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_setPB4:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_setPA6:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_setPB6AsInput:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?_clearParaFunction1:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?_setAD_ConvertFlag:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ?_ISR:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ?i1_setAD_ConvertFlag:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ??i1_setAD_ConvertFlag:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_isPermitSampleTime:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ?_isFinishedTwentyMinuteTimer:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_isFinishedTwelveHoursTimer:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_isFinishedTwentySecondsTimer:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_isFinishedThreeHoursTimer:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_getAD_ConvertFlag:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_adc_get:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     i1setAD_ConvertFlag@flag:	
   421                           ; 2 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	2
   426  0072                     ??_adc_get:	
   427  0072                     adc_get@val:	
   428                           ; 0 bytes @ 0x2
   429                           
   430                           
   431                           ; 2 bytes @ 0x2
   432  0072                     	ds	2
   433  0074                     ?_vPutSampleDataIntoTable:	
   434  0074                     vPutSampleDataIntoTable@uiSampleData:	
   435                           ; 0 bytes @ 0x4
   436                           
   437                           
   438                           ; 2 bytes @ 0x4
   439  0074                     	ds	2
   440  0076                     vPutSampleDataIntoTable@channel:	
   441                           
   442                           ; 1 bytes @ 0x6
   443  0076                     	ds	1
   444  0077                     ??_vPutSampleDataIntoTable:	
   445  0077                     vPutSampleDataIntoTable@i:	
   446                           ; 0 bytes @ 0x7
   447                           
   448                           
   449                           ; 2 bytes @ 0x7
   450  0077                     	ds	2
   451  0079                     ??_ISR:	
   452                           
   453                           ; 0 bytes @ 0x9
   454  0079                     	ds	4
   455                           
   456                           	psect	cstackBANK0
   457  0020                     __pcstackBANK0:	
   458  0020                     ??_clearTwelveHoursTimer:	
   459  0020                     ??_clearThreeHoursTimer:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0020                     ??_clearTwentySecondsTimer:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0020                     ??_clearTwentyMinuteTimer:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0020                     ??_clock_config:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0020                     ??_timer1_config:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_timer1_interrupt_config:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ?_adc_test_init:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ??_adc_start:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ?_startTwentyMinuteTimer:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ??_isPermitSampleTime:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ??_clrSampeTime:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ??_isFinishedTwentyMinuteTimer:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ?_startTwelveHourTimer:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_isFinishedTwelveHoursTimer:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ??_startTwentySecondsTimer:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ??_isFinishedTwentySecondsTimer:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ?_startThreeHoursTimer:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ??_isFinishedThreeHoursTimer:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ??_vPause20sTimer:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_clearAllTimer:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ??_clearPinPortAndTimer:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ??_initPin:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0020                     ??_setPB0:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0020                     ??_setPB1:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0020                     ??_setPB2:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0020                     ??_setPA0:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0020                     ??_setPA1:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0020                     ??_setPA2:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0020                     ??_setPA3:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0020                     ??_setPB6:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0020                     ??_setPB4:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0020                     ??_setPA6:	
   553                           ; 0 bytes @ 0x0
   554                           
   555  0020                     ??_setPB6AsInput:	
   556                           ; 0 bytes @ 0x0
   557                           
   558  0020                     ??_getAD_ConvertFlag:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0020                     ??_setAD_ConvertFlag:	
   562                           ; 0 bytes @ 0x0
   563                           
   564  0020                     ?_Filter:	
   565                           ; 0 bytes @ 0x0
   566                           
   567  0020                     setPB0@bValue:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     setPB1@bValue:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0020                     setPB2@bValue:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0020                     setPA0@bValue:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0020                     setPA1@bValue:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0020                     setPA2@bValue:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0020                     setPA3@bValue:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0020                     setPB6@bValue:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0020                     setPB4@bValue:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0020                     setPA6@bValue:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0020                     vPause20sTimer@bValue:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0020                     setAD_ConvertFlag@flag:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0020                     adc_test_init@ref:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0020                     Filter@tmpValue:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0020                     startTwelveHourTimer@uiSetTime:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0020                     startThreeHoursTimer@uiSetTime:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0020                     startTwentyMinuteTimer@uiValue:	
   616                           ; 2 bytes @ 0x0
   617                           
   618                           
   619                           ; 2 bytes @ 0x0
   620  0020                     	ds	1
   621  0021                     ??_adc_test_init:	
   622  0021                     ??_vHandle20sTimerOut:	
   623                           ; 0 bytes @ 0x1
   624                           
   625  0021                     ??_clearParaFunction1:	
   626                           ; 0 bytes @ 0x1
   627                           
   628  0021                     vHandle20sTimerOut@bClearStep:	
   629                           ; 0 bytes @ 0x1
   630                           
   631                           
   632                           ; 1 bytes @ 0x1
   633  0021                     	ds	1
   634  0022                     ??_startTwentyMinuteTimer:	
   635  0022                     ??_startTwelveHourTimer:	
   636                           ; 0 bytes @ 0x2
   637                           
   638  0022                     ??_startThreeHoursTimer:	
   639                           ; 0 bytes @ 0x2
   640                           
   641  0022                     ??_Filter:	
   642                           ; 0 bytes @ 0x2
   643                           
   644  0022                     adc_test_init@channel:	
   645                           ; 0 bytes @ 0x2
   646                           
   647                           
   648                           ; 1 bytes @ 0x2
   649  0022                     	ds	1
   650  0023                     ??_process_AD_Converter_Value:	
   651  0023                     ??_AD_Sample:	
   652                           ; 0 bytes @ 0x3
   653                           
   654                           
   655                           ; 0 bytes @ 0x3
   656  0023                     	ds	3
   657  0026                     Filter@filter_buf:	
   658                           
   659                           ; 24 bytes @ 0x6
   660  0026                     	ds	24
   661  003E                     Filter@filter_temp:	
   662                           
   663                           ; 2 bytes @ 0x1E
   664  003E                     	ds	2
   665  0040                     Filter@filter_sum:	
   666                           
   667                           ; 2 bytes @ 0x20
   668  0040                     	ds	2
   669  0042                     Filter@cir:	
   670                           
   671                           ; 2 bytes @ 0x22
   672  0042                     	ds	2
   673  0044                     Filter@j:	
   674                           
   675                           ; 1 bytes @ 0x24
   676  0044                     	ds	1
   677  0045                     Filter@i:	
   678                           
   679                           ; 1 bytes @ 0x25
   680  0045                     	ds	1
   681  0046                     ?_getAdOriginalCh0Value:	
   682  0046                     ?_getAdOriginalCh6Value:	
   683                           ; 2 bytes @ 0x26
   684                           
   685  0046                     ?_getAdOriginalCh5Value:	
   686                           ; 2 bytes @ 0x26
   687                           
   688  0046                     ?_getAdOriginalCh2Value:	
   689                           ; 2 bytes @ 0x26
   690                           
   691                           
   692                           ; 2 bytes @ 0x26
   693  0046                     	ds	2
   694  0048                     ??_getAdOriginalCh0Value:	
   695  0048                     ??_getAdOriginalCh6Value:	
   696                           ; 0 bytes @ 0x28
   697                           
   698  0048                     ??_getAdOriginalCh5Value:	
   699                           ; 0 bytes @ 0x28
   700                           
   701  0048                     ??_vHandle20sTimeron:	
   702                           ; 0 bytes @ 0x28
   703                           
   704  0048                     ??_getAdOriginalCh2Value:	
   705                           ; 0 bytes @ 0x28
   706                           
   707  0048                     ??_main:	
   708                           ; 0 bytes @ 0x28
   709                           
   710  0048                     main@uiCh5Value:	
   711                           ; 0 bytes @ 0x28
   712                           
   713                           
   714                           ; 2 bytes @ 0x28
   715  0048                     	ds	2
   716                           
   717                           	psect	maintext
   718  0013                     __pmaintext:	
   719 ;;Data sizes: Strings 0, constant 0, data 0, bss 170, persistent 0 stack 0
   720 ;;Auto spaces:   Size  Autos    Used
   721 ;; COMMON          14     13      14
   722 ;; BANK0           80     42      79
   723 ;; BANK1           80      0      60
   724 ;; BANK3           96      0      72
   725 ;; BANK2           96      0       0
   726 ;;
   727 ;; Pointer list with targets:
   728 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   729 ;;
   730 ;; ?_getAdOriginalCh2Value	unsigned int  size(1) Largest target is 0
   731 ;;
   732 ;; ?_getAdOriginalCh6Value	unsigned int  size(1) Largest target is 0
   733 ;;
   734 ;; ?_getAdOriginalCh5Value	unsigned int  size(1) Largest target is 0
   735 ;;
   736 ;; ?_getAdOriginalCh0Value	unsigned int  size(1) Largest target is 0
   737 ;;
   738 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   739 ;;
   740 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   741 ;;		 -> uiSampleChannelSixth(BANK3[24]), uiSampleChannelFifth(BANK3[24]), uiSampleChannelSecond(BANK3[24]), uiSampleChan
      +nelZero(BANK1[24]), 
   742 ;;
   743 ;;
   744 ;; Critical Paths under _main in COMMON
   745 ;;
   746 ;;   None.
   747 ;;
   748 ;; Critical Paths under _ISR in COMMON
   749 ;;
   750 ;;   _ISR->_vPutSampleDataIntoTable
   751 ;;   _vPutSampleDataIntoTable->_adc_get
   752 ;;
   753 ;; Critical Paths under _main in BANK0
   754 ;;
   755 ;;   _main->_getAdOriginalCh0Value
   756 ;;   _main->_getAdOriginalCh6Value
   757 ;;   _main->_getAdOriginalCh5Value
   758 ;;   _vHandle20sTimeron->_getAdOriginalCh2Value
   759 ;;   _vHandle20sTimeron->_getAdOriginalCh6Value
   760 ;;   _clearParaFunction1->_setPA1
   761 ;;   _clearParaFunction1->_setPA0
   762 ;;   _clearParaFunction1->_setPB0
   763 ;;   _clearParaFunction1->_setPB1
   764 ;;   _clearParaFunction1->_setPB2
   765 ;;   _clearParaFunction1->_setPA3
   766 ;;   _clearParaFunction1->_setPB4
   767 ;;   _AD_Sample->_adc_test_init
   768 ;;   _getAdOriginalCh2Value->_Filter
   769 ;;   _vHandle20sTimerOut->_setPA3
   770 ;;   _vHandle20sTimerOut->_setPB4
   771 ;;   _vHandle20sTimerOut->_setPB6
   772 ;;   _getAdOriginalCh5Value->_Filter
   773 ;;   _getAdOriginalCh6Value->_Filter
   774 ;;   _getAdOriginalCh0Value->_Filter
   775 ;;
   776 ;; Critical Paths under _ISR in BANK0
   777 ;;
   778 ;;   None.
   779 ;;
   780 ;; Critical Paths under _main in BANK1
   781 ;;
   782 ;;   None.
   783 ;;
   784 ;; Critical Paths under _ISR in BANK1
   785 ;;
   786 ;;   None.
   787 ;;
   788 ;; Critical Paths under _main in BANK3
   789 ;;
   790 ;;   None.
   791 ;;
   792 ;; Critical Paths under _ISR in BANK3
   793 ;;
   794 ;;   None.
   795 ;;
   796 ;; Critical Paths under _main in BANK2
   797 ;;
   798 ;;   None.
   799 ;;
   800 ;; Critical Paths under _ISR in BANK2
   801 ;;
   802 ;;   None.
   803 ;;
   804 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   805 ;;
   806 ;;
   807 ;;Call Graph Tables:
   808 ;;
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (0) _main                                                 2     2      0    3895
   813 ;;                                             40 BANK0      2     2      0
   814 ;;                            _initPin
   815 ;;                       _clock_config
   816 ;;                      _timer1_config
   817 ;;            _timer1_interrupt_config
   818 ;;                      _adc_test_init
   819 ;;                          _adc_start
   820 ;;             _startTwentyMinuteTimer
   821 ;;         _process_AD_Converter_Value
   822 ;;                 _isPermitSampleTime
   823 ;;                       _clrSampeTime
   824 ;;              _getAdOriginalCh0Value
   825 ;;        _isFinishedTwentyMinuteTimer
   826 ;;                 _clearParaFunction1
   827 ;;                             _setPA3
   828 ;;                             _setPB4
   829 ;;              _getAdOriginalCh6Value
   830 ;;               _startTwelveHourTimer
   831 ;;         _isFinishedTwelveHoursTimer
   832 ;;              _getAdOriginalCh5Value
   833 ;;                             _setPA1
   834 ;;                             _setPA0
   835 ;;                             _setPB0
   836 ;;                             _setPB1
   837 ;;                             _setPB2
   838 ;;            _startTwentySecondsTimer
   839 ;;       _isFinishedTwentySecondsTimer
   840 ;;                  _vHandle20sTimeron
   841 ;;                 _vHandle20sTimerOut
   842 ;;                             _setPA6
   843 ;;               _clearPinPortAndTimer
   844 ;;               _startThreeHoursTimer
   845 ;;          _isFinishedThreeHoursTimer
   846 ;;               _clearThreeHoursTimer
   847 ;;                             _setPA2
   848 ;;                             _setPB6
   849 ;;                      _clearAllTimer
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (1) _vHandle20sTimeron                                    0     0      0    1306
   852 ;;              _getAdOriginalCh2Value
   853 ;;              _getAdOriginalCh6Value
   854 ;;                     _vPause20sTimer
   855 ;;                             _setPA3
   856 ;;                             _setPB6
   857 ;;                      _setPB6AsInput
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   860 ;;                  _getAD_ConvertFlag
   861 ;;                  _setAD_ConvertFlag
   862 ;;                          _AD_Sample
   863 ;;                          _adc_start
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (1) _clearParaFunction1                                   0     0      0     154
   866 ;;                             _setPA1
   867 ;;                             _setPA0
   868 ;;                             _setPB0
   869 ;;                             _setPB1
   870 ;;                             _setPB2
   871 ;;                      _clearAllTimer
   872 ;;                             _setPA3
   873 ;;                             _setPB4
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   876 ;;                      _clearAllTimer
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (2) _AD_Sample                                            0     0      0      44
   879 ;;                      _adc_test_init
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (2) _getAdOriginalCh2Value                                2     0      2     620
   882 ;;                                             38 BANK0      2     0      2
   883 ;;                             _Filter
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _vHandle20sTimerOut                                   1     1      0      89
   886 ;;                                              1 BANK0      1     1      0
   887 ;;                             _setPA3
   888 ;;                             _setPB4
   889 ;;                             _setPB6
   890 ;;                      _setPB6AsInput
   891 ;;            _clearTwentySecondsTimer
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (1) _getAdOriginalCh5Value                                2     0      2     620
   894 ;;                                             38 BANK0      2     0      2
   895 ;;                             _Filter
   896 ;; ---------------------------------------------------------------------------------
   897 ;; (2) _getAdOriginalCh6Value                                2     0      2     620
   898 ;;                                             38 BANK0      2     0      2
   899 ;;                             _Filter
   900 ;; ---------------------------------------------------------------------------------
   901 ;; (1) _getAdOriginalCh0Value                                2     0      2     620
   902 ;;                                             38 BANK0      2     0      2
   903 ;;                             _Filter
   904 ;; ---------------------------------------------------------------------------------
   905 ;; (1) _clearAllTimer                                        0     0      0       0
   906 ;;              _clearTwelveHoursTimer
   907 ;;               _clearThreeHoursTimer
   908 ;;            _clearTwentySecondsTimer
   909 ;;             _clearTwentyMinuteTimer
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   912 ;;                                              0 BANK0      1     1      0
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (3) _Filter                                              38    36      2     620
   917 ;;                                              0 BANK0     38    36      2
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (2) _vPause20sTimer                                       1     1      0      22
   920 ;;                                              0 BANK0      1     1      0
   921 ;; ---------------------------------------------------------------------------------
   922 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   923 ;; ---------------------------------------------------------------------------------
   924 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   925 ;;                                              0 BANK0      2     0      2
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   934 ;;                                              0 BANK0      2     0      2
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (1) _isFinishedTwentyMinuteTimer                          0     0      0       0
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (1) _clrSampeTime                                         0     0      0       0
   939 ;; ---------------------------------------------------------------------------------
   940 ;; (1) _isPermitSampleTime                                   0     0      0       0
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (1) _startTwentyMinuteTimer                               2     0      2      22
   943 ;;                                              0 BANK0      2     0      2
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) _adc_start                                            0     0      0       0
   946 ;; ---------------------------------------------------------------------------------
   947 ;; (3) _adc_test_init                                        3     2      1      44
   948 ;;                                              0 BANK0      3     2      1
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (1) _timer1_interrupt_config                              0     0      0       0
   951 ;; ---------------------------------------------------------------------------------
   952 ;; (1) _timer1_config                                        0     0      0       0
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (1) _clock_config                                         0     0      0       0
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (2) _setPB6AsInput                                        0     0      0       0
   957 ;; ---------------------------------------------------------------------------------
   958 ;; (1) _setPA6                                               1     1      0      22
   959 ;;                                              0 BANK0      1     1      0
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (2) _setPB4                                               1     1      0      22
   962 ;;                                              0 BANK0      1     1      0
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (1) _setPB6                                               1     1      0      22
   965 ;;                                              0 BANK0      1     1      0
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (2) _setPA3                                               1     1      0      22
   968 ;;                                              0 BANK0      1     1      0
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (1) _setPA2                                               1     1      0      22
   971 ;;                                              0 BANK0      1     1      0
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (1) _setPA1                                               1     1      0      22
   974 ;;                                              0 BANK0      1     1      0
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (1) _setPA0                                               1     1      0      22
   977 ;;                                              0 BANK0      1     1      0
   978 ;; ---------------------------------------------------------------------------------
   979 ;; (1) _setPB2                                               1     1      0      22
   980 ;;                                              0 BANK0      1     1      0
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (1) _setPB1                                               1     1      0      22
   983 ;;                                              0 BANK0      1     1      0
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (1) _setPB0                                               1     1      0      22
   986 ;;                                              0 BANK0      1     1      0
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (1) _initPin                                              0     0      0       0
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (2) _clearTwentyMinuteTimer                               0     0      0       0
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   993 ;; ---------------------------------------------------------------------------------
   994 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   997 ;; ---------------------------------------------------------------------------------
   998 ;; Estimated maximum stack depth 3
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (4) _ISR                                                  4     4      0     495
  1003 ;;                                              9 COMMON     4     4      0
  1004 ;;                i1_setAD_ConvertFlag
  1005 ;;                            _adc_get
  1006 ;;            _vPutSampleDataIntoTable
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
  1009 ;;                                              0 COMMON     1     1      0
  1010 ;; ---------------------------------------------------------------------------------
  1011 ;; (5) _adc_get                                              4     2      2      24
  1012 ;;                                              0 COMMON     4     2      2
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (5) _vPutSampleDataIntoTable                              5     2      3     398
  1015 ;;                                              4 COMMON     5     2      3
  1016 ;;                            _adc_get (ARG)
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; Estimated maximum stack depth 5
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; Call Graph Graphs:
  1021 ;; _main (ROOT)
  1022 ;;   _initPin
  1023 ;;   _clock_config
  1024 ;;   _timer1_config
  1025 ;;   _timer1_interrupt_config
  1026 ;;   _adc_test_init
  1027 ;;   _adc_start
  1028 ;;   _startTwentyMinuteTimer
  1029 ;;   _process_AD_Converter_Value
  1030 ;;     _getAD_ConvertFlag
  1031 ;;     _setAD_ConvertFlag
  1032 ;;     _AD_Sample
  1033 ;;       _adc_test_init
  1034 ;;     _adc_start
  1035 ;;   _isPermitSampleTime
  1036 ;;   _clrSampeTime
  1037 ;;   _getAdOriginalCh0Value
  1038 ;;     _Filter
  1039 ;;   _isFinishedTwentyMinuteTimer
  1040 ;;   _clearParaFunction1
  1041 ;;     _setPA1
  1042 ;;     _setPA0
  1043 ;;     _setPB0
  1044 ;;     _setPB1
  1045 ;;     _setPB2
  1046 ;;     _clearAllTimer
  1047 ;;       _clearTwelveHoursTimer
  1048 ;;       _clearThreeHoursTimer
  1049 ;;       _clearTwentySecondsTimer
  1050 ;;       _clearTwentyMinuteTimer
  1051 ;;     _setPA3
  1052 ;;     _setPB4
  1053 ;;   _setPA3
  1054 ;;   _setPB4
  1055 ;;   _getAdOriginalCh6Value
  1056 ;;     _Filter
  1057 ;;   _startTwelveHourTimer
  1058 ;;   _isFinishedTwelveHoursTimer
  1059 ;;   _getAdOriginalCh5Value
  1060 ;;     _Filter
  1061 ;;   _setPA1
  1062 ;;   _setPA0
  1063 ;;   _setPB0
  1064 ;;   _setPB1
  1065 ;;   _setPB2
  1066 ;;   _startTwentySecondsTimer
  1067 ;;   _isFinishedTwentySecondsTimer
  1068 ;;   _vHandle20sTimeron
  1069 ;;     _getAdOriginalCh2Value
  1070 ;;       _Filter
  1071 ;;     _getAdOriginalCh6Value
  1072 ;;       _Filter
  1073 ;;     _vPause20sTimer
  1074 ;;     _setPA3
  1075 ;;     _setPB6
  1076 ;;     _setPB6AsInput
  1077 ;;   _vHandle20sTimerOut
  1078 ;;     _setPA3
  1079 ;;     _setPB4
  1080 ;;     _setPB6
  1081 ;;     _setPB6AsInput
  1082 ;;     _clearTwentySecondsTimer
  1083 ;;   _setPA6
  1084 ;;   _clearPinPortAndTimer
  1085 ;;     _clearAllTimer
  1086 ;;       _clearTwelveHoursTimer
  1087 ;;       _clearThreeHoursTimer
  1088 ;;       _clearTwentySecondsTimer
  1089 ;;       _clearTwentyMinuteTimer
  1090 ;;   _startThreeHoursTimer
  1091 ;;   _isFinishedThreeHoursTimer
  1092 ;;   _clearThreeHoursTimer
  1093 ;;   _setPA2
  1094 ;;   _setPB6
  1095 ;;   _clearAllTimer
  1096 ;;     _clearTwelveHoursTimer
  1097 ;;     _clearThreeHoursTimer
  1098 ;;     _clearTwentySecondsTimer
  1099 ;;     _clearTwentyMinuteTimer
  1100 ;;
  1101 ;; _ISR (ROOT)
  1102 ;;   i1_setAD_ConvertFlag
  1103 ;;   _adc_get
  1104 ;;   _vPutSampleDataIntoTable
  1105 ;;     _adc_get (ARG)
  1106 ;;
  1107 ;; Address spaces:
  1108 ;;Name               Size   Autos  Total    Cost      Usage
  1109 ;;BITCOMMON            E      0       0       0        0.0%
  1110 ;;NULL                 0      0       0       0        0.0%
  1111 ;;CODE                 0      0       0       0        0.0%
  1112 ;;COMMON               E      D       E       1      100.0%
  1113 ;;BITSFR0              0      0       0       1        0.0%
  1114 ;;SFR0                 0      0       0       1        0.0%
  1115 ;;BITSFR1              0      0       0       2        0.0%
  1116 ;;SFR1                 0      0       0       2        0.0%
  1117 ;;STACK                0      0       7       2        0.0%
  1118 ;;ABS                  0      0      E1       3        0.0%
  1119 ;;BITBANK0            50      0       0       4        0.0%
  1120 ;;BITSFR3              0      0       0       4        0.0%
  1121 ;;SFR3                 0      0       0       4        0.0%
  1122 ;;BANK0               50     2A      4F       5       98.8%
  1123 ;;BITSFR2              0      0       0       5        0.0%
  1124 ;;SFR2                 0      0       0       5        0.0%
  1125 ;;DATA                 0      0      E8       6        0.0%
  1126 ;;BITBANK1            50      0       0       7        0.0%
  1127 ;;BANK1               50      0      3C       8       75.0%
  1128 ;;BITBANK3            60      0       0       9        0.0%
  1129 ;;BANK3               60      0      48      10       75.0%
  1130 ;;BITBANK2            60      0       0      11        0.0%
  1131 ;;BANK2               60      0       0      12        0.0%
  1132                           
  1133                           
  1134 ;; *************** function _main *****************
  1135 ;; Defined at:
  1136 ;;		line 672 in file "C:\temp\dev\AK7030-OTP\main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  uiCh5Value      2   40[BANK0 ] unsigned int 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;		None               void
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 17F/0
  1147 ;;		On exit  : 60/0
  1148 ;;		Unchanged: FFE00/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       2       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       2       0       0       0
  1154 ;;Total ram usage:        2 bytes
  1155 ;; Hardware stack levels required when called:    5
  1156 ;; This function calls:
  1157 ;;		_initPin
  1158 ;;		_clock_config
  1159 ;;		_timer1_config
  1160 ;;		_timer1_interrupt_config
  1161 ;;		_adc_test_init
  1162 ;;		_adc_start
  1163 ;;		_startTwentyMinuteTimer
  1164 ;;		_process_AD_Converter_Value
  1165 ;;		_isPermitSampleTime
  1166 ;;		_clrSampeTime
  1167 ;;		_getAdOriginalCh0Value
  1168 ;;		_isFinishedTwentyMinuteTimer
  1169 ;;		_clearParaFunction1
  1170 ;;		_setPA3
  1171 ;;		_setPB4
  1172 ;;		_getAdOriginalCh6Value
  1173 ;;		_startTwelveHourTimer
  1174 ;;		_isFinishedTwelveHoursTimer
  1175 ;;		_getAdOriginalCh5Value
  1176 ;;		_setPA1
  1177 ;;		_setPA0
  1178 ;;		_setPB0
  1179 ;;		_setPB1
  1180 ;;		_setPB2
  1181 ;;		_startTwentySecondsTimer
  1182 ;;		_isFinishedTwentySecondsTimer
  1183 ;;		_vHandle20sTimeron
  1184 ;;		_vHandle20sTimerOut
  1185 ;;		_setPA6
  1186 ;;		_clearPinPortAndTimer
  1187 ;;		_startThreeHoursTimer
  1188 ;;		_isFinishedThreeHoursTimer
  1189 ;;		_clearThreeHoursTimer
  1190 ;;		_setPA2
  1191 ;;		_setPB6
  1192 ;;		_clearAllTimer
  1193 ;; This function is called by:
  1194 ;;		Startup code after reset
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197  0013                     _main:	
  1198                           
  1199                           ;main.c: 682: static unsigned char bCheckTweHour = 0;
  1200                           ;main.c: 688: initPin();
  1201                           
  1202                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1203  0013  158A  278B  118A   	fcall	_initPin
  1204                           
  1205                           ;main.c: 691: TRISB3 = 1;
  1206  0016  1586               	bsf	6,3
  1207                           
  1208                           ;main.c: 693: TRISB5 = 1;
  1209  0017  1686               	bsf	6,5
  1210                           
  1211                           ;main.c: 695: TRISA7 = 1;
  1212  0018  1785               	bsf	5,7
  1213                           
  1214                           ;main.c: 697: TRISA6 = 1;
  1215  0019  1705               	bsf	5,6
  1216                           
  1217                           ;main.c: 699: clock_config();
  1218  001A  158A  26D6  118A   	fcall	_clock_config
  1219                           
  1220                           ;main.c: 700: timer1_config();
  1221  001D  158A  26EF  118A   	fcall	_timer1_config
  1222                           
  1223                           ;main.c: 701: timer1_interrupt_config();
  1224  0020  158A  26CB  118A   	fcall	_timer1_interrupt_config
  1225                           
  1226                           ;main.c: 703: adc_test_init(0,3);
  1227  0023  3003               	movlw	3
  1228  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0025  00A0               	movwf	?_adc_test_init
  1230  0026  3000               	movlw	0
  1231  0027  158A  27EB  118A   	fcall	_adc_test_init
  1232                           
  1233                           ;main.c: 710: adc_start();
  1234  002A  158A  27C6  118A   	fcall	_adc_start
  1235                           
  1236                           ;main.c: 723: startTwentyMinuteTimer(1200);
  1237  002D  30B0               	movlw	176
  1238  002E  00A0               	movwf	?_startTwentyMinuteTimer
  1239  002F  3004               	movlw	4
  1240  0030  00A1               	movwf	?_startTwentyMinuteTimer+1
  1241  0031  158A  2738  118A   	fcall	_startTwentyMinuteTimer
  1242  0034                     l5019:	
  1243  0034  0064               	clrwdt	;#
  1244                           
  1245                           ;main.c: 730: process_AD_Converter_Value();
  1246  0035  158A  27B2  118A   	fcall	_process_AD_Converter_Value
  1247                           
  1248                           ;main.c: 732: if( isPermitSampleTime() )
  1249  0038  118A  27FA  118A   	fcall	_isPermitSampleTime
  1250  003B  3A00               	xorlw	0
  1251  003C  1903               	skipnz
  1252  003D  2834               	goto	l5019
  1253                           
  1254                           ;main.c: 733: {
  1255                           ;main.c: 736: clrSampeTime();
  1256  003E  118A  2002  118A   	fcall	_clrSampeTime
  1257                           
  1258                           ;main.c: 751: switch(enumMainLoopStep)
  1259  0041  2C4D               	goto	l5605
  1260  0042                     l5025:	
  1261                           
  1262                           ;main.c: 754: {
  1263                           ;main.c: 759: static unsigned char ucTimerZeroPoint5s = 0;
  1264                           ;main.c: 761: if(getAdOriginalCh0Value() <= 1950)
  1265  0042  118A  2474  118A   	fcall	_getAdOriginalCh0Value
  1266  0045  3007               	movlw	7
  1267  0046  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1268  0047  309F               	movlw	159
  1269  0048  1903               	skipnz
  1270  0049  0246               	subwf	?_getAdOriginalCh0Value,w
  1271  004A  1803               	skipnc
  1272  004B  284E               	goto	l5029
  1273                           
  1274                           ;main.c: 762: {
  1275                           ;main.c: 763: ucTimerZeroPoint5s++;
  1276  004C  0AEA               	incf	main@ucTimerZeroPoint5s,f
  1277                           
  1278                           ;main.c: 764: }
  1279  004D  284F               	goto	l5031
  1280  004E                     l5029:	
  1281                           
  1282                           ;main.c: 765: else
  1283                           ;main.c: 766: ucTimerZeroPoint5s = 0;
  1284  004E  01EA               	clrf	main@ucTimerZeroPoint5s
  1285  004F                     l5031:	
  1286                           
  1287                           ;main.c: 768: if(ucTimerZeroPoint5s >= 5)
  1288  004F  3005               	movlw	5
  1289  0050  026A               	subwf	main@ucTimerZeroPoint5s,w
  1290  0051  1C03               	skipc
  1291  0052  2856               	goto	l5037
  1292                           
  1293                           ;main.c: 769: {
  1294                           ;main.c: 770: ucTimerZeroPoint5s = 0;
  1295  0053  01EA               	clrf	main@ucTimerZeroPoint5s
  1296                           
  1297                           ;main.c: 771: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1298  0054  01D0               	clrf	_enumMainLoopStep
  1299  0055  0AD0               	incf	_enumMainLoopStep,f
  1300  0056                     l5037:	
  1301                           
  1302                           ;main.c: 772: }
  1303                           ;main.c: 774: if(isFinishedTwentyMinuteTimer())
  1304  0056  158A  2703  118A   	fcall	_isFinishedTwentyMinuteTimer
  1305  0059  3A00               	xorlw	0
  1306  005A  1903               	skipnz
  1307  005B  2834               	goto	l5019
  1308  005C                     l5039:	
  1309                           
  1310                           ;main.c: 775: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1311  005C  3009               	movlw	9
  1312  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1313  005E  00D0               	movwf	_enumMainLoopStep
  1314  005F                     l774:	
  1315                           
  1316                           ;main.c: 776: break;
  1317  005F  2834               	goto	l5019
  1318  0060                     l5041:	
  1319                           
  1320                           ;main.c: 780: {
  1321                           ;main.c: 785: static unsigned char ucTimerZeroPoint3s = 0;
  1322                           ;main.c: 787: static unsigned char ucTimerCntP3s = 0;
  1323                           ;main.c: 790: if(getAdOriginalCh0Value() <= 1950)
  1324  0060  118A  2474  118A   	fcall	_getAdOriginalCh0Value
  1325  0063  3007               	movlw	7
  1326  0064  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1327  0065  309F               	movlw	159
  1328  0066  1903               	skipnz
  1329  0067  0246               	subwf	?_getAdOriginalCh0Value,w
  1330  0068  3003               	movlw	3
  1331  0069  1803               	skipnc
  1332  006A  2874               	goto	L13
  1333                           
  1334                           ;main.c: 791: {
  1335                           ;main.c: 792: ucTimerCntP3s++;
  1336  006B  0ADD               	incf	main@ucTimerCntP3s,f
  1337                           
  1338                           ;main.c: 793: if(ucTimerCntP3s >= 3)
  1339  006C  025D               	subwf	main@ucTimerCntP3s,w
  1340  006D  1C03               	skipc
  1341  006E  2834               	goto	l5019
  1342  006F  3002               	movlw	2
  1343                           
  1344                           ;main.c: 794: {
  1345                           ;main.c: 795: ucTimerCntP3s = 0;
  1346  0070  01DD               	clrf	main@ucTimerCntP3s
  1347                           
  1348                           ;main.c: 797: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1349  0071  00D0               	movwf	_enumMainLoopStep
  1350                           
  1351                           ;main.c: 799: ucTimerZeroPoint3s = 0;
  1352  0072  01E9               	clrf	main@ucTimerZeroPoint3s
  1353  0073  2834               	goto	l5019
  1354  0074                     L13:	
  1355                           
  1356                           ;main.c: 803: else
  1357                           ;main.c: 804: {
  1358                           ;main.c: 805: ucTimerZeroPoint3s++;
  1359  0074  0AE9               	incf	main@ucTimerZeroPoint3s,f
  1360                           
  1361                           ;main.c: 807: if(ucTimerZeroPoint3s >= 3)
  1362  0075  0269               	subwf	main@ucTimerZeroPoint3s,w
  1363  0076  1C03               	skipc
  1364  0077  2834               	goto	l5019
  1365                           
  1366                           ;main.c: 808: {
  1367                           ;main.c: 809: ucTimerZeroPoint3s = 0;
  1368  0078  01E9               	clrf	main@ucTimerZeroPoint3s
  1369                           
  1370                           ;main.c: 811: clearParaFunction1();
  1371  0079  118A  248A  118A   	fcall	_clearParaFunction1
  1372  007C  2834               	goto	l5019
  1373  007D                     l5061:	
  1374                           
  1375                           ;main.c: 819: {
  1376                           ;main.c: 824: static unsigned char ucTimerP5s = 0;
  1377                           ;main.c: 826: setPA3(1);
  1378  007D  3001               	movlw	1
  1379  007E  118A  2622  118A   	fcall	_setPA3
  1380                           
  1381                           ;main.c: 827: setPB4(1);
  1382  0081  3001               	movlw	1
  1383  0082  118A  252E  118A   	fcall	_setPB4
  1384                           
  1385                           ;main.c: 829: if(ucTimerP5s < 5)
  1386  0085  3005               	movlw	5
  1387  0086  0267               	subwf	main@ucTimerP5s,w
  1388  0087  1803               	skipnc
  1389  0088  288B               	goto	l5067
  1390                           
  1391                           ;main.c: 830: ucTimerP5s++;
  1392  0089  0AE7               	incf	main@ucTimerP5s,f
  1393  008A  2834               	goto	l5019
  1394  008B                     l5067:	
  1395  008B  30B0               	movlw	176
  1396                           
  1397                           ;main.c: 831: else
  1398                           ;main.c: 832: {
  1399                           ;main.c: 833: ucTimerP5s = 0;
  1400  008C  01E7               	clrf	main@ucTimerP5s
  1401                           
  1402                           ;main.c: 835: startTwentyMinuteTimer(1200);
  1403  008D  00A0               	movwf	?_startTwentyMinuteTimer
  1404  008E  3004               	movlw	4
  1405  008F  00A1               	movwf	?_startTwentyMinuteTimer+1
  1406  0090  158A  2738  118A   	fcall	_startTwentyMinuteTimer
  1407                           
  1408                           ;main.c: 837: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1409  0093  3003               	movlw	3
  1410  0094  2BBB               	goto	L1
  1411  0095                     l5073:	
  1412                           
  1413                           ;main.c: 844: {
  1414                           ;main.c: 849: static unsigned char ucTimerLessZeroP5s = 0;
  1415                           ;main.c: 851: static unsigned char ucTimerLargeZeroP5s = 0;
  1416                           ;main.c: 854: static unsigned char ucTimerRightP5s = 0;
  1417                           ;main.c: 856: if(getAdOriginalCh6Value() <= 85)
  1418  0095  118A  262B  118A   	fcall	_getAdOriginalCh6Value
  1419  0098  3000               	movlw	0
  1420  0099  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1421  009A  3056               	movlw	86
  1422  009B  1903               	skipnz
  1423  009C  0246               	subwf	?_getAdOriginalCh6Value,w
  1424  009D  1803               	skipnc
  1425  009E  28A2               	goto	l5079
  1426                           
  1427                           ;main.c: 857: {
  1428                           ;main.c: 858: ucTimerLargeZeroP5s = 0;
  1429  009F  01E5               	clrf	main@ucTimerLargeZeroP5s
  1430                           
  1431                           ;main.c: 860: ucTimerLessZeroP5s++;
  1432  00A0  0AE6               	incf	main@ucTimerLessZeroP5s,f
  1433                           
  1434                           ;main.c: 861: }
  1435  00A1  28A5               	goto	l5085
  1436  00A2                     l5079:	
  1437                           
  1438                           ;main.c: 862: else
  1439                           ;main.c: 863: {
  1440                           ;main.c: 864: ucTimerLargeZeroP5s++;
  1441  00A2  0AE5               	incf	main@ucTimerLargeZeroP5s,f
  1442                           
  1443                           ;main.c: 866: ucTimerLessZeroP5s = 0;
  1444  00A3  01E6               	clrf	main@ucTimerLessZeroP5s
  1445                           
  1446                           ;main.c: 868: ucTimerRightP5s = 0;
  1447  00A4  01E8               	clrf	main@ucTimerRightP5s
  1448  00A5                     l5085:	
  1449                           
  1450                           ;main.c: 869: }
  1451                           ;main.c: 871: if(ucTimerLargeZeroP5s >= 3)
  1452  00A5  3003               	movlw	3
  1453  00A6  0265               	subwf	main@ucTimerLargeZeroP5s,w
  1454  00A7  1C03               	skipc
  1455  00A8  28AC               	goto	l5091
  1456  00A9  3004               	movlw	4
  1457                           
  1458                           ;main.c: 872: {
  1459                           ;main.c: 873: ucTimerLargeZeroP5s = 0;
  1460  00AA  01E5               	clrf	main@ucTimerLargeZeroP5s
  1461                           
  1462                           ;main.c: 874: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1463  00AB  28C4               	goto	L2
  1464  00AC                     l5091:	
  1465                           ;main.c: 875: }
  1466                           
  1467                           
  1468                           ;main.c: 876: else if( ucTimerLessZeroP5s >= 3)
  1469  00AC  3003               	movlw	3
  1470  00AD  0266               	subwf	main@ucTimerLessZeroP5s,w
  1471  00AE  1C03               	skipc
  1472  00AF  28C5               	goto	l5105
  1473                           
  1474                           ;main.c: 877: {
  1475                           ;main.c: 879: if(getAdOriginalCh6Value() < 65)
  1476  00B0  118A  262B  118A   	fcall	_getAdOriginalCh6Value
  1477  00B3  3000               	movlw	0
  1478  00B4  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1479  00B5  3041               	movlw	65
  1480  00B6  1903               	skipnz
  1481  00B7  0246               	subwf	?_getAdOriginalCh6Value,w
  1482  00B8  1803               	skipnc
  1483  00B9  28BC               	goto	l5097
  1484                           
  1485                           ;main.c: 880: {
  1486                           ;main.c: 881: ucTimerRightP5s++;
  1487  00BA  0AE8               	incf	main@ucTimerRightP5s,f
  1488                           
  1489                           ;main.c: 882: }
  1490  00BB  28BD               	goto	l5099
  1491  00BC                     l5097:	
  1492                           
  1493                           ;main.c: 883: else
  1494                           ;main.c: 884: {
  1495                           ;main.c: 885: ucTimerRightP5s = 0;
  1496  00BC  01E8               	clrf	main@ucTimerRightP5s
  1497  00BD                     l5099:	
  1498                           
  1499                           ;main.c: 886: }
  1500                           ;main.c: 888: if(ucTimerRightP5s >= 3)
  1501  00BD  3003               	movlw	3
  1502  00BE  0268               	subwf	main@ucTimerRightP5s,w
  1503  00BF  1C03               	skipc
  1504  00C0  28C5               	goto	l5105
  1505  00C1  3008               	movlw	8
  1506                           
  1507                           ;main.c: 889: {
  1508                           ;main.c: 890: ucTimerLargeZeroP5s = 0;
  1509  00C2  01E5               	clrf	main@ucTimerLargeZeroP5s
  1510                           
  1511                           ;main.c: 891: ucTimerRightP5s = 0;
  1512  00C3  01E8               	clrf	main@ucTimerRightP5s
  1513  00C4                     L2:	
  1514                           ;main.c: 892: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1515                           
  1516  00C4  00D0               	movwf	_enumMainLoopStep
  1517  00C5                     l5105:	
  1518                           ;main.c: 899: else
  1519                           ;main.c: 900: {
  1520                           ;main.c: 901: ;
  1521                           
  1522                           ;main.c: 893: }
  1523                           
  1524                           
  1525                           ;main.c: 902: }
  1526                           ;main.c: 904: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1527  00C5  0850               	movf	_enumMainLoopStep,w
  1528  00C6  3A08               	xorlw	8
  1529  00C7  1903               	skipnz
  1530  00C8  28CD               	goto	l5109
  1531  00C9  0850               	movf	_enumMainLoopStep,w
  1532  00CA  3A04               	xorlw	4
  1533  00CB  1D03               	skipz
  1534  00CC  2834               	goto	l5019
  1535  00CD                     l5109:	
  1536                           
  1537                           ;main.c: 905: {
  1538                           ;main.c: 906: ucTimerRightP5s = 0;
  1539  00CD  01E8               	clrf	main@ucTimerRightP5s
  1540                           
  1541                           ;main.c: 907: ucTimerLargeZeroP5s = 0;
  1542  00CE  01E5               	clrf	main@ucTimerLargeZeroP5s
  1543                           
  1544                           ;main.c: 908: ucTimerLessZeroP5s = 0;
  1545  00CF  01E6               	clrf	main@ucTimerLessZeroP5s
  1546  00D0  2834               	goto	l5019
  1547  00D1                     l5111:	
  1548                           
  1549                           ;main.c: 916: {
  1550                           ;main.c: 922: startTwelveHourTimer(36000);
  1551  00D1  30A0               	movlw	160
  1552  00D2  00A0               	movwf	?_startTwelveHourTimer
  1553  00D3  308C               	movlw	140
  1554  00D4  00A1               	movwf	?_startTwelveHourTimer+1
  1555  00D5  158A  274C  118A   	fcall	_startTwelveHourTimer
  1556                           
  1557                           ;main.c: 923: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1558  00D8  3005               	movlw	5
  1559  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1560  00DA  00D0               	movwf	_enumMainLoopStep
  1561                           
  1562                           ;main.c: 925: bCheckTweHour = 0;
  1563  00DB  01D5               	clrf	main@bCheckTweHour
  1564                           
  1565                           ;main.c: 927: break;
  1566  00DC  2834               	goto	l5019
  1567  00DD                     l5117:	
  1568                           
  1569                           ;main.c: 931: {
  1570                           ;main.c: 935: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1571  00DD  158A  270F  118A   	fcall	_isFinishedTwelveHoursTimer
  1572  00E0  3A00               	xorlw	0
  1573  00E1  1903               	skipnz
  1574  00E2  2B45               	goto	l5499
  1575  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1576  00E4  08D5               	movf	main@bCheckTweHour,f
  1577  00E5  1D03               	skipz
  1578  00E6  2B45               	goto	l5499
  1579                           
  1580                           ;main.c: 936: {
  1581                           ;main.c: 937: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1582  00E7  3009               	movlw	9
  1583  00E8  00D0               	movwf	_enumMainLoopStep
  1584                           
  1585                           ;main.c: 938: bCheckTweHour = 1;
  1586  00E9  01D5               	clrf	main@bCheckTweHour
  1587  00EA  0AD5               	incf	main@bCheckTweHour,f
  1588                           
  1589                           ;main.c: 939: }
  1590  00EB  2834               	goto	l5019
  1591  00EC                     l815:	
  1592                           ;main.c: 944: {
  1593                           ;main.c: 945: case ADC4_STEP_INIT:
  1594                           
  1595                           
  1596                           ;main.c: 946: {
  1597                           ;main.c: 951: ucADC4_Step = ADC4_STEP_FIRST;
  1598  00EC  01D3               	clrf	_ucADC4_Step
  1599  00ED  0AD3               	incf	_ucADC4_Step,f
  1600                           
  1601                           ;main.c: 952: break;
  1602  00EE  2834               	goto	l5019
  1603  00EF                     l5125:	
  1604                           
  1605                           ;main.c: 966: uiCh5Value = getAdOriginalCh5Value();
  1606  00EF  118A  246A  118A   	fcall	_getAdOriginalCh5Value
  1607  00F2  0847               	movf	?_getAdOriginalCh5Value+1,w
  1608  00F3  00C9               	movwf	main@uiCh5Value+1
  1609  00F4  0846               	movf	?_getAdOriginalCh5Value,w
  1610  00F5  00C8               	movwf	main@uiCh5Value
  1611                           
  1612                           ;main.c: 968: if( 0 == bInitFlag)
  1613  00F6  08D6               	movf	main@bInitFlag,f
  1614  00F7  1D03               	skipz
  1615  00F8  28FF               	goto	l5135
  1616                           
  1617                           ;main.c: 969: {
  1618                           ;main.c: 970: bInitFlag = 1;
  1619  00F9  01D6               	clrf	main@bInitFlag
  1620  00FA  0AD6               	incf	main@bInitFlag,f
  1621                           
  1622                           ;main.c: 971: uiOldValue = uiCh5Value;
  1623  00FB  0849               	movf	main@uiCh5Value+1,w
  1624  00FC  00CB               	movwf	main@uiOldValue+1
  1625  00FD  0848               	movf	main@uiCh5Value,w
  1626  00FE  00CA               	movwf	main@uiOldValue
  1627  00FF                     l5135:	
  1628                           
  1629                           ;main.c: 972: }
  1630                           ;main.c: 981: if(LESS_THAN_1911 == ucChannel5Type)
  1631  00FF  08D4               	movf	_ucChannel5Type,f
  1632  0100  1D03               	skipz
  1633  0101  2907               	goto	l5141
  1634                           
  1635                           ;main.c: 982: {
  1636                           ;main.c: 983: uiMinValue = 0;
  1637  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1638  0103  308B               	movlw	139
  1639  0104  01AA               	clrf	main@uiMinValue^(0+128)
  1640  0105  01AB               	clrf	(main@uiMinValue+1)^(0+128)
  1641                           
  1642                           ;main.c: 984: uiMaxValue = 1931;
  1643  0106  290F               	goto	L9
  1644  0107                     l5141:	
  1645                           ;main.c: 985: }
  1646                           
  1647                           
  1648                           ;main.c: 986: else if(BETWEEN_1911_AND_2067 == ucChannel5Type)
  1649  0107  0B54               	decfsz	_ucChannel5Type,w
  1650  0108  2912               	goto	l5145
  1651                           
  1652                           ;main.c: 987: {
  1653                           ;main.c: 988: uiMinValue = 1931 - 40;
  1654  0109  3063               	movlw	99
  1655  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1656  010B  00AA               	movwf	main@uiMinValue^(0+128)
  1657  010C  3007               	movlw	7
  1658  010D  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1659                           
  1660                           ;main.c: 989: uiMaxValue = 2047;
  1661  010E  30FF               	movlw	255
  1662  010F                     L9:	
  1663  010F  00A8               	movwf	main@uiMaxValue^(0+128)
  1664  0110  3007               	movlw	7
  1665  0111  292B               	goto	L3
  1666  0112                     l5145:	
  1667                           ;main.c: 990: }
  1668                           
  1669                           
  1670                           ;main.c: 991: else if(BETWEEN_2067_AND_2204 == ucChannel5Type)
  1671  0112  0854               	movf	_ucChannel5Type,w
  1672  0113  3A02               	xorlw	2
  1673  0114  1D03               	skipz
  1674  0115  291D               	goto	l5149
  1675                           
  1676                           ;main.c: 992: {
  1677                           ;main.c: 993: uiMinValue = 2047 - 40;
  1678  0116  30D7               	movlw	215
  1679  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0118  00AA               	movwf	main@uiMinValue^(0+128)
  1681  0119  3007               	movlw	7
  1682  011A  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1683                           
  1684                           ;main.c: 994: uiMaxValue = 2164;
  1685  011B  3074               	movlw	116
  1686  011C  2929               	goto	L10
  1687  011D                     l5149:	
  1688                           ;main.c: 995: }
  1689                           
  1690                           
  1691                           ;main.c: 996: else if(BETWEEN_2204_AND_2340 == ucChannel5Type)
  1692  011D  0854               	movf	_ucChannel5Type,w
  1693  011E  3A03               	xorlw	3
  1694  011F  1D03               	skipz
  1695  0120  2923               	goto	l5153
  1696                           
  1697                           ;main.c: 997: {
  1698                           ;main.c: 998: uiMinValue = 2164 - 40;
  1699  0121  304C               	movlw	76
  1700  0122  2924               	goto	L11
  1701  0123                     l5153:	
  1702                           ;main.c: 1000: }
  1703                           
  1704                           ;main.c: 999: uiMaxValue = 2281;
  1705                           
  1706                           
  1707                           ;main.c: 1001: else
  1708                           ;main.c: 1002: {
  1709                           ;main.c: 1003: uiMinValue = 2281 - 40;
  1710  0123  30C1               	movlw	193
  1711  0124                     L11:	
  1712  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0125  00AA               	movwf	main@uiMinValue^(0+128)
  1714  0126  3008               	movlw	8
  1715  0127  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1716                           
  1717                           ;main.c: 1004: uiMaxValue = 2281;
  1718  0128  30E9               	movlw	233
  1719  0129                     L10:	
  1720  0129  00A8               	movwf	main@uiMaxValue^(0+128)
  1721  012A  3008               	movlw	8
  1722  012B                     L3:	
  1723  012B  00A9               	movwf	(main@uiMaxValue^(0+128)+1)
  1724                           
  1725                           ;main.c: 1005: }
  1726                           ;main.c: 1008: if(( uiCh5Value < uiMinValue )
  1727                           ;main.c: 1009: || ( uiCh5Value > uiMaxValue ))
  1728  012C  082B               	movf	(main@uiMinValue+1)^(0+128),w
  1729  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1730  012E  0249               	subwf	main@uiCh5Value+1,w
  1731  012F  1D03               	skipz
  1732  0130  2935               	goto	u2435
  1733  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1734  0132  082A               	movf	main@uiMinValue^(0+128),w
  1735  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0134  0248               	subwf	main@uiCh5Value,w
  1737  0135                     u2435:	
  1738  0135  1C03               	skipc
  1739  0136  2942               	goto	l5157
  1740  0137  0849               	movf	main@uiCh5Value+1,w
  1741  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0139  0229               	subwf	(main@uiMaxValue+1)^(0+128),w
  1743  013A  1D03               	skipz
  1744  013B  2940               	goto	u2445
  1745  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1746  013D  0848               	movf	main@uiCh5Value,w
  1747  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1748  013F  0228               	subwf	main@uiMaxValue^(0+128),w
  1749  0140                     u2445:	
  1750  0140  1803               	skipnc
  1751  0141  2947               	goto	l835
  1752  0142                     l5157:	
  1753                           
  1754                           ;main.c: 1010: {
  1755                           ;main.c: 1011: uiOldValue = uiCh5Value;
  1756  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0143  0849               	movf	main@uiCh5Value+1,w
  1758  0144  00CB               	movwf	main@uiOldValue+1
  1759  0145  0848               	movf	main@uiCh5Value,w
  1760  0146  00CA               	movwf	main@uiOldValue
  1761  0147                     l835:	
  1762                           
  1763                           ;main.c: 1012: }
  1764                           ;main.c: 1014: if( uiOldValue < 1931 )
  1765  0147  3007               	movlw	7
  1766  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0149  024B               	subwf	main@uiOldValue+1,w
  1768  014A  308B               	movlw	139
  1769  014B  1903               	skipnz
  1770  014C  024A               	subwf	main@uiOldValue,w
  1771  014D  1803               	skipnc
  1772  014E  2951               	goto	l5161
  1773                           
  1774                           ;main.c: 1015: ucChannel5Type = LESS_THAN_1911;
  1775  014F  01D4               	clrf	_ucChannel5Type
  1776  0150  296F               	goto	l839
  1777  0151                     l5161:	
  1778                           
  1779                           ;main.c: 1016: else if( uiOldValue < 2047 )
  1780  0151  3007               	movlw	7
  1781  0152  024B               	subwf	main@uiOldValue+1,w
  1782  0153  30FF               	movlw	255
  1783  0154  1903               	skipnz
  1784  0155  024A               	subwf	main@uiOldValue,w
  1785  0156  1803               	skipnc
  1786  0157  295B               	goto	l5165
  1787                           
  1788                           ;main.c: 1017: ucChannel5Type = BETWEEN_1911_AND_2067;
  1789  0158  01D4               	clrf	_ucChannel5Type
  1790  0159  0AD4               	incf	_ucChannel5Type,f
  1791  015A  296F               	goto	l839
  1792  015B                     l5165:	
  1793                           
  1794                           ;main.c: 1018: else if( uiOldValue < 2164 )
  1795  015B  3008               	movlw	8
  1796  015C  024B               	subwf	main@uiOldValue+1,w
  1797  015D  3074               	movlw	116
  1798  015E  1903               	skipnz
  1799  015F  024A               	subwf	main@uiOldValue,w
  1800  0160  1803               	skipnc
  1801  0161  2964               	goto	l5169
  1802                           
  1803                           ;main.c: 1019: ucChannel5Type = BETWEEN_2067_AND_2204;
  1804  0162  3002               	movlw	2
  1805  0163  296E               	goto	L4
  1806  0164                     l5169:	
  1807                           
  1808                           ;main.c: 1020: else if( uiOldValue < 2281 )
  1809  0164  3008               	movlw	8
  1810  0165  024B               	subwf	main@uiOldValue+1,w
  1811  0166  30E9               	movlw	233
  1812  0167  1903               	skipnz
  1813  0168  024A               	subwf	main@uiOldValue,w
  1814  0169  1803               	skipnc
  1815  016A  296D               	goto	l5173
  1816                           
  1817                           ;main.c: 1021: ucChannel5Type = BETWEEN_2204_AND_2340;
  1818  016B  3003               	movlw	3
  1819  016C  296E               	goto	L4
  1820  016D                     l5173:	
  1821                           
  1822                           ;main.c: 1022: else
  1823                           ;main.c: 1023: ucChannel5Type = MORE_THAN_2340;
  1824  016D  3004               	movlw	4
  1825  016E                     L4:	
  1826  016E  00D4               	movwf	_ucChannel5Type
  1827  016F                     l839:	
  1828                           
  1829                           ;main.c: 1025: ucADC4_Step = ADC4_STEP_SECOND;
  1830  016F  3002               	movlw	2
  1831  0170  2B38               	goto	L6
  1832  0171                     l5175:	
  1833                           ;main.c: 1026: break;
  1834                           
  1835                           
  1836                           ;main.c: 1045: {
  1837                           ;main.c: 1046: setPA1(1);
  1838  0171  3001               	movlw	1
  1839  0172  118A  24C1  118A   	fcall	_setPA1
  1840  0175                     l5177:	
  1841                           
  1842                           ;main.c: 1047: ucLoaderStep++;
  1843  0175  0AD8               	incf	main@ucLoaderStep,f
  1844                           
  1845                           ;main.c: 1048: break;
  1846  0176  2834               	goto	l5019
  1847  0177                     l5179:	
  1848                           
  1849                           ;main.c: 1052: {
  1850                           ;main.c: 1053: if(ucTimerDelay >= 5)
  1851  0177  3005               	movlw	5
  1852  0178  025E               	subwf	main@ucTimerDelay,w
  1853  0179  1C03               	skipc
  1854  017A  2981               	goto	l5187
  1855                           
  1856                           ;main.c: 1054: {
  1857                           ;main.c: 1055: setPA0(1);
  1858  017B  3001               	movlw	1
  1859  017C  118A  24B8  118A   	fcall	_setPA0
  1860  017F                     l5183:	
  1861                           
  1862                           ;main.c: 1056: ucTimerDelay = 0;
  1863  017F  01DE               	clrf	main@ucTimerDelay
  1864  0180  2975               	goto	l5177
  1865  0181                     l5187:	
  1866                           
  1867                           ;main.c: 1059: else
  1868                           ;main.c: 1060: ucTimerDelay++;
  1869  0181  0ADE               	incf	main@ucTimerDelay,f
  1870  0182  2834               	goto	l5019
  1871  0183                     l5189:	
  1872                           
  1873                           ;main.c: 1065: {
  1874                           ;main.c: 1066: if(ucTimerDelay >= 5)
  1875  0183  3005               	movlw	5
  1876  0184  025E               	subwf	main@ucTimerDelay,w
  1877  0185  1C03               	skipc
  1878  0186  2981               	goto	l5187
  1879                           
  1880                           ;main.c: 1067: {
  1881                           ;main.c: 1068: setPB0(1);
  1882  0187  3001               	movlw	1
  1883  0188  118A  24A0  118A   	fcall	_setPB0
  1884  018B  297F               	goto	l5183
  1885  018C                     l5199:	
  1886                           
  1887                           ;main.c: 1079: {
  1888                           ;main.c: 1080: if(ucTimerDelay >= 5)
  1889  018C  3005               	movlw	5
  1890  018D  025E               	subwf	main@ucTimerDelay,w
  1891  018E  1C03               	skipc
  1892  018F  2981               	goto	l5187
  1893                           
  1894                           ;main.c: 1081: {
  1895                           ;main.c: 1082: setPB1(1);
  1896  0190  3001               	movlw	1
  1897  0191  118A  24A8  118A   	fcall	_setPB1
  1898  0194  297F               	goto	l5183
  1899  0195                     l5209:	
  1900                           
  1901                           ;main.c: 1092: {
  1902                           ;main.c: 1093: if(ucTimerDelay >= 5)
  1903  0195  3005               	movlw	5
  1904  0196  025E               	subwf	main@ucTimerDelay,w
  1905  0197  1C03               	skipc
  1906  0198  2981               	goto	l5187
  1907                           
  1908                           ;main.c: 1094: {
  1909                           ;main.c: 1095: setPB2(1);
  1910  0199  3001               	movlw	1
  1911  019A  118A  24B0  118A   	fcall	_setPB2
  1912  019D  297F               	goto	l5183
  1913  019E                     l5219:	
  1914                           
  1915                           ;main.c: 1105: {
  1916                           ;main.c: 1106: if(ucTimerDelay >= 5)
  1917  019E  3005               	movlw	5
  1918  019F  025E               	subwf	main@ucTimerDelay,w
  1919  01A0  1C03               	skipc
  1920  01A1  2981               	goto	l5187
  1921                           
  1922                           ;main.c: 1107: {
  1923                           ;main.c: 1108: setPA1(0);
  1924  01A2  3000               	movlw	0
  1925  01A3  118A  24C1  118A   	fcall	_setPA1
  1926                           
  1927                           ;main.c: 1109: setPA0(0);
  1928  01A6  3000               	movlw	0
  1929  01A7  118A  24B8  118A   	fcall	_setPA0
  1930                           
  1931                           ;main.c: 1110: setPB0(0);
  1932  01AA  3000               	movlw	0
  1933  01AB  118A  24A0  118A   	fcall	_setPB0
  1934                           
  1935                           ;main.c: 1111: setPB1(0);
  1936  01AE  3000               	movlw	0
  1937  01AF  118A  24A8  118A   	fcall	_setPB1
  1938                           
  1939                           ;main.c: 1112: setPB2(0);
  1940  01B2  3000               	movlw	0
  1941  01B3  118A  24B0  118A   	fcall	_setPB2
  1942  01B6  297F               	goto	l5183
  1943  01B7                     l5229:	
  1944                           
  1945                           ;main.c: 1122: {
  1946                           ;main.c: 1123: if(ucTimerDelay >= 1)
  1947  01B7  085E               	movf	main@ucTimerDelay,w
  1948  01B8  1903               	btfsc	3,2
  1949  01B9  2981               	goto	l5187
  1950                           
  1951                           ;main.c: 1124: {
  1952                           ;main.c: 1125: ucTimerDelay = 0;
  1953  01BA  01DE               	clrf	main@ucTimerDelay
  1954                           
  1955                           ;main.c: 1127: ucLoaderStep = 0;
  1956  01BB  01D8               	clrf	main@ucLoaderStep
  1957  01BC                     l5233:	
  1958                           
  1959                           ;main.c: 1128: ucADC4_Step = ADC4_STEP_THIRD;
  1960  01BC  3003               	movlw	3
  1961  01BD  2B38               	goto	L6
  1962  01BE                     l5239:	
  1963                           ;main.c: 1129: }
  1964                           
  1965  01BE  0858               	movf	main@ucLoaderStep,w
  1966                           
  1967                           ; Switch size 1, requested type "space"
  1968                           ; Number of cases is 7, Range of values is 0 to 6
  1969                           ; switch strategies available:
  1970                           ; Name         Instructions Cycles
  1971                           ; direct_byte           21     7 (fixed)
  1972                           ; simple_byte           22    12 (average)
  1973                           ; jumptable            260     6 (fixed)
  1974                           ; rangetable            11     6 (fixed)
  1975                           ; spacedrange           20     9 (fixed)
  1976                           ; locatedrange           7     3 (fixed)
  1977                           ;	Chosen strategy is direct_byte
  1978  01BF  0084               	movwf	4
  1979  01C0  3007               	movlw	7
  1980  01C1  0204               	subwf	4,w
  1981  01C2  1803               	skipnc
  1982  01C3  2834               	goto	l5019
  1983  01C4  3008               	movlw	high S5823
  1984  01C5  008A               	movwf	10
  1985  01C6  1003               	clrc
  1986  01C7  0D04               	rlf	4,w
  1987  01C8  3E00               	addlw	low S5823
  1988  01C9  0082               	movwf	2
  1989  01CA                     l5241:	
  1990                           
  1991                           ;main.c: 1150: {
  1992                           ;main.c: 1151: setPA1(1);
  1993  01CA  3001               	movlw	1
  1994  01CB  118A  24C1  118A   	fcall	_setPA1
  1995  01CE                     l5243:	
  1996                           
  1997                           ;main.c: 1152: ucLoaderStep1++;
  1998  01CE  0AD9               	incf	main@ucLoaderStep1,f
  1999                           
  2000                           ;main.c: 1153: break;
  2001  01CF  2834               	goto	l5019
  2002  01D0                     l5245:	
  2003                           
  2004                           ;main.c: 1157: {
  2005                           ;main.c: 1158: if(ucTimerDelay1 >= 5)
  2006  01D0  3005               	movlw	5
  2007  01D1  025F               	subwf	main@ucTimerDelay1,w
  2008  01D2  1C03               	skipc
  2009  01D3  29DA               	goto	l5253
  2010                           
  2011                           ;main.c: 1159: {
  2012                           ;main.c: 1160: setPA0(1);
  2013  01D4  3001               	movlw	1
  2014  01D5  118A  24B8  118A   	fcall	_setPA0
  2015  01D8                     l5249:	
  2016                           
  2017                           ;main.c: 1161: ucTimerDelay1 = 0;
  2018  01D8  01DF               	clrf	main@ucTimerDelay1
  2019  01D9  29CE               	goto	l5243
  2020  01DA                     l5253:	
  2021                           
  2022                           ;main.c: 1164: else
  2023                           ;main.c: 1165: ucTimerDelay1++;
  2024  01DA  0ADF               	incf	main@ucTimerDelay1,f
  2025  01DB  2834               	goto	l5019
  2026  01DC                     l5255:	
  2027                           
  2028                           ;main.c: 1170: {
  2029                           ;main.c: 1171: if(ucTimerDelay1 >= 5)
  2030  01DC  3005               	movlw	5
  2031  01DD  025F               	subwf	main@ucTimerDelay1,w
  2032  01DE  1C03               	skipc
  2033  01DF  29DA               	goto	l5253
  2034                           
  2035                           ;main.c: 1172: {
  2036                           ;main.c: 1173: setPB0(1);
  2037  01E0  3001               	movlw	1
  2038  01E1  118A  24A0  118A   	fcall	_setPB0
  2039  01E4  29D8               	goto	l5249
  2040  01E5                     l5265:	
  2041                           
  2042                           ;main.c: 1183: {
  2043                           ;main.c: 1184: if(ucTimerDelay1 >= 5)
  2044  01E5  3005               	movlw	5
  2045  01E6  025F               	subwf	main@ucTimerDelay1,w
  2046  01E7  1C03               	skipc
  2047  01E8  29DA               	goto	l5253
  2048                           
  2049                           ;main.c: 1185: {
  2050                           ;main.c: 1187: setPB1(1);
  2051  01E9  3001               	movlw	1
  2052  01EA  118A  24A8  118A   	fcall	_setPB1
  2053  01ED  29D8               	goto	l5249
  2054  01EE                     l5275:	
  2055                           
  2056                           ;main.c: 1197: {
  2057                           ;main.c: 1198: if(ucTimerDelay1 >= 5)
  2058  01EE  3005               	movlw	5
  2059  01EF  025F               	subwf	main@ucTimerDelay1,w
  2060  01F0  1C03               	skipc
  2061  01F1  29DA               	goto	l5253
  2062                           
  2063                           ;main.c: 1199: {
  2064                           ;main.c: 1201: setPB2(1);
  2065  01F2  3001               	movlw	1
  2066  01F3  118A  24B0  118A   	fcall	_setPB2
  2067  01F6  29D8               	goto	l5249
  2068  01F7                     l5285:	
  2069                           
  2070                           ;main.c: 1211: {
  2071                           ;main.c: 1212: if(ucTimerDelay1 >= 5)
  2072  01F7  3005               	movlw	5
  2073  01F8  025F               	subwf	main@ucTimerDelay1,w
  2074  01F9  1C03               	skipc
  2075  01FA  29DA               	goto	l5253
  2076                           
  2077                           ;main.c: 1213: {
  2078                           ;main.c: 1214: setPA0(0);
  2079  01FB  3000               	movlw	0
  2080  01FC  118A  24B8  118A   	fcall	_setPA0
  2081                           
  2082                           ;main.c: 1216: setPB0(0);
  2083  01FF  3000               	movlw	0
  2084  0200  118A  24A0  118A   	fcall	_setPB0
  2085                           
  2086                           ;main.c: 1218: setPB1(0);
  2087  0203  3000               	movlw	0
  2088  0204  118A  24A8  118A   	fcall	_setPB1
  2089                           
  2090                           ;main.c: 1220: setPB2(0);
  2091  0207  3000               	movlw	0
  2092  0208  118A  24B0  118A   	fcall	_setPB2
  2093  020B  29D8               	goto	l5249
  2094  020C                     l5295:	
  2095                           
  2096                           ;main.c: 1230: {
  2097                           ;main.c: 1231: if(ucTimerDelay1 >= 1)
  2098  020C  085F               	movf	main@ucTimerDelay1,w
  2099  020D  1903               	btfsc	3,2
  2100  020E  29DA               	goto	l5253
  2101                           
  2102                           ;main.c: 1232: {
  2103                           ;main.c: 1233: ucTimerDelay1 = 0;
  2104  020F  01DF               	clrf	main@ucTimerDelay1
  2105                           
  2106                           ;main.c: 1235: ucLoaderStep1 = 0;
  2107  0210  01D9               	clrf	main@ucLoaderStep1
  2108  0211  29BC               	goto	l5233
  2109  0212                     l5305:	
  2110  0212  0859               	movf	main@ucLoaderStep1,w
  2111                           
  2112                           ; Switch size 1, requested type "space"
  2113                           ; Number of cases is 7, Range of values is 0 to 6
  2114                           ; switch strategies available:
  2115                           ; Name         Instructions Cycles
  2116                           ; direct_byte           21     7 (fixed)
  2117                           ; simple_byte           22    12 (average)
  2118                           ; jumptable            260     6 (fixed)
  2119                           ; rangetable            11     6 (fixed)
  2120                           ; spacedrange           20     9 (fixed)
  2121                           ; locatedrange           7     3 (fixed)
  2122                           ;	Chosen strategy is direct_byte
  2123  0213  0084               	movwf	4
  2124  0214  3007               	movlw	7
  2125  0215  0204               	subwf	4,w
  2126  0216  1803               	skipnc
  2127  0217  2834               	goto	l5019
  2128  0218  3008               	movlw	high S5825
  2129  0219  008A               	movwf	10
  2130  021A  1003               	clrc
  2131  021B  0D04               	rlf	4,w
  2132  021C  3E0E               	addlw	low S5825
  2133  021D  0082               	movwf	2
  2134  021E                     l5307:	
  2135                           
  2136                           ;main.c: 1259: {
  2137                           ;main.c: 1261: setPA1(1);
  2138  021E  3001               	movlw	1
  2139  021F  118A  24C1  118A   	fcall	_setPA1
  2140                           
  2141                           ;main.c: 1263: setPA0(1);
  2142  0222  3001               	movlw	1
  2143  0223  118A  24B8  118A   	fcall	_setPA0
  2144  0226                     l5309:	
  2145                           
  2146                           ;main.c: 1264: ucLoaderStep2++;
  2147  0226  0ADA               	incf	main@ucLoaderStep2,f
  2148                           
  2149                           ;main.c: 1265: break;
  2150  0227  2834               	goto	l5019
  2151  0228                     l5311:	
  2152                           
  2153                           ;main.c: 1269: {
  2154                           ;main.c: 1270: if(ucTimerDelay2 >= 5)
  2155  0228  3005               	movlw	5
  2156  0229  0260               	subwf	main@ucTimerDelay2,w
  2157  022A  1C03               	skipc
  2158  022B  2A32               	goto	l5319
  2159                           
  2160                           ;main.c: 1271: {
  2161                           ;main.c: 1273: setPB0(1);
  2162  022C  3001               	movlw	1
  2163  022D  118A  24A0  118A   	fcall	_setPB0
  2164  0230                     l5315:	
  2165                           
  2166                           ;main.c: 1274: ucTimerDelay2 = 0;
  2167  0230  01E0               	clrf	main@ucTimerDelay2
  2168  0231  2A26               	goto	l5309
  2169  0232                     l5319:	
  2170                           
  2171                           ;main.c: 1277: else
  2172                           ;main.c: 1278: ucTimerDelay2++;
  2173  0232  0AE0               	incf	main@ucTimerDelay2,f
  2174  0233  2834               	goto	l5019
  2175  0234                     l5321:	
  2176                           
  2177                           ;main.c: 1283: {
  2178                           ;main.c: 1284: if(ucTimerDelay2 >= 5)
  2179  0234  3005               	movlw	5
  2180  0235  0260               	subwf	main@ucTimerDelay2,w
  2181  0236  1C03               	skipc
  2182  0237  2A32               	goto	l5319
  2183                           
  2184                           ;main.c: 1285: {
  2185                           ;main.c: 1287: setPB1(1);
  2186  0238  3001               	movlw	1
  2187  0239  118A  24A8  118A   	fcall	_setPB1
  2188  023C  2A30               	goto	l5315
  2189  023D                     l5331:	
  2190                           
  2191                           ;main.c: 1297: {
  2192                           ;main.c: 1298: if(ucTimerDelay2 >= 5)
  2193  023D  3005               	movlw	5
  2194  023E  0260               	subwf	main@ucTimerDelay2,w
  2195  023F  1C03               	skipc
  2196  0240  2A32               	goto	l5319
  2197                           
  2198                           ;main.c: 1299: {
  2199                           ;main.c: 1301: setPB2(1);
  2200  0241  3001               	movlw	1
  2201  0242  118A  24B0  118A   	fcall	_setPB2
  2202  0245  2A30               	goto	l5315
  2203  0246                     l5341:	
  2204                           
  2205                           ;main.c: 1311: {
  2206                           ;main.c: 1312: if(ucTimerDelay2 >= 5)
  2207  0246  3005               	movlw	5
  2208  0247  0260               	subwf	main@ucTimerDelay2,w
  2209  0248  1C03               	skipc
  2210  0249  2A32               	goto	l5319
  2211                           
  2212                           ;main.c: 1313: {
  2213                           ;main.c: 1316: setPB0(0);
  2214  024A  3000               	movlw	0
  2215  024B  118A  24A0  118A   	fcall	_setPB0
  2216                           
  2217                           ;main.c: 1318: setPB1(0);
  2218  024E  3000               	movlw	0
  2219  024F  118A  24A8  118A   	fcall	_setPB1
  2220                           
  2221                           ;main.c: 1320: setPB2(0);
  2222  0252  3000               	movlw	0
  2223  0253  118A  24B0  118A   	fcall	_setPB2
  2224  0256  2A30               	goto	l5315
  2225  0257                     l5351:	
  2226                           
  2227                           ;main.c: 1330: {
  2228                           ;main.c: 1331: if(ucTimerDelay2 >= 1)
  2229  0257  0860               	movf	main@ucTimerDelay2,w
  2230  0258  1903               	btfsc	3,2
  2231  0259  2A32               	goto	l5319
  2232                           
  2233                           ;main.c: 1332: {
  2234                           ;main.c: 1333: ucTimerDelay2 = 0;
  2235  025A  01E0               	clrf	main@ucTimerDelay2
  2236                           
  2237                           ;main.c: 1335: ucLoaderStep2 = 0;
  2238  025B  01DA               	clrf	main@ucLoaderStep2
  2239  025C  29BC               	goto	l5233
  2240  025D                     l5361:	
  2241  025D  085A               	movf	main@ucLoaderStep2,w
  2242                           
  2243                           ; Switch size 1, requested type "space"
  2244                           ; Number of cases is 6, Range of values is 0 to 5
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; direct_byte           19     7 (fixed)
  2248                           ; simple_byte           19    10 (average)
  2249                           ; jumptable            260     6 (fixed)
  2250                           ; rangetable            10     6 (fixed)
  2251                           ; spacedrange           18     9 (fixed)
  2252                           ; locatedrange           6     3 (fixed)
  2253                           ;	Chosen strategy is direct_byte
  2254  025E  0084               	movwf	4
  2255  025F  3006               	movlw	6
  2256  0260  0204               	subwf	4,w
  2257  0261  1803               	skipnc
  2258  0262  2834               	goto	l5019
  2259  0263  3008               	movlw	high S5827
  2260  0264  008A               	movwf	10
  2261  0265  1003               	clrc
  2262  0266  0D04               	rlf	4,w
  2263  0267  3E1C               	addlw	low S5827
  2264  0268  0082               	movwf	2
  2265  0269                     l5363:	
  2266                           
  2267                           ;main.c: 1359: {
  2268                           ;main.c: 1361: setPB0(1);
  2269  0269  3001               	movlw	1
  2270  026A  118A  24A0  118A   	fcall	_setPB0
  2271                           
  2272                           ;main.c: 1363: setPA0(1);
  2273  026D  3001               	movlw	1
  2274  026E  118A  24B8  118A   	fcall	_setPA0
  2275                           
  2276                           ;main.c: 1365: setPA1(1);
  2277  0271  3001               	movlw	1
  2278  0272  118A  24C1  118A   	fcall	_setPA1
  2279  0275                     l5365:	
  2280                           
  2281                           ;main.c: 1366: ucLoaderStep3++;
  2282  0275  0ADB               	incf	main@ucLoaderStep3,f
  2283                           
  2284                           ;main.c: 1367: break;
  2285  0276  2834               	goto	l5019
  2286  0277                     l5367:	
  2287                           
  2288                           ;main.c: 1371: {
  2289                           ;main.c: 1372: if(ucTimerDelay3 >= 5)
  2290  0277  3005               	movlw	5
  2291  0278  0261               	subwf	main@ucTimerDelay3,w
  2292  0279  1C03               	skipc
  2293  027A  2A81               	goto	l5375
  2294                           
  2295                           ;main.c: 1373: {
  2296                           ;main.c: 1375: setPB1(1);
  2297  027B  3001               	movlw	1
  2298  027C  118A  24A8  118A   	fcall	_setPB1
  2299  027F                     l5371:	
  2300                           
  2301                           ;main.c: 1376: ucTimerDelay3 = 0;
  2302  027F  01E1               	clrf	main@ucTimerDelay3
  2303  0280  2A75               	goto	l5365
  2304  0281                     l5375:	
  2305                           
  2306                           ;main.c: 1379: else
  2307                           ;main.c: 1380: ucTimerDelay3++;
  2308  0281  0AE1               	incf	main@ucTimerDelay3,f
  2309  0282  2834               	goto	l5019
  2310  0283                     l5377:	
  2311                           
  2312                           ;main.c: 1385: {
  2313                           ;main.c: 1386: if(ucTimerDelay3 >= 5)
  2314  0283  3005               	movlw	5
  2315  0284  0261               	subwf	main@ucTimerDelay3,w
  2316  0285  1C03               	skipc
  2317  0286  2A81               	goto	l5375
  2318                           
  2319                           ;main.c: 1387: {
  2320                           ;main.c: 1389: setPB2(1);
  2321  0287  3001               	movlw	1
  2322  0288  118A  24B0  118A   	fcall	_setPB2
  2323  028B  2A7F               	goto	l5371
  2324  028C                     l5387:	
  2325                           
  2326                           ;main.c: 1400: {
  2327                           ;main.c: 1401: if(ucTimerDelay3 >= 5)
  2328  028C  3005               	movlw	5
  2329  028D  0261               	subwf	main@ucTimerDelay3,w
  2330  028E  1C03               	skipc
  2331  028F  2A81               	goto	l5375
  2332                           
  2333                           ;main.c: 1402: {
  2334                           ;main.c: 1405: setPB1(0);
  2335  0290  3000               	movlw	0
  2336  0291  118A  24A8  118A   	fcall	_setPB1
  2337                           
  2338                           ;main.c: 1407: setPB2(0);
  2339  0294  3000               	movlw	0
  2340  0295  118A  24B0  118A   	fcall	_setPB2
  2341  0298  2A7F               	goto	l5371
  2342  0299                     l5397:	
  2343                           
  2344                           ;main.c: 1417: {
  2345                           ;main.c: 1418: if(ucTimerDelay3 >= 1)
  2346  0299  0861               	movf	main@ucTimerDelay3,w
  2347  029A  1903               	btfsc	3,2
  2348  029B  2A81               	goto	l5375
  2349                           
  2350                           ;main.c: 1419: {
  2351                           ;main.c: 1420: ucTimerDelay3 = 0;
  2352  029C  01E1               	clrf	main@ucTimerDelay3
  2353                           
  2354                           ;main.c: 1422: ucLoaderStep3 = 0;
  2355  029D  01DB               	clrf	main@ucLoaderStep3
  2356  029E  29BC               	goto	l5233
  2357  029F                     l5407:	
  2358  029F  085B               	movf	main@ucLoaderStep3,w
  2359                           
  2360                           ; Switch size 1, requested type "space"
  2361                           ; Number of cases is 5, Range of values is 0 to 4
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte           16     9 (average)
  2365                           ; direct_byte           17     7 (fixed)
  2366                           ; jumptable            260     6 (fixed)
  2367                           ; rangetable             9     6 (fixed)
  2368                           ; spacedrange           16     9 (fixed)
  2369                           ; locatedrange           5     3 (fixed)
  2370                           ;	Chosen strategy is simple_byte
  2371  02A0  3A00               	xorlw	0	; case 0
  2372  02A1  1903               	skipnz
  2373  02A2  2A69               	goto	l5363
  2374  02A3  3A01               	xorlw	1	; case 1
  2375  02A4  1903               	skipnz
  2376  02A5  2A77               	goto	l5367
  2377  02A6  3A03               	xorlw	3	; case 2
  2378  02A7  1903               	skipnz
  2379  02A8  2A83               	goto	l5377
  2380  02A9  3A01               	xorlw	1	; case 3
  2381  02AA  1903               	skipnz
  2382  02AB  2A8C               	goto	l5387
  2383  02AC  3A07               	xorlw	7	; case 4
  2384  02AD  1903               	skipnz
  2385  02AE  2A99               	goto	l5397
  2386  02AF  285F               	goto	l774
  2387  02B0                     l5409:	
  2388                           
  2389                           ;main.c: 1446: {
  2390                           ;main.c: 1448: setPB0(1);
  2391  02B0  3001               	movlw	1
  2392  02B1  118A  24A0  118A   	fcall	_setPB0
  2393                           
  2394                           ;main.c: 1450: setPA0(1);
  2395  02B4  3001               	movlw	1
  2396  02B5  118A  24B8  118A   	fcall	_setPA0
  2397                           
  2398                           ;main.c: 1452: setPA1(1);
  2399  02B8  3001               	movlw	1
  2400  02B9  118A  24C1  118A   	fcall	_setPA1
  2401                           
  2402                           ;main.c: 1454: setPB1(1);
  2403  02BC  3001               	movlw	1
  2404  02BD  118A  24A8  118A   	fcall	_setPB1
  2405  02C0                     l5411:	
  2406                           
  2407                           ;main.c: 1455: ucLoaderStep4++;
  2408  02C0  0ADC               	incf	main@ucLoaderStep4,f
  2409                           
  2410                           ;main.c: 1456: break;
  2411  02C1  2834               	goto	l5019
  2412  02C2                     l5413:	
  2413                           
  2414                           ;main.c: 1460: {
  2415                           ;main.c: 1461: if(ucTimerDelay4 >= 5)
  2416  02C2  3005               	movlw	5
  2417  02C3  0262               	subwf	main@ucTimerDelay4,w
  2418  02C4  1C03               	skipc
  2419  02C5  2ACC               	goto	l5421
  2420                           
  2421                           ;main.c: 1462: {
  2422                           ;main.c: 1464: setPB2(1);
  2423  02C6  3001               	movlw	1
  2424  02C7                     L7:	
  2425  02C7  118A  24B0  118A   	fcall	_setPB2
  2426                           
  2427                           ;main.c: 1465: ucTimerDelay4 = 0;
  2428  02CA  01E2               	clrf	main@ucTimerDelay4
  2429  02CB  2AC0               	goto	l5411
  2430  02CC                     l5421:	
  2431                           
  2432                           ;main.c: 1468: else
  2433                           ;main.c: 1469: ucTimerDelay4++;
  2434  02CC  0AE2               	incf	main@ucTimerDelay4,f
  2435  02CD  2834               	goto	l5019
  2436  02CE                     l5423:	
  2437                           
  2438                           ;main.c: 1474: {
  2439                           ;main.c: 1475: if(ucTimerDelay4 >= 5)
  2440  02CE  3005               	movlw	5
  2441  02CF  0262               	subwf	main@ucTimerDelay4,w
  2442  02D0  1C03               	skipc
  2443  02D1  2ACC               	goto	l5421
  2444                           
  2445                           ;main.c: 1476: {
  2446                           ;main.c: 1478: setPB2(0);
  2447  02D2  3000               	movlw	0
  2448  02D3  2AC7               	goto	L7
  2449  02D4                     l5433:	
  2450                           
  2451                           ;main.c: 1488: {
  2452                           ;main.c: 1489: if(ucTimerDelay4 >= 1)
  2453  02D4  0862               	movf	main@ucTimerDelay4,w
  2454  02D5  1903               	btfsc	3,2
  2455  02D6  2ACC               	goto	l5421
  2456                           
  2457                           ;main.c: 1490: {
  2458                           ;main.c: 1491: ucTimerDelay4 = 0;
  2459  02D7  01E2               	clrf	main@ucTimerDelay4
  2460                           
  2461                           ;main.c: 1493: ucLoaderStep4 = 0;
  2462  02D8  01DC               	clrf	main@ucLoaderStep4
  2463  02D9  29BC               	goto	l5233
  2464  02DA                     l5443:	
  2465  02DA  085C               	movf	main@ucLoaderStep4,w
  2466                           
  2467                           ; Switch size 1, requested type "space"
  2468                           ; Number of cases is 4, Range of values is 0 to 3
  2469                           ; switch strategies available:
  2470                           ; Name         Instructions Cycles
  2471                           ; simple_byte           13     7 (average)
  2472                           ; direct_byte           15     7 (fixed)
  2473                           ; jumptable            260     6 (fixed)
  2474                           ; rangetable             8     6 (fixed)
  2475                           ; spacedrange           14     9 (fixed)
  2476                           ; locatedrange           4     3 (fixed)
  2477                           ;	Chosen strategy is simple_byte
  2478  02DB  3A00               	xorlw	0	; case 0
  2479  02DC  1903               	skipnz
  2480  02DD  2AB0               	goto	l5409
  2481  02DE  3A01               	xorlw	1	; case 1
  2482  02DF  1903               	skipnz
  2483  02E0  2AC2               	goto	l5413
  2484  02E1  3A03               	xorlw	3	; case 2
  2485  02E2  1903               	skipnz
  2486  02E3  2ACE               	goto	l5423
  2487  02E4  3A01               	xorlw	1	; case 3
  2488  02E5  1903               	skipnz
  2489  02E6  2AD4               	goto	l5433
  2490  02E7  285F               	goto	l774
  2491  02E8                     l5447:	
  2492  02E8  0854               	movf	_ucChannel5Type,w
  2493                           
  2494                           ; Switch size 1, requested type "space"
  2495                           ; Number of cases is 5, Range of values is 0 to 4
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte           16     9 (average)
  2499                           ; direct_byte           17     7 (fixed)
  2500                           ; jumptable            260     6 (fixed)
  2501                           ; rangetable             9     6 (fixed)
  2502                           ; spacedrange           16     9 (fixed)
  2503                           ; locatedrange           5     3 (fixed)
  2504                           ;	Chosen strategy is simple_byte
  2505  02E9  3A00               	xorlw	0	; case 0
  2506  02EA  1903               	skipnz
  2507  02EB  29BE               	goto	l5239
  2508  02EC  3A01               	xorlw	1	; case 1
  2509  02ED  1903               	skipnz
  2510  02EE  2A12               	goto	l5305
  2511  02EF  3A03               	xorlw	3	; case 2
  2512  02F0  1903               	skipnz
  2513  02F1  2A5D               	goto	l5361
  2514  02F2  3A01               	xorlw	1	; case 3
  2515  02F3  1903               	skipnz
  2516  02F4  2A9F               	goto	l5407
  2517  02F5  3A07               	xorlw	7	; case 4
  2518  02F6  1903               	skipnz
  2519  02F7  2ADA               	goto	l5443
  2520  02F8  285F               	goto	l774
  2521  02F9                     l5449:	
  2522                           
  2523                           ;main.c: 1517: {
  2524                           ;main.c: 1521: static unsigned char ucTimerDelayP2sLess = 0;
  2525                           ;main.c: 1523: static unsigned char ucTimerDelayP2sMore = 0;
  2526                           ;main.c: 1525: if( getAdOriginalCh6Value() <= 150 )
  2527  02F9  118A  262B  118A   	fcall	_getAdOriginalCh6Value
  2528  02FC  3000               	movlw	0
  2529  02FD  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2530  02FE  3097               	movlw	151
  2531  02FF  1903               	skipnz
  2532  0300  0246               	subwf	?_getAdOriginalCh6Value,w
  2533  0301  1803               	skipnc
  2534  0302  2B06               	goto	l5455
  2535                           
  2536                           ;main.c: 1526: {
  2537                           ;main.c: 1527: ucTimerDelayP2sLess++;
  2538  0303  0AE3               	incf	main@ucTimerDelayP2sLess,f
  2539                           
  2540                           ;main.c: 1528: ucTimerDelayP2sMore = 0;
  2541  0304  01E4               	clrf	main@ucTimerDelayP2sMore
  2542                           
  2543                           ;main.c: 1529: }
  2544  0305  2B08               	goto	l5459
  2545  0306                     l5455:	
  2546                           
  2547                           ;main.c: 1530: else
  2548                           ;main.c: 1531: {
  2549                           ;main.c: 1532: ucTimerDelayP2sMore++;
  2550  0306  0AE4               	incf	main@ucTimerDelayP2sMore,f
  2551                           
  2552                           ;main.c: 1533: ucTimerDelayP2sLess = 0;
  2553  0307  01E3               	clrf	main@ucTimerDelayP2sLess
  2554  0308                     l5459:	
  2555                           
  2556                           ;main.c: 1534: }
  2557                           ;main.c: 1536: if(ucTimerDelayP2sLess > 200)
  2558  0308  30C9               	movlw	201
  2559  0309  0263               	subwf	main@ucTimerDelayP2sLess,w
  2560  030A  1C03               	skipc
  2561  030B  2B0E               	goto	l974
  2562                           
  2563                           ;main.c: 1537: ucTimerDelayP2sLess = 2;
  2564  030C  3002               	movlw	2
  2565  030D  00E3               	movwf	main@ucTimerDelayP2sLess
  2566  030E                     l974:	
  2567                           
  2568                           ;main.c: 1540: if(ucTimerDelayP2sMore > 200)
  2569  030E  30C9               	movlw	201
  2570  030F  0264               	subwf	main@ucTimerDelayP2sMore,w
  2571                           
  2572                           ;main.c: 1541: ucTimerDelayP2sMore = 2;
  2573  0310  3002               	movlw	2
  2574  0311  1803               	btfsc	3,0
  2575  0312  00E4               	movwf	main@ucTimerDelayP2sMore
  2576                           
  2577                           ;main.c: 1543: if( ucTimerDelayP2sLess >= 2)
  2578  0313  0263               	subwf	main@ucTimerDelayP2sLess,w
  2579  0314  1C03               	skipc
  2580  0315  2B2A               	goto	l5475
  2581                           
  2582                           ;main.c: 1544: {
  2583                           ;main.c: 1545: ucTimerDelayP2sLess = 0;
  2584  0316  01E3               	clrf	main@ucTimerDelayP2sLess
  2585                           
  2586                           ;main.c: 1546: ucTimerDelayP2sMore = 0;
  2587  0317  01E4               	clrf	main@ucTimerDelayP2sMore
  2588                           
  2589                           ;main.c: 1548: startTwentySecondsTimer();
  2590  0318  158A  2727  118A   	fcall	_startTwentySecondsTimer
  2591                           
  2592                           ;main.c: 1550: if( !isFinishedTwentySecondsTimer() )
  2593  031B  158A  26F9  118A   	fcall	_isFinishedTwentySecondsTimer
  2594  031E  3800               	iorlw	0
  2595  031F  1D03               	skipz
  2596  0320  2B25               	goto	l5473
  2597  0321                     l5471:	
  2598                           
  2599                           ;main.c: 1551: {
  2600                           ;main.c: 1556: vHandle20sTimeron();
  2601  0321  118A  2536  118A   	fcall	_vHandle20sTimeron
  2602                           
  2603                           ;main.c: 1557: }
  2604  0324  2834               	goto	l5019
  2605  0325                     l5473:	
  2606                           
  2607                           ;main.c: 1558: else
  2608                           ;main.c: 1560: {
  2609                           ;main.c: 1564: vHandle20sTimerOut(0);
  2610  0325  3000               	movlw	0
  2611  0326  118A  24DC  118A   	fcall	_vHandle20sTimerOut
  2612  0329  2834               	goto	l5019
  2613  032A                     l5475:	
  2614                           
  2615                           ;main.c: 1567: else if(ucTimerDelayP2sMore >= 2)
  2616  032A  3002               	movlw	2
  2617  032B  0264               	subwf	main@ucTimerDelayP2sMore,w
  2618  032C  1C03               	skipc
  2619  032D  2834               	goto	l5019
  2620                           
  2621                           ;main.c: 1568: {
  2622                           ;main.c: 1569: ucTimerDelayP2sMore = 0;
  2623  032E  01E4               	clrf	main@ucTimerDelayP2sMore
  2624                           
  2625                           ;main.c: 1570: ucTimerDelayP2sLess = 0;
  2626  032F  01E3               	clrf	main@ucTimerDelayP2sLess
  2627  0330  2B21               	goto	l5471
  2628  0331                     l5481:	
  2629  0331  3004               	movlw	4
  2630                           
  2631                           ;main.c: 1899: {
  2632                           ;main.c: 1903: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2633                           ;main.c: 1905: ucFourthSuffix1TimerP3s++;
  2634  0332  0AD7               	incf	main@ucFourthSuffix1TimerP3s,f
  2635                           
  2636                           ;main.c: 1907: if( ucFourthSuffix1TimerP3s > 3)
  2637  0333  0257               	subwf	main@ucFourthSuffix1TimerP3s,w
  2638  0334  1C03               	skipc
  2639  0335  2834               	goto	l5019
  2640  0336  300C               	movlw	12
  2641                           
  2642                           ;main.c: 1908: {
  2643                           ;main.c: 1909: ucFourthSuffix1TimerP3s = 0;
  2644  0337  01D7               	clrf	main@ucFourthSuffix1TimerP3s
  2645  0338                     L6:	
  2646                           ;main.c: 1910: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2647                           
  2648  0338  00D3               	movwf	_ucADC4_Step
  2649  0339  2834               	goto	l5019
  2650  033A                     l5489:	
  2651                           
  2652                           ;main.c: 1917: {
  2653                           ;main.c: 1922: setPA6(0);
  2654  033A  3000               	movlw	0
  2655  033B  158A  26CE  118A   	fcall	_setPA6
  2656                           
  2657                           ;main.c: 1924: clearPinPortAndTimer();
  2658  033E  118A  247E  118A   	fcall	_clearPinPortAndTimer
  2659                           
  2660                           ;main.c: 1925: ucADC4_Step = ADC4_STEP_INIT;
  2661  0341  01D3               	clrf	_ucADC4_Step
  2662                           
  2663                           ;main.c: 1927: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2664  0342  01D0               	clrf	_enumMainLoopStep
  2665  0343  0AD0               	incf	_enumMainLoopStep,f
  2666                           
  2667                           ;main.c: 1928: break;
  2668  0344  2834               	goto	l5019
  2669  0345                     l5499:	
  2670  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0346  0853               	movf	_ucADC4_Step,w
  2672                           
  2673                           ; Switch size 1, requested type "space"
  2674                           ; Number of cases is 7, Range of values is 0 to 12
  2675                           ; switch strategies available:
  2676                           ; Name         Instructions Cycles
  2677                           ; simple_byte           22    12 (average)
  2678                           ; direct_byte           33     7 (fixed)
  2679                           ; jumptable            260     6 (fixed)
  2680                           ; rangetable            17     6 (fixed)
  2681                           ; spacedrange           32     9 (fixed)
  2682                           ; locatedrange          13     3 (fixed)
  2683                           ;	Chosen strategy is simple_byte
  2684  0347  3A00               	xorlw	0	; case 0
  2685  0348  1903               	skipnz
  2686  0349  28EC               	goto	l815
  2687  034A  3A01               	xorlw	1	; case 1
  2688  034B  1903               	skipnz
  2689  034C  28EF               	goto	l5125
  2690  034D  3A03               	xorlw	3	; case 2
  2691  034E  1903               	skipnz
  2692  034F  2AE8               	goto	l5447
  2693  0350  3A01               	xorlw	1	; case 3
  2694  0351  1903               	skipnz
  2695  0352  2AF9               	goto	l5449
  2696  0353  3A09               	xorlw	9	; case 10
  2697  0354  1903               	skipnz
  2698  0355  285F               	goto	l774
  2699  0356  3A01               	xorlw	1	; case 11
  2700  0357  1903               	skipnz
  2701  0358  2B31               	goto	l5481
  2702  0359  3A07               	xorlw	7	; case 12
  2703  035A  1903               	skipnz
  2704  035B  2B3A               	goto	l5489
  2705  035C  285F               	goto	l774
  2706  035D                     l993:	
  2707                           ;main.c: 1954: {
  2708                           ;main.c: 1955: case HOUR_3_BRANCH_STEP_FIRST:
  2709                           
  2710                           
  2711                           ;main.c: 1956: {
  2712                           ;main.c: 1958: PB7 = 1;
  2713  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2714  035E  1786               	bsf	6,7
  2715                           
  2716                           ;main.c: 1959: PBOD7 = 1;
  2717  035F  1683               	bsf	3,5	;RP0=1, select bank3
  2718  0360  3030               	movlw	48
  2719  0361  1703               	bsf	3,6	;RP1=1, select bank3
  2720  0362  1788               	bsf	8,7
  2721                           
  2722                           ;main.c: 1964: startThreeHoursTimer(10800);
  2723  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0365  00A0               	movwf	?_startThreeHoursTimer
  2726  0366  302A               	movlw	42
  2727  0367  00A1               	movwf	?_startThreeHoursTimer+1
  2728  0368  158A  2760  118A   	fcall	_startThreeHoursTimer
  2729                           
  2730                           ;main.c: 1968: setPA0(1);
  2731  036B  3001               	movlw	1
  2732  036C  118A  24B8  118A   	fcall	_setPA0
  2733                           
  2734                           ;main.c: 1970: setPA1(1);
  2735  036F  3001               	movlw	1
  2736  0370  118A  24C1  118A   	fcall	_setPA1
  2737                           
  2738                           ;main.c: 1972: setPB0(1);
  2739  0373  3001               	movlw	1
  2740  0374  118A  24A0  118A   	fcall	_setPB0
  2741                           
  2742                           ;main.c: 1974: setPB1(1);
  2743  0377  3001               	movlw	1
  2744  0378  118A  24A8  118A   	fcall	_setPB1
  2745                           
  2746                           ;main.c: 1976: setPB2(1);
  2747  037B  3001               	movlw	1
  2748  037C  118A  24B0  118A   	fcall	_setPB2
  2749                           
  2750                           ;main.c: 1978: setPB4(0);
  2751  037F  3000               	movlw	0
  2752  0380  118A  252E  118A   	fcall	_setPB4
  2753                           
  2754                           ;main.c: 1980: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2755  0383  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0384  01B0               	clrf	main@enumBranchStep^(0+128)
  2757  0385  0AB0               	incf	main@enumBranchStep^(0+128),f
  2758                           
  2759                           ;main.c: 1981: break;
  2760  0386  2834               	goto	l5019
  2761  0387                     l5505:	
  2762                           
  2763                           ;main.c: 1985: {
  2764                           ;main.c: 1990: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2765  0387  3002               	movlw	2
  2766  0388  00B0               	movwf	main@enumBranchStep^(0+128)
  2767                           
  2768                           ;main.c: 1991: break;
  2769  0389  2834               	goto	l5019
  2770  038A                     l5507:	
  2771                           
  2772                           ;main.c: 1995: {
  2773                           ;main.c: 1999: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2774  038A  158A  270F  118A   	fcall	_isFinishedTwelveHoursTimer
  2775  038D  3800               	iorlw	0
  2776  038E  1D03               	skipz
  2777  038F  2B96               	goto	l5511
  2778  0390  158A  271B  118A   	fcall	_isFinishedThreeHoursTimer
  2779  0393  3A00               	xorlw	0
  2780  0394  1903               	skipnz
  2781  0395  2B99               	goto	l5515
  2782  0396                     l5511:	
  2783                           
  2784                           ;main.c: 2000: {
  2785                           ;main.c: 2001: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2786  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2787  0397  01B0               	clrf	main@enumBranchStep^(0+128)
  2788  0398  285C               	goto	l5039
  2789  0399                     l5515:	
  2790                           
  2791                           ;main.c: 2004: else
  2792                           ;main.c: 2005: {
  2793                           ;main.c: 2006: static unsigned char ucTimerX1P5s = 0;
  2794                           ;main.c: 2008: static unsigned char ucTimerLessX1P5s = 0;
  2795                           ;main.c: 2010: if(getAdOriginalCh6Value() <= 85)
  2796  0399  118A  262B  118A   	fcall	_getAdOriginalCh6Value
  2797  039C  3000               	movlw	0
  2798  039D  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2799  039E  3056               	movlw	86
  2800  039F  1903               	skipnz
  2801  03A0  0246               	subwf	?_getAdOriginalCh6Value,w
  2802  03A1  1803               	skipnc
  2803  03A2  2BA7               	goto	l5521
  2804                           
  2805                           ;main.c: 2011: {
  2806                           ;main.c: 2012: ucTimerX1P5s = 0;
  2807  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2808  03A4  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2809                           
  2810                           ;main.c: 2013: ucTimerLessX1P5s++;
  2811  03A5  0AB3               	incf	main@ucTimerLessX1P5s^(0+128),f
  2812                           
  2813                           ;main.c: 2014: }
  2814  03A6  2BAA               	goto	l5525
  2815  03A7                     l5521:	
  2816                           
  2817                           ;main.c: 2015: else
  2818                           ;main.c: 2016: {
  2819                           ;main.c: 2017: ucTimerX1P5s++;
  2820  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2821  03A8  0AB6               	incf	main@ucTimerX1P5s^(0+128),f
  2822                           
  2823                           ;main.c: 2018: ucTimerLessX1P5s = 0;
  2824  03A9  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2825  03AA                     l5525:	
  2826                           
  2827                           ;main.c: 2019: }
  2828                           ;main.c: 2021: if(ucTimerX1P5s >= 5)
  2829  03AA  3005               	movlw	5
  2830  03AB  0236               	subwf	main@ucTimerX1P5s^(0+128),w
  2831  03AC  1C03               	skipc
  2832  03AD  2BBE               	goto	l5539
  2833                           
  2834                           ;main.c: 2022: {
  2835                           ;main.c: 2023: ucTimerX1P5s = 0;
  2836  03AE  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2837                           
  2838                           ;main.c: 2025: ucTimerLessX1P5s = 0;
  2839  03AF  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2840                           
  2841                           ;main.c: 2029: PBOD7 = 0;
  2842  03B0  1703               	bsf	3,6	;RP1=1, select bank3
  2843  03B1  1388               	bcf	8,7
  2844                           
  2845                           ;main.c: 2030: PB7 = 0;
  2846  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2847  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2848  03B4  1386               	bcf	6,7
  2849                           
  2850                           ;main.c: 2035: clearThreeHoursTimer();
  2851  03B5  118A  24D6  118A   	fcall	_clearThreeHoursTimer
  2852                           
  2853                           ;main.c: 2037: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2854  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2855  03B9  3002               	movlw	2
  2856  03BA  01B0               	clrf	main@enumBranchStep^(0+128)
  2857  03BB                     L1:	
  2858                           ;main.c: 2039: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2859                           
  2860  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2861  03BC  00D0               	movwf	_enumMainLoopStep
  2862                           
  2863                           ;main.c: 2040: }
  2864  03BD  2834               	goto	l5019
  2865  03BE                     l5539:	
  2866                           
  2867                           ;main.c: 2041: else if(ucTimerLessX1P5s >= 5)
  2868  03BE  3005               	movlw	5
  2869  03BF  0233               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2870  03C0  1C03               	skipc
  2871  03C1  2834               	goto	l5019
  2872                           
  2873                           ;main.c: 2042: {
  2874                           ;main.c: 2043: static unsigned char ucTimerX2P5s = 0;
  2875                           ;main.c: 2045: static unsigned char ucTimerLessX2P5s = 0;
  2876                           ;main.c: 2047: if(getAdOriginalCh6Value() > 20)
  2877  03C2  118A  262B  118A   	fcall	_getAdOriginalCh6Value
  2878  03C5  3000               	movlw	0
  2879  03C6  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2880  03C7  3015               	movlw	21
  2881  03C8  1903               	skipnz
  2882  03C9  0246               	subwf	?_getAdOriginalCh6Value,w
  2883  03CA  1C03               	skipc
  2884  03CB  2BCF               	goto	l5547
  2885                           
  2886                           ;main.c: 2048: {
  2887                           ;main.c: 2049: ucTimerX2P5s++;
  2888  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2889  03CD  0AB7               	incf	main@ucTimerX2P5s^(0+128),f
  2890  03CE  2BD1               	goto	L8
  2891  03CF                     l5547:	
  2892                           ;main.c: 2051: }
  2893                           
  2894                           ;main.c: 2050: ucTimerLessX2P5s = 0;
  2895                           
  2896                           
  2897                           ;main.c: 2052: else
  2898                           ;main.c: 2053: {
  2899                           ;main.c: 2054: ucTimerX2P5s = 0;
  2900  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  2901  03D0  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2902  03D1                     L8:	
  2903  03D1  3005               	movlw	5
  2904                           
  2905                           ;main.c: 2056: ucTimerLessX2P5s = 0;
  2906  03D2  01B4               	clrf	main@ucTimerLessX2P5s^(0+128)
  2907                           
  2908                           ;main.c: 2058: }
  2909                           ;main.c: 2060: if(ucTimerX2P5s >= 5)
  2910  03D3  0237               	subwf	main@ucTimerX2P5s^(0+128),w
  2911  03D4  1C03               	skipc
  2912  03D5  2834               	goto	l5019
  2913                           
  2914                           ;main.c: 2061: {
  2915                           ;main.c: 2062: ucTimerX2P5s = 0;
  2916  03D6  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2917                           
  2918                           ;main.c: 2063: }
  2919  03D7  2834               	goto	l5019
  2920  03D8                     l5567:	
  2921  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2922  03D9  0830               	movf	main@enumBranchStep^(0+128),w
  2923                           
  2924                           ; Switch size 1, requested type "space"
  2925                           ; Number of cases is 3, Range of values is 0 to 2
  2926                           ; switch strategies available:
  2927                           ; Name         Instructions Cycles
  2928                           ; simple_byte           10     6 (average)
  2929                           ; direct_byte           13     7 (fixed)
  2930                           ; jumptable            260     6 (fixed)
  2931                           ; rangetable             7     6 (fixed)
  2932                           ; spacedrange           12     9 (fixed)
  2933                           ; locatedrange           3     3 (fixed)
  2934                           ;	Chosen strategy is simple_byte
  2935  03DA  3A00               	xorlw	0	; case 0
  2936  03DB  1903               	skipnz
  2937  03DC  2B5D               	goto	l993
  2938  03DD  3A01               	xorlw	1	; case 1
  2939  03DE  1903               	skipnz
  2940  03DF  2B87               	goto	l5505
  2941  03E0  3A03               	xorlw	3	; case 2
  2942  03E1  1903               	skipnz
  2943  03E2  2B8A               	goto	l5507
  2944  03E3  285F               	goto	l774
  2945  03E4                     l5569:	
  2946                           
  2947                           ;main.c: 2114: {
  2948                           ;main.c: 2119: setPA2(0);
  2949  03E4  3000               	movlw	0
  2950  03E5  158A  26E6  118A   	fcall	_setPA2
  2951                           
  2952                           ;main.c: 2120: setPA1(0);
  2953  03E8  3000               	movlw	0
  2954  03E9  118A  24C1  118A   	fcall	_setPA1
  2955                           
  2956                           ;main.c: 2121: setPA0(0);
  2957  03EC  3000               	movlw	0
  2958  03ED  118A  24B8  118A   	fcall	_setPA0
  2959                           
  2960                           ;main.c: 2122: setPB0(0);
  2961  03F0  3000               	movlw	0
  2962  03F1  118A  24A0  118A   	fcall	_setPB0
  2963                           
  2964                           ;main.c: 2123: setPB1(0);
  2965  03F4  3000               	movlw	0
  2966  03F5  118A  24A8  118A   	fcall	_setPB1
  2967                           
  2968                           ;main.c: 2124: setPB2(0);
  2969  03F8  3000               	movlw	0
  2970  03F9  118A  24B0  118A   	fcall	_setPB2
  2971                           
  2972                           ;main.c: 2125: setPA3(0);
  2973  03FC  3000               	movlw	0
  2974  03FD  118A  2622  118A   	fcall	_setPA3
  2975                           
  2976                           ;main.c: 2126: setPB4(0);
  2977  0400  3000               	movlw	0
  2978  0401  118A  252E  118A   	fcall	_setPB4
  2979                           
  2980                           ;main.c: 2127: setPB6(1);
  2981  0404  3001               	movlw	1
  2982  0405  118A  2634  118A   	fcall	_setPB6
  2983                           
  2984                           ;main.c: 2129: enumInteralStep = INTERNAL_SECOND_STEP;
  2985  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0409  01B1               	clrf	main@enumInteralStep^(0+128)
  2987  040A  0AB1               	incf	main@enumInteralStep^(0+128),f
  2988                           
  2989                           ;main.c: 2130: break;
  2990  040B  2834               	goto	l5019
  2991  040C                     l5573:	
  2992                           
  2993                           ;main.c: 2134: {
  2994                           ;main.c: 2138: static unsigned char ucTimer1s = 0;
  2995                           ;main.c: 2140: if(getAdOriginalCh0Value() >= 2500)
  2996  040C  118A  2474  118A   	fcall	_getAdOriginalCh0Value
  2997  040F  3009               	movlw	9
  2998  0410  0247               	subwf	?_getAdOriginalCh0Value+1,w
  2999  0411  30C4               	movlw	196
  3000  0412  1903               	skipnz
  3001  0413  0246               	subwf	?_getAdOriginalCh0Value,w
  3002  0414  1C03               	skipc
  3003  0415  2C19               	goto	l5577
  3004                           
  3005                           ;main.c: 2141: {
  3006                           ;main.c: 2142: ucTimer1s++;
  3007  0416  1683               	bsf	3,5	;RP0=1, select bank1
  3008  0417  0AB2               	incf	main@ucTimer1s^(0+128),f
  3009                           
  3010                           ;main.c: 2143: }
  3011  0418  2C1B               	goto	l5579
  3012  0419                     l5577:	
  3013                           
  3014                           ;main.c: 2144: else
  3015                           ;main.c: 2145: ucTimer1s = 0;
  3016  0419  1683               	bsf	3,5	;RP0=1, select bank1
  3017  041A  01B2               	clrf	main@ucTimer1s^(0+128)
  3018  041B                     l5579:	
  3019                           
  3020                           ;main.c: 2147: if(ucTimer1s >= 10)
  3021  041B  300A               	movlw	10
  3022  041C  0232               	subwf	main@ucTimer1s^(0+128),w
  3023  041D  1C03               	skipc
  3024  041E  2834               	goto	l5019
  3025                           
  3026                           ;main.c: 2148: {
  3027                           ;main.c: 2149: enumInteralStep = INTERNAL_THIRD_STEP;
  3028  041F  3002               	movlw	2
  3029  0420  00B1               	movwf	main@enumInteralStep^(0+128)
  3030                           
  3031                           ;main.c: 2150: ucTimer1s = 0;
  3032  0421  01B2               	clrf	main@ucTimer1s^(0+128)
  3033  0422  2834               	goto	l5019
  3034  0423                     l5585:	
  3035                           
  3036                           ;main.c: 2156: {
  3037                           ;main.c: 2160: static unsigned char ucTimerP3s = 0;
  3038                           ;main.c: 2162: if(getAdOriginalCh0Value() <= 1950)
  3039  0423  118A  2474  118A   	fcall	_getAdOriginalCh0Value
  3040  0426  3007               	movlw	7
  3041  0427  0247               	subwf	?_getAdOriginalCh0Value+1,w
  3042  0428  309F               	movlw	159
  3043  0429  1903               	skipnz
  3044  042A  0246               	subwf	?_getAdOriginalCh0Value,w
  3045  042B  1803               	skipnc
  3046  042C  2C30               	goto	l5589
  3047                           
  3048                           ;main.c: 2163: {
  3049                           ;main.c: 2164: ucTimerP3s++;
  3050  042D  1683               	bsf	3,5	;RP0=1, select bank1
  3051  042E  0AB5               	incf	main@ucTimerP3s^(0+128),f
  3052                           
  3053                           ;main.c: 2165: }
  3054  042F  2C32               	goto	l5591
  3055  0430                     l5589:	
  3056                           
  3057                           ;main.c: 2166: else
  3058                           ;main.c: 2167: ucTimerP3s = 0;
  3059  0430  1683               	bsf	3,5	;RP0=1, select bank1
  3060  0431  01B5               	clrf	main@ucTimerP3s^(0+128)
  3061  0432                     l5591:	
  3062                           
  3063                           ;main.c: 2169: if(ucTimerP3s >= 3)
  3064  0432  3003               	movlw	3
  3065  0433  0235               	subwf	main@ucTimerP3s^(0+128),w
  3066  0434  1C03               	skipc
  3067  0435  2834               	goto	l5019
  3068                           
  3069                           ;main.c: 2170: {
  3070                           ;main.c: 2171: enumInteralStep = INTERNAL_FIRST_STEP;
  3071  0436  01B1               	clrf	main@enumInteralStep^(0+128)
  3072                           
  3073                           ;main.c: 2172: ucTimerP3s = 0;
  3074  0437  01B5               	clrf	main@ucTimerP3s^(0+128)
  3075                           
  3076                           ;main.c: 2174: clearAllTimer();
  3077  0438  118A  24C9  118A   	fcall	_clearAllTimer
  3078                           
  3079                           ;main.c: 2176: initPin();
  3080  043B  158A  278B  118A   	fcall	_initPin
  3081                           
  3082                           ;main.c: 2179: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3083  043E  1283               	bcf	3,5	;RP0=0, select bank0
  3084  043F  01D0               	clrf	_enumMainLoopStep
  3085  0440                     l1041:	
  3086  0440  2C40               	goto	l1041
  3087  0441                     l5601:	
  3088  0441  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0442  0831               	movf	main@enumInteralStep^(0+128),w
  3090                           
  3091                           ; Switch size 1, requested type "space"
  3092                           ; Number of cases is 3, Range of values is 0 to 2
  3093                           ; switch strategies available:
  3094                           ; Name         Instructions Cycles
  3095                           ; simple_byte           10     6 (average)
  3096                           ; direct_byte           13     7 (fixed)
  3097                           ; jumptable            260     6 (fixed)
  3098                           ; rangetable             7     6 (fixed)
  3099                           ; spacedrange           12     9 (fixed)
  3100                           ; locatedrange           3     3 (fixed)
  3101                           ;	Chosen strategy is simple_byte
  3102  0443  3A00               	xorlw	0	; case 0
  3103  0444  1903               	skipnz
  3104  0445  2BE4               	goto	l5569
  3105  0446  3A01               	xorlw	1	; case 1
  3106  0447  1903               	skipnz
  3107  0448  2C0C               	goto	l5573
  3108  0449  3A03               	xorlw	3	; case 2
  3109  044A  1903               	skipnz
  3110  044B  2C23               	goto	l5585
  3111  044C  285F               	goto	l774
  3112  044D                     l5605:	
  3113  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3114  044E  0850               	movf	_enumMainLoopStep,w
  3115                           
  3116                           ; Switch size 1, requested type "space"
  3117                           ; Number of cases is 8, Range of values is 0 to 9
  3118                           ; switch strategies available:
  3119                           ; Name         Instructions Cycles
  3120                           ; simple_byte           25    13 (average)
  3121                           ; direct_byte           27     7 (fixed)
  3122                           ; jumptable            260     6 (fixed)
  3123                           ; rangetable            14     6 (fixed)
  3124                           ; spacedrange           26     9 (fixed)
  3125                           ; locatedrange          10     3 (fixed)
  3126                           ;	Chosen strategy is simple_byte
  3127  044F  3A00               	xorlw	0	; case 0
  3128  0450  1903               	skipnz
  3129  0451  2842               	goto	l5025
  3130  0452  3A01               	xorlw	1	; case 1
  3131  0453  1903               	skipnz
  3132  0454  2860               	goto	l5041
  3133  0455  3A03               	xorlw	3	; case 2
  3134  0456  1903               	skipnz
  3135  0457  287D               	goto	l5061
  3136  0458  3A01               	xorlw	1	; case 3
  3137  0459  1903               	skipnz
  3138  045A  2895               	goto	l5073
  3139  045B  3A07               	xorlw	7	; case 4
  3140  045C  1903               	skipnz
  3141  045D  28D1               	goto	l5111
  3142  045E  3A01               	xorlw	1	; case 5
  3143  045F  1903               	skipnz
  3144  0460  28DD               	goto	l5117
  3145  0461  3A0D               	xorlw	13	; case 8
  3146  0462  1903               	skipnz
  3147  0463  2BD8               	goto	l5567
  3148  0464  3A01               	xorlw	1	; case 9
  3149  0465  1903               	skipnz
  3150  0466  2C41               	goto	l5601
  3151  0467  285F               	goto	l774
  3152  0468  118A  2811         	ljmp	start
  3153  046A                     __end_of_main:	
  3154                           
  3155                           	psect	swtext1
  3156  0800                     __pswtext1:	
  3157  0800                     S5823:	
  3158  0800  118A  2971         	ljmp	l5175
  3159  0802  118A  2977         	ljmp	l5179
  3160  0804  118A  2983         	ljmp	l5189
  3161  0806  118A  298C         	ljmp	l5199
  3162  0808  118A  2995         	ljmp	l5209
  3163  080A  118A  299E         	ljmp	l5219
  3164  080C  118A  29B7         	ljmp	l5229
  3165                           
  3166                           	psect	swtext2
  3167  080E                     __pswtext2:	
  3168  080E                     S5825:	
  3169  080E  118A  29CA         	ljmp	l5241
  3170  0810  118A  29D0         	ljmp	l5245
  3171  0812  118A  29DC         	ljmp	l5255
  3172  0814  118A  29E5         	ljmp	l5265
  3173  0816  118A  29EE         	ljmp	l5275
  3174  0818  118A  29F7         	ljmp	l5285
  3175  081A  118A  2A0C         	ljmp	l5295
  3176                           
  3177                           	psect	swtext3
  3178  081C                     __pswtext3:	
  3179  081C                     S5827:	
  3180  081C  118A  2A1E         	ljmp	l5307
  3181  081E  118A  2A28         	ljmp	l5311
  3182  0820  118A  2A34         	ljmp	l5321
  3183  0822  118A  2A3D         	ljmp	l5331
  3184  0824  118A  2A46         	ljmp	l5341
  3185  0826  118A  2A57         	ljmp	l5351
  3186                           
  3187                           	psect	text1005
  3188  0FB2                     __ptext1005:	
  3189 ;; =============== function _vHandle20sTimeron ends ============
  3190                           
  3191                           
  3192 ;; *************** function _process_AD_Converter_Value *****************
  3193 ;; Defined at:
  3194 ;;		line 302 in file "C:\temp\dev\AK7030-OTP\common.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;		None               void
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, pclath, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/20
  3205 ;;		On exit  : 40/0
  3206 ;;		Unchanged: FFF9F/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3208 ;;      Params:         0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    4
  3215 ;; This function calls:
  3216 ;;		_getAD_ConvertFlag
  3217 ;;		_setAD_ConvertFlag
  3218 ;;		_AD_Sample
  3219 ;;		_adc_start
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224  0FB2                     _process_AD_Converter_Value:	
  3225                           
  3226                           ;common.c: 303: if(getAD_ConvertFlag())
  3227                           
  3228                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3229  0FB2  27BD  158A         	fcall	_getAD_ConvertFlag
  3230  0FB4  3A00               	xorlw	0
  3231  0FB5  1903               	skipnz
  3232  0FB6  0008               	return
  3233                           
  3234                           ;common.c: 304: {
  3235                           ;common.c: 305: setAD_ConvertFlag(0);
  3236  0FB7  3000               	movlw	0
  3237  0FB8  27C1  158A         	fcall	_setAD_ConvertFlag
  3238                           
  3239                           ;common.c: 306: AD_Sample();
  3240  0FBA  27C9  158A         	fcall	_AD_Sample
  3241                           
  3242                           ;common.c: 318: adc_start();
  3243  0FBC  2FC6               	ljmp	l4481
  3244  0FBD                     __end_of_process_AD_Converter_Value:	
  3245  0FBD                     __ptext1016:	
  3246 ;; =============== function _setAD_ConvertFlag ends ============
  3247                           
  3248                           
  3249 ;; *************** function _getAD_ConvertFlag *****************
  3250 ;; Defined at:
  3251 ;;		line 233 in file "C:\temp\dev\AK7030-OTP\common.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      unsigned char 
  3258 ;; Registers used:
  3259 ;;		wreg
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/20
  3262 ;;		On exit  : 60/20
  3263 ;;		Unchanged: FFF9F/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3265 ;;      Params:         0       0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0
  3268 ;;      Totals:         0       0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    2
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_process_AD_Converter_Value
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278  0FBD                     _getAD_ConvertFlag:	
  3279                           
  3280                           ;common.c: 234: return adc_convert_flag;
  3281                           
  3282                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3283  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  3285  0FBF  082D               	movf	_adc_convert_flag^(0+128),w
  3286  0FC0  0008               	return
  3287  0FC1                     __end_of_getAD_ConvertFlag:	
  3288  0FC1                     __ptext1015:	
  3289 ;; =============== function _clearAllTimer ends ============
  3290                           
  3291                           
  3292 ;; *************** function _setAD_ConvertFlag *****************
  3293 ;; Defined at:
  3294 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  flag            1    wreg     unsigned char 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  flag            1    0[BANK0 ] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;		None               void
  3301 ;; Registers used:
  3302 ;;		wreg
  3303 ;; Tracked objects:
  3304 ;;		On entry : 60/20
  3305 ;;		On exit  : 60/20
  3306 ;;		Unchanged: FFF9F/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3308 ;;      Params:         0       0       0       0       0
  3309 ;;      Locals:         0       1       0       0       0
  3310 ;;      Temps:          0       0       0       0       0
  3311 ;;      Totals:         0       1       0       0       0
  3312 ;;Total ram usage:        1 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    2
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_process_AD_Converter_Value
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321  0FC1                     _setAD_ConvertFlag:	
  3322                           
  3323                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3324                           ;setAD_ConvertFlag@flag stored from wreg
  3325  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0FC2  00A0               	movwf	setAD_ConvertFlag@flag
  3327                           
  3328                           ;common.c: 240: adc_convert_flag = flag;
  3329  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0FC4  00AD               	movwf	_adc_convert_flag^(0+128)
  3331  0FC5  0008               	return
  3332  0FC6                     __end_of_setAD_ConvertFlag:	
  3333  0FC6                     __ptext1029:	
  3334 ;; =============== function _startTwentyMinuteTimer ends ============
  3335                           
  3336                           
  3337 ;; *************** function _adc_start *****************
  3338 ;; Defined at:
  3339 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;		None               void
  3346 ;; Registers used:
  3347 ;;		None
  3348 ;; Tracked objects:
  3349 ;;		On entry : 40/20
  3350 ;;		On exit  : 60/0
  3351 ;;		Unchanged: FFF9F/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    2
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;;		_process_AD_Converter_Value
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367  0FC6                     _adc_start:	
  3368  0FC6                     l4481:	
  3369                           ; Regs used in _adc_start: []
  3370                           
  3371                           
  3372                           ;periph.c: 101: GO=1;
  3373  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0FC7  149F               	bsf	31,1
  3375  0FC8  0008               	return
  3376  0FC9                     __end_of_adc_start:	
  3377  0FC9                     __ptext1008:	
  3378 ;; =============== function _clearPinPortAndTimer ends ============
  3379                           
  3380                           
  3381 ;; *************** function _AD_Sample *****************
  3382 ;; Defined at:
  3383 ;;		line 332 in file "C:\temp\dev\AK7030-OTP\common.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;		None               void
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0, pclath, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 60/20
  3394 ;;		On exit  : 40/0
  3395 ;;		Unchanged: FFF9F/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    3
  3404 ;; This function calls:
  3405 ;;		_adc_test_init
  3406 ;; This function is called by:
  3407 ;;		_process_AD_Converter_Value
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410  0FC9                     _AD_Sample:	
  3411                           
  3412                           ;common.c: 333: if(sampleTimes < 12)
  3413                           
  3414                           ; Regs used in _AD_Sample: [wreg+status,2+status,0+pclath+cstack]
  3415  0FC9  300C               	movlw	12
  3416  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0FCB  0252               	subwf	_sampleTimes,w
  3418  0FCC  1803               	skipnc
  3419  0FCD  0008               	return
  3420  0FCE  300C               	movlw	12
  3421                           
  3422                           ;common.c: 334: {
  3423                           ;common.c: 336: sampleTimes++;
  3424  0FCF  0AD2               	incf	_sampleTimes,f
  3425                           
  3426                           ;common.c: 338: if(sampleTimes >= 12)
  3427  0FD0  0252               	subwf	_sampleTimes,w
  3428  0FD1  1C03               	skipc
  3429  0FD2  0008               	return
  3430                           
  3431                           ;common.c: 339: {
  3432                           ;common.c: 340: sampleTimes = 0;
  3433  0FD3  01D2               	clrf	_sampleTimes
  3434                           
  3435                           ;common.c: 342: if(sampleChannelSelect == 0)
  3436  0FD4  08D1               	movf	_sampleChannelSelect,f
  3437  0FD5  1D03               	skipz
  3438  0FD6  2FD9               	goto	l4827
  3439                           
  3440                           ;common.c: 343: {
  3441                           ;common.c: 346: sampleChannelSelect = 2;
  3442  0FD7  3002               	movlw	2
  3443  0FD8  2FE4               	goto	L18
  3444  0FD9                     l4827:	
  3445                           ;common.c: 347: }
  3446                           
  3447                           
  3448                           ;common.c: 348: else if(sampleChannelSelect == 2)
  3449  0FD9  0851               	movf	_sampleChannelSelect,w
  3450  0FDA  3A02               	xorlw	2
  3451  0FDB  1D03               	skipz
  3452  0FDC  2FDF               	goto	l4831
  3453                           
  3454                           ;common.c: 349: {
  3455                           ;common.c: 351: sampleChannelSelect = 5;
  3456  0FDD  3005               	movlw	5
  3457  0FDE  2FE4               	goto	L18
  3458  0FDF                     l4831:	
  3459                           ;common.c: 352: }
  3460                           
  3461                           
  3462                           ;common.c: 353: else if(sampleChannelSelect == 5)
  3463  0FDF  0851               	movf	_sampleChannelSelect,w
  3464  0FE0  3A05               	xorlw	5
  3465  0FE1  1D03               	skipz
  3466  0FE2  2FE6               	goto	l4835
  3467                           
  3468                           ;common.c: 354: {
  3469                           ;common.c: 356: sampleChannelSelect = 6;
  3470  0FE3  3006               	movlw	6
  3471  0FE4                     L18:	
  3472  0FE4  00D1               	movwf	_sampleChannelSelect
  3473                           
  3474                           ;common.c: 357: }
  3475  0FE5  2FE7               	goto	l4837
  3476  0FE6                     l4835:	
  3477                           
  3478                           ;common.c: 358: else
  3479                           ;common.c: 359: {
  3480                           ;common.c: 361: sampleChannelSelect = 0;
  3481  0FE6  01D1               	clrf	_sampleChannelSelect
  3482  0FE7                     l4837:	
  3483                           
  3484                           ;common.c: 362: }
  3485                           ;common.c: 367: adc_test_init(sampleChannelSelect,3);
  3486  0FE7  3003               	movlw	3
  3487  0FE8  00A0               	movwf	?_adc_test_init
  3488  0FE9  0851               	movf	_sampleChannelSelect,w
  3489  0FEA  2FEB               	ljmp	_adc_test_init
  3490  0FEB                     __end_of_AD_Sample:	
  3491  0FEB                     __ptext1030:	
  3492 ;; =============== function _adc_start ends ============
  3493                           
  3494                           
  3495 ;; *************** function _adc_test_init *****************
  3496 ;; Defined at:
  3497 ;;		line 85 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  channel         1    wreg     unsigned char 
  3500 ;;  ref             1    0[BANK0 ] unsigned char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  channel         1    2[BANK0 ] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;		None               void
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 60/0
  3509 ;;		On exit  : 60/20
  3510 ;;		Unchanged: FFF9F/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       1       0       0       0
  3513 ;;      Locals:         0       1       0       0       0
  3514 ;;      Temps:          0       1       0       0       0
  3515 ;;      Totals:         0       3       0       0       0
  3516 ;;Total ram usage:        3 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    2
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;;		_AD_Sample
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526  0FEB                     _adc_test_init:	
  3527                           
  3528                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3529                           ;adc_test_init@channel stored from wreg
  3530  0FEB  00A2               	movwf	adc_test_init@channel
  3531                           
  3532                           ;periph.c: 86: ADCON0 = 0x00;
  3533  0FEC  019F               	clrf	31	;volatile
  3534                           
  3535                           ;periph.c: 87: ADCON0|=channel<<2;
  3536  0FED  00A1               	movwf	??_adc_test_init
  3537  0FEE  1003               	clrc
  3538  0FEF  0DA1               	rlf	??_adc_test_init,f
  3539  0FF0  1003               	clrc
  3540  0FF1  0D21               	rlf	??_adc_test_init,w
  3541  0FF2  049F               	iorwf	31,f	;volatile
  3542                           
  3543                           ;periph.c: 88: ADCON1|=ref<<6;
  3544  0FF3  0820               	movf	adc_test_init@ref,w
  3545  0FF4  00A1               	movwf	??_adc_test_init
  3546  0FF5  0CA1               	rrf	??_adc_test_init,f
  3547  0FF6  0CA1               	rrf	??_adc_test_init,f
  3548  0FF7  0C21               	rrf	??_adc_test_init,w
  3549  0FF8  39C0               	andlw	192
  3550  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0FFA  049F               	iorwf	31,f	;volatile
  3552                           
  3553                           ;periph.c: 89: ADON=1;
  3554  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0FFC  141F               	bsf	31,0
  3556                           
  3557                           ;periph.c: 90: ADIE=1;
  3558  0FFD  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0FFE  150D               	bsf	13,2
  3560  0FFF  0008               	return
  3561  1000                     __end_of_adc_test_init:	
  3562                           
  3563                           	psect	text1011
  3564  046A                     __ptext1011:	
  3565 ;; =============== function _vHandle20sTimerOut ends ============
  3566                           
  3567                           
  3568 ;; *************** function _getAdOriginalCh5Value *****************
  3569 ;; Defined at:
  3570 ;;		line 272 in file "C:\temp\dev\AK7030-OTP\common.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  2   38[BANK0 ] unsigned int 
  3577 ;; Registers used:
  3578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 60/0
  3581 ;;		On exit  : 160/0
  3582 ;;		Unchanged: FFE00/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3584 ;;      Params:         0       2       0       0       0
  3585 ;;      Locals:         0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0
  3587 ;;      Totals:         0       2       0       0       0
  3588 ;;Total ram usage:        2 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    3
  3591 ;; This function calls:
  3592 ;;		_Filter
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597  046A                     _getAdOriginalCh5Value:	
  3598                           
  3599                           ;common.c: 274: return Filter(uiSampleChannelFifth);
  3600                           
  3601                           ; Regs used in _getAdOriginalCh5Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3602  046A  3090               	movlw	_uiSampleChannelFifth& (0+255)
  3603  046B  00A0               	movwf	?_Filter
  3604  046C  3001               	movlw	1
  3605  046D  00A1               	movwf	?_Filter+1
  3606  046E  264A               	fcall	_Filter
  3607  046F  0821               	movf	?_Filter+1,w
  3608  0470  00C7               	movwf	?_getAdOriginalCh5Value+1
  3609  0471  0820               	movf	?_Filter,w
  3610  0472  00C6               	movwf	?_getAdOriginalCh5Value
  3611  0473  0008               	return
  3612  0474                     __end_of_getAdOriginalCh5Value:	
  3613  0474                     __ptext1013:	
  3614 ;; =============== function _getAdOriginalCh6Value ends ============
  3615                           
  3616                           
  3617 ;; *************** function _getAdOriginalCh0Value *****************
  3618 ;; Defined at:
  3619 ;;		line 263 in file "C:\temp\dev\AK7030-OTP\common.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   38[BANK0 ] unsigned int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 40/0
  3630 ;;		On exit  : 160/0
  3631 ;;		Unchanged: FFE00/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3633 ;;      Params:         0       2       0       0       0
  3634 ;;      Locals:         0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         0       2       0       0       0
  3637 ;;Total ram usage:        2 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    3
  3640 ;; This function calls:
  3641 ;;		_Filter
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646  0474                     _getAdOriginalCh0Value:	
  3647                           
  3648                           ;common.c: 265: return Filter(uiSampleChannelZero);
  3649                           
  3650                           ; Regs used in _getAdOriginalCh0Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3651  0474  30C4               	movlw	_uiSampleChannelZero& (0+255)
  3652  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0476  00A0               	movwf	?_Filter
  3654  0477  01A1               	clrf	?_Filter+1
  3655  0478  264A               	fcall	_Filter
  3656  0479  0821               	movf	?_Filter+1,w
  3657  047A  00C7               	movwf	?_getAdOriginalCh0Value+1
  3658  047B  0820               	movf	?_Filter,w
  3659  047C  00C6               	movwf	?_getAdOriginalCh0Value
  3660  047D  0008               	return
  3661  047E                     __end_of_getAdOriginalCh0Value:	
  3662  047E                     __ptext1007:	
  3663 ;; =============== function _clearParaFunction1 ends ============
  3664                           
  3665                           
  3666 ;; *************** function _clearPinPortAndTimer *****************
  3667 ;; Defined at:
  3668 ;;		line 110 in file "C:\temp\dev\AK7030-OTP\main.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;		None               void
  3675 ;; Registers used:
  3676 ;;		status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 60/0
  3679 ;;		On exit  : 60/0
  3680 ;;		Unchanged: FFF9F/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0
  3685 ;;      Totals:         0       0       0       0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    4
  3689 ;; This function calls:
  3690 ;;		_clearAllTimer
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695  047E                     _clearPinPortAndTimer:	
  3696                           
  3697                           ;main.c: 112: PB0 = 0;
  3698                           
  3699                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3700  047E  1006               	bcf	6,0
  3701                           
  3702                           ;main.c: 113: PA0 = 0;
  3703  047F  1005               	bcf	5,0
  3704                           
  3705                           ;main.c: 114: PA1 = 0;
  3706  0480  1085               	bcf	5,1
  3707                           
  3708                           ;main.c: 115: PA2 = 0;
  3709  0481  1105               	bcf	5,2
  3710                           
  3711                           ;main.c: 116: PA3 = 0;
  3712  0482  1185               	bcf	5,3
  3713                           
  3714                           ;main.c: 119: PBOD7 = 0;
  3715  0483  1683               	bsf	3,5	;RP0=1, select bank3
  3716  0484  1703               	bsf	3,6	;RP1=1, select bank3
  3717  0485  1388               	bcf	8,7
  3718                           
  3719                           ;main.c: 120: PB7 = 0;
  3720  0486  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0487  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0488  1386               	bcf	6,7
  3723                           
  3724                           ;main.c: 121: clearAllTimer();
  3725  0489  2CC9               	ljmp	l4745
  3726  048A                     __end_of_clearPinPortAndTimer:	
  3727  048A                     __ptext1006:	
  3728 ;; =============== function _process_AD_Converter_Value ends ============
  3729                           
  3730                           
  3731 ;; *************** function _clearParaFunction1 *****************
  3732 ;; Defined at:
  3733 ;;		line 581 in file "C:\temp\dev\AK7030-OTP\main.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 160/0
  3744 ;;		On exit  : 160/0
  3745 ;;		Unchanged: FFE9F/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    4
  3754 ;; This function calls:
  3755 ;;		_setPA1
  3756 ;;		_setPA0
  3757 ;;		_setPB0
  3758 ;;		_setPB1
  3759 ;;		_setPB2
  3760 ;;		_clearAllTimer
  3761 ;;		_setPA3
  3762 ;;		_setPB4
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767  048A                     _clearParaFunction1:	
  3768                           
  3769                           ;main.c: 582: setPA1(0);
  3770                           
  3771                           ; Regs used in _clearParaFunction1: [wreg+status,2+status,0+pclath+cstack]
  3772  048A  3000               	movlw	0
  3773  048B  24C1  118A         	fcall	_setPA1
  3774                           
  3775                           ;main.c: 583: setPA0(0);
  3776  048D  3000               	movlw	0
  3777  048E  24B8  118A         	fcall	_setPA0
  3778                           
  3779                           ;main.c: 585: setPB0(0);
  3780  0490  3000               	movlw	0
  3781  0491  24A0  118A         	fcall	_setPB0
  3782                           
  3783                           ;main.c: 586: setPB1(0);
  3784  0493  3000               	movlw	0
  3785  0494  24A8  118A         	fcall	_setPB1
  3786                           
  3787                           ;main.c: 587: setPB2(0);
  3788  0496  3000               	movlw	0
  3789  0497  24B0  118A         	fcall	_setPB2
  3790                           
  3791                           ;main.c: 589: clearAllTimer();
  3792  0499  24C9  118A         	fcall	_clearAllTimer
  3793                           
  3794                           ;main.c: 591: setPA3(0);
  3795  049B  3000               	movlw	0
  3796  049C  2622  118A         	fcall	_setPA3
  3797                           
  3798                           ;main.c: 592: setPB4(0);
  3799  049E  3000               	movlw	0
  3800  049F  2D2E               	ljmp	_setPB4
  3801  04A0                     __end_of_clearParaFunction1:	
  3802  04A0                     __ptext1044:	
  3803 ;; =============== function _setPB1 ends ============
  3804                           
  3805                           
  3806 ;; *************** function _setPB0 *****************
  3807 ;; Defined at:
  3808 ;;		line 166 in file "C:\temp\dev\AK7030-OTP\main.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  bValue          1    wreg     unsigned char 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  bValue          1    0[BANK0 ] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg
  3817 ;; Tracked objects:
  3818 ;;		On entry : 60/0
  3819 ;;		On exit  : 60/0
  3820 ;;		Unchanged: FFF9F/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3822 ;;      Params:         0       0       0       0       0
  3823 ;;      Locals:         0       1       0       0       0
  3824 ;;      Temps:          0       0       0       0       0
  3825 ;;      Totals:         0       1       0       0       0
  3826 ;;Total ram usage:        1 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    2
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_clearParaFunction1
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836  04A0                     _setPB0:	
  3837                           
  3838                           ; Regs used in _setPB0: [wreg]
  3839                           ;setPB0@bValue stored from wreg
  3840  04A0  00A0               	movwf	setPB0@bValue
  3841                           
  3842                           ;main.c: 167: if( bValue )
  3843  04A1  0820               	movf	setPB0@bValue,w
  3844  04A2  1903               	btfsc	3,2
  3845  04A3  2CA6               	goto	l702
  3846                           
  3847                           ;main.c: 169: PB0 = 1;
  3848  04A4  1406               	bsf	6,0
  3849  04A5  0008               	return
  3850  04A6                     l702:	
  3851                           
  3852                           ;main.c: 173: else
  3853                           ;main.c: 175: PB0 = 0;
  3854  04A6  1006               	bcf	6,0
  3855  04A7  0008               	return
  3856  04A8                     __end_of_setPB0:	
  3857  04A8                     __ptext1043:	
  3858 ;; =============== function _setPB2 ends ============
  3859                           
  3860                           
  3861 ;; *************** function _setPB1 *****************
  3862 ;; Defined at:
  3863 ;;		line 183 in file "C:\temp\dev\AK7030-OTP\main.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  bValue          1    wreg     unsigned char 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  bValue          1    0[BANK0 ] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;		None               void
  3870 ;; Registers used:
  3871 ;;		wreg
  3872 ;; Tracked objects:
  3873 ;;		On entry : 60/0
  3874 ;;		On exit  : 60/0
  3875 ;;		Unchanged: FFF9F/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3877 ;;      Params:         0       0       0       0       0
  3878 ;;      Locals:         0       1       0       0       0
  3879 ;;      Temps:          0       0       0       0       0
  3880 ;;      Totals:         0       1       0       0       0
  3881 ;;Total ram usage:        1 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    2
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_clearParaFunction1
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891  04A8                     _setPB1:	
  3892                           
  3893                           ; Regs used in _setPB1: [wreg]
  3894                           ;setPB1@bValue stored from wreg
  3895  04A8  00A0               	movwf	setPB1@bValue
  3896                           
  3897                           ;main.c: 184: if( bValue )
  3898  04A9  0820               	movf	setPB1@bValue,w
  3899  04AA  1903               	btfsc	3,2
  3900  04AB  2CAE               	goto	l707
  3901                           
  3902                           ;main.c: 186: PB1 = 1;
  3903  04AC  1486               	bsf	6,1
  3904  04AD  0008               	return
  3905  04AE                     l707:	
  3906                           
  3907                           ;main.c: 190: else
  3908                           ;main.c: 192: PB1 = 0;
  3909  04AE  1086               	bcf	6,1
  3910  04AF  0008               	return
  3911  04B0                     __end_of_setPB1:	
  3912  04B0                     __ptext1042:	
  3913 ;; =============== function _setPA0 ends ============
  3914                           
  3915                           
  3916 ;; *************** function _setPB2 *****************
  3917 ;; Defined at:
  3918 ;;		line 200 in file "C:\temp\dev\AK7030-OTP\main.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  bValue          1    wreg     unsigned char 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  bValue          1    0[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;		None               void
  3925 ;; Registers used:
  3926 ;;		wreg
  3927 ;; Tracked objects:
  3928 ;;		On entry : 60/0
  3929 ;;		On exit  : 60/0
  3930 ;;		Unchanged: FFF9F/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3932 ;;      Params:         0       0       0       0       0
  3933 ;;      Locals:         0       1       0       0       0
  3934 ;;      Temps:          0       0       0       0       0
  3935 ;;      Totals:         0       1       0       0       0
  3936 ;;Total ram usage:        1 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    2
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_clearParaFunction1
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946  04B0                     _setPB2:	
  3947                           
  3948                           ; Regs used in _setPB2: [wreg]
  3949                           ;setPB2@bValue stored from wreg
  3950  04B0  00A0               	movwf	setPB2@bValue
  3951                           
  3952                           ;main.c: 201: if( bValue )
  3953  04B1  0820               	movf	setPB2@bValue,w
  3954  04B2  1903               	btfsc	3,2
  3955  04B3  2CB6               	goto	l712
  3956                           
  3957                           ;main.c: 203: PB2 = 1;
  3958  04B4  1506               	bsf	6,2
  3959  04B5  0008               	return
  3960  04B6                     l712:	
  3961                           
  3962                           ;main.c: 207: else
  3963                           ;main.c: 209: PB2 = 0;
  3964  04B6  1106               	bcf	6,2
  3965  04B7  0008               	return
  3966  04B8                     __end_of_setPB2:	
  3967  04B8                     __ptext1041:	
  3968 ;; =============== function _setPA1 ends ============
  3969                           
  3970                           
  3971 ;; *************** function _setPA0 *****************
  3972 ;; Defined at:
  3973 ;;		line 217 in file "C:\temp\dev\AK7030-OTP\main.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  bValue          1    wreg     unsigned char 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  bValue          1    0[BANK0 ] unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;		None               void
  3980 ;; Registers used:
  3981 ;;		wreg
  3982 ;; Tracked objects:
  3983 ;;		On entry : 40/0
  3984 ;;		On exit  : 60/0
  3985 ;;		Unchanged: FFF9F/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         0       0       0       0       0
  3988 ;;      Locals:         0       1       0       0       0
  3989 ;;      Temps:          0       0       0       0       0
  3990 ;;      Totals:         0       1       0       0       0
  3991 ;;Total ram usage:        1 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    2
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_clearParaFunction1
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001  04B8                     _setPA0:	
  4002                           
  4003                           ; Regs used in _setPA0: [wreg]
  4004                           ;setPA0@bValue stored from wreg
  4005  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  4006  04B9  00A0               	movwf	setPA0@bValue
  4007                           
  4008                           ;main.c: 218: if( bValue )
  4009  04BA  0820               	movf	setPA0@bValue,w
  4010  04BB  1903               	btfsc	3,2
  4011  04BC  2CBF               	goto	l717
  4012                           
  4013                           ;main.c: 220: PA0 = 1;
  4014  04BD  1405               	bsf	5,0
  4015  04BE  0008               	return
  4016  04BF                     l717:	
  4017                           
  4018                           ;main.c: 224: else
  4019                           ;main.c: 226: PA0 = 0;
  4020  04BF  1005               	bcf	5,0
  4021  04C0  0008               	return
  4022  04C1                     __end_of_setPA0:	
  4023  04C1                     __ptext1040:	
  4024 ;; =============== function _setPA2 ends ============
  4025                           
  4026                           
  4027 ;; *************** function _setPA1 *****************
  4028 ;; Defined at:
  4029 ;;		line 234 in file "C:\temp\dev\AK7030-OTP\main.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  bValue          1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  bValue          1    0[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;		None               void
  4036 ;; Registers used:
  4037 ;;		wreg
  4038 ;; Tracked objects:
  4039 ;;		On entry : 60/0
  4040 ;;		On exit  : 60/0
  4041 ;;		Unchanged: FFF9F/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4043 ;;      Params:         0       0       0       0       0
  4044 ;;      Locals:         0       1       0       0       0
  4045 ;;      Temps:          0       0       0       0       0
  4046 ;;      Totals:         0       1       0       0       0
  4047 ;;Total ram usage:        1 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    2
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_clearParaFunction1
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057  04C1                     _setPA1:	
  4058                           
  4059                           ; Regs used in _setPA1: [wreg]
  4060                           ;setPA1@bValue stored from wreg
  4061  04C1  00A0               	movwf	setPA1@bValue
  4062                           
  4063                           ;main.c: 235: if( bValue )
  4064  04C2  0820               	movf	setPA1@bValue,w
  4065  04C3  1903               	btfsc	3,2
  4066  04C4  2CC7               	goto	l722
  4067                           
  4068                           ;main.c: 237: PA1 = 1;
  4069  04C5  1485               	bsf	5,1
  4070  04C6  0008               	return
  4071  04C7                     l722:	
  4072                           
  4073                           ;main.c: 241: else
  4074                           ;main.c: 243: PA1 = 0;
  4075  04C7  1085               	bcf	5,1
  4076  04C8  0008               	return
  4077  04C9                     __end_of_setPA1:	
  4078  04C9                     __ptext1014:	
  4079 ;; =============== function _getAdOriginalCh0Value ends ============
  4080                           
  4081                           
  4082 ;; *************** function _clearAllTimer *****************
  4083 ;; Defined at:
  4084 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\main.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;		None               void
  4091 ;; Registers used:
  4092 ;;		status,2, status,0, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 40/20
  4095 ;;		On exit  : 60/0
  4096 ;;		Unchanged: FFF9F/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    3
  4105 ;; This function calls:
  4106 ;;		_clearTwelveHoursTimer
  4107 ;;		_clearThreeHoursTimer
  4108 ;;		_clearTwentySecondsTimer
  4109 ;;		_clearTwentyMinuteTimer
  4110 ;; This function is called by:
  4111 ;;		_clearPinPortAndTimer
  4112 ;;		_clearParaFunction1
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116  04C9                     _clearAllTimer:	
  4117  04C9                     l4745:	
  4118                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  4119                           
  4120                           
  4121                           ;main.c: 101: clearTwelveHoursTimer();
  4122  04C9  24D0  118A         	fcall	_clearTwelveHoursTimer
  4123                           
  4124                           ;main.c: 102: clearThreeHoursTimer();
  4125  04CB  24D6  118A         	fcall	_clearThreeHoursTimer
  4126                           
  4127                           ;main.c: 103: clearTwentySecondsTimer();
  4128  04CD  26E1  118A         	fcall	_clearTwentySecondsTimer
  4129                           
  4130                           ;main.c: 104: clearTwentyMinuteTimer();
  4131  04CF  2EE9               	ljmp	l4415
  4132  04D0                     __end_of_clearAllTimer:	
  4133  04D0                     __ptext1049:	
  4134 ;; =============== function _clearThreeHoursTimer ends ============
  4135                           
  4136                           
  4137 ;; *************** function _clearTwelveHoursTimer *****************
  4138 ;; Defined at:
  4139 ;;		line 406 in file "C:\temp\dev\AK7030-OTP\common.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;		None               void
  4146 ;; Registers used:
  4147 ;;		status,2
  4148 ;; Tracked objects:
  4149 ;;		On entry : 40/20
  4150 ;;		On exit  : 60/0
  4151 ;;		Unchanged: FFF9F/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         0       0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0
  4156 ;;      Totals:         0       0       0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    2
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_clearAllTimer
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166  04D0                     _clearTwelveHoursTimer:	
  4167                           
  4168                           ;common.c: 407: uiBigTimer = 0;
  4169                           
  4170                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4171  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  4172  04D1  01A0               	clrf	_uiBigTimer^(0+128)
  4173  04D2  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  4174                           
  4175                           ;common.c: 408: bBigTimerStartFlag = 0;
  4176  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  4177  04D4  01CC               	clrf	_bBigTimerStartFlag
  4178  04D5  0008               	return
  4179  04D6                     __end_of_clearTwelveHoursTimer:	
  4180  04D6                     __ptext1048:	
  4181 ;; =============== function _clearTwentySecondsTimer ends ============
  4182                           
  4183                           
  4184 ;; *************** function _clearThreeHoursTimer *****************
  4185 ;; Defined at:
  4186 ;;		line 413 in file "C:\temp\dev\AK7030-OTP\common.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;		None               void
  4193 ;; Registers used:
  4194 ;;		status,2
  4195 ;; Tracked objects:
  4196 ;;		On entry : 60/0
  4197 ;;		On exit  : 60/0
  4198 ;;		Unchanged: FFF9F/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0
  4203 ;;      Totals:         0       0       0       0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    2
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_clearAllTimer
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214  04D6                     _clearThreeHoursTimer:	
  4215                           
  4216                           ;common.c: 414: uiSmallTimer = 0;
  4217                           
  4218                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4219  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  4220  04D7  01A2               	clrf	_uiSmallTimer^(0+128)
  4221  04D8  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  4222                           
  4223                           ;common.c: 415: bSmallTimerStartFlag = 0;
  4224  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4225  04DA  01CD               	clrf	_bSmallTimerStartFlag
  4226  04DB  0008               	return
  4227  04DC                     __end_of_clearThreeHoursTimer:	
  4228  04DC                     __ptext1010:	
  4229 ;; =============== function _getAdOriginalCh2Value ends ============
  4230                           
  4231                           
  4232 ;; *************** function _vHandle20sTimerOut *****************
  4233 ;; Defined at:
  4234 ;;		line 2487 in file "C:\temp\dev\AK7030-OTP\main.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  bClearStep      1    wreg     unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  bClearStep      1    1[BANK0 ] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;		None               void
  4241 ;; Registers used:
  4242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 140/0
  4245 ;;		On exit  : 160/20
  4246 ;;		Unchanged: FFE9F/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         0       1       0       0       0
  4250 ;;      Temps:          0       0       0       0       0
  4251 ;;      Totals:         0       1       0       0       0
  4252 ;;Total ram usage:        1 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    3
  4255 ;; This function calls:
  4256 ;;		_setPA3
  4257 ;;		_setPB4
  4258 ;;		_setPB6
  4259 ;;		_setPB6AsInput
  4260 ;;		_clearTwentySecondsTimer
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265  04DC                     _vHandle20sTimerOut:	
  4266                           
  4267                           ; Regs used in _vHandle20sTimerOut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4268                           ;vHandle20sTimerOut@bClearStep stored from wreg
  4269  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  4270  04DD  00A1               	movwf	vHandle20sTimerOut@bClearStep
  4271                           
  4272                           ;main.c: 2488: static unsigned char ucTimerOnBehaviorStep = 0;
  4273                           ;main.c: 2490: static unsigned char ucTimeCnt = 0;
  4274                           ;main.c: 2492: if( 1 == bClearStep)
  4275  04DE  0B21               	decfsz	vHandle20sTimerOut@bClearStep,w
  4276  04DF  2D1B               	goto	l4809
  4277                           
  4278                           ;main.c: 2495: ucTimerOnBehaviorStep = 0;
  4279  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  4280  04E1  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4281                           
  4282                           ;main.c: 2496: ucTimeCnt = 0;
  4283  04E2  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4284  04E3  2D1B               	goto	l4809
  4285  04E4                     l4763:	
  4286                           
  4287                           ;main.c: 2502: {
  4288                           ;main.c: 2507: setPA3(0);
  4289  04E4  3000               	movlw	0
  4290  04E5  2622  118A         	fcall	_setPA3
  4291                           
  4292                           ;main.c: 2508: setPB4(0);
  4293  04E7  3000               	movlw	0
  4294  04E8  252E  118A         	fcall	_setPB4
  4295                           
  4296                           ;main.c: 2509: setPB6(1);
  4297  04EA  3001               	movlw	1
  4298  04EB  2634               	fcall	_setPB6
  4299                           
  4300                           ;main.c: 2510: ucTimeCnt = 0;
  4301  04EC  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4302                           
  4303                           ;main.c: 2511: ucTimerOnBehaviorStep = 1;
  4304  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  4305  04EE  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4306  04EF  0AB8               	incf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),f
  4307                           
  4308                           ;main.c: 2512: break;
  4309  04F0  0008               	return
  4310  04F1                     l4769:	
  4311  04F1  300A               	movlw	10
  4312                           
  4313                           ;main.c: 2516: {
  4314                           ;main.c: 2520: ucTimeCnt++;
  4315  04F2  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4316                           
  4317                           ;main.c: 2522: if( ucTimeCnt >= 10)
  4318  04F3  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4319  04F4  1C03               	skipc
  4320  04F5  0008               	return
  4321  04F6  3002               	movlw	2
  4322                           
  4323                           ;main.c: 2523: {
  4324                           ;main.c: 2524: ucTimeCnt = 0;
  4325  04F7  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4326                           
  4327                           ;main.c: 2525: ucTimerOnBehaviorStep = 2;
  4328  04F8  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4329  04F9  0008               	return
  4330  04FA                     l4777:	
  4331                           
  4332                           ;main.c: 2531: {
  4333                           ;main.c: 2535: ucTimeCnt++;
  4334  04FA  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4335                           
  4336                           ;main.c: 2537: if( ucTimeCnt >= 1)
  4337  04FB  087D               	movf	vHandle20sTimerOut@ucTimeCnt,w
  4338  04FC  1903               	btfsc	3,2
  4339  04FD  0008               	return
  4340  04FE  3003               	movlw	3
  4341                           
  4342                           ;main.c: 2538: {
  4343                           ;main.c: 2539: ucTimeCnt = 0;
  4344  04FF  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4345                           
  4346                           ;main.c: 2541: ucTimerOnBehaviorStep = 3;
  4347  0500  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4348  0501  0008               	return
  4349  0502                     l4785:	
  4350                           
  4351                           ;main.c: 2547: {
  4352                           ;main.c: 2551: setPA3(1);
  4353  0502  3001               	movlw	1
  4354  0503  2622  118A         	fcall	_setPA3
  4355                           
  4356                           ;main.c: 2552: setPB4(1);
  4357  0505  3001               	movlw	1
  4358  0506  252E  118A         	fcall	_setPB4
  4359                           
  4360                           ;main.c: 2554: setPB6AsInput();
  4361  0508  2642               	fcall	_setPB6AsInput
  4362  0509  3004               	movlw	4
  4363                           
  4364                           ;main.c: 2555: ucTimeCnt = 0;
  4365  050A  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4366                           
  4367                           ;main.c: 2557: ucTimerOnBehaviorStep = 4;
  4368  050B  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4369                           
  4370                           ;main.c: 2558: break;
  4371  050C  0008               	return
  4372  050D                     l4793:	
  4373  050D  3002               	movlw	2
  4374                           
  4375                           ;main.c: 2561: {
  4376                           ;main.c: 2565: ucTimeCnt++;
  4377  050E  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4378                           
  4379                           ;main.c: 2567: if( ucTimeCnt >= 2)
  4380  050F  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4381  0510  1C03               	skipc
  4382  0511  0008               	return
  4383                           
  4384                           ;main.c: 2568: {
  4385                           ;main.c: 2569: clearTwentySecondsTimer();
  4386  0512  26E1               	fcall	_clearTwentySecondsTimer
  4387                           
  4388                           ;main.c: 2571: ucTimeCnt = 0;
  4389  0513  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4390                           
  4391                           ;main.c: 2573: ucADC4_Step = ADC4_STEP_INIT;
  4392  0514  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0515  3003               	movlw	3
  4394  0516  01D3               	clrf	_ucADC4_Step
  4395                           
  4396                           ;main.c: 2575: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4397  0517  00D0               	movwf	_enumMainLoopStep
  4398                           
  4399                           ;main.c: 2577: ucTimerOnBehaviorStep = 0;
  4400  0518  1683               	bsf	3,5	;RP0=1, select bank1
  4401  0519  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4402  051A  0008               	return
  4403  051B                     l4809:	
  4404  051B  1683               	bsf	3,5	;RP0=1, select bank1
  4405  051C  0838               	movf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),w
  4406                           
  4407                           ; Switch size 1, requested type "space"
  4408                           ; Number of cases is 5, Range of values is 0 to 4
  4409                           ; switch strategies available:
  4410                           ; Name         Instructions Cycles
  4411                           ; simple_byte           16     9 (average)
  4412                           ; direct_byte           17     7 (fixed)
  4413                           ; jumptable            260     6 (fixed)
  4414                           ; rangetable             9     6 (fixed)
  4415                           ; spacedrange           16     9 (fixed)
  4416                           ; locatedrange           5     3 (fixed)
  4417                           ;	Chosen strategy is simple_byte
  4418  051D  3A00               	xorlw	0	; case 0
  4419  051E  1903               	skipnz
  4420  051F  2CE4               	goto	l4763
  4421  0520  3A01               	xorlw	1	; case 1
  4422  0521  1903               	skipnz
  4423  0522  2CF1               	goto	l4769
  4424  0523  3A03               	xorlw	3	; case 2
  4425  0524  1903               	skipnz
  4426  0525  2CFA               	goto	l4777
  4427  0526  3A01               	xorlw	1	; case 3
  4428  0527  1903               	skipnz
  4429  0528  2D02               	goto	l4785
  4430  0529  3A07               	xorlw	7	; case 4
  4431  052A  1903               	skipnz
  4432  052B  2D0D               	goto	l4793
  4433  052C  2D2D               	goto	l1128
  4434  052D                     l1128:	
  4435  052D  0008               	return
  4436  052E                     __end_of_vHandle20sTimerOut:	
  4437  052E                     __ptext1036:	
  4438 ;; =============== function _setPA6 ends ============
  4439                           
  4440                           
  4441 ;; *************** function _setPB4 *****************
  4442 ;; Defined at:
  4443 ;;		line 310 in file "C:\temp\dev\AK7030-OTP\main.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  bValue          1    wreg     unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  bValue          1    0[BANK0 ] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;		None               void
  4450 ;; Registers used:
  4451 ;;		wreg
  4452 ;; Tracked objects:
  4453 ;;		On entry : 60/0
  4454 ;;		On exit  : 60/0
  4455 ;;		Unchanged: FFF9F/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4457 ;;      Params:         0       0       0       0       0
  4458 ;;      Locals:         0       1       0       0       0
  4459 ;;      Temps:          0       0       0       0       0
  4460 ;;      Totals:         0       1       0       0       0
  4461 ;;Total ram usage:        1 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    2
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_clearParaFunction1
  4468 ;;		_main
  4469 ;;		_vHandle20sTimerOut
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472  052E                     _setPB4:	
  4473                           
  4474                           ; Regs used in _setPB4: [wreg]
  4475                           ;setPB4@bValue stored from wreg
  4476  052E  00A0               	movwf	setPB4@bValue
  4477                           
  4478                           ;main.c: 311: if( bValue )
  4479  052F  0820               	movf	setPB4@bValue,w
  4480  0530  1903               	btfsc	3,2
  4481  0531  2D34               	goto	l742
  4482                           
  4483                           ;main.c: 313: PB4 = 1;
  4484  0532  1606               	bsf	6,4
  4485  0533  0008               	return
  4486  0534                     l742:	
  4487                           
  4488                           ;main.c: 317: else
  4489                           ;main.c: 319: PB4 = 0;
  4490  0534  1206               	bcf	6,4
  4491  0535  0008               	return
  4492  0536                     __end_of_setPB4:	
  4493  0536                     __ptext1004:	
  4494 ;; =============== function _main ends ============
  4495                           
  4496                           
  4497 ;; *************** function _vHandle20sTimeron *****************
  4498 ;; Defined at:
  4499 ;;		line 2210 in file "C:\temp\dev\AK7030-OTP\main.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;		None               void
  4506 ;; Registers used:
  4507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 140/0
  4510 ;;		On exit  : 140/0
  4511 ;;		Unchanged: FFE00/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4513 ;;      Params:         0       0       0       0       0
  4514 ;;      Locals:         0       0       0       0       0
  4515 ;;      Temps:          0       0       0       0       0
  4516 ;;      Totals:         0       0       0       0       0
  4517 ;;Total ram usage:        0 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    4
  4520 ;; This function calls:
  4521 ;;		_getAdOriginalCh2Value
  4522 ;;		_getAdOriginalCh6Value
  4523 ;;		_vPause20sTimer
  4524 ;;		_setPA3
  4525 ;;		_setPB6
  4526 ;;		_setPB6AsInput
  4527 ;; This function is called by:
  4528 ;;		_main
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531  0536                     _vHandle20sTimeron:	
  4532                           
  4533                           ;main.c: 2211: enum enum_waiting_loop_step
  4534                           ;main.c: 2212: {
  4535                           ;main.c: 2213: WAITING_LOOP_STEP1 = 0,
  4536                           ;main.c: 2214: WAITING_LOOP_STEP2,
  4537                           ;main.c: 2215: WAITING_LOOP_STEP3,
  4538                           ;main.c: 2216: WAITING_LOOP_STEP4,
  4539                           ;main.c: 2217: WAITING_LOOP_STEP5,
  4540                           ;main.c: 2218: WAITING_LOOP_STEP6,
  4541                           ;main.c: 2219: WAITING_LOOP_STEP7,
  4542                           ;main.c: 2220: WAITING_LOOP_STEP8,
  4543                           ;main.c: 2221: WAITING_LOOP_STEP9,
  4544                           ;main.c: 2222: };
  4545                           ;main.c: 2224: enum enumCmpStep
  4546                           ;main.c: 2225: {
  4547                           ;main.c: 2226: COMPARE_STEP0 = 0,
  4548                           ;main.c: 2227: COMPARE_STEP1,
  4549                           ;main.c: 2228: COMPARE_STEP2,
  4550                           
  4551                           ; Regs used in _vHandle20sTimeron: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4552  0536  2E03               	goto	l4993
  4553  0537                     l4859:	
  4554                           
  4555                           ;main.c: 2245: {
  4556                           ;main.c: 2246: if((getAdOriginalCh2Value() > 1950))
  4557  0537  2619  118A         	fcall	_getAdOriginalCh2Value
  4558  0539  3007               	movlw	7
  4559  053A  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4560  053B  309F               	movlw	159
  4561  053C  1903               	skipnz
  4562  053D  0246               	subwf	?_getAdOriginalCh2Value,w
  4563  053E  1C03               	skipc
  4564  053F  2D44               	goto	l4865
  4565                           
  4566                           ;main.c: 2247: {
  4567                           ;main.c: 2248: ucTimerCntMore++;
  4568  0540  1683               	bsf	3,5	;RP0=1, select bank1
  4569  0541  0AC0               	incf	vHandle20sTimeron@ucTimerCntMore^(0+128),f
  4570                           
  4571                           ;main.c: 2249: ucTimerCntLess = 0;
  4572  0542  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4573                           
  4574                           ;main.c: 2250: }
  4575  0543  2D47               	goto	l4869
  4576  0544                     l4865:	
  4577                           
  4578                           ;main.c: 2251: else
  4579                           ;main.c: 2252: {
  4580                           ;main.c: 2253: ucTimerCntLess++;
  4581  0544  1683               	bsf	3,5	;RP0=1, select bank1
  4582  0545  0ABF               	incf	vHandle20sTimeron@ucTimerCntLess^(0+128),f
  4583                           
  4584                           ;main.c: 2254: ucTimerCntMore = 0;
  4585  0546  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4586  0547                     l4869:	
  4587                           
  4588                           ;main.c: 2255: }
  4589                           ;main.c: 2257: if(ucTimerCntMore >= 2)
  4590  0547  3002               	movlw	2
  4591  0548  0240               	subwf	vHandle20sTimeron@ucTimerCntMore^(0+128),w
  4592  0549  1C03               	skipc
  4593  054A  2D4E               	goto	l4875
  4594                           
  4595                           ;main.c: 2258: {
  4596                           ;main.c: 2259: ucCompareStep = COMPARE_STEP1;
  4597  054B  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4598  054C  0AB9               	incf	vHandle20sTimeron@ucCompareStep^(0+128),f
  4599                           
  4600                           ;main.c: 2260: ucTimerCntMore = 0;
  4601  054D  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4602  054E                     l4875:	
  4603                           
  4604                           ;main.c: 2261: }
  4605                           ;main.c: 2263: if(ucTimerCntLess >= 2)
  4606  054E  3002               	movlw	2
  4607  054F  023F               	subwf	vHandle20sTimeron@ucTimerCntLess^(0+128),w
  4608  0550  1C03               	skipc
  4609  0551  2E0F               	goto	l4995
  4610                           
  4611                           ;main.c: 2264: {
  4612                           ;main.c: 2265: ucCompareStep = COMPARE_STEP2;
  4613  0552  3002               	movlw	2
  4614  0553  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4615                           
  4616                           ;main.c: 2266: ucTimerCntLess = 0;
  4617  0554  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4618  0555  2E0F               	goto	l4995
  4619  0556                     l4881:	
  4620                           
  4621                           ;main.c: 2275: {
  4622                           ;main.c: 2276: static unsigned char ucMoreThanP8sCnt = 0;
  4623                           ;main.c: 2278: static unsigned char ucLessThanP8sCnt = 0;
  4624                           ;main.c: 2280: static unsigned char ucTimerCntN1 = 0;
  4625                           ;main.c: 2282: if((getAdOriginalCh2Value() < 1950))
  4626  0556  2619  118A         	fcall	_getAdOriginalCh2Value
  4627  0558  3007               	movlw	7
  4628  0559  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4629  055A  309E               	movlw	158
  4630  055B  1903               	skipnz
  4631  055C  0246               	subwf	?_getAdOriginalCh2Value,w
  4632  055D  1803               	skipnc
  4633  055E  2D6B               	goto	l4897
  4634                           
  4635                           ;main.c: 2283: {
  4636                           ;main.c: 2284: ucTimerCntN1++;
  4637  055F  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0560  3002               	movlw	2
  4639  0561  0AC1               	incf	vHandle20sTimeron@ucTimerCntN1^(0+128),f
  4640                           
  4641                           ;main.c: 2285: if(ucTimerCntN1 >= 2)
  4642  0562  0241               	subwf	vHandle20sTimeron@ucTimerCntN1^(0+128),w
  4643  0563  1C03               	skipc
  4644  0564  2E0F               	goto	l4995
  4645  0565  3002               	movlw	2
  4646                           
  4647                           ;main.c: 2286: {
  4648                           ;main.c: 2287: ucTimerCntN1 = 0;
  4649  0566  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4650                           
  4651                           ;main.c: 2288: ucCompareStep = COMPARE_STEP2;
  4652  0567  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4653                           
  4654                           ;main.c: 2290: ucLessThanP8sCnt = 0;
  4655  0568  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4656                           
  4657                           ;main.c: 2292: ucMoreThanP8sCnt = 0;
  4658  0569  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4659  056A  2E0F               	goto	l4995
  4660  056B                     l4897:	
  4661                           
  4662                           ;main.c: 2296: else
  4663                           ;main.c: 2297: ucTimerCntN1 = 0;
  4664  056B  1683               	bsf	3,5	;RP0=1, select bank1
  4665  056C  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4666                           
  4667                           ;main.c: 2303: if((getAdOriginalCh6Value() < 50))
  4668  056D  262B  118A         	fcall	_getAdOriginalCh6Value
  4669  056F  3000               	movlw	0
  4670  0570  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4671  0571  3032               	movlw	50
  4672  0572  1903               	skipnz
  4673  0573  0246               	subwf	?_getAdOriginalCh6Value,w
  4674  0574  1803               	skipnc
  4675  0575  2D7A               	goto	l4905
  4676                           
  4677                           ;main.c: 2304: {
  4678                           ;main.c: 2305: ucLessThanP8sCnt++;
  4679  0576  1683               	bsf	3,5	;RP0=1, select bank1
  4680  0577  0ABB               	incf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),f
  4681                           
  4682                           ;main.c: 2306: ucMoreThanP8sCnt = 0;
  4683  0578  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4684                           
  4685                           ;main.c: 2307: }
  4686  0579  2D7D               	goto	l4909
  4687  057A                     l4905:	
  4688                           
  4689                           ;main.c: 2308: else
  4690                           ;main.c: 2309: {
  4691                           ;main.c: 2310: ucMoreThanP8sCnt++;
  4692  057A  1683               	bsf	3,5	;RP0=1, select bank1
  4693  057B  0ABD               	incf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),f
  4694                           
  4695                           ;main.c: 2311: ucLessThanP8sCnt = 0;
  4696  057C  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4697  057D                     l4909:	
  4698                           
  4699                           ;main.c: 2312: }
  4700                           ;main.c: 2314: if( ucLessThanP8sCnt >= 8)
  4701  057D  3008               	movlw	8
  4702  057E  023B               	subwf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),w
  4703  057F  1C03               	skipc
  4704  0580  2D87               	goto	l4915
  4705                           
  4706                           ;main.c: 2315: {
  4707                           ;main.c: 2316: ucLessThanP8sCnt = 0;
  4708  0581  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4709                           
  4710                           ;main.c: 2317: ucMoreThanP8sCnt = 0;
  4711  0582  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4712                           
  4713                           ;main.c: 2319: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4714  0583  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0584  01D0               	clrf	_enumMainLoopStep
  4716  0585  0AD0               	incf	_enumMainLoopStep,f
  4717  0586  2D90               	goto	L16
  4718  0587                     l4915:	
  4719                           ;main.c: 2323: ;
  4720                           ;main.c: 2324: }
  4721                           
  4722                           ;main.c: 2322: ucCompareStep = COMPARE_STEP0;
  4723                           
  4724                           ;main.c: 2320: ucADC4_Step = ADC4_STEP_INIT;
  4725                           
  4726                           
  4727                           ;main.c: 2325: else if( ucMoreThanP8sCnt >= 8 )
  4728  0587  3008               	movlw	8
  4729  0588  023D               	subwf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),w
  4730  0589  1C03               	skipc
  4731  058A  2E0F               	goto	l4995
  4732  058B  3003               	movlw	3
  4733                           
  4734                           ;main.c: 2326: {
  4735                           ;main.c: 2327: ucLessThanP8sCnt = 0;
  4736  058C  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4737                           
  4738                           ;main.c: 2328: ucMoreThanP8sCnt = 0;
  4739  058D  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4740                           
  4741                           ;main.c: 2330: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4742  058E  1283               	bcf	3,5	;RP0=0, select bank0
  4743  058F  00D0               	movwf	_enumMainLoopStep
  4744  0590                     L16:	
  4745                           
  4746                           ;main.c: 2331: ucADC4_Step = ADC4_STEP_INIT;
  4747  0590  01D3               	clrf	_ucADC4_Step
  4748  0591                     l4923:	
  4749                           
  4750                           ;main.c: 2333: ucCompareStep = COMPARE_STEP0;
  4751  0591  1683               	bsf	3,5	;RP0=1, select bank1
  4752  0592  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4753                           
  4754                           ;main.c: 2334: ;
  4755                           ;main.c: 2335: }
  4756  0593  2E0F               	goto	l4995
  4757  0594                     l4925:	
  4758                           
  4759                           ;main.c: 2358: {
  4760                           ;main.c: 2362: vPause20sTimer(1);
  4761  0594  3001               	movlw	1
  4762  0595  2645  118A         	fcall	_vPause20sTimer
  4763  0597  3000               	movlw	0
  4764                           
  4765                           ;main.c: 2363: ucTimeCntP2s = 0;
  4766  0598  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4767                           
  4768                           ;main.c: 2364: setPA3(0);
  4769  0599  2622  118A         	fcall	_setPA3
  4770                           
  4771                           ;main.c: 2365: setPB6(1);
  4772  059B  3001               	movlw	1
  4773  059C  2634  118A         	fcall	_setPB6
  4774                           
  4775                           ;main.c: 2366: waitLoopStep = WAITING_LOOP_STEP2;
  4776  059E  1683               	bsf	3,5	;RP0=1, select bank1
  4777  059F  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4778  05A0  0AC3               	incf	vHandle20sTimeron@waitLoopStep^(0+128),f
  4779                           
  4780                           ;main.c: 2367: break;
  4781  05A1  2E0F               	goto	l4995
  4782  05A2                     l4935:	
  4783                           
  4784                           ;main.c: 2371: {
  4785                           ;main.c: 2375: if((getAdOriginalCh2Value() > 2300))
  4786  05A2  2619  118A         	fcall	_getAdOriginalCh2Value
  4787  05A4  3008               	movlw	8
  4788  05A5  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4789  05A6  30FD               	movlw	253
  4790  05A7  1903               	skipnz
  4791  05A8  0246               	subwf	?_getAdOriginalCh2Value,w
  4792  05A9  1C03               	skipc
  4793  05AA  2DAE               	goto	l4939
  4794                           
  4795                           ;main.c: 2376: {
  4796                           ;main.c: 2377: ucTimeCntP2s++;
  4797  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  4798  05AC  0ABE               	incf	vHandle20sTimeron@ucTimeCntP2s^(0+128),f
  4799                           
  4800                           ;main.c: 2378: }
  4801  05AD  2DB0               	goto	l4941
  4802  05AE                     l4939:	
  4803                           
  4804                           ;main.c: 2379: else
  4805                           ;main.c: 2380: ucTimeCntP2s = 0;
  4806  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  4807  05AF  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4808  05B0                     l4941:	
  4809                           
  4810                           ;main.c: 2382: if( ucTimeCntP2s >= 2)
  4811  05B0  3002               	movlw	2
  4812  05B1  023E               	subwf	vHandle20sTimeron@ucTimeCntP2s^(0+128),w
  4813  05B2  1C03               	skipc
  4814  05B3  2E0F               	goto	l4995
  4815  05B4  3002               	movlw	2
  4816                           
  4817                           ;main.c: 2383: {
  4818                           ;main.c: 2384: ucTimeCntP2s = 0;
  4819  05B5  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4820                           
  4821                           ;main.c: 2385: waitLoopStep = WAITING_LOOP_STEP3;
  4822  05B6  2DC6               	goto	L15
  4823  05B7                     l4947:	
  4824                           
  4825                           ;main.c: 2391: {
  4826                           ;main.c: 2395: setPA3(1);
  4827  05B7  3001               	movlw	1
  4828  05B8  2622  118A         	fcall	_setPA3
  4829                           
  4830                           ;main.c: 2397: setPB6AsInput();
  4831  05BA  2642  118A         	fcall	_setPB6AsInput
  4832                           
  4833                           ;main.c: 2398: waitLoopStep = WAITING_LOOP_STEP4;
  4834  05BC  3003               	movlw	3
  4835  05BD  2DC6               	goto	L15
  4836  05BE                     l4951:	
  4837                           ;main.c: 2399: break;
  4838                           
  4839                           
  4840                           ;main.c: 2403: {
  4841                           ;main.c: 2407: static unsigned char ucTimerCntP5s = 0;
  4842                           ;main.c: 2408: if( ucTimerCntP5s < 5)
  4843  05BE  3005               	movlw	5
  4844  05BF  0242               	subwf	vHandle20sTimeron@ucTimerCntP5s^(0+128),w
  4845  05C0  1803               	skipnc
  4846  05C1  2DC4               	goto	l4955
  4847                           
  4848                           ;main.c: 2409: ucTimerCntP5s++;
  4849  05C2  0AC2               	incf	vHandle20sTimeron@ucTimerCntP5s^(0+128),f
  4850  05C3  2E0F               	goto	l4995
  4851  05C4                     l4955:	
  4852  05C4  3004               	movlw	4
  4853                           
  4854                           ;main.c: 2410: else
  4855                           ;main.c: 2411: {
  4856                           ;main.c: 2412: ucTimerCntP5s = 0;
  4857  05C5  01C2               	clrf	vHandle20sTimeron@ucTimerCntP5s^(0+128)
  4858  05C6                     L15:	
  4859                           ;main.c: 2413: waitLoopStep = WAITING_LOOP_STEP5;
  4860                           
  4861  05C6  00C3               	movwf	vHandle20sTimeron@waitLoopStep^(0+128)
  4862  05C7  2E0F               	goto	l4995
  4863  05C8                     l4959:	
  4864                           
  4865                           ;main.c: 2420: {
  4866                           ;main.c: 2424: static unsigned char ucMoreThanP3sCnt = 0;
  4867                           ;main.c: 2426: static unsigned char ucLessThanP3sCnt = 0;
  4868                           ;main.c: 2427: if((getAdOriginalCh6Value() < 50))
  4869  05C8  262B  118A         	fcall	_getAdOriginalCh6Value
  4870  05CA  3000               	movlw	0
  4871  05CB  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4872  05CC  3032               	movlw	50
  4873  05CD  1903               	skipnz
  4874  05CE  0246               	subwf	?_getAdOriginalCh6Value,w
  4875  05CF  1803               	skipnc
  4876  05D0  2DD5               	goto	l4965
  4877                           
  4878                           ;main.c: 2428: {
  4879                           ;main.c: 2429: ucLessThanP3sCnt++;
  4880  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  4881  05D2  0ABA               	incf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),f
  4882                           
  4883                           ;main.c: 2430: ucMoreThanP3sCnt = 0;
  4884  05D3  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4885                           
  4886                           ;main.c: 2431: }
  4887  05D4  2DD8               	goto	l4969
  4888  05D5                     l4965:	
  4889                           
  4890                           ;main.c: 2432: else
  4891                           ;main.c: 2433: {
  4892                           ;main.c: 2434: ucMoreThanP3sCnt++;
  4893  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  4894  05D6  0ABC               	incf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),f
  4895                           
  4896                           ;main.c: 2435: ucLessThanP3sCnt = 0;
  4897  05D7  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4898  05D8                     l4969:	
  4899                           
  4900                           ;main.c: 2436: }
  4901                           ;main.c: 2438: if( ucLessThanP3sCnt >= 3)
  4902  05D8  3003               	movlw	3
  4903  05D9  023A               	subwf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),w
  4904  05DA  1C03               	skipc
  4905  05DB  2DE5               	goto	l4975
  4906                           
  4907                           ;main.c: 2439: {
  4908                           ;main.c: 2440: ucLessThanP3sCnt = 0;
  4909  05DC  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4910                           
  4911                           ;main.c: 2441: ucMoreThanP3sCnt = 0;
  4912  05DD  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4913                           
  4914                           ;main.c: 2443: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4915  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  4916  05DF  01D0               	clrf	_enumMainLoopStep
  4917  05E0  0AD0               	incf	_enumMainLoopStep,f
  4918                           
  4919                           ;main.c: 2444: ucADC4_Step = ADC4_STEP_INIT;
  4920  05E1  01D3               	clrf	_ucADC4_Step
  4921                           
  4922                           ;main.c: 2446: waitLoopStep = WAITING_LOOP_STEP1;
  4923  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  4924  05E3  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4925                           
  4926                           ;main.c: 2448: ucCompareStep = COMPARE_STEP0;
  4927  05E4  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4928  05E5                     l4975:	
  4929                           
  4930                           ;main.c: 2449: }
  4931                           ;main.c: 2451: if(ucMoreThanP3sCnt >= 3)
  4932  05E5  3003               	movlw	3
  4933  05E6  023C               	subwf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),w
  4934  05E7  1C03               	skipc
  4935  05E8  2E0F               	goto	l4995
  4936  05E9  3003               	movlw	3
  4937                           
  4938                           ;main.c: 2452: {
  4939                           ;main.c: 2453: ucLessThanP3sCnt = 0;
  4940  05EA  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4941                           
  4942                           ;main.c: 2454: ucMoreThanP3sCnt = 0;
  4943  05EB  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4944                           
  4945                           ;main.c: 2456: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4946  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  4947  05ED  00D0               	movwf	_enumMainLoopStep
  4948                           
  4949                           ;main.c: 2457: ucADC4_Step = ADC4_STEP_INIT;
  4950  05EE  01D3               	clrf	_ucADC4_Step
  4951                           
  4952                           ;main.c: 2459: waitLoopStep = WAITING_LOOP_STEP1;
  4953  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  4954  05F0  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4955  05F1  2D91               	goto	l4923
  4956  05F2                     l4989:	
  4957  05F2  0843               	movf	vHandle20sTimeron@waitLoopStep^(0+128),w
  4958                           
  4959                           ; Switch size 1, requested type "space"
  4960                           ; Number of cases is 5, Range of values is 0 to 4
  4961                           ; switch strategies available:
  4962                           ; Name         Instructions Cycles
  4963                           ; simple_byte           16     9 (average)
  4964                           ; direct_byte           17     7 (fixed)
  4965                           ; jumptable            260     6 (fixed)
  4966                           ; rangetable             9     6 (fixed)
  4967                           ; spacedrange           16     9 (fixed)
  4968                           ; locatedrange           5     3 (fixed)
  4969                           ;	Chosen strategy is simple_byte
  4970  05F3  3A00               	xorlw	0	; case 0
  4971  05F4  1903               	skipnz
  4972  05F5  2D94               	goto	l4925
  4973  05F6  3A01               	xorlw	1	; case 1
  4974  05F7  1903               	skipnz
  4975  05F8  2DA2               	goto	l4935
  4976  05F9  3A03               	xorlw	3	; case 2
  4977  05FA  1903               	skipnz
  4978  05FB  2DB7               	goto	l4947
  4979  05FC  3A01               	xorlw	1	; case 3
  4980  05FD  1903               	skipnz
  4981  05FE  2DBE               	goto	l4951
  4982  05FF  3A07               	xorlw	7	; case 4
  4983  0600  1903               	skipnz
  4984  0601  2DC8               	goto	l4959
  4985  0602  2E0F               	goto	l4995
  4986  0603                     l4993:	
  4987  0603  1683               	bsf	3,5	;RP0=1, select bank1
  4988  0604  0839               	movf	vHandle20sTimeron@ucCompareStep^(0+128),w
  4989                           
  4990                           ; Switch size 1, requested type "space"
  4991                           ; Number of cases is 3, Range of values is 0 to 2
  4992                           ; switch strategies available:
  4993                           ; Name         Instructions Cycles
  4994                           ; simple_byte           10     6 (average)
  4995                           ; direct_byte           13     7 (fixed)
  4996                           ; jumptable            260     6 (fixed)
  4997                           ; rangetable             7     6 (fixed)
  4998                           ; spacedrange           12     9 (fixed)
  4999                           ; locatedrange           3     3 (fixed)
  5000                           ;	Chosen strategy is simple_byte
  5001  0605  3A00               	xorlw	0	; case 0
  5002  0606  1903               	skipnz
  5003  0607  2D37               	goto	l4859
  5004  0608  3A01               	xorlw	1	; case 1
  5005  0609  1903               	skipnz
  5006  060A  2D56               	goto	l4881
  5007  060B  3A03               	xorlw	3	; case 2
  5008  060C  1903               	skipnz
  5009  060D  2DF2               	goto	l4989
  5010  060E  2E0F               	goto	l4995
  5011  060F                     l4995:	
  5012                           
  5013                           ;main.c: 2476: if(ADC4_STEP_INIT == ucADC4_Step)
  5014  060F  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0610  08D3               	movf	_ucADC4_Step,f
  5016  0611  1D03               	skipz
  5017  0612  0008               	return
  5018                           
  5019                           ;main.c: 2477: {
  5020                           ;main.c: 2478: ucTimerCntMore = 0;
  5021  0613  1683               	bsf	3,5	;RP0=1, select bank1
  5022  0614  3000               	movlw	0
  5023  0615  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  5024                           
  5025                           ;main.c: 2479: ucTimerCntLess = 0;
  5026  0616  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  5027                           
  5028                           ;main.c: 2480: ucCompareStep = COMPARE_STEP0;
  5029  0617  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  5030                           
  5031                           ;main.c: 2482: vPause20sTimer(0);
  5032  0618  2E45               	ljmp	_vPause20sTimer
  5033  0619                     __end_of_vHandle20sTimeron:	
  5034  0619                     __ptext1009:	
  5035 ;; =============== function _AD_Sample ends ============
  5036                           
  5037                           
  5038 ;; *************** function _getAdOriginalCh2Value *****************
  5039 ;; Defined at:
  5040 ;;		line 291 in file "C:\temp\dev\AK7030-OTP\common.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  2   38[BANK0 ] unsigned int 
  5047 ;; Registers used:
  5048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 140/20
  5051 ;;		On exit  : 160/0
  5052 ;;		Unchanged: FFE00/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5054 ;;      Params:         0       2       0       0       0
  5055 ;;      Locals:         0       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0
  5057 ;;      Totals:         0       2       0       0       0
  5058 ;;Total ram usage:        2 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    3
  5061 ;; This function calls:
  5062 ;;		_Filter
  5063 ;; This function is called by:
  5064 ;;		_vHandle20sTimeron
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067  0619                     _getAdOriginalCh2Value:	
  5068                           
  5069                           ;common.c: 293: return Filter(uiSampleChannelSecond);
  5070                           
  5071                           ; Regs used in _getAdOriginalCh2Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5072  0619  30A8               	movlw	_uiSampleChannelSecond& (0+255)
  5073  061A  2704  118A         	fcall	PL8	;call to abstracted procedure
  5074  061C  264A               	fcall	_Filter
  5075  061D  0821               	movf	?_Filter+1,w
  5076  061E  00C7               	movwf	?_getAdOriginalCh2Value+1
  5077  061F  0820               	movf	?_Filter,w
  5078  0620  00C6               	movwf	?_getAdOriginalCh2Value
  5079  0621  0008               	return
  5080  0622                     __end_of_getAdOriginalCh2Value:	
  5081  0622                     __ptext1038:	
  5082 ;; =============== function _setPB6 ends ============
  5083                           
  5084                           
  5085 ;; *************** function _setPA3 *****************
  5086 ;; Defined at:
  5087 ;;		line 269 in file "C:\temp\dev\AK7030-OTP\main.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  bValue          1    wreg     unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  bValue          1    0[BANK0 ] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;		None               void
  5094 ;; Registers used:
  5095 ;;		wreg
  5096 ;; Tracked objects:
  5097 ;;		On entry : 40/0
  5098 ;;		On exit  : 60/0
  5099 ;;		Unchanged: FFF9F/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         0       0       0       0       0
  5102 ;;      Locals:         0       1       0       0       0
  5103 ;;      Temps:          0       0       0       0       0
  5104 ;;      Totals:         0       1       0       0       0
  5105 ;;Total ram usage:        1 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    2
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_clearParaFunction1
  5112 ;;		_main
  5113 ;;		_vHandle20sTimeron
  5114 ;;		_vHandle20sTimerOut
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117  0622                     _setPA3:	
  5118                           
  5119                           ; Regs used in _setPA3: [wreg]
  5120                           ;setPA3@bValue stored from wreg
  5121  0622  1283               	bcf	3,5	;RP0=0, select bank0
  5122  0623  00A0               	movwf	setPA3@bValue
  5123                           
  5124                           ;main.c: 270: if( bValue )
  5125  0624  0820               	movf	setPA3@bValue,w
  5126  0625  1903               	btfsc	3,2
  5127  0626  2E29               	goto	l732
  5128                           
  5129                           ;main.c: 272: PA3 = 1;
  5130  0627  1585               	bsf	5,3
  5131  0628  0008               	return
  5132  0629                     l732:	
  5133                           
  5134                           ;main.c: 276: else
  5135                           ;main.c: 278: PA3 = 0;
  5136  0629  1185               	bcf	5,3
  5137  062A  0008               	return
  5138  062B                     __end_of_setPA3:	
  5139  062B                     __ptext1012:	
  5140 ;; =============== function _getAdOriginalCh5Value ends ============
  5141                           
  5142                           
  5143 ;; *************** function _getAdOriginalCh6Value *****************
  5144 ;; Defined at:
  5145 ;;		line 282 in file "C:\temp\dev\AK7030-OTP\common.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  2   38[BANK0 ] unsigned int 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 40/0
  5156 ;;		On exit  : 160/0
  5157 ;;		Unchanged: FFE00/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5159 ;;      Params:         0       2       0       0       0
  5160 ;;      Locals:         0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0
  5162 ;;      Totals:         0       2       0       0       0
  5163 ;;Total ram usage:        2 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    3
  5166 ;; This function calls:
  5167 ;;		_Filter
  5168 ;; This function is called by:
  5169 ;;		_main
  5170 ;;		_vHandle20sTimeron
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173  062B                     _getAdOriginalCh6Value:	
  5174                           
  5175                           ;common.c: 284: return Filter(uiSampleChannelSixth);
  5176                           
  5177                           ; Regs used in _getAdOriginalCh6Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5178  062B  30C0               	movlw	_uiSampleChannelSixth& (0+255)
  5179  062C  2704  118A         	fcall	PL8	;call to abstracted procedure
  5180  062E  264A               	fcall	_Filter
  5181  062F  0821               	movf	?_Filter+1,w
  5182  0630  00C7               	movwf	?_getAdOriginalCh6Value+1
  5183  0631  0820               	movf	?_Filter,w
  5184  0632  00C6               	movwf	?_getAdOriginalCh6Value
  5185  0633  0008               	return
  5186  0634                     __end_of_getAdOriginalCh6Value:	
  5187  0634                     __ptext1037:	
  5188 ;; =============== function _setPB4 ends ============
  5189                           
  5190                           
  5191 ;; *************** function _setPB6 *****************
  5192 ;; Defined at:
  5193 ;;		line 286 in file "C:\temp\dev\AK7030-OTP\main.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  bValue          1    wreg     unsigned char 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  bValue          1    0[BANK0 ] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;		None               void
  5200 ;; Registers used:
  5201 ;;		wreg
  5202 ;; Tracked objects:
  5203 ;;		On entry : 60/0
  5204 ;;		On exit  : 60/0
  5205 ;;		Unchanged: FFF9F/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         0       0       0       0       0
  5208 ;;      Locals:         0       1       0       0       0
  5209 ;;      Temps:          0       0       0       0       0
  5210 ;;      Totals:         0       1       0       0       0
  5211 ;;Total ram usage:        1 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    2
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;;		_vHandle20sTimeron
  5219 ;;		_vHandle20sTimerOut
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222  0634                     _setPB6:	
  5223                           
  5224                           ; Regs used in _setPB6: [wreg]
  5225                           ;setPB6@bValue stored from wreg
  5226  0634  00A0               	movwf	setPB6@bValue
  5227                           
  5228                           ;main.c: 287: if( bValue )
  5229  0635  0820               	movf	setPB6@bValue,w
  5230  0636  1903               	btfsc	3,2
  5231  0637  2E3D               	goto	l737
  5232                           
  5233                           ;main.c: 289: {
  5234                           ;main.c: 290: TRISB6 = 0;
  5235  0638  1683               	bsf	3,5	;RP0=1, select bank1
  5236  0639  1306               	bcf	6,6
  5237                           
  5238                           ;main.c: 291: PB6 = 1;
  5239  063A  1283               	bcf	3,5	;RP0=0, select bank0
  5240  063B  1706               	bsf	6,6
  5241                           
  5242                           ;main.c: 292: }
  5243  063C  0008               	return
  5244  063D                     l737:	
  5245                           
  5246                           ;main.c: 296: else
  5247                           ;main.c: 298: {
  5248                           ;main.c: 299: TRISB6 = 0;
  5249  063D  1683               	bsf	3,5	;RP0=1, select bank1
  5250  063E  1306               	bcf	6,6
  5251                           
  5252                           ;main.c: 300: PB6 = 0;
  5253  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0640  1306               	bcf	6,6
  5255  0641  0008               	return
  5256  0642                     __end_of_setPB6:	
  5257  0642                     __ptext1034:	
  5258 ;; =============== function _clock_config ends ============
  5259                           
  5260                           
  5261 ;; *************** function _setPB6AsInput *****************
  5262 ;; Defined at:
  5263 ;;		line 372 in file "C:\temp\dev\AK7030-OTP\main.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;		None               void
  5270 ;; Registers used:
  5271 ;;		None
  5272 ;; Tracked objects:
  5273 ;;		On entry : 160/0
  5274 ;;		On exit  : 160/20
  5275 ;;		Unchanged: FFE9F/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5277 ;;      Params:         0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0
  5280 ;;      Totals:         0       0       0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    2
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_vHandle20sTimeron
  5288 ;;		_vHandle20sTimerOut
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291  0642                     _setPB6AsInput:	
  5292                           
  5293                           ;main.c: 374: TRISB6 = 1;
  5294                           
  5295                           ; Regs used in _setPB6AsInput: []
  5296  0642  1683               	bsf	3,5	;RP0=1, select bank1
  5297  0643  1706               	bsf	6,6
  5298  0644  0008               	return
  5299  0645                     __end_of_setPB6AsInput:	
  5300  0645                     __ptext1018:	
  5301 ;; =============== function _Filter ends ============
  5302                           
  5303                           
  5304 ;; *************** function _vPause20sTimer *****************
  5305 ;; Defined at:
  5306 ;;		line 59 in file "C:\temp\dev\AK7030-OTP\common.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  bValue          1    wreg     unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  bValue          1    0[BANK0 ] unsigned char 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;		None               void
  5313 ;; Registers used:
  5314 ;;		wreg
  5315 ;; Tracked objects:
  5316 ;;		On entry : 140/20
  5317 ;;		On exit  : 160/20
  5318 ;;		Unchanged: FFE9F/0
  5319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5320 ;;      Params:         0       0       0       0       0
  5321 ;;      Locals:         0       1       0       0       0
  5322 ;;      Temps:          0       0       0       0       0
  5323 ;;      Totals:         0       1       0       0       0
  5324 ;;Total ram usage:        1 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    2
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_vHandle20sTimeron
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333  0645                     _vPause20sTimer:	
  5334                           
  5335                           ; Regs used in _vPause20sTimer: [wreg]
  5336                           ;vPause20sTimer@bValue stored from wreg
  5337  0645  1283               	bcf	3,5	;RP0=0, select bank0
  5338  0646  00A0               	movwf	vPause20sTimer@bValue
  5339                           
  5340                           ;common.c: 60: bPause20secTimer = bValue;
  5341  0647  1683               	bsf	3,5	;RP0=1, select bank1
  5342  0648  00AE               	movwf	_bPause20secTimer^(0+128)
  5343  0649  0008               	return
  5344  064A                     __end_of_vPause20sTimer:	
  5345  064A                     __ptext1017:	
  5346 ;; =============== function _getAD_ConvertFlag ends ============
  5347                           
  5348                           
  5349 ;; *************** function _Filter *****************
  5350 ;; Defined at:
  5351 ;;		line 67 in file "C:\temp\dev\AK7030-OTP\common.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  tmpValue        2    0[BANK0 ] PTR int 
  5354 ;;		 -> uiSampleChannelSixth(24), uiSampleChannelFifth(24), uiSampleChannelSecond(24), uiSampleChannelZero(24), 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  cir             2   34[BANK0 ] int 
  5357 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  5358 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  5359 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  5360 ;;  i               1   37[BANK0 ] unsigned char 
  5361 ;;  j               1   36[BANK0 ] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  2    0[BANK0 ] unsigned int 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5366 ;; Tracked objects:
  5367 ;;		On entry : 60/0
  5368 ;;		On exit  : 160/0
  5369 ;;		Unchanged: FFE00/0
  5370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5371 ;;      Params:         0       2       0       0       0
  5372 ;;      Locals:         0      32       0       0       0
  5373 ;;      Temps:          0       4       0       0       0
  5374 ;;      Totals:         0      38       0       0       0
  5375 ;;Total ram usage:       38 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    2
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_getAdOriginalCh0Value
  5382 ;;		_getAdOriginalCh5Value
  5383 ;;		_getAdOriginalCh6Value
  5384 ;;		_getAdOriginalCh2Value
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387  064A                     _Filter:	
  5388                           
  5389                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5390  064A  01C4               	clrf	Filter@j
  5391                           
  5392                           ;common.c: 71: unsigned int filter_temp = 0, filter_sum = 0;
  5393  064B  01BE               	clrf	Filter@filter_temp
  5394  064C  01BF               	clrf	Filter@filter_temp+1
  5395  064D  01C0               	clrf	Filter@filter_sum
  5396  064E  01C1               	clrf	Filter@filter_sum+1
  5397                           
  5398                           ;common.c: 73: unsigned int filter_buf[12];
  5399                           ;common.c: 75: for(int cir = 0;cir < 12; cir++)
  5400  064F  01C2               	clrf	Filter@cir
  5401  0650  01C3               	clrf	Filter@cir+1
  5402  0651                     l4599:	
  5403                           
  5404                           ;common.c: 76: filter_buf[cir] = *tmpValue++;
  5405  0651  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0652  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0653  0820               	movf	Filter@tmpValue,w
  5408  0654  0084               	movwf	4
  5409  0655  1783               	bsf	3,7
  5410  0656  1C21               	btfss	Filter@tmpValue+1,0
  5411  0657  1383               	bcf	3,7
  5412  0658  0800               	movf	0,w
  5413  0659  26F8  118A         	fcall	PL6	;call to abstracted procedure
  5414  065B  0D42               	rlf	Filter@cir,w
  5415  065C  3E26               	addlw	Filter@filter_buf& (0+255)
  5416  065D  0084               	movwf	4
  5417  065E  0822               	movf	??_Filter,w
  5418  065F  1383               	bcf	3,7	;select IRP bank0
  5419  0660  0080               	movwf	0
  5420  0661  0A84               	incf	4,f
  5421  0662  0823               	movf	??_Filter+1,w
  5422  0663  0080               	movwf	0
  5423  0664  3002               	movlw	2
  5424  0665  07A0               	addwf	Filter@tmpValue,f
  5425  0666  1803               	skipnc
  5426  0667  0AA1               	incf	Filter@tmpValue+1,f
  5427  0668  0AC2               	incf	Filter@cir,f
  5428  0669  1903               	skipnz
  5429  066A  0AC3               	incf	Filter@cir+1,f
  5430  066B  0843               	movf	Filter@cir+1,w
  5431  066C  3A80               	xorlw	128
  5432  066D  00FF               	movwf	127
  5433  066E  3080               	movlw	128
  5434  066F  027F               	subwf	127,w
  5435  0670  1D03               	skipz
  5436  0671  2E74               	goto	u1745
  5437  0672  300C               	movlw	12
  5438  0673  0242               	subwf	Filter@cir,w
  5439  0674                     u1745:	
  5440  0674  1C03               	skipc
  5441  0675  2E51               	goto	l4599
  5442                           
  5443                           ;common.c: 79: for(j = 0; j < 12 - 1; j++)
  5444  0676  1283               	bcf	3,5	;RP0=0, select bank0
  5445  0677  1303               	bcf	3,6	;RP1=0, select bank0
  5446  0678  01C4               	clrf	Filter@j
  5447  0679                     l4613:	
  5448                           
  5449                           ;common.c: 80: {
  5450                           ;common.c: 81: for(i = 0; i < 12 - 1 - j; i++)
  5451  0679  01C5               	clrf	Filter@i
  5452  067A                     l4621:	
  5453  067A  01A3               	clrf	??_Filter+1
  5454  067B  0844               	movf	Filter@j,w
  5455  067C  3C0B               	sublw	11
  5456  067D  00A2               	movwf	??_Filter
  5457  067E  1C03               	skipc
  5458  067F  03A3               	decf	??_Filter+1,f
  5459  0680  0823               	movf	??_Filter+1,w
  5460  0681  3A80               	xorlw	128
  5461  0682  3C80               	sublw	128
  5462  0683  1D03               	skipz
  5463  0684  2E87               	goto	u1765
  5464  0685  0822               	movf	??_Filter,w
  5465  0686  0245               	subwf	Filter@i,w
  5466  0687                     u1765:	
  5467  0687  1803               	btfsc	3,0
  5468  0688  2EBC               	goto	l4623
  5469                           
  5470                           ;common.c: 82: {
  5471                           ;common.c: 83: if(filter_buf[i] > filter_buf[i + 1])
  5472  0689  1283               	bcf	3,5	;RP0=0, select bank0
  5473  068A  1303               	bcf	3,6	;RP1=0, select bank0
  5474  068B  1003               	clrc
  5475  068C  26EE  118A         	fcall	PL4	;call to abstracted procedure
  5476  068E  26FE  118A         	fcall	PL7	;call to abstracted procedure
  5477  0690  0800               	movf	0,w
  5478  0691  00A4               	movwf	??_Filter+2
  5479  0692  0A84               	incf	4,f
  5480  0693  0800               	movf	0,w
  5481  0694  00A5               	movwf	??_Filter+3
  5482  0695  0823               	movf	??_Filter+1,w
  5483  0696  0225               	subwf	??_Filter+3,w
  5484  0697  1D03               	skipz
  5485  0698  2E9B               	goto	u1755
  5486  0699  0822               	movf	??_Filter,w
  5487  069A  0224               	subwf	??_Filter+2,w
  5488  069B                     u1755:	
  5489  069B  1803               	skipnc
  5490  069C  2EBA               	goto	l4619
  5491                           
  5492                           ;common.c: 84: {
  5493                           ;common.c: 86: filter_temp = filter_buf[i];
  5494  069D  1003               	clrc
  5495  069E  0D45               	rlf	Filter@i,w
  5496  069F  3E26               	addlw	Filter@filter_buf& (0+255)
  5497  06A0  0084               	movwf	4
  5498  06A1  0800               	movf	0,w
  5499  06A2  00BE               	movwf	Filter@filter_temp
  5500  06A3  0A84               	incf	4,f
  5501  06A4  0800               	movf	0,w
  5502  06A5  00BF               	movwf	Filter@filter_temp+1
  5503                           
  5504                           ;common.c: 88: filter_buf[i] = filter_buf[i + 1];
  5505  06A6  26FE  118A         	fcall	PL7	;call to abstracted procedure
  5506  06A8  0800               	movf	0,w
  5507  06A9  26F8  118A         	fcall	PL6	;call to abstracted procedure
  5508  06AB  0D45               	rlf	Filter@i,w
  5509  06AC  3E26               	addlw	Filter@filter_buf& (0+255)
  5510  06AD  0084               	movwf	4
  5511  06AE  0822               	movf	??_Filter,w
  5512  06AF  0080               	movwf	0
  5513  06B0  0A84               	incf	4,f
  5514  06B1  0823               	movf	??_Filter+1,w
  5515  06B2  0080               	movwf	0
  5516                           
  5517                           ;common.c: 90: filter_buf[i + 1] = filter_temp;
  5518  06B3  26FE  118A         	fcall	PL7	;call to abstracted procedure
  5519  06B5  083E               	movf	Filter@filter_temp,w
  5520  06B6  0080               	movwf	0
  5521  06B7  0A84               	incf	4,f
  5522  06B8  083F               	movf	Filter@filter_temp+1,w
  5523  06B9  0080               	movwf	0
  5524  06BA                     l4619:	
  5525  06BA  0AC5               	incf	Filter@i,f
  5526  06BB  2E7A               	goto	l4621
  5527  06BC                     l4623:	
  5528  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  5529  06BD  300B               	movlw	11
  5530  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  5531  06BF  0AC4               	incf	Filter@j,f
  5532  06C0  0244               	subwf	Filter@j,w
  5533  06C1  1C03               	skipc
  5534  06C2  2E79               	goto	l4613
  5535                           
  5536                           ;common.c: 91: }
  5537                           ;common.c: 92: }
  5538                           ;common.c: 93: }
  5539                           ;common.c: 95: for(i = 2; i < 12 - 2; i++)
  5540  06C3  3002               	movlw	2
  5541  06C4  00C5               	movwf	Filter@i
  5542                           
  5543                           ;common.c: 96: {
  5544                           ;common.c: 97: filter_sum += filter_buf[i];
  5545  06C5  1003               	clrc
  5546  06C6                     L19:	
  5547  06C6  26EE  118A         	fcall	PL4	;call to abstracted procedure
  5548  06C8  0822               	movf	??_Filter,w
  5549  06C9  07C0               	addwf	Filter@filter_sum,f
  5550  06CA  1803               	skipnc
  5551  06CB  0AC1               	incf	Filter@filter_sum+1,f
  5552  06CC  0823               	movf	??_Filter+1,w
  5553  06CD  07C1               	addwf	Filter@filter_sum+1,f
  5554  06CE  300A               	movlw	10
  5555  06CF  0AC5               	incf	Filter@i,f
  5556  06D0  0245               	subwf	Filter@i,w
  5557  06D1  1C03               	skipc
  5558  06D2  2EC6               	goto	L19
  5559                           
  5560                           ;common.c: 98: }
  5561                           ;common.c: 100: return (filter_sum >> 3);
  5562  06D3  0841               	movf	Filter@filter_sum+1,w
  5563  06D4  00A1               	movwf	?_Filter+1
  5564  06D5  0840               	movf	Filter@filter_sum,w
  5565  06D6  00A0               	movwf	?_Filter
  5566  06D7  1003               	clrc
  5567  06D8  0CA1               	rrf	?_Filter+1,f
  5568  06D9  0CA0               	rrf	?_Filter,f
  5569  06DA  1003               	clrc
  5570  06DB  0CA1               	rrf	?_Filter+1,f
  5571  06DC  0CA0               	rrf	?_Filter,f
  5572  06DD  1003               	clrc
  5573  06DE  0CA1               	rrf	?_Filter+1,f
  5574  06DF  0CA0               	rrf	?_Filter,f
  5575  06E0  0008               	return
  5576  06E1                     __end_of_Filter:	
  5577  06E1                     __ptext1047:	
  5578 ;; =============== function _clearTwentyMinuteTimer ends ============
  5579                           
  5580                           
  5581 ;; *************** function _clearTwentySecondsTimer *****************
  5582 ;; Defined at:
  5583 ;;		line 419 in file "C:\temp\dev\AK7030-OTP\common.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;		None               void
  5590 ;; Registers used:
  5591 ;;		status,2
  5592 ;; Tracked objects:
  5593 ;;		On entry : 40/20
  5594 ;;		On exit  : 60/20
  5595 ;;		Unchanged: FFF9F/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5597 ;;      Params:         0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0
  5600 ;;      Totals:         0       0       0       0       0
  5601 ;;Total ram usage:        0 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    2
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_clearAllTimer
  5608 ;;		_vHandle20sTimerOut
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611  06E1                     _clearTwentySecondsTimer:	
  5612                           
  5613                           ;common.c: 420: uiTwentySecondsTimer = 0;
  5614                           
  5615                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  5616  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  5617  06E2  01A6               	clrf	_uiTwentySecondsTimer^(0+128)
  5618  06E3  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5619                           
  5620                           ;common.c: 421: bTwentySecStartFlag = 0;
  5621  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  5622  06E5  01CF               	clrf	_bTwentySecStartFlag
  5623                           
  5624                           ;common.c: 422: bPause20secTimer = 0;
  5625  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  5626  06E7  01AE               	clrf	_bPause20secTimer^(0+128)
  5627  06E8  0008               	return
  5628  06E9                     __end_of_clearTwentySecondsTimer:	
  5629  06E9                     __ptext1046:	
  5630 ;; =============== function _initPin ends ============
  5631                           
  5632                           
  5633 ;; *************** function _clearTwentyMinuteTimer *****************
  5634 ;; Defined at:
  5635 ;;		line 427 in file "C:\temp\dev\AK7030-OTP\common.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;		None
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;		None               void
  5642 ;; Registers used:
  5643 ;;		status,2
  5644 ;; Tracked objects:
  5645 ;;		On entry : 60/20
  5646 ;;		On exit  : 60/0
  5647 ;;		Unchanged: FFF9F/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5649 ;;      Params:         0       0       0       0       0
  5650 ;;      Locals:         0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0
  5652 ;;      Totals:         0       0       0       0       0
  5653 ;;Total ram usage:        0 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    2
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_clearAllTimer
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662  06E9                     _clearTwentyMinuteTimer:	
  5663  06E9                     l4415:	
  5664                           ; Regs used in _clearTwentyMinuteTimer: [status,2]
  5665                           
  5666                           
  5667                           ;common.c: 428: uiTwentyMinuteTimer = 0;
  5668  06E9  01A4               	clrf	_uiTwentyMinuteTimer^(0+128)
  5669  06EA  01A5               	clrf	(_uiTwentyMinuteTimer+1)^(0+128)
  5670                           
  5671                           ;common.c: 429: bTwentyMinStartFlag = 0;
  5672  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  5673  06EC  01CE               	clrf	_bTwentyMinStartFlag
  5674  06ED  0008               	return
  5675  06EE                     __end_of_clearTwentyMinuteTimer:	
  5676  06EE                     PL4:	
  5677  06EE  0D45               	rlf	Filter@i,w
  5678  06EF  3E26               	addlw	Filter@filter_buf& (0+255)
  5679  06F0  0084               	movwf	4
  5680  06F1  1383               	bcf	3,7	;select IRP bank0
  5681  06F2  0800               	movf	0,w
  5682  06F3  00A2               	movwf	??_Filter
  5683  06F4  0A84               	incf	4,f
  5684  06F5  0800               	movf	0,w
  5685  06F6  00A3               	movwf	??_Filter+1
  5686  06F7  0008               	return
  5687  06F8                     PL6:	
  5688  06F8  00A2               	movwf	??_Filter
  5689  06F9  0A84               	incf	4,f
  5690  06FA  0800               	movf	0,w
  5691  06FB  00A3               	movwf	??_Filter+1
  5692  06FC  1003               	clrc
  5693  06FD  0008               	return
  5694  06FE                     PL7:	
  5695  06FE  1003               	clrc
  5696  06FF  0D45               	rlf	Filter@i,w
  5697  0700  3E02               	addlw	2
  5698  0701  3E26               	addlw	Filter@filter_buf& (0+255)
  5699  0702  0084               	movwf	4
  5700  0703  0008               	return
  5701  0704                     PL8:	
  5702  0704  1283               	bcf	3,5	;RP0=0, select bank0
  5703  0705  00A0               	movwf	?_Filter
  5704  0706  3001               	movlw	1
  5705  0707  00A1               	movwf	?_Filter+1
  5706  0708  0008               	return
  5707                           
  5708                           	psect	text1019
  5709  0F1B                     __ptext1019:	
  5710 ;; =============== function _vPause20sTimer ends ============
  5711                           
  5712                           
  5713 ;; *************** function _isFinishedThreeHoursTimer *****************
  5714 ;; Defined at:
  5715 ;;		line 503 in file "C:\temp\dev\AK7030-OTP\common.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  1    wreg      unsigned char 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 40/20
  5726 ;;		On exit  : 40/0
  5727 ;;		Unchanged: FFF9F/0
  5728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5729 ;;      Params:         0       0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0
  5732 ;;      Totals:         0       0       0       0       0
  5733 ;;Total ram usage:        0 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    2
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_main
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742  0F1B                     _isFinishedThreeHoursTimer:	
  5743                           
  5744                           ;common.c: 504: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  5745                           
  5746                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  5747  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  5748  0F1C  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5749  0F1D  0422               	iorwf	_uiSmallTimer^(0+128),w
  5750  0F1E  1D03               	skipz
  5751  0F1F  3400               	retlw	0
  5752  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5753  0F21  084D               	movf	_bSmallTimerStartFlag,w
  5754  0F22  1903               	btfsc	3,2
  5755  0F23  3400               	retlw	0
  5756  0F24  3001               	movlw	1
  5757                           
  5758                           ;common.c: 505: {
  5759                           ;common.c: 506: bSmallTimerStartFlag = 0;
  5760  0F25  01CD               	clrf	_bSmallTimerStartFlag
  5761                           
  5762                           ;common.c: 507: return 1;
  5763  0F26  0008               	return
  5764  0F27                     __end_of_isFinishedThreeHoursTimer:	
  5765                           ;common.c: 509: else
  5766                           ;common.c: 510: return 0;
  5767                           
  5768                           
  5769                           	psect	text1020
  5770  0F60                     __ptext1020:	
  5771 ;; =============== function _isFinishedThreeHoursTimer ends ============
  5772                           
  5773                           
  5774 ;; *************** function _startThreeHoursTimer *****************
  5775 ;; Defined at:
  5776 ;;		line 434 in file "C:\temp\dev\AK7030-OTP\common.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;		None               void
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0
  5785 ;; Tracked objects:
  5786 ;;		On entry : 60/0
  5787 ;;		On exit  : 40/0
  5788 ;;		Unchanged: FFF9F/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5790 ;;      Params:         0       2       0       0       0
  5791 ;;      Locals:         0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0
  5793 ;;      Totals:         0       2       0       0       0
  5794 ;;Total ram usage:        2 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    2
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_main
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803  0F60                     _startThreeHoursTimer:	
  5804                           
  5805                           ;common.c: 435: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  5806                           
  5807                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  5808  0F60  1683               	bsf	3,5	;RP0=1, select bank1
  5809  0F61  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5810  0F62  0422               	iorwf	_uiSmallTimer^(0+128),w
  5811  0F63  1D03               	skipz
  5812  0F64  0008               	return
  5813  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  5814  0F66  08CD               	movf	_bSmallTimerStartFlag,f
  5815  0F67  1D03               	skipz
  5816  0F68  0008               	return
  5817                           
  5818                           ;common.c: 436: {
  5819                           ;common.c: 437: uiSmallTimer = uiSetTime;
  5820  0F69  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  5821  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  5822  0F6B  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  5823  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5824  0F6D  0820               	movf	startThreeHoursTimer@uiSetTime,w
  5825  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  5826  0F6F  00A2               	movwf	_uiSmallTimer^(0+128)
  5827                           
  5828                           ;common.c: 438: bSmallTimerStartFlag = 1;
  5829  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  5830  0F71  01CD               	clrf	_bSmallTimerStartFlag
  5831  0F72  0ACD               	incf	_bSmallTimerStartFlag,f
  5832  0F73  0008               	return
  5833  0F74                     __end_of_startThreeHoursTimer:	
  5834                           
  5835                           	psect	text1021
  5836  0EF9                     __ptext1021:	
  5837 ;; =============== function _startThreeHoursTimer ends ============
  5838                           
  5839                           
  5840 ;; *************** function _isFinishedTwentySecondsTimer *****************
  5841 ;; Defined at:
  5842 ;;		line 468 in file "C:\temp\dev\AK7030-OTP\common.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;		None
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;		None
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0
  5851 ;; Tracked objects:
  5852 ;;		On entry : 140/0
  5853 ;;		On exit  : 140/0
  5854 ;;		Unchanged: FFE9F/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5856 ;;      Params:         0       0       0       0       0
  5857 ;;      Locals:         0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0
  5859 ;;      Totals:         0       0       0       0       0
  5860 ;;Total ram usage:        0 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    2
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_main
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869  0EF9                     _isFinishedTwentySecondsTimer:	
  5870                           
  5871                           ;common.c: 469: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  5872                           
  5873                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  5874  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  5875  0EFA  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5876  0EFB  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5877  0EFC  1D03               	skipz
  5878  0EFD  3400               	retlw	0
  5879  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0EFF  084F               	movf	_bTwentySecStartFlag,w
  5881  0F00  1D03               	skipz
  5882                           
  5883                           ;common.c: 470: {
  5884                           ;common.c: 472: return 1;
  5885  0F01  3401               	retlw	1
  5886                           
  5887                           ;common.c: 474: else
  5888                           ;common.c: 475: return 0;
  5889  0F02  3400               	retlw	0
  5890  0F03                     __end_of_isFinishedTwentySecondsTimer:	
  5891                           
  5892                           	psect	text1022
  5893  0F27                     __ptext1022:	
  5894 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  5895                           
  5896                           
  5897 ;; *************** function _startTwentySecondsTimer *****************
  5898 ;; Defined at:
  5899 ;;		line 448 in file "C:\temp\dev\AK7030-OTP\common.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;		None               void
  5906 ;; Registers used:
  5907 ;;		wreg, status,2, status,0
  5908 ;; Tracked objects:
  5909 ;;		On entry : 160/0
  5910 ;;		On exit  : 140/0
  5911 ;;		Unchanged: FFE9F/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5913 ;;      Params:         0       0       0       0       0
  5914 ;;      Locals:         0       0       0       0       0
  5915 ;;      Temps:          0       0       0       0       0
  5916 ;;      Totals:         0       0       0       0       0
  5917 ;;Total ram usage:        0 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    2
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_main
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926  0F27                     _startTwentySecondsTimer:	
  5927                           
  5928                           ;common.c: 449: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  5929                           
  5930                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  5931  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  5932  0F28  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5933  0F29  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5934  0F2A  1D03               	skipz
  5935  0F2B  0008               	return
  5936  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  5937  0F2D  08CF               	movf	_bTwentySecStartFlag,f
  5938  0F2E  1D03               	skipz
  5939  0F2F  0008               	return
  5940                           
  5941                           ;common.c: 450: {
  5942                           ;common.c: 451: uiTwentySecondsTimer = 20;
  5943  0F30  3014               	movlw	20
  5944  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  5945  0F32  00A6               	movwf	_uiTwentySecondsTimer^(0+128)
  5946  0F33  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5947                           
  5948                           ;common.c: 452: bTwentySecStartFlag = 1;
  5949  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  5950  0F35  01CF               	clrf	_bTwentySecStartFlag
  5951  0F36  0ACF               	incf	_bTwentySecStartFlag,f
  5952  0F37  0008               	return
  5953  0F38                     __end_of_startTwentySecondsTimer:	
  5954                           
  5955                           	psect	text1023
  5956  0F0F                     __ptext1023:	
  5957 ;; =============== function _startTwentySecondsTimer ends ============
  5958                           
  5959                           
  5960 ;; *************** function _isFinishedTwelveHoursTimer *****************
  5961 ;; Defined at:
  5962 ;;		line 492 in file "C:\temp\dev\AK7030-OTP\common.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;		None
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      unsigned char 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 40/0
  5973 ;;		On exit  : 40/0
  5974 ;;		Unchanged: FFF9F/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5976 ;;      Params:         0       0       0       0       0
  5977 ;;      Locals:         0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0
  5979 ;;      Totals:         0       0       0       0       0
  5980 ;;Total ram usage:        0 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    2
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_main
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989  0F0F                     _isFinishedTwelveHoursTimer:	
  5990                           
  5991                           ;common.c: 493: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  5992                           
  5993                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  5994  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  5995  0F10  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5996  0F11  0420               	iorwf	_uiBigTimer^(0+128),w
  5997  0F12  1D03               	skipz
  5998  0F13  3400               	retlw	0
  5999  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  6000  0F15  084C               	movf	_bBigTimerStartFlag,w
  6001  0F16  1903               	btfsc	3,2
  6002  0F17  3400               	retlw	0
  6003  0F18  3001               	movlw	1
  6004                           
  6005                           ;common.c: 494: {
  6006                           ;common.c: 495: bBigTimerStartFlag = 0;
  6007  0F19  01CC               	clrf	_bBigTimerStartFlag
  6008                           
  6009                           ;common.c: 496: return 1;
  6010  0F1A  0008               	return
  6011  0F1B                     __end_of_isFinishedTwelveHoursTimer:	
  6012                           ;common.c: 498: else
  6013                           ;common.c: 499: return 0;
  6014                           
  6015                           
  6016                           	psect	text1024
  6017  0F4C                     __ptext1024:	
  6018 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  6019                           
  6020                           
  6021 ;; *************** function _startTwelveHourTimer *****************
  6022 ;; Defined at:
  6023 ;;		line 392 in file "C:\temp\dev\AK7030-OTP\common.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;		None               void
  6030 ;; Registers used:
  6031 ;;		wreg, status,2, status,0
  6032 ;; Tracked objects:
  6033 ;;		On entry : 60/0
  6034 ;;		On exit  : 40/0
  6035 ;;		Unchanged: FFF9F/0
  6036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6037 ;;      Params:         0       2       0       0       0
  6038 ;;      Locals:         0       0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0
  6040 ;;      Totals:         0       2       0       0       0
  6041 ;;Total ram usage:        2 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    2
  6044 ;; This function calls:
  6045 ;;		Nothing
  6046 ;; This function is called by:
  6047 ;;		_main
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050  0F4C                     _startTwelveHourTimer:	
  6051                           
  6052                           ;common.c: 393: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  6053                           
  6054                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  6055  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  6056  0F4D  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6057  0F4E  0420               	iorwf	_uiBigTimer^(0+128),w
  6058  0F4F  1D03               	skipz
  6059  0F50  0008               	return
  6060  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  6061  0F52  08CC               	movf	_bBigTimerStartFlag,f
  6062  0F53  1D03               	skipz
  6063  0F54  0008               	return
  6064                           
  6065                           ;common.c: 394: {
  6066                           ;common.c: 395: uiBigTimer = uiSetTime;
  6067  0F55  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  6068  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  6069  0F57  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  6070  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  6071  0F59  0820               	movf	startTwelveHourTimer@uiSetTime,w
  6072  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  6073  0F5B  00A0               	movwf	_uiBigTimer^(0+128)
  6074                           
  6075                           ;common.c: 396: bBigTimerStartFlag = 1;
  6076  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  6077  0F5D  01CC               	clrf	_bBigTimerStartFlag
  6078  0F5E  0ACC               	incf	_bBigTimerStartFlag,f
  6079  0F5F  0008               	return
  6080  0F60                     __end_of_startTwelveHourTimer:	
  6081                           
  6082                           	psect	text1025
  6083  0F03                     __ptext1025:	
  6084 ;; =============== function _startTwelveHourTimer ends ============
  6085                           
  6086                           
  6087 ;; *************** function _isFinishedTwentyMinuteTimer *****************
  6088 ;; Defined at:
  6089 ;;		line 480 in file "C:\temp\dev\AK7030-OTP\common.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      unsigned char 
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, status,0
  6098 ;; Tracked objects:
  6099 ;;		On entry : 160/0
  6100 ;;		On exit  : 140/0
  6101 ;;		Unchanged: FFE9F/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6103 ;;      Params:         0       0       0       0       0
  6104 ;;      Locals:         0       0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0
  6106 ;;      Totals:         0       0       0       0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    2
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_main
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116  0F03                     _isFinishedTwentyMinuteTimer:	
  6117                           
  6118                           ;common.c: 481: if(( 0 == uiTwentyMinuteTimer ) && bTwentyMinStartFlag )
  6119                           
  6120                           ; Regs used in _isFinishedTwentyMinuteTimer: [wreg+status,2+status,0]
  6121  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  6122  0F04  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6123  0F05  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6124  0F06  1D03               	skipz
  6125  0F07  3400               	retlw	0
  6126  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  6127  0F09  084E               	movf	_bTwentyMinStartFlag,w
  6128  0F0A  1903               	btfsc	3,2
  6129  0F0B  3400               	retlw	0
  6130  0F0C  3001               	movlw	1
  6131                           
  6132                           ;common.c: 482: {
  6133                           ;common.c: 483: bTwentyMinStartFlag = 0;
  6134  0F0D  01CE               	clrf	_bTwentyMinStartFlag
  6135                           
  6136                           ;common.c: 484: return 1;
  6137  0F0E  0008               	return
  6138  0F0F                     __end_of_isFinishedTwentyMinuteTimer:	
  6139                           ;common.c: 486: else
  6140                           ;common.c: 487: return 0;
  6141                           
  6142                           
  6143                           	psect	text1026
  6144  0002                     __ptext1026:	
  6145 ;; =============== function _isFinishedTwentyMinuteTimer ends ============
  6146                           
  6147                           
  6148 ;; *************** function _clrSampeTime *****************
  6149 ;; Defined at:
  6150 ;;		line 524 in file "C:\temp\dev\AK7030-OTP\common.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;		None               void
  6157 ;; Registers used:
  6158 ;;		status,2
  6159 ;; Tracked objects:
  6160 ;;		On entry : 60/20
  6161 ;;		On exit  : 60/20
  6162 ;;		Unchanged: FFF9F/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6164 ;;      Params:         0       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0
  6167 ;;      Totals:         0       0       0       0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    2
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177  0002                     _clrSampeTime:	
  6178                           
  6179                           ;common.c: 525: timer.timer10msStopWatch = 0;
  6180                           
  6181                           ; Regs used in _clrSampeTime: [status,2]
  6182  0002  01AF               	clrf	_timer^(0+128)
  6183  0003  0008               	return
  6184  0004                     __end_of_clrSampeTime:	
  6185                           
  6186                           	psect	text1027
  6187  07FA                     __ptext1027:	
  6188 ;; =============== function _clrSampeTime ends ============
  6189                           
  6190                           
  6191 ;; *************** function _isPermitSampleTime *****************
  6192 ;; Defined at:
  6193 ;;		line 514 in file "C:\temp\dev\AK7030-OTP\common.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      unsigned char 
  6200 ;; Registers used:
  6201 ;;		wreg
  6202 ;; Tracked objects:
  6203 ;;		On entry : 40/20
  6204 ;;		On exit  : 60/20
  6205 ;;		Unchanged: FFF9F/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6207 ;;      Params:         0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0
  6210 ;;      Totals:         0       0       0       0       0
  6211 ;;Total ram usage:        0 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    2
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_main
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220  07FA                     _isPermitSampleTime:	
  6221                           
  6222                           ;common.c: 515: if(timer.timer10msStopWatch >= 10)
  6223                           
  6224                           ; Regs used in _isPermitSampleTime: [wreg]
  6225  07FA  300A               	movlw	10
  6226  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  6227  07FC  022F               	subwf	_timer^(0+128),w
  6228  07FD  1803               	btfsc	3,0
  6229                           
  6230                           ;common.c: 516: {
  6231                           ;common.c: 517: return 1;
  6232  07FE  3401               	retlw	1
  6233                           
  6234                           ;common.c: 519: else
  6235                           ;common.c: 520: return 0;
  6236  07FF  3400               	retlw	0
  6237  0800                     __end_of_isPermitSampleTime:	
  6238                           
  6239                           	psect	text1028
  6240  0F38                     __ptext1028:	
  6241 ;; =============== function _isPermitSampleTime ends ============
  6242                           
  6243                           
  6244 ;; *************** function _startTwentyMinuteTimer *****************
  6245 ;; Defined at:
  6246 ;;		line 458 in file "C:\temp\dev\AK7030-OTP\common.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  uiValue         2    0[BANK0 ] unsigned int 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;		None               void
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 60/0
  6257 ;;		On exit  : 40/0
  6258 ;;		Unchanged: FFF9F/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6260 ;;      Params:         0       2       0       0       0
  6261 ;;      Locals:         0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0
  6263 ;;      Totals:         0       2       0       0       0
  6264 ;;Total ram usage:        2 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    2
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_main
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273  0F38                     _startTwentyMinuteTimer:	
  6274                           
  6275                           ;common.c: 459: if(( 0 == uiTwentyMinuteTimer) && ( 0 == bTwentyMinStartFlag))
  6276                           
  6277                           ; Regs used in _startTwentyMinuteTimer: [wreg+status,2+status,0]
  6278  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  6279  0F39  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6280  0F3A  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6281  0F3B  1D03               	skipz
  6282  0F3C  0008               	return
  6283  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  6284  0F3E  08CE               	movf	_bTwentyMinStartFlag,f
  6285  0F3F  1D03               	skipz
  6286  0F40  0008               	return
  6287                           
  6288                           ;common.c: 460: {
  6289                           ;common.c: 461: uiTwentyMinuteTimer = uiValue;
  6290  0F41  0821               	movf	startTwentyMinuteTimer@uiValue+1,w
  6291  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  6292  0F43  00A5               	movwf	(_uiTwentyMinuteTimer+1)^(0+128)
  6293  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0F45  0820               	movf	startTwentyMinuteTimer@uiValue,w
  6295  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  6296  0F47  00A4               	movwf	_uiTwentyMinuteTimer^(0+128)
  6297                           
  6298                           ;common.c: 462: bTwentyMinStartFlag = 1;
  6299  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  6300  0F49  01CE               	clrf	_bTwentyMinStartFlag
  6301  0F4A  0ACE               	incf	_bTwentyMinStartFlag,f
  6302  0F4B  0008               	return
  6303  0F4C                     __end_of_startTwentyMinuteTimer:	
  6304                           
  6305                           	psect	text1031
  6306  0ECB                     __ptext1031:	
  6307 ;; =============== function _adc_test_init ends ============
  6308                           
  6309                           
  6310 ;; *************** function _timer1_interrupt_config *****************
  6311 ;; Defined at:
  6312 ;;		line 225 in file "C:\temp\dev\AK7030-OTP\common.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;		None               void
  6319 ;; Registers used:
  6320 ;;		None
  6321 ;; Tracked objects:
  6322 ;;		On entry : 17F/20
  6323 ;;		On exit  : 17F/20
  6324 ;;		Unchanged: FFE80/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6326 ;;      Params:         0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0
  6329 ;;      Totals:         0       0       0       0       0
  6330 ;;Total ram usage:        0 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    2
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		_main
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339  0ECB                     _timer1_interrupt_config:	
  6340                           
  6341                           ;common.c: 226: GIE = 1;
  6342                           
  6343                           ; Regs used in _timer1_interrupt_config: []
  6344  0ECB  178B               	bsf	11,7
  6345                           
  6346                           ;common.c: 227: PEIE = 1;
  6347  0ECC  170B               	bsf	11,6
  6348  0ECD  0008               	return
  6349  0ECE                     __end_of_timer1_interrupt_config:	
  6350                           
  6351                           	psect	text1032
  6352  0EEF                     __ptext1032:	
  6353 ;; =============== function _timer1_interrupt_config ends ============
  6354                           
  6355                           
  6356 ;; *************** function _timer1_config *****************
  6357 ;; Defined at:
  6358 ;;		line 213 in file "C:\temp\dev\AK7030-OTP\common.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;		None               void
  6365 ;; Registers used:
  6366 ;;		wreg
  6367 ;; Tracked objects:
  6368 ;;		On entry : 17F/40
  6369 ;;		On exit  : 17F/20
  6370 ;;		Unchanged: FFE80/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6372 ;;      Params:         0       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0
  6375 ;;      Totals:         0       0       0       0       0
  6376 ;;Total ram usage:        0 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    2
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		_main
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385  0EEF                     _timer1_config:	
  6386                           
  6387                           ;common.c: 215: TMR1H=0xCF;
  6388                           
  6389                           ; Regs used in _timer1_config: [wreg]
  6390  0EEF  30CF               	movlw	207
  6391  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  6392  0EF1  008F               	movwf	15	;volatile
  6393                           
  6394                           ;common.c: 216: TMR1L=0x2C;
  6395  0EF2  302C               	movlw	44
  6396  0EF3  008E               	movwf	14	;volatile
  6397                           
  6398                           ;common.c: 217: T1CON=0xE1;
  6399  0EF4  30E1               	movlw	225
  6400  0EF5  0090               	movwf	16	;volatile
  6401                           
  6402                           ;common.c: 218: TMR1IE=1;
  6403  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  6404  0EF7  140C               	bsf	12,0
  6405  0EF8  0008               	return
  6406  0EF9                     __end_of_timer1_config:	
  6407                           
  6408                           	psect	text1033
  6409  0ED6                     __ptext1033:	
  6410 ;; =============== function _timer1_config ends ============
  6411                           
  6412                           
  6413 ;; *************** function _clock_config *****************
  6414 ;; Defined at:
  6415 ;;		line 205 in file "C:\temp\dev\AK7030-OTP\common.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, status,2
  6424 ;; Tracked objects:
  6425 ;;		On entry : 17F/20
  6426 ;;		On exit  : 17F/40
  6427 ;;		Unchanged: FFE80/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6429 ;;      Params:         0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0
  6432 ;;      Totals:         0       0       0       0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    2
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_main
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442  0ED6                     _clock_config:	
  6443                           
  6444                           ;common.c: 207: CLKPR = 0x80;
  6445                           
  6446                           ; Regs used in _clock_config: [wreg+status,2]
  6447  0ED6  3080               	movlw	128
  6448  0ED7  1283               	bcf	3,5	;RP0=0, select bank2
  6449  0ED8  1703               	bsf	3,6	;RP1=1, select bank2
  6450  0ED9  0088               	movwf	8	;volatile
  6451                           
  6452                           ;common.c: 208: CLKPR = 0x00;
  6453  0EDA  0188               	clrf	8	;volatile
  6454  0EDB                     l1848:	
  6455                           ;common.c: 209: while(CLKPCE);
  6456                           
  6457  0EDB  1F88               	btfss	8,7
  6458  0EDC  0008               	return
  6459  0EDD  2EDB               	goto	l1848
  6460  0EDE                     __end_of_clock_config:	
  6461                           
  6462                           	psect	text1035
  6463  0ECE                     __ptext1035:	
  6464 ;; =============== function _setPB6AsInput ends ============
  6465                           
  6466                           
  6467 ;; *************** function _setPA6 *****************
  6468 ;; Defined at:
  6469 ;;		line 356 in file "C:\temp\dev\AK7030-OTP\main.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  bValue          1    wreg     unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  bValue          1    0[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;		None               void
  6476 ;; Registers used:
  6477 ;;		wreg
  6478 ;; Tracked objects:
  6479 ;;		On entry : 60/0
  6480 ;;		On exit  : 60/0
  6481 ;;		Unchanged: FFF9F/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6483 ;;      Params:         0       0       0       0       0
  6484 ;;      Locals:         0       1       0       0       0
  6485 ;;      Temps:          0       0       0       0       0
  6486 ;;      Totals:         0       1       0       0       0
  6487 ;;Total ram usage:        1 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    2
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_main
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496  0ECE                     _setPA6:	
  6497                           
  6498                           ; Regs used in _setPA6: [wreg]
  6499                           ;setPA6@bValue stored from wreg
  6500  0ECE  00A0               	movwf	setPA6@bValue
  6501                           
  6502                           ;main.c: 357: if( bValue )
  6503  0ECF  0820               	movf	setPA6@bValue,w
  6504  0ED0  1903               	btfsc	3,2
  6505  0ED1  2ED4               	goto	l752
  6506                           
  6507                           ;main.c: 359: PA6 = 1;
  6508  0ED2  1705               	bsf	5,6
  6509  0ED3  0008               	return
  6510  0ED4                     l752:	
  6511                           
  6512                           ;main.c: 363: else
  6513                           ;main.c: 365: PA6= 0;
  6514  0ED4  1305               	bcf	5,6
  6515  0ED5  0008               	return
  6516  0ED6                     __end_of_setPA6:	
  6517                           
  6518                           	psect	text1039
  6519  0EE6                     __ptext1039:	
  6520 ;; =============== function _setPA3 ends ============
  6521                           
  6522                           
  6523 ;; *************** function _setPA2 *****************
  6524 ;; Defined at:
  6525 ;;		line 252 in file "C:\temp\dev\AK7030-OTP\main.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  bValue          1    wreg     unsigned char 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  bValue          1    0[BANK0 ] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;		None               void
  6532 ;; Registers used:
  6533 ;;		wreg
  6534 ;; Tracked objects:
  6535 ;;		On entry : 40/20
  6536 ;;		On exit  : 60/0
  6537 ;;		Unchanged: FFF9F/0
  6538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6539 ;;      Params:         0       0       0       0       0
  6540 ;;      Locals:         0       1       0       0       0
  6541 ;;      Temps:          0       0       0       0       0
  6542 ;;      Totals:         0       1       0       0       0
  6543 ;;Total ram usage:        1 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    2
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_main
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552  0EE6                     _setPA2:	
  6553                           
  6554                           ; Regs used in _setPA2: [wreg]
  6555                           ;setPA2@bValue stored from wreg
  6556  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  6557  0EE7  00A0               	movwf	setPA2@bValue
  6558                           
  6559                           ;main.c: 253: if( bValue )
  6560  0EE8  0820               	movf	setPA2@bValue,w
  6561  0EE9  1903               	btfsc	3,2
  6562  0EEA  2EED               	goto	l727
  6563                           
  6564                           ;main.c: 255: PA2 = 1;
  6565  0EEB  1505               	bsf	5,2
  6566  0EEC  0008               	return
  6567  0EED                     l727:	
  6568                           
  6569                           ;main.c: 259: else
  6570                           ;main.c: 261: PA2 = 0;
  6571  0EED  1105               	bcf	5,2
  6572  0EEE  0008               	return
  6573  0EEF                     __end_of_setPA2:	
  6574                           
  6575                           	psect	text1045
  6576  0F8B                     __ptext1045:	
  6577 ;; =============== function _setPB0 ends ============
  6578                           
  6579                           
  6580 ;; *************** function _initPin *****************
  6581 ;; Defined at:
  6582 ;;		line 129 in file "C:\temp\dev\AK7030-OTP\main.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;		None               void
  6589 ;; Registers used:
  6590 ;;		None
  6591 ;; Tracked objects:
  6592 ;;		On entry : 160/0
  6593 ;;		On exit  : 160/20
  6594 ;;		Unchanged: FFE9F/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6596 ;;      Params:         0       0       0       0       0
  6597 ;;      Locals:         0       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0
  6599 ;;      Totals:         0       0       0       0       0
  6600 ;;Total ram usage:        0 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    2
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_main
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609  0F8B                     _initPin:	
  6610                           
  6611                           ;main.c: 132: TRISB0 = 0;
  6612                           
  6613                           ; Regs used in _initPin: []
  6614  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  6615  0F8C  1006               	bcf	6,0
  6616                           
  6617                           ;main.c: 133: PB0 = 0;
  6618  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  6619  0F8E  1006               	bcf	6,0
  6620                           
  6621                           ;main.c: 134: TRISB1 = 0;
  6622  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  6623  0F90  1086               	bcf	6,1
  6624                           
  6625                           ;main.c: 135: PB1 = 0;
  6626  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  6627  0F92  1086               	bcf	6,1
  6628                           
  6629                           ;main.c: 136: TRISB2 = 0;
  6630  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  6631  0F94  1106               	bcf	6,2
  6632                           
  6633                           ;main.c: 137: PB2 = 0;
  6634  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  6635  0F96  1106               	bcf	6,2
  6636                           
  6637                           ;main.c: 138: TRISA0 = 0;
  6638  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  6639  0F98  1005               	bcf	5,0
  6640                           
  6641                           ;main.c: 139: PA0 = 0;
  6642  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  6643  0F9A  1005               	bcf	5,0
  6644                           
  6645                           ;main.c: 140: TRISA1 = 0;
  6646  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  6647  0F9C  1085               	bcf	5,1
  6648                           
  6649                           ;main.c: 141: PA1 = 0;
  6650  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  6651  0F9E  1085               	bcf	5,1
  6652                           
  6653                           ;main.c: 142: TRISA2 = 0;
  6654  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  6655  0FA0  1105               	bcf	5,2
  6656                           
  6657                           ;main.c: 143: PA2 = 1;
  6658  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  6659  0FA2  1505               	bsf	5,2
  6660                           
  6661                           ;main.c: 145: TRISA3 = 0;
  6662  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  6663  0FA4  1185               	bcf	5,3
  6664                           
  6665                           ;main.c: 146: PA3 = 0;
  6666  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  6667  0FA6  1185               	bcf	5,3
  6668                           
  6669                           ;main.c: 147: TRISB4 = 0;
  6670  0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  6671  0FA8  1206               	bcf	6,4
  6672                           
  6673                           ;main.c: 148: PB4 = 0;
  6674  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0FAA  1206               	bcf	6,4
  6676                           
  6677                           ;main.c: 149: TRISB7 = 0;
  6678  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  6679  0FAC  1386               	bcf	6,7
  6680                           
  6681                           ;main.c: 150: PB7 = 0;
  6682  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  6683  0FAE  1386               	bcf	6,7
  6684                           
  6685                           ;main.c: 152: TRISB6 = 1;
  6686  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  6687  0FB0  1706               	bsf	6,6
  6688  0FB1  0008               	return
  6689  0FB2                     __end_of_initPin:	
  6690                           
  6691                           	psect	text1050
  6692  0709                     __ptext1050:	
  6693 ;; =============== function _clearTwelveHoursTimer ends ============
  6694                           
  6695                           
  6696 ;; *************** function _ISR *****************
  6697 ;; Defined at:
  6698 ;;		line 529 in file "C:\temp\dev\AK7030-OTP\common.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;		None               void
  6705 ;; Registers used:
  6706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 60/0
  6710 ;;		Unchanged: FFE00/0
  6711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6712 ;;      Params:         0       0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0
  6714 ;;      Temps:          4       0       0       0       0
  6715 ;;      Totals:         4       0       0       0       0
  6716 ;;Total ram usage:        4 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    1
  6719 ;; This function calls:
  6720 ;;		i1_setAD_ConvertFlag
  6721 ;;		_adc_get
  6722 ;;		_vPutSampleDataIntoTable
  6723 ;; This function is called by:
  6724 ;;		Interrupt level 1
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727  0709                     _ISR:	
  6728                           
  6729                           ;common.c: 530: static unsigned char ucTimer1sCnt = 0;
  6730                           ;common.c: 532: if(TMR1IF == 1)
  6731  0709  1C0C               	btfss	12,0
  6732  070A  2F3F               	goto	i1l4731
  6733                           
  6734                           ;common.c: 533: {
  6735                           ;common.c: 534: TMR1IF = 0 ;
  6736  070B  100C               	bcf	12,0
  6737                           
  6738                           ;common.c: 535: timer.timer10msStopWatch++;
  6739  070C  1683               	bsf	3,5	;RP0=1, select bank1
  6740  070D  3064               	movlw	100
  6741  070E  0AAF               	incf	_timer^(0+128),f
  6742                           
  6743                           ;common.c: 536: ucTimer1sCnt++;
  6744  070F  0AAC               	incf	ISR@ucTimer1sCnt^(0+128),f
  6745                           
  6746                           ;common.c: 538: if(ucTimer1sCnt >= 100)
  6747  0710  022C               	subwf	ISR@ucTimer1sCnt^(0+128),w
  6748  0711  1C03               	skipc
  6749  0712  2F3F               	goto	i1l4731
  6750                           
  6751                           ;common.c: 539: {
  6752                           ;common.c: 540: ucTimer1sCnt = 0;
  6753  0713  01AC               	clrf	ISR@ucTimer1sCnt^(0+128)
  6754                           
  6755                           ;common.c: 541: if(uiBigTimer > 0)
  6756  0714  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6757  0715  0420               	iorwf	_uiBigTimer^(0+128),w
  6758  0716  1903               	skipnz
  6759  0717  2F1E               	goto	i1l1959
  6760                           
  6761                           ;common.c: 542: uiBigTimer--;
  6762  0718  3001               	movlw	1
  6763  0719  02A0               	subwf	_uiBigTimer^(0+128),f
  6764  071A  3000               	movlw	0
  6765  071B  1C03               	skipc
  6766  071C  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  6767  071D  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  6768  071E                     i1l1959:	
  6769                           
  6770                           ;common.c: 544: if(uiSmallTimer)
  6771  071E  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  6772  071F  0422               	iorwf	_uiSmallTimer^(0+128),w
  6773  0720  1903               	skipnz
  6774  0721  2F28               	goto	i1l1960
  6775                           
  6776                           ;common.c: 545: uiSmallTimer--;
  6777  0722  3001               	movlw	1
  6778  0723  02A2               	subwf	_uiSmallTimer^(0+128),f
  6779  0724  3000               	movlw	0
  6780  0725  1C03               	skipc
  6781  0726  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  6782  0727  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  6783  0728                     i1l1960:	
  6784                           
  6785                           ;common.c: 547: if((uiTwentySecondsTimer)&& (0 == bPause20secTimer))
  6786  0728  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  6787  0729  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  6788  072A  1903               	skipnz
  6789  072B  2F35               	goto	i1l1961
  6790  072C  08AE               	movf	_bPause20secTimer^(0+128),f
  6791  072D  1D03               	skipz
  6792  072E  2F35               	goto	i1l1961
  6793                           
  6794                           ;common.c: 548: uiTwentySecondsTimer--;
  6795  072F  3001               	movlw	1
  6796  0730  02A6               	subwf	_uiTwentySecondsTimer^(0+128),f
  6797  0731  3000               	movlw	0
  6798  0732  1C03               	skipc
  6799  0733  03A7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  6800  0734  02A7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  6801  0735                     i1l1961:	
  6802                           
  6803                           ;common.c: 550: if((uiTwentyMinuteTimer))
  6804  0735  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6805  0736  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6806  0737  1903               	skipnz
  6807  0738  2F3F               	goto	i1l4731
  6808                           
  6809                           ;common.c: 551: uiTwentyMinuteTimer--;
  6810  0739  3001               	movlw	1
  6811  073A  02A4               	subwf	_uiTwentyMinuteTimer^(0+128),f
  6812  073B  3000               	movlw	0
  6813  073C  1C03               	skipc
  6814  073D  03A5               	decf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6815  073E  02A5               	subwf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6816  073F                     i1l4731:	
  6817                           
  6818                           ;common.c: 552: }
  6819                           ;common.c: 553: }
  6820                           ;common.c: 555: if(ADIF)
  6821  073F  1283               	bcf	3,5	;RP0=0, select bank0
  6822  0740  1D0D               	btfss	13,2
  6823  0741  2F50               	goto	i1l1964
  6824  0742  3001               	movlw	1
  6825                           
  6826                           ;common.c: 556: {
  6827                           ;common.c: 557: ADIF=0;
  6828  0743  110D               	bcf	13,2
  6829                           
  6830                           ;common.c: 558: setAD_ConvertFlag(1);
  6831  0744  27DE  118A         	fcall	i1_setAD_ConvertFlag
  6832                           
  6833                           ;common.c: 559: vPutSampleDataIntoTable(adc_get(),sampleChannelSelect);
  6834  0746  27D2  118A         	fcall	_adc_get
  6835  0748  0871               	movf	?_adc_get+1,w
  6836  0749  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6837  074A  0870               	movf	?_adc_get,w
  6838  074B  00F4               	movwf	?_vPutSampleDataIntoTable
  6839  074C  1283               	bcf	3,5	;RP0=0, select bank0
  6840  074D  0851               	movf	_sampleChannelSelect,w
  6841  074E  00F6               	movwf	?_vPutSampleDataIntoTable+2
  6842  074F  275D               	fcall	_vPutSampleDataIntoTable
  6843  0750                     i1l1964:	
  6844  0750  087C               	movf	??_ISR+3,w
  6845  0751  1283               	bcf	3,5	;RP0=0, select bank0
  6846  0752  1303               	bcf	3,6	;RP1=0, select bank0
  6847  0753  00FF               	movwf	127
  6848  0754  087B               	movf	??_ISR+2,w
  6849  0755  008A               	movwf	10
  6850  0756  087A               	movf	??_ISR+1,w
  6851  0757  0084               	movwf	4
  6852  0758  0E79               	swapf	??_ISR^(0+-128),w
  6853  0759  0083               	movwf	3
  6854  075A  0EFE               	swapf	126,f
  6855  075B  0E7E               	swapf	126,w
  6856  075C  0009               	retfie
  6857  075D                     __end_of_ISR:	
  6858  075D                     __ptext1053:	
  6859 ;; =============== function _adc_get ends ============
  6860                           
  6861                           
  6862 ;; *************** function _vPutSampleDataIntoTable *****************
  6863 ;; Defined at:
  6864 ;;		line 109 in file "C:\temp\dev\AK7030-OTP\common.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  uiSampleData    2    4[COMMON] unsigned int 
  6867 ;;  channel         1    6[COMMON] unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  i               2    7[COMMON] int 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;		None               void
  6872 ;; Registers used:
  6873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6874 ;; Tracked objects:
  6875 ;;		On entry : 60/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: FFE00/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6879 ;;      Params:         3       0       0       0       0
  6880 ;;      Locals:         2       0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0
  6882 ;;      Totals:         5       0       0       0       0
  6883 ;;Total ram usage:        5 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		_ISR
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891  075D                     _vPutSampleDataIntoTable:	
  6892                           
  6893                           ;common.c: 111: static unsigned char ucChannelZeroLength = 0;
  6894                           ;common.c: 113: static unsigned char ucChannelSecondLength = 0;
  6895                           ;common.c: 115: static unsigned char ucChannelFifthLength = 0;
  6896                           ;common.c: 117: static unsigned char ucChannelSixthLength = 0;
  6897                           ;common.c: 119: if(channel == 0)
  6898                           
  6899                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  6900  075D  08F6               	movf	vPutSampleDataIntoTable@channel,f
  6901  075E  1D03               	skipz
  6902  075F  2F6C               	goto	i1l4655
  6903                           
  6904                           ;common.c: 120: {
  6905                           ;common.c: 121: if(ucChannelZeroLength < 12)
  6906  0760  300C               	movlw	12
  6907  0761  026E               	subwf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  6908  0762  1803               	skipnc
  6909  0763  2F68               	goto	i1l4651
  6910                           
  6911                           ;common.c: 122: {
  6912                           ;common.c: 123: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6913  0764  1003               	clrc
  6914  0765  27EA               	fcall	PL3	;call to abstracted procedure
  6915                           
  6916                           ;common.c: 125: ucChannelZeroLength++;
  6917  0766  0AEE               	incf	vPutSampleDataIntoTable@ucChannelZeroLength,f
  6918                           
  6919                           ;common.c: 126: }
  6920  0767  0008               	return
  6921  0768                     i1l4651:	
  6922                           
  6923                           ;common.c: 127: else
  6924                           ;common.c: 128: {
  6925                           ;common.c: 129: ucChannelZeroLength = 0;
  6926  0768  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  6927                           
  6928                           ;common.c: 131: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6929  0769  1003               	clrc
  6930  076A  27EA               	fcall	PL3	;call to abstracted procedure
  6931  076B  0008               	return
  6932  076C                     i1l4655:	
  6933                           
  6934                           ;common.c: 134: else if(channel == 2)
  6935  076C  0876               	movf	vPutSampleDataIntoTable@channel,w
  6936  076D  3A02               	xorlw	2
  6937  076E  1D03               	skipz
  6938  076F  2F80               	goto	i1l4667
  6939                           
  6940                           ;common.c: 135: {
  6941                           ;common.c: 136: if(ucChannelSecondLength < 12)
  6942  0770  300C               	movlw	12
  6943  0771  026C               	subwf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6944  0772  1803               	skipnc
  6945  0773  2F7A               	goto	i1l4663
  6946                           
  6947                           ;common.c: 137: {
  6948                           ;common.c: 138: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6949  0774  1003               	clrc
  6950  0775  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6951  0776  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6952  0777  27E2               	fcall	PL2	;call to abstracted procedure
  6953                           
  6954                           ;common.c: 140: ucChannelSecondLength++;
  6955  0778  0AEC               	incf	vPutSampleDataIntoTable@ucChannelSecondLength,f
  6956                           
  6957                           ;common.c: 141: }
  6958  0779  0008               	return
  6959  077A                     i1l4663:	
  6960                           
  6961                           ;common.c: 142: else
  6962                           ;common.c: 143: {
  6963                           ;common.c: 144: ucChannelSecondLength = 0;
  6964  077A  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  6965                           
  6966                           ;common.c: 146: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6967  077B  1003               	clrc
  6968  077C  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6969  077D  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6970  077E  27E2               	fcall	PL2	;call to abstracted procedure
  6971  077F  0008               	return
  6972  0780                     i1l4667:	
  6973                           
  6974                           ;common.c: 149: else if(channel == 5)
  6975  0780  0876               	movf	vPutSampleDataIntoTable@channel,w
  6976  0781  3A05               	xorlw	5
  6977  0782  1D03               	skipz
  6978  0783  2F94               	goto	i1l4679
  6979                           
  6980                           ;common.c: 150: {
  6981                           ;common.c: 151: if(ucChannelFifthLength < 12)
  6982  0784  300C               	movlw	12
  6983  0785  026B               	subwf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6984  0786  1803               	skipnc
  6985  0787  2F8E               	goto	i1l4675
  6986                           
  6987                           ;common.c: 152: {
  6988                           ;common.c: 153: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  6989  0788  1003               	clrc
  6990  0789  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6991  078A  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  6992  078B  27E2               	fcall	PL2	;call to abstracted procedure
  6993                           
  6994                           ;common.c: 155: ucChannelFifthLength++;
  6995  078C  0AEB               	incf	vPutSampleDataIntoTable@ucChannelFifthLength,f
  6996                           
  6997                           ;common.c: 156: }
  6998  078D  0008               	return
  6999  078E                     i1l4675:	
  7000                           
  7001                           ;common.c: 157: else
  7002                           ;common.c: 158: {
  7003                           ;common.c: 159: ucChannelFifthLength = 0;
  7004  078E  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7005                           
  7006                           ;common.c: 161: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  7007  078F  1003               	clrc
  7008  0790  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  7009  0791  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7010  0792  27E2               	fcall	PL2	;call to abstracted procedure
  7011  0793  0008               	return
  7012  0794                     i1l4679:	
  7013                           
  7014                           ;common.c: 164: else if(channel == 6)
  7015  0794  0876               	movf	vPutSampleDataIntoTable@channel,w
  7016  0795  3A06               	xorlw	6
  7017  0796  1D03               	skipz
  7018  0797  2FA8               	goto	i1l4691
  7019                           
  7020                           ;common.c: 165: {
  7021                           ;common.c: 166: if(ucChannelSixthLength < 12)
  7022  0798  300C               	movlw	12
  7023  0799  026D               	subwf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7024  079A  1803               	skipnc
  7025  079B  2FA2               	goto	i1l4687
  7026                           
  7027                           ;common.c: 167: {
  7028                           ;common.c: 168: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  7029  079C  1003               	clrc
  7030  079D  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7031  079E  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7032  079F  27E2               	fcall	PL2	;call to abstracted procedure
  7033                           
  7034                           ;common.c: 170: ucChannelSixthLength++;
  7035  07A0  0AED               	incf	vPutSampleDataIntoTable@ucChannelSixthLength,f
  7036                           
  7037                           ;common.c: 171: }
  7038  07A1  0008               	return
  7039  07A2                     i1l4687:	
  7040                           
  7041                           ;common.c: 172: else
  7042                           ;common.c: 173: {
  7043                           ;common.c: 174: ucChannelSixthLength = 0;
  7044  07A2  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7045                           
  7046                           ;common.c: 176: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  7047  07A3  1003               	clrc
  7048  07A4  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7049  07A5  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7050  07A6  27E2               	fcall	PL2	;call to abstracted procedure
  7051  07A7  0008               	return
  7052  07A8                     i1l4691:	
  7053                           
  7054                           ;common.c: 179: else
  7055                           ;common.c: 180: {
  7056                           ;common.c: 181: ucChannelZeroLength = 0;
  7057  07A8  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  7058                           
  7059                           ;common.c: 183: ucChannelSecondLength = 0;
  7060  07A9  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  7061                           
  7062                           ;common.c: 185: ucChannelFifthLength = 0;
  7063  07AA  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7064                           
  7065                           ;common.c: 187: ucChannelSixthLength = 0;
  7066  07AB  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7067                           
  7068                           ;common.c: 189: for(int i = 0;i < 12; i++)
  7069  07AC  01F7               	clrf	vPutSampleDataIntoTable@i
  7070  07AD  01F8               	clrf	vPutSampleDataIntoTable@i+1
  7071  07AE                     i1l4697:	
  7072                           
  7073                           ;common.c: 190: {
  7074                           ;common.c: 191: uiSampleChannelZero[i] = 0;
  7075  07AE  1003               	clrc
  7076  07AF  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7077  07B0  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7078  07B1  0084               	movwf	4
  7079  07B2  1383               	bcf	3,7	;select IRP bank1
  7080                           
  7081                           ;common.c: 193: uiSampleChannelSecond[i] = 0;
  7082  07B3  27F4  118A         	fcall	PL5	;call to abstracted procedure
  7083  07B5  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  7084  07B6  0084               	movwf	4
  7085  07B7  1783               	bsf	3,7	;select IRP bank3
  7086                           
  7087                           ;common.c: 195: uiSampleChannelFifth[i] = 0;
  7088  07B8  27F4  118A         	fcall	PL5	;call to abstracted procedure
  7089  07BA  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7090  07BB  0084               	movwf	4
  7091                           
  7092                           ;common.c: 197: uiSampleChannelSixth[i] = 0;
  7093  07BC  27F4  118A         	fcall	PL5	;call to abstracted procedure
  7094  07BE  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7095  07BF  0084               	movwf	4
  7096  07C0  0180               	clrf	0
  7097  07C1  0A84               	incf	4,f
  7098  07C2  0180               	clrf	0
  7099  07C3  0AF7               	incf	vPutSampleDataIntoTable@i,f
  7100  07C4  1903               	skipnz
  7101  07C5  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  7102  07C6  0878               	movf	vPutSampleDataIntoTable@i+1,w
  7103  07C7  3A80               	xorlw	128
  7104  07C8  00FF               	movwf	127
  7105  07C9  3080               	movlw	128
  7106  07CA  027F               	subwf	127,w
  7107  07CB  1D03               	skipz
  7108  07CC  2FCF               	goto	u187_25
  7109  07CD  300C               	movlw	12
  7110  07CE  0277               	subwf	vPutSampleDataIntoTable@i,w
  7111  07CF                     u187_25:	
  7112  07CF  1803               	btfsc	3,0
  7113  07D0  0008               	return
  7114  07D1  2FAE               	goto	i1l4697
  7115  07D2                     __end_of_vPutSampleDataIntoTable:	
  7116  07D2                     __ptext1052:	
  7117 ;; =============== function i1_setAD_ConvertFlag ends ============
  7118                           
  7119                           
  7120 ;; *************** function _adc_get *****************
  7121 ;; Defined at:
  7122 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\periph.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;		None
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  val             2    2[COMMON] unsigned int 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  2    0[COMMON] unsigned int 
  7129 ;; Registers used:
  7130 ;;		wreg
  7131 ;; Tracked objects:
  7132 ;;		On entry : 60/20
  7133 ;;		On exit  : 60/20
  7134 ;;		Unchanged: FFF9F/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7136 ;;      Params:         2       0       0       0       0
  7137 ;;      Locals:         2       0       0       0       0
  7138 ;;      Temps:          0       0       0       0       0
  7139 ;;      Totals:         4       0       0       0       0
  7140 ;;Total ram usage:        4 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_ISR
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148  07D2                     _adc_get:	
  7149                           
  7150                           ;periph.c: 106: unsigned int val;
  7151                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  7152                           
  7153                           ; Regs used in _adc_get: [wreg]
  7154  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  7155  07D3  081E               	movf	30,w	;volatile
  7156  07D4  00F3               	movwf	adc_get@val+1
  7157  07D5  01F2               	clrf	adc_get@val
  7158  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  7159  07D7  081E               	movf	30,w	;volatile
  7160  07D8  04F2               	iorwf	adc_get@val,f
  7161                           
  7162                           ;periph.c: 108: return val;
  7163  07D9  0873               	movf	adc_get@val+1,w
  7164  07DA  00F1               	movwf	?_adc_get+1
  7165  07DB  0872               	movf	adc_get@val,w
  7166  07DC  00F0               	movwf	?_adc_get
  7167  07DD  0008               	return
  7168  07DE                     __end_of_adc_get:	
  7169  07DE                     __ptext1051:	
  7170 ;; =============== function _ISR ends ============
  7171                           
  7172                           
  7173 ;; *************** function i1_setAD_ConvertFlag *****************
  7174 ;; Defined at:
  7175 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  setAD_Conver    1    wreg     unsigned char 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;		None               void
  7182 ;; Registers used:
  7183 ;;		wreg
  7184 ;; Tracked objects:
  7185 ;;		On entry : 60/0
  7186 ;;		On exit  : 60/20
  7187 ;;		Unchanged: FFF9F/0
  7188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7189 ;;      Params:         0       0       0       0       0
  7190 ;;      Locals:         1       0       0       0       0
  7191 ;;      Temps:          0       0       0       0       0
  7192 ;;      Totals:         1       0       0       0       0
  7193 ;;Total ram usage:        1 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		_ISR
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201  07DE                     i1_setAD_ConvertFlag:	
  7202                           
  7203                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  7204                           ;i1setAD_ConvertFlag@flag stored from wreg
  7205  07DE  00F0               	movwf	i1setAD_ConvertFlag@flag
  7206                           
  7207                           ;common.c: 240: adc_convert_flag = flag;
  7208  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  7209  07E0  00AD               	movwf	_adc_convert_flag^(0+128)
  7210  07E1  0008               	return
  7211  07E2                     __end_ofi1_setAD_ConvertFlag:	
  7212  07E2                     PL2:	
  7213  07E2  0084               	movwf	4
  7214  07E3  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7215  07E4  1783               	bsf	3,7	;select IRP bank3
  7216  07E5  0080               	movwf	0
  7217  07E6  0A84               	incf	4,f
  7218  07E7  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7219  07E8  0080               	movwf	0
  7220  07E9  0008               	return
  7221  07EA                     PL3:	
  7222  07EA  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  7223  07EB  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7224  07EC  0084               	movwf	4
  7225  07ED  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7226  07EE  1383               	bcf	3,7	;select IRP bank1
  7227  07EF  0080               	movwf	0
  7228  07F0  0A84               	incf	4,f
  7229  07F1  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7230  07F2  0080               	movwf	0
  7231  07F3  0008               	return
  7232  07F4                     PL5:	
  7233  07F4  0180               	clrf	0
  7234  07F5  0A84               	incf	4,f
  7235  07F6  0180               	clrf	0
  7236  07F7  1003               	clrc
  7237  07F8  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7238  07F9  0008               	return
  7239                           
  7240                           	psect	intentry
  7241  0004                     __pintentry:	
  7242                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7243                           
  7244  0004                     interrupt_function:	
  7245  007E                     saved_w	set	btemp
  7246  0004  00FE               	movwf	btemp
  7247  0005  0E03               	swapf	3,w
  7248  0006  00F9               	movwf	??_ISR
  7249  0007  0804               	movf	4,w
  7250  0008  00FA               	movwf	??_ISR+1
  7251  0009  080A               	movf	10,w
  7252  000A  00FB               	movwf	??_ISR+2
  7253  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7254  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7255  000D  087F               	movf	btemp+1,w
  7256  000E  00FC               	movwf	??_ISR+3
  7257  000F  118A  2F09         	ljmp	_ISR
  7258                           
  7259                           	psect	text1054
  7260  0000                     __ptext1054:	
  7261 ;; =============== function _vPutSampleDataIntoTable ends ============
  7262                           
  7263  007E                     btemp	set	126	;btemp
  7264  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Mar 16 21:13:11 2020

                              ??_clock_config 0020                                             pc 0002  
                                          _GO 00F9                                            fsr 0004  
                    ?_timer1_interrupt_config 0070                                           l702 04A6  
                                         l712 04B6                                           l722 04C7  
                                         l707 04AE                                           l732 0629  
                                         l717 04BF                                           l742 0534  
                                         l727 0EED                                           l815 00EC  
                                         l752 0ED4                                           l760 0000  
                                         l737 063D                                           l835 0147  
                                         l757 0000                                           l693 0000  
                                         l774 005F                                           l839 016F  
                                         l696 0000                                           l699 0000  
                                         l974 030E                                           l993 035D  
                                         _PA0 0028                                           _PA1 0029  
                                         _GIE 005F                                           _PB0 0030  
                                         _PA2 002A                                           _PB1 0031  
                                         _PA3 002B                                           _PB2 0032  
                                         _PB4 0034                                           _PA6 002E  
                                         _PB6 0036                                           _PB7 0037  
                                         _ISR 0709                                           fsr0 0004  
                                         indf 0000                                _ucChannel5Type 0054  
                      ??_startThreeHoursTimer 0022                                          S5823 0800  
                                        S5825 080E                                          S5827 081C  
                                        ?_ISR 0070                            __size_of_AD_Sample 0022  
                      ?_getAdOriginalCh0Value 0046                        ?_getAdOriginalCh2Value 0046  
                                        l1041 0440                                          l1128 052D  
                                        l5001 0000                                          l2611 0000  
                                        l1803 0000                                          l5011 0000  
                                        l5003 0000                                          l5021 0000  
                                        l5013 0000                                          l5005 0000  
                                        l1903 0000                                          l5111 00D1  
                                        l5103 0000                                          l5031 004F  
                                        l5015 0000                                          l5007 0000  
                                        l1912 0000                                          l1816 0000  
                                        l2617 0000                                          l5113 0000  
                                        l5105 00C5                                          l5041 0060  
                                        l5025 0042                                          l5017 0000  
                                        l5009 0000                                          l1906 0000  
                                        l4411 0000                                          l1851 0000  
                                        l5123 0000                                          l5115 0000  
                                        l5051 0000                                          l5035 0000  
                                        l5019 0034                                          l1860 0000  
                                        l1909 0000                                          l4413 0000  
                                        l4421 0000                                          l5141 0107  
                                        l5133 0000                                          l5125 00EF  
                                        l5117 00DD                                          l5109 00CD  
                                        l5061 007D                                          l5045 0000  
                                        l5037 0056                                          l5029 004E  
                                        l1854 0000                                          l4415 06E9  
                                        l4423 0000                                          l4431 0000  
                                        l4503 0000                                          l4511 0000  
                                        l1863 0000                                          l5311 0228  
                                        l5231 0000                                          l5143 0000  
                                        l5135 00FF                                          l5127 0000  
                                        l5071 0000                                          l5063 0000  
                                        l5055 0000                                          l5039 005C  
                                        l1848 0EDB                                          l1952 0000  
                                        l1872 0000                                          l4409 0000  
                                        l4417 0000                                          l4425 0000  
                                        l4433 0000                                          l4441 0000  
                                        l1857 0000                                          l4505 0000  
                                        l4521 0000                                          l4601 0000  
                                        l5321 0234                                          l5305 0212  
                                        l5241 01CA                                          l5233 01BC  
                                        l5209 0195                                          l5161 0151  
                                        l5153 0123                                          l5145 0112  
                                        l5129 0000                                          l5081 0000  
                                        l5073 0095                                          l5049 0000  
                                        l4419 0000                                          l4427 0000  
                                        l4435 0000                                          l4443 0000  
                                        l4451 0000                                          l4603 0000  
                                        l1875 0000                                          l5411 02C0  
                                        l5331 023D                                          l5315 0230  
                                        l5307 021E                                          l5243 01CE  
                                        l5219 019E                                          l5139 0000  
                                        l5091 00AC                                          l5083 0000  
                                        l5067 008B                                          l5059 0000  
                                        l4429 0000                                          l4437 0000  
                                        l4445 0000                                          l4453 0000  
                                        l4461 0000                                          l4509 0000  
                                        l4533 0000                                          l4621 067A  
                                        l4613 0679                                          l4605 0000  
                                        l1869 0000                                          l5501 0000  
                                        l5421 02CC                                          l5413 02C2  
                                        l5341 0246                                          l5309 0226  
                                        l5253 01DA                                          l5245 01D0  
                                        l5229 01B7                                          l5173 016D  
                                        l5165 015B                                          l5157 0142  
                                        l5149 011D                                          l5085 00A5  
                                        l5077 0000                                          l5069 0000  
                                        l1878 0000                                          l4439 0000  
                                        l4447 0000                                          l4455 0000  
                                        l4463 0000                                          l4471 0000  
                                        l4527 0000                                          l4535 0000  
                                        l4551 0000                                          l4623 06BC  
                                        l4703 0000                                          l5511 0396  
                                        l5503 0000                                          l5423 02CE  
                                        l5407 029F                                          l5351 0257  
                                        l5319 0232                                          l5255 01DC  
                                        l5239 01BE                                          l5183 017F  
                                        l5175 0171                                          l5079 00A2  
                                        l4449 0000                                          l4457 0000  
                                        l4465 0000                                          l4473 0000  
                                        l4481 0FC6                                          l4529 0000  
                                        l4545 0000                                          l4553 0000  
                                        l4633 0000                                          l4625 0000  
                                        l4801 0000                                          l5601 0441  
                                        l5521 03A7                                          l5505 0387  
                                        l5433 02D4                                          l5409 02B0  
                                        l5361 025D                                          l5353 0000  
                                        l5265 01E5                                          l5249 01D8  
                                        l5177 0175                                          l5169 0164  
                                        l5097 00BC                                          l5089 0000  
                                        l4459 0000                                          l4467 0000  
                                        l4475 0000                                          l4483 0000  
                                        l4491 0000                                          l4635 0000  
                                        l4619 06BA                                          l4707 0000  
                                        l4803 0000                                          l4811 0000  
                                        l5531 0000                                          l5523 0000  
                                        l5515 0399                                          l5507 038A  
                                        l5443 02DA                                          l5435 0000  
                                        l5371 027F                                          l5363 0269  
                                        l5275 01EE                                          l5187 0181  
                                        l5179 0177                                          l5099 00BD  
                                        l4469 0000                                          l4477 0000  
                                        l4557 0000                                          l4573 0000  
                                        l4581 0000                                          l4805 0000  
                                        l5533 0000                                          l5525 03AA  
                                        l5453 0000                                          l5365 0275  
                                        l5285 01F7                                          l5189 0183  
                                        l5605 044D                                          l4479 0000  
                                        l4567 0000                                          l4575 0000  
                                        l4591 0000                                          l4639 0000  
                                        l4751 0000                                          l4831 0FDF  
                                        l4823 0000                                          l4815 0000  
                                        l4903 0000                                          l5535 0000  
                                        l5519 0000                                          l5471 0321  
                                        l5455 0306                                          l5447 02E8  
                                        l5375 0281                                          l5367 0277  
                                        l5295 020C                                          l5199 018C  
                                        l4489 0000                                          l4593 0000  
                                        l4745 04C9                                          l4761 0000  
                                        l4809 051B                                          l4841 0000  
                                        l4921 0000                                          l4913 0000  
                                        l4905 057A                                          l5545 0000  
                                        l5537 0000                                          l5529 0000  
                                        l5481 0331                                          l5473 0325  
                                        l5457 0000                                          l5449 02F9  
                                        l5377 0283                                          l5297 0000  
                                        l4579 0000                                          l4747 0000  
                                        l4755 0000                                          l4771 0000  
                                        l4763 04E4                                          l4835 0FE6  
                                        l4827 0FD9                                          l4819 0000  
                                        l4843 0000                                          l4851 0000  
                                        l4931 0000                                          l4923 0591  
                                        l4915 0587                                          l4907 0000  
                                        l5571 0000                                          l5547 03CF  
                                        l5539 03BE                                          l5491 0000  
                                        l5483 0000                                          l5467 0000  
                                        l5475 032A                                          l5459 0308  
                                        l5387 028C                                          l4781 0000  
                                        l4765 0000                                          l4837 0FE7  
                                        l4845 0000                                          l4941 05B0  
                                        l4933 0000                                          l4925 0594  
                                        l4909 057D                                          l5573 040C  
                                        l5493 0000                                          l5469 0000  
                                        l5397 0299                                          l4599 0651  
                                        l4791 0000                                          l4783 0000  
                                        l4775 0000                                          l4767 0000  
                                        l4759 0000                                          l4839 0000  
                                        l4847 0000                                          l4855 0000  
                                        l4951 05BE                                          l4935 05A2  
                                        l4927 0000                                          l4919 0000  
                                        l4863 0000                                          l5591 0432  
                                        l5583 0000                                          l5567 03D8  
                                        l5495 0000                                          l5487 0000  
                                        l5399 0000                                          _ADIE 046A  
                                        _ADIF 006A                                          l4793 050D  
                                        l4785 0502                                          l4777 04FA  
                                        l4769 04F1                                          l4849 0000  
                                        l4945 0000                                          l4929 0000  
                                        l4881 0556                                          l4873 0000  
                                        l4865 0544                                          l4857 0000  
                                        l5585 0423                                          l5577 0419  
                                        l5569 03E4                                          l5489 033A  
                                        l4795 0000                                          l4787 0000  
                                        l4779 0000                                          l4963 0000  
                                        l4955 05C4                                          l4947 05B7  
                                        l4939 05AE                                          l4891 0000  
                                        l4875 054E                                          l4867 0000  
                                        l4859 0537                                          l5595 0000  
                                        l5579 041B                                          l5499 0345  
                                        l4789 0000                                          l4981 0000  
                                        l4973 0000                                          l4965 05D5  
                                        l4957 0000                                          l4949 0000  
                                        l4893 0000                                          l4885 0000  
                                        l4869 0547                                          l5597 0000  
                                        l5589 0430                                          l4799 0000  
                                        l4983 0000                                          l4975 05E5  
                                        l4967 0000                                          l4959 05C8  
                                        l4879 0000                                          l4969 05D8  
                                        l4889 0000                                          l4897 056B  
                                        l4993 0603                                          l4979 0000  
                                        l4899 0000                                          l4995 060F  
                                        l4989 05F2                                          l4999 0000  
                                        _ADON 00F8                        ?_getAdOriginalCh5Value 0046  
                      ?_getAdOriginalCh6Value 0046                 startTwelveHourTimer@uiSetTime 0020  
                                        u2435 0135                                          u2445 0140  
                                        u1745 0674                                          u1755 069B  
                                        u1765 0687                                          _PEIE 005E  
           vHandle20sTimeron@ucMoreThanP3sCnt 00BC             vHandle20sTimeron@ucMoreThanP8sCnt 00BD  
                                        _main 0013                             _vHandle20sTimeron 0536  
                                        btemp 007E                                _vPause20sTimer 0645  
                     _clearTwentySecondsTimer 06E1                                          start 0011  
                          ?_vHandle20sTimeron 0070                             main@ucTimerDelay1 005F  
                           main@ucTimerDelay2 0060                             main@ucTimerDelay3 0061  
                           main@ucTimerDelay4 0062                             main@ucTimerCntP3s 005D  
                                       ??_ISR 0079                    __end_of_isPermitSampleTime 0800  
                         ??_vHandle20sTimeron 0048                                 main@bInitFlag 0056  
                         _sampleChannelSelect 0051                                         ?_main 0070  
                                       _CLKPR 0108                                         _T1CON 0010  
                             __end_of_adc_get 07DE                                         _PBOD7 0C47  
                 vHandle20sTimerOut@ucTimeCnt 007D                                         _TMR1H 000F  
                                       _TMR1L 000E                         setAD_ConvertFlag@flag 0020  
                          _vHandle20sTimerOut 04DC                       _vPutSampleDataIntoTable 075D  
                             __end_of_initPin 0FB2                          vPause20sTimer@bValue 0020  
                                       _timer 00AF                     __end_of_vHandle20sTimeron 0619  
                                       pclath 000A               __size_of_startTwentyMinuteTimer 0014  
                      __end_of_vPause20sTimer 064A                                         status 0003  
                                       wtemp0 007E                           ?_vHandle20sTimerOut 0070  
               __size_of_startTwelveHourTimer 0014                          __end_of_clrSampeTime 0004  
                       __end_of_clearAllTimer 04D0                                  __end_of_main 046A  
                      __size_of_adc_test_init 0015                             __end_of_AD_Sample 0FEB  
                                      ??_main 0048                          ??_vHandle20sTimerOut 0021  
                        _clearPinPortAndTimer 047E                                        _ADCON0 001F  
                                      _ADCON1 009F                          __end_of_clock_config 0EDE  
                                      _ADRESH 001E                                        _ADRESL 009E  
                                      _CLKPCE 0847                                        i1l2620 0000  
                                      i1l1863 0000                                        i1l1960 0728  
                                      i1l1961 0735                                        i1l1964 0750  
                                      i1l4701 0000                                        i1l1959 071E  
                                      i1l4713 0000                                        i1l4651 0768  
                                      i1l4643 0000                                        i1l4715 0000  
                                      i1l4731 073F                                        i1l4661 0000  
                                      i1l4653 0000                                        i1l4709 0000  
                                      i1l4663 077A                                        i1l4655 076C  
                                      i1l4743 0000                                        i1l4735 0000  
                                      i1l4719 0000                                        i1l4673 0000  
                                      i1l4665 0000                                        i1l4649 0000  
                                      i1l4737 0000                                        i1l4691 07A8  
                                      i1l4675 078E                                        i1l4667 0780  
                                      i1l4739 0000                                        i1l4685 0000  
                                      i1l4677 0000                                        i1l4687 07A2  
                                      i1l4679 0794                                        i1l4697 07AE  
                                      i1l4689 0000                                        i1l4699 0000  
                                      u187_25 07CF                     ??_clearTwentySecondsTimer 0020  
                                      _TMR1IE 0460                                        _TMR1IF 0060  
                      __size_of_setPB6AsInput 0003                               ?_vPause20sTimer 0070  
                           _getAD_ConvertFlag 0FBD                             _setAD_ConvertFlag 0FC1  
                                      _TRISA0 0428                                        _TRISA1 0429  
                                      _TRISB0 0430                                        _TRISA2 042A  
                                      _TRISB1 0431                                        _TRISA3 042B  
                                      _TRISB2 0432                                        _TRISB3 0433  
                                      _TRISB4 0434                                        _TRISA6 042E  
                                      _TRISB5 0435                                        _TRISA7 042F  
                                      _TRISB6 0436                                        _TRISB7 0437  
                               main@ucTimer1s 00B2                            ?_getAD_ConvertFlag 0070  
                                      _Filter 064A                            ?_setAD_ConvertFlag 0070  
                 ??_isFinishedThreeHoursTimer 0020           __end_of_isFinishedTwentyMinuteTimer 0F0F  
                 _isFinishedTwentyMinuteTimer 0F03                 __size_of_clearThreeHoursTimer 0006  
                                   ??_adc_get 0072                           ??_getAD_ConvertFlag 0020  
                         ??_setAD_ConvertFlag 0020                        _startTwentyMinuteTimer 0F38  
                 __size_of_clearParaFunction1 0016                                        _setPA0 04B8  
                                      _setPA1 04C1                                        _setPA2 0EE6  
                                      _setPB0 04A0                                        _setPB1 04A8  
                                      _setPA3 0622                                        _setPB2 04B0  
                                      _setPA6 0ECE                                        _setPB4 052E  
                                      _setPB6 0634                                        clrloop 0EDF  
                            Filter@filter_buf 0026                              Filter@filter_sum 0040  
                                   ??_initPin 0020                       main@ucTimerDelayP2sLess 0063  
                     main@ucTimerDelayP2sMore 0064                     ??_vPutSampleDataIntoTable 0077  
                       ?_clearPinPortAndTimer 0070                                        saved_w 007E  
                     ??_clearTwelveHoursTimer 0020                   ?_process_AD_Converter_Value 0070  
                               _adc_test_init 0FEB              __size_of_startTwentySecondsTimer 0011  
                   __end_of_getAD_ConvertFlag 0FC1                     __end_of_setAD_ConvertFlag 0FC6  
                  __size_of_vHandle20sTimeron 00E3   vPutSampleDataIntoTable@ucChannelFifthLength 006B  
                          __size_of_adc_start 0003                                __pcstackCOMMON 0070  
             __end_of_clearTwentySecondsTimer 06E9                          _uiSampleChannelFifth 0190  
                               _setPB6AsInput 0642                          _uiSampleChannelSixth 01C0  
  vPutSampleDataIntoTable@ucChannelZeroLength 006E                      ??_clearTwentyMinuteTimer 0020  
              vPutSampleDataIntoTable@channel 0076                       ??_getAdOriginalCh0Value 0048  
                         main@ucTimerRightP5s 0068                     _isFinishedThreeHoursTimer 0F1B  
                     ??_getAdOriginalCh2Value 0048                       ??_getAdOriginalCh5Value 0048  
                       __end_of_timer1_config 0EF9                       ??_getAdOriginalCh6Value 0048  
                              ?_adc_test_init 0020              __size_of_timer1_interrupt_config 0003  
                      main@ucTimerLessZeroP5s 0066                         __size_of_clrSampeTime 0002  
                                  __pbssBANK0 004A                                    __pbssBANK1 00A0  
                                  __pbssBANK3 0190                  __size_ofi1_setAD_ConvertFlag 0004  
                                  adc_get@val 0072               __end_of_vPutSampleDataIntoTable 07D2  
                                     ?_Filter 0020                                    __pmaintext 0013  
                              main@uiCh5Value 0048                                    __pintentry 0004  
                         main@enumInteralStep 00B1                                    __ptext1010 04DC  
                                  __ptext1011 046A                                    __ptext1003 0000  
                                  __ptext1020 0F60                                    __ptext1012 062B  
                                  __ptext1004 0536                                    __ptext1021 0EF9  
                                  __ptext1013 0474                                    __ptext1005 0FB2  
                                  __ptext1030 0FEB                                    __ptext1022 0F27  
                                  __ptext1014 04C9                                    __ptext1006 048A  
                                  __ptext1031 0ECB                                    __ptext1023 0F0F  
                                  __ptext1015 0FC1                                    __ptext1007 047E  
                                  __ptext1040 04C1                                    __ptext1032 0EEF  
                                  __ptext1024 0F4C                                    __ptext1016 0FBD  
                                  __ptext1008 0FC9                                    __ptext1041 04B8  
                                  __ptext1033 0ED6                                    __ptext1025 0F03  
                                  __ptext1017 064A                                    __ptext1009 0619  
                                  __ptext1050 0709                                    __ptext1042 04B0  
                                  __ptext1034 0642                                    __ptext1026 0002  
                                  __ptext1018 0645                                    __ptext1051 07DE  
                                  __ptext1043 04A8                                    __ptext1035 0ECE  
                                  __ptext1027 07FA                                    __ptext1019 0F1B  
                                  __ptext1052 07D2                                    __ptext1044 04A0  
                                  __ptext1036 052E                                    __ptext1028 0F38  
                                  __ptext1053 075D                                    __ptext1045 0F8B  
                                  __ptext1037 0634                                    __ptext1029 0FC6  
                                  __ptext1054 0000                                    __ptext1046 06E9  
                                  __ptext1038 0622                                    __ptext1047 06E1  
                                  __ptext1039 0EE6                                    __ptext1048 04D6  
                                  __ptext1049 04D0                                ?_setPB6AsInput 0070  
                                     ?_setPA0 0070                                       ?_setPA1 0070  
                                     ?_setPA2 0070                                       ?_setPB0 0070  
                                     ?_setPA3 0070                                       ?_setPB1 0070  
                                     ?_setPB2 0070                                       ?_setPA6 0070  
                                     ?_setPB4 0070                                       ?_setPB6 0070  
                      ??_clearPinPortAndTimer 0020                         __size_of_clock_config 0008  
                                _clrSampeTime 0002                             __end_of_adc_start 0FC9  
                        _uiTwentySecondsTimer 00A6                            _isPermitSampleTime 07FA  
                                     Filter@i 0045                                       Filter@j 0044  
               __size_of_startThreeHoursTimer 0014                    __size_of_getAD_ConvertFlag 0004  
                  __size_of_setAD_ConvertFlag 0005                                main@ucTimerP3s 00B5  
                              main@ucTimerP5s 0067                           ?_isPermitSampleTime 0070  
                              main@uiMaxValue 00A8                                main@uiMinValue 00AA  
                                setPA0@bValue 0020                                main@uiOldValue 004A  
                                setPA1@bValue 0020                               __size_of_Filter 0097  
                                setPA2@bValue 0020                                  setPB0@bValue 0020  
                                  _uiBigTimer 00A0                                  setPA3@bValue 0020  
                                setPB1@bValue 0020                                  setPB2@bValue 0020  
                                setPA6@bValue 0020                                  setPB4@bValue 0020  
                                _clock_config 0ED6                                       _adc_get 07D2  
                                setPB6@bValue 0020                              _bPause20secTimer 00AE  
                             __size_of_setPA0 0009                               __size_of_setPA1 0008  
                             __size_of_setPB0 0008                               __size_of_setPA2 0009  
                             __size_of_setPB1 0008                               __size_of_setPA3 0009  
                             __size_of_setPB2 0008                               __size_of_setPB4 0008  
                             __size_of_setPA6 0008                               __size_of_setPB6 000E  
        __end_of_isFinishedTwentySecondsTimer 0F03         __size_of_isFinishedTwentySecondsTimer 000A  
                _isFinishedTwentySecondsTimer 0EF9                          ??_isPermitSampleTime 0020  
                __end_of_startTwelveHourTimer 0F60                                     _AD_Sample 0FC9  
                                __size_of_ISR 0054               __size_of_clearTwentyMinuteTimer 0005  
                                     _initPin 0F8B                          _bSmallTimerStartFlag 004D  
                             ??_adc_test_init 0021                       _startTwentySecondsTimer 0F27  
                            ??_vPause20sTimer 0020                          end_of_initialization 0F88  
                           Filter@filter_temp 003E                       ?_startTwentyMinuteTimer 0020  
                            main@ucLoaderStep 0058                               ??_setPB6AsInput 0020  
                                  ?_AD_Sample 0070                 startTwentyMinuteTimer@uiValue 0020  
                 __size_of_vHandle20sTimerOut 0052                 ?_isFinishedTwentySecondsTimer 0070  
                ??_isFinishedTwelveHoursTimer 0020                                     Filter@cir 0042  
                         _bTwentyMinStartFlag 004E                              _adc_convert_flag 00AD  
                      __size_of_clearAllTimer 0007                  __end_of_clearThreeHoursTimer 04DC  
                     main@ucTimerLargeZeroP5s 0065                __size_of_clearTwelveHoursTimer 0006  
                     _timer1_interrupt_config 0ECB                 __end_of_clearTwelveHoursTimer 04D6  
           vHandle20sTimeron@ucLessThanP3sCnt 00BA             vHandle20sTimeron@ucLessThanP8sCnt 00BB  
          __size_of_isFinishedThreeHoursTimer 000C                        _clearTwentyMinuteTimer 06E9  
              __end_of_startTwentyMinuteTimer 0F4C                              main@ucTimerX1P5s 00B6  
                            main@ucTimerX2P5s 00B7                        main@ucTimerZeroPoint3s 0069  
                      main@ucTimerZeroPoint5s 006A                              main@ucTimerDelay 005E  
                              __end_of_Filter 06E1                    __end_of_clearParaFunction1 04A0  
                         _bTwentySecStartFlag 004F           __size_of_isFinishedTwelveHoursTimer 000C  
 vPutSampleDataIntoTable@ucChannelSixthLength 006D                      vPutSampleDataIntoTable@i 0077  
                         i1_setAD_ConvertFlag 07DE                                __end_of_setPA0 04C1  
                              __end_of_setPA1 04C9                                __end_of_setPB0 04A8  
                              __end_of_setPA2 0EEF                                __end_of_setPB1 04B0  
                              __end_of_setPA3 062B                                __end_of_setPB2 04B8  
                              __end_of_setPB4 0536                                __end_of_setPA6 0ED6  
                              __end_of_setPB6 0642                     ??_startTwentySecondsTimer 0020  
                         start_initialization 0F74                                   __end_of_ISR 075D  
                        main@ucTimerLessX1P5s 00B3                          main@ucTimerLessX2P5s 00B4  
              __size_of_getAdOriginalCh0Value 000A                      ?_clearTwentySecondsTimer 0070  
              __size_of_getAdOriginalCh2Value 0009                         _uiSampleChannelSecond 01A8  
               __end_of_getAdOriginalCh0Value 047E                 __end_of_getAdOriginalCh2Value 0622  
              __size_of_getAdOriginalCh5Value 000A                __size_of_getAdOriginalCh6Value 0009  
               __end_of_getAdOriginalCh5Value 0474                 __end_of_getAdOriginalCh6Value 0634  
                        ?i1_setAD_ConvertFlag 0070                          _startTwelveHourTimer 0F4C  
           __end_of_isFinishedThreeHoursTimer 0F27                            main@enumBranchStep 00B0  
                                    ??_Filter 0022                                 _clearAllTimer 04C9  
               vHandle20sTimeron@ucTimeCntP2s 00BE                                   _ucADC4_Step 0053  
              vHandle20sTimeron@ucCompareStep 00B9                                      ??_setPA0 0020  
                                    ??_setPA1 0020                                      ??_setPA2 0020  
                                    ??_setPB0 0020                                      ??_setPA3 0020  
                                    ??_setPB1 0020                                      ??_setPB2 0020  
                                    ??_setPA6 0020                                      ??_setPB4 0020  
                                    ??_setPB6 0020                 vHandle20sTimeron@ucTimerCntN1 00C1  
                    ?_vPutSampleDataIntoTable 0074                                   ??_AD_Sample 0023  
                   ??_timer1_interrupt_config 0020                                   __pbssCOMMON 007D  
                               __pcstackBANK0 0020                ??_isFinishedTwentySecondsTimer 0020  
                                   _adc_start 0FC6               vHandle20sTimeron@ucTimerCntLess 00BF  
                            _enumMainLoopStep 0050               vHandle20sTimeron@ucTimerCntMore 00C0  
                         _uiSampleChannelZero 00C4                         ??i1_setAD_ConvertFlag 0070  
                       ?_startTwelveHourTimer 0020               __end_of_startTwentySecondsTimer 0F38  
                              ?_clearAllTimer 0070                        __size_of_timer1_config 000A  
                        _clearThreeHoursTimer 04D6                  __end_of_startThreeHoursTimer 0F74  
                         _uiTwentyMinuteTimer 00A4                                      ?_adc_get 0070  
                                   __pswtext1 0800                                     __pswtext2 080E  
                                   __pswtext3 081C            __end_of_isFinishedTwelveHoursTimer 0F1B  
                  _isFinishedTwelveHoursTimer 0F0F                               ISR@ucTimer1sCnt 00AC  
                                    ?_initPin 0070                 __size_of_clearPinPortAndTimer 000C  
                                  ?_adc_start 0070                             interrupt_function 0004  
             __end_of_timer1_interrupt_config 0ECE                         ?_clearThreeHoursTimer 0070  
                ?_isFinishedTwentyMinuteTimer 0070                          adc_test_init@channel 0022  
         vPutSampleDataIntoTable@uiSampleData 0074                   __size_of_isPermitSampleTime 0006  
                                _uiSmallTimer 00A2                         __end_of_adc_test_init 1000  
                               _timer1_config 0EEF                  ??_process_AD_Converter_Value 0023  
                     ?_clearTwentyMinuteTimer 0070                        ??_startTwelveHourTimer 0022  
                             ??_clearAllTimer 0020                   main@ucFourthSuffix1TimerP3s 0057  
               ??_isFinishedTwentyMinuteTimer 0020                    __end_of_vHandle20sTimerOut 052E  
                       __end_of_setPB6AsInput 0645                              __size_of_adc_get 000C  
              vHandle20sTimeron@ucTimerCntP5s 00C2           __size_of_process_AD_Converter_Value 000B  
               vHandle20sTimeron@waitLoopStep 00C3                            _clearParaFunction1 048A  
                            __size_of_initPin 0027                                Filter@tmpValue 0020  
                              ?_timer1_config 0070                __end_of_clearTwentyMinuteTimer 06EE  
                                 ??_adc_start 0020  vPutSampleDataIntoTable@ucChannelSecondLength 006C  
                        _startThreeHoursTimer 0F60                           ?_clearParaFunction1 0070  
                       _clearTwelveHoursTimer 04D0                                 __size_of_main 0457  
                     __size_of_vPause20sTimer 0005                                      clear_ram 0EDE  
                      ??_clearThreeHoursTimer 0020              __size_of_clearTwentySecondsTimer 0008  
                        ??_clearParaFunction1 0021                                 ?_clrSampeTime 0070  
     vHandle20sTimerOut@ucTimerOnBehaviorStep 00B8                                   _sampleTimes 0052  
        __size_of_isFinishedTwentyMinuteTimer 000C                         ?_startThreeHoursTimer 0020  
            __size_of_vPutSampleDataIntoTable 0075                                      intlevel1 0000  
                       _getAdOriginalCh0Value 0474                         _getAdOriginalCh2Value 0619  
                       _getAdOriginalCh5Value 046A                         _getAdOriginalCh6Value 062B  
                  ?_isFinishedThreeHoursTimer 0070                  vHandle20sTimerOut@bClearStep 0021  
                           main@ucLoaderStep1 0059                             main@ucLoaderStep2 005A  
                           main@ucLoaderStep3 005B                             main@ucLoaderStep4 005C  
                               ?_clock_config 0070                      ?_startTwentySecondsTimer 0070  
               startThreeHoursTimer@uiSetTime 0020                       i1setAD_ConvertFlag@flag 0070  
                              ??_clrSampeTime 0020                   ?_isFinishedTwelveHoursTimer 0070  
                          _bBigTimerStartFlag 004C                               ??_timer1_config 0020  
                           main@bCheckTweHour 0055                   __end_ofi1_setAD_ConvertFlag 07E2  
          __end_of_process_AD_Converter_Value 0FBD                    _process_AD_Converter_Value 0FB2  
                      ?_clearTwelveHoursTimer 0070                      ??_startTwentyMinuteTimer 0022  
                            adc_test_init@ref 0020                  __end_of_clearPinPortAndTimer 048A  
