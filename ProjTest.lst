

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Mar 29 19:19:33 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text1003,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text1005,local,class=CODE,delta=2
    19                           	psect	text1011,local,class=CODE,delta=2
    20                           	psect	text1019,local,class=CODE,delta=2
    21                           	psect	text1020,local,class=CODE,delta=2
    22                           	psect	text1021,local,class=CODE,delta=2
    23                           	psect	text1022,local,class=CODE,delta=2
    24                           	psect	text1023,local,class=CODE,delta=2
    25                           	psect	text1024,local,class=CODE,delta=2
    26                           	psect	text1025,local,class=CODE,delta=2
    27                           	psect	text1026,local,class=CODE,delta=2
    28                           	psect	text1027,local,class=CODE,delta=2
    29                           	psect	text1028,local,class=CODE,delta=2
    30                           	psect	text1031,local,class=CODE,delta=2
    31                           	psect	text1032,local,class=CODE,delta=2
    32                           	psect	text1033,local,class=CODE,delta=2
    33                           	psect	text1035,local,class=CODE,delta=2
    34                           	psect	text1039,local,class=CODE,delta=2
    35                           	psect	text1045,local,class=CODE,delta=2
    36                           	psect	text1050,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text1054,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	text1003
    49  0000                     __ptext1003:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  0010                     _T1CON	set	16
    53  000F                     _TMR1H	set	15
    54  000E                     _TMR1L	set	14
    55  006A                     _ADIF	set	106
    56  00F8                     _ADON	set	248
    57  005F                     _GIE	set	95
    58  00F9                     _GO	set	249
    59  0028                     _PA0	set	40
    60  0029                     _PA1	set	41
    61  002A                     _PA2	set	42
    62  002B                     _PA3	set	43
    63  002E                     _PA6	set	46
    64  0030                     _PB0	set	48
    65  0031                     _PB1	set	49
    66  0032                     _PB2	set	50
    67  0034                     _PB4	set	52
    68  0036                     _PB6	set	54
    69  0037                     _PB7	set	55
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0428                     _TRISA0	set	1064
    77  0429                     _TRISA1	set	1065
    78  042A                     _TRISA2	set	1066
    79  042B                     _TRISA3	set	1067
    80  042E                     _TRISA6	set	1070
    81  042F                     _TRISA7	set	1071
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0436                     _TRISB6	set	1078
    89  0437                     _TRISB7	set	1079
    90  0108                     _CLKPR	set	264
    91  0847                     _CLKPCE	set	2119
    92  0C47                     _PBOD7	set	3143
    93                           
    94                           	psect	cinit
    95  07E0                     start_initialization:	
    96  07E0  304A               	movlw	low __pbssBANK0
    97                           
    98                           ; Clear objects allocated to COMMON
    99  07E1  01FD               	clrf	__pbssCOMMON& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  07E2  1383               	bcf	3,7	;select IRP bank0
   103  07E3  0084               	movwf	4
   104  07E4  306F               	movlw	low (__pbssBANK0+37)
   105  07E5  158A  26FC  118A   	fcall	clear_ram
   106                           
   107                           ; Clear objects allocated to BANK1
   108  07E8  30A0               	movlw	low __pbssBANK1
   109  07E9  0084               	movwf	4
   110  07EA  30DC               	movlw	low (__pbssBANK1+60)
   111  07EB  158A  26FC  118A   	fcall	clear_ram
   112  07EE  3090               	movlw	low __pbssBANK3
   113                           
   114                           ; Clear objects allocated to BANK3
   115  07EF  1783               	bsf	3,7	;select IRP bank2
   116  07F0  0084               	movwf	4
   117  07F1  30D8               	movlw	low (__pbssBANK3+72)
   118  07F2  158A  26FC         	fcall	clear_ram
   119  07F4                     end_of_initialization:	
   120                           ;End of C runtime variable initialization code
   121                           
   122  07F4  0183               	clrf	3
   123  07F5  118A  2813         	ljmp	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMMON
   126  007D                     __pbssCOMMON:	
   127  007D                     vHandle20sTimerOut@ucTimeCnt:	
   128  007D                     	ds	1
   129                           
   130                           	psect	bssBANK0
   131  004A                     __pbssBANK0:	
   132  004A                     main@uiOldValue:	
   133  004A                     	ds	2
   134  004C                     _bBigTimerStartFlag:	
   135  004C                     	ds	1
   136  004D                     _bSmallTimerStartFlag:	
   137  004D                     	ds	1
   138  004E                     _bTwentyMinStartFlag:	
   139  004E                     	ds	1
   140  004F                     _bTwentySecStartFlag:	
   141  004F                     	ds	1
   142  0050                     _enumMainLoopStep:	
   143  0050                     	ds	1
   144  0051                     _sampleChannelSelect:	
   145  0051                     	ds	1
   146  0052                     _sampleTimes:	
   147  0052                     	ds	1
   148  0053                     _ucADC4_Step:	
   149  0053                     	ds	1
   150  0054                     _ucChannel5Type:	
   151  0054                     	ds	1
   152  0055                     main@bCheckTweHour:	
   153  0055                     	ds	1
   154  0056                     main@bInitFlag:	
   155  0056                     	ds	1
   156  0057                     main@ucFourthSuffix1TimerP3s:	
   157  0057                     	ds	1
   158  0058                     main@ucLoaderStep:	
   159  0058                     	ds	1
   160  0059                     main@ucLoaderStep1:	
   161  0059                     	ds	1
   162  005A                     main@ucLoaderStep2:	
   163  005A                     	ds	1
   164  005B                     main@ucLoaderStep3:	
   165  005B                     	ds	1
   166  005C                     main@ucLoaderStep4:	
   167  005C                     	ds	1
   168  005D                     main@ucTimerCntP3s:	
   169  005D                     	ds	1
   170  005E                     main@ucTimerDelay:	
   171  005E                     	ds	1
   172  005F                     main@ucTimerDelay1:	
   173  005F                     	ds	1
   174  0060                     main@ucTimerDelay2:	
   175  0060                     	ds	1
   176  0061                     main@ucTimerDelay3:	
   177  0061                     	ds	1
   178  0062                     main@ucTimerDelay4:	
   179  0062                     	ds	1
   180  0063                     main@ucTimerDelayP2sLess:	
   181  0063                     	ds	1
   182  0064                     main@ucTimerDelayP2sMore:	
   183  0064                     	ds	1
   184  0065                     main@ucTimerLargeZeroP5s:	
   185  0065                     	ds	1
   186  0066                     main@ucTimerLessZeroP5s:	
   187  0066                     	ds	1
   188  0067                     main@ucTimerP5s:	
   189  0067                     	ds	1
   190  0068                     main@ucTimerRightP5s:	
   191  0068                     	ds	1
   192  0069                     main@ucTimerZeroPoint3s:	
   193  0069                     	ds	1
   194  006A                     main@ucTimerZeroPoint5s:	
   195  006A                     	ds	1
   196  006B                     vPutSampleDataIntoTable@ucChannelFifthLength:	
   197  006B                     	ds	1
   198  006C                     vPutSampleDataIntoTable@ucChannelSecondLength:	
   199  006C                     	ds	1
   200  006D                     vPutSampleDataIntoTable@ucChannelSixthLength:	
   201  006D                     	ds	1
   202  006E                     vPutSampleDataIntoTable@ucChannelZeroLength:	
   203  006E                     	ds	1
   204                           
   205                           	psect	bssBANK1
   206  00A0                     __pbssBANK1:	
   207  00A0                     _uiBigTimer:	
   208  00A0                     	ds	2
   209  00A2                     _uiSmallTimer:	
   210  00A2                     	ds	2
   211  00A4                     _uiTwentyMinuteTimer:	
   212  00A4                     	ds	2
   213  00A6                     _uiTwentySecondsTimer:	
   214  00A6                     	ds	2
   215  00A8                     main@uiMaxValue:	
   216  00A8                     	ds	2
   217  00AA                     main@uiMinValue:	
   218  00AA                     	ds	2
   219  00AC                     ISR@ucTimer1sCnt:	
   220  00AC                     	ds	1
   221  00AD                     _adc_convert_flag:	
   222  00AD                     	ds	1
   223  00AE                     _bPause20secTimer:	
   224  00AE                     	ds	1
   225  00AF                     _timer:	
   226  00AF                     	ds	1
   227  00B0                     main@enumBranchStep:	
   228  00B0                     	ds	1
   229  00B1                     main@enumInteralStep:	
   230  00B1                     	ds	1
   231  00B2                     main@ucTimer1s:	
   232  00B2                     	ds	1
   233  00B3                     main@ucTimerLessX1P5s:	
   234  00B3                     	ds	1
   235  00B4                     main@ucTimerLessX2P5s:	
   236  00B4                     	ds	1
   237  00B5                     main@ucTimerP3s:	
   238  00B5                     	ds	1
   239  00B6                     main@ucTimerX1P5s:	
   240  00B6                     	ds	1
   241  00B7                     main@ucTimerX2P5s:	
   242  00B7                     	ds	1
   243  00B8                     vHandle20sTimerOut@ucTimerOnBehaviorStep:	
   244  00B8                     	ds	1
   245  00B9                     vHandle20sTimeron@ucCompareStep:	
   246  00B9                     	ds	1
   247  00BA                     vHandle20sTimeron@ucLessThanP3sCnt:	
   248  00BA                     	ds	1
   249  00BB                     vHandle20sTimeron@ucLessThanP8sCnt:	
   250  00BB                     	ds	1
   251  00BC                     vHandle20sTimeron@ucMoreThanP3sCnt:	
   252  00BC                     	ds	1
   253  00BD                     vHandle20sTimeron@ucMoreThanP8sCnt:	
   254  00BD                     	ds	1
   255  00BE                     vHandle20sTimeron@ucTimeCntP2s:	
   256  00BE                     	ds	1
   257  00BF                     vHandle20sTimeron@ucTimerCntLess:	
   258  00BF                     	ds	1
   259  00C0                     vHandle20sTimeron@ucTimerCntMore:	
   260  00C0                     	ds	1
   261  00C1                     vHandle20sTimeron@ucTimerCntN1:	
   262  00C1                     	ds	1
   263  00C2                     vHandle20sTimeron@ucTimerCntP5s:	
   264  00C2                     	ds	1
   265  00C3                     vHandle20sTimeron@waitLoopStep:	
   266  00C3                     	ds	1
   267  00C4                     _uiSampleChannelZero:	
   268  00C4                     	ds	24
   269                           
   270                           	psect	bssBANK3
   271  0190                     __pbssBANK3:	
   272  0190                     _uiSampleChannelFifth:	
   273  0190                     	ds	24
   274  01A8                     _uiSampleChannelSecond:	
   275  01A8                     	ds	24
   276  01C0                     _uiSampleChannelSixth:	
   277  01C0                     	ds	24
   278                           
   279                           	psect	clrtext
   280  0EFC                     clear_ram:	
   281                           ;	Called with FSR containing the base address, and
   282                           ;	W with the last address+1
   283                           
   284  0EFC  0064               	clrwdt	;clear the watchdog before getting into this loop
   285  0EFD                     clrloop:	
   286  0EFD  0180               	clrf	0	;clear RAM location pointed to by FSR
   287  0EFE  0A84               	incf	4,f	;increment pointer
   288  0EFF  0604               	xorwf	4,w	;XOR with final address
   289  0F00  1903               	btfsc	3,2	;have we reached the end yet?
   290  0F01  3400               	retlw	0	;all done for this memory range, return
   291  0F02  0604               	xorwf	4,w	;XOR again to restore value
   292  0F03  2EFD               	goto	clrloop	;do the next byte
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:	
   296  0070                     ?_clearTwelveHoursTimer:	
   297  0070                     ?_clearThreeHoursTimer:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_clearTwentySecondsTimer:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_clearTwentyMinuteTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_clock_config:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_timer1_config:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_timer1_interrupt_config:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_adc_start:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_process_AD_Converter_Value:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_clrSampeTime:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_startTwentySecondsTimer:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_vHandle20sTimeron:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_vHandle20sTimerOut:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_vPause20sTimer:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_AD_Sample:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_clearAllTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_clearPinPortAndTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_initPin:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_setPB0:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ?_setPB1:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?_setPB2:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ?_setPA0:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?_setPA1:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_setPA2:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_setPA3:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_setPB6:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_setPB4:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_setPA6:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_setPB6AsInput:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?_clearParaFunction1:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?_setAD_ConvertFlag:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ?_ISR:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ?i1_setAD_ConvertFlag:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ??i1_setAD_ConvertFlag:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_isPermitSampleTime:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ?_isFinishedTwentyMinuteTimer:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_isFinishedTwelveHoursTimer:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_isFinishedTwentySecondsTimer:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_isFinishedThreeHoursTimer:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_getAD_ConvertFlag:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_adc_get:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     i1setAD_ConvertFlag@flag:	
   421                           ; 2 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	2
   426  0072                     ??_adc_get:	
   427  0072                     adc_get@val:	
   428                           ; 0 bytes @ 0x2
   429                           
   430                           
   431                           ; 2 bytes @ 0x2
   432  0072                     	ds	2
   433  0074                     ?_vPutSampleDataIntoTable:	
   434  0074                     vPutSampleDataIntoTable@uiSampleData:	
   435                           ; 0 bytes @ 0x4
   436                           
   437                           
   438                           ; 2 bytes @ 0x4
   439  0074                     	ds	2
   440  0076                     vPutSampleDataIntoTable@channel:	
   441                           
   442                           ; 1 bytes @ 0x6
   443  0076                     	ds	1
   444  0077                     ??_vPutSampleDataIntoTable:	
   445  0077                     vPutSampleDataIntoTable@i:	
   446                           ; 0 bytes @ 0x7
   447                           
   448                           
   449                           ; 2 bytes @ 0x7
   450  0077                     	ds	2
   451  0079                     ??_ISR:	
   452                           
   453                           ; 0 bytes @ 0x9
   454  0079                     	ds	4
   455                           
   456                           	psect	cstackBANK0
   457  0020                     __pcstackBANK0:	
   458  0020                     ??_clearTwelveHoursTimer:	
   459  0020                     ??_clearThreeHoursTimer:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0020                     ??_clearTwentySecondsTimer:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0020                     ??_clearTwentyMinuteTimer:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0020                     ??_clock_config:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0020                     ??_timer1_config:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_timer1_interrupt_config:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ?_adc_test_init:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ??_adc_start:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ?_startTwentyMinuteTimer:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ??_isPermitSampleTime:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ??_clrSampeTime:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ??_isFinishedTwentyMinuteTimer:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ?_startTwelveHourTimer:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_isFinishedTwelveHoursTimer:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ??_startTwentySecondsTimer:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ??_isFinishedTwentySecondsTimer:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ?_startThreeHoursTimer:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ??_isFinishedThreeHoursTimer:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ??_vPause20sTimer:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_clearAllTimer:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ??_clearPinPortAndTimer:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ??_initPin:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0020                     ??_setPB0:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0020                     ??_setPB1:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0020                     ??_setPB2:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0020                     ??_setPA0:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0020                     ??_setPA1:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0020                     ??_setPA2:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0020                     ??_setPA3:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0020                     ??_setPB6:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0020                     ??_setPB4:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0020                     ??_setPA6:	
   553                           ; 0 bytes @ 0x0
   554                           
   555  0020                     ??_setPB6AsInput:	
   556                           ; 0 bytes @ 0x0
   557                           
   558  0020                     ??_getAD_ConvertFlag:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0020                     ??_setAD_ConvertFlag:	
   562                           ; 0 bytes @ 0x0
   563                           
   564  0020                     ?_Filter:	
   565                           ; 0 bytes @ 0x0
   566                           
   567  0020                     setPB0@bValue:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     setPB1@bValue:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0020                     setPB2@bValue:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0020                     setPA0@bValue:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0020                     setPA1@bValue:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0020                     setPA2@bValue:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0020                     setPA3@bValue:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0020                     setPB6@bValue:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0020                     setPB4@bValue:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0020                     setPA6@bValue:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0020                     vPause20sTimer@bValue:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0020                     setAD_ConvertFlag@flag:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0020                     adc_test_init@ref:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0020                     Filter@tmpValue:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0020                     startTwelveHourTimer@uiSetTime:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0020                     startThreeHoursTimer@uiSetTime:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0020                     startTwentyMinuteTimer@uiValue:	
   616                           ; 2 bytes @ 0x0
   617                           
   618                           
   619                           ; 2 bytes @ 0x0
   620  0020                     	ds	1
   621  0021                     ??_adc_test_init:	
   622  0021                     ??_vHandle20sTimerOut:	
   623                           ; 0 bytes @ 0x1
   624                           
   625  0021                     ??_clearParaFunction1:	
   626                           ; 0 bytes @ 0x1
   627                           
   628  0021                     vHandle20sTimerOut@bClearStep:	
   629                           ; 0 bytes @ 0x1
   630                           
   631                           
   632                           ; 1 bytes @ 0x1
   633  0021                     	ds	1
   634  0022                     ??_startTwentyMinuteTimer:	
   635  0022                     ??_startTwelveHourTimer:	
   636                           ; 0 bytes @ 0x2
   637                           
   638  0022                     ??_startThreeHoursTimer:	
   639                           ; 0 bytes @ 0x2
   640                           
   641  0022                     ??_Filter:	
   642                           ; 0 bytes @ 0x2
   643                           
   644  0022                     adc_test_init@channel:	
   645                           ; 0 bytes @ 0x2
   646                           
   647                           
   648                           ; 1 bytes @ 0x2
   649  0022                     	ds	1
   650  0023                     ??_process_AD_Converter_Value:	
   651  0023                     ??_AD_Sample:	
   652                           ; 0 bytes @ 0x3
   653                           
   654                           
   655                           ; 0 bytes @ 0x3
   656  0023                     	ds	3
   657  0026                     Filter@filter_buf:	
   658                           
   659                           ; 24 bytes @ 0x6
   660  0026                     	ds	24
   661  003E                     Filter@filter_temp:	
   662                           
   663                           ; 2 bytes @ 0x1E
   664  003E                     	ds	2
   665  0040                     Filter@filter_sum:	
   666                           
   667                           ; 2 bytes @ 0x20
   668  0040                     	ds	2
   669  0042                     Filter@cir:	
   670                           
   671                           ; 2 bytes @ 0x22
   672  0042                     	ds	2
   673  0044                     Filter@j:	
   674                           
   675                           ; 1 bytes @ 0x24
   676  0044                     	ds	1
   677  0045                     Filter@i:	
   678                           
   679                           ; 1 bytes @ 0x25
   680  0045                     	ds	1
   681  0046                     ?_getAdOriginalCh0Value:	
   682  0046                     ?_getAdOriginalCh6Value:	
   683                           ; 2 bytes @ 0x26
   684                           
   685  0046                     ?_getAdOriginalCh5Value:	
   686                           ; 2 bytes @ 0x26
   687                           
   688  0046                     ?_getAdOriginalCh2Value:	
   689                           ; 2 bytes @ 0x26
   690                           
   691                           
   692                           ; 2 bytes @ 0x26
   693  0046                     	ds	2
   694  0048                     ??_getAdOriginalCh0Value:	
   695  0048                     ??_getAdOriginalCh6Value:	
   696                           ; 0 bytes @ 0x28
   697                           
   698  0048                     ??_getAdOriginalCh5Value:	
   699                           ; 0 bytes @ 0x28
   700                           
   701  0048                     ??_vHandle20sTimeron:	
   702                           ; 0 bytes @ 0x28
   703                           
   704  0048                     ??_getAdOriginalCh2Value:	
   705                           ; 0 bytes @ 0x28
   706                           
   707  0048                     ??_main:	
   708                           ; 0 bytes @ 0x28
   709                           
   710  0048                     main@uiCh5Value:	
   711                           ; 0 bytes @ 0x28
   712                           
   713                           
   714                           ; 2 bytes @ 0x28
   715  0048                     	ds	2
   716                           
   717                           	psect	maintext
   718  0013                     __pmaintext:	
   719 ;;Data sizes: Strings 0, constant 0, data 0, bss 170, persistent 0 stack 0
   720 ;;Auto spaces:   Size  Autos    Used
   721 ;; COMMON          14     13      14
   722 ;; BANK0           80     42      79
   723 ;; BANK1           80      0      60
   724 ;; BANK3           96      0      72
   725 ;; BANK2           96      0       0
   726 ;;
   727 ;; Pointer list with targets:
   728 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   729 ;;
   730 ;; ?_getAdOriginalCh2Value	unsigned int  size(1) Largest target is 0
   731 ;;
   732 ;; ?_getAdOriginalCh6Value	unsigned int  size(1) Largest target is 0
   733 ;;
   734 ;; ?_getAdOriginalCh5Value	unsigned int  size(1) Largest target is 0
   735 ;;
   736 ;; ?_getAdOriginalCh0Value	unsigned int  size(1) Largest target is 0
   737 ;;
   738 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   739 ;;
   740 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   741 ;;		 -> uiSampleChannelSixth(BANK3[24]), uiSampleChannelFifth(BANK3[24]), uiSampleChannelSecond(BANK3[24]), uiSampleChan
      +nelZero(BANK1[24]), 
   742 ;;
   743 ;;
   744 ;; Critical Paths under _main in COMMON
   745 ;;
   746 ;;   None.
   747 ;;
   748 ;; Critical Paths under _ISR in COMMON
   749 ;;
   750 ;;   _ISR->_vPutSampleDataIntoTable
   751 ;;   _vPutSampleDataIntoTable->_adc_get
   752 ;;
   753 ;; Critical Paths under _main in BANK0
   754 ;;
   755 ;;   _main->_getAdOriginalCh0Value
   756 ;;   _main->_getAdOriginalCh6Value
   757 ;;   _main->_getAdOriginalCh5Value
   758 ;;   _vHandle20sTimeron->_getAdOriginalCh2Value
   759 ;;   _vHandle20sTimeron->_getAdOriginalCh6Value
   760 ;;   _clearParaFunction1->_setPA1
   761 ;;   _clearParaFunction1->_setPA0
   762 ;;   _clearParaFunction1->_setPB0
   763 ;;   _clearParaFunction1->_setPB1
   764 ;;   _clearParaFunction1->_setPB2
   765 ;;   _clearParaFunction1->_setPA3
   766 ;;   _clearParaFunction1->_setPB4
   767 ;;   _AD_Sample->_adc_test_init
   768 ;;   _getAdOriginalCh2Value->_Filter
   769 ;;   _vHandle20sTimerOut->_setPA3
   770 ;;   _vHandle20sTimerOut->_setPB4
   771 ;;   _vHandle20sTimerOut->_setPB6
   772 ;;   _getAdOriginalCh5Value->_Filter
   773 ;;   _getAdOriginalCh6Value->_Filter
   774 ;;   _getAdOriginalCh0Value->_Filter
   775 ;;
   776 ;; Critical Paths under _ISR in BANK0
   777 ;;
   778 ;;   None.
   779 ;;
   780 ;; Critical Paths under _main in BANK1
   781 ;;
   782 ;;   None.
   783 ;;
   784 ;; Critical Paths under _ISR in BANK1
   785 ;;
   786 ;;   None.
   787 ;;
   788 ;; Critical Paths under _main in BANK3
   789 ;;
   790 ;;   None.
   791 ;;
   792 ;; Critical Paths under _ISR in BANK3
   793 ;;
   794 ;;   None.
   795 ;;
   796 ;; Critical Paths under _main in BANK2
   797 ;;
   798 ;;   None.
   799 ;;
   800 ;; Critical Paths under _ISR in BANK2
   801 ;;
   802 ;;   None.
   803 ;;
   804 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   805 ;;
   806 ;;
   807 ;;Call Graph Tables:
   808 ;;
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (0) _main                                                 2     2      0    3895
   813 ;;                                             40 BANK0      2     2      0
   814 ;;                            _initPin
   815 ;;                       _clock_config
   816 ;;                      _timer1_config
   817 ;;            _timer1_interrupt_config
   818 ;;                      _adc_test_init
   819 ;;                          _adc_start
   820 ;;             _startTwentyMinuteTimer
   821 ;;         _process_AD_Converter_Value
   822 ;;                 _isPermitSampleTime
   823 ;;                       _clrSampeTime
   824 ;;              _getAdOriginalCh0Value
   825 ;;        _isFinishedTwentyMinuteTimer
   826 ;;                 _clearParaFunction1
   827 ;;                             _setPA3
   828 ;;                             _setPB4
   829 ;;              _getAdOriginalCh6Value
   830 ;;               _startTwelveHourTimer
   831 ;;         _isFinishedTwelveHoursTimer
   832 ;;              _getAdOriginalCh5Value
   833 ;;                             _setPA1
   834 ;;                             _setPA0
   835 ;;                             _setPB0
   836 ;;                             _setPB1
   837 ;;                             _setPB2
   838 ;;            _startTwentySecondsTimer
   839 ;;       _isFinishedTwentySecondsTimer
   840 ;;                  _vHandle20sTimeron
   841 ;;                 _vHandle20sTimerOut
   842 ;;                             _setPA6
   843 ;;               _clearPinPortAndTimer
   844 ;;               _startThreeHoursTimer
   845 ;;          _isFinishedThreeHoursTimer
   846 ;;               _clearThreeHoursTimer
   847 ;;                             _setPA2
   848 ;;                             _setPB6
   849 ;;                      _clearAllTimer
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (1) _vHandle20sTimeron                                    0     0      0    1306
   852 ;;              _getAdOriginalCh2Value
   853 ;;              _getAdOriginalCh6Value
   854 ;;                     _vPause20sTimer
   855 ;;                             _setPA3
   856 ;;                             _setPB6
   857 ;;                      _setPB6AsInput
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   860 ;;                  _getAD_ConvertFlag
   861 ;;                  _setAD_ConvertFlag
   862 ;;                          _AD_Sample
   863 ;;                          _adc_start
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (1) _clearParaFunction1                                   0     0      0     154
   866 ;;                             _setPA1
   867 ;;                             _setPA0
   868 ;;                             _setPB0
   869 ;;                             _setPB1
   870 ;;                             _setPB2
   871 ;;                      _clearAllTimer
   872 ;;                             _setPA3
   873 ;;                             _setPB4
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   876 ;;                      _clearAllTimer
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (2) _AD_Sample                                            0     0      0      44
   879 ;;                      _adc_test_init
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (2) _getAdOriginalCh2Value                                2     0      2     620
   882 ;;                                             38 BANK0      2     0      2
   883 ;;                             _Filter
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _vHandle20sTimerOut                                   1     1      0      89
   886 ;;                                              1 BANK0      1     1      0
   887 ;;                             _setPA3
   888 ;;                             _setPB4
   889 ;;                             _setPB6
   890 ;;                      _setPB6AsInput
   891 ;;            _clearTwentySecondsTimer
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (1) _getAdOriginalCh5Value                                2     0      2     620
   894 ;;                                             38 BANK0      2     0      2
   895 ;;                             _Filter
   896 ;; ---------------------------------------------------------------------------------
   897 ;; (2) _getAdOriginalCh6Value                                2     0      2     620
   898 ;;                                             38 BANK0      2     0      2
   899 ;;                             _Filter
   900 ;; ---------------------------------------------------------------------------------
   901 ;; (1) _getAdOriginalCh0Value                                2     0      2     620
   902 ;;                                             38 BANK0      2     0      2
   903 ;;                             _Filter
   904 ;; ---------------------------------------------------------------------------------
   905 ;; (1) _clearAllTimer                                        0     0      0       0
   906 ;;              _clearTwelveHoursTimer
   907 ;;               _clearThreeHoursTimer
   908 ;;            _clearTwentySecondsTimer
   909 ;;             _clearTwentyMinuteTimer
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   912 ;;                                              0 BANK0      1     1      0
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (3) _Filter                                              38    36      2     620
   917 ;;                                              0 BANK0     38    36      2
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (2) _vPause20sTimer                                       1     1      0      22
   920 ;;                                              0 BANK0      1     1      0
   921 ;; ---------------------------------------------------------------------------------
   922 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   923 ;; ---------------------------------------------------------------------------------
   924 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   925 ;;                                              0 BANK0      2     0      2
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   934 ;;                                              0 BANK0      2     0      2
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (1) _isFinishedTwentyMinuteTimer                          0     0      0       0
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (1) _clrSampeTime                                         0     0      0       0
   939 ;; ---------------------------------------------------------------------------------
   940 ;; (1) _isPermitSampleTime                                   0     0      0       0
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (1) _startTwentyMinuteTimer                               2     0      2      22
   943 ;;                                              0 BANK0      2     0      2
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) _adc_start                                            0     0      0       0
   946 ;; ---------------------------------------------------------------------------------
   947 ;; (3) _adc_test_init                                        3     2      1      44
   948 ;;                                              0 BANK0      3     2      1
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (1) _timer1_interrupt_config                              0     0      0       0
   951 ;; ---------------------------------------------------------------------------------
   952 ;; (1) _timer1_config                                        0     0      0       0
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (1) _clock_config                                         0     0      0       0
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (2) _setPB6AsInput                                        0     0      0       0
   957 ;; ---------------------------------------------------------------------------------
   958 ;; (1) _setPA6                                               1     1      0      22
   959 ;;                                              0 BANK0      1     1      0
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (2) _setPB4                                               1     1      0      22
   962 ;;                                              0 BANK0      1     1      0
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (1) _setPB6                                               1     1      0      22
   965 ;;                                              0 BANK0      1     1      0
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (2) _setPA3                                               1     1      0      22
   968 ;;                                              0 BANK0      1     1      0
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (1) _setPA2                                               1     1      0      22
   971 ;;                                              0 BANK0      1     1      0
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (1) _setPA1                                               1     1      0      22
   974 ;;                                              0 BANK0      1     1      0
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (1) _setPA0                                               1     1      0      22
   977 ;;                                              0 BANK0      1     1      0
   978 ;; ---------------------------------------------------------------------------------
   979 ;; (1) _setPB2                                               1     1      0      22
   980 ;;                                              0 BANK0      1     1      0
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (1) _setPB1                                               1     1      0      22
   983 ;;                                              0 BANK0      1     1      0
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (1) _setPB0                                               1     1      0      22
   986 ;;                                              0 BANK0      1     1      0
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (1) _initPin                                              0     0      0       0
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (2) _clearTwentyMinuteTimer                               0     0      0       0
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   993 ;; ---------------------------------------------------------------------------------
   994 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   997 ;; ---------------------------------------------------------------------------------
   998 ;; Estimated maximum stack depth 3
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (4) _ISR                                                  4     4      0     495
  1003 ;;                                              9 COMMON     4     4      0
  1004 ;;                i1_setAD_ConvertFlag
  1005 ;;                            _adc_get
  1006 ;;            _vPutSampleDataIntoTable
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
  1009 ;;                                              0 COMMON     1     1      0
  1010 ;; ---------------------------------------------------------------------------------
  1011 ;; (5) _adc_get                                              4     2      2      24
  1012 ;;                                              0 COMMON     4     2      2
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (5) _vPutSampleDataIntoTable                              5     2      3     398
  1015 ;;                                              4 COMMON     5     2      3
  1016 ;;                            _adc_get (ARG)
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; Estimated maximum stack depth 5
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; Call Graph Graphs:
  1021 ;; _main (ROOT)
  1022 ;;   _initPin
  1023 ;;   _clock_config
  1024 ;;   _timer1_config
  1025 ;;   _timer1_interrupt_config
  1026 ;;   _adc_test_init
  1027 ;;   _adc_start
  1028 ;;   _startTwentyMinuteTimer
  1029 ;;   _process_AD_Converter_Value
  1030 ;;     _getAD_ConvertFlag
  1031 ;;     _setAD_ConvertFlag
  1032 ;;     _AD_Sample
  1033 ;;       _adc_test_init
  1034 ;;     _adc_start
  1035 ;;   _isPermitSampleTime
  1036 ;;   _clrSampeTime
  1037 ;;   _getAdOriginalCh0Value
  1038 ;;     _Filter
  1039 ;;   _isFinishedTwentyMinuteTimer
  1040 ;;   _clearParaFunction1
  1041 ;;     _setPA1
  1042 ;;     _setPA0
  1043 ;;     _setPB0
  1044 ;;     _setPB1
  1045 ;;     _setPB2
  1046 ;;     _clearAllTimer
  1047 ;;       _clearTwelveHoursTimer
  1048 ;;       _clearThreeHoursTimer
  1049 ;;       _clearTwentySecondsTimer
  1050 ;;       _clearTwentyMinuteTimer
  1051 ;;     _setPA3
  1052 ;;     _setPB4
  1053 ;;   _setPA3
  1054 ;;   _setPB4
  1055 ;;   _getAdOriginalCh6Value
  1056 ;;     _Filter
  1057 ;;   _startTwelveHourTimer
  1058 ;;   _isFinishedTwelveHoursTimer
  1059 ;;   _getAdOriginalCh5Value
  1060 ;;     _Filter
  1061 ;;   _setPA1
  1062 ;;   _setPA0
  1063 ;;   _setPB0
  1064 ;;   _setPB1
  1065 ;;   _setPB2
  1066 ;;   _startTwentySecondsTimer
  1067 ;;   _isFinishedTwentySecondsTimer
  1068 ;;   _vHandle20sTimeron
  1069 ;;     _getAdOriginalCh2Value
  1070 ;;       _Filter
  1071 ;;     _getAdOriginalCh6Value
  1072 ;;       _Filter
  1073 ;;     _vPause20sTimer
  1074 ;;     _setPA3
  1075 ;;     _setPB6
  1076 ;;     _setPB6AsInput
  1077 ;;   _vHandle20sTimerOut
  1078 ;;     _setPA3
  1079 ;;     _setPB4
  1080 ;;     _setPB6
  1081 ;;     _setPB6AsInput
  1082 ;;     _clearTwentySecondsTimer
  1083 ;;   _setPA6
  1084 ;;   _clearPinPortAndTimer
  1085 ;;     _clearAllTimer
  1086 ;;       _clearTwelveHoursTimer
  1087 ;;       _clearThreeHoursTimer
  1088 ;;       _clearTwentySecondsTimer
  1089 ;;       _clearTwentyMinuteTimer
  1090 ;;   _startThreeHoursTimer
  1091 ;;   _isFinishedThreeHoursTimer
  1092 ;;   _clearThreeHoursTimer
  1093 ;;   _setPA2
  1094 ;;   _setPB6
  1095 ;;   _clearAllTimer
  1096 ;;     _clearTwelveHoursTimer
  1097 ;;     _clearThreeHoursTimer
  1098 ;;     _clearTwentySecondsTimer
  1099 ;;     _clearTwentyMinuteTimer
  1100 ;;
  1101 ;; _ISR (ROOT)
  1102 ;;   i1_setAD_ConvertFlag
  1103 ;;   _adc_get
  1104 ;;   _vPutSampleDataIntoTable
  1105 ;;     _adc_get (ARG)
  1106 ;;
  1107 ;; Address spaces:
  1108 ;;Name               Size   Autos  Total    Cost      Usage
  1109 ;;BITCOMMON            E      0       0       0        0.0%
  1110 ;;NULL                 0      0       0       0        0.0%
  1111 ;;CODE                 0      0       0       0        0.0%
  1112 ;;COMMON               E      D       E       1      100.0%
  1113 ;;BITSFR0              0      0       0       1        0.0%
  1114 ;;SFR0                 0      0       0       1        0.0%
  1115 ;;BITSFR1              0      0       0       2        0.0%
  1116 ;;SFR1                 0      0       0       2        0.0%
  1117 ;;STACK                0      0       7       2        0.0%
  1118 ;;ABS                  0      0      E1       3        0.0%
  1119 ;;BITBANK0            50      0       0       4        0.0%
  1120 ;;BITSFR3              0      0       0       4        0.0%
  1121 ;;SFR3                 0      0       0       4        0.0%
  1122 ;;BANK0               50     2A      4F       5       98.8%
  1123 ;;BITSFR2              0      0       0       5        0.0%
  1124 ;;SFR2                 0      0       0       5        0.0%
  1125 ;;DATA                 0      0      E8       6        0.0%
  1126 ;;BITBANK1            50      0       0       7        0.0%
  1127 ;;BANK1               50      0      3C       8       75.0%
  1128 ;;BITBANK3            60      0       0       9        0.0%
  1129 ;;BANK3               60      0      48      10       75.0%
  1130 ;;BITBANK2            60      0       0      11        0.0%
  1131 ;;BANK2               60      0       0      12        0.0%
  1132                           
  1133                           
  1134 ;; *************** function _main *****************
  1135 ;; Defined at:
  1136 ;;		line 672 in file "C:\temp\dev\AK7030-OTP\main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  uiCh5Value      2   40[BANK0 ] unsigned int 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;		None               void
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 17F/0
  1147 ;;		On exit  : 60/0
  1148 ;;		Unchanged: FFE00/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       2       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       2       0       0       0
  1154 ;;Total ram usage:        2 bytes
  1155 ;; Hardware stack levels required when called:    5
  1156 ;; This function calls:
  1157 ;;		_initPin
  1158 ;;		_clock_config
  1159 ;;		_timer1_config
  1160 ;;		_timer1_interrupt_config
  1161 ;;		_adc_test_init
  1162 ;;		_adc_start
  1163 ;;		_startTwentyMinuteTimer
  1164 ;;		_process_AD_Converter_Value
  1165 ;;		_isPermitSampleTime
  1166 ;;		_clrSampeTime
  1167 ;;		_getAdOriginalCh0Value
  1168 ;;		_isFinishedTwentyMinuteTimer
  1169 ;;		_clearParaFunction1
  1170 ;;		_setPA3
  1171 ;;		_setPB4
  1172 ;;		_getAdOriginalCh6Value
  1173 ;;		_startTwelveHourTimer
  1174 ;;		_isFinishedTwelveHoursTimer
  1175 ;;		_getAdOriginalCh5Value
  1176 ;;		_setPA1
  1177 ;;		_setPA0
  1178 ;;		_setPB0
  1179 ;;		_setPB1
  1180 ;;		_setPB2
  1181 ;;		_startTwentySecondsTimer
  1182 ;;		_isFinishedTwentySecondsTimer
  1183 ;;		_vHandle20sTimeron
  1184 ;;		_vHandle20sTimerOut
  1185 ;;		_setPA6
  1186 ;;		_clearPinPortAndTimer
  1187 ;;		_startThreeHoursTimer
  1188 ;;		_isFinishedThreeHoursTimer
  1189 ;;		_clearThreeHoursTimer
  1190 ;;		_setPA2
  1191 ;;		_setPB6
  1192 ;;		_clearAllTimer
  1193 ;; This function is called by:
  1194 ;;		Startup code after reset
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197  0013                     _main:	
  1198                           
  1199                           ;main.c: 682: static unsigned char bCheckTweHour = 0;
  1200                           ;main.c: 688: initPin();
  1201                           
  1202                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1203  0013  158A  278B  118A   	fcall	_initPin
  1204                           
  1205                           ;main.c: 691: TRISB3 = 1;
  1206  0016  1586               	bsf	6,3
  1207                           
  1208                           ;main.c: 693: TRISB5 = 1;
  1209  0017  1686               	bsf	6,5
  1210                           
  1211                           ;main.c: 695: TRISA7 = 1;
  1212  0018  1785               	bsf	5,7
  1213                           
  1214                           ;main.c: 697: TRISA6 = 1;
  1215  0019  1705               	bsf	5,6
  1216                           
  1217                           ;main.c: 699: clock_config();
  1218  001A  158A  26F4  118A   	fcall	_clock_config
  1219                           
  1220                           ;main.c: 700: timer1_config();
  1221  001D  158A  2704  118A   	fcall	_timer1_config
  1222                           
  1223                           ;main.c: 701: timer1_interrupt_config();
  1224  0020  158A  26E3  118A   	fcall	_timer1_interrupt_config
  1225                           
  1226                           ;main.c: 703: adc_test_init(0,3);
  1227  0023  3003               	movlw	3
  1228  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0025  00A0               	movwf	?_adc_test_init
  1230  0026  3000               	movlw	0
  1231  0027  158A  27EB  118A   	fcall	_adc_test_init
  1232                           
  1233                           ;main.c: 710: adc_start();
  1234  002A  158A  27C6  118A   	fcall	_adc_start
  1235                           
  1236                           ;main.c: 723: startTwentyMinuteTimer(1200);
  1237  002D  30B0               	movlw	176
  1238  002E  00A0               	movwf	?_startTwentyMinuteTimer
  1239  002F  3004               	movlw	4
  1240  0030  00A1               	movwf	?_startTwentyMinuteTimer+1
  1241  0031  158A  274F  118A   	fcall	_startTwentyMinuteTimer
  1242  0034                     l5017:	
  1243  0034  0064               	clrwdt	;#
  1244                           
  1245                           ;main.c: 730: process_AD_Converter_Value();
  1246  0035  158A  27B2  118A   	fcall	_process_AD_Converter_Value
  1247                           
  1248                           ;main.c: 732: if( isPermitSampleTime() )
  1249  0038  158A  26E6  118A   	fcall	_isPermitSampleTime
  1250  003B  3A00               	xorlw	0
  1251  003C  1903               	skipnz
  1252  003D  2834               	goto	l5017
  1253                           
  1254                           ;main.c: 733: {
  1255                           ;main.c: 736: clrSampeTime();
  1256  003E  118A  2002  118A   	fcall	_clrSampeTime
  1257                           
  1258                           ;main.c: 751: switch(enumMainLoopStep)
  1259  0041  2C32               	goto	l5601
  1260  0042                     l5023:	
  1261                           
  1262                           ;main.c: 754: {
  1263                           ;main.c: 759: static unsigned char ucTimerZeroPoint5s = 0;
  1264                           ;main.c: 761: if(getAdOriginalCh0Value() <= 1950)
  1265  0042  118A  2459  118A   	fcall	_getAdOriginalCh0Value
  1266  0045  3007               	movlw	7
  1267  0046  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1268  0047  309F               	movlw	159
  1269  0048  1903               	skipnz
  1270  0049  0246               	subwf	?_getAdOriginalCh0Value,w
  1271  004A  1803               	skipnc
  1272  004B  284E               	goto	l5027
  1273                           
  1274                           ;main.c: 762: {
  1275                           ;main.c: 763: ucTimerZeroPoint5s++;
  1276  004C  0AEA               	incf	main@ucTimerZeroPoint5s,f
  1277                           
  1278                           ;main.c: 764: }
  1279  004D  284F               	goto	l5029
  1280  004E                     l5027:	
  1281                           
  1282                           ;main.c: 765: else
  1283                           ;main.c: 766: ucTimerZeroPoint5s = 0;
  1284  004E  01EA               	clrf	main@ucTimerZeroPoint5s
  1285  004F                     l5029:	
  1286                           
  1287                           ;main.c: 768: if(ucTimerZeroPoint5s >= 5)
  1288  004F  3005               	movlw	5
  1289  0050  026A               	subwf	main@ucTimerZeroPoint5s,w
  1290  0051  1C03               	skipc
  1291  0052  2856               	goto	l5035
  1292                           
  1293                           ;main.c: 769: {
  1294                           ;main.c: 770: ucTimerZeroPoint5s = 0;
  1295  0053  01EA               	clrf	main@ucTimerZeroPoint5s
  1296                           
  1297                           ;main.c: 771: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1298  0054  01D0               	clrf	_enumMainLoopStep
  1299  0055  0AD0               	incf	_enumMainLoopStep,f
  1300  0056                     l5035:	
  1301                           
  1302                           ;main.c: 772: }
  1303                           ;main.c: 774: if(isFinishedTwentyMinuteTimer())
  1304  0056  158A  2719  118A   	fcall	_isFinishedTwentyMinuteTimer
  1305  0059  3A00               	xorlw	0
  1306  005A  1903               	skipnz
  1307  005B  2834               	goto	l5017
  1308  005C                     l5037:	
  1309                           
  1310                           ;main.c: 775: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1311  005C  3009               	movlw	9
  1312  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1313  005E  00D0               	movwf	_enumMainLoopStep
  1314  005F                     l774:	
  1315                           
  1316                           ;main.c: 776: break;
  1317  005F  2834               	goto	l5017
  1318  0060                     l5039:	
  1319                           
  1320                           ;main.c: 780: {
  1321                           ;main.c: 785: static unsigned char ucTimerZeroPoint3s = 0;
  1322                           ;main.c: 787: static unsigned char ucTimerCntP3s = 0;
  1323                           ;main.c: 790: if(getAdOriginalCh0Value() <= 1950)
  1324  0060  118A  2459  118A   	fcall	_getAdOriginalCh0Value
  1325  0063  3007               	movlw	7
  1326  0064  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1327  0065  309F               	movlw	159
  1328  0066  1903               	skipnz
  1329  0067  0246               	subwf	?_getAdOriginalCh0Value,w
  1330  0068  3003               	movlw	3
  1331  0069  1803               	skipnc
  1332  006A  2874               	goto	L13
  1333                           
  1334                           ;main.c: 791: {
  1335                           ;main.c: 792: ucTimerCntP3s++;
  1336  006B  0ADD               	incf	main@ucTimerCntP3s,f
  1337                           
  1338                           ;main.c: 793: if(ucTimerCntP3s >= 3)
  1339  006C  025D               	subwf	main@ucTimerCntP3s,w
  1340  006D  1C03               	skipc
  1341  006E  2834               	goto	l5017
  1342  006F  3002               	movlw	2
  1343                           
  1344                           ;main.c: 794: {
  1345                           ;main.c: 795: ucTimerCntP3s = 0;
  1346  0070  01DD               	clrf	main@ucTimerCntP3s
  1347                           
  1348                           ;main.c: 797: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1349  0071  00D0               	movwf	_enumMainLoopStep
  1350                           
  1351                           ;main.c: 799: ucTimerZeroPoint3s = 0;
  1352  0072  01E9               	clrf	main@ucTimerZeroPoint3s
  1353  0073  2834               	goto	l5017
  1354  0074                     L13:	
  1355                           
  1356                           ;main.c: 803: else
  1357                           ;main.c: 804: {
  1358                           ;main.c: 805: ucTimerZeroPoint3s++;
  1359  0074  0AE9               	incf	main@ucTimerZeroPoint3s,f
  1360                           
  1361                           ;main.c: 807: if(ucTimerZeroPoint3s >= 3)
  1362  0075  0269               	subwf	main@ucTimerZeroPoint3s,w
  1363  0076  1C03               	skipc
  1364  0077  2834               	goto	l5017
  1365                           
  1366                           ;main.c: 808: {
  1367                           ;main.c: 809: ucTimerZeroPoint3s = 0;
  1368  0078  01E9               	clrf	main@ucTimerZeroPoint3s
  1369                           
  1370                           ;main.c: 811: clearParaFunction1();
  1371  0079  118A  246F  118A   	fcall	_clearParaFunction1
  1372  007C  2834               	goto	l5017
  1373  007D                     l5059:	
  1374                           
  1375                           ;main.c: 819: {
  1376                           ;main.c: 824: static unsigned char ucTimerP5s = 0;
  1377                           ;main.c: 826: setPA3(1);
  1378  007D  3001               	movlw	1
  1379  007E  118A  2608  118A   	fcall	_setPA3
  1380                           
  1381                           ;main.c: 827: setPB4(1);
  1382  0081  3001               	movlw	1
  1383  0082  118A  2514  118A   	fcall	_setPB4
  1384                           
  1385                           ;main.c: 829: if(ucTimerP5s < 5)
  1386  0085  3005               	movlw	5
  1387  0086  0267               	subwf	main@ucTimerP5s,w
  1388  0087  1803               	skipnc
  1389  0088  288B               	goto	l5065
  1390                           
  1391                           ;main.c: 830: ucTimerP5s++;
  1392  0089  0AE7               	incf	main@ucTimerP5s,f
  1393  008A  2834               	goto	l5017
  1394  008B                     l5065:	
  1395  008B  30B0               	movlw	176
  1396                           
  1397                           ;main.c: 831: else
  1398                           ;main.c: 832: {
  1399                           ;main.c: 833: ucTimerP5s = 0;
  1400  008C  01E7               	clrf	main@ucTimerP5s
  1401                           
  1402                           ;main.c: 835: startTwentyMinuteTimer(1200);
  1403  008D  00A0               	movwf	?_startTwentyMinuteTimer
  1404  008E  3004               	movlw	4
  1405  008F  00A1               	movwf	?_startTwentyMinuteTimer+1
  1406  0090  158A  274F  118A   	fcall	_startTwentyMinuteTimer
  1407                           
  1408                           ;main.c: 837: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1409  0093  3003               	movlw	3
  1410  0094  2BA0               	goto	L1
  1411  0095                     l5071:	
  1412                           
  1413                           ;main.c: 844: {
  1414                           ;main.c: 849: static unsigned char ucTimerLessZeroP5s = 0;
  1415                           ;main.c: 851: static unsigned char ucTimerLargeZeroP5s = 0;
  1416                           ;main.c: 854: static unsigned char ucTimerRightP5s = 0;
  1417                           ;main.c: 856: if(getAdOriginalCh6Value() <= 85)
  1418  0095  118A  2611  118A   	fcall	_getAdOriginalCh6Value
  1419  0098  3000               	movlw	0
  1420  0099  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1421  009A  3056               	movlw	86
  1422  009B  1903               	skipnz
  1423  009C  0246               	subwf	?_getAdOriginalCh6Value,w
  1424  009D  1803               	skipnc
  1425  009E  28A2               	goto	l5077
  1426                           
  1427                           ;main.c: 857: {
  1428                           ;main.c: 858: ucTimerLargeZeroP5s = 0;
  1429  009F  01E5               	clrf	main@ucTimerLargeZeroP5s
  1430                           
  1431                           ;main.c: 860: ucTimerLessZeroP5s++;
  1432  00A0  0AE6               	incf	main@ucTimerLessZeroP5s,f
  1433                           
  1434                           ;main.c: 861: }
  1435  00A1  28A5               	goto	l5083
  1436  00A2                     l5077:	
  1437                           
  1438                           ;main.c: 862: else
  1439                           ;main.c: 863: {
  1440                           ;main.c: 864: ucTimerLargeZeroP5s++;
  1441  00A2  0AE5               	incf	main@ucTimerLargeZeroP5s,f
  1442                           
  1443                           ;main.c: 866: ucTimerLessZeroP5s = 0;
  1444  00A3  01E6               	clrf	main@ucTimerLessZeroP5s
  1445                           
  1446                           ;main.c: 868: ucTimerRightP5s = 0;
  1447  00A4  01E8               	clrf	main@ucTimerRightP5s
  1448  00A5                     l5083:	
  1449                           
  1450                           ;main.c: 869: }
  1451                           ;main.c: 871: if(ucTimerLargeZeroP5s >= 3)
  1452  00A5  3003               	movlw	3
  1453  00A6  0265               	subwf	main@ucTimerLargeZeroP5s,w
  1454  00A7  1C03               	skipc
  1455  00A8  28AC               	goto	l5089
  1456  00A9  3004               	movlw	4
  1457                           
  1458                           ;main.c: 872: {
  1459                           ;main.c: 873: ucTimerLargeZeroP5s = 0;
  1460  00AA  01E5               	clrf	main@ucTimerLargeZeroP5s
  1461                           
  1462                           ;main.c: 874: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1463  00AB  28C4               	goto	L2
  1464  00AC                     l5089:	
  1465                           ;main.c: 875: }
  1466                           
  1467                           
  1468                           ;main.c: 876: else if( ucTimerLessZeroP5s >= 3)
  1469  00AC  3003               	movlw	3
  1470  00AD  0266               	subwf	main@ucTimerLessZeroP5s,w
  1471  00AE  1C03               	skipc
  1472  00AF  28C5               	goto	l5103
  1473                           
  1474                           ;main.c: 877: {
  1475                           ;main.c: 879: if(getAdOriginalCh6Value() < 65)
  1476  00B0  118A  2611  118A   	fcall	_getAdOriginalCh6Value
  1477  00B3  3000               	movlw	0
  1478  00B4  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1479  00B5  3041               	movlw	65
  1480  00B6  1903               	skipnz
  1481  00B7  0246               	subwf	?_getAdOriginalCh6Value,w
  1482  00B8  1803               	skipnc
  1483  00B9  28BC               	goto	l5095
  1484                           
  1485                           ;main.c: 880: {
  1486                           ;main.c: 881: ucTimerRightP5s++;
  1487  00BA  0AE8               	incf	main@ucTimerRightP5s,f
  1488                           
  1489                           ;main.c: 882: }
  1490  00BB  28BD               	goto	l5097
  1491  00BC                     l5095:	
  1492                           
  1493                           ;main.c: 883: else
  1494                           ;main.c: 884: {
  1495                           ;main.c: 885: ucTimerRightP5s = 0;
  1496  00BC  01E8               	clrf	main@ucTimerRightP5s
  1497  00BD                     l5097:	
  1498                           
  1499                           ;main.c: 886: }
  1500                           ;main.c: 888: if(ucTimerRightP5s >= 3)
  1501  00BD  3003               	movlw	3
  1502  00BE  0268               	subwf	main@ucTimerRightP5s,w
  1503  00BF  1C03               	skipc
  1504  00C0  28C5               	goto	l5103
  1505  00C1  3008               	movlw	8
  1506                           
  1507                           ;main.c: 889: {
  1508                           ;main.c: 890: ucTimerLargeZeroP5s = 0;
  1509  00C2  01E5               	clrf	main@ucTimerLargeZeroP5s
  1510                           
  1511                           ;main.c: 891: ucTimerRightP5s = 0;
  1512  00C3  01E8               	clrf	main@ucTimerRightP5s
  1513  00C4                     L2:	
  1514                           ;main.c: 892: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1515                           
  1516  00C4  00D0               	movwf	_enumMainLoopStep
  1517  00C5                     l5103:	
  1518                           ;main.c: 899: else
  1519                           ;main.c: 900: {
  1520                           ;main.c: 901: ;
  1521                           
  1522                           ;main.c: 893: }
  1523                           
  1524                           
  1525                           ;main.c: 902: }
  1526                           ;main.c: 904: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1527  00C5  0850               	movf	_enumMainLoopStep,w
  1528  00C6  3A08               	xorlw	8
  1529  00C7  1903               	skipnz
  1530  00C8  28CD               	goto	l5107
  1531  00C9  0850               	movf	_enumMainLoopStep,w
  1532  00CA  3A04               	xorlw	4
  1533  00CB  1D03               	skipz
  1534  00CC  2834               	goto	l5017
  1535  00CD                     l5107:	
  1536                           
  1537                           ;main.c: 905: {
  1538                           ;main.c: 906: ucTimerRightP5s = 0;
  1539  00CD  01E8               	clrf	main@ucTimerRightP5s
  1540                           
  1541                           ;main.c: 907: ucTimerLargeZeroP5s = 0;
  1542  00CE  01E5               	clrf	main@ucTimerLargeZeroP5s
  1543                           
  1544                           ;main.c: 908: ucTimerLessZeroP5s = 0;
  1545  00CF  01E6               	clrf	main@ucTimerLessZeroP5s
  1546  00D0  2834               	goto	l5017
  1547  00D1                     l5109:	
  1548                           
  1549                           ;main.c: 916: {
  1550                           ;main.c: 922: startTwelveHourTimer(36000);
  1551  00D1  30A0               	movlw	160
  1552  00D2  00A0               	movwf	?_startTwelveHourTimer
  1553  00D3  308C               	movlw	140
  1554  00D4  00A1               	movwf	?_startTwelveHourTimer+1
  1555  00D5  158A  2763  118A   	fcall	_startTwelveHourTimer
  1556                           
  1557                           ;main.c: 923: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1558  00D8  3005               	movlw	5
  1559  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1560  00DA  00D0               	movwf	_enumMainLoopStep
  1561                           
  1562                           ;main.c: 925: bCheckTweHour = 0;
  1563  00DB  01D5               	clrf	main@bCheckTweHour
  1564                           
  1565                           ;main.c: 927: break;
  1566  00DC  2834               	goto	l5017
  1567  00DD                     l5115:	
  1568                           
  1569                           ;main.c: 931: {
  1570                           ;main.c: 935: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1571  00DD  158A  2725  118A   	fcall	_isFinishedTwelveHoursTimer
  1572  00E0  3A00               	xorlw	0
  1573  00E1  1903               	skipnz
  1574  00E2  2B2A               	goto	l5495
  1575  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1576  00E4  08D5               	movf	main@bCheckTweHour,f
  1577  00E5  1D03               	skipz
  1578  00E6  2B2A               	goto	l5495
  1579                           
  1580                           ;main.c: 936: {
  1581                           ;main.c: 937: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1582  00E7  3009               	movlw	9
  1583  00E8  00D0               	movwf	_enumMainLoopStep
  1584                           
  1585                           ;main.c: 938: bCheckTweHour = 1;
  1586  00E9  01D5               	clrf	main@bCheckTweHour
  1587  00EA  0AD5               	incf	main@bCheckTweHour,f
  1588                           
  1589                           ;main.c: 939: }
  1590  00EB  2834               	goto	l5017
  1591  00EC                     l815:	
  1592                           ;main.c: 944: {
  1593                           ;main.c: 945: case ADC4_STEP_INIT:
  1594                           
  1595                           
  1596                           ;main.c: 946: {
  1597                           ;main.c: 951: ucADC4_Step = ADC4_STEP_FIRST;
  1598  00EC  01D3               	clrf	_ucADC4_Step
  1599  00ED  0AD3               	incf	_ucADC4_Step,f
  1600                           
  1601                           ;main.c: 952: break;
  1602  00EE  2834               	goto	l5017
  1603  00EF                     l5123:	
  1604                           
  1605                           ;main.c: 966: uiCh5Value = getAdOriginalCh5Value();
  1606  00EF  118A  244F  118A   	fcall	_getAdOriginalCh5Value
  1607  00F2  0847               	movf	?_getAdOriginalCh5Value+1,w
  1608  00F3  00C9               	movwf	main@uiCh5Value+1
  1609  00F4  0846               	movf	?_getAdOriginalCh5Value,w
  1610  00F5  00C8               	movwf	main@uiCh5Value
  1611                           
  1612                           ;main.c: 968: if( 0 == bInitFlag)
  1613  00F6  08D6               	movf	main@bInitFlag,f
  1614  00F7  1D03               	skipz
  1615  00F8  28FF               	goto	l5133
  1616                           
  1617                           ;main.c: 969: {
  1618                           ;main.c: 970: bInitFlag = 1;
  1619  00F9  01D6               	clrf	main@bInitFlag
  1620  00FA  0AD6               	incf	main@bInitFlag,f
  1621                           
  1622                           ;main.c: 971: uiOldValue = uiCh5Value;
  1623  00FB  0849               	movf	main@uiCh5Value+1,w
  1624  00FC  00CB               	movwf	main@uiOldValue+1
  1625  00FD  0848               	movf	main@uiCh5Value,w
  1626  00FE  00CA               	movwf	main@uiOldValue
  1627  00FF                     l5133:	
  1628                           
  1629                           ;main.c: 972: }
  1630                           ;main.c: 981: if(LESS_THAN_1911 == ucChannel5Type)
  1631  00FF  08D4               	movf	_ucChannel5Type,f
  1632  0100  1D03               	skipz
  1633  0101  2907               	goto	l5139
  1634                           
  1635                           ;main.c: 982: {
  1636                           ;main.c: 983: uiMinValue = 0;
  1637  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1638  0103  308B               	movlw	139
  1639  0104  01AA               	clrf	main@uiMinValue^(0+128)
  1640  0105  01AB               	clrf	(main@uiMinValue+1)^(0+128)
  1641                           
  1642                           ;main.c: 984: uiMaxValue = 1931;
  1643  0106  290F               	goto	L9
  1644  0107                     l5139:	
  1645                           ;main.c: 985: }
  1646                           
  1647                           
  1648                           ;main.c: 986: else if(BETWEEN_1911_AND_2067 == ucChannel5Type)
  1649  0107  0B54               	decfsz	_ucChannel5Type,w
  1650  0108  2912               	goto	l5143
  1651                           
  1652                           ;main.c: 987: {
  1653                           ;main.c: 988: uiMinValue = 1931 - 40;
  1654  0109  3063               	movlw	99
  1655  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1656  010B  00AA               	movwf	main@uiMinValue^(0+128)
  1657  010C  3007               	movlw	7
  1658  010D  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1659                           
  1660                           ;main.c: 989: uiMaxValue = 2047;
  1661  010E  30FF               	movlw	255
  1662  010F                     L9:	
  1663  010F  00A8               	movwf	main@uiMaxValue^(0+128)
  1664  0110  3007               	movlw	7
  1665  0111  292B               	goto	L3
  1666  0112                     l5143:	
  1667                           ;main.c: 990: }
  1668                           
  1669                           
  1670                           ;main.c: 991: else if(BETWEEN_2067_AND_2204 == ucChannel5Type)
  1671  0112  0854               	movf	_ucChannel5Type,w
  1672  0113  3A02               	xorlw	2
  1673  0114  1D03               	skipz
  1674  0115  291D               	goto	l5147
  1675                           
  1676                           ;main.c: 992: {
  1677                           ;main.c: 993: uiMinValue = 2047 - 40;
  1678  0116  30D7               	movlw	215
  1679  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0118  00AA               	movwf	main@uiMinValue^(0+128)
  1681  0119  3007               	movlw	7
  1682  011A  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1683                           
  1684                           ;main.c: 994: uiMaxValue = 2164;
  1685  011B  3074               	movlw	116
  1686  011C  2929               	goto	L10
  1687  011D                     l5147:	
  1688                           ;main.c: 995: }
  1689                           
  1690                           
  1691                           ;main.c: 996: else if(BETWEEN_2204_AND_2340 == ucChannel5Type)
  1692  011D  0854               	movf	_ucChannel5Type,w
  1693  011E  3A03               	xorlw	3
  1694  011F  1D03               	skipz
  1695  0120  2923               	goto	l5151
  1696                           
  1697                           ;main.c: 997: {
  1698                           ;main.c: 998: uiMinValue = 2164 - 40;
  1699  0121  304C               	movlw	76
  1700  0122  2924               	goto	L11
  1701  0123                     l5151:	
  1702                           ;main.c: 1000: }
  1703                           
  1704                           ;main.c: 999: uiMaxValue = 2281;
  1705                           
  1706                           
  1707                           ;main.c: 1001: else
  1708                           ;main.c: 1002: {
  1709                           ;main.c: 1003: uiMinValue = 2281 - 40;
  1710  0123  30C1               	movlw	193
  1711  0124                     L11:	
  1712  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0125  00AA               	movwf	main@uiMinValue^(0+128)
  1714  0126  3008               	movlw	8
  1715  0127  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1716                           
  1717                           ;main.c: 1004: uiMaxValue = 2281;
  1718  0128  30E9               	movlw	233
  1719  0129                     L10:	
  1720  0129  00A8               	movwf	main@uiMaxValue^(0+128)
  1721  012A  3008               	movlw	8
  1722  012B                     L3:	
  1723  012B  00A9               	movwf	(main@uiMaxValue^(0+128)+1)
  1724                           
  1725                           ;main.c: 1005: }
  1726                           ;main.c: 1008: if(( uiCh5Value < uiMinValue )
  1727                           ;main.c: 1009: || ( uiCh5Value > uiMaxValue ))
  1728  012C  082B               	movf	(main@uiMinValue+1)^(0+128),w
  1729  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1730  012E  0249               	subwf	main@uiCh5Value+1,w
  1731  012F  1D03               	skipz
  1732  0130  2935               	goto	u2405
  1733  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1734  0132  082A               	movf	main@uiMinValue^(0+128),w
  1735  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0134  0248               	subwf	main@uiCh5Value,w
  1737  0135                     u2405:	
  1738  0135  1C03               	skipc
  1739  0136  2942               	goto	l5155
  1740  0137  0849               	movf	main@uiCh5Value+1,w
  1741  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0139  0229               	subwf	(main@uiMaxValue+1)^(0+128),w
  1743  013A  1D03               	skipz
  1744  013B  2940               	goto	u2415
  1745  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1746  013D  0848               	movf	main@uiCh5Value,w
  1747  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1748  013F  0228               	subwf	main@uiMaxValue^(0+128),w
  1749  0140                     u2415:	
  1750  0140  1803               	skipnc
  1751  0141  2947               	goto	l835
  1752  0142                     l5155:	
  1753                           
  1754                           ;main.c: 1010: {
  1755                           ;main.c: 1011: uiOldValue = uiCh5Value;
  1756  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0143  0849               	movf	main@uiCh5Value+1,w
  1758  0144  00CB               	movwf	main@uiOldValue+1
  1759  0145  0848               	movf	main@uiCh5Value,w
  1760  0146  00CA               	movwf	main@uiOldValue
  1761  0147                     l835:	
  1762                           
  1763                           ;main.c: 1012: }
  1764                           ;main.c: 1014: if( uiOldValue < 1931 )
  1765  0147  3007               	movlw	7
  1766  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0149  024B               	subwf	main@uiOldValue+1,w
  1768  014A  308B               	movlw	139
  1769  014B  1903               	skipnz
  1770  014C  024A               	subwf	main@uiOldValue,w
  1771  014D  1803               	skipnc
  1772  014E  2951               	goto	l5159
  1773                           
  1774                           ;main.c: 1015: ucChannel5Type = LESS_THAN_1911;
  1775  014F  01D4               	clrf	_ucChannel5Type
  1776  0150  296F               	goto	l839
  1777  0151                     l5159:	
  1778                           
  1779                           ;main.c: 1016: else if( uiOldValue < 2047 )
  1780  0151  3007               	movlw	7
  1781  0152  024B               	subwf	main@uiOldValue+1,w
  1782  0153  30FF               	movlw	255
  1783  0154  1903               	skipnz
  1784  0155  024A               	subwf	main@uiOldValue,w
  1785  0156  1803               	skipnc
  1786  0157  295B               	goto	l5163
  1787                           
  1788                           ;main.c: 1017: ucChannel5Type = BETWEEN_1911_AND_2067;
  1789  0158  01D4               	clrf	_ucChannel5Type
  1790  0159  0AD4               	incf	_ucChannel5Type,f
  1791  015A  296F               	goto	l839
  1792  015B                     l5163:	
  1793                           
  1794                           ;main.c: 1018: else if( uiOldValue < 2164 )
  1795  015B  3008               	movlw	8
  1796  015C  024B               	subwf	main@uiOldValue+1,w
  1797  015D  3074               	movlw	116
  1798  015E  1903               	skipnz
  1799  015F  024A               	subwf	main@uiOldValue,w
  1800  0160  1803               	skipnc
  1801  0161  2964               	goto	l5167
  1802                           
  1803                           ;main.c: 1019: ucChannel5Type = BETWEEN_2067_AND_2204;
  1804  0162  3002               	movlw	2
  1805  0163  296E               	goto	L4
  1806  0164                     l5167:	
  1807                           
  1808                           ;main.c: 1020: else if( uiOldValue < 2281 )
  1809  0164  3008               	movlw	8
  1810  0165  024B               	subwf	main@uiOldValue+1,w
  1811  0166  30E9               	movlw	233
  1812  0167  1903               	skipnz
  1813  0168  024A               	subwf	main@uiOldValue,w
  1814  0169  1803               	skipnc
  1815  016A  296D               	goto	l5171
  1816                           
  1817                           ;main.c: 1021: ucChannel5Type = BETWEEN_2204_AND_2340;
  1818  016B  3003               	movlw	3
  1819  016C  296E               	goto	L4
  1820  016D                     l5171:	
  1821                           
  1822                           ;main.c: 1022: else
  1823                           ;main.c: 1023: ucChannel5Type = MORE_THAN_2340;
  1824  016D  3004               	movlw	4
  1825  016E                     L4:	
  1826  016E  00D4               	movwf	_ucChannel5Type
  1827  016F                     l839:	
  1828                           
  1829                           ;main.c: 1025: ucADC4_Step = ADC4_STEP_SECOND;
  1830  016F  3002               	movlw	2
  1831  0170  2B1D               	goto	L6
  1832  0171                     l5173:	
  1833                           ;main.c: 1026: break;
  1834                           
  1835                           
  1836                           ;main.c: 1045: {
  1837                           ;main.c: 1046: setPA1(1);
  1838  0171  3001               	movlw	1
  1839  0172  118A  24A6  118A   	fcall	_setPA1
  1840  0175                     l5175:	
  1841                           
  1842                           ;main.c: 1047: ucLoaderStep++;
  1843  0175  0AD8               	incf	main@ucLoaderStep,f
  1844                           
  1845                           ;main.c: 1048: break;
  1846  0176  2834               	goto	l5017
  1847  0177                     l5177:	
  1848                           
  1849                           ;main.c: 1052: {
  1850                           ;main.c: 1053: if(ucTimerDelay >= 5)
  1851  0177  3005               	movlw	5
  1852  0178  025E               	subwf	main@ucTimerDelay,w
  1853  0179  1C03               	skipc
  1854  017A  2981               	goto	l5185
  1855                           
  1856                           ;main.c: 1054: {
  1857                           ;main.c: 1055: setPA0(1);
  1858  017B  3001               	movlw	1
  1859  017C  118A  249D  118A   	fcall	_setPA0
  1860  017F                     l5181:	
  1861                           
  1862                           ;main.c: 1056: ucTimerDelay = 0;
  1863  017F  01DE               	clrf	main@ucTimerDelay
  1864  0180  2975               	goto	l5175
  1865  0181                     l5185:	
  1866                           
  1867                           ;main.c: 1059: else
  1868                           ;main.c: 1060: ucTimerDelay++;
  1869  0181  0ADE               	incf	main@ucTimerDelay,f
  1870  0182  2834               	goto	l5017
  1871  0183                     l5187:	
  1872                           
  1873                           ;main.c: 1065: {
  1874                           ;main.c: 1066: if(ucTimerDelay >= 5)
  1875  0183  3005               	movlw	5
  1876  0184  025E               	subwf	main@ucTimerDelay,w
  1877  0185  1C03               	skipc
  1878  0186  2981               	goto	l5185
  1879                           
  1880                           ;main.c: 1067: {
  1881                           ;main.c: 1068: setPB0(1);
  1882  0187  3001               	movlw	1
  1883  0188  118A  2485  118A   	fcall	_setPB0
  1884  018B  297F               	goto	l5181
  1885  018C                     l5197:	
  1886                           
  1887                           ;main.c: 1079: {
  1888                           ;main.c: 1080: if(ucTimerDelay >= 5)
  1889  018C  3005               	movlw	5
  1890  018D  025E               	subwf	main@ucTimerDelay,w
  1891  018E  1C03               	skipc
  1892  018F  2981               	goto	l5185
  1893                           
  1894                           ;main.c: 1081: {
  1895                           ;main.c: 1082: setPB1(1);
  1896  0190  3001               	movlw	1
  1897  0191  118A  248D  118A   	fcall	_setPB1
  1898  0194  297F               	goto	l5181
  1899  0195                     l5207:	
  1900                           
  1901                           ;main.c: 1092: {
  1902                           ;main.c: 1093: if(ucTimerDelay >= 5)
  1903  0195  3005               	movlw	5
  1904  0196  025E               	subwf	main@ucTimerDelay,w
  1905  0197  1C03               	skipc
  1906  0198  2981               	goto	l5185
  1907                           
  1908                           ;main.c: 1094: {
  1909                           ;main.c: 1095: setPB2(1);
  1910  0199  3001               	movlw	1
  1911  019A  118A  2495  118A   	fcall	_setPB2
  1912  019D  297F               	goto	l5181
  1913  019E                     l5217:	
  1914                           
  1915                           ;main.c: 1105: {
  1916                           ;main.c: 1106: if(ucTimerDelay >= 5)
  1917  019E  3005               	movlw	5
  1918  019F  025E               	subwf	main@ucTimerDelay,w
  1919  01A0  1C03               	skipc
  1920  01A1  2981               	goto	l5185
  1921                           
  1922                           ;main.c: 1107: {
  1923                           ;main.c: 1108: setPA1(0);
  1924  01A2  3000               	movlw	0
  1925  01A3  118A  24A6  118A   	fcall	_setPA1
  1926                           
  1927                           ;main.c: 1109: setPA0(0);
  1928  01A6  3000               	movlw	0
  1929  01A7  118A  249D  118A   	fcall	_setPA0
  1930                           
  1931                           ;main.c: 1110: setPB0(0);
  1932  01AA  3000               	movlw	0
  1933  01AB  118A  2485  118A   	fcall	_setPB0
  1934                           
  1935                           ;main.c: 1111: setPB1(0);
  1936  01AE  3000               	movlw	0
  1937  01AF  118A  248D  118A   	fcall	_setPB1
  1938                           
  1939                           ;main.c: 1112: setPB2(0);
  1940  01B2  3000               	movlw	0
  1941  01B3  118A  2495  118A   	fcall	_setPB2
  1942  01B6  297F               	goto	l5181
  1943  01B7                     l5227:	
  1944                           
  1945                           ;main.c: 1122: {
  1946                           ;main.c: 1123: if(ucTimerDelay >= 1)
  1947  01B7  085E               	movf	main@ucTimerDelay,w
  1948  01B8  1903               	btfsc	3,2
  1949  01B9  2981               	goto	l5185
  1950                           
  1951                           ;main.c: 1124: {
  1952                           ;main.c: 1125: ucTimerDelay = 0;
  1953  01BA  01DE               	clrf	main@ucTimerDelay
  1954                           
  1955                           ;main.c: 1127: ucLoaderStep = 0;
  1956  01BB  01D8               	clrf	main@ucLoaderStep
  1957  01BC                     l5231:	
  1958                           
  1959                           ;main.c: 1128: ucADC4_Step = ADC4_STEP_THIRD;
  1960  01BC  3003               	movlw	3
  1961  01BD  2B1D               	goto	L6
  1962  01BE                     l5237:	
  1963                           ;main.c: 1129: }
  1964                           
  1965  01BE  0858               	movf	main@ucLoaderStep,w
  1966                           
  1967                           ; Switch size 1, requested type "space"
  1968                           ; Number of cases is 7, Range of values is 0 to 6
  1969                           ; switch strategies available:
  1970                           ; Name         Instructions Cycles
  1971                           ; direct_byte           21     7 (fixed)
  1972                           ; simple_byte           22    12 (average)
  1973                           ; jumptable            260     6 (fixed)
  1974                           ; rangetable            11     6 (fixed)
  1975                           ; spacedrange           20     9 (fixed)
  1976                           ; locatedrange           7     3 (fixed)
  1977                           ;	Chosen strategy is direct_byte
  1978  01BF  0084               	movwf	4
  1979  01C0  3007               	movlw	7
  1980  01C1  0204               	subwf	4,w
  1981  01C2  1803               	skipnc
  1982  01C3  2834               	goto	l5017
  1983  01C4  3008               	movlw	high S5819
  1984  01C5  008A               	movwf	10
  1985  01C6  1003               	clrc
  1986  01C7  0D04               	rlf	4,w
  1987  01C8  3E00               	addlw	low S5819
  1988  01C9  0082               	movwf	2
  1989  01CA                     l5239:	
  1990                           
  1991                           ;main.c: 1150: {
  1992                           ;main.c: 1151: setPA1(1);
  1993  01CA  3001               	movlw	1
  1994  01CB  118A  24A6  118A   	fcall	_setPA1
  1995  01CE                     l5241:	
  1996                           
  1997                           ;main.c: 1152: ucLoaderStep1++;
  1998  01CE  0AD9               	incf	main@ucLoaderStep1,f
  1999                           
  2000                           ;main.c: 1153: break;
  2001  01CF  2834               	goto	l5017
  2002  01D0                     l5243:	
  2003                           
  2004                           ;main.c: 1157: {
  2005                           ;main.c: 1158: if(ucTimerDelay1 >= 5)
  2006  01D0  3005               	movlw	5
  2007  01D1  025F               	subwf	main@ucTimerDelay1,w
  2008  01D2  1C03               	skipc
  2009  01D3  29DA               	goto	l5251
  2010                           
  2011                           ;main.c: 1159: {
  2012                           ;main.c: 1160: setPA0(1);
  2013  01D4  3001               	movlw	1
  2014  01D5  118A  249D  118A   	fcall	_setPA0
  2015  01D8                     l5247:	
  2016                           
  2017                           ;main.c: 1161: ucTimerDelay1 = 0;
  2018  01D8  01DF               	clrf	main@ucTimerDelay1
  2019  01D9  29CE               	goto	l5241
  2020  01DA                     l5251:	
  2021                           
  2022                           ;main.c: 1164: else
  2023                           ;main.c: 1165: ucTimerDelay1++;
  2024  01DA  0ADF               	incf	main@ucTimerDelay1,f
  2025  01DB  2834               	goto	l5017
  2026  01DC                     l5253:	
  2027                           
  2028                           ;main.c: 1170: {
  2029                           ;main.c: 1171: if(ucTimerDelay1 >= 5)
  2030  01DC  3005               	movlw	5
  2031  01DD  025F               	subwf	main@ucTimerDelay1,w
  2032  01DE  1C03               	skipc
  2033  01DF  29DA               	goto	l5251
  2034                           
  2035                           ;main.c: 1172: {
  2036                           ;main.c: 1173: setPB0(1);
  2037  01E0  3001               	movlw	1
  2038  01E1  118A  2485  118A   	fcall	_setPB0
  2039  01E4  29D8               	goto	l5247
  2040  01E5                     l5263:	
  2041                           
  2042                           ;main.c: 1183: {
  2043                           ;main.c: 1184: if(ucTimerDelay1 >= 5)
  2044  01E5  3005               	movlw	5
  2045  01E6  025F               	subwf	main@ucTimerDelay1,w
  2046  01E7  1C03               	skipc
  2047  01E8  29DA               	goto	l5251
  2048                           
  2049                           ;main.c: 1185: {
  2050                           ;main.c: 1187: setPB1(1);
  2051  01E9  3001               	movlw	1
  2052  01EA  118A  248D  118A   	fcall	_setPB1
  2053  01ED  29D8               	goto	l5247
  2054  01EE                     l5273:	
  2055                           
  2056                           ;main.c: 1197: {
  2057                           ;main.c: 1198: if(ucTimerDelay1 >= 5)
  2058  01EE  3005               	movlw	5
  2059  01EF  025F               	subwf	main@ucTimerDelay1,w
  2060  01F0  1C03               	skipc
  2061  01F1  29DA               	goto	l5251
  2062                           
  2063                           ;main.c: 1199: {
  2064                           ;main.c: 1201: setPB2(1);
  2065  01F2  3001               	movlw	1
  2066  01F3  118A  2495  118A   	fcall	_setPB2
  2067  01F6  29D8               	goto	l5247
  2068  01F7                     l5283:	
  2069                           
  2070                           ;main.c: 1211: {
  2071                           ;main.c: 1212: if(ucTimerDelay1 >= 5)
  2072  01F7  3005               	movlw	5
  2073  01F8  025F               	subwf	main@ucTimerDelay1,w
  2074  01F9  1C03               	skipc
  2075  01FA  29DA               	goto	l5251
  2076                           
  2077                           ;main.c: 1213: {
  2078                           ;main.c: 1214: setPA0(0);
  2079  01FB  3000               	movlw	0
  2080  01FC  118A  249D  118A   	fcall	_setPA0
  2081                           
  2082                           ;main.c: 1216: setPB0(0);
  2083  01FF  3000               	movlw	0
  2084  0200  118A  2485  118A   	fcall	_setPB0
  2085                           
  2086                           ;main.c: 1218: setPB1(0);
  2087  0203  3000               	movlw	0
  2088  0204  118A  248D  118A   	fcall	_setPB1
  2089                           
  2090                           ;main.c: 1220: setPB2(0);
  2091  0207  3000               	movlw	0
  2092  0208  118A  2495  118A   	fcall	_setPB2
  2093  020B  29D8               	goto	l5247
  2094  020C                     l5293:	
  2095                           
  2096                           ;main.c: 1230: {
  2097                           ;main.c: 1231: if(ucTimerDelay1 >= 1)
  2098  020C  085F               	movf	main@ucTimerDelay1,w
  2099  020D  1903               	btfsc	3,2
  2100  020E  29DA               	goto	l5251
  2101                           
  2102                           ;main.c: 1232: {
  2103                           ;main.c: 1233: ucTimerDelay1 = 0;
  2104  020F  01DF               	clrf	main@ucTimerDelay1
  2105                           
  2106                           ;main.c: 1235: ucLoaderStep1 = 0;
  2107  0210  01D9               	clrf	main@ucLoaderStep1
  2108  0211  29BC               	goto	l5231
  2109  0212                     l5303:	
  2110  0212  0859               	movf	main@ucLoaderStep1,w
  2111                           
  2112                           ; Switch size 1, requested type "space"
  2113                           ; Number of cases is 7, Range of values is 0 to 6
  2114                           ; switch strategies available:
  2115                           ; Name         Instructions Cycles
  2116                           ; direct_byte           21     7 (fixed)
  2117                           ; simple_byte           22    12 (average)
  2118                           ; jumptable            260     6 (fixed)
  2119                           ; rangetable            11     6 (fixed)
  2120                           ; spacedrange           20     9 (fixed)
  2121                           ; locatedrange           7     3 (fixed)
  2122                           ;	Chosen strategy is direct_byte
  2123  0213  0084               	movwf	4
  2124  0214  3007               	movlw	7
  2125  0215  0204               	subwf	4,w
  2126  0216  1803               	skipnc
  2127  0217  2834               	goto	l5017
  2128  0218  3008               	movlw	high S5821
  2129  0219  008A               	movwf	10
  2130  021A  1003               	clrc
  2131  021B  0D04               	rlf	4,w
  2132  021C  3E0E               	addlw	low S5821
  2133  021D  0082               	movwf	2
  2134  021E                     l5305:	
  2135                           
  2136                           ;main.c: 1259: {
  2137                           ;main.c: 1261: setPA1(1);
  2138  021E  3001               	movlw	1
  2139  021F  118A  24A6  118A   	fcall	_setPA1
  2140                           
  2141                           ;main.c: 1263: setPA0(1);
  2142  0222  3001               	movlw	1
  2143  0223  118A  249D  118A   	fcall	_setPA0
  2144  0226                     l5307:	
  2145                           
  2146                           ;main.c: 1264: ucLoaderStep2++;
  2147  0226  0ADA               	incf	main@ucLoaderStep2,f
  2148                           
  2149                           ;main.c: 1265: break;
  2150  0227  2834               	goto	l5017
  2151  0228                     l5309:	
  2152                           
  2153                           ;main.c: 1269: {
  2154                           ;main.c: 1270: if(ucTimerDelay2 >= 5)
  2155  0228  3005               	movlw	5
  2156  0229  0260               	subwf	main@ucTimerDelay2,w
  2157  022A  1C03               	skipc
  2158  022B  2A32               	goto	l5317
  2159                           
  2160                           ;main.c: 1271: {
  2161                           ;main.c: 1273: setPB0(1);
  2162  022C  3001               	movlw	1
  2163  022D  118A  2485  118A   	fcall	_setPB0
  2164  0230                     l5313:	
  2165                           
  2166                           ;main.c: 1274: ucTimerDelay2 = 0;
  2167  0230  01E0               	clrf	main@ucTimerDelay2
  2168  0231  2A26               	goto	l5307
  2169  0232                     l5317:	
  2170                           
  2171                           ;main.c: 1277: else
  2172                           ;main.c: 1278: ucTimerDelay2++;
  2173  0232  0AE0               	incf	main@ucTimerDelay2,f
  2174  0233  2834               	goto	l5017
  2175  0234                     l5319:	
  2176                           
  2177                           ;main.c: 1283: {
  2178                           ;main.c: 1284: if(ucTimerDelay2 >= 5)
  2179  0234  3005               	movlw	5
  2180  0235  0260               	subwf	main@ucTimerDelay2,w
  2181  0236  1C03               	skipc
  2182  0237  2A32               	goto	l5317
  2183                           
  2184                           ;main.c: 1285: {
  2185                           ;main.c: 1287: setPB1(1);
  2186  0238  3001               	movlw	1
  2187  0239  118A  248D  118A   	fcall	_setPB1
  2188  023C  2A30               	goto	l5313
  2189  023D                     l5329:	
  2190                           
  2191                           ;main.c: 1297: {
  2192                           ;main.c: 1298: if(ucTimerDelay2 >= 5)
  2193  023D  3005               	movlw	5
  2194  023E  0260               	subwf	main@ucTimerDelay2,w
  2195  023F  1C03               	skipc
  2196  0240  2A32               	goto	l5317
  2197                           
  2198                           ;main.c: 1299: {
  2199                           ;main.c: 1301: setPB2(1);
  2200  0241  3001               	movlw	1
  2201  0242  118A  2495  118A   	fcall	_setPB2
  2202  0245  2A30               	goto	l5313
  2203  0246                     l5339:	
  2204                           
  2205                           ;main.c: 1311: {
  2206                           ;main.c: 1312: if(ucTimerDelay2 >= 5)
  2207  0246  3005               	movlw	5
  2208  0247  0260               	subwf	main@ucTimerDelay2,w
  2209  0248  1C03               	skipc
  2210  0249  2A32               	goto	l5317
  2211                           
  2212                           ;main.c: 1313: {
  2213                           ;main.c: 1316: setPB0(0);
  2214  024A  3000               	movlw	0
  2215  024B  118A  2485  118A   	fcall	_setPB0
  2216                           
  2217                           ;main.c: 1318: setPB1(0);
  2218  024E  3000               	movlw	0
  2219  024F  118A  248D  118A   	fcall	_setPB1
  2220                           
  2221                           ;main.c: 1320: setPB2(0);
  2222  0252  3000               	movlw	0
  2223  0253  118A  2495  118A   	fcall	_setPB2
  2224  0256  2A30               	goto	l5313
  2225  0257                     l5349:	
  2226                           
  2227                           ;main.c: 1330: {
  2228                           ;main.c: 1331: if(ucTimerDelay2 >= 1)
  2229  0257  0860               	movf	main@ucTimerDelay2,w
  2230  0258  1903               	btfsc	3,2
  2231  0259  2A32               	goto	l5317
  2232                           
  2233                           ;main.c: 1332: {
  2234                           ;main.c: 1333: ucTimerDelay2 = 0;
  2235  025A  01E0               	clrf	main@ucTimerDelay2
  2236                           
  2237                           ;main.c: 1335: ucLoaderStep2 = 0;
  2238  025B  01DA               	clrf	main@ucLoaderStep2
  2239  025C  29BC               	goto	l5231
  2240  025D                     l5359:	
  2241  025D  085A               	movf	main@ucLoaderStep2,w
  2242                           
  2243                           ; Switch size 1, requested type "space"
  2244                           ; Number of cases is 6, Range of values is 0 to 5
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; direct_byte           19     7 (fixed)
  2248                           ; simple_byte           19    10 (average)
  2249                           ; jumptable            260     6 (fixed)
  2250                           ; rangetable            10     6 (fixed)
  2251                           ; spacedrange           18     9 (fixed)
  2252                           ; locatedrange           6     3 (fixed)
  2253                           ;	Chosen strategy is direct_byte
  2254  025E  0084               	movwf	4
  2255  025F  3006               	movlw	6
  2256  0260  0204               	subwf	4,w
  2257  0261  1803               	skipnc
  2258  0262  2834               	goto	l5017
  2259  0263  3008               	movlw	high S5823
  2260  0264  008A               	movwf	10
  2261  0265  1003               	clrc
  2262  0266  0D04               	rlf	4,w
  2263  0267  3E1C               	addlw	low S5823
  2264  0268  0082               	movwf	2
  2265  0269                     l5361:	
  2266                           
  2267                           ;main.c: 1359: {
  2268                           ;main.c: 1361: setPB0(1);
  2269  0269  3001               	movlw	1
  2270  026A  118A  2485  118A   	fcall	_setPB0
  2271                           
  2272                           ;main.c: 1363: setPA0(1);
  2273  026D  3001               	movlw	1
  2274  026E  118A  249D  118A   	fcall	_setPA0
  2275                           
  2276                           ;main.c: 1365: setPA1(1);
  2277  0271  3001               	movlw	1
  2278  0272  118A  24A6  118A   	fcall	_setPA1
  2279  0275                     l5363:	
  2280                           
  2281                           ;main.c: 1366: ucLoaderStep3++;
  2282  0275  0ADB               	incf	main@ucLoaderStep3,f
  2283                           
  2284                           ;main.c: 1367: break;
  2285  0276  2834               	goto	l5017
  2286  0277                     l5365:	
  2287                           
  2288                           ;main.c: 1371: {
  2289                           ;main.c: 1372: if(ucTimerDelay3 >= 5)
  2290  0277  3005               	movlw	5
  2291  0278  0261               	subwf	main@ucTimerDelay3,w
  2292  0279  1C03               	skipc
  2293  027A  2A81               	goto	l5373
  2294                           
  2295                           ;main.c: 1373: {
  2296                           ;main.c: 1375: setPB1(1);
  2297  027B  3001               	movlw	1
  2298  027C  118A  248D  118A   	fcall	_setPB1
  2299  027F                     l5369:	
  2300                           
  2301                           ;main.c: 1376: ucTimerDelay3 = 0;
  2302  027F  01E1               	clrf	main@ucTimerDelay3
  2303  0280  2A75               	goto	l5363
  2304  0281                     l5373:	
  2305                           
  2306                           ;main.c: 1379: else
  2307                           ;main.c: 1380: ucTimerDelay3++;
  2308  0281  0AE1               	incf	main@ucTimerDelay3,f
  2309  0282  2834               	goto	l5017
  2310  0283                     l5375:	
  2311                           
  2312                           ;main.c: 1385: {
  2313                           ;main.c: 1386: if(ucTimerDelay3 >= 5)
  2314  0283  3005               	movlw	5
  2315  0284  0261               	subwf	main@ucTimerDelay3,w
  2316  0285  1C03               	skipc
  2317  0286  2A81               	goto	l5373
  2318                           
  2319                           ;main.c: 1387: {
  2320                           ;main.c: 1389: setPB2(1);
  2321  0287  3001               	movlw	1
  2322  0288  118A  2495  118A   	fcall	_setPB2
  2323  028B  2A7F               	goto	l5369
  2324  028C                     l5385:	
  2325                           
  2326                           ;main.c: 1400: {
  2327                           ;main.c: 1401: if(ucTimerDelay3 >= 5)
  2328  028C  3005               	movlw	5
  2329  028D  0261               	subwf	main@ucTimerDelay3,w
  2330  028E  1C03               	skipc
  2331  028F  2A81               	goto	l5373
  2332                           
  2333                           ;main.c: 1402: {
  2334                           ;main.c: 1405: setPB1(0);
  2335  0290  3000               	movlw	0
  2336  0291  118A  248D  118A   	fcall	_setPB1
  2337                           
  2338                           ;main.c: 1407: setPB2(0);
  2339  0294  3000               	movlw	0
  2340  0295  118A  2495  118A   	fcall	_setPB2
  2341  0298  2A7F               	goto	l5369
  2342  0299                     l5395:	
  2343                           
  2344                           ;main.c: 1417: {
  2345                           ;main.c: 1418: if(ucTimerDelay3 >= 1)
  2346  0299  0861               	movf	main@ucTimerDelay3,w
  2347  029A  1903               	btfsc	3,2
  2348  029B  2A81               	goto	l5373
  2349                           
  2350                           ;main.c: 1419: {
  2351                           ;main.c: 1420: ucTimerDelay3 = 0;
  2352  029C  01E1               	clrf	main@ucTimerDelay3
  2353                           
  2354                           ;main.c: 1422: ucLoaderStep3 = 0;
  2355  029D  01DB               	clrf	main@ucLoaderStep3
  2356  029E  29BC               	goto	l5231
  2357  029F                     l5405:	
  2358  029F  085B               	movf	main@ucLoaderStep3,w
  2359                           
  2360                           ; Switch size 1, requested type "space"
  2361                           ; Number of cases is 5, Range of values is 0 to 4
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte           16     9 (average)
  2365                           ; direct_byte           17     7 (fixed)
  2366                           ; jumptable            260     6 (fixed)
  2367                           ; rangetable             9     6 (fixed)
  2368                           ; spacedrange           16     9 (fixed)
  2369                           ; locatedrange           5     3 (fixed)
  2370                           ;	Chosen strategy is simple_byte
  2371  02A0  3A00               	xorlw	0	; case 0
  2372  02A1  1903               	skipnz
  2373  02A2  2A69               	goto	l5361
  2374  02A3  3A01               	xorlw	1	; case 1
  2375  02A4  1903               	skipnz
  2376  02A5  2A77               	goto	l5365
  2377  02A6  3A03               	xorlw	3	; case 2
  2378  02A7  1903               	skipnz
  2379  02A8  2A83               	goto	l5375
  2380  02A9  3A01               	xorlw	1	; case 3
  2381  02AA  1903               	skipnz
  2382  02AB  2A8C               	goto	l5385
  2383  02AC  3A07               	xorlw	7	; case 4
  2384  02AD  1903               	skipnz
  2385  02AE  2A99               	goto	l5395
  2386  02AF  285F               	goto	l774
  2387  02B0                     l5407:	
  2388                           
  2389                           ;main.c: 1446: {
  2390                           ;main.c: 1448: setPB0(1);
  2391  02B0  3001               	movlw	1
  2392  02B1  118A  2485  118A   	fcall	_setPB0
  2393                           
  2394                           ;main.c: 1450: setPA0(1);
  2395  02B4  3001               	movlw	1
  2396  02B5  118A  249D  118A   	fcall	_setPA0
  2397                           
  2398                           ;main.c: 1452: setPA1(1);
  2399  02B8  3001               	movlw	1
  2400  02B9  118A  24A6  118A   	fcall	_setPA1
  2401                           
  2402                           ;main.c: 1454: setPB1(1);
  2403  02BC  3001               	movlw	1
  2404  02BD  118A  248D  118A   	fcall	_setPB1
  2405  02C0                     l5409:	
  2406                           
  2407                           ;main.c: 1455: ucLoaderStep4++;
  2408  02C0  0ADC               	incf	main@ucLoaderStep4,f
  2409                           
  2410                           ;main.c: 1456: break;
  2411  02C1  2834               	goto	l5017
  2412  02C2                     l5411:	
  2413                           
  2414                           ;main.c: 1460: {
  2415                           ;main.c: 1461: if(ucTimerDelay4 >= 5)
  2416  02C2  3005               	movlw	5
  2417  02C3  0262               	subwf	main@ucTimerDelay4,w
  2418  02C4  1C03               	skipc
  2419  02C5  2ACC               	goto	l5419
  2420                           
  2421                           ;main.c: 1462: {
  2422                           ;main.c: 1464: setPB2(1);
  2423  02C6  3001               	movlw	1
  2424  02C7                     L7:	
  2425  02C7  118A  2495  118A   	fcall	_setPB2
  2426                           
  2427                           ;main.c: 1465: ucTimerDelay4 = 0;
  2428  02CA  01E2               	clrf	main@ucTimerDelay4
  2429  02CB  2AC0               	goto	l5409
  2430  02CC                     l5419:	
  2431                           
  2432                           ;main.c: 1468: else
  2433                           ;main.c: 1469: ucTimerDelay4++;
  2434  02CC  0AE2               	incf	main@ucTimerDelay4,f
  2435  02CD  2834               	goto	l5017
  2436  02CE                     l5421:	
  2437                           
  2438                           ;main.c: 1474: {
  2439                           ;main.c: 1475: if(ucTimerDelay4 >= 5)
  2440  02CE  3005               	movlw	5
  2441  02CF  0262               	subwf	main@ucTimerDelay4,w
  2442  02D0  1C03               	skipc
  2443  02D1  2ACC               	goto	l5419
  2444                           
  2445                           ;main.c: 1476: {
  2446                           ;main.c: 1478: setPB2(0);
  2447  02D2  3000               	movlw	0
  2448  02D3  2AC7               	goto	L7
  2449  02D4                     l5431:	
  2450                           
  2451                           ;main.c: 1488: {
  2452                           ;main.c: 1489: if(ucTimerDelay4 >= 1)
  2453  02D4  0862               	movf	main@ucTimerDelay4,w
  2454  02D5  1903               	btfsc	3,2
  2455  02D6  2ACC               	goto	l5419
  2456                           
  2457                           ;main.c: 1490: {
  2458                           ;main.c: 1491: ucTimerDelay4 = 0;
  2459  02D7  01E2               	clrf	main@ucTimerDelay4
  2460                           
  2461                           ;main.c: 1493: ucLoaderStep4 = 0;
  2462  02D8  01DC               	clrf	main@ucLoaderStep4
  2463  02D9  29BC               	goto	l5231
  2464  02DA                     l5441:	
  2465  02DA  085C               	movf	main@ucLoaderStep4,w
  2466                           
  2467                           ; Switch size 1, requested type "space"
  2468                           ; Number of cases is 4, Range of values is 0 to 3
  2469                           ; switch strategies available:
  2470                           ; Name         Instructions Cycles
  2471                           ; simple_byte           13     7 (average)
  2472                           ; direct_byte           15     7 (fixed)
  2473                           ; jumptable            260     6 (fixed)
  2474                           ; rangetable             8     6 (fixed)
  2475                           ; spacedrange           14     9 (fixed)
  2476                           ; locatedrange           4     3 (fixed)
  2477                           ;	Chosen strategy is simple_byte
  2478  02DB  3A00               	xorlw	0	; case 0
  2479  02DC  1903               	skipnz
  2480  02DD  2AB0               	goto	l5407
  2481  02DE  3A01               	xorlw	1	; case 1
  2482  02DF  1903               	skipnz
  2483  02E0  2AC2               	goto	l5411
  2484  02E1  3A03               	xorlw	3	; case 2
  2485  02E2  1903               	skipnz
  2486  02E3  2ACE               	goto	l5421
  2487  02E4  3A01               	xorlw	1	; case 3
  2488  02E5  1903               	skipnz
  2489  02E6  2AD4               	goto	l5431
  2490  02E7  285F               	goto	l774
  2491  02E8                     l5445:	
  2492  02E8  0854               	movf	_ucChannel5Type,w
  2493                           
  2494                           ; Switch size 1, requested type "space"
  2495                           ; Number of cases is 5, Range of values is 0 to 4
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte           16     9 (average)
  2499                           ; direct_byte           17     7 (fixed)
  2500                           ; jumptable            260     6 (fixed)
  2501                           ; rangetable             9     6 (fixed)
  2502                           ; spacedrange           16     9 (fixed)
  2503                           ; locatedrange           5     3 (fixed)
  2504                           ;	Chosen strategy is simple_byte
  2505  02E9  3A00               	xorlw	0	; case 0
  2506  02EA  1903               	skipnz
  2507  02EB  29BE               	goto	l5237
  2508  02EC  3A01               	xorlw	1	; case 1
  2509  02ED  1903               	skipnz
  2510  02EE  2A12               	goto	l5303
  2511  02EF  3A03               	xorlw	3	; case 2
  2512  02F0  1903               	skipnz
  2513  02F1  2A5D               	goto	l5359
  2514  02F2  3A01               	xorlw	1	; case 3
  2515  02F3  1903               	skipnz
  2516  02F4  2A9F               	goto	l5405
  2517  02F5  3A07               	xorlw	7	; case 4
  2518  02F6  1903               	skipnz
  2519  02F7  2ADA               	goto	l5441
  2520  02F8  285F               	goto	l774
  2521  02F9                     l5447:	
  2522                           
  2523                           ;main.c: 1517: {
  2524                           ;main.c: 1521: static unsigned char ucTimerDelayP2sLess = 0;
  2525                           ;main.c: 1523: static unsigned char ucTimerDelayP2sMore = 0;
  2526                           ;main.c: 1525: if( getAdOriginalCh6Value() <= 150 )
  2527  02F9  118A  2611  118A   	fcall	_getAdOriginalCh6Value
  2528  02FC  3000               	movlw	0
  2529  02FD  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2530  02FE  3097               	movlw	151
  2531  02FF  1903               	skipnz
  2532  0300  0246               	subwf	?_getAdOriginalCh6Value,w
  2533  0301  1803               	skipnc
  2534  0302  2B06               	goto	l5451
  2535                           
  2536                           ;main.c: 1526: {
  2537                           ;main.c: 1528: ucTimerDelayP2sLess = 0;
  2538  0303  01E3               	clrf	main@ucTimerDelayP2sLess
  2539                           
  2540                           ;main.c: 1529: ucTimerDelayP2sMore = 0;
  2541  0304  01E4               	clrf	main@ucTimerDelayP2sMore
  2542                           
  2543                           ;main.c: 1530: }
  2544  0305  2B08               	goto	l974
  2545  0306                     l5451:	
  2546                           
  2547                           ;main.c: 1531: else
  2548                           ;main.c: 1532: {
  2549                           ;main.c: 1533: ucTimerDelayP2sMore++;
  2550  0306  0AE4               	incf	main@ucTimerDelayP2sMore,f
  2551                           
  2552                           ;main.c: 1534: ucTimerDelayP2sLess = 0;
  2553  0307  01E3               	clrf	main@ucTimerDelayP2sLess
  2554  0308                     l974:	
  2555                           
  2556                           ;main.c: 1541: if(ucTimerDelayP2sMore > 200)
  2557  0308  30C9               	movlw	201
  2558  0309  0264               	subwf	main@ucTimerDelayP2sMore,w
  2559                           
  2560                           ;main.c: 1542: ucTimerDelayP2sMore = 2;
  2561  030A  3002               	movlw	2
  2562  030B  1803               	btfsc	3,0
  2563  030C  00E4               	movwf	main@ucTimerDelayP2sMore
  2564                           
  2565                           ;main.c: 1568: else if(ucTimerDelayP2sMore >= 2)
  2566  030D  0264               	subwf	main@ucTimerDelayP2sMore,w
  2567  030E  1C03               	skipc
  2568  030F  2834               	goto	l5017
  2569                           
  2570                           ;main.c: 1569: {
  2571                           ;main.c: 1570: ucTimerDelayP2sMore = 0;
  2572  0310  01E4               	clrf	main@ucTimerDelayP2sMore
  2573                           
  2574                           ;main.c: 1571: ucTimerDelayP2sLess = 0;
  2575  0311  01E3               	clrf	main@ucTimerDelayP2sLess
  2576                           
  2577                           ;main.c: 1552: {
  2578                           ;main.c: 1557: vHandle20sTimeron();
  2579  0312  118A  251C  118A   	fcall	_vHandle20sTimeron
  2580                           
  2581                           ;main.c: 1558: }
  2582  0315  2834               	goto	l5017
  2583  0316                     l5477:	
  2584  0316  3004               	movlw	4
  2585                           
  2586                           ;main.c: 1900: {
  2587                           ;main.c: 1904: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2588                           ;main.c: 1906: ucFourthSuffix1TimerP3s++;
  2589  0317  0AD7               	incf	main@ucFourthSuffix1TimerP3s,f
  2590                           
  2591                           ;main.c: 1908: if( ucFourthSuffix1TimerP3s > 3)
  2592  0318  0257               	subwf	main@ucFourthSuffix1TimerP3s,w
  2593  0319  1C03               	skipc
  2594  031A  2834               	goto	l5017
  2595  031B  300C               	movlw	12
  2596                           
  2597                           ;main.c: 1909: {
  2598                           ;main.c: 1910: ucFourthSuffix1TimerP3s = 0;
  2599  031C  01D7               	clrf	main@ucFourthSuffix1TimerP3s
  2600  031D                     L6:	
  2601                           ;main.c: 1911: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2602                           
  2603  031D  00D3               	movwf	_ucADC4_Step
  2604  031E  2834               	goto	l5017
  2605  031F                     l5485:	
  2606                           
  2607                           ;main.c: 1918: {
  2608                           ;main.c: 1923: setPA6(0);
  2609  031F  3000               	movlw	0
  2610  0320  158A  26EC  118A   	fcall	_setPA6
  2611                           
  2612                           ;main.c: 1925: clearPinPortAndTimer();
  2613  0323  118A  2463  118A   	fcall	_clearPinPortAndTimer
  2614                           
  2615                           ;main.c: 1926: ucADC4_Step = ADC4_STEP_INIT;
  2616  0326  01D3               	clrf	_ucADC4_Step
  2617                           
  2618                           ;main.c: 1928: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2619  0327  01D0               	clrf	_enumMainLoopStep
  2620  0328  0AD0               	incf	_enumMainLoopStep,f
  2621                           
  2622                           ;main.c: 1929: break;
  2623  0329  2834               	goto	l5017
  2624  032A                     l5495:	
  2625  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2626  032B  0853               	movf	_ucADC4_Step,w
  2627                           
  2628                           ; Switch size 1, requested type "space"
  2629                           ; Number of cases is 7, Range of values is 0 to 12
  2630                           ; switch strategies available:
  2631                           ; Name         Instructions Cycles
  2632                           ; simple_byte           22    12 (average)
  2633                           ; direct_byte           33     7 (fixed)
  2634                           ; jumptable            260     6 (fixed)
  2635                           ; rangetable            17     6 (fixed)
  2636                           ; spacedrange           32     9 (fixed)
  2637                           ; locatedrange          13     3 (fixed)
  2638                           ;	Chosen strategy is simple_byte
  2639  032C  3A00               	xorlw	0	; case 0
  2640  032D  1903               	skipnz
  2641  032E  28EC               	goto	l815
  2642  032F  3A01               	xorlw	1	; case 1
  2643  0330  1903               	skipnz
  2644  0331  28EF               	goto	l5123
  2645  0332  3A03               	xorlw	3	; case 2
  2646  0333  1903               	skipnz
  2647  0334  2AE8               	goto	l5445
  2648  0335  3A01               	xorlw	1	; case 3
  2649  0336  1903               	skipnz
  2650  0337  2AF9               	goto	l5447
  2651  0338  3A09               	xorlw	9	; case 10
  2652  0339  1903               	skipnz
  2653  033A  285F               	goto	l774
  2654  033B  3A01               	xorlw	1	; case 11
  2655  033C  1903               	skipnz
  2656  033D  2B16               	goto	l5477
  2657  033E  3A07               	xorlw	7	; case 12
  2658  033F  1903               	skipnz
  2659  0340  2B1F               	goto	l5485
  2660  0341  285F               	goto	l774
  2661  0342                     l993:	
  2662                           ;main.c: 1955: {
  2663                           ;main.c: 1956: case HOUR_3_BRANCH_STEP_FIRST:
  2664                           
  2665                           
  2666                           ;main.c: 1957: {
  2667                           ;main.c: 1959: PB7 = 1;
  2668  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0343  1786               	bsf	6,7
  2670                           
  2671                           ;main.c: 1960: PBOD7 = 1;
  2672  0344  1683               	bsf	3,5	;RP0=1, select bank3
  2673  0345  3030               	movlw	48
  2674  0346  1703               	bsf	3,6	;RP1=1, select bank3
  2675  0347  1788               	bsf	8,7
  2676                           
  2677                           ;main.c: 1965: startThreeHoursTimer(10800);
  2678  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2680  034A  00A0               	movwf	?_startThreeHoursTimer
  2681  034B  302A               	movlw	42
  2682  034C  00A1               	movwf	?_startThreeHoursTimer+1
  2683  034D  158A  2777  118A   	fcall	_startThreeHoursTimer
  2684                           
  2685                           ;main.c: 1969: setPA0(1);
  2686  0350  3001               	movlw	1
  2687  0351  118A  249D  118A   	fcall	_setPA0
  2688                           
  2689                           ;main.c: 1971: setPA1(1);
  2690  0354  3001               	movlw	1
  2691  0355  118A  24A6  118A   	fcall	_setPA1
  2692                           
  2693                           ;main.c: 1973: setPB0(1);
  2694  0358  3001               	movlw	1
  2695  0359  118A  2485  118A   	fcall	_setPB0
  2696                           
  2697                           ;main.c: 1975: setPB1(1);
  2698  035C  3001               	movlw	1
  2699  035D  118A  248D  118A   	fcall	_setPB1
  2700                           
  2701                           ;main.c: 1977: setPB2(1);
  2702  0360  3001               	movlw	1
  2703  0361  118A  2495  118A   	fcall	_setPB2
  2704                           
  2705                           ;main.c: 1979: setPB4(0);
  2706  0364  3000               	movlw	0
  2707  0365  118A  2514  118A   	fcall	_setPB4
  2708                           
  2709                           ;main.c: 1981: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2710  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0369  01B0               	clrf	main@enumBranchStep^(0+128)
  2712  036A  0AB0               	incf	main@enumBranchStep^(0+128),f
  2713                           
  2714                           ;main.c: 1982: break;
  2715  036B  2834               	goto	l5017
  2716  036C                     l5501:	
  2717                           
  2718                           ;main.c: 1986: {
  2719                           ;main.c: 1991: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2720  036C  3002               	movlw	2
  2721  036D  00B0               	movwf	main@enumBranchStep^(0+128)
  2722                           
  2723                           ;main.c: 1992: break;
  2724  036E  2834               	goto	l5017
  2725  036F                     l5503:	
  2726                           
  2727                           ;main.c: 1996: {
  2728                           ;main.c: 2000: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2729  036F  158A  2725  118A   	fcall	_isFinishedTwelveHoursTimer
  2730  0372  3800               	iorlw	0
  2731  0373  1D03               	skipz
  2732  0374  2B7B               	goto	l5507
  2733  0375  158A  2731  118A   	fcall	_isFinishedThreeHoursTimer
  2734  0378  3A00               	xorlw	0
  2735  0379  1903               	skipnz
  2736  037A  2B7E               	goto	l5511
  2737  037B                     l5507:	
  2738                           
  2739                           ;main.c: 2001: {
  2740                           ;main.c: 2002: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2741  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2742  037C  01B0               	clrf	main@enumBranchStep^(0+128)
  2743  037D  285C               	goto	l5037
  2744  037E                     l5511:	
  2745                           
  2746                           ;main.c: 2005: else
  2747                           ;main.c: 2006: {
  2748                           ;main.c: 2007: static unsigned char ucTimerX1P5s = 0;
  2749                           ;main.c: 2009: static unsigned char ucTimerLessX1P5s = 0;
  2750                           ;main.c: 2011: if(getAdOriginalCh6Value() <= 85)
  2751  037E  118A  2611  118A   	fcall	_getAdOriginalCh6Value
  2752  0381  3000               	movlw	0
  2753  0382  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2754  0383  3056               	movlw	86
  2755  0384  1903               	skipnz
  2756  0385  0246               	subwf	?_getAdOriginalCh6Value,w
  2757  0386  1803               	skipnc
  2758  0387  2B8C               	goto	l5517
  2759                           
  2760                           ;main.c: 2012: {
  2761                           ;main.c: 2013: ucTimerX1P5s = 0;
  2762  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0389  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2764                           
  2765                           ;main.c: 2014: ucTimerLessX1P5s++;
  2766  038A  0AB3               	incf	main@ucTimerLessX1P5s^(0+128),f
  2767                           
  2768                           ;main.c: 2015: }
  2769  038B  2B8F               	goto	l5521
  2770  038C                     l5517:	
  2771                           
  2772                           ;main.c: 2016: else
  2773                           ;main.c: 2017: {
  2774                           ;main.c: 2018: ucTimerX1P5s++;
  2775  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2776  038D  0AB6               	incf	main@ucTimerX1P5s^(0+128),f
  2777                           
  2778                           ;main.c: 2019: ucTimerLessX1P5s = 0;
  2779  038E  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2780  038F                     l5521:	
  2781                           
  2782                           ;main.c: 2020: }
  2783                           ;main.c: 2022: if(ucTimerX1P5s >= 5)
  2784  038F  3005               	movlw	5
  2785  0390  0236               	subwf	main@ucTimerX1P5s^(0+128),w
  2786  0391  1C03               	skipc
  2787  0392  2BA3               	goto	l5535
  2788                           
  2789                           ;main.c: 2023: {
  2790                           ;main.c: 2024: ucTimerX1P5s = 0;
  2791  0393  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2792                           
  2793                           ;main.c: 2026: ucTimerLessX1P5s = 0;
  2794  0394  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2795                           
  2796                           ;main.c: 2030: PBOD7 = 0;
  2797  0395  1703               	bsf	3,6	;RP1=1, select bank3
  2798  0396  1388               	bcf	8,7
  2799                           
  2800                           ;main.c: 2031: PB7 = 0;
  2801  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2802  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2803  0399  1386               	bcf	6,7
  2804                           
  2805                           ;main.c: 2036: clearThreeHoursTimer();
  2806  039A  118A  24BB  118A   	fcall	_clearThreeHoursTimer
  2807                           
  2808                           ;main.c: 2038: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2809  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2810  039E  3002               	movlw	2
  2811  039F  01B0               	clrf	main@enumBranchStep^(0+128)
  2812  03A0                     L1:	
  2813                           ;main.c: 2040: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2814                           
  2815  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2816  03A1  00D0               	movwf	_enumMainLoopStep
  2817                           
  2818                           ;main.c: 2041: }
  2819  03A2  2834               	goto	l5017
  2820  03A3                     l5535:	
  2821                           
  2822                           ;main.c: 2042: else if(ucTimerLessX1P5s >= 5)
  2823  03A3  3005               	movlw	5
  2824  03A4  0233               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2825  03A5  1C03               	skipc
  2826  03A6  2834               	goto	l5017
  2827                           
  2828                           ;main.c: 2043: {
  2829                           ;main.c: 2044: static unsigned char ucTimerX2P5s = 0;
  2830                           ;main.c: 2046: static unsigned char ucTimerLessX2P5s = 0;
  2831                           ;main.c: 2048: if(getAdOriginalCh6Value() > 20)
  2832  03A7  118A  2611  118A   	fcall	_getAdOriginalCh6Value
  2833  03AA  3000               	movlw	0
  2834  03AB  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2835  03AC  3015               	movlw	21
  2836  03AD  1903               	skipnz
  2837  03AE  0246               	subwf	?_getAdOriginalCh6Value,w
  2838  03AF  1C03               	skipc
  2839  03B0  2BB4               	goto	l5543
  2840                           
  2841                           ;main.c: 2049: {
  2842                           ;main.c: 2050: ucTimerX2P5s++;
  2843  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2844  03B2  0AB7               	incf	main@ucTimerX2P5s^(0+128),f
  2845  03B3  2BB6               	goto	L8
  2846  03B4                     l5543:	
  2847                           ;main.c: 2052: }
  2848                           
  2849                           ;main.c: 2051: ucTimerLessX2P5s = 0;
  2850                           
  2851                           
  2852                           ;main.c: 2053: else
  2853                           ;main.c: 2054: {
  2854                           ;main.c: 2055: ucTimerX2P5s = 0;
  2855  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2856  03B5  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2857  03B6                     L8:	
  2858  03B6  3005               	movlw	5
  2859                           
  2860                           ;main.c: 2057: ucTimerLessX2P5s = 0;
  2861  03B7  01B4               	clrf	main@ucTimerLessX2P5s^(0+128)
  2862                           
  2863                           ;main.c: 2059: }
  2864                           ;main.c: 2061: if(ucTimerX2P5s >= 5)
  2865  03B8  0237               	subwf	main@ucTimerX2P5s^(0+128),w
  2866  03B9  1C03               	skipc
  2867  03BA  2834               	goto	l5017
  2868                           
  2869                           ;main.c: 2062: {
  2870                           ;main.c: 2063: ucTimerX2P5s = 0;
  2871  03BB  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2872                           
  2873                           ;main.c: 2064: }
  2874  03BC  2834               	goto	l5017
  2875  03BD                     l5563:	
  2876  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2877  03BE  0830               	movf	main@enumBranchStep^(0+128),w
  2878                           
  2879                           ; Switch size 1, requested type "space"
  2880                           ; Number of cases is 3, Range of values is 0 to 2
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte           10     6 (average)
  2884                           ; direct_byte           13     7 (fixed)
  2885                           ; jumptable            260     6 (fixed)
  2886                           ; rangetable             7     6 (fixed)
  2887                           ; spacedrange           12     9 (fixed)
  2888                           ; locatedrange           3     3 (fixed)
  2889                           ;	Chosen strategy is simple_byte
  2890  03BF  3A00               	xorlw	0	; case 0
  2891  03C0  1903               	skipnz
  2892  03C1  2B42               	goto	l993
  2893  03C2  3A01               	xorlw	1	; case 1
  2894  03C3  1903               	skipnz
  2895  03C4  2B6C               	goto	l5501
  2896  03C5  3A03               	xorlw	3	; case 2
  2897  03C6  1903               	skipnz
  2898  03C7  2B6F               	goto	l5503
  2899  03C8  285F               	goto	l774
  2900  03C9                     l5565:	
  2901                           
  2902                           ;main.c: 2115: {
  2903                           ;main.c: 2120: setPA2(0);
  2904  03C9  3000               	movlw	0
  2905  03CA  118A  27F7  118A   	fcall	_setPA2
  2906                           
  2907                           ;main.c: 2121: setPA1(0);
  2908  03CD  3000               	movlw	0
  2909  03CE  118A  24A6  118A   	fcall	_setPA1
  2910                           
  2911                           ;main.c: 2122: setPA0(0);
  2912  03D1  3000               	movlw	0
  2913  03D2  118A  249D  118A   	fcall	_setPA0
  2914                           
  2915                           ;main.c: 2123: setPB0(0);
  2916  03D5  3000               	movlw	0
  2917  03D6  118A  2485  118A   	fcall	_setPB0
  2918                           
  2919                           ;main.c: 2124: setPB1(0);
  2920  03D9  3000               	movlw	0
  2921  03DA  118A  248D  118A   	fcall	_setPB1
  2922                           
  2923                           ;main.c: 2125: setPB2(0);
  2924  03DD  3000               	movlw	0
  2925  03DE  118A  2495  118A   	fcall	_setPB2
  2926                           
  2927                           ;main.c: 2126: setPA3(0);
  2928  03E1  3000               	movlw	0
  2929  03E2  118A  2608  118A   	fcall	_setPA3
  2930                           
  2931                           ;main.c: 2127: setPB4(0);
  2932  03E5  3000               	movlw	0
  2933  03E6  118A  2514  118A   	fcall	_setPB4
  2934                           
  2935                           ;main.c: 2128: setPB6(1);
  2936  03E9  3001               	movlw	1
  2937  03EA  118A  261A  118A   	fcall	_setPB6
  2938                           
  2939                           ;main.c: 2130: enumInteralStep = INTERNAL_SECOND_STEP;
  2940  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2941  03EE  01B1               	clrf	main@enumInteralStep^(0+128)
  2942  03EF  0AB1               	incf	main@enumInteralStep^(0+128),f
  2943                           
  2944                           ;main.c: 2131: break;
  2945  03F0  2834               	goto	l5017
  2946  03F1                     l5569:	
  2947                           
  2948                           ;main.c: 2135: {
  2949                           ;main.c: 2139: static unsigned char ucTimer1s = 0;
  2950                           ;main.c: 2141: if(getAdOriginalCh0Value() >= 2500)
  2951  03F1  118A  2459  118A   	fcall	_getAdOriginalCh0Value
  2952  03F4  3009               	movlw	9
  2953  03F5  0247               	subwf	?_getAdOriginalCh0Value+1,w
  2954  03F6  30C4               	movlw	196
  2955  03F7  1903               	skipnz
  2956  03F8  0246               	subwf	?_getAdOriginalCh0Value,w
  2957  03F9  1C03               	skipc
  2958  03FA  2BFE               	goto	l5573
  2959                           
  2960                           ;main.c: 2142: {
  2961                           ;main.c: 2143: ucTimer1s++;
  2962  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2963  03FC  0AB2               	incf	main@ucTimer1s^(0+128),f
  2964                           
  2965                           ;main.c: 2144: }
  2966  03FD  2C00               	goto	l5575
  2967  03FE                     l5573:	
  2968                           
  2969                           ;main.c: 2145: else
  2970                           ;main.c: 2146: ucTimer1s = 0;
  2971  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2972  03FF  01B2               	clrf	main@ucTimer1s^(0+128)
  2973  0400                     l5575:	
  2974                           
  2975                           ;main.c: 2148: if(ucTimer1s >= 10)
  2976  0400  300A               	movlw	10
  2977  0401  0232               	subwf	main@ucTimer1s^(0+128),w
  2978  0402  1C03               	skipc
  2979  0403  2834               	goto	l5017
  2980                           
  2981                           ;main.c: 2149: {
  2982                           ;main.c: 2150: enumInteralStep = INTERNAL_THIRD_STEP;
  2983  0404  3002               	movlw	2
  2984  0405  00B1               	movwf	main@enumInteralStep^(0+128)
  2985                           
  2986                           ;main.c: 2151: ucTimer1s = 0;
  2987  0406  01B2               	clrf	main@ucTimer1s^(0+128)
  2988  0407  2834               	goto	l5017
  2989  0408                     l5581:	
  2990                           
  2991                           ;main.c: 2157: {
  2992                           ;main.c: 2161: static unsigned char ucTimerP3s = 0;
  2993                           ;main.c: 2163: if(getAdOriginalCh0Value() <= 1950)
  2994  0408  118A  2459  118A   	fcall	_getAdOriginalCh0Value
  2995  040B  3007               	movlw	7
  2996  040C  0247               	subwf	?_getAdOriginalCh0Value+1,w
  2997  040D  309F               	movlw	159
  2998  040E  1903               	skipnz
  2999  040F  0246               	subwf	?_getAdOriginalCh0Value,w
  3000  0410  1803               	skipnc
  3001  0411  2C15               	goto	l5585
  3002                           
  3003                           ;main.c: 2164: {
  3004                           ;main.c: 2165: ucTimerP3s++;
  3005  0412  1683               	bsf	3,5	;RP0=1, select bank1
  3006  0413  0AB5               	incf	main@ucTimerP3s^(0+128),f
  3007                           
  3008                           ;main.c: 2166: }
  3009  0414  2C17               	goto	l5587
  3010  0415                     l5585:	
  3011                           
  3012                           ;main.c: 2167: else
  3013                           ;main.c: 2168: ucTimerP3s = 0;
  3014  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3015  0416  01B5               	clrf	main@ucTimerP3s^(0+128)
  3016  0417                     l5587:	
  3017                           
  3018                           ;main.c: 2170: if(ucTimerP3s >= 3)
  3019  0417  3003               	movlw	3
  3020  0418  0235               	subwf	main@ucTimerP3s^(0+128),w
  3021  0419  1C03               	skipc
  3022  041A  2834               	goto	l5017
  3023                           
  3024                           ;main.c: 2171: {
  3025                           ;main.c: 2172: enumInteralStep = INTERNAL_FIRST_STEP;
  3026  041B  01B1               	clrf	main@enumInteralStep^(0+128)
  3027                           
  3028                           ;main.c: 2173: ucTimerP3s = 0;
  3029  041C  01B5               	clrf	main@ucTimerP3s^(0+128)
  3030                           
  3031                           ;main.c: 2175: clearAllTimer();
  3032  041D  118A  24AE  118A   	fcall	_clearAllTimer
  3033                           
  3034                           ;main.c: 2177: initPin();
  3035  0420  158A  278B  118A   	fcall	_initPin
  3036                           
  3037                           ;main.c: 2180: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3038  0423  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0424  01D0               	clrf	_enumMainLoopStep
  3040  0425                     l1041:	
  3041  0425  2C25               	goto	l1041
  3042  0426                     l5597:	
  3043  0426  1683               	bsf	3,5	;RP0=1, select bank1
  3044  0427  0831               	movf	main@enumInteralStep^(0+128),w
  3045                           
  3046                           ; Switch size 1, requested type "space"
  3047                           ; Number of cases is 3, Range of values is 0 to 2
  3048                           ; switch strategies available:
  3049                           ; Name         Instructions Cycles
  3050                           ; simple_byte           10     6 (average)
  3051                           ; direct_byte           13     7 (fixed)
  3052                           ; jumptable            260     6 (fixed)
  3053                           ; rangetable             7     6 (fixed)
  3054                           ; spacedrange           12     9 (fixed)
  3055                           ; locatedrange           3     3 (fixed)
  3056                           ;	Chosen strategy is simple_byte
  3057  0428  3A00               	xorlw	0	; case 0
  3058  0429  1903               	skipnz
  3059  042A  2BC9               	goto	l5565
  3060  042B  3A01               	xorlw	1	; case 1
  3061  042C  1903               	skipnz
  3062  042D  2BF1               	goto	l5569
  3063  042E  3A03               	xorlw	3	; case 2
  3064  042F  1903               	skipnz
  3065  0430  2C08               	goto	l5581
  3066  0431  285F               	goto	l774
  3067  0432                     l5601:	
  3068  0432  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0433  0850               	movf	_enumMainLoopStep,w
  3070                           
  3071                           ; Switch size 1, requested type "space"
  3072                           ; Number of cases is 8, Range of values is 0 to 9
  3073                           ; switch strategies available:
  3074                           ; Name         Instructions Cycles
  3075                           ; simple_byte           25    13 (average)
  3076                           ; direct_byte           27     7 (fixed)
  3077                           ; jumptable            260     6 (fixed)
  3078                           ; rangetable            14     6 (fixed)
  3079                           ; spacedrange           26     9 (fixed)
  3080                           ; locatedrange          10     3 (fixed)
  3081                           ;	Chosen strategy is simple_byte
  3082  0434  3A00               	xorlw	0	; case 0
  3083  0435  1903               	skipnz
  3084  0436  2842               	goto	l5023
  3085  0437  3A01               	xorlw	1	; case 1
  3086  0438  1903               	skipnz
  3087  0439  2860               	goto	l5039
  3088  043A  3A03               	xorlw	3	; case 2
  3089  043B  1903               	skipnz
  3090  043C  287D               	goto	l5059
  3091  043D  3A01               	xorlw	1	; case 3
  3092  043E  1903               	skipnz
  3093  043F  2895               	goto	l5071
  3094  0440  3A07               	xorlw	7	; case 4
  3095  0441  1903               	skipnz
  3096  0442  28D1               	goto	l5109
  3097  0443  3A01               	xorlw	1	; case 5
  3098  0444  1903               	skipnz
  3099  0445  28DD               	goto	l5115
  3100  0446  3A0D               	xorlw	13	; case 8
  3101  0447  1903               	skipnz
  3102  0448  2BBD               	goto	l5563
  3103  0449  3A01               	xorlw	1	; case 9
  3104  044A  1903               	skipnz
  3105  044B  2C26               	goto	l5597
  3106  044C  285F               	goto	l774
  3107  044D  118A  2811         	ljmp	start
  3108  044F                     __end_of_main:	
  3109                           
  3110                           	psect	swtext1
  3111  0800                     __pswtext1:	
  3112  0800                     S5819:	
  3113  0800  118A  2971         	ljmp	l5173
  3114  0802  118A  2977         	ljmp	l5177
  3115  0804  118A  2983         	ljmp	l5187
  3116  0806  118A  298C         	ljmp	l5197
  3117  0808  118A  2995         	ljmp	l5207
  3118  080A  118A  299E         	ljmp	l5217
  3119  080C  118A  29B7         	ljmp	l5227
  3120                           
  3121                           	psect	swtext2
  3122  080E                     __pswtext2:	
  3123  080E                     S5821:	
  3124  080E  118A  29CA         	ljmp	l5239
  3125  0810  118A  29D0         	ljmp	l5243
  3126  0812  118A  29DC         	ljmp	l5253
  3127  0814  118A  29E5         	ljmp	l5263
  3128  0816  118A  29EE         	ljmp	l5273
  3129  0818  118A  29F7         	ljmp	l5283
  3130  081A  118A  2A0C         	ljmp	l5293
  3131                           
  3132                           	psect	swtext3
  3133  081C                     __pswtext3:	
  3134  081C                     S5823:	
  3135  081C  118A  2A1E         	ljmp	l5305
  3136  081E  118A  2A28         	ljmp	l5309
  3137  0820  118A  2A34         	ljmp	l5319
  3138  0822  118A  2A3D         	ljmp	l5329
  3139  0824  118A  2A46         	ljmp	l5339
  3140  0826  118A  2A57         	ljmp	l5349
  3141                           
  3142                           	psect	text1005
  3143  0FB2                     __ptext1005:	
  3144 ;; =============== function _vHandle20sTimeron ends ============
  3145                           
  3146                           
  3147 ;; *************** function _process_AD_Converter_Value *****************
  3148 ;; Defined at:
  3149 ;;		line 302 in file "C:\temp\dev\AK7030-OTP\common.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;		None               void
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/20
  3160 ;;		On exit  : 40/0
  3161 ;;		Unchanged: FFF9F/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3163 ;;      Params:         0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0
  3166 ;;      Totals:         0       0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    4
  3170 ;; This function calls:
  3171 ;;		_getAD_ConvertFlag
  3172 ;;		_setAD_ConvertFlag
  3173 ;;		_AD_Sample
  3174 ;;		_adc_start
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179  0FB2                     _process_AD_Converter_Value:	
  3180                           
  3181                           ;common.c: 303: if(getAD_ConvertFlag())
  3182                           
  3183                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3184  0FB2  27BD  158A         	fcall	_getAD_ConvertFlag
  3185  0FB4  3A00               	xorlw	0
  3186  0FB5  1903               	skipnz
  3187  0FB6  0008               	return
  3188                           
  3189                           ;common.c: 304: {
  3190                           ;common.c: 305: setAD_ConvertFlag(0);
  3191  0FB7  3000               	movlw	0
  3192  0FB8  27C1  158A         	fcall	_setAD_ConvertFlag
  3193                           
  3194                           ;common.c: 306: AD_Sample();
  3195  0FBA  27C9  158A         	fcall	_AD_Sample
  3196                           
  3197                           ;common.c: 318: adc_start();
  3198  0FBC  2FC6               	ljmp	l4479
  3199  0FBD                     __end_of_process_AD_Converter_Value:	
  3200  0FBD                     __ptext1016:	
  3201 ;; =============== function _setAD_ConvertFlag ends ============
  3202                           
  3203                           
  3204 ;; *************** function _getAD_ConvertFlag *****************
  3205 ;; Defined at:
  3206 ;;		line 233 in file "C:\temp\dev\AK7030-OTP\common.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/20
  3217 ;;		On exit  : 60/20
  3218 ;;		Unchanged: FFF9F/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0
  3223 ;;      Totals:         0       0       0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    2
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_process_AD_Converter_Value
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233  0FBD                     _getAD_ConvertFlag:	
  3234                           
  3235                           ;common.c: 234: return adc_convert_flag;
  3236                           
  3237                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3238  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  3240  0FBF  082D               	movf	_adc_convert_flag^(0+128),w
  3241  0FC0  0008               	return
  3242  0FC1                     __end_of_getAD_ConvertFlag:	
  3243  0FC1                     __ptext1015:	
  3244 ;; =============== function _clearAllTimer ends ============
  3245                           
  3246                           
  3247 ;; *************** function _setAD_ConvertFlag *****************
  3248 ;; Defined at:
  3249 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  flag            1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  flag            1    0[BANK0 ] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;		None               void
  3256 ;; Registers used:
  3257 ;;		wreg
  3258 ;; Tracked objects:
  3259 ;;		On entry : 60/20
  3260 ;;		On exit  : 60/20
  3261 ;;		Unchanged: FFF9F/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0       0       0       0       0
  3264 ;;      Locals:         0       1       0       0       0
  3265 ;;      Temps:          0       0       0       0       0
  3266 ;;      Totals:         0       1       0       0       0
  3267 ;;Total ram usage:        1 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    2
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_process_AD_Converter_Value
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276  0FC1                     _setAD_ConvertFlag:	
  3277                           
  3278                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3279                           ;setAD_ConvertFlag@flag stored from wreg
  3280  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0FC2  00A0               	movwf	setAD_ConvertFlag@flag
  3282                           
  3283                           ;common.c: 240: adc_convert_flag = flag;
  3284  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0FC4  00AD               	movwf	_adc_convert_flag^(0+128)
  3286  0FC5  0008               	return
  3287  0FC6                     __end_of_setAD_ConvertFlag:	
  3288  0FC6                     __ptext1029:	
  3289 ;; =============== function _startTwentyMinuteTimer ends ============
  3290                           
  3291                           
  3292 ;; *************** function _adc_start *****************
  3293 ;; Defined at:
  3294 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;		None               void
  3301 ;; Registers used:
  3302 ;;		None
  3303 ;; Tracked objects:
  3304 ;;		On entry : 40/20
  3305 ;;		On exit  : 60/0
  3306 ;;		Unchanged: FFF9F/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3308 ;;      Params:         0       0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0
  3311 ;;      Totals:         0       0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    2
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;;		_process_AD_Converter_Value
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322  0FC6                     _adc_start:	
  3323  0FC6                     l4479:	
  3324                           ; Regs used in _adc_start: []
  3325                           
  3326                           
  3327                           ;periph.c: 101: GO=1;
  3328  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0FC7  149F               	bsf	31,1
  3330  0FC8  0008               	return
  3331  0FC9                     __end_of_adc_start:	
  3332  0FC9                     __ptext1008:	
  3333 ;; =============== function _clearPinPortAndTimer ends ============
  3334                           
  3335                           
  3336 ;; *************** function _AD_Sample *****************
  3337 ;; Defined at:
  3338 ;;		line 332 in file "C:\temp\dev\AK7030-OTP\common.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 60/20
  3349 ;;		On exit  : 40/0
  3350 ;;		Unchanged: FFF9F/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    3
  3359 ;; This function calls:
  3360 ;;		_adc_test_init
  3361 ;; This function is called by:
  3362 ;;		_process_AD_Converter_Value
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365  0FC9                     _AD_Sample:	
  3366                           
  3367                           ;common.c: 333: if(sampleTimes < 12)
  3368                           
  3369                           ; Regs used in _AD_Sample: [wreg+status,2+status,0+pclath+cstack]
  3370  0FC9  300C               	movlw	12
  3371  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0FCB  0252               	subwf	_sampleTimes,w
  3373  0FCC  1803               	skipnc
  3374  0FCD  0008               	return
  3375  0FCE  300C               	movlw	12
  3376                           
  3377                           ;common.c: 334: {
  3378                           ;common.c: 336: sampleTimes++;
  3379  0FCF  0AD2               	incf	_sampleTimes,f
  3380                           
  3381                           ;common.c: 338: if(sampleTimes >= 12)
  3382  0FD0  0252               	subwf	_sampleTimes,w
  3383  0FD1  1C03               	skipc
  3384  0FD2  0008               	return
  3385                           
  3386                           ;common.c: 339: {
  3387                           ;common.c: 340: sampleTimes = 0;
  3388  0FD3  01D2               	clrf	_sampleTimes
  3389                           
  3390                           ;common.c: 342: if(sampleChannelSelect == 0)
  3391  0FD4  08D1               	movf	_sampleChannelSelect,f
  3392  0FD5  1D03               	skipz
  3393  0FD6  2FD9               	goto	l4825
  3394                           
  3395                           ;common.c: 343: {
  3396                           ;common.c: 346: sampleChannelSelect = 2;
  3397  0FD7  3002               	movlw	2
  3398  0FD8  2FE4               	goto	L18
  3399  0FD9                     l4825:	
  3400                           ;common.c: 347: }
  3401                           
  3402                           
  3403                           ;common.c: 348: else if(sampleChannelSelect == 2)
  3404  0FD9  0851               	movf	_sampleChannelSelect,w
  3405  0FDA  3A02               	xorlw	2
  3406  0FDB  1D03               	skipz
  3407  0FDC  2FDF               	goto	l4829
  3408                           
  3409                           ;common.c: 349: {
  3410                           ;common.c: 351: sampleChannelSelect = 5;
  3411  0FDD  3005               	movlw	5
  3412  0FDE  2FE4               	goto	L18
  3413  0FDF                     l4829:	
  3414                           ;common.c: 352: }
  3415                           
  3416                           
  3417                           ;common.c: 353: else if(sampleChannelSelect == 5)
  3418  0FDF  0851               	movf	_sampleChannelSelect,w
  3419  0FE0  3A05               	xorlw	5
  3420  0FE1  1D03               	skipz
  3421  0FE2  2FE6               	goto	l4833
  3422                           
  3423                           ;common.c: 354: {
  3424                           ;common.c: 356: sampleChannelSelect = 6;
  3425  0FE3  3006               	movlw	6
  3426  0FE4                     L18:	
  3427  0FE4  00D1               	movwf	_sampleChannelSelect
  3428                           
  3429                           ;common.c: 357: }
  3430  0FE5  2FE7               	goto	l4835
  3431  0FE6                     l4833:	
  3432                           
  3433                           ;common.c: 358: else
  3434                           ;common.c: 359: {
  3435                           ;common.c: 361: sampleChannelSelect = 0;
  3436  0FE6  01D1               	clrf	_sampleChannelSelect
  3437  0FE7                     l4835:	
  3438                           
  3439                           ;common.c: 362: }
  3440                           ;common.c: 367: adc_test_init(sampleChannelSelect,3);
  3441  0FE7  3003               	movlw	3
  3442  0FE8  00A0               	movwf	?_adc_test_init
  3443  0FE9  0851               	movf	_sampleChannelSelect,w
  3444  0FEA  2FEB               	ljmp	_adc_test_init
  3445  0FEB                     __end_of_AD_Sample:	
  3446  0FEB                     __ptext1030:	
  3447 ;; =============== function _adc_start ends ============
  3448                           
  3449                           
  3450 ;; *************** function _adc_test_init *****************
  3451 ;; Defined at:
  3452 ;;		line 85 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  channel         1    wreg     unsigned char 
  3455 ;;  ref             1    0[BANK0 ] unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  channel         1    2[BANK0 ] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;		None               void
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 60/0
  3464 ;;		On exit  : 60/20
  3465 ;;		Unchanged: FFF9F/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       1       0       0       0
  3468 ;;      Locals:         0       1       0       0       0
  3469 ;;      Temps:          0       1       0       0       0
  3470 ;;      Totals:         0       3       0       0       0
  3471 ;;Total ram usage:        3 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    2
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;;		_AD_Sample
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481  0FEB                     _adc_test_init:	
  3482                           
  3483                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3484                           ;adc_test_init@channel stored from wreg
  3485  0FEB  00A2               	movwf	adc_test_init@channel
  3486                           
  3487                           ;periph.c: 86: ADCON0 = 0x00;
  3488  0FEC  019F               	clrf	31	;volatile
  3489                           
  3490                           ;periph.c: 87: ADCON0|=channel<<2;
  3491  0FED  00A1               	movwf	??_adc_test_init
  3492  0FEE  1003               	clrc
  3493  0FEF  0DA1               	rlf	??_adc_test_init,f
  3494  0FF0  1003               	clrc
  3495  0FF1  0D21               	rlf	??_adc_test_init,w
  3496  0FF2  049F               	iorwf	31,f	;volatile
  3497                           
  3498                           ;periph.c: 88: ADCON1|=ref<<6;
  3499  0FF3  0820               	movf	adc_test_init@ref,w
  3500  0FF4  00A1               	movwf	??_adc_test_init
  3501  0FF5  0CA1               	rrf	??_adc_test_init,f
  3502  0FF6  0CA1               	rrf	??_adc_test_init,f
  3503  0FF7  0C21               	rrf	??_adc_test_init,w
  3504  0FF8  39C0               	andlw	192
  3505  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  3506  0FFA  049F               	iorwf	31,f	;volatile
  3507                           
  3508                           ;periph.c: 89: ADON=1;
  3509  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0FFC  141F               	bsf	31,0
  3511                           
  3512                           ;periph.c: 90: ADIE=1;
  3513  0FFD  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0FFE  150D               	bsf	13,2
  3515  0FFF  0008               	return
  3516  1000                     __end_of_adc_test_init:	
  3517                           
  3518                           	psect	text1011
  3519  044F                     __ptext1011:	
  3520 ;; =============== function _vHandle20sTimerOut ends ============
  3521                           
  3522                           
  3523 ;; *************** function _getAdOriginalCh5Value *****************
  3524 ;; Defined at:
  3525 ;;		line 272 in file "C:\temp\dev\AK7030-OTP\common.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2   38[BANK0 ] unsigned int 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 60/0
  3536 ;;		On exit  : 160/0
  3537 ;;		Unchanged: FFE00/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       2       0       0       0
  3540 ;;      Locals:         0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         0       2       0       0       0
  3543 ;;Total ram usage:        2 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    3
  3546 ;; This function calls:
  3547 ;;		_Filter
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552  044F                     _getAdOriginalCh5Value:	
  3553                           
  3554                           ;common.c: 274: return Filter(uiSampleChannelFifth);
  3555                           
  3556                           ; Regs used in _getAdOriginalCh5Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3557  044F  3090               	movlw	_uiSampleChannelFifth& (0+255)
  3558  0450  00A0               	movwf	?_Filter
  3559  0451  3001               	movlw	1
  3560  0452  00A1               	movwf	?_Filter+1
  3561  0453  2630               	fcall	_Filter
  3562  0454  0821               	movf	?_Filter+1,w
  3563  0455  00C7               	movwf	?_getAdOriginalCh5Value+1
  3564  0456  0820               	movf	?_Filter,w
  3565  0457  00C6               	movwf	?_getAdOriginalCh5Value
  3566  0458  0008               	return
  3567  0459                     __end_of_getAdOriginalCh5Value:	
  3568  0459                     __ptext1013:	
  3569 ;; =============== function _getAdOriginalCh6Value ends ============
  3570                           
  3571                           
  3572 ;; *************** function _getAdOriginalCh0Value *****************
  3573 ;; Defined at:
  3574 ;;		line 263 in file "C:\temp\dev\AK7030-OTP\common.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  2   38[BANK0 ] unsigned int 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 40/0
  3585 ;;		On exit  : 160/0
  3586 ;;		Unchanged: FFE00/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       2       0       0       0
  3589 ;;      Locals:         0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0
  3591 ;;      Totals:         0       2       0       0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    3
  3595 ;; This function calls:
  3596 ;;		_Filter
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601  0459                     _getAdOriginalCh0Value:	
  3602                           
  3603                           ;common.c: 265: return Filter(uiSampleChannelZero);
  3604                           
  3605                           ; Regs used in _getAdOriginalCh0Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3606  0459  30C4               	movlw	_uiSampleChannelZero& (0+255)
  3607  045A  1283               	bcf	3,5	;RP0=0, select bank0
  3608  045B  00A0               	movwf	?_Filter
  3609  045C  01A1               	clrf	?_Filter+1
  3610  045D  2630               	fcall	_Filter
  3611  045E  0821               	movf	?_Filter+1,w
  3612  045F  00C7               	movwf	?_getAdOriginalCh0Value+1
  3613  0460  0820               	movf	?_Filter,w
  3614  0461  00C6               	movwf	?_getAdOriginalCh0Value
  3615  0462  0008               	return
  3616  0463                     __end_of_getAdOriginalCh0Value:	
  3617  0463                     __ptext1007:	
  3618 ;; =============== function _clearParaFunction1 ends ============
  3619                           
  3620                           
  3621 ;; *************** function _clearPinPortAndTimer *****************
  3622 ;; Defined at:
  3623 ;;		line 110 in file "C:\temp\dev\AK7030-OTP\main.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;		None               void
  3630 ;; Registers used:
  3631 ;;		status,2, status,0, pclath, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 60/0
  3634 ;;		On exit  : 60/0
  3635 ;;		Unchanged: FFF9F/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         0       0       0       0       0
  3638 ;;      Locals:         0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0
  3640 ;;      Totals:         0       0       0       0       0
  3641 ;;Total ram usage:        0 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    4
  3644 ;; This function calls:
  3645 ;;		_clearAllTimer
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650  0463                     _clearPinPortAndTimer:	
  3651                           
  3652                           ;main.c: 112: PB0 = 0;
  3653                           
  3654                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3655  0463  1006               	bcf	6,0
  3656                           
  3657                           ;main.c: 113: PA0 = 0;
  3658  0464  1005               	bcf	5,0
  3659                           
  3660                           ;main.c: 114: PA1 = 0;
  3661  0465  1085               	bcf	5,1
  3662                           
  3663                           ;main.c: 115: PA2 = 0;
  3664  0466  1105               	bcf	5,2
  3665                           
  3666                           ;main.c: 116: PA3 = 0;
  3667  0467  1185               	bcf	5,3
  3668                           
  3669                           ;main.c: 119: PBOD7 = 0;
  3670  0468  1683               	bsf	3,5	;RP0=1, select bank3
  3671  0469  1703               	bsf	3,6	;RP1=1, select bank3
  3672  046A  1388               	bcf	8,7
  3673                           
  3674                           ;main.c: 120: PB7 = 0;
  3675  046B  1283               	bcf	3,5	;RP0=0, select bank0
  3676  046C  1303               	bcf	3,6	;RP1=0, select bank0
  3677  046D  1386               	bcf	6,7
  3678                           
  3679                           ;main.c: 121: clearAllTimer();
  3680  046E  2CAE               	ljmp	l4743
  3681  046F                     __end_of_clearPinPortAndTimer:	
  3682  046F                     __ptext1006:	
  3683 ;; =============== function _process_AD_Converter_Value ends ============
  3684                           
  3685                           
  3686 ;; *************** function _clearParaFunction1 *****************
  3687 ;; Defined at:
  3688 ;;		line 581 in file "C:\temp\dev\AK7030-OTP\main.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;		None               void
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, pclath, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 160/0
  3699 ;;		On exit  : 160/0
  3700 ;;		Unchanged: FFE9F/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3702 ;;      Params:         0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0
  3705 ;;      Totals:         0       0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    4
  3709 ;; This function calls:
  3710 ;;		_setPA1
  3711 ;;		_setPA0
  3712 ;;		_setPB0
  3713 ;;		_setPB1
  3714 ;;		_setPB2
  3715 ;;		_clearAllTimer
  3716 ;;		_setPA3
  3717 ;;		_setPB4
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722  046F                     _clearParaFunction1:	
  3723                           
  3724                           ;main.c: 582: setPA1(0);
  3725                           
  3726                           ; Regs used in _clearParaFunction1: [wreg+status,2+status,0+pclath+cstack]
  3727  046F  3000               	movlw	0
  3728  0470  24A6  118A         	fcall	_setPA1
  3729                           
  3730                           ;main.c: 583: setPA0(0);
  3731  0472  3000               	movlw	0
  3732  0473  249D  118A         	fcall	_setPA0
  3733                           
  3734                           ;main.c: 585: setPB0(0);
  3735  0475  3000               	movlw	0
  3736  0476  2485  118A         	fcall	_setPB0
  3737                           
  3738                           ;main.c: 586: setPB1(0);
  3739  0478  3000               	movlw	0
  3740  0479  248D  118A         	fcall	_setPB1
  3741                           
  3742                           ;main.c: 587: setPB2(0);
  3743  047B  3000               	movlw	0
  3744  047C  2495  118A         	fcall	_setPB2
  3745                           
  3746                           ;main.c: 589: clearAllTimer();
  3747  047E  24AE  118A         	fcall	_clearAllTimer
  3748                           
  3749                           ;main.c: 591: setPA3(0);
  3750  0480  3000               	movlw	0
  3751  0481  2608  118A         	fcall	_setPA3
  3752                           
  3753                           ;main.c: 592: setPB4(0);
  3754  0483  3000               	movlw	0
  3755  0484  2D14               	ljmp	_setPB4
  3756  0485                     __end_of_clearParaFunction1:	
  3757  0485                     __ptext1044:	
  3758 ;; =============== function _setPB1 ends ============
  3759                           
  3760                           
  3761 ;; *************** function _setPB0 *****************
  3762 ;; Defined at:
  3763 ;;		line 166 in file "C:\temp\dev\AK7030-OTP\main.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  bValue          1    wreg     unsigned char 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  bValue          1    0[BANK0 ] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;		None               void
  3770 ;; Registers used:
  3771 ;;		wreg
  3772 ;; Tracked objects:
  3773 ;;		On entry : 60/0
  3774 ;;		On exit  : 60/0
  3775 ;;		Unchanged: FFF9F/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         0       0       0       0       0
  3778 ;;      Locals:         0       1       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         0       1       0       0       0
  3781 ;;Total ram usage:        1 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    2
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_clearParaFunction1
  3788 ;;		_main
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791  0485                     _setPB0:	
  3792                           
  3793                           ; Regs used in _setPB0: [wreg]
  3794                           ;setPB0@bValue stored from wreg
  3795  0485  00A0               	movwf	setPB0@bValue
  3796                           
  3797                           ;main.c: 167: if( bValue )
  3798  0486  0820               	movf	setPB0@bValue,w
  3799  0487  1903               	btfsc	3,2
  3800  0488  2C8B               	goto	l702
  3801                           
  3802                           ;main.c: 169: PB0 = 1;
  3803  0489  1406               	bsf	6,0
  3804  048A  0008               	return
  3805  048B                     l702:	
  3806                           
  3807                           ;main.c: 173: else
  3808                           ;main.c: 175: PB0 = 0;
  3809  048B  1006               	bcf	6,0
  3810  048C  0008               	return
  3811  048D                     __end_of_setPB0:	
  3812  048D                     __ptext1043:	
  3813 ;; =============== function _setPB2 ends ============
  3814                           
  3815                           
  3816 ;; *************** function _setPB1 *****************
  3817 ;; Defined at:
  3818 ;;		line 183 in file "C:\temp\dev\AK7030-OTP\main.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  bValue          1    wreg     unsigned char 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  bValue          1    0[BANK0 ] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;		None               void
  3825 ;; Registers used:
  3826 ;;		wreg
  3827 ;; Tracked objects:
  3828 ;;		On entry : 60/0
  3829 ;;		On exit  : 60/0
  3830 ;;		Unchanged: FFF9F/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3832 ;;      Params:         0       0       0       0       0
  3833 ;;      Locals:         0       1       0       0       0
  3834 ;;      Temps:          0       0       0       0       0
  3835 ;;      Totals:         0       1       0       0       0
  3836 ;;Total ram usage:        1 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    2
  3839 ;; This function calls:
  3840 ;;		Nothing
  3841 ;; This function is called by:
  3842 ;;		_clearParaFunction1
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846  048D                     _setPB1:	
  3847                           
  3848                           ; Regs used in _setPB1: [wreg]
  3849                           ;setPB1@bValue stored from wreg
  3850  048D  00A0               	movwf	setPB1@bValue
  3851                           
  3852                           ;main.c: 184: if( bValue )
  3853  048E  0820               	movf	setPB1@bValue,w
  3854  048F  1903               	btfsc	3,2
  3855  0490  2C93               	goto	l707
  3856                           
  3857                           ;main.c: 186: PB1 = 1;
  3858  0491  1486               	bsf	6,1
  3859  0492  0008               	return
  3860  0493                     l707:	
  3861                           
  3862                           ;main.c: 190: else
  3863                           ;main.c: 192: PB1 = 0;
  3864  0493  1086               	bcf	6,1
  3865  0494  0008               	return
  3866  0495                     __end_of_setPB1:	
  3867  0495                     __ptext1042:	
  3868 ;; =============== function _setPA0 ends ============
  3869                           
  3870                           
  3871 ;; *************** function _setPB2 *****************
  3872 ;; Defined at:
  3873 ;;		line 200 in file "C:\temp\dev\AK7030-OTP\main.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  bValue          1    wreg     unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  bValue          1    0[BANK0 ] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;		None               void
  3880 ;; Registers used:
  3881 ;;		wreg
  3882 ;; Tracked objects:
  3883 ;;		On entry : 60/0
  3884 ;;		On exit  : 60/0
  3885 ;;		Unchanged: FFF9F/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       0       0       0       0
  3888 ;;      Locals:         0       1       0       0       0
  3889 ;;      Temps:          0       0       0       0       0
  3890 ;;      Totals:         0       1       0       0       0
  3891 ;;Total ram usage:        1 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    2
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_clearParaFunction1
  3898 ;;		_main
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901  0495                     _setPB2:	
  3902                           
  3903                           ; Regs used in _setPB2: [wreg]
  3904                           ;setPB2@bValue stored from wreg
  3905  0495  00A0               	movwf	setPB2@bValue
  3906                           
  3907                           ;main.c: 201: if( bValue )
  3908  0496  0820               	movf	setPB2@bValue,w
  3909  0497  1903               	btfsc	3,2
  3910  0498  2C9B               	goto	l712
  3911                           
  3912                           ;main.c: 203: PB2 = 1;
  3913  0499  1506               	bsf	6,2
  3914  049A  0008               	return
  3915  049B                     l712:	
  3916                           
  3917                           ;main.c: 207: else
  3918                           ;main.c: 209: PB2 = 0;
  3919  049B  1106               	bcf	6,2
  3920  049C  0008               	return
  3921  049D                     __end_of_setPB2:	
  3922  049D                     __ptext1041:	
  3923 ;; =============== function _setPA1 ends ============
  3924                           
  3925                           
  3926 ;; *************** function _setPA0 *****************
  3927 ;; Defined at:
  3928 ;;		line 217 in file "C:\temp\dev\AK7030-OTP\main.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  bValue          1    wreg     unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  bValue          1    0[BANK0 ] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;		None               void
  3935 ;; Registers used:
  3936 ;;		wreg
  3937 ;; Tracked objects:
  3938 ;;		On entry : 40/0
  3939 ;;		On exit  : 60/0
  3940 ;;		Unchanged: FFF9F/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         0       0       0       0       0
  3943 ;;      Locals:         0       1       0       0       0
  3944 ;;      Temps:          0       0       0       0       0
  3945 ;;      Totals:         0       1       0       0       0
  3946 ;;Total ram usage:        1 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    2
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_clearParaFunction1
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956  049D                     _setPA0:	
  3957                           
  3958                           ; Regs used in _setPA0: [wreg]
  3959                           ;setPA0@bValue stored from wreg
  3960  049D  1283               	bcf	3,5	;RP0=0, select bank0
  3961  049E  00A0               	movwf	setPA0@bValue
  3962                           
  3963                           ;main.c: 218: if( bValue )
  3964  049F  0820               	movf	setPA0@bValue,w
  3965  04A0  1903               	btfsc	3,2
  3966  04A1  2CA4               	goto	l717
  3967                           
  3968                           ;main.c: 220: PA0 = 1;
  3969  04A2  1405               	bsf	5,0
  3970  04A3  0008               	return
  3971  04A4                     l717:	
  3972                           
  3973                           ;main.c: 224: else
  3974                           ;main.c: 226: PA0 = 0;
  3975  04A4  1005               	bcf	5,0
  3976  04A5  0008               	return
  3977  04A6                     __end_of_setPA0:	
  3978  04A6                     __ptext1040:	
  3979 ;; =============== function _setPA2 ends ============
  3980                           
  3981                           
  3982 ;; *************** function _setPA1 *****************
  3983 ;; Defined at:
  3984 ;;		line 234 in file "C:\temp\dev\AK7030-OTP\main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  bValue          1    wreg     unsigned char 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  bValue          1    0[BANK0 ] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg
  3993 ;; Tracked objects:
  3994 ;;		On entry : 60/0
  3995 ;;		On exit  : 60/0
  3996 ;;		Unchanged: FFF9F/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3998 ;;      Params:         0       0       0       0       0
  3999 ;;      Locals:         0       1       0       0       0
  4000 ;;      Temps:          0       0       0       0       0
  4001 ;;      Totals:         0       1       0       0       0
  4002 ;;Total ram usage:        1 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    2
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_clearParaFunction1
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012  04A6                     _setPA1:	
  4013                           
  4014                           ; Regs used in _setPA1: [wreg]
  4015                           ;setPA1@bValue stored from wreg
  4016  04A6  00A0               	movwf	setPA1@bValue
  4017                           
  4018                           ;main.c: 235: if( bValue )
  4019  04A7  0820               	movf	setPA1@bValue,w
  4020  04A8  1903               	btfsc	3,2
  4021  04A9  2CAC               	goto	l722
  4022                           
  4023                           ;main.c: 237: PA1 = 1;
  4024  04AA  1485               	bsf	5,1
  4025  04AB  0008               	return
  4026  04AC                     l722:	
  4027                           
  4028                           ;main.c: 241: else
  4029                           ;main.c: 243: PA1 = 0;
  4030  04AC  1085               	bcf	5,1
  4031  04AD  0008               	return
  4032  04AE                     __end_of_setPA1:	
  4033  04AE                     __ptext1014:	
  4034 ;; =============== function _getAdOriginalCh0Value ends ============
  4035                           
  4036                           
  4037 ;; *************** function _clearAllTimer *****************
  4038 ;; Defined at:
  4039 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\main.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;		None               void
  4046 ;; Registers used:
  4047 ;;		status,2, status,0, pclath, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 40/20
  4050 ;;		On exit  : 60/0
  4051 ;;		Unchanged: FFF9F/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4053 ;;      Params:         0       0       0       0       0
  4054 ;;      Locals:         0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0
  4056 ;;      Totals:         0       0       0       0       0
  4057 ;;Total ram usage:        0 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    3
  4060 ;; This function calls:
  4061 ;;		_clearTwelveHoursTimer
  4062 ;;		_clearThreeHoursTimer
  4063 ;;		_clearTwentySecondsTimer
  4064 ;;		_clearTwentyMinuteTimer
  4065 ;; This function is called by:
  4066 ;;		_clearPinPortAndTimer
  4067 ;;		_clearParaFunction1
  4068 ;;		_main
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071  04AE                     _clearAllTimer:	
  4072  04AE                     l4743:	
  4073                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  4074                           
  4075                           
  4076                           ;main.c: 101: clearTwelveHoursTimer();
  4077  04AE  24B5  118A         	fcall	_clearTwelveHoursTimer
  4078                           
  4079                           ;main.c: 102: clearThreeHoursTimer();
  4080  04B0  24BB  118A         	fcall	_clearThreeHoursTimer
  4081                           
  4082                           ;main.c: 103: clearTwentySecondsTimer();
  4083  04B2  26C7  118A         	fcall	_clearTwentySecondsTimer
  4084                           
  4085                           ;main.c: 104: clearTwentyMinuteTimer();
  4086  04B4  2ECF               	ljmp	l4413
  4087  04B5                     __end_of_clearAllTimer:	
  4088  04B5                     __ptext1049:	
  4089 ;; =============== function _clearThreeHoursTimer ends ============
  4090                           
  4091                           
  4092 ;; *************** function _clearTwelveHoursTimer *****************
  4093 ;; Defined at:
  4094 ;;		line 406 in file "C:\temp\dev\AK7030-OTP\common.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;		None               void
  4101 ;; Registers used:
  4102 ;;		status,2
  4103 ;; Tracked objects:
  4104 ;;		On entry : 40/20
  4105 ;;		On exit  : 60/0
  4106 ;;		Unchanged: FFF9F/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    2
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_clearAllTimer
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121  04B5                     _clearTwelveHoursTimer:	
  4122                           
  4123                           ;common.c: 407: uiBigTimer = 0;
  4124                           
  4125                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4126  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  4127  04B6  01A0               	clrf	_uiBigTimer^(0+128)
  4128  04B7  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  4129                           
  4130                           ;common.c: 408: bBigTimerStartFlag = 0;
  4131  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  4132  04B9  01CC               	clrf	_bBigTimerStartFlag
  4133  04BA  0008               	return
  4134  04BB                     __end_of_clearTwelveHoursTimer:	
  4135  04BB                     __ptext1048:	
  4136 ;; =============== function _clearTwentySecondsTimer ends ============
  4137                           
  4138                           
  4139 ;; *************** function _clearThreeHoursTimer *****************
  4140 ;; Defined at:
  4141 ;;		line 413 in file "C:\temp\dev\AK7030-OTP\common.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		status,2
  4150 ;; Tracked objects:
  4151 ;;		On entry : 60/0
  4152 ;;		On exit  : 60/0
  4153 ;;		Unchanged: FFF9F/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0
  4158 ;;      Totals:         0       0       0       0       0
  4159 ;;Total ram usage:        0 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    2
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_clearAllTimer
  4166 ;;		_main
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169  04BB                     _clearThreeHoursTimer:	
  4170                           
  4171                           ;common.c: 414: uiSmallTimer = 0;
  4172                           
  4173                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4174  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  4175  04BC  01A2               	clrf	_uiSmallTimer^(0+128)
  4176  04BD  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  4177                           
  4178                           ;common.c: 415: bSmallTimerStartFlag = 0;
  4179  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  4180  04BF  01CD               	clrf	_bSmallTimerStartFlag
  4181  04C0  0008               	return
  4182  04C1                     __end_of_clearThreeHoursTimer:	
  4183  04C1                     __ptext1010:	
  4184 ;; =============== function _getAdOriginalCh2Value ends ============
  4185                           
  4186                           
  4187 ;; *************** function _vHandle20sTimerOut *****************
  4188 ;; Defined at:
  4189 ;;		line 2488 in file "C:\temp\dev\AK7030-OTP\main.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  bClearStep      1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  bClearStep      1    1[BANK0 ] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;		None               void
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 60/20
  4201 ;;		Unchanged: FFF9F/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         0       0       0       0       0
  4204 ;;      Locals:         0       1       0       0       0
  4205 ;;      Temps:          0       0       0       0       0
  4206 ;;      Totals:         0       1       0       0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    3
  4210 ;; This function calls:
  4211 ;;		_setPA3
  4212 ;;		_setPB4
  4213 ;;		_setPB6
  4214 ;;		_setPB6AsInput
  4215 ;;		_clearTwentySecondsTimer
  4216 ;; This function is called by:
  4217 ;;		_main
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220  04C1                     _vHandle20sTimerOut:	
  4221                           
  4222                           ; Regs used in _vHandle20sTimerOut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4223                           ;vHandle20sTimerOut@bClearStep stored from wreg
  4224  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  4225  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  4226  04C3  00A1               	movwf	vHandle20sTimerOut@bClearStep
  4227                           
  4228                           ;main.c: 2489: static unsigned char ucTimerOnBehaviorStep = 0;
  4229                           ;main.c: 2491: static unsigned char ucTimeCnt = 0;
  4230                           ;main.c: 2493: if( 1 == bClearStep)
  4231  04C4  0B21               	decfsz	vHandle20sTimerOut@bClearStep,w
  4232  04C5  2D01               	goto	l4807
  4233                           
  4234                           ;main.c: 2496: ucTimerOnBehaviorStep = 0;
  4235  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  4236  04C7  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4237                           
  4238                           ;main.c: 2497: ucTimeCnt = 0;
  4239  04C8  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4240  04C9  2D01               	goto	l4807
  4241  04CA                     l4761:	
  4242                           
  4243                           ;main.c: 2503: {
  4244                           ;main.c: 2508: setPA3(0);
  4245  04CA  3000               	movlw	0
  4246  04CB  2608  118A         	fcall	_setPA3
  4247                           
  4248                           ;main.c: 2509: setPB4(0);
  4249  04CD  3000               	movlw	0
  4250  04CE  2514  118A         	fcall	_setPB4
  4251                           
  4252                           ;main.c: 2510: setPB6(1);
  4253  04D0  3001               	movlw	1
  4254  04D1  261A               	fcall	_setPB6
  4255                           
  4256                           ;main.c: 2511: ucTimeCnt = 0;
  4257  04D2  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4258                           
  4259                           ;main.c: 2512: ucTimerOnBehaviorStep = 1;
  4260  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  4261  04D4  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4262  04D5  0AB8               	incf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),f
  4263                           
  4264                           ;main.c: 2513: break;
  4265  04D6  0008               	return
  4266  04D7                     l4767:	
  4267  04D7  300A               	movlw	10
  4268                           
  4269                           ;main.c: 2517: {
  4270                           ;main.c: 2521: ucTimeCnt++;
  4271  04D8  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4272                           
  4273                           ;main.c: 2523: if( ucTimeCnt >= 10)
  4274  04D9  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4275  04DA  1C03               	skipc
  4276  04DB  0008               	return
  4277  04DC  3002               	movlw	2
  4278                           
  4279                           ;main.c: 2524: {
  4280                           ;main.c: 2525: ucTimeCnt = 0;
  4281  04DD  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4282                           
  4283                           ;main.c: 2526: ucTimerOnBehaviorStep = 2;
  4284  04DE  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4285  04DF  0008               	return
  4286  04E0                     l4775:	
  4287                           
  4288                           ;main.c: 2532: {
  4289                           ;main.c: 2536: ucTimeCnt++;
  4290  04E0  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4291                           
  4292                           ;main.c: 2538: if( ucTimeCnt >= 1)
  4293  04E1  087D               	movf	vHandle20sTimerOut@ucTimeCnt,w
  4294  04E2  1903               	btfsc	3,2
  4295  04E3  0008               	return
  4296  04E4  3003               	movlw	3
  4297                           
  4298                           ;main.c: 2539: {
  4299                           ;main.c: 2540: ucTimeCnt = 0;
  4300  04E5  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4301                           
  4302                           ;main.c: 2542: ucTimerOnBehaviorStep = 3;
  4303  04E6  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4304  04E7  0008               	return
  4305  04E8                     l4783:	
  4306                           
  4307                           ;main.c: 2548: {
  4308                           ;main.c: 2552: setPA3(1);
  4309  04E8  3001               	movlw	1
  4310  04E9  2608  118A         	fcall	_setPA3
  4311                           
  4312                           ;main.c: 2553: setPB4(1);
  4313  04EB  3001               	movlw	1
  4314  04EC  2514  118A         	fcall	_setPB4
  4315                           
  4316                           ;main.c: 2555: setPB6AsInput();
  4317  04EE  2628               	fcall	_setPB6AsInput
  4318  04EF  3004               	movlw	4
  4319                           
  4320                           ;main.c: 2556: ucTimeCnt = 0;
  4321  04F0  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4322                           
  4323                           ;main.c: 2558: ucTimerOnBehaviorStep = 4;
  4324  04F1  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4325                           
  4326                           ;main.c: 2559: break;
  4327  04F2  0008               	return
  4328  04F3                     l4791:	
  4329  04F3  3002               	movlw	2
  4330                           
  4331                           ;main.c: 2562: {
  4332                           ;main.c: 2566: ucTimeCnt++;
  4333  04F4  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4334                           
  4335                           ;main.c: 2568: if( ucTimeCnt >= 2)
  4336  04F5  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4337  04F6  1C03               	skipc
  4338  04F7  0008               	return
  4339                           
  4340                           ;main.c: 2569: {
  4341                           ;main.c: 2570: clearTwentySecondsTimer();
  4342  04F8  26C7               	fcall	_clearTwentySecondsTimer
  4343                           
  4344                           ;main.c: 2572: ucTimeCnt = 0;
  4345  04F9  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4346                           
  4347                           ;main.c: 2574: ucADC4_Step = ADC4_STEP_INIT;
  4348  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  4349  04FB  3003               	movlw	3
  4350  04FC  01D3               	clrf	_ucADC4_Step
  4351                           
  4352                           ;main.c: 2576: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4353  04FD  00D0               	movwf	_enumMainLoopStep
  4354                           
  4355                           ;main.c: 2578: ucTimerOnBehaviorStep = 0;
  4356  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  4357  04FF  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4358  0500  0008               	return
  4359  0501                     l4807:	
  4360  0501  1683               	bsf	3,5	;RP0=1, select bank1
  4361  0502  0838               	movf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),w
  4362                           
  4363                           ; Switch size 1, requested type "space"
  4364                           ; Number of cases is 5, Range of values is 0 to 4
  4365                           ; switch strategies available:
  4366                           ; Name         Instructions Cycles
  4367                           ; simple_byte           16     9 (average)
  4368                           ; direct_byte           17     7 (fixed)
  4369                           ; jumptable            260     6 (fixed)
  4370                           ; rangetable             9     6 (fixed)
  4371                           ; spacedrange           16     9 (fixed)
  4372                           ; locatedrange           5     3 (fixed)
  4373                           ;	Chosen strategy is simple_byte
  4374  0503  3A00               	xorlw	0	; case 0
  4375  0504  1903               	skipnz
  4376  0505  2CCA               	goto	l4761
  4377  0506  3A01               	xorlw	1	; case 1
  4378  0507  1903               	skipnz
  4379  0508  2CD7               	goto	l4767
  4380  0509  3A03               	xorlw	3	; case 2
  4381  050A  1903               	skipnz
  4382  050B  2CE0               	goto	l4775
  4383  050C  3A01               	xorlw	1	; case 3
  4384  050D  1903               	skipnz
  4385  050E  2CE8               	goto	l4783
  4386  050F  3A07               	xorlw	7	; case 4
  4387  0510  1903               	skipnz
  4388  0511  2CF3               	goto	l4791
  4389  0512  2D13               	goto	l1128
  4390  0513                     l1128:	
  4391  0513  0008               	return
  4392  0514                     __end_of_vHandle20sTimerOut:	
  4393  0514                     __ptext1036:	
  4394 ;; =============== function _setPA6 ends ============
  4395                           
  4396                           
  4397 ;; *************** function _setPB4 *****************
  4398 ;; Defined at:
  4399 ;;		line 310 in file "C:\temp\dev\AK7030-OTP\main.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  bValue          1    wreg     unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  bValue          1    0[BANK0 ] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg
  4408 ;; Tracked objects:
  4409 ;;		On entry : 60/0
  4410 ;;		On exit  : 60/0
  4411 ;;		Unchanged: FFF9F/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       0       0       0       0
  4414 ;;      Locals:         0       1       0       0       0
  4415 ;;      Temps:          0       0       0       0       0
  4416 ;;      Totals:         0       1       0       0       0
  4417 ;;Total ram usage:        1 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    2
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_clearParaFunction1
  4424 ;;		_main
  4425 ;;		_vHandle20sTimerOut
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428  0514                     _setPB4:	
  4429                           
  4430                           ; Regs used in _setPB4: [wreg]
  4431                           ;setPB4@bValue stored from wreg
  4432  0514  00A0               	movwf	setPB4@bValue
  4433                           
  4434                           ;main.c: 311: if( bValue )
  4435  0515  0820               	movf	setPB4@bValue,w
  4436  0516  1903               	btfsc	3,2
  4437  0517  2D1A               	goto	l742
  4438                           
  4439                           ;main.c: 313: PB4 = 1;
  4440  0518  1606               	bsf	6,4
  4441  0519  0008               	return
  4442  051A                     l742:	
  4443                           
  4444                           ;main.c: 317: else
  4445                           ;main.c: 319: PB4 = 0;
  4446  051A  1206               	bcf	6,4
  4447  051B  0008               	return
  4448  051C                     __end_of_setPB4:	
  4449  051C                     __ptext1004:	
  4450 ;; =============== function _main ends ============
  4451                           
  4452                           
  4453 ;; *************** function _vHandle20sTimeron *****************
  4454 ;; Defined at:
  4455 ;;		line 2211 in file "C:\temp\dev\AK7030-OTP\main.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;		None               void
  4462 ;; Registers used:
  4463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 160/0
  4466 ;;		On exit  : 140/0
  4467 ;;		Unchanged: FFE00/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4469 ;;      Params:         0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    4
  4476 ;; This function calls:
  4477 ;;		_getAdOriginalCh2Value
  4478 ;;		_getAdOriginalCh6Value
  4479 ;;		_vPause20sTimer
  4480 ;;		_setPA3
  4481 ;;		_setPB6
  4482 ;;		_setPB6AsInput
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487  051C                     _vHandle20sTimeron:	
  4488                           
  4489                           ;main.c: 2212: enum enum_waiting_loop_step
  4490                           ;main.c: 2213: {
  4491                           ;main.c: 2214: WAITING_LOOP_STEP1 = 0,
  4492                           ;main.c: 2215: WAITING_LOOP_STEP2,
  4493                           ;main.c: 2216: WAITING_LOOP_STEP3,
  4494                           ;main.c: 2217: WAITING_LOOP_STEP4,
  4495                           ;main.c: 2218: WAITING_LOOP_STEP5,
  4496                           ;main.c: 2219: WAITING_LOOP_STEP6,
  4497                           ;main.c: 2220: WAITING_LOOP_STEP7,
  4498                           ;main.c: 2221: WAITING_LOOP_STEP8,
  4499                           ;main.c: 2222: WAITING_LOOP_STEP9,
  4500                           ;main.c: 2223: };
  4501                           ;main.c: 2225: enum enumCmpStep
  4502                           ;main.c: 2226: {
  4503                           ;main.c: 2227: COMPARE_STEP0 = 0,
  4504                           ;main.c: 2228: COMPARE_STEP1,
  4505                           ;main.c: 2229: COMPARE_STEP2,
  4506                           
  4507                           ; Regs used in _vHandle20sTimeron: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4508  051C  2DE9               	goto	l4991
  4509  051D                     l4857:	
  4510                           
  4511                           ;main.c: 2246: {
  4512                           ;main.c: 2247: if((getAdOriginalCh2Value() > 1950))
  4513  051D  25FF  118A         	fcall	_getAdOriginalCh2Value
  4514  051F  3007               	movlw	7
  4515  0520  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4516  0521  309F               	movlw	159
  4517  0522  1903               	skipnz
  4518  0523  0246               	subwf	?_getAdOriginalCh2Value,w
  4519  0524  1C03               	skipc
  4520  0525  2D2A               	goto	l4863
  4521                           
  4522                           ;main.c: 2248: {
  4523                           ;main.c: 2249: ucTimerCntMore++;
  4524  0526  1683               	bsf	3,5	;RP0=1, select bank1
  4525  0527  0AC0               	incf	vHandle20sTimeron@ucTimerCntMore^(0+128),f
  4526                           
  4527                           ;main.c: 2250: ucTimerCntLess = 0;
  4528  0528  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4529                           
  4530                           ;main.c: 2251: }
  4531  0529  2D2D               	goto	l4867
  4532  052A                     l4863:	
  4533                           
  4534                           ;main.c: 2252: else
  4535                           ;main.c: 2253: {
  4536                           ;main.c: 2254: ucTimerCntLess++;
  4537  052A  1683               	bsf	3,5	;RP0=1, select bank1
  4538  052B  0ABF               	incf	vHandle20sTimeron@ucTimerCntLess^(0+128),f
  4539                           
  4540                           ;main.c: 2255: ucTimerCntMore = 0;
  4541  052C  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4542  052D                     l4867:	
  4543                           
  4544                           ;main.c: 2256: }
  4545                           ;main.c: 2258: if(ucTimerCntMore >= 2)
  4546  052D  3002               	movlw	2
  4547  052E  0240               	subwf	vHandle20sTimeron@ucTimerCntMore^(0+128),w
  4548  052F  1C03               	skipc
  4549  0530  2D34               	goto	l4873
  4550                           
  4551                           ;main.c: 2259: {
  4552                           ;main.c: 2260: ucCompareStep = COMPARE_STEP1;
  4553  0531  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4554  0532  0AB9               	incf	vHandle20sTimeron@ucCompareStep^(0+128),f
  4555                           
  4556                           ;main.c: 2261: ucTimerCntMore = 0;
  4557  0533  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4558  0534                     l4873:	
  4559                           
  4560                           ;main.c: 2262: }
  4561                           ;main.c: 2264: if(ucTimerCntLess >= 2)
  4562  0534  3002               	movlw	2
  4563  0535  023F               	subwf	vHandle20sTimeron@ucTimerCntLess^(0+128),w
  4564  0536  1C03               	skipc
  4565  0537  2DF5               	goto	l4993
  4566                           
  4567                           ;main.c: 2265: {
  4568                           ;main.c: 2266: ucCompareStep = COMPARE_STEP2;
  4569  0538  3002               	movlw	2
  4570  0539  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4571                           
  4572                           ;main.c: 2267: ucTimerCntLess = 0;
  4573  053A  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4574  053B  2DF5               	goto	l4993
  4575  053C                     l4879:	
  4576                           
  4577                           ;main.c: 2276: {
  4578                           ;main.c: 2277: static unsigned char ucMoreThanP8sCnt = 0;
  4579                           ;main.c: 2279: static unsigned char ucLessThanP8sCnt = 0;
  4580                           ;main.c: 2281: static unsigned char ucTimerCntN1 = 0;
  4581                           ;main.c: 2283: if((getAdOriginalCh2Value() < 1950))
  4582  053C  25FF  118A         	fcall	_getAdOriginalCh2Value
  4583  053E  3007               	movlw	7
  4584  053F  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4585  0540  309E               	movlw	158
  4586  0541  1903               	skipnz
  4587  0542  0246               	subwf	?_getAdOriginalCh2Value,w
  4588  0543  1803               	skipnc
  4589  0544  2D51               	goto	l4895
  4590                           
  4591                           ;main.c: 2284: {
  4592                           ;main.c: 2285: ucTimerCntN1++;
  4593  0545  1683               	bsf	3,5	;RP0=1, select bank1
  4594  0546  3002               	movlw	2
  4595  0547  0AC1               	incf	vHandle20sTimeron@ucTimerCntN1^(0+128),f
  4596                           
  4597                           ;main.c: 2286: if(ucTimerCntN1 >= 2)
  4598  0548  0241               	subwf	vHandle20sTimeron@ucTimerCntN1^(0+128),w
  4599  0549  1C03               	skipc
  4600  054A  2DF5               	goto	l4993
  4601  054B  3002               	movlw	2
  4602                           
  4603                           ;main.c: 2287: {
  4604                           ;main.c: 2288: ucTimerCntN1 = 0;
  4605  054C  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4606                           
  4607                           ;main.c: 2289: ucCompareStep = COMPARE_STEP2;
  4608  054D  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4609                           
  4610                           ;main.c: 2291: ucLessThanP8sCnt = 0;
  4611  054E  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4612                           
  4613                           ;main.c: 2293: ucMoreThanP8sCnt = 0;
  4614  054F  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4615  0550  2DF5               	goto	l4993
  4616  0551                     l4895:	
  4617                           
  4618                           ;main.c: 2297: else
  4619                           ;main.c: 2298: ucTimerCntN1 = 0;
  4620  0551  1683               	bsf	3,5	;RP0=1, select bank1
  4621  0552  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4622                           
  4623                           ;main.c: 2304: if((getAdOriginalCh6Value() < 50))
  4624  0553  2611  118A         	fcall	_getAdOriginalCh6Value
  4625  0555  3000               	movlw	0
  4626  0556  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4627  0557  3032               	movlw	50
  4628  0558  1903               	skipnz
  4629  0559  0246               	subwf	?_getAdOriginalCh6Value,w
  4630  055A  1803               	skipnc
  4631  055B  2D60               	goto	l4903
  4632                           
  4633                           ;main.c: 2305: {
  4634                           ;main.c: 2306: ucLessThanP8sCnt++;
  4635  055C  1683               	bsf	3,5	;RP0=1, select bank1
  4636  055D  0ABB               	incf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),f
  4637                           
  4638                           ;main.c: 2307: ucMoreThanP8sCnt = 0;
  4639  055E  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4640                           
  4641                           ;main.c: 2308: }
  4642  055F  2D63               	goto	l4907
  4643  0560                     l4903:	
  4644                           
  4645                           ;main.c: 2309: else
  4646                           ;main.c: 2310: {
  4647                           ;main.c: 2311: ucMoreThanP8sCnt++;
  4648  0560  1683               	bsf	3,5	;RP0=1, select bank1
  4649  0561  0ABD               	incf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),f
  4650                           
  4651                           ;main.c: 2312: ucLessThanP8sCnt = 0;
  4652  0562  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4653  0563                     l4907:	
  4654                           
  4655                           ;main.c: 2313: }
  4656                           ;main.c: 2315: if( ucLessThanP8sCnt >= 8)
  4657  0563  3008               	movlw	8
  4658  0564  023B               	subwf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),w
  4659  0565  1C03               	skipc
  4660  0566  2D6D               	goto	l4913
  4661                           
  4662                           ;main.c: 2316: {
  4663                           ;main.c: 2317: ucLessThanP8sCnt = 0;
  4664  0567  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4665                           
  4666                           ;main.c: 2318: ucMoreThanP8sCnt = 0;
  4667  0568  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4668                           
  4669                           ;main.c: 2320: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4670  0569  1283               	bcf	3,5	;RP0=0, select bank0
  4671  056A  01D0               	clrf	_enumMainLoopStep
  4672  056B  0AD0               	incf	_enumMainLoopStep,f
  4673  056C  2D76               	goto	L16
  4674  056D                     l4913:	
  4675                           ;main.c: 2324: ;
  4676                           ;main.c: 2325: }
  4677                           
  4678                           ;main.c: 2323: ucCompareStep = COMPARE_STEP0;
  4679                           
  4680                           ;main.c: 2321: ucADC4_Step = ADC4_STEP_INIT;
  4681                           
  4682                           
  4683                           ;main.c: 2326: else if( ucMoreThanP8sCnt >= 8 )
  4684  056D  3008               	movlw	8
  4685  056E  023D               	subwf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),w
  4686  056F  1C03               	skipc
  4687  0570  2DF5               	goto	l4993
  4688  0571  3003               	movlw	3
  4689                           
  4690                           ;main.c: 2327: {
  4691                           ;main.c: 2328: ucLessThanP8sCnt = 0;
  4692  0572  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4693                           
  4694                           ;main.c: 2329: ucMoreThanP8sCnt = 0;
  4695  0573  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4696                           
  4697                           ;main.c: 2331: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4698  0574  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0575  00D0               	movwf	_enumMainLoopStep
  4700  0576                     L16:	
  4701                           
  4702                           ;main.c: 2332: ucADC4_Step = ADC4_STEP_INIT;
  4703  0576  01D3               	clrf	_ucADC4_Step
  4704  0577                     l4921:	
  4705                           
  4706                           ;main.c: 2334: ucCompareStep = COMPARE_STEP0;
  4707  0577  1683               	bsf	3,5	;RP0=1, select bank1
  4708  0578  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4709                           
  4710                           ;main.c: 2335: ;
  4711                           ;main.c: 2336: }
  4712  0579  2DF5               	goto	l4993
  4713  057A                     l4923:	
  4714                           
  4715                           ;main.c: 2359: {
  4716                           ;main.c: 2363: vPause20sTimer(1);
  4717  057A  3001               	movlw	1
  4718  057B  262B  118A         	fcall	_vPause20sTimer
  4719  057D  3000               	movlw	0
  4720                           
  4721                           ;main.c: 2364: ucTimeCntP2s = 0;
  4722  057E  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4723                           
  4724                           ;main.c: 2365: setPA3(0);
  4725  057F  2608  118A         	fcall	_setPA3
  4726                           
  4727                           ;main.c: 2366: setPB6(1);
  4728  0581  3001               	movlw	1
  4729  0582  261A  118A         	fcall	_setPB6
  4730                           
  4731                           ;main.c: 2367: waitLoopStep = WAITING_LOOP_STEP2;
  4732  0584  1683               	bsf	3,5	;RP0=1, select bank1
  4733  0585  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4734  0586  0AC3               	incf	vHandle20sTimeron@waitLoopStep^(0+128),f
  4735                           
  4736                           ;main.c: 2368: break;
  4737  0587  2DF5               	goto	l4993
  4738  0588                     l4933:	
  4739                           
  4740                           ;main.c: 2372: {
  4741                           ;main.c: 2376: if((getAdOriginalCh2Value() > 2300))
  4742  0588  25FF  118A         	fcall	_getAdOriginalCh2Value
  4743  058A  3008               	movlw	8
  4744  058B  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4745  058C  30FD               	movlw	253
  4746  058D  1903               	skipnz
  4747  058E  0246               	subwf	?_getAdOriginalCh2Value,w
  4748  058F  1C03               	skipc
  4749  0590  2D94               	goto	l4937
  4750                           
  4751                           ;main.c: 2377: {
  4752                           ;main.c: 2378: ucTimeCntP2s++;
  4753  0591  1683               	bsf	3,5	;RP0=1, select bank1
  4754  0592  0ABE               	incf	vHandle20sTimeron@ucTimeCntP2s^(0+128),f
  4755                           
  4756                           ;main.c: 2379: }
  4757  0593  2D96               	goto	l4939
  4758  0594                     l4937:	
  4759                           
  4760                           ;main.c: 2380: else
  4761                           ;main.c: 2381: ucTimeCntP2s = 0;
  4762  0594  1683               	bsf	3,5	;RP0=1, select bank1
  4763  0595  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4764  0596                     l4939:	
  4765                           
  4766                           ;main.c: 2383: if( ucTimeCntP2s >= 2)
  4767  0596  3002               	movlw	2
  4768  0597  023E               	subwf	vHandle20sTimeron@ucTimeCntP2s^(0+128),w
  4769  0598  1C03               	skipc
  4770  0599  2DF5               	goto	l4993
  4771  059A  3002               	movlw	2
  4772                           
  4773                           ;main.c: 2384: {
  4774                           ;main.c: 2385: ucTimeCntP2s = 0;
  4775  059B  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4776                           
  4777                           ;main.c: 2386: waitLoopStep = WAITING_LOOP_STEP3;
  4778  059C  2DAC               	goto	L15
  4779  059D                     l4945:	
  4780                           
  4781                           ;main.c: 2392: {
  4782                           ;main.c: 2396: setPA3(1);
  4783  059D  3001               	movlw	1
  4784  059E  2608  118A         	fcall	_setPA3
  4785                           
  4786                           ;main.c: 2398: setPB6AsInput();
  4787  05A0  2628  118A         	fcall	_setPB6AsInput
  4788                           
  4789                           ;main.c: 2399: waitLoopStep = WAITING_LOOP_STEP4;
  4790  05A2  3003               	movlw	3
  4791  05A3  2DAC               	goto	L15
  4792  05A4                     l4949:	
  4793                           ;main.c: 2400: break;
  4794                           
  4795                           
  4796                           ;main.c: 2404: {
  4797                           ;main.c: 2408: static unsigned char ucTimerCntP5s = 0;
  4798                           ;main.c: 2409: if( ucTimerCntP5s < 5)
  4799  05A4  3005               	movlw	5
  4800  05A5  0242               	subwf	vHandle20sTimeron@ucTimerCntP5s^(0+128),w
  4801  05A6  1803               	skipnc
  4802  05A7  2DAA               	goto	l4953
  4803                           
  4804                           ;main.c: 2410: ucTimerCntP5s++;
  4805  05A8  0AC2               	incf	vHandle20sTimeron@ucTimerCntP5s^(0+128),f
  4806  05A9  2DF5               	goto	l4993
  4807  05AA                     l4953:	
  4808  05AA  3004               	movlw	4
  4809                           
  4810                           ;main.c: 2411: else
  4811                           ;main.c: 2412: {
  4812                           ;main.c: 2413: ucTimerCntP5s = 0;
  4813  05AB  01C2               	clrf	vHandle20sTimeron@ucTimerCntP5s^(0+128)
  4814  05AC                     L15:	
  4815                           ;main.c: 2414: waitLoopStep = WAITING_LOOP_STEP5;
  4816                           
  4817  05AC  00C3               	movwf	vHandle20sTimeron@waitLoopStep^(0+128)
  4818  05AD  2DF5               	goto	l4993
  4819  05AE                     l4957:	
  4820                           
  4821                           ;main.c: 2421: {
  4822                           ;main.c: 2425: static unsigned char ucMoreThanP3sCnt = 0;
  4823                           ;main.c: 2427: static unsigned char ucLessThanP3sCnt = 0;
  4824                           ;main.c: 2428: if((getAdOriginalCh6Value() < 50))
  4825  05AE  2611  118A         	fcall	_getAdOriginalCh6Value
  4826  05B0  3000               	movlw	0
  4827  05B1  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4828  05B2  3032               	movlw	50
  4829  05B3  1903               	skipnz
  4830  05B4  0246               	subwf	?_getAdOriginalCh6Value,w
  4831  05B5  1803               	skipnc
  4832  05B6  2DBB               	goto	l4963
  4833                           
  4834                           ;main.c: 2429: {
  4835                           ;main.c: 2430: ucLessThanP3sCnt++;
  4836  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  4837  05B8  0ABA               	incf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),f
  4838                           
  4839                           ;main.c: 2431: ucMoreThanP3sCnt = 0;
  4840  05B9  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4841                           
  4842                           ;main.c: 2432: }
  4843  05BA  2DBE               	goto	l4967
  4844  05BB                     l4963:	
  4845                           
  4846                           ;main.c: 2433: else
  4847                           ;main.c: 2434: {
  4848                           ;main.c: 2435: ucMoreThanP3sCnt++;
  4849  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  4850  05BC  0ABC               	incf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),f
  4851                           
  4852                           ;main.c: 2436: ucLessThanP3sCnt = 0;
  4853  05BD  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4854  05BE                     l4967:	
  4855                           
  4856                           ;main.c: 2437: }
  4857                           ;main.c: 2439: if( ucLessThanP3sCnt >= 3)
  4858  05BE  3003               	movlw	3
  4859  05BF  023A               	subwf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),w
  4860  05C0  1C03               	skipc
  4861  05C1  2DCB               	goto	l4973
  4862                           
  4863                           ;main.c: 2440: {
  4864                           ;main.c: 2441: ucLessThanP3sCnt = 0;
  4865  05C2  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4866                           
  4867                           ;main.c: 2442: ucMoreThanP3sCnt = 0;
  4868  05C3  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4869                           
  4870                           ;main.c: 2444: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4871  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  4872  05C5  01D0               	clrf	_enumMainLoopStep
  4873  05C6  0AD0               	incf	_enumMainLoopStep,f
  4874                           
  4875                           ;main.c: 2445: ucADC4_Step = ADC4_STEP_INIT;
  4876  05C7  01D3               	clrf	_ucADC4_Step
  4877                           
  4878                           ;main.c: 2447: waitLoopStep = WAITING_LOOP_STEP1;
  4879  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  4880  05C9  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4881                           
  4882                           ;main.c: 2449: ucCompareStep = COMPARE_STEP0;
  4883  05CA  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4884  05CB                     l4973:	
  4885                           
  4886                           ;main.c: 2450: }
  4887                           ;main.c: 2452: if(ucMoreThanP3sCnt >= 3)
  4888  05CB  3003               	movlw	3
  4889  05CC  023C               	subwf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),w
  4890  05CD  1C03               	skipc
  4891  05CE  2DF5               	goto	l4993
  4892  05CF  3003               	movlw	3
  4893                           
  4894                           ;main.c: 2453: {
  4895                           ;main.c: 2454: ucLessThanP3sCnt = 0;
  4896  05D0  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4897                           
  4898                           ;main.c: 2455: ucMoreThanP3sCnt = 0;
  4899  05D1  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4900                           
  4901                           ;main.c: 2457: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4902  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  4903  05D3  00D0               	movwf	_enumMainLoopStep
  4904                           
  4905                           ;main.c: 2458: ucADC4_Step = ADC4_STEP_INIT;
  4906  05D4  01D3               	clrf	_ucADC4_Step
  4907                           
  4908                           ;main.c: 2460: waitLoopStep = WAITING_LOOP_STEP1;
  4909  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  4910  05D6  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4911  05D7  2D77               	goto	l4921
  4912  05D8                     l4987:	
  4913  05D8  0843               	movf	vHandle20sTimeron@waitLoopStep^(0+128),w
  4914                           
  4915                           ; Switch size 1, requested type "space"
  4916                           ; Number of cases is 5, Range of values is 0 to 4
  4917                           ; switch strategies available:
  4918                           ; Name         Instructions Cycles
  4919                           ; simple_byte           16     9 (average)
  4920                           ; direct_byte           17     7 (fixed)
  4921                           ; jumptable            260     6 (fixed)
  4922                           ; rangetable             9     6 (fixed)
  4923                           ; spacedrange           16     9 (fixed)
  4924                           ; locatedrange           5     3 (fixed)
  4925                           ;	Chosen strategy is simple_byte
  4926  05D9  3A00               	xorlw	0	; case 0
  4927  05DA  1903               	skipnz
  4928  05DB  2D7A               	goto	l4923
  4929  05DC  3A01               	xorlw	1	; case 1
  4930  05DD  1903               	skipnz
  4931  05DE  2D88               	goto	l4933
  4932  05DF  3A03               	xorlw	3	; case 2
  4933  05E0  1903               	skipnz
  4934  05E1  2D9D               	goto	l4945
  4935  05E2  3A01               	xorlw	1	; case 3
  4936  05E3  1903               	skipnz
  4937  05E4  2DA4               	goto	l4949
  4938  05E5  3A07               	xorlw	7	; case 4
  4939  05E6  1903               	skipnz
  4940  05E7  2DAE               	goto	l4957
  4941  05E8  2DF5               	goto	l4993
  4942  05E9                     l4991:	
  4943  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  4944  05EA  0839               	movf	vHandle20sTimeron@ucCompareStep^(0+128),w
  4945                           
  4946                           ; Switch size 1, requested type "space"
  4947                           ; Number of cases is 3, Range of values is 0 to 2
  4948                           ; switch strategies available:
  4949                           ; Name         Instructions Cycles
  4950                           ; simple_byte           10     6 (average)
  4951                           ; direct_byte           13     7 (fixed)
  4952                           ; jumptable            260     6 (fixed)
  4953                           ; rangetable             7     6 (fixed)
  4954                           ; spacedrange           12     9 (fixed)
  4955                           ; locatedrange           3     3 (fixed)
  4956                           ;	Chosen strategy is simple_byte
  4957  05EB  3A00               	xorlw	0	; case 0
  4958  05EC  1903               	skipnz
  4959  05ED  2D1D               	goto	l4857
  4960  05EE  3A01               	xorlw	1	; case 1
  4961  05EF  1903               	skipnz
  4962  05F0  2D3C               	goto	l4879
  4963  05F1  3A03               	xorlw	3	; case 2
  4964  05F2  1903               	skipnz
  4965  05F3  2DD8               	goto	l4987
  4966  05F4  2DF5               	goto	l4993
  4967  05F5                     l4993:	
  4968                           
  4969                           ;main.c: 2477: if(ADC4_STEP_INIT == ucADC4_Step)
  4970  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  4971  05F6  08D3               	movf	_ucADC4_Step,f
  4972  05F7  1D03               	skipz
  4973  05F8  0008               	return
  4974                           
  4975                           ;main.c: 2478: {
  4976                           ;main.c: 2479: ucTimerCntMore = 0;
  4977  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  4978  05FA  3000               	movlw	0
  4979  05FB  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4980                           
  4981                           ;main.c: 2480: ucTimerCntLess = 0;
  4982  05FC  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4983                           
  4984                           ;main.c: 2481: ucCompareStep = COMPARE_STEP0;
  4985  05FD  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4986                           
  4987                           ;main.c: 2483: vPause20sTimer(0);
  4988  05FE  2E2B               	ljmp	_vPause20sTimer
  4989  05FF                     __end_of_vHandle20sTimeron:	
  4990  05FF                     __ptext1009:	
  4991 ;; =============== function _AD_Sample ends ============
  4992                           
  4993                           
  4994 ;; *************** function _getAdOriginalCh2Value *****************
  4995 ;; Defined at:
  4996 ;;		line 291 in file "C:\temp\dev\AK7030-OTP\common.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  2   38[BANK0 ] unsigned int 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 140/20
  5007 ;;		On exit  : 160/0
  5008 ;;		Unchanged: FFE00/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5010 ;;      Params:         0       2       0       0       0
  5011 ;;      Locals:         0       0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0
  5013 ;;      Totals:         0       2       0       0       0
  5014 ;;Total ram usage:        2 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    3
  5017 ;; This function calls:
  5018 ;;		_Filter
  5019 ;; This function is called by:
  5020 ;;		_vHandle20sTimeron
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023  05FF                     _getAdOriginalCh2Value:	
  5024                           
  5025                           ;common.c: 293: return Filter(uiSampleChannelSecond);
  5026                           
  5027                           ; Regs used in _getAdOriginalCh2Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5028  05FF  30A8               	movlw	_uiSampleChannelSecond& (0+255)
  5029  0600  26EA  118A         	fcall	PL8	;call to abstracted procedure
  5030  0602  2630               	fcall	_Filter
  5031  0603  0821               	movf	?_Filter+1,w
  5032  0604  00C7               	movwf	?_getAdOriginalCh2Value+1
  5033  0605  0820               	movf	?_Filter,w
  5034  0606  00C6               	movwf	?_getAdOriginalCh2Value
  5035  0607  0008               	return
  5036  0608                     __end_of_getAdOriginalCh2Value:	
  5037  0608                     __ptext1038:	
  5038 ;; =============== function _setPB6 ends ============
  5039                           
  5040                           
  5041 ;; *************** function _setPA3 *****************
  5042 ;; Defined at:
  5043 ;;		line 269 in file "C:\temp\dev\AK7030-OTP\main.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  bValue          1    wreg     unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  bValue          1    0[BANK0 ] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;		None               void
  5050 ;; Registers used:
  5051 ;;		wreg
  5052 ;; Tracked objects:
  5053 ;;		On entry : 40/0
  5054 ;;		On exit  : 60/0
  5055 ;;		Unchanged: FFF9F/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5057 ;;      Params:         0       0       0       0       0
  5058 ;;      Locals:         0       1       0       0       0
  5059 ;;      Temps:          0       0       0       0       0
  5060 ;;      Totals:         0       1       0       0       0
  5061 ;;Total ram usage:        1 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    2
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_clearParaFunction1
  5068 ;;		_main
  5069 ;;		_vHandle20sTimeron
  5070 ;;		_vHandle20sTimerOut
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073  0608                     _setPA3:	
  5074                           
  5075                           ; Regs used in _setPA3: [wreg]
  5076                           ;setPA3@bValue stored from wreg
  5077  0608  1283               	bcf	3,5	;RP0=0, select bank0
  5078  0609  00A0               	movwf	setPA3@bValue
  5079                           
  5080                           ;main.c: 270: if( bValue )
  5081  060A  0820               	movf	setPA3@bValue,w
  5082  060B  1903               	btfsc	3,2
  5083  060C  2E0F               	goto	l732
  5084                           
  5085                           ;main.c: 272: PA3 = 1;
  5086  060D  1585               	bsf	5,3
  5087  060E  0008               	return
  5088  060F                     l732:	
  5089                           
  5090                           ;main.c: 276: else
  5091                           ;main.c: 278: PA3 = 0;
  5092  060F  1185               	bcf	5,3
  5093  0610  0008               	return
  5094  0611                     __end_of_setPA3:	
  5095  0611                     __ptext1012:	
  5096 ;; =============== function _getAdOriginalCh5Value ends ============
  5097                           
  5098                           
  5099 ;; *************** function _getAdOriginalCh6Value *****************
  5100 ;; Defined at:
  5101 ;;		line 282 in file "C:\temp\dev\AK7030-OTP\common.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  2   38[BANK0 ] unsigned int 
  5108 ;; Registers used:
  5109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 40/0
  5112 ;;		On exit  : 160/0
  5113 ;;		Unchanged: FFE00/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5115 ;;      Params:         0       2       0       0       0
  5116 ;;      Locals:         0       0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0
  5118 ;;      Totals:         0       2       0       0       0
  5119 ;;Total ram usage:        2 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    3
  5122 ;; This function calls:
  5123 ;;		_Filter
  5124 ;; This function is called by:
  5125 ;;		_main
  5126 ;;		_vHandle20sTimeron
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129  0611                     _getAdOriginalCh6Value:	
  5130                           
  5131                           ;common.c: 284: return Filter(uiSampleChannelSixth);
  5132                           
  5133                           ; Regs used in _getAdOriginalCh6Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5134  0611  30C0               	movlw	_uiSampleChannelSixth& (0+255)
  5135  0612  26EA  118A         	fcall	PL8	;call to abstracted procedure
  5136  0614  2630               	fcall	_Filter
  5137  0615  0821               	movf	?_Filter+1,w
  5138  0616  00C7               	movwf	?_getAdOriginalCh6Value+1
  5139  0617  0820               	movf	?_Filter,w
  5140  0618  00C6               	movwf	?_getAdOriginalCh6Value
  5141  0619  0008               	return
  5142  061A                     __end_of_getAdOriginalCh6Value:	
  5143  061A                     __ptext1037:	
  5144 ;; =============== function _setPB4 ends ============
  5145                           
  5146                           
  5147 ;; *************** function _setPB6 *****************
  5148 ;; Defined at:
  5149 ;;		line 286 in file "C:\temp\dev\AK7030-OTP\main.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  bValue          1    wreg     unsigned char 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  bValue          1    0[BANK0 ] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;		None               void
  5156 ;; Registers used:
  5157 ;;		wreg
  5158 ;; Tracked objects:
  5159 ;;		On entry : 60/0
  5160 ;;		On exit  : 60/0
  5161 ;;		Unchanged: FFF9F/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5163 ;;      Params:         0       0       0       0       0
  5164 ;;      Locals:         0       1       0       0       0
  5165 ;;      Temps:          0       0       0       0       0
  5166 ;;      Totals:         0       1       0       0       0
  5167 ;;Total ram usage:        1 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    2
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_main
  5174 ;;		_vHandle20sTimeron
  5175 ;;		_vHandle20sTimerOut
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178  061A                     _setPB6:	
  5179                           
  5180                           ; Regs used in _setPB6: [wreg]
  5181                           ;setPB6@bValue stored from wreg
  5182  061A  00A0               	movwf	setPB6@bValue
  5183                           
  5184                           ;main.c: 287: if( bValue )
  5185  061B  0820               	movf	setPB6@bValue,w
  5186  061C  1903               	btfsc	3,2
  5187  061D  2E23               	goto	l737
  5188                           
  5189                           ;main.c: 289: {
  5190                           ;main.c: 290: TRISB6 = 0;
  5191  061E  1683               	bsf	3,5	;RP0=1, select bank1
  5192  061F  1306               	bcf	6,6
  5193                           
  5194                           ;main.c: 291: PB6 = 1;
  5195  0620  1283               	bcf	3,5	;RP0=0, select bank0
  5196  0621  1706               	bsf	6,6
  5197                           
  5198                           ;main.c: 292: }
  5199  0622  0008               	return
  5200  0623                     l737:	
  5201                           
  5202                           ;main.c: 296: else
  5203                           ;main.c: 298: {
  5204                           ;main.c: 299: TRISB6 = 0;
  5205  0623  1683               	bsf	3,5	;RP0=1, select bank1
  5206  0624  1306               	bcf	6,6
  5207                           
  5208                           ;main.c: 300: PB6 = 0;
  5209  0625  1283               	bcf	3,5	;RP0=0, select bank0
  5210  0626  1306               	bcf	6,6
  5211  0627  0008               	return
  5212  0628                     __end_of_setPB6:	
  5213  0628                     __ptext1034:	
  5214 ;; =============== function _clock_config ends ============
  5215                           
  5216                           
  5217 ;; *************** function _setPB6AsInput *****************
  5218 ;; Defined at:
  5219 ;;		line 372 in file "C:\temp\dev\AK7030-OTP\main.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;		None
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;		None
  5224 ;; Return value:  Size  Location     Type
  5225 ;;		None               void
  5226 ;; Registers used:
  5227 ;;		None
  5228 ;; Tracked objects:
  5229 ;;		On entry : 60/0
  5230 ;;		On exit  : 60/20
  5231 ;;		Unchanged: FFF9F/0
  5232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5233 ;;      Params:         0       0       0       0       0
  5234 ;;      Locals:         0       0       0       0       0
  5235 ;;      Temps:          0       0       0       0       0
  5236 ;;      Totals:         0       0       0       0       0
  5237 ;;Total ram usage:        0 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    2
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_vHandle20sTimeron
  5244 ;;		_vHandle20sTimerOut
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247  0628                     _setPB6AsInput:	
  5248                           
  5249                           ;main.c: 374: TRISB6 = 1;
  5250                           
  5251                           ; Regs used in _setPB6AsInput: []
  5252  0628  1683               	bsf	3,5	;RP0=1, select bank1
  5253  0629  1706               	bsf	6,6
  5254  062A  0008               	return
  5255  062B                     __end_of_setPB6AsInput:	
  5256  062B                     __ptext1018:	
  5257 ;; =============== function _Filter ends ============
  5258                           
  5259                           
  5260 ;; *************** function _vPause20sTimer *****************
  5261 ;; Defined at:
  5262 ;;		line 59 in file "C:\temp\dev\AK7030-OTP\common.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  bValue          1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  bValue          1    0[BANK0 ] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg
  5271 ;; Tracked objects:
  5272 ;;		On entry : 140/20
  5273 ;;		On exit  : 160/20
  5274 ;;		Unchanged: FFE9F/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5276 ;;      Params:         0       0       0       0       0
  5277 ;;      Locals:         0       1       0       0       0
  5278 ;;      Temps:          0       0       0       0       0
  5279 ;;      Totals:         0       1       0       0       0
  5280 ;;Total ram usage:        1 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    2
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_vHandle20sTimeron
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289  062B                     _vPause20sTimer:	
  5290                           
  5291                           ; Regs used in _vPause20sTimer: [wreg]
  5292                           ;vPause20sTimer@bValue stored from wreg
  5293  062B  1283               	bcf	3,5	;RP0=0, select bank0
  5294  062C  00A0               	movwf	vPause20sTimer@bValue
  5295                           
  5296                           ;common.c: 60: bPause20secTimer = bValue;
  5297  062D  1683               	bsf	3,5	;RP0=1, select bank1
  5298  062E  00AE               	movwf	_bPause20secTimer^(0+128)
  5299  062F  0008               	return
  5300  0630                     __end_of_vPause20sTimer:	
  5301  0630                     __ptext1017:	
  5302 ;; =============== function _getAD_ConvertFlag ends ============
  5303                           
  5304                           
  5305 ;; *************** function _Filter *****************
  5306 ;; Defined at:
  5307 ;;		line 67 in file "C:\temp\dev\AK7030-OTP\common.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  tmpValue        2    0[BANK0 ] PTR int 
  5310 ;;		 -> uiSampleChannelSixth(24), uiSampleChannelFifth(24), uiSampleChannelSecond(24), uiSampleChannelZero(24), 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  cir             2   34[BANK0 ] int 
  5313 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  5314 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  5315 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  5316 ;;  i               1   37[BANK0 ] unsigned char 
  5317 ;;  j               1   36[BANK0 ] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  2    0[BANK0 ] unsigned int 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5322 ;; Tracked objects:
  5323 ;;		On entry : 60/0
  5324 ;;		On exit  : 160/0
  5325 ;;		Unchanged: FFE00/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5327 ;;      Params:         0       2       0       0       0
  5328 ;;      Locals:         0      32       0       0       0
  5329 ;;      Temps:          0       4       0       0       0
  5330 ;;      Totals:         0      38       0       0       0
  5331 ;;Total ram usage:       38 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    2
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_getAdOriginalCh0Value
  5338 ;;		_getAdOriginalCh5Value
  5339 ;;		_getAdOriginalCh6Value
  5340 ;;		_getAdOriginalCh2Value
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343  0630                     _Filter:	
  5344                           
  5345                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5346  0630  01C4               	clrf	Filter@j
  5347                           
  5348                           ;common.c: 71: unsigned int filter_temp = 0, filter_sum = 0;
  5349  0631  01BE               	clrf	Filter@filter_temp
  5350  0632  01BF               	clrf	Filter@filter_temp+1
  5351  0633  01C0               	clrf	Filter@filter_sum
  5352  0634  01C1               	clrf	Filter@filter_sum+1
  5353                           
  5354                           ;common.c: 73: unsigned int filter_buf[12];
  5355                           ;common.c: 75: for(int cir = 0;cir < 12; cir++)
  5356  0635  01C2               	clrf	Filter@cir
  5357  0636  01C3               	clrf	Filter@cir+1
  5358  0637                     l4597:	
  5359                           
  5360                           ;common.c: 76: filter_buf[cir] = *tmpValue++;
  5361  0637  1283               	bcf	3,5	;RP0=0, select bank0
  5362  0638  1303               	bcf	3,6	;RP1=0, select bank0
  5363  0639  0820               	movf	Filter@tmpValue,w
  5364  063A  0084               	movwf	4
  5365  063B  1783               	bsf	3,7
  5366  063C  1C21               	btfss	Filter@tmpValue+1,0
  5367  063D  1383               	bcf	3,7
  5368  063E  0800               	movf	0,w
  5369  063F  26DE  118A         	fcall	PL6	;call to abstracted procedure
  5370  0641  0D42               	rlf	Filter@cir,w
  5371  0642  3E26               	addlw	Filter@filter_buf& (0+255)
  5372  0643  0084               	movwf	4
  5373  0644  0822               	movf	??_Filter,w
  5374  0645  1383               	bcf	3,7	;select IRP bank0
  5375  0646  0080               	movwf	0
  5376  0647  0A84               	incf	4,f
  5377  0648  0823               	movf	??_Filter+1,w
  5378  0649  0080               	movwf	0
  5379  064A  3002               	movlw	2
  5380  064B  07A0               	addwf	Filter@tmpValue,f
  5381  064C  1803               	skipnc
  5382  064D  0AA1               	incf	Filter@tmpValue+1,f
  5383  064E  0AC2               	incf	Filter@cir,f
  5384  064F  1903               	skipnz
  5385  0650  0AC3               	incf	Filter@cir+1,f
  5386  0651  0843               	movf	Filter@cir+1,w
  5387  0652  3A80               	xorlw	128
  5388  0653  00FF               	movwf	127
  5389  0654  3080               	movlw	128
  5390  0655  027F               	subwf	127,w
  5391  0656  1D03               	skipz
  5392  0657  2E5A               	goto	u1715
  5393  0658  300C               	movlw	12
  5394  0659  0242               	subwf	Filter@cir,w
  5395  065A                     u1715:	
  5396  065A  1C03               	skipc
  5397  065B  2E37               	goto	l4597
  5398                           
  5399                           ;common.c: 79: for(j = 0; j < 12 - 1; j++)
  5400  065C  1283               	bcf	3,5	;RP0=0, select bank0
  5401  065D  1303               	bcf	3,6	;RP1=0, select bank0
  5402  065E  01C4               	clrf	Filter@j
  5403  065F                     l4611:	
  5404                           
  5405                           ;common.c: 80: {
  5406                           ;common.c: 81: for(i = 0; i < 12 - 1 - j; i++)
  5407  065F  01C5               	clrf	Filter@i
  5408  0660                     l4619:	
  5409  0660  01A3               	clrf	??_Filter+1
  5410  0661  0844               	movf	Filter@j,w
  5411  0662  3C0B               	sublw	11
  5412  0663  00A2               	movwf	??_Filter
  5413  0664  1C03               	skipc
  5414  0665  03A3               	decf	??_Filter+1,f
  5415  0666  0823               	movf	??_Filter+1,w
  5416  0667  3A80               	xorlw	128
  5417  0668  3C80               	sublw	128
  5418  0669  1D03               	skipz
  5419  066A  2E6D               	goto	u1735
  5420  066B  0822               	movf	??_Filter,w
  5421  066C  0245               	subwf	Filter@i,w
  5422  066D                     u1735:	
  5423  066D  1803               	btfsc	3,0
  5424  066E  2EA2               	goto	l4621
  5425                           
  5426                           ;common.c: 82: {
  5427                           ;common.c: 83: if(filter_buf[i] > filter_buf[i + 1])
  5428  066F  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0670  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0671  1003               	clrc
  5431  0672  26D4  118A         	fcall	PL4	;call to abstracted procedure
  5432  0674  26E4  118A         	fcall	PL7	;call to abstracted procedure
  5433  0676  0800               	movf	0,w
  5434  0677  00A4               	movwf	??_Filter+2
  5435  0678  0A84               	incf	4,f
  5436  0679  0800               	movf	0,w
  5437  067A  00A5               	movwf	??_Filter+3
  5438  067B  0823               	movf	??_Filter+1,w
  5439  067C  0225               	subwf	??_Filter+3,w
  5440  067D  1D03               	skipz
  5441  067E  2E81               	goto	u1725
  5442  067F  0822               	movf	??_Filter,w
  5443  0680  0224               	subwf	??_Filter+2,w
  5444  0681                     u1725:	
  5445  0681  1803               	skipnc
  5446  0682  2EA0               	goto	l4617
  5447                           
  5448                           ;common.c: 84: {
  5449                           ;common.c: 86: filter_temp = filter_buf[i];
  5450  0683  1003               	clrc
  5451  0684  0D45               	rlf	Filter@i,w
  5452  0685  3E26               	addlw	Filter@filter_buf& (0+255)
  5453  0686  0084               	movwf	4
  5454  0687  0800               	movf	0,w
  5455  0688  00BE               	movwf	Filter@filter_temp
  5456  0689  0A84               	incf	4,f
  5457  068A  0800               	movf	0,w
  5458  068B  00BF               	movwf	Filter@filter_temp+1
  5459                           
  5460                           ;common.c: 88: filter_buf[i] = filter_buf[i + 1];
  5461  068C  26E4  118A         	fcall	PL7	;call to abstracted procedure
  5462  068E  0800               	movf	0,w
  5463  068F  26DE  118A         	fcall	PL6	;call to abstracted procedure
  5464  0691  0D45               	rlf	Filter@i,w
  5465  0692  3E26               	addlw	Filter@filter_buf& (0+255)
  5466  0693  0084               	movwf	4
  5467  0694  0822               	movf	??_Filter,w
  5468  0695  0080               	movwf	0
  5469  0696  0A84               	incf	4,f
  5470  0697  0823               	movf	??_Filter+1,w
  5471  0698  0080               	movwf	0
  5472                           
  5473                           ;common.c: 90: filter_buf[i + 1] = filter_temp;
  5474  0699  26E4  118A         	fcall	PL7	;call to abstracted procedure
  5475  069B  083E               	movf	Filter@filter_temp,w
  5476  069C  0080               	movwf	0
  5477  069D  0A84               	incf	4,f
  5478  069E  083F               	movf	Filter@filter_temp+1,w
  5479  069F  0080               	movwf	0
  5480  06A0                     l4617:	
  5481  06A0  0AC5               	incf	Filter@i,f
  5482  06A1  2E60               	goto	l4619
  5483  06A2                     l4621:	
  5484  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  5485  06A3  300B               	movlw	11
  5486  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  5487  06A5  0AC4               	incf	Filter@j,f
  5488  06A6  0244               	subwf	Filter@j,w
  5489  06A7  1C03               	skipc
  5490  06A8  2E5F               	goto	l4611
  5491                           
  5492                           ;common.c: 91: }
  5493                           ;common.c: 92: }
  5494                           ;common.c: 93: }
  5495                           ;common.c: 95: for(i = 2; i < 12 - 2; i++)
  5496  06A9  3002               	movlw	2
  5497  06AA  00C5               	movwf	Filter@i
  5498                           
  5499                           ;common.c: 96: {
  5500                           ;common.c: 97: filter_sum += filter_buf[i];
  5501  06AB  1003               	clrc
  5502  06AC                     L19:	
  5503  06AC  26D4  118A         	fcall	PL4	;call to abstracted procedure
  5504  06AE  0822               	movf	??_Filter,w
  5505  06AF  07C0               	addwf	Filter@filter_sum,f
  5506  06B0  1803               	skipnc
  5507  06B1  0AC1               	incf	Filter@filter_sum+1,f
  5508  06B2  0823               	movf	??_Filter+1,w
  5509  06B3  07C1               	addwf	Filter@filter_sum+1,f
  5510  06B4  300A               	movlw	10
  5511  06B5  0AC5               	incf	Filter@i,f
  5512  06B6  0245               	subwf	Filter@i,w
  5513  06B7  1C03               	skipc
  5514  06B8  2EAC               	goto	L19
  5515                           
  5516                           ;common.c: 98: }
  5517                           ;common.c: 100: return (filter_sum >> 3);
  5518  06B9  0841               	movf	Filter@filter_sum+1,w
  5519  06BA  00A1               	movwf	?_Filter+1
  5520  06BB  0840               	movf	Filter@filter_sum,w
  5521  06BC  00A0               	movwf	?_Filter
  5522  06BD  1003               	clrc
  5523  06BE  0CA1               	rrf	?_Filter+1,f
  5524  06BF  0CA0               	rrf	?_Filter,f
  5525  06C0  1003               	clrc
  5526  06C1  0CA1               	rrf	?_Filter+1,f
  5527  06C2  0CA0               	rrf	?_Filter,f
  5528  06C3  1003               	clrc
  5529  06C4  0CA1               	rrf	?_Filter+1,f
  5530  06C5  0CA0               	rrf	?_Filter,f
  5531  06C6  0008               	return
  5532  06C7                     __end_of_Filter:	
  5533  06C7                     __ptext1047:	
  5534 ;; =============== function _clearTwentyMinuteTimer ends ============
  5535                           
  5536                           
  5537 ;; *************** function _clearTwentySecondsTimer *****************
  5538 ;; Defined at:
  5539 ;;		line 419 in file "C:\temp\dev\AK7030-OTP\common.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;		None               void
  5546 ;; Registers used:
  5547 ;;		status,2
  5548 ;; Tracked objects:
  5549 ;;		On entry : 40/20
  5550 ;;		On exit  : 60/20
  5551 ;;		Unchanged: FFF9F/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5553 ;;      Params:         0       0       0       0       0
  5554 ;;      Locals:         0       0       0       0       0
  5555 ;;      Temps:          0       0       0       0       0
  5556 ;;      Totals:         0       0       0       0       0
  5557 ;;Total ram usage:        0 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    2
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_clearAllTimer
  5564 ;;		_vHandle20sTimerOut
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567  06C7                     _clearTwentySecondsTimer:	
  5568                           
  5569                           ;common.c: 420: uiTwentySecondsTimer = 0;
  5570                           
  5571                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  5572  06C7  1683               	bsf	3,5	;RP0=1, select bank1
  5573  06C8  01A6               	clrf	_uiTwentySecondsTimer^(0+128)
  5574  06C9  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5575                           
  5576                           ;common.c: 421: bTwentySecStartFlag = 0;
  5577  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  5578  06CB  01CF               	clrf	_bTwentySecStartFlag
  5579                           
  5580                           ;common.c: 422: bPause20secTimer = 0;
  5581  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  5582  06CD  01AE               	clrf	_bPause20secTimer^(0+128)
  5583  06CE  0008               	return
  5584  06CF                     __end_of_clearTwentySecondsTimer:	
  5585  06CF                     __ptext1046:	
  5586 ;; =============== function _initPin ends ============
  5587                           
  5588                           
  5589 ;; *************** function _clearTwentyMinuteTimer *****************
  5590 ;; Defined at:
  5591 ;;		line 427 in file "C:\temp\dev\AK7030-OTP\common.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;		None               void
  5598 ;; Registers used:
  5599 ;;		status,2
  5600 ;; Tracked objects:
  5601 ;;		On entry : 60/20
  5602 ;;		On exit  : 60/0
  5603 ;;		Unchanged: FFF9F/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    2
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_clearAllTimer
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618  06CF                     _clearTwentyMinuteTimer:	
  5619  06CF                     l4413:	
  5620                           ; Regs used in _clearTwentyMinuteTimer: [status,2]
  5621                           
  5622                           
  5623                           ;common.c: 428: uiTwentyMinuteTimer = 0;
  5624  06CF  01A4               	clrf	_uiTwentyMinuteTimer^(0+128)
  5625  06D0  01A5               	clrf	(_uiTwentyMinuteTimer+1)^(0+128)
  5626                           
  5627                           ;common.c: 429: bTwentyMinStartFlag = 0;
  5628  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  5629  06D2  01CE               	clrf	_bTwentyMinStartFlag
  5630  06D3  0008               	return
  5631  06D4                     __end_of_clearTwentyMinuteTimer:	
  5632  06D4                     PL4:	
  5633  06D4  0D45               	rlf	Filter@i,w
  5634  06D5  3E26               	addlw	Filter@filter_buf& (0+255)
  5635  06D6  0084               	movwf	4
  5636  06D7  1383               	bcf	3,7	;select IRP bank0
  5637  06D8  0800               	movf	0,w
  5638  06D9  00A2               	movwf	??_Filter
  5639  06DA  0A84               	incf	4,f
  5640  06DB  0800               	movf	0,w
  5641  06DC  00A3               	movwf	??_Filter+1
  5642  06DD  0008               	return
  5643  06DE                     PL6:	
  5644  06DE  00A2               	movwf	??_Filter
  5645  06DF  0A84               	incf	4,f
  5646  06E0  0800               	movf	0,w
  5647  06E1  00A3               	movwf	??_Filter+1
  5648  06E2  1003               	clrc
  5649  06E3  0008               	return
  5650  06E4                     PL7:	
  5651  06E4  1003               	clrc
  5652  06E5  0D45               	rlf	Filter@i,w
  5653  06E6  3E02               	addlw	2
  5654  06E7  3E26               	addlw	Filter@filter_buf& (0+255)
  5655  06E8  0084               	movwf	4
  5656  06E9  0008               	return
  5657  06EA                     PL8:	
  5658  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  5659  06EB  00A0               	movwf	?_Filter
  5660  06EC  3001               	movlw	1
  5661  06ED  00A1               	movwf	?_Filter+1
  5662  06EE  0008               	return
  5663                           
  5664                           	psect	text1019
  5665  0F31                     __ptext1019:	
  5666 ;; =============== function _vPause20sTimer ends ============
  5667                           
  5668                           
  5669 ;; *************** function _isFinishedThreeHoursTimer *****************
  5670 ;; Defined at:
  5671 ;;		line 503 in file "C:\temp\dev\AK7030-OTP\common.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;		None
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;		None
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      unsigned char 
  5678 ;; Registers used:
  5679 ;;		wreg, status,2, status,0
  5680 ;; Tracked objects:
  5681 ;;		On entry : 40/20
  5682 ;;		On exit  : 40/0
  5683 ;;		Unchanged: FFF9F/0
  5684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5685 ;;      Params:         0       0       0       0       0
  5686 ;;      Locals:         0       0       0       0       0
  5687 ;;      Temps:          0       0       0       0       0
  5688 ;;      Totals:         0       0       0       0       0
  5689 ;;Total ram usage:        0 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    2
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_main
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698  0F31                     _isFinishedThreeHoursTimer:	
  5699                           
  5700                           ;common.c: 504: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  5701                           
  5702                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  5703  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  5704  0F32  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5705  0F33  0422               	iorwf	_uiSmallTimer^(0+128),w
  5706  0F34  1D03               	skipz
  5707  0F35  3400               	retlw	0
  5708  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  5709  0F37  084D               	movf	_bSmallTimerStartFlag,w
  5710  0F38  1903               	btfsc	3,2
  5711  0F39  3400               	retlw	0
  5712  0F3A  3001               	movlw	1
  5713                           
  5714                           ;common.c: 505: {
  5715                           ;common.c: 506: bSmallTimerStartFlag = 0;
  5716  0F3B  01CD               	clrf	_bSmallTimerStartFlag
  5717                           
  5718                           ;common.c: 507: return 1;
  5719  0F3C  0008               	return
  5720  0F3D                     __end_of_isFinishedThreeHoursTimer:	
  5721                           ;common.c: 509: else
  5722                           ;common.c: 510: return 0;
  5723                           
  5724                           
  5725                           	psect	text1020
  5726  0F77                     __ptext1020:	
  5727 ;; =============== function _isFinishedThreeHoursTimer ends ============
  5728                           
  5729                           
  5730 ;; *************** function _startThreeHoursTimer *****************
  5731 ;; Defined at:
  5732 ;;		line 434 in file "C:\temp\dev\AK7030-OTP\common.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;		None               void
  5739 ;; Registers used:
  5740 ;;		wreg, status,2, status,0
  5741 ;; Tracked objects:
  5742 ;;		On entry : 60/0
  5743 ;;		On exit  : 40/0
  5744 ;;		Unchanged: FFF9F/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         0       2       0       0       0
  5747 ;;      Locals:         0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0
  5749 ;;      Totals:         0       2       0       0       0
  5750 ;;Total ram usage:        2 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    2
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_main
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759  0F77                     _startThreeHoursTimer:	
  5760                           
  5761                           ;common.c: 435: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  5762                           
  5763                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  5764  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  5765  0F78  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5766  0F79  0422               	iorwf	_uiSmallTimer^(0+128),w
  5767  0F7A  1D03               	skipz
  5768  0F7B  0008               	return
  5769  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  5770  0F7D  08CD               	movf	_bSmallTimerStartFlag,f
  5771  0F7E  1D03               	skipz
  5772  0F7F  0008               	return
  5773                           
  5774                           ;common.c: 436: {
  5775                           ;common.c: 437: uiSmallTimer = uiSetTime;
  5776  0F80  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  5777  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  5778  0F82  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  5779  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0F84  0820               	movf	startThreeHoursTimer@uiSetTime,w
  5781  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  5782  0F86  00A2               	movwf	_uiSmallTimer^(0+128)
  5783                           
  5784                           ;common.c: 438: bSmallTimerStartFlag = 1;
  5785  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0F88  01CD               	clrf	_bSmallTimerStartFlag
  5787  0F89  0ACD               	incf	_bSmallTimerStartFlag,f
  5788  0F8A  0008               	return
  5789  0F8B                     __end_of_startThreeHoursTimer:	
  5790                           
  5791                           	psect	text1021
  5792  0F0E                     __ptext1021:	
  5793 ;; =============== function _startThreeHoursTimer ends ============
  5794                           
  5795                           
  5796 ;; *************** function _isFinishedTwentySecondsTimer *****************
  5797 ;; Defined at:
  5798 ;;		line 468 in file "C:\temp\dev\AK7030-OTP\common.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;		None
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      unsigned char 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 40/0
  5810 ;;		Unchanged: FFF9F/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0
  5815 ;;      Totals:         0       0       0       0       0
  5816 ;;Total ram usage:        0 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    2
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_main
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825  0F0E                     _isFinishedTwentySecondsTimer:	
  5826                           
  5827                           ;common.c: 469: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  5828                           
  5829                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  5830  0F0E  1683               	bsf	3,5	;RP0=1, select bank1
  5831  0F0F  1303               	bcf	3,6	;RP1=0, select bank1
  5832  0F10  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5833  0F11  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5834  0F12  1D03               	skipz
  5835  0F13  3400               	retlw	0
  5836  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5837  0F15  084F               	movf	_bTwentySecStartFlag,w
  5838  0F16  1D03               	skipz
  5839                           
  5840                           ;common.c: 470: {
  5841                           ;common.c: 472: return 1;
  5842  0F17  3401               	retlw	1
  5843                           
  5844                           ;common.c: 474: else
  5845                           ;common.c: 475: return 0;
  5846  0F18  3400               	retlw	0
  5847  0F19                     __end_of_isFinishedTwentySecondsTimer:	
  5848                           
  5849                           	psect	text1022
  5850  0F3D                     __ptext1022:	
  5851 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  5852                           
  5853                           
  5854 ;; *************** function _startTwentySecondsTimer *****************
  5855 ;; Defined at:
  5856 ;;		line 448 in file "C:\temp\dev\AK7030-OTP\common.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;		None
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;		None               void
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 40/0
  5868 ;;		Unchanged: FFF9F/0
  5869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5870 ;;      Params:         0       0       0       0       0
  5871 ;;      Locals:         0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0
  5873 ;;      Totals:         0       0       0       0       0
  5874 ;;Total ram usage:        0 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    2
  5877 ;; This function calls:
  5878 ;;		Nothing
  5879 ;; This function is called by:
  5880 ;;		_main
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883  0F3D                     _startTwentySecondsTimer:	
  5884                           
  5885                           ;common.c: 449: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  5886                           
  5887                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  5888  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  5889  0F3E  1303               	bcf	3,6	;RP1=0, select bank1
  5890  0F3F  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5891  0F40  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5892  0F41  1D03               	skipz
  5893  0F42  0008               	return
  5894  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  5895  0F44  08CF               	movf	_bTwentySecStartFlag,f
  5896  0F45  1D03               	skipz
  5897  0F46  0008               	return
  5898                           
  5899                           ;common.c: 450: {
  5900                           ;common.c: 451: uiTwentySecondsTimer = 20;
  5901  0F47  3014               	movlw	20
  5902  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  5903  0F49  00A6               	movwf	_uiTwentySecondsTimer^(0+128)
  5904  0F4A  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5905                           
  5906                           ;common.c: 452: bTwentySecStartFlag = 1;
  5907  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  5908  0F4C  01CF               	clrf	_bTwentySecStartFlag
  5909  0F4D  0ACF               	incf	_bTwentySecStartFlag,f
  5910  0F4E  0008               	return
  5911  0F4F                     __end_of_startTwentySecondsTimer:	
  5912                           
  5913                           	psect	text1023
  5914  0F25                     __ptext1023:	
  5915 ;; =============== function _startTwentySecondsTimer ends ============
  5916                           
  5917                           
  5918 ;; *************** function _isFinishedTwelveHoursTimer *****************
  5919 ;; Defined at:
  5920 ;;		line 492 in file "C:\temp\dev\AK7030-OTP\common.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      unsigned char 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 40/0
  5931 ;;		On exit  : 40/0
  5932 ;;		Unchanged: FFF9F/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5934 ;;      Params:         0       0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0
  5937 ;;      Totals:         0       0       0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    2
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_main
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947  0F25                     _isFinishedTwelveHoursTimer:	
  5948                           
  5949                           ;common.c: 493: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  5950                           
  5951                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  5952  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  5953  0F26  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5954  0F27  0420               	iorwf	_uiBigTimer^(0+128),w
  5955  0F28  1D03               	skipz
  5956  0F29  3400               	retlw	0
  5957  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0F2B  084C               	movf	_bBigTimerStartFlag,w
  5959  0F2C  1903               	btfsc	3,2
  5960  0F2D  3400               	retlw	0
  5961  0F2E  3001               	movlw	1
  5962                           
  5963                           ;common.c: 494: {
  5964                           ;common.c: 495: bBigTimerStartFlag = 0;
  5965  0F2F  01CC               	clrf	_bBigTimerStartFlag
  5966                           
  5967                           ;common.c: 496: return 1;
  5968  0F30  0008               	return
  5969  0F31                     __end_of_isFinishedTwelveHoursTimer:	
  5970                           ;common.c: 498: else
  5971                           ;common.c: 499: return 0;
  5972                           
  5973                           
  5974                           	psect	text1024
  5975  0F63                     __ptext1024:	
  5976 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  5977                           
  5978                           
  5979 ;; *************** function _startTwelveHourTimer *****************
  5980 ;; Defined at:
  5981 ;;		line 392 in file "C:\temp\dev\AK7030-OTP\common.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;		None               void
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 60/0
  5992 ;;		On exit  : 40/0
  5993 ;;		Unchanged: FFF9F/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5995 ;;      Params:         0       2       0       0       0
  5996 ;;      Locals:         0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0
  5998 ;;      Totals:         0       2       0       0       0
  5999 ;;Total ram usage:        2 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    2
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_main
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008  0F63                     _startTwelveHourTimer:	
  6009                           
  6010                           ;common.c: 393: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  6011                           
  6012                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  6013  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  6014  0F64  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6015  0F65  0420               	iorwf	_uiBigTimer^(0+128),w
  6016  0F66  1D03               	skipz
  6017  0F67  0008               	return
  6018  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0F69  08CC               	movf	_bBigTimerStartFlag,f
  6020  0F6A  1D03               	skipz
  6021  0F6B  0008               	return
  6022                           
  6023                           ;common.c: 394: {
  6024                           ;common.c: 395: uiBigTimer = uiSetTime;
  6025  0F6C  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  6026  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  6027  0F6E  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  6028  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0F70  0820               	movf	startTwelveHourTimer@uiSetTime,w
  6030  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  6031  0F72  00A0               	movwf	_uiBigTimer^(0+128)
  6032                           
  6033                           ;common.c: 396: bBigTimerStartFlag = 1;
  6034  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  6035  0F74  01CC               	clrf	_bBigTimerStartFlag
  6036  0F75  0ACC               	incf	_bBigTimerStartFlag,f
  6037  0F76  0008               	return
  6038  0F77                     __end_of_startTwelveHourTimer:	
  6039                           
  6040                           	psect	text1025
  6041  0F19                     __ptext1025:	
  6042 ;; =============== function _startTwelveHourTimer ends ============
  6043                           
  6044                           
  6045 ;; *************** function _isFinishedTwentyMinuteTimer *****************
  6046 ;; Defined at:
  6047 ;;		line 480 in file "C:\temp\dev\AK7030-OTP\common.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      unsigned char 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0
  6056 ;; Tracked objects:
  6057 ;;		On entry : 160/0
  6058 ;;		On exit  : 140/0
  6059 ;;		Unchanged: FFE9F/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6061 ;;      Params:         0       0       0       0       0
  6062 ;;      Locals:         0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0
  6064 ;;      Totals:         0       0       0       0       0
  6065 ;;Total ram usage:        0 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    2
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074  0F19                     _isFinishedTwentyMinuteTimer:	
  6075                           
  6076                           ;common.c: 481: if(( 0 == uiTwentyMinuteTimer ) && bTwentyMinStartFlag )
  6077                           
  6078                           ; Regs used in _isFinishedTwentyMinuteTimer: [wreg+status,2+status,0]
  6079  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  6080  0F1A  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6081  0F1B  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6082  0F1C  1D03               	skipz
  6083  0F1D  3400               	retlw	0
  6084  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  6085  0F1F  084E               	movf	_bTwentyMinStartFlag,w
  6086  0F20  1903               	btfsc	3,2
  6087  0F21  3400               	retlw	0
  6088  0F22  3001               	movlw	1
  6089                           
  6090                           ;common.c: 482: {
  6091                           ;common.c: 483: bTwentyMinStartFlag = 0;
  6092  0F23  01CE               	clrf	_bTwentyMinStartFlag
  6093                           
  6094                           ;common.c: 484: return 1;
  6095  0F24  0008               	return
  6096  0F25                     __end_of_isFinishedTwentyMinuteTimer:	
  6097                           ;common.c: 486: else
  6098                           ;common.c: 487: return 0;
  6099                           
  6100                           
  6101                           	psect	text1026
  6102  0002                     __ptext1026:	
  6103 ;; =============== function _isFinishedTwentyMinuteTimer ends ============
  6104                           
  6105                           
  6106 ;; *************** function _clrSampeTime *****************
  6107 ;; Defined at:
  6108 ;;		line 524 in file "C:\temp\dev\AK7030-OTP\common.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;		None               void
  6115 ;; Registers used:
  6116 ;;		status,2
  6117 ;; Tracked objects:
  6118 ;;		On entry : 60/20
  6119 ;;		On exit  : 60/20
  6120 ;;		Unchanged: FFF9F/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6122 ;;      Params:         0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0
  6124 ;;      Temps:          0       0       0       0       0
  6125 ;;      Totals:         0       0       0       0       0
  6126 ;;Total ram usage:        0 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    2
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		_main
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135  0002                     _clrSampeTime:	
  6136                           
  6137                           ;common.c: 525: timer.timer10msStopWatch = 0;
  6138                           
  6139                           ; Regs used in _clrSampeTime: [status,2]
  6140  0002  01AF               	clrf	_timer^(0+128)
  6141  0003  0008               	return
  6142  0004                     __end_of_clrSampeTime:	
  6143                           
  6144                           	psect	text1027
  6145  0EE6                     __ptext1027:	
  6146 ;; =============== function _clrSampeTime ends ============
  6147                           
  6148                           
  6149 ;; *************** function _isPermitSampleTime *****************
  6150 ;; Defined at:
  6151 ;;		line 514 in file "C:\temp\dev\AK7030-OTP\common.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;		None
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      unsigned char 
  6158 ;; Registers used:
  6159 ;;		wreg
  6160 ;; Tracked objects:
  6161 ;;		On entry : 40/20
  6162 ;;		On exit  : 60/20
  6163 ;;		Unchanged: FFF9F/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6165 ;;      Params:         0       0       0       0       0
  6166 ;;      Locals:         0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0
  6168 ;;      Totals:         0       0       0       0       0
  6169 ;;Total ram usage:        0 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    2
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_main
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178  0EE6                     _isPermitSampleTime:	
  6179                           
  6180                           ;common.c: 515: if(timer.timer10msStopWatch >= 10)
  6181                           
  6182                           ; Regs used in _isPermitSampleTime: [wreg]
  6183  0EE6  300A               	movlw	10
  6184  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  6185  0EE8  022F               	subwf	_timer^(0+128),w
  6186  0EE9  1803               	btfsc	3,0
  6187                           
  6188                           ;common.c: 516: {
  6189                           ;common.c: 517: return 1;
  6190  0EEA  3401               	retlw	1
  6191                           
  6192                           ;common.c: 519: else
  6193                           ;common.c: 520: return 0;
  6194  0EEB  3400               	retlw	0
  6195  0EEC                     __end_of_isPermitSampleTime:	
  6196                           
  6197                           	psect	text1028
  6198  0F4F                     __ptext1028:	
  6199 ;; =============== function _isPermitSampleTime ends ============
  6200                           
  6201                           
  6202 ;; *************** function _startTwentyMinuteTimer *****************
  6203 ;; Defined at:
  6204 ;;		line 458 in file "C:\temp\dev\AK7030-OTP\common.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  uiValue         2    0[BANK0 ] unsigned int 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;		None               void
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0
  6213 ;; Tracked objects:
  6214 ;;		On entry : 60/0
  6215 ;;		On exit  : 40/0
  6216 ;;		Unchanged: FFF9F/0
  6217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6218 ;;      Params:         0       2       0       0       0
  6219 ;;      Locals:         0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0
  6221 ;;      Totals:         0       2       0       0       0
  6222 ;;Total ram usage:        2 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    2
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_main
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231  0F4F                     _startTwentyMinuteTimer:	
  6232                           
  6233                           ;common.c: 459: if(( 0 == uiTwentyMinuteTimer) && ( 0 == bTwentyMinStartFlag))
  6234                           
  6235                           ; Regs used in _startTwentyMinuteTimer: [wreg+status,2+status,0]
  6236  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  6237  0F50  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6238  0F51  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6239  0F52  1D03               	skipz
  6240  0F53  0008               	return
  6241  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  6242  0F55  08CE               	movf	_bTwentyMinStartFlag,f
  6243  0F56  1D03               	skipz
  6244  0F57  0008               	return
  6245                           
  6246                           ;common.c: 460: {
  6247                           ;common.c: 461: uiTwentyMinuteTimer = uiValue;
  6248  0F58  0821               	movf	startTwentyMinuteTimer@uiValue+1,w
  6249  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  6250  0F5A  00A5               	movwf	(_uiTwentyMinuteTimer+1)^(0+128)
  6251  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  6252  0F5C  0820               	movf	startTwentyMinuteTimer@uiValue,w
  6253  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  6254  0F5E  00A4               	movwf	_uiTwentyMinuteTimer^(0+128)
  6255                           
  6256                           ;common.c: 462: bTwentyMinStartFlag = 1;
  6257  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  6258  0F60  01CE               	clrf	_bTwentyMinStartFlag
  6259  0F61  0ACE               	incf	_bTwentyMinStartFlag,f
  6260  0F62  0008               	return
  6261  0F63                     __end_of_startTwentyMinuteTimer:	
  6262                           
  6263                           	psect	text1031
  6264  0EE3                     __ptext1031:	
  6265 ;; =============== function _adc_test_init ends ============
  6266                           
  6267                           
  6268 ;; *************** function _timer1_interrupt_config *****************
  6269 ;; Defined at:
  6270 ;;		line 225 in file "C:\temp\dev\AK7030-OTP\common.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;		None               void
  6277 ;; Registers used:
  6278 ;;		None
  6279 ;; Tracked objects:
  6280 ;;		On entry : 17F/20
  6281 ;;		On exit  : 17F/20
  6282 ;;		Unchanged: FFE80/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6284 ;;      Params:         0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0
  6287 ;;      Totals:         0       0       0       0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    2
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297  0EE3                     _timer1_interrupt_config:	
  6298                           
  6299                           ;common.c: 226: GIE = 1;
  6300                           
  6301                           ; Regs used in _timer1_interrupt_config: []
  6302  0EE3  178B               	bsf	11,7
  6303                           
  6304                           ;common.c: 227: PEIE = 1;
  6305  0EE4  170B               	bsf	11,6
  6306  0EE5  0008               	return
  6307  0EE6                     __end_of_timer1_interrupt_config:	
  6308                           
  6309                           	psect	text1032
  6310  0F04                     __ptext1032:	
  6311 ;; =============== function _timer1_interrupt_config ends ============
  6312                           
  6313                           
  6314 ;; *************** function _timer1_config *****************
  6315 ;; Defined at:
  6316 ;;		line 213 in file "C:\temp\dev\AK7030-OTP\common.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;		None               void
  6323 ;; Registers used:
  6324 ;;		wreg
  6325 ;; Tracked objects:
  6326 ;;		On entry : 17F/40
  6327 ;;		On exit  : 17F/20
  6328 ;;		Unchanged: FFE80/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6330 ;;      Params:         0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    2
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343  0F04                     _timer1_config:	
  6344                           
  6345                           ;common.c: 215: TMR1H=0xCF;
  6346                           
  6347                           ; Regs used in _timer1_config: [wreg]
  6348  0F04  30CF               	movlw	207
  6349  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  6350  0F06  008F               	movwf	15	;volatile
  6351                           
  6352                           ;common.c: 216: TMR1L=0x2C;
  6353  0F07  302C               	movlw	44
  6354  0F08  008E               	movwf	14	;volatile
  6355                           
  6356                           ;common.c: 217: T1CON=0xE1;
  6357  0F09  30E1               	movlw	225
  6358  0F0A  0090               	movwf	16	;volatile
  6359                           
  6360                           ;common.c: 218: TMR1IE=1;
  6361  0F0B  1683               	bsf	3,5	;RP0=1, select bank1
  6362  0F0C  140C               	bsf	12,0
  6363  0F0D  0008               	return
  6364  0F0E                     __end_of_timer1_config:	
  6365                           
  6366                           	psect	text1033
  6367  0EF4                     __ptext1033:	
  6368 ;; =============== function _timer1_config ends ============
  6369                           
  6370                           
  6371 ;; *************** function _clock_config *****************
  6372 ;; Defined at:
  6373 ;;		line 205 in file "C:\temp\dev\AK7030-OTP\common.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;		None               void
  6380 ;; Registers used:
  6381 ;;		wreg, status,2
  6382 ;; Tracked objects:
  6383 ;;		On entry : 17F/20
  6384 ;;		On exit  : 17F/40
  6385 ;;		Unchanged: FFE80/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6387 ;;      Params:         0       0       0       0       0
  6388 ;;      Locals:         0       0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0
  6390 ;;      Totals:         0       0       0       0       0
  6391 ;;Total ram usage:        0 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    2
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_main
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400  0EF4                     _clock_config:	
  6401                           
  6402                           ;common.c: 207: CLKPR = 0x80;
  6403                           
  6404                           ; Regs used in _clock_config: [wreg+status,2]
  6405  0EF4  3080               	movlw	128
  6406  0EF5  1283               	bcf	3,5	;RP0=0, select bank2
  6407  0EF6  1703               	bsf	3,6	;RP1=1, select bank2
  6408  0EF7  0088               	movwf	8	;volatile
  6409                           
  6410                           ;common.c: 208: CLKPR = 0x00;
  6411  0EF8  0188               	clrf	8	;volatile
  6412  0EF9                     l1848:	
  6413                           ;common.c: 209: while(CLKPCE);
  6414                           
  6415  0EF9  1F88               	btfss	8,7
  6416  0EFA  0008               	return
  6417  0EFB  2EF9               	goto	l1848
  6418  0EFC                     __end_of_clock_config:	
  6419                           
  6420                           	psect	text1035
  6421  0EEC                     __ptext1035:	
  6422 ;; =============== function _setPB6AsInput ends ============
  6423                           
  6424                           
  6425 ;; *************** function _setPA6 *****************
  6426 ;; Defined at:
  6427 ;;		line 356 in file "C:\temp\dev\AK7030-OTP\main.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  bValue          1    wreg     unsigned char 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  bValue          1    0[BANK0 ] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg
  6436 ;; Tracked objects:
  6437 ;;		On entry : 60/0
  6438 ;;		On exit  : 60/0
  6439 ;;		Unchanged: FFF9F/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6441 ;;      Params:         0       0       0       0       0
  6442 ;;      Locals:         0       1       0       0       0
  6443 ;;      Temps:          0       0       0       0       0
  6444 ;;      Totals:         0       1       0       0       0
  6445 ;;Total ram usage:        1 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    2
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_main
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454  0EEC                     _setPA6:	
  6455                           
  6456                           ; Regs used in _setPA6: [wreg]
  6457                           ;setPA6@bValue stored from wreg
  6458  0EEC  00A0               	movwf	setPA6@bValue
  6459                           
  6460                           ;main.c: 357: if( bValue )
  6461  0EED  0820               	movf	setPA6@bValue,w
  6462  0EEE  1903               	btfsc	3,2
  6463  0EEF  2EF2               	goto	l752
  6464                           
  6465                           ;main.c: 359: PA6 = 1;
  6466  0EF0  1705               	bsf	5,6
  6467  0EF1  0008               	return
  6468  0EF2                     l752:	
  6469                           
  6470                           ;main.c: 363: else
  6471                           ;main.c: 365: PA6= 0;
  6472  0EF2  1305               	bcf	5,6
  6473  0EF3  0008               	return
  6474  0EF4                     __end_of_setPA6:	
  6475                           
  6476                           	psect	text1039
  6477  07F7                     __ptext1039:	
  6478 ;; =============== function _setPA3 ends ============
  6479                           
  6480                           
  6481 ;; *************** function _setPA2 *****************
  6482 ;; Defined at:
  6483 ;;		line 252 in file "C:\temp\dev\AK7030-OTP\main.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  bValue          1    wreg     unsigned char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  bValue          1    0[BANK0 ] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;		None               void
  6490 ;; Registers used:
  6491 ;;		wreg
  6492 ;; Tracked objects:
  6493 ;;		On entry : 40/20
  6494 ;;		On exit  : 60/0
  6495 ;;		Unchanged: FFF9F/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6497 ;;      Params:         0       0       0       0       0
  6498 ;;      Locals:         0       1       0       0       0
  6499 ;;      Temps:          0       0       0       0       0
  6500 ;;      Totals:         0       1       0       0       0
  6501 ;;Total ram usage:        1 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    2
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_main
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510  07F7                     _setPA2:	
  6511                           
  6512                           ; Regs used in _setPA2: [wreg]
  6513                           ;setPA2@bValue stored from wreg
  6514  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  6515  07F8  00A0               	movwf	setPA2@bValue
  6516                           
  6517                           ;main.c: 253: if( bValue )
  6518  07F9  0820               	movf	setPA2@bValue,w
  6519  07FA  1903               	btfsc	3,2
  6520  07FB  2FFE               	goto	l727
  6521                           
  6522                           ;main.c: 255: PA2 = 1;
  6523  07FC  1505               	bsf	5,2
  6524  07FD  0008               	return
  6525  07FE                     l727:	
  6526                           
  6527                           ;main.c: 259: else
  6528                           ;main.c: 261: PA2 = 0;
  6529  07FE  1105               	bcf	5,2
  6530  07FF  0008               	return
  6531  0800                     __end_of_setPA2:	
  6532                           
  6533                           	psect	text1045
  6534  0F8B                     __ptext1045:	
  6535 ;; =============== function _setPB0 ends ============
  6536                           
  6537                           
  6538 ;; *************** function _initPin *****************
  6539 ;; Defined at:
  6540 ;;		line 129 in file "C:\temp\dev\AK7030-OTP\main.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;		None
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;		None               void
  6547 ;; Registers used:
  6548 ;;		None
  6549 ;; Tracked objects:
  6550 ;;		On entry : 160/0
  6551 ;;		On exit  : 160/20
  6552 ;;		Unchanged: FFE9F/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6554 ;;      Params:         0       0       0       0       0
  6555 ;;      Locals:         0       0       0       0       0
  6556 ;;      Temps:          0       0       0       0       0
  6557 ;;      Totals:         0       0       0       0       0
  6558 ;;Total ram usage:        0 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    2
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567  0F8B                     _initPin:	
  6568                           
  6569                           ;main.c: 132: TRISB0 = 0;
  6570                           
  6571                           ; Regs used in _initPin: []
  6572  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  6573  0F8C  1006               	bcf	6,0
  6574                           
  6575                           ;main.c: 133: PB0 = 0;
  6576  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0F8E  1006               	bcf	6,0
  6578                           
  6579                           ;main.c: 134: TRISB1 = 0;
  6580  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  6581  0F90  1086               	bcf	6,1
  6582                           
  6583                           ;main.c: 135: PB1 = 0;
  6584  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  6585  0F92  1086               	bcf	6,1
  6586                           
  6587                           ;main.c: 136: TRISB2 = 0;
  6588  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  6589  0F94  1106               	bcf	6,2
  6590                           
  6591                           ;main.c: 137: PB2 = 0;
  6592  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0F96  1106               	bcf	6,2
  6594                           
  6595                           ;main.c: 138: TRISA0 = 0;
  6596  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  6597  0F98  1005               	bcf	5,0
  6598                           
  6599                           ;main.c: 139: PA0 = 0;
  6600  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  6601  0F9A  1005               	bcf	5,0
  6602                           
  6603                           ;main.c: 140: TRISA1 = 0;
  6604  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  6605  0F9C  1085               	bcf	5,1
  6606                           
  6607                           ;main.c: 141: PA1 = 0;
  6608  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  6609  0F9E  1085               	bcf	5,1
  6610                           
  6611                           ;main.c: 142: TRISA2 = 0;
  6612  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  6613  0FA0  1105               	bcf	5,2
  6614                           
  6615                           ;main.c: 143: PA2 = 1;
  6616  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0FA2  1505               	bsf	5,2
  6618                           
  6619                           ;main.c: 145: TRISA3 = 0;
  6620  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  6621  0FA4  1185               	bcf	5,3
  6622                           
  6623                           ;main.c: 146: PA3 = 0;
  6624  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  6625  0FA6  1185               	bcf	5,3
  6626                           
  6627                           ;main.c: 147: TRISB4 = 0;
  6628  0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  6629  0FA8  1206               	bcf	6,4
  6630                           
  6631                           ;main.c: 148: PB4 = 0;
  6632  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  6633  0FAA  1206               	bcf	6,4
  6634                           
  6635                           ;main.c: 149: TRISB7 = 0;
  6636  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  6637  0FAC  1386               	bcf	6,7
  6638                           
  6639                           ;main.c: 150: PB7 = 0;
  6640  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  6641  0FAE  1386               	bcf	6,7
  6642                           
  6643                           ;main.c: 152: TRISB6 = 1;
  6644  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  6645  0FB0  1706               	bsf	6,6
  6646  0FB1  0008               	return
  6647  0FB2                     __end_of_initPin:	
  6648                           
  6649                           	psect	text1050
  6650  06EF                     __ptext1050:	
  6651 ;; =============== function _clearTwelveHoursTimer ends ============
  6652                           
  6653                           
  6654 ;; *************** function _ISR *****************
  6655 ;; Defined at:
  6656 ;;		line 529 in file "C:\temp\dev\AK7030-OTP\common.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;		None
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;		None               void
  6663 ;; Registers used:
  6664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 60/0
  6668 ;;		Unchanged: FFE00/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6670 ;;      Params:         0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0
  6672 ;;      Temps:          4       0       0       0       0
  6673 ;;      Totals:         4       0       0       0       0
  6674 ;;Total ram usage:        4 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    1
  6677 ;; This function calls:
  6678 ;;		i1_setAD_ConvertFlag
  6679 ;;		_adc_get
  6680 ;;		_vPutSampleDataIntoTable
  6681 ;; This function is called by:
  6682 ;;		Interrupt level 1
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685  06EF                     _ISR:	
  6686                           
  6687                           ;common.c: 530: static unsigned char ucTimer1sCnt = 0;
  6688                           ;common.c: 532: if(TMR1IF == 1)
  6689  06EF  1C0C               	btfss	12,0
  6690  06F0  2F25               	goto	i1l4729
  6691                           
  6692                           ;common.c: 533: {
  6693                           ;common.c: 534: TMR1IF = 0 ;
  6694  06F1  100C               	bcf	12,0
  6695                           
  6696                           ;common.c: 535: timer.timer10msStopWatch++;
  6697  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  6698  06F3  3064               	movlw	100
  6699  06F4  0AAF               	incf	_timer^(0+128),f
  6700                           
  6701                           ;common.c: 536: ucTimer1sCnt++;
  6702  06F5  0AAC               	incf	ISR@ucTimer1sCnt^(0+128),f
  6703                           
  6704                           ;common.c: 538: if(ucTimer1sCnt >= 100)
  6705  06F6  022C               	subwf	ISR@ucTimer1sCnt^(0+128),w
  6706  06F7  1C03               	skipc
  6707  06F8  2F25               	goto	i1l4729
  6708                           
  6709                           ;common.c: 539: {
  6710                           ;common.c: 540: ucTimer1sCnt = 0;
  6711  06F9  01AC               	clrf	ISR@ucTimer1sCnt^(0+128)
  6712                           
  6713                           ;common.c: 541: if(uiBigTimer > 0)
  6714  06FA  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6715  06FB  0420               	iorwf	_uiBigTimer^(0+128),w
  6716  06FC  1903               	skipnz
  6717  06FD  2F04               	goto	i1l1959
  6718                           
  6719                           ;common.c: 542: uiBigTimer--;
  6720  06FE  3001               	movlw	1
  6721  06FF  02A0               	subwf	_uiBigTimer^(0+128),f
  6722  0700  3000               	movlw	0
  6723  0701  1C03               	skipc
  6724  0702  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  6725  0703  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  6726  0704                     i1l1959:	
  6727                           
  6728                           ;common.c: 544: if(uiSmallTimer)
  6729  0704  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  6730  0705  0422               	iorwf	_uiSmallTimer^(0+128),w
  6731  0706  1903               	skipnz
  6732  0707  2F0E               	goto	i1l1960
  6733                           
  6734                           ;common.c: 545: uiSmallTimer--;
  6735  0708  3001               	movlw	1
  6736  0709  02A2               	subwf	_uiSmallTimer^(0+128),f
  6737  070A  3000               	movlw	0
  6738  070B  1C03               	skipc
  6739  070C  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  6740  070D  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  6741  070E                     i1l1960:	
  6742                           
  6743                           ;common.c: 547: if((uiTwentySecondsTimer)&& (0 == bPause20secTimer))
  6744  070E  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  6745  070F  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  6746  0710  1903               	skipnz
  6747  0711  2F1B               	goto	i1l1961
  6748  0712  08AE               	movf	_bPause20secTimer^(0+128),f
  6749  0713  1D03               	skipz
  6750  0714  2F1B               	goto	i1l1961
  6751                           
  6752                           ;common.c: 548: uiTwentySecondsTimer--;
  6753  0715  3001               	movlw	1
  6754  0716  02A6               	subwf	_uiTwentySecondsTimer^(0+128),f
  6755  0717  3000               	movlw	0
  6756  0718  1C03               	skipc
  6757  0719  03A7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  6758  071A  02A7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  6759  071B                     i1l1961:	
  6760                           
  6761                           ;common.c: 550: if((uiTwentyMinuteTimer))
  6762  071B  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6763  071C  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6764  071D  1903               	skipnz
  6765  071E  2F25               	goto	i1l4729
  6766                           
  6767                           ;common.c: 551: uiTwentyMinuteTimer--;
  6768  071F  3001               	movlw	1
  6769  0720  02A4               	subwf	_uiTwentyMinuteTimer^(0+128),f
  6770  0721  3000               	movlw	0
  6771  0722  1C03               	skipc
  6772  0723  03A5               	decf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6773  0724  02A5               	subwf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6774  0725                     i1l4729:	
  6775                           
  6776                           ;common.c: 552: }
  6777                           ;common.c: 553: }
  6778                           ;common.c: 555: if(ADIF)
  6779  0725  1283               	bcf	3,5	;RP0=0, select bank0
  6780  0726  1D0D               	btfss	13,2
  6781  0727  2F36               	goto	i1l1964
  6782  0728  3001               	movlw	1
  6783                           
  6784                           ;common.c: 556: {
  6785                           ;common.c: 557: ADIF=0;
  6786  0729  110D               	bcf	13,2
  6787                           
  6788                           ;common.c: 558: setAD_ConvertFlag(1);
  6789  072A  27C4  118A         	fcall	i1_setAD_ConvertFlag
  6790                           
  6791                           ;common.c: 559: vPutSampleDataIntoTable(adc_get(),sampleChannelSelect);
  6792  072C  27B8  118A         	fcall	_adc_get
  6793  072E  0871               	movf	?_adc_get+1,w
  6794  072F  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6795  0730  0870               	movf	?_adc_get,w
  6796  0731  00F4               	movwf	?_vPutSampleDataIntoTable
  6797  0732  1283               	bcf	3,5	;RP0=0, select bank0
  6798  0733  0851               	movf	_sampleChannelSelect,w
  6799  0734  00F6               	movwf	?_vPutSampleDataIntoTable+2
  6800  0735  2743               	fcall	_vPutSampleDataIntoTable
  6801  0736                     i1l1964:	
  6802  0736  087C               	movf	??_ISR+3,w
  6803  0737  1283               	bcf	3,5	;RP0=0, select bank0
  6804  0738  1303               	bcf	3,6	;RP1=0, select bank0
  6805  0739  00FF               	movwf	127
  6806  073A  087B               	movf	??_ISR+2,w
  6807  073B  008A               	movwf	10
  6808  073C  087A               	movf	??_ISR+1,w
  6809  073D  0084               	movwf	4
  6810  073E  0E79               	swapf	??_ISR^(0+-128),w
  6811  073F  0083               	movwf	3
  6812  0740  0EFE               	swapf	126,f
  6813  0741  0E7E               	swapf	126,w
  6814  0742  0009               	retfie
  6815  0743                     __end_of_ISR:	
  6816  0743                     __ptext1053:	
  6817 ;; =============== function _adc_get ends ============
  6818                           
  6819                           
  6820 ;; *************** function _vPutSampleDataIntoTable *****************
  6821 ;; Defined at:
  6822 ;;		line 109 in file "C:\temp\dev\AK7030-OTP\common.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;  uiSampleData    2    4[COMMON] unsigned int 
  6825 ;;  channel         1    6[COMMON] unsigned char 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  i               2    7[COMMON] int 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;		None               void
  6830 ;; Registers used:
  6831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6832 ;; Tracked objects:
  6833 ;;		On entry : 60/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: FFE00/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6837 ;;      Params:         3       0       0       0       0
  6838 ;;      Locals:         2       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0
  6840 ;;      Totals:         5       0       0       0       0
  6841 ;;Total ram usage:        5 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_ISR
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849  0743                     _vPutSampleDataIntoTable:	
  6850                           
  6851                           ;common.c: 111: static unsigned char ucChannelZeroLength = 0;
  6852                           ;common.c: 113: static unsigned char ucChannelSecondLength = 0;
  6853                           ;common.c: 115: static unsigned char ucChannelFifthLength = 0;
  6854                           ;common.c: 117: static unsigned char ucChannelSixthLength = 0;
  6855                           ;common.c: 119: if(channel == 0)
  6856                           
  6857                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  6858  0743  08F6               	movf	vPutSampleDataIntoTable@channel,f
  6859  0744  1D03               	skipz
  6860  0745  2F52               	goto	i1l4653
  6861                           
  6862                           ;common.c: 120: {
  6863                           ;common.c: 121: if(ucChannelZeroLength < 12)
  6864  0746  300C               	movlw	12
  6865  0747  026E               	subwf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  6866  0748  1803               	skipnc
  6867  0749  2F4E               	goto	i1l4649
  6868                           
  6869                           ;common.c: 122: {
  6870                           ;common.c: 123: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6871  074A  1003               	clrc
  6872  074B  27D0               	fcall	PL3	;call to abstracted procedure
  6873                           
  6874                           ;common.c: 125: ucChannelZeroLength++;
  6875  074C  0AEE               	incf	vPutSampleDataIntoTable@ucChannelZeroLength,f
  6876                           
  6877                           ;common.c: 126: }
  6878  074D  0008               	return
  6879  074E                     i1l4649:	
  6880                           
  6881                           ;common.c: 127: else
  6882                           ;common.c: 128: {
  6883                           ;common.c: 129: ucChannelZeroLength = 0;
  6884  074E  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  6885                           
  6886                           ;common.c: 131: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6887  074F  1003               	clrc
  6888  0750  27D0               	fcall	PL3	;call to abstracted procedure
  6889  0751  0008               	return
  6890  0752                     i1l4653:	
  6891                           
  6892                           ;common.c: 134: else if(channel == 2)
  6893  0752  0876               	movf	vPutSampleDataIntoTable@channel,w
  6894  0753  3A02               	xorlw	2
  6895  0754  1D03               	skipz
  6896  0755  2F66               	goto	i1l4665
  6897                           
  6898                           ;common.c: 135: {
  6899                           ;common.c: 136: if(ucChannelSecondLength < 12)
  6900  0756  300C               	movlw	12
  6901  0757  026C               	subwf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6902  0758  1803               	skipnc
  6903  0759  2F60               	goto	i1l4661
  6904                           
  6905                           ;common.c: 137: {
  6906                           ;common.c: 138: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6907  075A  1003               	clrc
  6908  075B  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6909  075C  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6910  075D  27C8               	fcall	PL2	;call to abstracted procedure
  6911                           
  6912                           ;common.c: 140: ucChannelSecondLength++;
  6913  075E  0AEC               	incf	vPutSampleDataIntoTable@ucChannelSecondLength,f
  6914                           
  6915                           ;common.c: 141: }
  6916  075F  0008               	return
  6917  0760                     i1l4661:	
  6918                           
  6919                           ;common.c: 142: else
  6920                           ;common.c: 143: {
  6921                           ;common.c: 144: ucChannelSecondLength = 0;
  6922  0760  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  6923                           
  6924                           ;common.c: 146: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6925  0761  1003               	clrc
  6926  0762  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6927  0763  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6928  0764  27C8               	fcall	PL2	;call to abstracted procedure
  6929  0765  0008               	return
  6930  0766                     i1l4665:	
  6931                           
  6932                           ;common.c: 149: else if(channel == 5)
  6933  0766  0876               	movf	vPutSampleDataIntoTable@channel,w
  6934  0767  3A05               	xorlw	5
  6935  0768  1D03               	skipz
  6936  0769  2F7A               	goto	i1l4677
  6937                           
  6938                           ;common.c: 150: {
  6939                           ;common.c: 151: if(ucChannelFifthLength < 12)
  6940  076A  300C               	movlw	12
  6941  076B  026B               	subwf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6942  076C  1803               	skipnc
  6943  076D  2F74               	goto	i1l4673
  6944                           
  6945                           ;common.c: 152: {
  6946                           ;common.c: 153: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  6947  076E  1003               	clrc
  6948  076F  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6949  0770  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  6950  0771  27C8               	fcall	PL2	;call to abstracted procedure
  6951                           
  6952                           ;common.c: 155: ucChannelFifthLength++;
  6953  0772  0AEB               	incf	vPutSampleDataIntoTable@ucChannelFifthLength,f
  6954                           
  6955                           ;common.c: 156: }
  6956  0773  0008               	return
  6957  0774                     i1l4673:	
  6958                           
  6959                           ;common.c: 157: else
  6960                           ;common.c: 158: {
  6961                           ;common.c: 159: ucChannelFifthLength = 0;
  6962  0774  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  6963                           
  6964                           ;common.c: 161: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  6965  0775  1003               	clrc
  6966  0776  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6967  0777  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  6968  0778  27C8               	fcall	PL2	;call to abstracted procedure
  6969  0779  0008               	return
  6970  077A                     i1l4677:	
  6971                           
  6972                           ;common.c: 164: else if(channel == 6)
  6973  077A  0876               	movf	vPutSampleDataIntoTable@channel,w
  6974  077B  3A06               	xorlw	6
  6975  077C  1D03               	skipz
  6976  077D  2F8E               	goto	i1l4689
  6977                           
  6978                           ;common.c: 165: {
  6979                           ;common.c: 166: if(ucChannelSixthLength < 12)
  6980  077E  300C               	movlw	12
  6981  077F  026D               	subwf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  6982  0780  1803               	skipnc
  6983  0781  2F88               	goto	i1l4685
  6984                           
  6985                           ;common.c: 167: {
  6986                           ;common.c: 168: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  6987  0782  1003               	clrc
  6988  0783  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  6989  0784  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  6990  0785  27C8               	fcall	PL2	;call to abstracted procedure
  6991                           
  6992                           ;common.c: 170: ucChannelSixthLength++;
  6993  0786  0AED               	incf	vPutSampleDataIntoTable@ucChannelSixthLength,f
  6994                           
  6995                           ;common.c: 171: }
  6996  0787  0008               	return
  6997  0788                     i1l4685:	
  6998                           
  6999                           ;common.c: 172: else
  7000                           ;common.c: 173: {
  7001                           ;common.c: 174: ucChannelSixthLength = 0;
  7002  0788  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7003                           
  7004                           ;common.c: 176: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  7005  0789  1003               	clrc
  7006  078A  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7007  078B  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7008  078C  27C8               	fcall	PL2	;call to abstracted procedure
  7009  078D  0008               	return
  7010  078E                     i1l4689:	
  7011                           
  7012                           ;common.c: 179: else
  7013                           ;common.c: 180: {
  7014                           ;common.c: 181: ucChannelZeroLength = 0;
  7015  078E  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  7016                           
  7017                           ;common.c: 183: ucChannelSecondLength = 0;
  7018  078F  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  7019                           
  7020                           ;common.c: 185: ucChannelFifthLength = 0;
  7021  0790  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7022                           
  7023                           ;common.c: 187: ucChannelSixthLength = 0;
  7024  0791  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7025                           
  7026                           ;common.c: 189: for(int i = 0;i < 12; i++)
  7027  0792  01F7               	clrf	vPutSampleDataIntoTable@i
  7028  0793  01F8               	clrf	vPutSampleDataIntoTable@i+1
  7029  0794                     i1l4695:	
  7030                           
  7031                           ;common.c: 190: {
  7032                           ;common.c: 191: uiSampleChannelZero[i] = 0;
  7033  0794  1003               	clrc
  7034  0795  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7035  0796  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7036  0797  0084               	movwf	4
  7037  0798  1383               	bcf	3,7	;select IRP bank1
  7038                           
  7039                           ;common.c: 193: uiSampleChannelSecond[i] = 0;
  7040  0799  27DA  118A         	fcall	PL5	;call to abstracted procedure
  7041  079B  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  7042  079C  0084               	movwf	4
  7043  079D  1783               	bsf	3,7	;select IRP bank3
  7044                           
  7045                           ;common.c: 195: uiSampleChannelFifth[i] = 0;
  7046  079E  27DA  118A         	fcall	PL5	;call to abstracted procedure
  7047  07A0  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7048  07A1  0084               	movwf	4
  7049                           
  7050                           ;common.c: 197: uiSampleChannelSixth[i] = 0;
  7051  07A2  27DA  118A         	fcall	PL5	;call to abstracted procedure
  7052  07A4  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7053  07A5  0084               	movwf	4
  7054  07A6  0180               	clrf	0
  7055  07A7  0A84               	incf	4,f
  7056  07A8  0180               	clrf	0
  7057  07A9  0AF7               	incf	vPutSampleDataIntoTable@i,f
  7058  07AA  1903               	skipnz
  7059  07AB  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  7060  07AC  0878               	movf	vPutSampleDataIntoTable@i+1,w
  7061  07AD  3A80               	xorlw	128
  7062  07AE  00FF               	movwf	127
  7063  07AF  3080               	movlw	128
  7064  07B0  027F               	subwf	127,w
  7065  07B1  1D03               	skipz
  7066  07B2  2FB5               	goto	u184_25
  7067  07B3  300C               	movlw	12
  7068  07B4  0277               	subwf	vPutSampleDataIntoTable@i,w
  7069  07B5                     u184_25:	
  7070  07B5  1803               	btfsc	3,0
  7071  07B6  0008               	return
  7072  07B7  2F94               	goto	i1l4695
  7073  07B8                     __end_of_vPutSampleDataIntoTable:	
  7074  07B8                     __ptext1052:	
  7075 ;; =============== function i1_setAD_ConvertFlag ends ============
  7076                           
  7077                           
  7078 ;; *************** function _adc_get *****************
  7079 ;; Defined at:
  7080 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\periph.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;		None
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  val             2    2[COMMON] unsigned int 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  2    0[COMMON] unsigned int 
  7087 ;; Registers used:
  7088 ;;		wreg
  7089 ;; Tracked objects:
  7090 ;;		On entry : 60/20
  7091 ;;		On exit  : 60/20
  7092 ;;		Unchanged: FFF9F/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7094 ;;      Params:         2       0       0       0       0
  7095 ;;      Locals:         2       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0
  7097 ;;      Totals:         4       0       0       0       0
  7098 ;;Total ram usage:        4 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_ISR
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106  07B8                     _adc_get:	
  7107                           
  7108                           ;periph.c: 106: unsigned int val;
  7109                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  7110                           
  7111                           ; Regs used in _adc_get: [wreg]
  7112  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  7113  07B9  081E               	movf	30,w	;volatile
  7114  07BA  00F3               	movwf	adc_get@val+1
  7115  07BB  01F2               	clrf	adc_get@val
  7116  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  7117  07BD  081E               	movf	30,w	;volatile
  7118  07BE  04F2               	iorwf	adc_get@val,f
  7119                           
  7120                           ;periph.c: 108: return val;
  7121  07BF  0873               	movf	adc_get@val+1,w
  7122  07C0  00F1               	movwf	?_adc_get+1
  7123  07C1  0872               	movf	adc_get@val,w
  7124  07C2  00F0               	movwf	?_adc_get
  7125  07C3  0008               	return
  7126  07C4                     __end_of_adc_get:	
  7127  07C4                     __ptext1051:	
  7128 ;; =============== function _ISR ends ============
  7129                           
  7130                           
  7131 ;; *************** function i1_setAD_ConvertFlag *****************
  7132 ;; Defined at:
  7133 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  setAD_Conver    1    wreg     unsigned char 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;		None               void
  7140 ;; Registers used:
  7141 ;;		wreg
  7142 ;; Tracked objects:
  7143 ;;		On entry : 60/0
  7144 ;;		On exit  : 60/20
  7145 ;;		Unchanged: FFF9F/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7147 ;;      Params:         0       0       0       0       0
  7148 ;;      Locals:         1       0       0       0       0
  7149 ;;      Temps:          0       0       0       0       0
  7150 ;;      Totals:         1       0       0       0       0
  7151 ;;Total ram usage:        1 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_ISR
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159  07C4                     i1_setAD_ConvertFlag:	
  7160                           
  7161                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  7162                           ;i1setAD_ConvertFlag@flag stored from wreg
  7163  07C4  00F0               	movwf	i1setAD_ConvertFlag@flag
  7164                           
  7165                           ;common.c: 240: adc_convert_flag = flag;
  7166  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  7167  07C6  00AD               	movwf	_adc_convert_flag^(0+128)
  7168  07C7  0008               	return
  7169  07C8                     __end_ofi1_setAD_ConvertFlag:	
  7170  07C8                     PL2:	
  7171  07C8  0084               	movwf	4
  7172  07C9  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7173  07CA  1783               	bsf	3,7	;select IRP bank3
  7174  07CB  0080               	movwf	0
  7175  07CC  0A84               	incf	4,f
  7176  07CD  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7177  07CE  0080               	movwf	0
  7178  07CF  0008               	return
  7179  07D0                     PL3:	
  7180  07D0  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  7181  07D1  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7182  07D2  0084               	movwf	4
  7183  07D3  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7184  07D4  1383               	bcf	3,7	;select IRP bank1
  7185  07D5  0080               	movwf	0
  7186  07D6  0A84               	incf	4,f
  7187  07D7  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7188  07D8  0080               	movwf	0
  7189  07D9  0008               	return
  7190  07DA                     PL5:	
  7191  07DA  0180               	clrf	0
  7192  07DB  0A84               	incf	4,f
  7193  07DC  0180               	clrf	0
  7194  07DD  1003               	clrc
  7195  07DE  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7196  07DF  0008               	return
  7197                           
  7198                           	psect	intentry
  7199  0004                     __pintentry:	
  7200                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7201                           
  7202  0004                     interrupt_function:	
  7203  007E                     saved_w	set	btemp
  7204  0004  00FE               	movwf	btemp
  7205  0005  0E03               	swapf	3,w
  7206  0006  00F9               	movwf	??_ISR
  7207  0007  0804               	movf	4,w
  7208  0008  00FA               	movwf	??_ISR+1
  7209  0009  080A               	movf	10,w
  7210  000A  00FB               	movwf	??_ISR+2
  7211  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7212  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7213  000D  087F               	movf	btemp+1,w
  7214  000E  00FC               	movwf	??_ISR+3
  7215  000F  118A  2EEF         	ljmp	_ISR
  7216                           
  7217                           	psect	text1054
  7218  0000                     __ptext1054:	
  7219 ;; =============== function _vPutSampleDataIntoTable ends ============
  7220                           
  7221  007E                     btemp	set	126	;btemp
  7222  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Mar 29 19:19:33 2020

                              ??_clock_config 0020                                             pc 0002  
                                          _GO 00F9                                            fsr 0004  
                    ?_timer1_interrupt_config 0070                                           l702 048B  
                                         l712 049B                                           l722 04AC  
                                         l707 0493                                           l732 060F  
                                         l717 04A4                                           l742 051A  
                                         l727 07FE                                           l815 00EC  
                                         l752 0EF2                                           l760 0000  
                                         l737 0623                                           l835 0147  
                                         l757 0000                                           l693 0000  
                                         l774 005F                                           l839 016F  
                                         l696 0000                                           l699 0000  
                                         l974 0308                                           l993 0342  
                                         _PA0 0028                                           _PA1 0029  
                                         _GIE 005F                                           _PB0 0030  
                                         _PA2 002A                                           _PB1 0031  
                                         _PA3 002B                                           _PB2 0032  
                                         _PB4 0034                                           _PA6 002E  
                                         _PB6 0036                                           _PB7 0037  
                                         _ISR 06EF                                           fsr0 0004  
                                         indf 0000                                _ucChannel5Type 0054  
                      ??_startThreeHoursTimer 0022                                          S5821 080E  
                                        S5823 081C                                          S5819 0800  
                                        ?_ISR 0070                            __size_of_AD_Sample 0022  
                      ?_getAdOriginalCh0Value 0046                        ?_getAdOriginalCh2Value 0046  
                                        l1041 0425                                          l1128 0513  
                                        l5001 0000                                          l2611 0000  
                                        l1803 0000                                          l5011 0000  
                                        l5003 0000                                          l5101 0000  
                                        l5013 0000                                          l5005 0000  
                                        l1903 0000                                          l5111 0000  
                                        l5103 00C5                                          l5023 0042  
                                        l5015 0000                                          l5007 0000  
                                        l1912 0000                                          l1816 0000  
                                        l2617 0000                                          l5121 0000  
                                        l5113 0000                                          l5033 0000  
                                        l5017 0034                                          l5009 0000  
                                        l1906 0000                                          l4411 0000  
                                        l1851 0000                                          l5131 0000  
                                        l5123 00EF                                          l5115 00DD  
                                        l5107 00CD                                          l5043 0000  
                                        l5035 0056                                          l5027 004E  
                                        l5019 0000                                          l1860 0000  
                                        l1909 0000                                          l4413 06CF  
                                        l4421 0000                                          l4501 0000  
                                        l5141 0000                                          l5133 00FF  
                                        l5125 0000                                          l5109 00D1  
                                        l5061 0000                                          l5053 0000  
                                        l5037 005C                                          l5029 004F  
                                        l1854 0000                                          l4407 0000  
                                        l4415 0000                                          l4423 0000  
                                        l4431 0000                                          l4503 0000  
                                        l1863 0000                                          l5303 0212  
                                        l5231 01BC                                          l5207 0195  
                                        l5151 0123                                          l5143 0112  
                                        l5127 0000                                          l5071 0095  
                                        l5047 0000                                          l5039 0060  
                                        l1848 0EF9                                          l1952 0000  
                                        l1872 0000                                          l4409 0000  
                                        l4417 0000                                          l4425 0000  
                                        l4433 0000                                          l4441 0000  
                                        l1857 0000                                          l4601 0000  
                                        l5313 0230                                          l5305 021E  
                                        l5241 01CE                                          l5217 019E  
                                        l5137 0000                                          l5081 0000  
                                        l5065 008B                                          l5057 0000  
                                        l5049 0000                                          l4419 0000  
                                        l4427 0000                                          l4435 0000  
                                        l4443 0000                                          l4451 0000  
                                        l4507 0000                                          l4531 0000  
                                        l4611 065F                                          l4603 0000  
                                        l1875 0000                                          l5411 02C2  
                                        l5307 0226                                          l5251 01DA  
                                        l5243 01D0                                          l5227 01B7  
                                        l5171 016D                                          l5163 015B  
                                        l5155 0142                                          l5147 011D  
                                        l5139 0107                                          l5083 00A5  
                                        l5075 0000                                          l5067 0000  
                                        l5059 007D                                          l4429 0000  
                                        l4437 0000                                          l4445 0000  
                                        l4453 0000                                          l4461 0000  
                                        l4509 0000                                          l4525 0000  
                                        l4533 0000                                          l4621 06A2  
                                        l4701 0000                                          l1869 0000  
                                        l5501 036C                                          l5421 02CE  
                                        l5405 029F                                          l5317 0232  
                                        l5309 0228                                          l5253 01DC  
                                        l5237 01BE                                          l5229 0000  
                                        l5181 017F                                          l5173 0171  
                                        l5077 00A2                                          l5069 0000  
                                        l1878 0000                                          l4439 0000  
                                        l4447 0000                                          l4455 0000  
                                        l4463 0000                                          l4471 0000  
                                        l4519 0000                                          l4527 0000  
                                        l4543 0000                                          l4551 0000  
                                        l4631 0000                                          l4623 0000  
                                        l5511 037E                                          l5503 036F  
                                        l5431 02D4                                          l5407 02B0  
                                        l5351 0000                                          l5319 0234  
                                        l5263 01E5                                          l5247 01D8  
                                        l5239 01CA                                          l5175 0175  
                                        l5167 0164                                          l5159 0151  
                                        l5095 00BC                                          l5087 0000  
                                        l5079 0000                                          l4449 0000  
                                        l4457 0000                                          l4465 0000  
                                        l4473 0000                                          l4481 0000  
                                        l4633 0000                                          l4617 06A0  
                                        l4705 0000                                          l4801 0000  
                                        l5521 038F                                          l5441 02DA  
                                        l5433 0000                                          l5409 02C0  
                                        l5361 0269                                          l5329 023D  
                                        l5273 01EE                                          l5185 0181  
                                        l5177 0177                                          l5097 00BD  
                                        l5089 00AC                                          l5601 0432  
                                        l4459 0000                                          l4467 0000  
                                        l4475 0000                                          l4555 0000  
                                        l4571 0000                                          l4619 0660  
                                        l4803 0000                                          l5531 0000  
                                        l5515 0000                                          l5507 037B  
                                        l5451 0306                                          l5419 02CC  
                                        l5363 0275                                          l5339 0246  
                                        l5283 01F7                                          l5187 0183  
                                        l4477 0000                                          l4469 0000  
                                        l4549 0000                                          l4565 0000  
                                        l4573 0000                                          l4637 0000  
                                        l4821 0000                                          l4813 0000  
                                        l4901 0000                                          l5541 0000  
                                        l5533 0000                                          l5525 0000  
                                        l5517 038C                                          l5453 0000  
                                        l5445 02E8                                          l5373 0281  
                                        l5365 0277                                          l5349 0257  
                                        l5293 020C                                          l5197 018C  
                                        l4479 0FC6                                          l4487 0000  
                                        l4591 0000                                          l4743 04AE  
                                        l4807 0501                                          l4911 0000  
                                        l4903 0560                                          l5543 03B4  
                                        l5527 0000                                          l5535 03A3  
                                        l5519 0000                                          l5447 02F9  
                                        l5375 0283                                          l5359 025D  
                                        l5295 0000                                          l4489 0000  
                                        l4577 0000                                          l4745 0000  
                                        l4753 0000                                          l4761 04CA  
                                        l4809 0000                                          l4833 0FE6  
                                        l4825 0FD9                                          l4817 0000  
                                        l4841 0000                                          l4921 0577  
                                        l4913 056D                                          l4905 0000  
                                        l5529 0000                                          l5385 028C  
                                        l5369 027F                                          l4579 0000  
                                        l4763 0000                                          l4835 0FE7  
                                        l4843 0000                                          l4931 0000  
                                        l4923 057A                                          l4907 0563  
                                        l5563 03BD                                          l5491 0000  
                                        l5483 0000                                          l5395 0299  
                                        l4589 0000                                          l4597 0637  
                                        l4749 0000                                          l4781 0000  
                                        l4773 0000                                          l4765 0000  
                                        l4757 0000                                          l4829 0FDF  
                                        l4837 0000                                          l4845 0000  
                                        l4853 0000                                          l4933 0588  
                                        l4925 0000                                          l4917 0000  
                                        l4861 0000                                          l5581 0408  
                                        l5573 03FE                                          l5565 03C9  
                                        l5485 031F                                          l5477 0316  
                                        l5397 0000                                          l4599 0000  
                                        l4791 04F3                                          l4783 04E8  
                                        l4775 04E0                                          l4767 04D7  
                                        l4759 0000                                          l4839 0000  
                                        l4847 0000                                          l4943 0000  
                                        l4927 0000                                          l4919 0000  
                                        l4871 0000                                          l4863 052A  
                                        l4855 0000                                          l5591 0000  
                                        l5575 0400                                          l5567 0000  
                                        l5487 0000                                          l5479 0000  
                                        l5495 032A                                          _ADIE 046A  
                                        _ADIF 006A                                          l4793 0000  
                                        l4785 0000                                          l4777 0000  
                                        l4769 0000                                          l4849 0000  
                                        l4961 0000                                          l4953 05AA  
                                        l4945 059D                                          l4937 0594  
                                        l4929 0000                                          l4873 0534  
                                        l4865 0000                                          l4857 051D  
                                        l5593 0000                                          l5585 0415  
                                        l5569 03F1                                          l5497 0000  
                                        l5489 0000                                          l4787 0000  
                                        l4779 0000                                          l4971 0000  
                                        l4963 05BB                                          l4955 0000  
                                        l4947 0000                                          l4939 0596  
                                        l4891 0000                                          l4883 0000  
                                        l4867 052D                                          l5587 0417  
                                        l5579 0000                                          l5499 0000  
                                        l4797 0000                                          l4789 0000  
                                        l4981 0000                                          l4973 05CB  
                                        l4965 0000                                          l4957 05AE  
                                        l4949 05A4                                          l4877 0000  
                                        l5597 0426                                          l4799 0000  
                                        l4967 05BE                                          l4887 0000  
                                        l4895 0551                                          l4879 053C  
                                        l4991 05E9                                          l4977 0000  
                                        l4897 0000                                          l4889 0000  
                                        l4993 05F5                                          l4987 05D8  
                                        l4979 0000                                          l4997 0000  
                                        l4999 0000                                          _ADON 00F8  
                      ?_getAdOriginalCh5Value 0046                        ?_getAdOriginalCh6Value 0046  
               startTwelveHourTimer@uiSetTime 0020                                          u2405 0135  
                                        u2415 0140                                          u1715 065A  
                                        u1725 0681                                          u1735 066D  
                                        _PEIE 005E             vHandle20sTimeron@ucMoreThanP3sCnt 00BC  
           vHandle20sTimeron@ucMoreThanP8sCnt 00BD                                          _main 0013  
                           _vHandle20sTimeron 051C                                          btemp 007E  
                              _vPause20sTimer 062B                       _clearTwentySecondsTimer 06C7  
                                        start 0011                            ?_vHandle20sTimeron 0070  
                           main@ucTimerDelay1 005F                             main@ucTimerDelay2 0060  
                           main@ucTimerDelay3 0061                             main@ucTimerDelay4 0062  
                           main@ucTimerCntP3s 005D                                         ??_ISR 0079  
                  __end_of_isPermitSampleTime 0EEC                           ??_vHandle20sTimeron 0048  
                               main@bInitFlag 0056                           _sampleChannelSelect 0051  
                                       ?_main 0070                                         _CLKPR 0108  
                                       _T1CON 0010                               __end_of_adc_get 07C4  
                                       _PBOD7 0C47                   vHandle20sTimerOut@ucTimeCnt 007D  
                                       _TMR1H 000F                                         _TMR1L 000E  
                       setAD_ConvertFlag@flag 0020                            _vHandle20sTimerOut 04C1  
                     _vPutSampleDataIntoTable 0743                               __end_of_initPin 0FB2  
                        vPause20sTimer@bValue 0020                                         _timer 00AF  
                   __end_of_vHandle20sTimeron 05FF                                         pclath 000A  
             __size_of_startTwentyMinuteTimer 0014                        __end_of_vPause20sTimer 0630  
                                       status 0003                                         wtemp0 007E  
                         ?_vHandle20sTimerOut 0070                 __size_of_startTwelveHourTimer 0014  
                        __end_of_clrSampeTime 0004                         __end_of_clearAllTimer 04B5  
                                __end_of_main 044F                        __size_of_adc_test_init 0015  
                           __end_of_AD_Sample 0FEB                                        ??_main 0048  
                        ??_vHandle20sTimerOut 0021                          _clearPinPortAndTimer 0463  
                                      _ADCON0 001F                                        _ADCON1 009F  
                        __end_of_clock_config 0EFC                                        _ADRESH 001E  
                                      _ADRESL 009E                                        _CLKPCE 0847  
                                      i1l2620 0000                                        i1l1863 0000  
                                      i1l1960 070E                                        i1l1961 071B  
                                      i1l1964 0736                                        i1l1959 0704  
                                      i1l4711 0000                                        i1l4641 0000  
                                      i1l4713 0000                                        i1l4651 0000  
                                      i1l4707 0000                                        i1l4661 0760  
                                      i1l4653 0752                                        i1l4741 0000  
                                      i1l4733 0000                                        i1l4717 0000  
                                      i1l4671 0000                                        i1l4663 0000  
                                      i1l4647 0000                                        i1l4735 0000  
                                      i1l4673 0774                                        i1l4665 0766  
                                      i1l4649 074E                                        i1l4737 0000  
                                      i1l4729 0725                                        i1l4683 0000  
                                      i1l4675 0000                                        i1l4659 0000  
                                      i1l4685 0788                                        i1l4677 077A  
                                      i1l4695 0794                                        i1l4687 0000  
                                      i1l4697 0000                                        i1l4689 078E  
                                      i1l4699 0000                                        u184_25 07B5  
                   ??_clearTwentySecondsTimer 0020                                        _TMR1IE 0460  
                                      _TMR1IF 0060                        __size_of_setPB6AsInput 0003  
                             ?_vPause20sTimer 0070                             _getAD_ConvertFlag 0FBD  
                           _setAD_ConvertFlag 0FC1                                        _TRISA0 0428  
                                      _TRISA1 0429                                        _TRISB0 0430  
                                      _TRISA2 042A                                        _TRISB1 0431  
                                      _TRISA3 042B                                        _TRISB2 0432  
                                      _TRISB3 0433                                        _TRISB4 0434  
                                      _TRISA6 042E                                        _TRISB5 0435  
                                      _TRISA7 042F                                        _TRISB6 0436  
                                      _TRISB7 0437                                 main@ucTimer1s 00B2  
                          ?_getAD_ConvertFlag 0070                                        _Filter 0630  
                          ?_setAD_ConvertFlag 0070                   ??_isFinishedThreeHoursTimer 0020  
         __end_of_isFinishedTwentyMinuteTimer 0F25                   _isFinishedTwentyMinuteTimer 0F19  
               __size_of_clearThreeHoursTimer 0006                                     ??_adc_get 0072  
                         ??_getAD_ConvertFlag 0020                           ??_setAD_ConvertFlag 0020  
                      _startTwentyMinuteTimer 0F4F                   __size_of_clearParaFunction1 0016  
                                      _setPA0 049D                                        _setPA1 04A6  
                                      _setPA2 07F7                                        _setPB0 0485  
                                      _setPB1 048D                                        _setPA3 0608  
                                      _setPB2 0495                                        _setPA6 0EEC  
                                      _setPB4 0514                                        _setPB6 061A  
                                      clrloop 0EFD                              Filter@filter_buf 0026  
                            Filter@filter_sum 0040                                     ??_initPin 0020  
                     main@ucTimerDelayP2sLess 0063                       main@ucTimerDelayP2sMore 0064  
                   ??_vPutSampleDataIntoTable 0077                         ?_clearPinPortAndTimer 0070  
                                      saved_w 007E                       ??_clearTwelveHoursTimer 0020  
                 ?_process_AD_Converter_Value 0070                                 _adc_test_init 0FEB  
            __size_of_startTwentySecondsTimer 0012                     __end_of_getAD_ConvertFlag 0FC1  
                   __end_of_setAD_ConvertFlag 0FC6                    __size_of_vHandle20sTimeron 00E3  
 vPutSampleDataIntoTable@ucChannelFifthLength 006B                            __size_of_adc_start 0003  
                              __pcstackCOMMON 0070               __end_of_clearTwentySecondsTimer 06CF  
                        _uiSampleChannelFifth 0190                                 _setPB6AsInput 0628  
                        _uiSampleChannelSixth 01C0    vPutSampleDataIntoTable@ucChannelZeroLength 006E  
                    ??_clearTwentyMinuteTimer 0020                vPutSampleDataIntoTable@channel 0076  
                     ??_getAdOriginalCh0Value 0048                           main@ucTimerRightP5s 0068  
                   _isFinishedThreeHoursTimer 0F31                       ??_getAdOriginalCh2Value 0048  
                     ??_getAdOriginalCh5Value 0048                         __end_of_timer1_config 0F0E  
                     ??_getAdOriginalCh6Value 0048                                ?_adc_test_init 0020  
            __size_of_timer1_interrupt_config 0003                        main@ucTimerLessZeroP5s 0066  
                       __size_of_clrSampeTime 0002                                    __pbssBANK0 004A  
                                  __pbssBANK1 00A0                                    __pbssBANK3 0190  
                __size_ofi1_setAD_ConvertFlag 0004                                    adc_get@val 0072  
             __end_of_vPutSampleDataIntoTable 07B8                                       ?_Filter 0020  
                                  __pmaintext 0013                                main@uiCh5Value 0048  
                                  __pintentry 0004                           main@enumInteralStep 00B1  
                                  __ptext1010 04C1                                    __ptext1011 044F  
                                  __ptext1003 0000                                    __ptext1020 0F77  
                                  __ptext1012 0611                                    __ptext1004 051C  
                                  __ptext1021 0F0E                                    __ptext1013 0459  
                                  __ptext1005 0FB2                                    __ptext1030 0FEB  
                                  __ptext1022 0F3D                                    __ptext1014 04AE  
                                  __ptext1006 046F                                    __ptext1031 0EE3  
                                  __ptext1023 0F25                                    __ptext1015 0FC1  
                                  __ptext1007 0463                                    __ptext1040 04A6  
                                  __ptext1032 0F04                                    __ptext1024 0F63  
                                  __ptext1016 0FBD                                    __ptext1008 0FC9  
                                  __ptext1041 049D                                    __ptext1033 0EF4  
                                  __ptext1025 0F19                                    __ptext1017 0630  
                                  __ptext1009 05FF                                    __ptext1050 06EF  
                                  __ptext1042 0495                                    __ptext1034 0628  
                                  __ptext1026 0002                                    __ptext1018 062B  
                                  __ptext1051 07C4                                    __ptext1043 048D  
                                  __ptext1035 0EEC                                    __ptext1027 0EE6  
                                  __ptext1019 0F31                                    __ptext1052 07B8  
                                  __ptext1044 0485                                    __ptext1036 0514  
                                  __ptext1028 0F4F                                    __ptext1053 0743  
                                  __ptext1045 0F8B                                    __ptext1037 061A  
                                  __ptext1029 0FC6                                    __ptext1054 0000  
                                  __ptext1046 06CF                                    __ptext1038 0608  
                                  __ptext1047 06C7                                    __ptext1039 07F7  
                                  __ptext1048 04BB                                    __ptext1049 04B5  
                              ?_setPB6AsInput 0070                                       ?_setPA0 0070  
                                     ?_setPA1 0070                                       ?_setPA2 0070  
                                     ?_setPB0 0070                                       ?_setPA3 0070  
                                     ?_setPB1 0070                                       ?_setPB2 0070  
                                     ?_setPA6 0070                                       ?_setPB4 0070  
                                     ?_setPB6 0070                        ??_clearPinPortAndTimer 0020  
                       __size_of_clock_config 0008                                  _clrSampeTime 0002  
                           __end_of_adc_start 0FC9                          _uiTwentySecondsTimer 00A6  
                          _isPermitSampleTime 0EE6                                       Filter@i 0045  
                                     Filter@j 0044                 __size_of_startThreeHoursTimer 0014  
                  __size_of_getAD_ConvertFlag 0004                    __size_of_setAD_ConvertFlag 0005  
                              main@ucTimerP3s 00B5                                main@ucTimerP5s 0067  
                         ?_isPermitSampleTime 0070                                main@uiMaxValue 00A8  
                              main@uiMinValue 00AA                                  setPA0@bValue 0020  
                              main@uiOldValue 004A                                  setPA1@bValue 0020  
                             __size_of_Filter 0097                                  setPA2@bValue 0020  
                                setPB0@bValue 0020                                    _uiBigTimer 00A0  
                                setPA3@bValue 0020                                  setPB1@bValue 0020  
                                setPB2@bValue 0020                                  setPA6@bValue 0020  
                                setPB4@bValue 0020                                  _clock_config 0EF4  
                                     _adc_get 07B8                                  setPB6@bValue 0020  
                            _bPause20secTimer 00AE                               __size_of_setPA0 0009  
                             __size_of_setPA1 0008                               __size_of_setPB0 0008  
                             __size_of_setPA2 0009                               __size_of_setPB1 0008  
                             __size_of_setPA3 0009                               __size_of_setPB2 0008  
                             __size_of_setPB4 0008                               __size_of_setPA6 0008  
                             __size_of_setPB6 000E          __end_of_isFinishedTwentySecondsTimer 0F19  
       __size_of_isFinishedTwentySecondsTimer 000B                  _isFinishedTwentySecondsTimer 0F0E  
                        ??_isPermitSampleTime 0020                  __end_of_startTwelveHourTimer 0F77  
                                   _AD_Sample 0FC9                                  __size_of_ISR 0054  
             __size_of_clearTwentyMinuteTimer 0005                                       _initPin 0F8B  
                        _bSmallTimerStartFlag 004D                               ??_adc_test_init 0021  
                     _startTwentySecondsTimer 0F3D                              ??_vPause20sTimer 0020  
                        end_of_initialization 07F4                             Filter@filter_temp 003E  
                     ?_startTwentyMinuteTimer 0020                              main@ucLoaderStep 0058  
                             ??_setPB6AsInput 0020                                    ?_AD_Sample 0070  
               startTwentyMinuteTimer@uiValue 0020                   __size_of_vHandle20sTimerOut 0053  
               ?_isFinishedTwentySecondsTimer 0070                  ??_isFinishedTwelveHoursTimer 0020  
                                   Filter@cir 0042                           _bTwentyMinStartFlag 004E  
                            _adc_convert_flag 00AD                        __size_of_clearAllTimer 0007  
                __end_of_clearThreeHoursTimer 04C1                       main@ucTimerLargeZeroP5s 0065  
              __size_of_clearTwelveHoursTimer 0006                       _timer1_interrupt_config 0EE3  
               __end_of_clearTwelveHoursTimer 04BB             vHandle20sTimeron@ucLessThanP3sCnt 00BA  
           vHandle20sTimeron@ucLessThanP8sCnt 00BB            __size_of_isFinishedThreeHoursTimer 000C  
                      _clearTwentyMinuteTimer 06CF                __end_of_startTwentyMinuteTimer 0F63  
                            main@ucTimerX1P5s 00B6                              main@ucTimerX2P5s 00B7  
                      main@ucTimerZeroPoint3s 0069                        main@ucTimerZeroPoint5s 006A  
                            main@ucTimerDelay 005E                                __end_of_Filter 06C7  
                  __end_of_clearParaFunction1 0485                           _bTwentySecStartFlag 004F  
         __size_of_isFinishedTwelveHoursTimer 000C   vPutSampleDataIntoTable@ucChannelSixthLength 006D  
                    vPutSampleDataIntoTable@i 0077                           i1_setAD_ConvertFlag 07C4  
                              __end_of_setPA0 04A6                                __end_of_setPA1 04AE  
                              __end_of_setPB0 048D                                __end_of_setPA2 0800  
                              __end_of_setPB1 0495                                __end_of_setPA3 0611  
                              __end_of_setPB2 049D                                __end_of_setPB4 051C  
                              __end_of_setPA6 0EF4                                __end_of_setPB6 0628  
                   ??_startTwentySecondsTimer 0020                           start_initialization 07E0  
                                 __end_of_ISR 0743                          main@ucTimerLessX1P5s 00B3  
                        main@ucTimerLessX2P5s 00B4                __size_of_getAdOriginalCh0Value 000A  
                    ?_clearTwentySecondsTimer 0070                __size_of_getAdOriginalCh2Value 0009  
                       _uiSampleChannelSecond 01A8                 __end_of_getAdOriginalCh0Value 0463  
               __end_of_getAdOriginalCh2Value 0608                __size_of_getAdOriginalCh5Value 000A  
              __size_of_getAdOriginalCh6Value 0009                 __end_of_getAdOriginalCh5Value 0459  
               __end_of_getAdOriginalCh6Value 061A                          ?i1_setAD_ConvertFlag 0070  
                        _startTwelveHourTimer 0F63             __end_of_isFinishedThreeHoursTimer 0F3D  
                          main@enumBranchStep 00B0                                      ??_Filter 0022  
                               _clearAllTimer 04AE                 vHandle20sTimeron@ucTimeCntP2s 00BE  
                                 _ucADC4_Step 0053                vHandle20sTimeron@ucCompareStep 00B9  
                                    ??_setPA0 0020                                      ??_setPA1 0020  
                                    ??_setPA2 0020                                      ??_setPB0 0020  
                                    ??_setPA3 0020                                      ??_setPB1 0020  
                                    ??_setPB2 0020                                      ??_setPA6 0020  
                                    ??_setPB4 0020                                      ??_setPB6 0020  
               vHandle20sTimeron@ucTimerCntN1 00C1                      ?_vPutSampleDataIntoTable 0074  
                                 ??_AD_Sample 0023                     ??_timer1_interrupt_config 0020  
                                 __pbssCOMMON 007D                                 __pcstackBANK0 0020  
              ??_isFinishedTwentySecondsTimer 0020                                     _adc_start 0FC6  
             vHandle20sTimeron@ucTimerCntLess 00BF                              _enumMainLoopStep 0050  
             vHandle20sTimeron@ucTimerCntMore 00C0                           _uiSampleChannelZero 00C4  
                       ??i1_setAD_ConvertFlag 0070                         ?_startTwelveHourTimer 0020  
             __end_of_startTwentySecondsTimer 0F4F                                ?_clearAllTimer 0070  
                      __size_of_timer1_config 000A                          _clearThreeHoursTimer 04BB  
                __end_of_startThreeHoursTimer 0F8B                           _uiTwentyMinuteTimer 00A4  
                                    ?_adc_get 0070                                     __pswtext1 0800  
                                   __pswtext2 080E                                     __pswtext3 081C  
          __end_of_isFinishedTwelveHoursTimer 0F31                    _isFinishedTwelveHoursTimer 0F25  
                             ISR@ucTimer1sCnt 00AC                                      ?_initPin 0070  
               __size_of_clearPinPortAndTimer 000C                                    ?_adc_start 0070  
                           interrupt_function 0004               __end_of_timer1_interrupt_config 0EE6  
                       ?_clearThreeHoursTimer 0070                  ?_isFinishedTwentyMinuteTimer 0070  
                        adc_test_init@channel 0022           vPutSampleDataIntoTable@uiSampleData 0074  
                 __size_of_isPermitSampleTime 0006                                  _uiSmallTimer 00A2  
                       __end_of_adc_test_init 1000                                 _timer1_config 0F04  
                ??_process_AD_Converter_Value 0023                       ?_clearTwentyMinuteTimer 0070  
                      ??_startTwelveHourTimer 0022                               ??_clearAllTimer 0020  
                 main@ucFourthSuffix1TimerP3s 0057                 ??_isFinishedTwentyMinuteTimer 0020  
                  __end_of_vHandle20sTimerOut 0514                         __end_of_setPB6AsInput 062B  
                            __size_of_adc_get 000C                vHandle20sTimeron@ucTimerCntP5s 00C2  
         __size_of_process_AD_Converter_Value 000B                 vHandle20sTimeron@waitLoopStep 00C3  
                          _clearParaFunction1 046F                              __size_of_initPin 0027  
                              Filter@tmpValue 0020                                ?_timer1_config 0070  
              __end_of_clearTwentyMinuteTimer 06D4                                   ??_adc_start 0020  
vPutSampleDataIntoTable@ucChannelSecondLength 006C                          _startThreeHoursTimer 0F77  
                         ?_clearParaFunction1 0070                         _clearTwelveHoursTimer 04B5  
                               __size_of_main 043C                       __size_of_vPause20sTimer 0005  
                                    clear_ram 0EFC                        ??_clearThreeHoursTimer 0020  
            __size_of_clearTwentySecondsTimer 0008                          ??_clearParaFunction1 0021  
                               ?_clrSampeTime 0070       vHandle20sTimerOut@ucTimerOnBehaviorStep 00B8  
                                 _sampleTimes 0052          __size_of_isFinishedTwentyMinuteTimer 000C  
                       ?_startThreeHoursTimer 0020              __size_of_vPutSampleDataIntoTable 0075  
                                    intlevel1 0000                         _getAdOriginalCh0Value 0459  
                       _getAdOriginalCh2Value 05FF                         _getAdOriginalCh5Value 044F  
                       _getAdOriginalCh6Value 0611                    ?_isFinishedThreeHoursTimer 0070  
                vHandle20sTimerOut@bClearStep 0021                             main@ucLoaderStep1 0059  
                           main@ucLoaderStep2 005A                             main@ucLoaderStep3 005B  
                           main@ucLoaderStep4 005C                                 ?_clock_config 0070  
                    ?_startTwentySecondsTimer 0070                 startThreeHoursTimer@uiSetTime 0020  
                     i1setAD_ConvertFlag@flag 0070                                ??_clrSampeTime 0020  
                 ?_isFinishedTwelveHoursTimer 0070                            _bBigTimerStartFlag 004C  
                             ??_timer1_config 0020                             main@bCheckTweHour 0055  
                 __end_ofi1_setAD_ConvertFlag 07C8            __end_of_process_AD_Converter_Value 0FBD  
                  _process_AD_Converter_Value 0FB2                        ?_clearTwelveHoursTimer 0070  
                    ??_startTwentyMinuteTimer 0022                              adc_test_init@ref 0020  
                __end_of_clearPinPortAndTimer 046F  
