

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 20 14:10:56 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1367,local,class=CODE,delta=2
    17                           	psect	text1368,local,class=CODE,delta=2
    18                           	psect	text1369,local,class=CODE,delta=2
    19                           	psect	text1370,local,class=CODE,delta=2
    20                           	psect	text1371,local,class=CODE,delta=2
    21                           	psect	text1376,local,class=CODE,delta=2
    22                           	psect	text1377,local,class=CODE,delta=2
    23                           	psect	text1378,local,class=CODE,delta=2
    24                           	psect	text1379,local,class=CODE,delta=2
    25                           	psect	text1380,local,class=CODE,delta=2
    26                           	psect	text1381,local,class=CODE,delta=2
    27                           	psect	text1382,local,class=CODE,delta=2
    28                           	psect	text1383,local,class=CODE,delta=2
    29                           	psect	text1384,local,class=CODE,delta=2
    30                           	psect	text1385,local,class=CODE,delta=2
    31                           	psect	text1387,local,class=CODE,delta=2
    32                           	psect	text1389,local,class=CODE,delta=2
    33                           	psect	text1390,local,class=CODE,delta=2
    34                           	psect	text1391,local,class=CODE,delta=2
    35                           	psect	text1392,local,class=CODE,delta=2
    36                           	psect	text1393,local,class=CODE,delta=2
    37                           	psect	text1398,local,class=CODE,delta=2
    38                           	psect	text1399,local,class=CODE,delta=2
    39                           	psect	text1400,local,class=CODE,delta=2
    40                           	psect	text1408,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text1415,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x1E0,16
    45                           	dabs	1,0x7E,2
    46  000A                     	;#
    47                           
    48                           	psect	config
    49  2000  0FFF               	dw	4095	;#
    50  2001  3FDE               	dw	16350	;#
    51  2002  3F78               	dw	16248	;#
    52                           
    53                           	psect	idataBANK0
    54  0000                     __pidataBANK0:	
    55  01E0                     _key	set	480	;_key
    56  001F                     _ADCON0	set	31
    57  001E                     _ADRESH	set	30
    58  0017                     _CCP1CON	set	23
    59  0015                     _CCPR1L	set	21
    60  001B                     _OP1CON0	set	27
    61  001C                     _OP1CON1	set	28
    62  001D                     _OP1CON2	set	29
    63  0010                     _T1CON	set	16
    64  0012                     _T2CON	set	18
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0030                     _PB0	set	48
    72  0031                     _PB1	set	49
    73  0032                     _PB2	set	50
    74  0033                     _PB3	set	51
    75  005E                     _PEIE	set	94
    76  0060                     _TMR1IF	set	96
    77  009F                     _ADCON1	set	159
    78  009E                     _ADRESL	set	158
    79  0092                     _PR2	set	146
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90  0C42                     _PBOD2	set	3138
    91  0C78                     _SRAM_MAP	set	3192
    92                           
    93                           	psect	cinit
    94  0546                     start_initialization:	
    95  0546  303D               	movlw	low __pbssBANK0
    96                           
    97                           ; Clear objects allocated to COMMON
    98  0547  01FB               	clrf	__pbssCOMMON& (0+127)
    99  0548  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   100  0549  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  054A  1383               	bcf	3,7	;select IRP bank0
   104  054B  0084               	movwf	4
   105  054C  3055               	movlw	low (__pbssBANK0+24)
   106  054D  118A  2601  118A   	fcall	clear_ram
   107                           
   108                           ; Clear objects allocated to BANK1
   109  0550  30A0               	movlw	low __pbssBANK1
   110  0551  0084               	movwf	4
   111  0552  30C0               	movlw	low (__pbssBANK1+32)
   112  0553  118A  2601         	fcall	clear_ram
   113                           
   114                           ;initializer for _sampleChannelSelect
   115  0555  3002               	movlw	2
   116  0556  00D5               	movwf	__pdataBANK0& (0+127)
   117                           
   118                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   119  0557  304B               	movlw	75
   120  0558  00D6               	movwf	(__pdataBANK0+1)& (0+127)
   121  0559                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  0559  0183               	clrf	3
   125  055A  118A  2A34         	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMMON
   128  007B                     __pbssCOMMON:	
   129  007B                     vPutSampleDataIntoTable@uiCalWidthArrayNew:	
   130  007B                     	ds	2
   131  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   132  007D                     	ds	1
   133                           
   134                           	psect	bssBANK0
   135  003D                     __pbssBANK0:	
   136  003D                     _uiBigTimer:	
   137  003D                     	ds	2
   138  003F                     _uiOneHourTimer:	
   139  003F                     	ds	2
   140  0041                     _uiSmallTimer:	
   141  0041                     	ds	2
   142  0043                     vPutSampleDataIntoTable@uiCalWidthArrayOld:	
   143  0043                     	ds	2
   144  0045                     ISR@ucTimer1sCnt:	
   145  0045                     	ds	1
   146  0046                     _adc_convert_flag:	
   147  0046                     	ds	1
   148  0047                     _bBigTimerStartFlag:	
   149  0047                     	ds	1
   150  0048                     _bOneHourTimerStartFlag:	
   151  0048                     	ds	1
   152  0049                     _bSmallTimerStartFlag:	
   153  0049                     	ds	1
   154  004A                     _bTwentyMinStartFlag:	
   155  004A                     	ds	1
   156  004B                     _bWaitResetFlag:	
   157  004B                     	ds	1
   158  004C                     _sampleTimes:	
   159  004C                     	ds	1
   160  004D                     _timer:	
   161  004D                     	ds	1
   162  004E                     main@cTimerP5s_795:	
   163  004E                     	ds	1
   164  004F                     main@cTimerP5s_801:	
   165  004F                     	ds	1
   166  0050                     main@ucStep:	
   167  0050                     	ds	1
   168  0051                     main@ucTimerP3s:	
   169  0051                     	ds	1
   170  0052                     main@ucTimerP5s:	
   171  0052                     	ds	1
   172  0053                     vPutSampleDataIntoTable@ucCh13Length:	
   173  0053                     	ds	1
   174  0054                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   175  0054                     	ds	1
   176                           
   177                           	psect	dataBANK0
   178  0055                     __pdataBANK0:	
   179  0055                     _sampleChannelSelect:	
   180  0055                     	ds	1
   181  0056                     vPutSampleDataIntoTable@uiInitWidth:	
   182  0056                     	ds	1
   183                           
   184                           	psect	bssBANK1
   185  00A0                     __pbssBANK1:	
   186  00A0                     _ad_offset:	
   187  00A0                     	ds	2
   188  00A2                     _uiTwentyMinTimer:	
   189  00A2                     	ds	2
   190  00A4                     _uiTwentySecondsTimer:	
   191  00A4                     	ds	2
   192  00A6                     main@ucDelay1s:	
   193  00A6                     	ds	2
   194  00A8                     main@uiTimerOneP5s:	
   195  00A8                     	ds	2
   196  00AA                     main@uiTimerTwoP5s:	
   197  00AA                     	ds	2
   198  00AC                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   199  00AC                     	ds	2
   200  00AE                     _uiSampleCh12:	
   201  00AE                     	ds	6
   202  00B4                     _uiSampleCh13:	
   203  00B4                     	ds	6
   204  00BA                     _uiSampleChannelFourteenth:	
   205  00BA                     	ds	6
   206                           
   207                           	psect	clrtext
   208  0601                     clear_ram:	
   209                           ;	Called with FSR containing the base address, and
   210                           ;	W with the last address+1
   211                           
   212  0601  0064               	clrwdt	;clear the watchdog before getting into this loop
   213  0602                     clrloop:	
   214  0602  0180               	clrf	0	;clear RAM location pointed to by FSR
   215  0603  0A84               	incf	4,f	;increment pointer
   216  0604  0604               	xorwf	4,w	;XOR with final address
   217  0605  1903               	btfsc	3,2	;have we reached the end yet?
   218  0606  3400               	retlw	0	;all done for this memory range, return
   219  0607  0604               	xorwf	4,w	;XOR again to restore value
   220  0608  2E02               	goto	clrloop	;do the next byte
   221                           
   222                           	psect	cstackBANK1
   223  00C0                     __pcstackBANK1:	
   224  00C0                     ??_FilterCh13:	
   225                           
   226                           ; 0 bytes @ 0x0
   227  00C0                     	ds	4
   228  00C4                     FilterCh13@tmpValue:	
   229                           
   230                           ; 1 bytes @ 0x4
   231  00C4                     	ds	1
   232  00C5                     FilterCh13@filter_temp:	
   233                           
   234                           ; 2 bytes @ 0x5
   235  00C5                     	ds	2
   236  00C7                     FilterCh13@filter_sum:	
   237                           
   238                           ; 2 bytes @ 0x7
   239  00C7                     	ds	2
   240  00C9                     FilterCh13@filter_buf:	
   241                           
   242                           ; 6 bytes @ 0x9
   243  00C9                     	ds	6
   244  00CF                     FilterCh13@cir:	
   245                           
   246                           ; 2 bytes @ 0xF
   247  00CF                     	ds	2
   248  00D1                     FilterCh13@j:	
   249                           
   250                           ; 1 bytes @ 0x11
   251  00D1                     	ds	1
   252  00D2                     FilterCh13@i:	
   253                           
   254                           ; 1 bytes @ 0x12
   255  00D2                     	ds	1
   256  00D3                     ??_main:	
   257                           
   258                           ; 0 bytes @ 0x13
   259  00D3                     	ds	1
   260  00D4                     main@ucChValue:	
   261                           
   262                           ; 2 bytes @ 0x14
   263  00D4                     	ds	2
   264  00D6                     main@uiCh13Value:	
   265                           
   266                           ; 2 bytes @ 0x16
   267  00D6                     	ds	2
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:	
   271  0070                     ?_clearTwelveHoursTimer:	
   272  0070                     ?_clearThreeHoursTimer:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_clearOneHoursTimer:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_clearTwentyMinTimer:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_clock_config:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_timer1_config:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_timer1_interrupt_config:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_uid_get:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_op1_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_adc_start:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?_process_AD_Converter_Value:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_clrSampeTime:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_setWaitResetFlag:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?_AD_Sample:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_initPB3:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_setPB3:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_initPB4:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_setPB4:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_initPB5:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_setPB5:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_initPB2_AsHighResistence:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_initPin:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_setPinInitVaule:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_selectAdChannel:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_reset:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_resetAllTimer:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ??_getWaitResetFlag:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?_setPWM_Width:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ??_setPWM_Width:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0070                     ?_setAD_ConvertFlag:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0070                     ?_ISR:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0070                     ?i1_setAD_ConvertFlag:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0070                     ??i1_setAD_ConvertFlag:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0070                     ?_isPermitSampleTime:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0070                     ?_isFinishedTwentyMinTimer:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_isFinishedTwelveHoursTimer:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_isFinishedThreeHoursTimer:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_isFinishedOneHoursTimer:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_getWaitResetFlag:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_getAD_ConvertFlag:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_adc_get:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_main:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0070                     ?_Filter:	
   396                           ; 2 bytes @ 0x0
   397                           
   398  0070                     setPWM_Width@ucWidth:	
   399                           ; 2 bytes @ 0x0
   400                           
   401  0070                     i1setAD_ConvertFlag@flag:	
   402                           ; 1 bytes @ 0x0
   403                           
   404                           
   405                           ; 1 bytes @ 0x0
   406  0070                     	ds	2
   407  0072                     ??_adc_get:	
   408  0072                     ??_Filter:	
   409                           ; 0 bytes @ 0x2
   410                           
   411  0072                     adc_get@val:	
   412                           ; 0 bytes @ 0x2
   413                           
   414                           
   415                           ; 2 bytes @ 0x2
   416  0072                     	ds	4
   417  0076                     ?_vPutSampleDataIntoTable:	
   418  0076                     vPutSampleDataIntoTable@uiSampleData:	
   419                           ; 0 bytes @ 0x6
   420                           
   421                           
   422                           ; 2 bytes @ 0x6
   423  0076                     	ds	2
   424  0078                     vPutSampleDataIntoTable@channel:	
   425                           
   426                           ; 1 bytes @ 0x8
   427  0078                     	ds	1
   428  0079                     ??_vPutSampleDataIntoTable:	
   429                           
   430                           ; 0 bytes @ 0x9
   431  0079                     	ds	2
   432                           
   433                           	psect	cstackBANK0
   434  0020                     __pcstackBANK0:	
   435  0020                     Filter@filter_temp:	
   436                           
   437                           ; 2 bytes @ 0x0
   438  0020                     	ds	2
   439  0022                     Filter@filter_sum:	
   440                           
   441                           ; 2 bytes @ 0x2
   442  0022                     	ds	2
   443  0024                     Filter@tmpValue:	
   444                           
   445                           ; 1 bytes @ 0x4
   446  0024                     	ds	1
   447  0025                     Filter@filter_buf:	
   448                           
   449                           ; 6 bytes @ 0x5
   450  0025                     	ds	6
   451  002B                     Filter@cir:	
   452                           
   453                           ; 2 bytes @ 0xB
   454  002B                     	ds	2
   455  002D                     Filter@j:	
   456                           
   457                           ; 1 bytes @ 0xD
   458  002D                     	ds	1
   459  002E                     Filter@i:	
   460                           
   461                           ; 1 bytes @ 0xE
   462  002E                     	ds	1
   463  002F                     vPutSampleDataIntoTable@uiAbstractValue:	
   464                           
   465                           ; 2 bytes @ 0xF
   466  002F                     	ds	2
   467  0031                     vPutSampleDataIntoTable@i:	
   468                           
   469                           ; 2 bytes @ 0x11
   470  0031                     	ds	2
   471  0033                     vPutSampleDataIntoTable@uiDeviationValue:	
   472                           
   473                           ; 2 bytes @ 0x13
   474  0033                     	ds	2
   475  0035                     ??_ISR:	
   476                           
   477                           ; 0 bytes @ 0x15
   478  0035                     	ds	4
   479  0039                     ??_clearTwelveHoursTimer:	
   480  0039                     ??_clearThreeHoursTimer:	
   481                           ; 0 bytes @ 0x19
   482                           
   483  0039                     ??_clearOneHoursTimer:	
   484                           ; 0 bytes @ 0x19
   485                           
   486  0039                     ??_clearTwentyMinTimer:	
   487                           ; 0 bytes @ 0x19
   488                           
   489  0039                     ??_clock_config:	
   490                           ; 0 bytes @ 0x19
   491                           
   492  0039                     ??_timer1_config:	
   493                           ; 0 bytes @ 0x19
   494                           
   495  0039                     ??_timer1_interrupt_config:	
   496                           ; 0 bytes @ 0x19
   497                           
   498  0039                     ??_uid_get:	
   499                           ; 0 bytes @ 0x19
   500                           
   501  0039                     ??_op1_init:	
   502                           ; 0 bytes @ 0x19
   503                           
   504  0039                     ?_adc_test_init:	
   505                           ; 0 bytes @ 0x19
   506                           
   507  0039                     ?_startTwentyMinTimer:	
   508                           ; 0 bytes @ 0x19
   509                           
   510  0039                     ??_adc_start:	
   511                           ; 0 bytes @ 0x19
   512                           
   513  0039                     ??_isPermitSampleTime:	
   514                           ; 0 bytes @ 0x19
   515                           
   516  0039                     ??_clrSampeTime:	
   517                           ; 0 bytes @ 0x19
   518                           
   519  0039                     ??_isFinishedTwentyMinTimer:	
   520                           ; 0 bytes @ 0x19
   521                           
   522  0039                     ?_startTwelveHourTimer:	
   523                           ; 0 bytes @ 0x19
   524                           
   525  0039                     ??_isFinishedTwelveHoursTimer:	
   526                           ; 0 bytes @ 0x19
   527                           
   528  0039                     ?_startThreeHoursTimer:	
   529                           ; 0 bytes @ 0x19
   530                           
   531  0039                     ??_isFinishedThreeHoursTimer:	
   532                           ; 0 bytes @ 0x19
   533                           
   534  0039                     ?_startOneHoursTimer:	
   535                           ; 0 bytes @ 0x19
   536                           
   537  0039                     ??_isFinishedOneHoursTimer:	
   538                           ; 0 bytes @ 0x19
   539                           
   540  0039                     ??_setWaitResetFlag:	
   541                           ; 0 bytes @ 0x19
   542                           
   543  0039                     ??_AD_Sample:	
   544                           ; 0 bytes @ 0x19
   545                           
   546  0039                     ??_initPB3:	
   547                           ; 0 bytes @ 0x19
   548                           
   549  0039                     ??_setPB3:	
   550                           ; 0 bytes @ 0x19
   551                           
   552  0039                     ??_initPB4:	
   553                           ; 0 bytes @ 0x19
   554                           
   555  0039                     ??_setPB4:	
   556                           ; 0 bytes @ 0x19
   557                           
   558  0039                     ??_initPB5:	
   559                           ; 0 bytes @ 0x19
   560                           
   561  0039                     ??_setPB5:	
   562                           ; 0 bytes @ 0x19
   563                           
   564  0039                     ??_initPB2_AsHighResistence:	
   565                           ; 0 bytes @ 0x19
   566                           
   567  0039                     ?_pwm_start:	
   568                           ; 0 bytes @ 0x19
   569                           
   570  0039                     ??_selectAdChannel:	
   571                           ; 0 bytes @ 0x19
   572                           
   573  0039                     ??_reset:	
   574                           ; 0 bytes @ 0x19
   575                           
   576  0039                     ??_resetAllTimer:	
   577                           ; 0 bytes @ 0x19
   578                           
   579  0039                     ??_getAD_ConvertFlag:	
   580                           ; 0 bytes @ 0x19
   581                           
   582  0039                     ??_setAD_ConvertFlag:	
   583                           ; 0 bytes @ 0x19
   584                           
   585  0039                     ?_FilterCh13:	
   586                           ; 0 bytes @ 0x19
   587                           
   588  0039                     initPB3@bValue:	
   589                           ; 2 bytes @ 0x19
   590                           
   591  0039                     setPB3@bValue:	
   592                           ; 1 bytes @ 0x19
   593                           
   594  0039                     initPB4@bValue:	
   595                           ; 1 bytes @ 0x19
   596                           
   597  0039                     setPB4@bValue:	
   598                           ; 1 bytes @ 0x19
   599                           
   600  0039                     initPB5@bValue:	
   601                           ; 1 bytes @ 0x19
   602                           
   603  0039                     setPB5@bValue:	
   604                           ; 1 bytes @ 0x19
   605                           
   606  0039                     pwm_start@ucPulseFrequency:	
   607                           ; 1 bytes @ 0x19
   608                           
   609  0039                     setWaitResetFlag@bValue:	
   610                           ; 1 bytes @ 0x19
   611                           
   612  0039                     setAD_ConvertFlag@flag:	
   613                           ; 1 bytes @ 0x19
   614                           
   615  0039                     adc_test_init@ref:	
   616                           ; 1 bytes @ 0x19
   617                           
   618  0039                     startTwelveHourTimer@uiSetTime:	
   619                           ; 1 bytes @ 0x19
   620                           
   621  0039                     startThreeHoursTimer@uiSetTime:	
   622                           ; 2 bytes @ 0x19
   623                           
   624  0039                     startOneHoursTimer@uiSetTime:	
   625                           ; 2 bytes @ 0x19
   626                           
   627  0039                     startTwentyMinTimer@uiSetValue:	
   628                           ; 2 bytes @ 0x19
   629                           
   630                           
   631                           ; 2 bytes @ 0x19
   632  0039                     	ds	1
   633  003A                     ??_adc_test_init:	
   634  003A                     ??_pwm_start:	
   635                           ; 0 bytes @ 0x1A
   636                           
   637  003A                     ??_initPin:	
   638                           ; 0 bytes @ 0x1A
   639                           
   640  003A                     ??_setPinInitVaule:	
   641                           ; 0 bytes @ 0x1A
   642                           
   643  003A                     pwm_start@ucPulseWidth:	
   644                           ; 0 bytes @ 0x1A
   645                           
   646                           
   647                           ; 1 bytes @ 0x1A
   648  003A                     	ds	1
   649  003B                     ??_startTwentyMinTimer:	
   650  003B                     ??_startTwelveHourTimer:	
   651                           ; 0 bytes @ 0x1B
   652                           
   653  003B                     ??_startThreeHoursTimer:	
   654                           ; 0 bytes @ 0x1B
   655                           
   656  003B                     ??_startOneHoursTimer:	
   657                           ; 0 bytes @ 0x1B
   658                           
   659  003B                     ?_getAdOriginalCh13Value:	
   660                           ; 0 bytes @ 0x1B
   661                           
   662  003B                     adc_test_init@channel:	
   663                           ; 2 bytes @ 0x1B
   664                           
   665                           
   666                           ; 1 bytes @ 0x1B
   667  003B                     	ds	1
   668  003C                     ??_process_AD_Converter_Value:	
   669                           
   670                           ; 0 bytes @ 0x1C
   671  003C                     	ds	1
   672  003D                     ??_getAdOriginalCh13Value:	
   673                           
   674                           	psect	maintext
   675  0234                     __pmaintext:	
   676                           ; 0 bytes @ 0x1D
   677 ;;Data sizes: Strings 0, constant 0, data 2, bss 59, persistent 0 stack 0
   678 ;;Auto spaces:   Size  Autos    Used
   679 ;; COMMON          14     11      14
   680 ;; BANK0           80     29      55
   681 ;; BANK1           80     24      56
   682 ;; BANK3           80      0       0
   683 ;; BANK2           96      0       0
   684 ;;
   685 ;; Pointer list with targets:
   686 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   687 ;;
   688 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   689 ;;
   690 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   691 ;;
   692 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   693 ;;
   694 ;; Filter@tmpValue	PTR unsigned int  size(1) Largest target is 6
   695 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   696 ;;
   697 ;; FilterCh13@tmpValue	PTR unsigned int  size(1) Largest target is 6
   698 ;;		 -> uiSampleCh13(BANK1[6]), 
   699 ;;
   700 ;;
   701 ;; Critical Paths under _main in COMMON
   702 ;;
   703 ;;   None.
   704 ;;
   705 ;; Critical Paths under _ISR in COMMON
   706 ;;
   707 ;;   _ISR->_vPutSampleDataIntoTable
   708 ;;   _vPutSampleDataIntoTable->_Filter
   709 ;;
   710 ;; Critical Paths under _main in BANK0
   711 ;;
   712 ;;   _main->_getAdOriginalCh13Value
   713 ;;   _getAdOriginalCh13Value->_FilterCh13
   714 ;;   _process_AD_Converter_Value->_adc_test_init
   715 ;;   _setPinInitVaule->_setPB3
   716 ;;   _setPinInitVaule->_setPB4
   717 ;;   _setPinInitVaule->_setPB5
   718 ;;   _initPin->_initPB3
   719 ;;   _initPin->_initPB4
   720 ;;   _initPin->_initPB5
   721 ;;
   722 ;; Critical Paths under _ISR in BANK0
   723 ;;
   724 ;;   _ISR->_vPutSampleDataIntoTable
   725 ;;   _vPutSampleDataIntoTable->_Filter
   726 ;;
   727 ;; Critical Paths under _main in BANK1
   728 ;;
   729 ;;   _getAdOriginalCh13Value->_FilterCh13
   730 ;;
   731 ;; Critical Paths under _ISR in BANK1
   732 ;;
   733 ;;   None.
   734 ;;
   735 ;; Critical Paths under _main in BANK3
   736 ;;
   737 ;;   None.
   738 ;;
   739 ;; Critical Paths under _ISR in BANK3
   740 ;;
   741 ;;   None.
   742 ;;
   743 ;; Critical Paths under _main in BANK2
   744 ;;
   745 ;;   None.
   746 ;;
   747 ;; Critical Paths under _ISR in BANK2
   748 ;;
   749 ;;   None.
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   752 ;;
   753 ;;
   754 ;;Call Graph Tables:
   755 ;;
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   758 ;; ---------------------------------------------------------------------------------
   759 ;; (0) _main                                                 5     5      0    1665
   760 ;;                                             19 BANK1      5     5      0
   761 ;;                            _initPin
   762 ;;                    _setPinInitVaule
   763 ;;                    _selectAdChannel
   764 ;;                       _clock_config
   765 ;;                      _timer1_config
   766 ;;            _timer1_interrupt_config
   767 ;;                            _uid_get
   768 ;;                           _op1_init
   769 ;;                      _adc_test_init
   770 ;;                _startTwentyMinTimer
   771 ;;                          _adc_start
   772 ;;         _process_AD_Converter_Value
   773 ;;                 _isPermitSampleTime
   774 ;;                       _clrSampeTime
   775 ;;           _isFinishedTwentyMinTimer
   776 ;;             _getAdOriginalCh13Value
   777 ;;                          _pwm_start
   778 ;;                             _setPB3
   779 ;;                             _setPB4
   780 ;;                             _setPB5
   781 ;;                _clearTwentyMinTimer
   782 ;;               _startTwelveHourTimer
   783 ;;         _isFinishedTwelveHoursTimer
   784 ;;              _clearTwelveHoursTimer
   785 ;;               _startThreeHoursTimer
   786 ;;          _isFinishedThreeHoursTimer
   787 ;;               _clearThreeHoursTimer
   788 ;;                 _startOneHoursTimer
   789 ;;            _isFinishedOneHoursTimer
   790 ;;                      _resetAllTimer
   791 ;;                   _setWaitResetFlag
   792 ;;                              _reset
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   795 ;;                                             27 BANK0      2     0      2
   796 ;;                         _FilterCh13
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   799 ;;                  _getAD_ConvertFlag
   800 ;;                  _setAD_ConvertFlag
   801 ;;                          _AD_Sample
   802 ;;                      _adc_test_init
   803 ;;                          _adc_start
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _resetAllTimer                                        0     0      0       0
   806 ;;              _clearTwelveHoursTimer
   807 ;;               _clearThreeHoursTimer
   808 ;;                 _clearOneHoursTimer
   809 ;;                _clearTwentyMinTimer
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (1) _setPinInitVaule                                      0     0      0      93
   812 ;;                             _setPB3
   813 ;;                             _setPB4
   814 ;;                             _setPB5
   815 ;; ---------------------------------------------------------------------------------
   816 ;; (1) _initPin                                              0     0      0      93
   817 ;;           _initPB2_AsHighResistence
   818 ;;                            _initPB3
   819 ;;                            _initPB4
   820 ;;                            _initPB5
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (2) _AD_Sample                                            0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   825 ;;                                             25 BANK0      1     1      0
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (2) _FilterCh13                                          21    19      2     915
   830 ;;                                             25 BANK0      2     0      2
   831 ;;                                              0 BANK1     19    19      0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (1) _setWaitResetFlag                                     1     1      0      31
   834 ;;                                             25 BANK0      1     1      0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _startOneHoursTimer                                   2     0      2      31
   839 ;;                                             25 BANK0      2     0      2
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   844 ;;                                             25 BANK0      2     0      2
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   849 ;;                                             25 BANK0      2     0      2
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (1) _clrSampeTime                                         0     0      0       0
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (1) _isPermitSampleTime                                   0     0      0       0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (2) _adc_start                                            0     0      0       0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   860 ;;                                             25 BANK0      2     0      2
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _adc_test_init                                        3     2      1      62
   863 ;;                                             25 BANK0      3     2      1
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (1) _op1_init                                             0     0      0       0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _uid_get                                              0     0      0       0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _timer1_interrupt_config                              0     0      0       0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (1) _timer1_config                                        0     0      0       0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (1) _clock_config                                         0     0      0       0
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (2) _clearTwentyMinTimer                                  0     0      0       0
   876 ;; ---------------------------------------------------------------------------------
   877 ;; (2) _clearOneHoursTimer                                   0     0      0       0
   878 ;; ---------------------------------------------------------------------------------
   879 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (1) _reset                                                0     0      0       0
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _selectAdChannel                                      0     0      0       0
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (1) _pwm_start                                            2     1      1      62
   888 ;;                                             25 BANK0      2     1      1
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (1) _setPB5                                               1     1      0      31
   893 ;;                                             25 BANK0      1     1      0
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (2) _initPB5                                              1     1      0      31
   896 ;;                                             25 BANK0      1     1      0
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (1) _setPB4                                               1     1      0      31
   899 ;;                                             25 BANK0      1     1      0
   900 ;; ---------------------------------------------------------------------------------
   901 ;; (2) _initPB4                                              1     1      0      31
   902 ;;                                             25 BANK0      1     1      0
   903 ;; ---------------------------------------------------------------------------------
   904 ;; (1) _setPB3                                               1     1      0      31
   905 ;;                                             25 BANK0      1     1      0
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (2) _initPB3                                              1     1      0      31
   908 ;;                                             25 BANK0      1     1      0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; Estimated maximum stack depth 2
   911 ;; ---------------------------------------------------------------------------------
   912 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (3) _ISR                                                  4     4      0    1208
   915 ;;                                             21 BANK0      4     4      0
   916 ;;                i1_setAD_ConvertFlag
   917 ;;                            _adc_get
   918 ;;            _vPutSampleDataIntoTable
   919 ;; ---------------------------------------------------------------------------------
   920 ;; (4) _vPutSampleDataIntoTable                             11     8      3    1110
   921 ;;                                              6 COMMON     5     2      3
   922 ;;                                             15 BANK0      6     6      0
   923 ;;                             _Filter
   924 ;;                   _getWaitResetFlag
   925 ;;                       _setPWM_Width
   926 ;;                            _adc_get (ARG)
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   929 ;;                                              0 COMMON     1     1      0
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (4) _adc_get                                              4     2      2      25
   932 ;;                                              0 COMMON     4     2      2
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (5) _Filter                                              21    19      2     620
   935 ;;                                              0 COMMON     6     4      2
   936 ;;                                              0 BANK0     15    15      0
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (5) _setPWM_Width                                         1     1      0      33
   939 ;;                                              0 COMMON     1     1      0
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (5) _getWaitResetFlag                                     0     0      0       0
   942 ;; ---------------------------------------------------------------------------------
   943 ;; Estimated maximum stack depth 5
   944 ;; ---------------------------------------------------------------------------------
   945 ;; Call Graph Graphs:
   946 ;; _main (ROOT)
   947 ;;   _initPin
   948 ;;     _initPB2_AsHighResistence
   949 ;;     _initPB3
   950 ;;     _initPB4
   951 ;;     _initPB5
   952 ;;   _setPinInitVaule
   953 ;;     _setPB3
   954 ;;     _setPB4
   955 ;;     _setPB5
   956 ;;   _selectAdChannel
   957 ;;   _clock_config
   958 ;;   _timer1_config
   959 ;;   _timer1_interrupt_config
   960 ;;   _uid_get
   961 ;;   _op1_init
   962 ;;   _adc_test_init
   963 ;;   _startTwentyMinTimer
   964 ;;   _adc_start
   965 ;;   _process_AD_Converter_Value
   966 ;;     _getAD_ConvertFlag
   967 ;;     _setAD_ConvertFlag
   968 ;;     _AD_Sample
   969 ;;     _adc_test_init
   970 ;;     _adc_start
   971 ;;   _isPermitSampleTime
   972 ;;   _clrSampeTime
   973 ;;   _isFinishedTwentyMinTimer
   974 ;;   _getAdOriginalCh13Value
   975 ;;     _FilterCh13
   976 ;;   _pwm_start
   977 ;;   _setPB3
   978 ;;   _setPB4
   979 ;;   _setPB5
   980 ;;   _clearTwentyMinTimer
   981 ;;   _startTwelveHourTimer
   982 ;;   _isFinishedTwelveHoursTimer
   983 ;;   _clearTwelveHoursTimer
   984 ;;   _startThreeHoursTimer
   985 ;;   _isFinishedThreeHoursTimer
   986 ;;   _clearThreeHoursTimer
   987 ;;   _startOneHoursTimer
   988 ;;   _isFinishedOneHoursTimer
   989 ;;   _resetAllTimer
   990 ;;     _clearTwelveHoursTimer
   991 ;;     _clearThreeHoursTimer
   992 ;;     _clearOneHoursTimer
   993 ;;     _clearTwentyMinTimer
   994 ;;   _setWaitResetFlag
   995 ;;   _reset
   996 ;;
   997 ;; _ISR (ROOT)
   998 ;;   i1_setAD_ConvertFlag
   999 ;;   _adc_get
  1000 ;;   _vPutSampleDataIntoTable
  1001 ;;     _Filter
  1002 ;;     _getWaitResetFlag
  1003 ;;     _setPWM_Width
  1004 ;;     _adc_get (ARG)
  1005 ;;
  1006 ;; Address spaces:
  1007 ;;Name               Size   Autos  Total    Cost      Usage
  1008 ;;BANK3               50      0       0      10        0.0%
  1009 ;;BITBANK3            50      0       0       9        0.0%
  1010 ;;SFR3                 0      0       0       4        0.0%
  1011 ;;BITSFR3              0      0       0       4        0.0%
  1012 ;;BANK2               60      0       0      12        0.0%
  1013 ;;BITBANK2            60      0       0      11        0.0%
  1014 ;;SFR2                 0      0       0       5        0.0%
  1015 ;;BITSFR2              0      0       0       5        0.0%
  1016 ;;SFR1                 0      0       0       2        0.0%
  1017 ;;BITSFR1              0      0       0       2        0.0%
  1018 ;;BANK1               50     18      38       8       70.0%
  1019 ;;BITBANK1            50      0       0       7        0.0%
  1020 ;;CODE                 0      0       0       0        0.0%
  1021 ;;DATA                 0      0      85       6        0.0%
  1022 ;;ABS                  0      0      7D       3        0.0%
  1023 ;;NULL                 0      0       0       0        0.0%
  1024 ;;STACK                0      0       8       2        0.0%
  1025 ;;BANK0               50     1D      37       5       68.8%
  1026 ;;BITBANK0            50      0       0       4        0.0%
  1027 ;;SFR0                 0      0       0       1        0.0%
  1028 ;;BITSFR0              0      0       0       1        0.0%
  1029 ;;COMMON               E      B       E       1      100.0%
  1030 ;;BITCOMMON            E      0       0       0        0.0%
  1031                           
  1032                           
  1033 ;; *************** function _main *****************
  1034 ;; Defined at:
  1035 ;;		line 529 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  ucChValue       2   20[BANK1 ] unsigned int 
  1040 ;;  uiCh13Value     2   22[BANK1 ] unsigned int 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2  738[COMMON] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 17F/0
  1047 ;;		On exit  : 40/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       4       0       0
  1052 ;;      Temps:          0       0       1       0       0
  1053 ;;      Totals:         0       0       5       0       0
  1054 ;;Total ram usage:        5 bytes
  1055 ;; Hardware stack levels required when called:    5
  1056 ;; This function calls:
  1057 ;;		_initPin
  1058 ;;		_setPinInitVaule
  1059 ;;		_selectAdChannel
  1060 ;;		_clock_config
  1061 ;;		_timer1_config
  1062 ;;		_timer1_interrupt_config
  1063 ;;		_uid_get
  1064 ;;		_op1_init
  1065 ;;		_adc_test_init
  1066 ;;		_startTwentyMinTimer
  1067 ;;		_adc_start
  1068 ;;		_process_AD_Converter_Value
  1069 ;;		_isPermitSampleTime
  1070 ;;		_clrSampeTime
  1071 ;;		_isFinishedTwentyMinTimer
  1072 ;;		_getAdOriginalCh13Value
  1073 ;;		_pwm_start
  1074 ;;		_setPB3
  1075 ;;		_setPB4
  1076 ;;		_setPB5
  1077 ;;		_clearTwentyMinTimer
  1078 ;;		_startTwelveHourTimer
  1079 ;;		_isFinishedTwelveHoursTimer
  1080 ;;		_clearTwelveHoursTimer
  1081 ;;		_startThreeHoursTimer
  1082 ;;		_isFinishedThreeHoursTimer
  1083 ;;		_clearThreeHoursTimer
  1084 ;;		_startOneHoursTimer
  1085 ;;		_isFinishedOneHoursTimer
  1086 ;;		_resetAllTimer
  1087 ;;		_setWaitResetFlag
  1088 ;;		_reset
  1089 ;; This function is called by:
  1090 ;;		Startup code after reset
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093  0234                     _main:	
  1094                           
  1095                           ;main.c: 530: enum systemStep {
  1096                           ;main.c: 531: INIT_STEP = 0,
  1097                           ;main.c: 532: START_UP_PWM_STEP,
  1098                           ;main.c: 533: CHECK_10_HOUR_TIMER_STEP,
  1099                           ;main.c: 534: STARTUP_3_HOUR_TIMER_STEP,
  1100                           ;main.c: 535: CHECK_3_HOUR_TIMER_STEP,
  1101                           ;main.c: 536: STARTUP_1_HOUR_TIMER_STEP,
  1102                           ;main.c: 537: CHECK_1_HOUR_TIMER_STEP,
  1103                           ;main.c: 538: READY_FOR_RESET_STEP = 99,
  1104                           ;main.c: 539: DELAY_ONE_SECOND_FOR_PWM,
  1105                           ;main.c: 540: MEET_RESET_CONDITION_STEP,
  1106                           ;main.c: 541: RESET_STEP,
  1107                           ;main.c: 542: };
  1108                           ;main.c: 544: static enum systemStep ucStep = INIT_STEP;
  1109                           
  1110                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1111  0234  118A  24DA  118A   	fcall	_initPin
  1112                           
  1113                           ;main.c: 558: setPinInitVaule();
  1114  0237  118A  250B  118A   	fcall	_setPinInitVaule
  1115                           
  1116                           ;main.c: 559: selectAdChannel();
  1117  023A  118A  2615  118A   	fcall	_selectAdChannel
  1118                           
  1119                           ;main.c: 561: clock_config();
  1120  023D  118A  2609  118A   	fcall	_clock_config
  1121                           
  1122                           ;main.c: 562: timer1_config();
  1123  0240  118A  25F7  118A   	fcall	_timer1_config
  1124                           
  1125                           ;main.c: 563: timer1_interrupt_config();
  1126  0243  118A  261C  118A   	fcall	_timer1_interrupt_config
  1127                           
  1128                           ;main.c: 565: uid_get();
  1129  0246  118A  2585  118A   	fcall	_uid_get
  1130                           
  1131                           ;main.c: 567: op1_init();
  1132  0249  118A  25CC  118A   	fcall	_op1_init
  1133                           
  1134                           ;main.c: 569: adc_test_init(2,0);
  1135  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1136  024D  3002               	movlw	2
  1137  024E  01B9               	clrf	?_adc_test_init
  1138  024F  118A  24BB  118A   	fcall	_adc_test_init
  1139                           
  1140                           ;main.c: 575: startTwentyMinTimer( 1200 );
  1141  0252  30B0               	movlw	176
  1142  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0254  00B9               	movwf	?_startTwentyMinTimer
  1144  0255  3004               	movlw	4
  1145  0256  00BA               	movwf	?_startTwentyMinTimer+1
  1146  0257  118A  2571  118A   	fcall	_startTwentyMinTimer
  1147                           
  1148                           ;main.c: 576: _delay(1000);
  1149  025A  30F9               	movlw	249
  1150  025B  1683               	bsf	3,5	;RP0=1, select bank1
  1151  025C  00D3               	movwf	??_main^(0+128)
  1152  025D                     u2257:	
  1153  025D  0064               	clrwdt
  1154  025E  0BD3               	decfsz	??_main^(0+128),f
  1155  025F  2A5D               	goto	u2257
  1156  0260  2A61               	nop2	;nop
  1157  0261  0064               	clrwdt
  1158                           
  1159                           ;main.c: 577: adc_start();
  1160  0262  118A  24D6  118A   	fcall	_adc_start
  1161                           
  1162                           ;main.c: 612: switch(ucStep)
  1163  0265  2BB2               	goto	l4337
  1164  0266                     l4345:	
  1165                           
  1166                           ;main.c: 616: {
  1167                           ;main.c: 621: static unsigned char ucTimerP3s = 0;
  1168                           ;main.c: 623: if( isFinishedTwentyMinTimer() )
  1169  0266  118A  25C0  118A   	fcall	_isFinishedTwentyMinTimer
  1170  0269  3A00               	xorlw	0
  1171  026A  1903               	skipnz
  1172  026B  2A71               	goto	l4351
  1173                           
  1174                           ;main.c: 624: {
  1175                           ;main.c: 625: ucStep = READY_FOR_RESET_STEP;
  1176  026C  3063               	movlw	99
  1177  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1178  026E  00D0               	movwf	main@ucStep
  1179                           
  1180                           ;main.c: 626: ucTimerP3s = 0;
  1181  026F  01D1               	clrf	main@ucTimerP3s
  1182                           
  1183                           ;main.c: 627: }
  1184  0270  2BB2               	goto	l4337
  1185  0271                     l4351:	
  1186                           
  1187                           ;main.c: 628: else
  1188                           ;main.c: 629: {
  1189                           ;main.c: 630: if( getAdOriginalCh13Value() > 145 )
  1190  0271  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1191  0274  3000               	movlw	0
  1192  0275  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1193  0276  3092               	movlw	146
  1194  0277  1903               	skipnz
  1195  0278  023B               	subwf	?_getAdOriginalCh13Value,w
  1196  0279  1C03               	skipc
  1197  027A  2A7D               	goto	l4355
  1198                           
  1199                           ;main.c: 631: {
  1200                           ;main.c: 632: ucTimerP3s++;
  1201  027B  0AD1               	incf	main@ucTimerP3s,f
  1202                           
  1203                           ;main.c: 633: }
  1204  027C  2A7E               	goto	l4357
  1205  027D                     l4355:	
  1206                           
  1207                           ;main.c: 634: else
  1208                           ;main.c: 635: ucTimerP3s = 0;
  1209  027D  01D1               	clrf	main@ucTimerP3s
  1210  027E                     l4357:	
  1211                           
  1212                           ;main.c: 637: if( ucTimerP3s >= 30)
  1213  027E  301E               	movlw	30
  1214  027F  0251               	subwf	main@ucTimerP3s,w
  1215  0280  1C03               	skipc
  1216  0281  2BB2               	goto	l4337
  1217                           
  1218                           ;main.c: 638: {
  1219                           ;main.c: 639: ucTimerP3s = 0;
  1220  0282  01D1               	clrf	main@ucTimerP3s
  1221  0283                     l4361:	
  1222                           
  1223                           ;main.c: 640: ucStep = START_UP_PWM_STEP;
  1224  0283  01D0               	clrf	main@ucStep
  1225  0284  0AD0               	incf	main@ucStep,f
  1226  0285  2BB2               	goto	l4337
  1227  0286                     l4363:	
  1228                           
  1229                           ;main.c: 651: {
  1230                           ;main.c: 656: pwm_start(150,249);
  1231  0286  30F9               	movlw	249
  1232  0287  00B9               	movwf	?_pwm_start
  1233  0288  3096               	movlw	150
  1234  0289  118A  255C  118A   	fcall	_pwm_start
  1235                           
  1236                           ;main.c: 658: setPB3(0);
  1237  028C  3000               	movlw	0
  1238  028D  118A  2513  118A   	fcall	_setPB3
  1239                           
  1240                           ;main.c: 659: setPB4(1);
  1241  0290  3001               	movlw	1
  1242  0291  118A  251C  118A   	fcall	_setPB4
  1243                           
  1244                           ;main.c: 660: setPB5(0);
  1245  0294  3000               	movlw	0
  1246  0295  118A  2524  118A   	fcall	_setPB5
  1247                           
  1248                           ;main.c: 661: clearTwentyMinTimer();
  1249  0298  118A  2540  118A   	fcall	_clearTwentyMinTimer
  1250                           
  1251                           ;main.c: 662: startTwelveHourTimer( 36000);
  1252  029B  30A0               	movlw	160
  1253  029C  00B9               	movwf	?_startTwelveHourTimer
  1254  029D  308C               	movlw	140
  1255  029E  00BA               	movwf	?_startTwelveHourTimer+1
  1256  029F  118A  25B2  118A   	fcall	_startTwelveHourTimer
  1257                           
  1258                           ;main.c: 663: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1259  02A2  3002               	movlw	2
  1260  02A3  2BAC               	goto	L8
  1261  02A4                     l4371:	
  1262                           ;main.c: 664: break;
  1263                           
  1264                           
  1265                           ;main.c: 668: {
  1266                           ;main.c: 673: static unsigned char ucTimerP5s = 0;
  1267                           ;main.c: 675: if( isFinishedTwelveHoursTimer () )
  1268  02A4  118A  25ED  118A   	fcall	_isFinishedTwelveHoursTimer
  1269  02A7  3A00               	xorlw	0
  1270  02A8  1903               	skipnz
  1271  02A9  2AAC               	goto	l4375
  1272  02AA                     l4373:	
  1273                           
  1274                           ;main.c: 676: ucStep = READY_FOR_RESET_STEP;
  1275  02AA  3063               	movlw	99
  1276  02AB  2BAC               	goto	L8
  1277  02AC                     l4375:	
  1278                           
  1279                           ;main.c: 677: else
  1280                           ;main.c: 678: {
  1281                           ;main.c: 679: if( getAdOriginalCh13Value() < 322 )
  1282  02AC  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1283  02AF  3001               	movlw	1
  1284  02B0  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1285  02B1  3042               	movlw	66
  1286  02B2  1903               	skipnz
  1287  02B3  023B               	subwf	?_getAdOriginalCh13Value,w
  1288  02B4  1803               	skipnc
  1289  02B5  2AB8               	goto	l4379
  1290                           
  1291                           ;main.c: 680: ucTimerP5s++;
  1292  02B6  0AD2               	incf	main@ucTimerP5s,f
  1293  02B7  2AB9               	goto	l4381
  1294  02B8                     l4379:	
  1295                           
  1296                           ;main.c: 681: else
  1297                           ;main.c: 682: ucTimerP5s = 0;
  1298  02B8  01D2               	clrf	main@ucTimerP5s
  1299  02B9                     l4381:	
  1300                           
  1301                           ;main.c: 684: if( ucTimerP5s >= 10)
  1302  02B9  300A               	movlw	10
  1303  02BA  0252               	subwf	main@ucTimerP5s,w
  1304  02BB  1C03               	skipc
  1305  02BC  2BB2               	goto	l4337
  1306  02BD  3003               	movlw	3
  1307                           
  1308                           ;main.c: 685: {
  1309                           ;main.c: 686: ucTimerP5s = 0;
  1310  02BE  01D2               	clrf	main@ucTimerP5s
  1311                           
  1312                           ;main.c: 687: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1313  02BF  2BAC               	goto	L8
  1314  02C0                     l4387:	
  1315                           
  1316                           ;main.c: 695: {
  1317                           ;main.c: 696: clearTwelveHoursTimer();
  1318  02C0  118A  2533  118A   	fcall	_clearTwelveHoursTimer
  1319                           
  1320                           ;main.c: 697: startThreeHoursTimer(10800);
  1321  02C3  3030               	movlw	48
  1322  02C4  00B9               	movwf	?_startThreeHoursTimer
  1323  02C5  302A               	movlw	42
  1324  02C6  00BA               	movwf	?_startThreeHoursTimer+1
  1325  02C7  118A  25A4  118A   	fcall	_startThreeHoursTimer
  1326                           
  1327                           ;main.c: 698: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1328  02CA  3004               	movlw	4
  1329  02CB  2BAC               	goto	L8
  1330  02CC                     l4391:	
  1331                           ;main.c: 699: break;
  1332                           
  1333                           
  1334                           ;main.c: 703: {
  1335                           ;main.c: 704: static unsigned char ucTimerP5s = 0;
  1336                           ;main.c: 706: if( isFinishedThreeHoursTimer() )
  1337  02CC  118A  25E3  118A   	fcall	_isFinishedThreeHoursTimer
  1338  02CF  3A00               	xorlw	0
  1339  02D0  1D03               	btfss	3,2
  1340  02D1  2AAA               	goto	l4373
  1341                           
  1342                           ;main.c: 708: else
  1343                           ;main.c: 709: {
  1344                           ;main.c: 710: if( getAdOriginalCh13Value() < 105 )
  1345  02D2  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1346  02D5  3000               	movlw	0
  1347  02D6  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1348  02D7  3069               	movlw	105
  1349  02D8  1903               	skipnz
  1350  02D9  023B               	subwf	?_getAdOriginalCh13Value,w
  1351  02DA  1803               	skipnc
  1352  02DB  2ADE               	goto	l4399
  1353                           
  1354                           ;main.c: 711: ucTimerP5s++;
  1355  02DC  0ACE               	incf	main@cTimerP5s_795,f
  1356  02DD  2ADF               	goto	l4401
  1357  02DE                     l4399:	
  1358                           
  1359                           ;main.c: 712: else
  1360                           ;main.c: 713: ucTimerP5s = 0;
  1361  02DE  01CE               	clrf	main@cTimerP5s_795
  1362  02DF                     l4401:	
  1363                           
  1364                           ;main.c: 715: if( ucTimerP5s >= 10)
  1365  02DF  300A               	movlw	10
  1366  02E0  024E               	subwf	main@cTimerP5s_795,w
  1367  02E1  1C03               	skipc
  1368  02E2  2BB2               	goto	l4337
  1369  02E3  3005               	movlw	5
  1370                           
  1371                           ;main.c: 716: {
  1372                           ;main.c: 717: ucTimerP5s = 0;
  1373  02E4  01CE               	clrf	main@cTimerP5s_795
  1374                           
  1375                           ;main.c: 718: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1376  02E5  2BAC               	goto	L8
  1377  02E6                     l4407:	
  1378                           
  1379                           ;main.c: 725: {
  1380                           ;main.c: 726: clearThreeHoursTimer();
  1381  02E6  118A  2538  118A   	fcall	_clearThreeHoursTimer
  1382                           
  1383                           ;main.c: 727: startOneHoursTimer( 3600 );
  1384  02E9  3010               	movlw	16
  1385  02EA  00B9               	movwf	?_startOneHoursTimer
  1386  02EB  300E               	movlw	14
  1387  02EC  00BA               	movwf	?_startOneHoursTimer+1
  1388  02ED  118A  2596  118A   	fcall	_startOneHoursTimer
  1389                           
  1390                           ;main.c: 728: setPB3(1);
  1391  02F0  3001               	movlw	1
  1392  02F1  118A  2513  118A   	fcall	_setPB3
  1393                           
  1394                           ;main.c: 729: setPB4(0);
  1395  02F4  3000               	movlw	0
  1396  02F5  118A  251C  118A   	fcall	_setPB4
  1397                           
  1398                           ;main.c: 730: setPB5(1);
  1399  02F8  3001               	movlw	1
  1400  02F9  118A  2524  118A   	fcall	_setPB5
  1401                           
  1402                           ;main.c: 731: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1403  02FC  3006               	movlw	6
  1404  02FD  2BAC               	goto	L8
  1405  02FE                     l4419:	
  1406                           ;main.c: 732: break;
  1407                           
  1408                           
  1409                           ;main.c: 736: {
  1410                           ;main.c: 741: static unsigned int uiTimerOneP5s = 0;
  1411                           ;main.c: 742: static unsigned int uiTimerTwoP5s = 0;
  1412                           ;main.c: 743: static unsigned int uiTimerThreeP5s = 0;
  1413                           ;main.c: 745: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1414  02FE  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1415  0301  083C               	movf	?_getAdOriginalCh13Value+1,w
  1416  0302  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0303  00D7               	movwf	(main@uiCh13Value+1)^(0+128)
  1418  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0305  083B               	movf	?_getAdOriginalCh13Value,w
  1420  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0307  00D6               	movwf	main@uiCh13Value^(0+128)
  1422                           
  1423                           ;main.c: 748: if( isFinishedOneHoursTimer() )
  1424  0308  118A  25D8  118A   	fcall	_isFinishedOneHoursTimer
  1425  030B  3A00               	xorlw	0
  1426  030C  1D03               	btfss	3,2
  1427  030D  2AAA               	goto	l4373
  1428                           
  1429                           ;main.c: 750: else
  1430                           ;main.c: 751: {
  1431                           ;main.c: 752: if( uiCh13Value > 105 )
  1432  030E  3000               	movlw	0
  1433  030F  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0310  0257               	subwf	(main@uiCh13Value+1)^(0+128),w
  1435  0311  306A               	movlw	106
  1436  0312  1903               	skipnz
  1437  0313  0256               	subwf	main@uiCh13Value^(0+128),w
  1438  0314  1C03               	skipc
  1439  0315  2B23               	goto	l4433
  1440                           
  1441                           ;main.c: 753: {
  1442                           ;main.c: 754: if( uiTimerOneP5s <= 10 )
  1443  0316  3000               	movlw	0
  1444  0317  0229               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1445  0318  300B               	movlw	11
  1446  0319  1903               	skipnz
  1447  031A  0228               	subwf	main@uiTimerOneP5s^(0+128),w
  1448  031B  1803               	skipnc
  1449  031C  2B20               	goto	l4431
  1450                           
  1451                           ;main.c: 755: uiTimerOneP5s++;
  1452  031D  0AA8               	incf	main@uiTimerOneP5s^(0+128),f
  1453  031E  1903               	skipnz
  1454  031F  0AA9               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1455  0320                     l4431:	
  1456                           
  1457                           ;main.c: 757: uiTimerThreeP5s = 0;
  1458  0320  01AA               	clrf	main@uiTimerTwoP5s^(0+128)
  1459  0321  01AB               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1460                           
  1461                           ;main.c: 758: }
  1462  0322  2B25               	goto	l4435
  1463  0323                     l4433:	
  1464                           
  1465                           ;main.c: 759: else
  1466                           ;main.c: 760: {
  1467                           ;main.c: 761: uiTimerOneP5s = 0;
  1468  0323  01A8               	clrf	main@uiTimerOneP5s^(0+128)
  1469  0324  01A9               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1470  0325                     l4435:	
  1471                           
  1472                           ;main.c: 762: }
  1473                           ;main.c: 765: if(uiTimerOneP5s > 10)
  1474  0325  3000               	movlw	0
  1475  0326  0229               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1476  0327  300B               	movlw	11
  1477  0328  1903               	skipnz
  1478  0329  0228               	subwf	main@uiTimerOneP5s^(0+128),w
  1479                           
  1480                           ;main.c: 766: {
  1481                           ;main.c: 767: setPB3(0);
  1482  032A  3000               	movlw	0
  1483  032B  1C03               	skipc
  1484  032C  2B41               	goto	L9
  1485  032D  118A  2513  118A   	fcall	_setPB3
  1486                           
  1487                           ;main.c: 768: setPB4(1);
  1488  0330  3001               	movlw	1
  1489  0331  118A  251C  118A   	fcall	_setPB4
  1490                           
  1491                           ;main.c: 769: setPB5(0);
  1492  0334  3000               	movlw	0
  1493  0335  118A  2524  118A   	fcall	_setPB5
  1494                           
  1495                           ;main.c: 771: uiTimerOneP5s = 0;
  1496  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0339  01A8               	clrf	main@uiTimerOneP5s^(0+128)
  1498  033A  01A9               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1499                           
  1500                           ;main.c: 772: uiTimerTwoP5s = 0;
  1501  033B  01AA               	clrf	main@uiTimerTwoP5s^(0+128)
  1502  033C  01AB               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1503                           
  1504                           ;main.c: 774: resetAllTimer();
  1505  033D  118A  252C  118A   	fcall	_resetAllTimer
  1506  0340  2A83               	goto	l4361
  1507  0341                     L9:	
  1508                           ;main.c: 778: else
  1509                           ;main.c: 779: {
  1510                           ;main.c: 780: if( uiCh13Value < 105 )
  1511                           
  1512  0341  0257               	subwf	(main@uiCh13Value+1)^(0+128),w
  1513  0342  3069               	movlw	105
  1514  0343  1903               	skipnz
  1515  0344  0256               	subwf	main@uiCh13Value^(0+128),w
  1516  0345  1803               	skipnc
  1517  0346  2B52               	goto	l4453
  1518                           
  1519                           ;main.c: 781: {
  1520                           ;main.c: 783: if( uiTimerTwoP5s <= 10)
  1521  0347  3000               	movlw	0
  1522  0348  022B               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1523  0349  300B               	movlw	11
  1524  034A  1903               	skipnz
  1525  034B  022A               	subwf	main@uiTimerTwoP5s^(0+128),w
  1526  034C  1803               	skipnc
  1527  034D  2B54               	goto	l4455
  1528                           
  1529                           ;main.c: 784: uiTimerTwoP5s++;
  1530  034E  0AAA               	incf	main@uiTimerTwoP5s^(0+128),f
  1531  034F  1903               	skipnz
  1532  0350  0AAB               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1533  0351  2B54               	goto	l4455
  1534  0352                     l4453:	
  1535                           
  1536                           ;main.c: 789: uiTimerThreeP5s = 0;
  1537  0352  01AA               	clrf	main@uiTimerTwoP5s^(0+128)
  1538  0353  01AB               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1539  0354                     l4455:	
  1540                           
  1541                           ;main.c: 790: }
  1542                           ;main.c: 792: if(uiTimerTwoP5s > 10)
  1543  0354  3000               	movlw	0
  1544  0355  022B               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1545  0356  300B               	movlw	11
  1546  0357  1903               	skipnz
  1547  0358  022A               	subwf	main@uiTimerTwoP5s^(0+128),w
  1548  0359  1C03               	skipc
  1549  035A  2BB2               	goto	l4337
  1550                           
  1551                           ;main.c: 793: {
  1552                           ;main.c: 794: setPB3(1);
  1553  035B  3001               	movlw	1
  1554  035C  118A  2513  118A   	fcall	_setPB3
  1555                           
  1556                           ;main.c: 795: setPB4(0);
  1557  035F  3000               	movlw	0
  1558  0360  118A  251C  118A   	fcall	_setPB4
  1559                           
  1560                           ;main.c: 796: setPB5(1);
  1561  0363  3001               	movlw	1
  1562  0364  118A  2524  118A   	fcall	_setPB5
  1563  0367  2BB2               	goto	l4337
  1564  0368                     l4459:	
  1565                           
  1566                           ;main.c: 815: {
  1567                           ;main.c: 816: setPB3(0);
  1568  0368  3000               	movlw	0
  1569  0369  118A  2513  118A   	fcall	_setPB3
  1570                           
  1571                           ;main.c: 817: setPB4(0);
  1572  036C  3000               	movlw	0
  1573  036D  118A  251C  118A   	fcall	_setPB4
  1574                           
  1575                           ;main.c: 818: setPB5(1);
  1576  0370  3001               	movlw	1
  1577  0371  118A  2524  118A   	fcall	_setPB5
  1578                           
  1579                           ;main.c: 821: setWaitResetFlag(1);
  1580  0374  3001               	movlw	1
  1581  0375  118A  2619  118A   	fcall	_setWaitResetFlag
  1582                           
  1583                           ;main.c: 822: pwm_start(150,249);
  1584  0378  30F9               	movlw	249
  1585  0379  00B9               	movwf	?_pwm_start
  1586  037A  3096               	movlw	150
  1587  037B  118A  255C  118A   	fcall	_pwm_start
  1588                           
  1589                           ;main.c: 828: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1590  037E  3064               	movlw	100
  1591  037F  2BAC               	goto	L8
  1592  0380                     l4463:	
  1593                           ;main.c: 829: break;
  1594                           
  1595                           
  1596                           ;main.c: 833: {
  1597                           ;main.c: 834: static unsigned ucDelay1s = 0;
  1598                           ;main.c: 835: if(ucDelay1s <= 50)
  1599  0380  3000               	movlw	0
  1600  0381  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0382  0227               	subwf	(main@ucDelay1s+1)^(0+128),w
  1602  0383  3033               	movlw	51
  1603  0384  1903               	skipnz
  1604  0385  0226               	subwf	main@ucDelay1s^(0+128),w
  1605  0386  1803               	skipnc
  1606  0387  2B8C               	goto	l4467
  1607                           
  1608                           ;main.c: 836: ucDelay1s++;
  1609  0388  0AA6               	incf	main@ucDelay1s^(0+128),f
  1610  0389  1903               	skipnz
  1611  038A  0AA7               	incf	(main@ucDelay1s+1)^(0+128),f
  1612  038B  2BB2               	goto	l4337
  1613  038C                     l4467:	
  1614  038C  3065               	movlw	101
  1615                           
  1616                           ;main.c: 837: else
  1617                           ;main.c: 838: {
  1618                           ;main.c: 839: ucDelay1s = 0;
  1619  038D  01A6               	clrf	main@ucDelay1s^(0+128)
  1620  038E  01A7               	clrf	(main@ucDelay1s+1)^(0+128)
  1621                           
  1622                           ;main.c: 840: ucStep = MEET_RESET_CONDITION_STEP;
  1623  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0390  2BAC               	goto	L8
  1625  0391                     l4471:	
  1626                           
  1627                           ;main.c: 850: {
  1628                           ;main.c: 851: static unsigned char ucTimerP5s = 0;
  1629                           ;main.c: 852: unsigned int ucChValue = getAdOriginalCh13Value();
  1630  0391  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1631  0394  083C               	movf	?_getAdOriginalCh13Value+1,w
  1632  0395  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0396  00D5               	movwf	(main@ucChValue+1)^(0+128)
  1634  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0398  083B               	movf	?_getAdOriginalCh13Value,w
  1636  0399  1683               	bsf	3,5	;RP0=1, select bank1
  1637  039A  00D4               	movwf	main@ucChValue^(0+128)
  1638                           
  1639                           ;main.c: 854: if( ucChValue > 81 )
  1640  039B  3000               	movlw	0
  1641  039C  0255               	subwf	(main@ucChValue+1)^(0+128),w
  1642  039D  3052               	movlw	82
  1643  039E  1903               	skipnz
  1644  039F  0254               	subwf	main@ucChValue^(0+128),w
  1645  03A0  1C03               	skipc
  1646  03A1  2BA5               	goto	l4477
  1647                           
  1648                           ;main.c: 855: ucTimerP5s++;
  1649  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1650  03A3  0ACF               	incf	main@cTimerP5s_801,f
  1651  03A4  2BA7               	goto	l4479
  1652  03A5                     l4477:	
  1653                           
  1654                           ;main.c: 856: else
  1655                           ;main.c: 857: ucTimerP5s = 0;
  1656  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1657  03A6  01CF               	clrf	main@cTimerP5s_801
  1658  03A7                     l4479:	
  1659                           
  1660                           ;main.c: 859: if(ucTimerP5s >= 50)
  1661  03A7  3032               	movlw	50
  1662  03A8  024F               	subwf	main@cTimerP5s_801,w
  1663  03A9  1C03               	skipc
  1664  03AA  2BB2               	goto	l4337
  1665                           
  1666                           ;main.c: 860: ucStep = RESET_STEP;
  1667  03AB  3066               	movlw	102
  1668  03AC                     L8:	
  1669  03AC  00D0               	movwf	main@ucStep
  1670  03AD  2BB2               	goto	l4337
  1671  03AE                     l4483:	
  1672                           
  1673                           ;main.c: 865: {
  1674                           ;main.c: 866: ucStep = INIT_STEP;
  1675  03AE  01D0               	clrf	main@ucStep
  1676                           
  1677                           ;main.c: 867: reset();
  1678  03AF  118A  2621  118A   	fcall	_reset
  1679  03B2                     l4337:	
  1680                           ;main.c: 868: break;
  1681                           
  1682  03B2  0064               	clrwdt	;#
  1683                           
  1684                           ;main.c: 597: process_AD_Converter_Value();
  1685  03B3  118A  248B  118A   	fcall	_process_AD_Converter_Value
  1686                           
  1687                           ;main.c: 599: if( isPermitSampleTime() )
  1688  03B6  118A  2611  118A   	fcall	_isPermitSampleTime
  1689  03B9  3A00               	xorlw	0
  1690  03BA  1903               	skipnz
  1691  03BB  2BB2               	goto	l4337
  1692                           
  1693                           ;main.c: 600: {
  1694                           ;main.c: 603: clrSampeTime();
  1695  03BC  118A  261F  118A   	fcall	_clrSampeTime
  1696  03BF  0850               	movf	main@ucStep,w
  1697                           
  1698                           ; Switch size 1, requested type "space"
  1699                           ; Number of cases is 11, Range of values is 0 to 102
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte           34    18 (average)
  1703                           ; direct_byte          213     7 (fixed)
  1704                           ; jumptable            260     6 (fixed)
  1705                           ; rangetable           107     6 (fixed)
  1706                           ; spacedrange          212     9 (fixed)
  1707                           ; locatedrange         103     3 (fixed)
  1708                           ;	Chosen strategy is simple_byte
  1709  03C0  3A00               	xorlw	0	; case 0
  1710  03C1  1903               	skipnz
  1711  03C2  2A66               	goto	l4345
  1712  03C3  3A01               	xorlw	1	; case 1
  1713  03C4  1903               	skipnz
  1714  03C5  2A86               	goto	l4363
  1715  03C6  3A03               	xorlw	3	; case 2
  1716  03C7  1903               	skipnz
  1717  03C8  2AA4               	goto	l4371
  1718  03C9  3A01               	xorlw	1	; case 3
  1719  03CA  1903               	skipnz
  1720  03CB  2AC0               	goto	l4387
  1721  03CC  3A07               	xorlw	7	; case 4
  1722  03CD  1903               	skipnz
  1723  03CE  2ACC               	goto	l4391
  1724  03CF  3A01               	xorlw	1	; case 5
  1725  03D0  1903               	skipnz
  1726  03D1  2AE6               	goto	l4407
  1727  03D2  3A03               	xorlw	3	; case 6
  1728  03D3  1903               	skipnz
  1729  03D4  2AFE               	goto	l4419
  1730  03D5  3A65               	xorlw	101	; case 99
  1731  03D6  1903               	skipnz
  1732  03D7  2B68               	goto	l4459
  1733  03D8  3A07               	xorlw	7	; case 100
  1734  03D9  1903               	skipnz
  1735  03DA  2B80               	goto	l4463
  1736  03DB  3A01               	xorlw	1	; case 101
  1737  03DC  1903               	skipnz
  1738  03DD  2B91               	goto	l4471
  1739  03DE  3A03               	xorlw	3	; case 102
  1740  03DF  1903               	skipnz
  1741  03E0  2BAE               	goto	l4483
  1742  03E1  2BE2               	goto	l742
  1743  03E2                     l742:	
  1744  03E2  2BB2               	goto	l4337
  1745  03E3                     __end_of_main:	
  1746                           
  1747                           	psect	text1367
  1748  03E3                     __ptext1367:	
  1749 ;; =============== function _main ends ============
  1750                           
  1751                           
  1752 ;; *************** function _getAdOriginalCh13Value *****************
  1753 ;; Defined at:
  1754 ;;		line 410 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  2   27[BANK0 ] unsigned int 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 40/0
  1765 ;;		On exit  : 160/0
  1766 ;;		Unchanged: FFE00/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       2       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         0       2       0       0       0
  1772 ;;Total ram usage:        2 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    4
  1775 ;; This function calls:
  1776 ;;		_FilterCh13
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781  03E3                     _getAdOriginalCh13Value:	
  1782                           
  1783                           ;common.c: 412: return FilterCh13(uiSampleCh13);
  1784                           
  1785                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1786  03E3  30B4               	movlw	_uiSampleCh13& (0+255)
  1787  03E4  23EA               	fcall	_FilterCh13
  1788  03E5  083A               	movf	?_FilterCh13+1,w
  1789  03E6  00BC               	movwf	?_getAdOriginalCh13Value+1
  1790  03E7  0839               	movf	?_FilterCh13,w
  1791  03E8  00BB               	movwf	?_getAdOriginalCh13Value
  1792  03E9  0008               	return
  1793  03EA                     __end_of_getAdOriginalCh13Value:	
  1794  03EA                     __ptext1375:	
  1795 ;; =============== function _getAD_ConvertFlag ends ============
  1796                           
  1797                           
  1798 ;; *************** function _FilterCh13 *****************
  1799 ;; Defined at:
  1800 ;;		line 76 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  tmpValue        1    wreg     PTR unsigned int 
  1803 ;;		 -> uiSampleCh13(6), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  tmpValue        1    4[BANK1 ] PTR unsigned int 
  1806 ;;		 -> uiSampleCh13(6), 
  1807 ;;  cir             2   15[BANK1 ] int 
  1808 ;;  filter_buf      6    9[BANK1 ] unsigned int [3]
  1809 ;;  filter_sum      2    7[BANK1 ] unsigned int 
  1810 ;;  filter_temp     2    5[BANK1 ] unsigned int 
  1811 ;;  i               1   18[BANK1 ] unsigned char 
  1812 ;;  j               1   17[BANK1 ] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2   25[BANK0 ] unsigned int 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1817 ;; Tracked objects:
  1818 ;;		On entry : 40/0
  1819 ;;		On exit  : 160/0
  1820 ;;		Unchanged: FFE00/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       2       0       0       0
  1823 ;;      Locals:         0       0      15       0       0
  1824 ;;      Temps:          0       0       4       0       0
  1825 ;;      Totals:         0       2      19       0       0
  1826 ;;Total ram usage:       21 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    3
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_getAdOriginalCh13Value
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835  03EA                     _FilterCh13:	
  1836                           
  1837                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1838                           ;FilterCh13@tmpValue stored from wreg
  1839  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1840  03EB  00C4               	movwf	FilterCh13@tmpValue^(0+128)
  1841  03EC  01D1               	clrf	FilterCh13@j^(0+128)
  1842                           
  1843                           ;common.c: 79: unsigned int filter_temp = 0, filter_sum = 0;
  1844  03ED  01C5               	clrf	FilterCh13@filter_temp^(0+128)
  1845  03EE  01C6               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1846  03EF  01C7               	clrf	FilterCh13@filter_sum^(0+128)
  1847  03F0  01C8               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1848                           
  1849                           ;common.c: 81: unsigned int filter_buf[3];
  1850                           ;common.c: 83: for(int cir = 0;cir < 3; cir++)
  1851  03F1  01CF               	clrf	FilterCh13@cir^(0+128)
  1852  03F2  01D0               	clrf	(FilterCh13@cir+1)^(0+128)
  1853  03F3                     l4235:	
  1854                           
  1855                           ;common.c: 84: filter_buf[cir] = *tmpValue++;
  1856  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  1857  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  1858  03F5  0844               	movf	FilterCh13@tmpValue^(0+128),w
  1859  03F6  0084               	movwf	4
  1860  03F7  1383               	bcf	3,7	;select IRP bank0
  1861  03F8  2476  118A         	fcall	PL6	;call to abstracted procedure
  1862  03FA  0D4F               	rlf	FilterCh13@cir^(0+128),w
  1863  03FB  247D  118A         	fcall	PL7	;call to abstracted procedure
  1864  03FD  0AC4               	incf	FilterCh13@tmpValue^(0+128),f
  1865  03FE  0AC4               	incf	FilterCh13@tmpValue^(0+128),f
  1866  03FF  0ACF               	incf	FilterCh13@cir^(0+128),f
  1867  0400  1903               	skipnz
  1868  0401  0AD0               	incf	(FilterCh13@cir+1)^(0+128),f
  1869  0402  0850               	movf	(FilterCh13@cir+1)^(0+128),w
  1870  0403  3A80               	xorlw	128
  1871  0404  00FF               	movwf	127
  1872  0405  3080               	movlw	128
  1873  0406  027F               	subwf	127,w
  1874  0407  1D03               	skipz
  1875  0408  2C0B               	goto	u1955
  1876  0409  3003               	movlw	3
  1877  040A  024F               	subwf	FilterCh13@cir^(0+128),w
  1878  040B                     u1955:	
  1879  040B  1C03               	skipc
  1880  040C  2BF3               	goto	l4235
  1881                           
  1882                           ;common.c: 88: for(j = 0; j < 3 - 1; j++)
  1883  040D  1683               	bsf	3,5	;RP0=1, select bank1
  1884  040E  1303               	bcf	3,6	;RP1=0, select bank1
  1885  040F  01D1               	clrf	FilterCh13@j^(0+128)
  1886                           
  1887                           ;common.c: 89: {
  1888                           ;common.c: 90: for(i = 0; i < 3 - 1 - j; i++)
  1889  0410  01D2               	clrf	FilterCh13@i^(0+128)
  1890  0411                     l4257:	
  1891  0411  01C1               	clrf	(??_FilterCh13^(0+128)+1)
  1892  0412  0851               	movf	FilterCh13@j^(0+128),w
  1893  0413  3C02               	sublw	2
  1894  0414  00C0               	movwf	??_FilterCh13^(0+128)
  1895  0415  1C03               	skipc
  1896  0416  03C1               	decf	(??_FilterCh13^(0+128)+1),f
  1897  0417  0841               	movf	(??_FilterCh13+1)^(0+128),w
  1898  0418  3A80               	xorlw	128
  1899  0419  3C80               	sublw	128
  1900  041A  1D03               	skipz
  1901  041B  2C1E               	goto	u1975
  1902  041C  0840               	movf	??_FilterCh13^(0+128),w
  1903  041D  0252               	subwf	FilterCh13@i^(0+128),w
  1904  041E                     u1975:	
  1905  041E  1803               	btfsc	3,0
  1906  041F  2C4D               	goto	l4259
  1907                           
  1908                           ;common.c: 91: {
  1909                           ;common.c: 92: if(filter_buf[i] > filter_buf[i + 1])
  1910  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1912  0422  1003               	clrc
  1913  0423  246C  118A         	fcall	PL5	;call to abstracted procedure
  1914  0425  2485  118A         	fcall	PL9	;call to abstracted procedure
  1915  0427  0800               	movf	0,w
  1916  0428  00C2               	movwf	(??_FilterCh13+2)^(0+128)
  1917  0429  0A84               	incf	4,f
  1918  042A  0800               	movf	0,w
  1919  042B  00C3               	movwf	((??_FilterCh13+2)^(0+128)+1)
  1920  042C  0841               	movf	(??_FilterCh13+1)^(0+128),w
  1921  042D  0243               	subwf	(??_FilterCh13+3)^(0+128),w
  1922  042E  1D03               	skipz
  1923  042F  2C32               	goto	u1965
  1924  0430  0840               	movf	??_FilterCh13^(0+128),w
  1925  0431  0242               	subwf	(??_FilterCh13+2)^(0+128),w
  1926  0432                     u1965:	
  1927  0432  1803               	skipnc
  1928  0433  2C4B               	goto	l4255
  1929                           
  1930                           ;common.c: 93: {
  1931                           ;common.c: 95: filter_temp = filter_buf[i];
  1932  0434  1003               	clrc
  1933  0435  0D52               	rlf	FilterCh13@i^(0+128),w
  1934  0436  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  1935  0437  0084               	movwf	4
  1936  0438  0800               	movf	0,w
  1937  0439  00C5               	movwf	FilterCh13@filter_temp^(0+128)
  1938  043A  0A84               	incf	4,f
  1939  043B  0800               	movf	0,w
  1940  043C  00C6               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1941                           
  1942                           ;common.c: 97: filter_buf[i] = filter_buf[i + 1];
  1943  043D  2485  118A         	fcall	PL9	;call to abstracted procedure
  1944  043F  2476  118A         	fcall	PL6	;call to abstracted procedure
  1945  0441  0D52               	rlf	FilterCh13@i^(0+128),w
  1946  0442  247D  118A         	fcall	PL7	;call to abstracted procedure
  1947                           
  1948                           ;common.c: 99: filter_buf[i + 1] = filter_temp;
  1949  0444  2485  118A         	fcall	PL9	;call to abstracted procedure
  1950  0446  0845               	movf	FilterCh13@filter_temp^(0+128),w
  1951  0447  0080               	movwf	0
  1952  0448  0A84               	incf	4,f
  1953  0449  0846               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1954  044A  0080               	movwf	0
  1955  044B                     l4255:	
  1956  044B  0AD2               	incf	FilterCh13@i^(0+128),f
  1957  044C  2C11               	goto	l4257
  1958  044D                     l4259:	
  1959  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1960  044E  3002               	movlw	2
  1961  044F  1303               	bcf	3,6	;RP1=0, select bank1
  1962  0450  0AD1               	incf	FilterCh13@j^(0+128),f
  1963  0451  0251               	subwf	FilterCh13@j^(0+128),w
  1964                           
  1965                           ;common.c: 100: }
  1966                           ;common.c: 101: }
  1967                           ;common.c: 102: }
  1968                           ;common.c: 104: for(i = 1; i < 3 - 1; i++)
  1969  0452  01D2               	clrf	FilterCh13@i^(0+128)
  1970  0453  1C03               	skipc
  1971  0454  2C11               	goto	l4257
  1972  0455  0AD2               	incf	FilterCh13@i^(0+128),f
  1973                           
  1974                           ;common.c: 105: {
  1975                           ;common.c: 106: filter_sum += filter_buf[i];
  1976  0456  1003               	clrc
  1977  0457                     L11:	
  1978  0457  246C  118A         	fcall	PL5	;call to abstracted procedure
  1979  0459  0840               	movf	??_FilterCh13^(0+128),w
  1980  045A  07C7               	addwf	FilterCh13@filter_sum^(0+128),f
  1981  045B  1803               	skipnc
  1982  045C  0AC8               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1983  045D  0841               	movf	(??_FilterCh13+1)^(0+128),w
  1984  045E  07C8               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1985  045F  3002               	movlw	2
  1986  0460  0AD2               	incf	FilterCh13@i^(0+128),f
  1987  0461  0252               	subwf	FilterCh13@i^(0+128),w
  1988  0462  1C03               	skipc
  1989  0463  2C57               	goto	L11
  1990                           
  1991                           ;common.c: 107: }
  1992                           ;common.c: 110: return (filter_sum >> 0 );
  1993  0464  0848               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1994  0465  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0466  00BA               	movwf	?_FilterCh13+1
  1996  0467  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0468  0847               	movf	FilterCh13@filter_sum^(0+128),w
  1998  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1999  046A  00B9               	movwf	?_FilterCh13
  2000  046B  0008               	return
  2001  046C                     __end_of_FilterCh13:	
  2002  046C                     PL5:	
  2003  046C  0D52               	rlf	FilterCh13@i^(0+128),w
  2004  046D  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  2005  046E  0084               	movwf	4
  2006  046F  1383               	bcf	3,7	;select IRP bank1
  2007  0470  0800               	movf	0,w
  2008  0471  00C0               	movwf	??_FilterCh13^(0+128)
  2009  0472  0A84               	incf	4,f
  2010  0473  0800               	movf	0,w
  2011  0474  00C1               	movwf	(??_FilterCh13^(0+128)+1)
  2012  0475  0008               	return
  2013  0476                     PL6:	
  2014  0476  0800               	movf	0,w
  2015  0477  00C0               	movwf	??_FilterCh13^(0+128)
  2016  0478  0A84               	incf	4,f
  2017  0479  0800               	movf	0,w
  2018  047A  00C1               	movwf	(??_FilterCh13^(0+128)+1)
  2019  047B  1003               	clrc
  2020  047C  0008               	return
  2021  047D                     PL7:	
  2022  047D  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  2023  047E  0084               	movwf	4
  2024  047F  0840               	movf	??_FilterCh13^(0+128),w
  2025  0480  0080               	movwf	0
  2026  0481  0A84               	incf	4,f
  2027  0482  0841               	movf	(??_FilterCh13+1)^(0+128),w
  2028  0483  0080               	movwf	0
  2029  0484  0008               	return
  2030  0485                     PL9:	
  2031  0485  1003               	clrc
  2032  0486  0D52               	rlf	FilterCh13@i^(0+128),w
  2033  0487  3E02               	addlw	2
  2034  0488  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  2035  0489  0084               	movwf	4
  2036  048A  0008               	return
  2037                           
  2038                           	psect	text1368
  2039  048B                     __ptext1368:	
  2040 ;; =============== function _getAdOriginalCh13Value ends ============
  2041                           
  2042                           
  2043 ;; *************** function _process_AD_Converter_Value *****************
  2044 ;; Defined at:
  2045 ;;		line 432 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;		None               void
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 60/0
  2057 ;;		Unchanged: FFF9F/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    4
  2066 ;; This function calls:
  2067 ;;		_getAD_ConvertFlag
  2068 ;;		_setAD_ConvertFlag
  2069 ;;		_AD_Sample
  2070 ;;		_adc_test_init
  2071 ;;		_adc_start
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076  048B                     _process_AD_Converter_Value:	
  2077                           
  2078                           ;common.c: 433: if(getAD_ConvertFlag())
  2079                           
  2080                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2081  048B  24A0  118A         	fcall	_getAD_ConvertFlag
  2082  048D  3A00               	xorlw	0
  2083  048E  1903               	skipnz
  2084  048F  0008               	return
  2085                           
  2086                           ;common.c: 434: {
  2087                           ;common.c: 435: setAD_ConvertFlag(0);
  2088  0490  3000               	movlw	0
  2089  0491  24A4  118A         	fcall	_setAD_ConvertFlag
  2090                           
  2091                           ;common.c: 436: AD_Sample();
  2092  0493  24A7  118A         	fcall	_AD_Sample
  2093                           
  2094                           ;common.c: 437: if(2 == sampleChannelSelect)
  2095  0495  0855               	movf	_sampleChannelSelect,w
  2096  0496  3A02               	xorlw	2
  2097  0497  1D03               	skipz
  2098  0498  2C9B               	goto	l4317
  2099  0499  3002               	movlw	2
  2100  049A  2C9C               	goto	L10
  2101  049B                     l4317:	
  2102                           ;common.c: 438: adc_test_init(2,0);
  2103                           
  2104  049B  3001               	movlw	1
  2105  049C                     L10:	
  2106                           
  2107                           ;common.c: 439: else
  2108                           ;common.c: 440: adc_test_init(1,0);
  2109  049C  01B9               	clrf	?_adc_test_init
  2110  049D  24BB  118A         	fcall	_adc_test_init
  2111                           
  2112                           ;common.c: 441: adc_start();
  2113  049F  2CD6               	ljmp	l4123
  2114  04A0                     __end_of_process_AD_Converter_Value:	
  2115  04A0                     __ptext1374:	
  2116 ;; =============== function _setAD_ConvertFlag ends ============
  2117                           
  2118                           
  2119 ;; *************** function _getAD_ConvertFlag *****************
  2120 ;; Defined at:
  2121 ;;		line 381 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      unsigned char 
  2128 ;; Registers used:
  2129 ;;		wreg
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 60/0
  2133 ;;		Unchanged: FFF9F/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    3
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_process_AD_Converter_Value
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148  04A0                     _getAD_ConvertFlag:	
  2149                           
  2150                           ;common.c: 382: return adc_convert_flag;
  2151                           
  2152                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2153  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2154  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2155  04A2  0846               	movf	_adc_convert_flag,w
  2156  04A3  0008               	return
  2157  04A4                     __end_of_getAD_ConvertFlag:	
  2158  04A4                     __ptext1373:	
  2159 ;; =============== function _AD_Sample ends ============
  2160                           
  2161                           
  2162 ;; *************** function _setAD_ConvertFlag *****************
  2163 ;; Defined at:
  2164 ;;		line 387 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  flag            1    wreg     unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  flag            1   25[BANK0 ] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;		None               void
  2171 ;; Registers used:
  2172 ;;		wreg
  2173 ;; Tracked objects:
  2174 ;;		On entry : 60/0
  2175 ;;		On exit  : 60/0
  2176 ;;		Unchanged: FFF9F/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         0       0       0       0       0
  2179 ;;      Locals:         0       1       0       0       0
  2180 ;;      Temps:          0       0       0       0       0
  2181 ;;      Totals:         0       1       0       0       0
  2182 ;;Total ram usage:        1 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    3
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_process_AD_Converter_Value
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191  04A4                     _setAD_ConvertFlag:	
  2192                           
  2193                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2194                           ;setAD_ConvertFlag@flag stored from wreg
  2195  04A4  00B9               	movwf	setAD_ConvertFlag@flag
  2196                           
  2197                           ;common.c: 388: adc_convert_flag = flag;
  2198  04A5  00C6               	movwf	_adc_convert_flag
  2199  04A6  0008               	return
  2200  04A7                     __end_of_setAD_ConvertFlag:	
  2201  04A7                     __ptext1372:	
  2202 ;; =============== function _initPin ends ============
  2203                           
  2204                           
  2205 ;; *************** function _AD_Sample *****************
  2206 ;; Defined at:
  2207 ;;		line 455 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;		None               void
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 60/0
  2218 ;;		On exit  : 60/0
  2219 ;;		Unchanged: FFF9F/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    3
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_process_AD_Converter_Value
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234  04A7                     _AD_Sample:	
  2235                           
  2236                           ;common.c: 456: if(sampleTimes < 3)
  2237                           
  2238                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2239  04A7  3003               	movlw	3
  2240  04A8  024C               	subwf	_sampleTimes,w
  2241  04A9  1803               	skipnc
  2242  04AA  0008               	return
  2243  04AB  3003               	movlw	3
  2244                           
  2245                           ;common.c: 457: {
  2246                           ;common.c: 458: sampleTimes++;
  2247  04AC  0ACC               	incf	_sampleTimes,f
  2248                           
  2249                           ;common.c: 460: if(sampleTimes >= 3)
  2250  04AD  024C               	subwf	_sampleTimes,w
  2251  04AE  1C03               	skipc
  2252  04AF  0008               	return
  2253                           
  2254                           ;common.c: 461: {
  2255                           ;common.c: 462: sampleTimes = 0;
  2256  04B0  01CC               	clrf	_sampleTimes
  2257                           
  2258                           ;common.c: 464: if(sampleChannelSelect == 2)
  2259  04B1  0855               	movf	_sampleChannelSelect,w
  2260  04B2  3A02               	xorlw	2
  2261  04B3  1D03               	skipz
  2262  04B4  2CB8               	goto	l4295
  2263                           
  2264                           ;common.c: 465: {
  2265                           ;common.c: 466: sampleChannelSelect = 1;
  2266  04B5  01D5               	clrf	_sampleChannelSelect
  2267  04B6  0AD5               	incf	_sampleChannelSelect,f
  2268                           
  2269                           ;common.c: 467: }
  2270  04B7  0008               	return
  2271  04B8                     l4295:	
  2272                           
  2273                           ;common.c: 469: else
  2274                           ;common.c: 470: {
  2275                           ;common.c: 471: sampleChannelSelect = 2;
  2276  04B8  3002               	movlw	2
  2277  04B9  00D5               	movwf	_sampleChannelSelect
  2278  04BA  0008               	return
  2279  04BB                     __end_of_AD_Sample:	
  2280  04BB                     __ptext1388:	
  2281 ;; =============== function _startTwentyMinTimer ends ============
  2282                           
  2283                           
  2284 ;; *************** function _adc_test_init *****************
  2285 ;; Defined at:
  2286 ;;		line 121 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  channel         1    wreg     unsigned char 
  2289 ;;  ref             1   25[BANK0 ] unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  channel         1   27[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 60/0
  2298 ;;		On exit  : 60/20
  2299 ;;		Unchanged: FFF9F/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       1       0       0       0
  2302 ;;      Locals:         0       1       0       0       0
  2303 ;;      Temps:          0       1       0       0       0
  2304 ;;      Totals:         0       3       0       0       0
  2305 ;;Total ram usage:        3 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    3
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;;		_process_AD_Converter_Value
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315  04BB                     _adc_test_init:	
  2316                           
  2317                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2318                           ;adc_test_init@channel stored from wreg
  2319  04BB  00BB               	movwf	adc_test_init@channel
  2320                           
  2321                           ;periph.c: 122: ADCON0 = 0x40;
  2322  04BC  3040               	movlw	64
  2323  04BD  009F               	movwf	31	;volatile
  2324                           
  2325                           ;periph.c: 123: ADCON0|=channel<<2;
  2326  04BE  083B               	movf	adc_test_init@channel,w
  2327  04BF  00BA               	movwf	??_adc_test_init
  2328  04C0  1003               	clrc
  2329  04C1  0DBA               	rlf	??_adc_test_init,f
  2330  04C2  1003               	clrc
  2331  04C3  0D3A               	rlf	??_adc_test_init,w
  2332  04C4  049F               	iorwf	31,f	;volatile
  2333                           
  2334                           ;periph.c: 124: ADCON1 = 0x35;
  2335  04C5  3035               	movlw	53
  2336  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2337  04C7  009F               	movwf	31	;volatile
  2338                           
  2339                           ;periph.c: 125: ADCON1|=ref<<6;
  2340  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2341  04C9  0839               	movf	adc_test_init@ref,w
  2342  04CA  00BA               	movwf	??_adc_test_init
  2343  04CB  0CBA               	rrf	??_adc_test_init,f
  2344  04CC  0CBA               	rrf	??_adc_test_init,f
  2345  04CD  0C3A               	rrf	??_adc_test_init,w
  2346  04CE  39C0               	andlw	192
  2347  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2348  04D0  049F               	iorwf	31,f	;volatile
  2349                           
  2350                           ;periph.c: 126: ADON=1;
  2351  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2352  04D2  141F               	bsf	31,0
  2353                           
  2354                           ;periph.c: 127: ADIE=1;
  2355  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2356  04D4  150D               	bsf	13,2
  2357  04D5  0008               	return
  2358  04D6                     __end_of_adc_test_init:	
  2359  04D6                     __ptext1386:	
  2360 ;; =============== function _isPermitSampleTime ends ============
  2361                           
  2362                           
  2363 ;; *************** function _adc_start *****************
  2364 ;; Defined at:
  2365 ;;		line 137 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		None
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/20
  2376 ;;		On exit  : 60/0
  2377 ;;		Unchanged: FFF9F/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0
  2382 ;;      Totals:         0       0       0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    3
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;;		_process_AD_Converter_Value
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393  04D6                     _adc_start:	
  2394  04D6                     l4123:	
  2395                           ; Regs used in _adc_start: []
  2396                           
  2397                           
  2398                           ;periph.c: 138: GO=1;
  2399  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2400  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2401  04D8  149F               	bsf	31,1
  2402  04D9  0008               	return
  2403  04DA                     __end_of_adc_start:	
  2404                           
  2405                           	psect	text1369
  2406  052C                     __ptext1369:	
  2407 ;; =============== function _process_AD_Converter_Value ends ============
  2408                           
  2409                           
  2410 ;; *************** function _resetAllTimer *****************
  2411 ;; Defined at:
  2412 ;;		line 494 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		status,2, status,0, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 160/20
  2423 ;;		On exit  : 160/0
  2424 ;;		Unchanged: FFE9F/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2426 ;;      Params:         0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0
  2429 ;;      Totals:         0       0       0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    4
  2433 ;; This function calls:
  2434 ;;		_clearTwelveHoursTimer
  2435 ;;		_clearThreeHoursTimer
  2436 ;;		_clearOneHoursTimer
  2437 ;;		_clearTwentyMinTimer
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442  052C                     _resetAllTimer:	
  2443                           
  2444                           ;main.c: 495: clearTwelveHoursTimer();
  2445                           
  2446                           ; Regs used in _resetAllTimer: [status,2+status,0+pclath+cstack]
  2447  052C  2533  118A         	fcall	_clearTwelveHoursTimer
  2448                           
  2449                           ;main.c: 496: clearThreeHoursTimer();
  2450  052E  2538  118A         	fcall	_clearThreeHoursTimer
  2451                           
  2452                           ;main.c: 497: clearOneHoursTimer();
  2453  0530  253C  118A         	fcall	_clearOneHoursTimer
  2454                           
  2455                           ;main.c: 498: clearTwentyMinTimer();
  2456  0532  2D40               	ljmp	l4081
  2457  0533                     __end_of_resetAllTimer:	
  2458  0533                     __ptext1397:	
  2459 ;; =============== function _clearThreeHoursTimer ends ============
  2460                           
  2461                           
  2462 ;; *************** function _clearTwelveHoursTimer *****************
  2463 ;; Defined at:
  2464 ;;		line 498 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;		None               void
  2471 ;; Registers used:
  2472 ;;		status,2
  2473 ;; Tracked objects:
  2474 ;;		On entry : 40/0
  2475 ;;		On exit  : 60/0
  2476 ;;		Unchanged: FFF9F/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2478 ;;      Params:         0       0       0       0       0
  2479 ;;      Locals:         0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0
  2481 ;;      Totals:         0       0       0       0       0
  2482 ;;Total ram usage:        0 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    3
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_resetAllTimer
  2489 ;;		_main
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492  0533                     _clearTwelveHoursTimer:	
  2493                           
  2494                           ;common.c: 499: uiBigTimer = 0;
  2495                           
  2496                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2497  0533  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0534  01BD               	clrf	_uiBigTimer
  2499  0535  01BE               	clrf	_uiBigTimer+1
  2500                           
  2501                           ;common.c: 500: bBigTimerStartFlag = 0;
  2502  0536  01C7               	clrf	_bBigTimerStartFlag
  2503  0537  0008               	return
  2504  0538                     __end_of_clearTwelveHoursTimer:	
  2505  0538                     __ptext1396:	
  2506 ;; =============== function _clearOneHoursTimer ends ============
  2507                           
  2508                           
  2509 ;; *************** function _clearThreeHoursTimer *****************
  2510 ;; Defined at:
  2511 ;;		line 505 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;		None               void
  2518 ;; Registers used:
  2519 ;;		status,2
  2520 ;; Tracked objects:
  2521 ;;		On entry : 60/0
  2522 ;;		On exit  : 60/0
  2523 ;;		Unchanged: FFF9F/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    3
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_resetAllTimer
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539  0538                     _clearThreeHoursTimer:	
  2540                           
  2541                           ;common.c: 506: uiSmallTimer = 0;
  2542                           
  2543                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2544  0538  01C1               	clrf	_uiSmallTimer
  2545  0539  01C2               	clrf	_uiSmallTimer+1
  2546                           
  2547                           ;common.c: 507: bSmallTimerStartFlag = 0;
  2548  053A  01C9               	clrf	_bSmallTimerStartFlag
  2549  053B  0008               	return
  2550  053C                     __end_of_clearThreeHoursTimer:	
  2551  053C                     __ptext1395:	
  2552 ;; =============== function _clearTwentyMinTimer ends ============
  2553                           
  2554                           
  2555 ;; *************** function _clearOneHoursTimer *****************
  2556 ;; Defined at:
  2557 ;;		line 511 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;		None               void
  2564 ;; Registers used:
  2565 ;;		status,2
  2566 ;; Tracked objects:
  2567 ;;		On entry : 160/0
  2568 ;;		On exit  : 160/0
  2569 ;;		Unchanged: FFE9F/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    3
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_resetAllTimer
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584  053C                     _clearOneHoursTimer:	
  2585                           
  2586                           ;common.c: 512: uiOneHourTimer = 0;
  2587                           
  2588                           ; Regs used in _clearOneHoursTimer: [status,2]
  2589  053C  01BF               	clrf	_uiOneHourTimer
  2590  053D  01C0               	clrf	_uiOneHourTimer+1
  2591                           
  2592                           ;common.c: 513: bOneHourTimerStartFlag = 0;
  2593  053E  01C8               	clrf	_bOneHourTimerStartFlag
  2594  053F  0008               	return
  2595  0540                     __end_of_clearOneHoursTimer:	
  2596  0540                     __ptext1394:	
  2597 ;; =============== function _clock_config ends ============
  2598                           
  2599                           
  2600 ;; *************** function _clearTwentyMinTimer *****************
  2601 ;; Defined at:
  2602 ;;		line 518 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;		None               void
  2609 ;; Registers used:
  2610 ;;		status,2
  2611 ;; Tracked objects:
  2612 ;;		On entry : 60/0
  2613 ;;		On exit  : 60/0
  2614 ;;		Unchanged: FFF9F/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2616 ;;      Params:         0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    3
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_resetAllTimer
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630  0540                     _clearTwentyMinTimer:	
  2631  0540                     l4081:	
  2632                           ; Regs used in _clearTwentyMinTimer: [status,2]
  2633                           
  2634                           
  2635                           ;common.c: 519: uiTwentyMinTimer = 0;
  2636  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0541  01A2               	clrf	_uiTwentyMinTimer^(0+128)
  2638  0542  01A3               	clrf	(_uiTwentyMinTimer+1)^(0+128)
  2639                           
  2640                           ;common.c: 520: bTwentyMinStartFlag = 0;
  2641  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0544  01CA               	clrf	_bTwentyMinStartFlag
  2643  0545  0008               	return
  2644  0546                     __end_of_clearTwentyMinTimer:	
  2645                           
  2646                           	psect	text1370
  2647  050B                     __ptext1370:	
  2648 ;; =============== function _resetAllTimer ends ============
  2649                           
  2650                           
  2651 ;; *************** function _setPinInitVaule *****************
  2652 ;; Defined at:
  2653 ;;		line 285 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 17F/20
  2664 ;;		On exit  : 17F/0
  2665 ;;		Unchanged: FFE80/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0
  2670 ;;      Totals:         0       0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    4
  2674 ;; This function calls:
  2675 ;;		_setPB3
  2676 ;;		_setPB4
  2677 ;;		_setPB5
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682  050B                     _setPinInitVaule:	
  2683                           
  2684                           ;main.c: 287: setPB3(1);
  2685                           
  2686                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2687  050B  3001               	movlw	1
  2688  050C  2513  118A         	fcall	_setPB3
  2689                           
  2690                           ;main.c: 288: setPB4(0);
  2691  050E  3000               	movlw	0
  2692  050F  251C  118A         	fcall	_setPB4
  2693                           
  2694                           ;main.c: 289: setPB5(1);
  2695  0511  3001               	movlw	1
  2696  0512  2D24               	ljmp	_setPB5
  2697  0513                     __end_of_setPinInitVaule:	
  2698  0513                     __ptext1406:	
  2699 ;; =============== function _initPB4 ends ============
  2700                           
  2701                           
  2702 ;; *************** function _setPB3 *****************
  2703 ;; Defined at:
  2704 ;;		line 135 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  bValue          1    wreg     unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  bValue          1   25[BANK0 ] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;		None               void
  2711 ;; Registers used:
  2712 ;;		wreg
  2713 ;; Tracked objects:
  2714 ;;		On entry : 40/0
  2715 ;;		On exit  : 60/0
  2716 ;;		Unchanged: FFF9F/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       0       0       0       0
  2719 ;;      Locals:         0       1       0       0       0
  2720 ;;      Temps:          0       0       0       0       0
  2721 ;;      Totals:         0       1       0       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    3
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_setPinInitVaule
  2729 ;;		_main
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732  0513                     _setPB3:	
  2733                           
  2734                           ; Regs used in _setPB3: [wreg]
  2735                           ;setPB3@bValue stored from wreg
  2736  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0514  00B9               	movwf	setPB3@bValue
  2738                           
  2739                           ;main.c: 136: if( bValue )
  2740  0515  0839               	movf	setPB3@bValue,w
  2741  0516  1903               	btfsc	3,2
  2742  0517  2D1A               	goto	l690
  2743                           
  2744                           ;main.c: 139: PB0 = 1;
  2745  0518  1406               	bsf	6,0
  2746  0519  0008               	return
  2747  051A                     l690:	
  2748                           
  2749                           ;main.c: 143: else
  2750                           ;main.c: 146: PB0 = 0;
  2751  051A  1006               	bcf	6,0
  2752  051B  0008               	return
  2753  051C                     __end_of_setPB3:	
  2754  051C                     __ptext1404:	
  2755 ;; =============== function _initPB5 ends ============
  2756                           
  2757                           
  2758 ;; *************** function _setPB4 *****************
  2759 ;; Defined at:
  2760 ;;		line 174 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  bValue          1    wreg     unsigned char 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  bValue          1   25[BANK0 ] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg
  2769 ;; Tracked objects:
  2770 ;;		On entry : 60/0
  2771 ;;		On exit  : 60/0
  2772 ;;		Unchanged: FFF9F/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       0       0       0       0
  2775 ;;      Locals:         0       1       0       0       0
  2776 ;;      Temps:          0       0       0       0       0
  2777 ;;      Totals:         0       1       0       0       0
  2778 ;;Total ram usage:        1 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    3
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_setPinInitVaule
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788  051C                     _setPB4:	
  2789                           
  2790                           ; Regs used in _setPB4: [wreg]
  2791                           ;setPB4@bValue stored from wreg
  2792  051C  00B9               	movwf	setPB4@bValue
  2793                           
  2794                           ;main.c: 175: if( bValue )
  2795  051D  0839               	movf	setPB4@bValue,w
  2796  051E  1903               	btfsc	3,2
  2797  051F  2D22               	goto	l700
  2798                           
  2799                           ;main.c: 178: PB3 = 1;
  2800  0520  1586               	bsf	6,3
  2801  0521  0008               	return
  2802  0522                     l700:	
  2803                           
  2804                           ;main.c: 182: else
  2805                           ;main.c: 185: PB3 = 0;
  2806  0522  1186               	bcf	6,3
  2807  0523  0008               	return
  2808  0524                     __end_of_setPB4:	
  2809  0524                     __ptext1402:	
  2810 ;; =============== function _initPB2_AsHighResistence ends ============
  2811                           
  2812                           
  2813 ;; *************** function _setPB5 *****************
  2814 ;; Defined at:
  2815 ;;		line 212 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  bValue          1    wreg     unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  bValue          1   25[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg
  2824 ;; Tracked objects:
  2825 ;;		On entry : 60/0
  2826 ;;		On exit  : 60/0
  2827 ;;		Unchanged: FFF9F/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2829 ;;      Params:         0       0       0       0       0
  2830 ;;      Locals:         0       1       0       0       0
  2831 ;;      Temps:          0       0       0       0       0
  2832 ;;      Totals:         0       1       0       0       0
  2833 ;;Total ram usage:        1 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    3
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_setPinInitVaule
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843  0524                     _setPB5:	
  2844                           
  2845                           ; Regs used in _setPB5: [wreg]
  2846                           ;setPB5@bValue stored from wreg
  2847  0524  00B9               	movwf	setPB5@bValue
  2848                           
  2849                           ;main.c: 213: if( bValue )
  2850  0525  0839               	movf	setPB5@bValue,w
  2851  0526  1903               	btfsc	3,2
  2852  0527  2D2A               	goto	l710
  2853                           
  2854                           ;main.c: 216: PB1 = 1;
  2855  0528  1486               	bsf	6,1
  2856  0529  0008               	return
  2857  052A                     l710:	
  2858                           
  2859                           ;main.c: 221: else
  2860                           ;main.c: 224: PB1 = 0;
  2861  052A  1086               	bcf	6,1
  2862  052B  0008               	return
  2863  052C                     __end_of_setPB5:	
  2864                           
  2865                           	psect	text1371
  2866  04DA                     __ptext1371:	
  2867 ;; =============== function _setPinInitVaule ends ============
  2868                           
  2869                           
  2870 ;; *************** function _initPin *****************
  2871 ;; Defined at:
  2872 ;;		line 269 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;		None               void
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 17F/0
  2883 ;;		On exit  : 17F/20
  2884 ;;		Unchanged: FFE80/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0
  2889 ;;      Totals:         0       0       0       0       0
  2890 ;;Total ram usage:        0 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    4
  2893 ;; This function calls:
  2894 ;;		_initPB2_AsHighResistence
  2895 ;;		_initPB3
  2896 ;;		_initPB4
  2897 ;;		_initPB5
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902  04DA                     _initPin:	
  2903                           
  2904                           ;main.c: 271: initPB2_AsHighResistence();
  2905                           
  2906                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2907  04DA  24F0  118A         	fcall	_initPB2_AsHighResistence
  2908                           
  2909                           ;main.c: 273: initPB3(0);
  2910  04DC  3000               	movlw	0
  2911  04DD  24E4  118A         	fcall	_initPB3
  2912                           
  2913                           ;main.c: 275: initPB4(0);
  2914  04DF  3000               	movlw	0
  2915  04E0  24F5  118A         	fcall	_initPB4
  2916                           
  2917                           ;main.c: 277: initPB5(0);
  2918  04E2  3000               	movlw	0
  2919  04E3  2D00               	ljmp	_initPB5
  2920  04E4                     __end_of_initPin:	
  2921  04E4                     __ptext1407:	
  2922 ;; =============== function _setPB3 ends ============
  2923                           
  2924                           
  2925 ;; *************** function _initPB3 *****************
  2926 ;; Defined at:
  2927 ;;		line 116 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  bValue          1    wreg     unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  bValue          1   25[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;		None               void
  2934 ;; Registers used:
  2935 ;;		wreg
  2936 ;; Tracked objects:
  2937 ;;		On entry : 17F/60
  2938 ;;		On exit  : 17F/20
  2939 ;;		Unchanged: FFE80/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         0       1       0       0       0
  2943 ;;      Temps:          0       0       0       0       0
  2944 ;;      Totals:         0       1       0       0       0
  2945 ;;Total ram usage:        1 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    3
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_initPin
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954  04E4                     _initPB3:	
  2955                           
  2956                           ; Regs used in _initPB3: [wreg]
  2957                           ;initPB3@bValue stored from wreg
  2958  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2959  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2960  04E6  00B9               	movwf	initPB3@bValue
  2961                           
  2962                           ;main.c: 117: if( bValue )
  2963  04E7  0839               	movf	initPB3@bValue,w
  2964  04E8  1903               	btfsc	3,2
  2965  04E9  2CED               	goto	l685
  2966                           
  2967                           ;main.c: 120: TRISB0 = 1;
  2968  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2969  04EB  1406               	bsf	6,0
  2970  04EC  0008               	return
  2971  04ED                     l685:	
  2972                           
  2973                           ;main.c: 124: else
  2974                           ;main.c: 127: TRISB0 = 0;
  2975  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  2976  04EE  1006               	bcf	6,0
  2977  04EF  0008               	return
  2978  04F0                     __end_of_initPB3:	
  2979  04F0                     __ptext1401:	
  2980 ;; =============== function _pwm_start ends ============
  2981                           
  2982                           
  2983 ;; *************** function _initPB2_AsHighResistence *****************
  2984 ;; Defined at:
  2985 ;;		line 232 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;		None               void
  2992 ;; Registers used:
  2993 ;;		None
  2994 ;; Tracked objects:
  2995 ;;		On entry : 17F/0
  2996 ;;		On exit  : 17F/60
  2997 ;;		Unchanged: FFE80/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0
  3002 ;;      Totals:         0       0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    3
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_initPin
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012  04F0                     _initPB2_AsHighResistence:	
  3013                           
  3014                           ;main.c: 234: PB2 = 1;
  3015                           
  3016                           ; Regs used in _initPB2_AsHighResistence: []
  3017  04F0  1506               	bsf	6,2
  3018                           
  3019                           ;main.c: 235: PBOD2 = 1;
  3020  04F1  1683               	bsf	3,5	;RP0=1, select bank3
  3021  04F2  1703               	bsf	3,6	;RP1=1, select bank3
  3022  04F3  1508               	bsf	8,2
  3023  04F4  0008               	return
  3024  04F5                     __end_of_initPB2_AsHighResistence:	
  3025  04F5                     __ptext1405:	
  3026 ;; =============== function _setPB4 ends ============
  3027                           
  3028                           
  3029 ;; *************** function _initPB4 *****************
  3030 ;; Defined at:
  3031 ;;		line 155 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  bValue          1    wreg     unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  bValue          1   25[BANK0 ] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;		None               void
  3038 ;; Registers used:
  3039 ;;		wreg
  3040 ;; Tracked objects:
  3041 ;;		On entry : 17F/20
  3042 ;;		On exit  : 17F/20
  3043 ;;		Unchanged: FFE80/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3045 ;;      Params:         0       0       0       0       0
  3046 ;;      Locals:         0       1       0       0       0
  3047 ;;      Temps:          0       0       0       0       0
  3048 ;;      Totals:         0       1       0       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    3
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_initPin
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058  04F5                     _initPB4:	
  3059                           
  3060                           ; Regs used in _initPB4: [wreg]
  3061                           ;initPB4@bValue stored from wreg
  3062  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3063  04F6  00B9               	movwf	initPB4@bValue
  3064                           
  3065                           ;main.c: 156: if( bValue )
  3066  04F7  0839               	movf	initPB4@bValue,w
  3067  04F8  1903               	btfsc	3,2
  3068  04F9  2CFD               	goto	l695
  3069                           
  3070                           ;main.c: 159: TRISB3 = 1;
  3071  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  3072  04FB  1586               	bsf	6,3
  3073  04FC  0008               	return
  3074  04FD                     l695:	
  3075                           
  3076                           ;main.c: 163: else
  3077                           ;main.c: 166: TRISB3 = 0;
  3078  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  3079  04FE  1186               	bcf	6,3
  3080  04FF  0008               	return
  3081  0500                     __end_of_initPB4:	
  3082  0500                     __ptext1403:	
  3083 ;; =============== function _setPB5 ends ============
  3084                           
  3085                           
  3086 ;; *************** function _initPB5 *****************
  3087 ;; Defined at:
  3088 ;;		line 193 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  bValue          1    wreg     unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  bValue          1   25[BANK0 ] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;		None               void
  3095 ;; Registers used:
  3096 ;;		wreg
  3097 ;; Tracked objects:
  3098 ;;		On entry : 17F/20
  3099 ;;		On exit  : 17F/20
  3100 ;;		Unchanged: FFE80/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         0       1       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         0       1       0       0       0
  3106 ;;Total ram usage:        1 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    3
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_initPin
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115  0500                     _initPB5:	
  3116                           
  3117                           ; Regs used in _initPB5: [wreg]
  3118                           ;initPB5@bValue stored from wreg
  3119  0500  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0501  00B9               	movwf	initPB5@bValue
  3121                           
  3122                           ;main.c: 194: if( bValue )
  3123  0502  0839               	movf	initPB5@bValue,w
  3124  0503  1903               	btfsc	3,2
  3125  0504  2D08               	goto	l705
  3126                           
  3127                           ;main.c: 197: TRISB1 = 1;
  3128  0505  1683               	bsf	3,5	;RP0=1, select bank1
  3129  0506  1486               	bsf	6,1
  3130  0507  0008               	return
  3131  0508                     l705:	
  3132                           
  3133                           ;main.c: 201: else
  3134                           ;main.c: 204: TRISB1= 0;
  3135  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3136  0509  1086               	bcf	6,1
  3137  050A  0008               	return
  3138  050B                     __end_of_initPB5:	
  3139                           
  3140                           	psect	text1376
  3141  0619                     __ptext1376:	
  3142 ;; =============== function _FilterCh13 ends ============
  3143                           
  3144                           
  3145 ;; *************** function _setWaitResetFlag *****************
  3146 ;; Defined at:
  3147 ;;		line 55 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  bValue          1    wreg     unsigned char 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  bValue          1   25[BANK0 ] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		wreg
  3156 ;; Tracked objects:
  3157 ;;		On entry : 60/0
  3158 ;;		On exit  : 60/0
  3159 ;;		Unchanged: FFF9F/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       0       0       0
  3162 ;;      Locals:         0       1       0       0       0
  3163 ;;      Temps:          0       0       0       0       0
  3164 ;;      Totals:         0       1       0       0       0
  3165 ;;Total ram usage:        1 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    3
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174  0619                     _setWaitResetFlag:	
  3175                           
  3176                           ; Regs used in _setWaitResetFlag: [wreg]
  3177                           ;setWaitResetFlag@bValue stored from wreg
  3178  0619  00B9               	movwf	setWaitResetFlag@bValue
  3179                           
  3180                           ;common.c: 56: bWaitResetFlag = bValue;
  3181  061A  00CB               	movwf	_bWaitResetFlag
  3182  061B  0008               	return
  3183  061C                     __end_of_setWaitResetFlag:	
  3184                           
  3185                           	psect	text1377
  3186  05D8                     __ptext1377:	
  3187 ;; =============== function _setWaitResetFlag ends ============
  3188                           
  3189                           
  3190 ;; *************** function _isFinishedOneHoursTimer *****************
  3191 ;; Defined at:
  3192 ;;		line 621 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      unsigned char 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 160/20
  3203 ;;		On exit  : 160/0
  3204 ;;		Unchanged: FFE9F/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0
  3209 ;;      Totals:         0       0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    3
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219  05D8                     _isFinishedOneHoursTimer:	
  3220                           
  3221                           ;common.c: 622: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3222                           
  3223                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3224  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3225  05D9  0840               	movf	_uiOneHourTimer+1,w
  3226  05DA  043F               	iorwf	_uiOneHourTimer,w
  3227  05DB  1D03               	skipz
  3228  05DC  3400               	retlw	0
  3229  05DD  0848               	movf	_bOneHourTimerStartFlag,w
  3230  05DE  1903               	btfsc	3,2
  3231  05DF  3400               	retlw	0
  3232  05E0  3001               	movlw	1
  3233                           
  3234                           ;common.c: 623: {
  3235                           ;common.c: 624: bOneHourTimerStartFlag = 0;
  3236  05E1  01C8               	clrf	_bOneHourTimerStartFlag
  3237                           
  3238                           ;common.c: 625: return 1;
  3239  05E2  0008               	return
  3240  05E3                     __end_of_isFinishedOneHoursTimer:	
  3241                           ;common.c: 627: else
  3242                           ;common.c: 628: return 0;
  3243                           
  3244                           
  3245                           	psect	text1378
  3246  0596                     __ptext1378:	
  3247 ;; =============== function _isFinishedOneHoursTimer ends ============
  3248                           
  3249                           
  3250 ;; *************** function _startOneHoursTimer *****************
  3251 ;; Defined at:
  3252 ;;		line 538 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  uiSetTime       2   25[BANK0 ] unsigned int 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;		None               void
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0
  3261 ;; Tracked objects:
  3262 ;;		On entry : 60/0
  3263 ;;		On exit  : 60/0
  3264 ;;		Unchanged: FFF9F/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       2       0       0       0
  3267 ;;      Locals:         0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0
  3269 ;;      Totals:         0       2       0       0       0
  3270 ;;Total ram usage:        2 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    3
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279  0596                     _startOneHoursTimer:	
  3280                           
  3281                           ;common.c: 539: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3282                           
  3283                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3284  0596  0840               	movf	_uiOneHourTimer+1,w
  3285  0597  043F               	iorwf	_uiOneHourTimer,w
  3286  0598  1D03               	skipz
  3287  0599  0008               	return
  3288  059A  08C8               	movf	_bOneHourTimerStartFlag,f
  3289  059B  1D03               	skipz
  3290  059C  0008               	return
  3291                           
  3292                           ;common.c: 540: {
  3293                           ;common.c: 541: uiOneHourTimer = uiSetTime;
  3294  059D  083A               	movf	startOneHoursTimer@uiSetTime+1,w
  3295  059E  00C0               	movwf	_uiOneHourTimer+1
  3296  059F  0839               	movf	startOneHoursTimer@uiSetTime,w
  3297  05A0  00BF               	movwf	_uiOneHourTimer
  3298                           
  3299                           ;common.c: 542: bOneHourTimerStartFlag = 1;
  3300  05A1  01C8               	clrf	_bOneHourTimerStartFlag
  3301  05A2  0AC8               	incf	_bOneHourTimerStartFlag,f
  3302  05A3  0008               	return
  3303  05A4                     __end_of_startOneHoursTimer:	
  3304                           
  3305                           	psect	text1379
  3306  05E3                     __ptext1379:	
  3307 ;; =============== function _startOneHoursTimer ends ============
  3308                           
  3309                           
  3310 ;; *************** function _isFinishedThreeHoursTimer *****************
  3311 ;; Defined at:
  3312 ;;		line 608 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      unsigned char 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0
  3321 ;; Tracked objects:
  3322 ;;		On entry : 60/0
  3323 ;;		On exit  : 60/0
  3324 ;;		Unchanged: FFF9F/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0
  3329 ;;      Totals:         0       0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    3
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339  05E3                     _isFinishedThreeHoursTimer:	
  3340                           
  3341                           ;common.c: 609: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3342                           
  3343                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3344  05E3  0842               	movf	_uiSmallTimer+1,w
  3345  05E4  0441               	iorwf	_uiSmallTimer,w
  3346  05E5  1D03               	skipz
  3347  05E6  3400               	retlw	0
  3348  05E7  0849               	movf	_bSmallTimerStartFlag,w
  3349  05E8  1903               	btfsc	3,2
  3350  05E9  3400               	retlw	0
  3351  05EA  3001               	movlw	1
  3352                           
  3353                           ;common.c: 610: {
  3354                           ;common.c: 611: bSmallTimerStartFlag = 0;
  3355  05EB  01C9               	clrf	_bSmallTimerStartFlag
  3356                           
  3357                           ;common.c: 612: return 1;
  3358  05EC  0008               	return
  3359  05ED                     __end_of_isFinishedThreeHoursTimer:	
  3360                           ;common.c: 614: else
  3361                           ;common.c: 615: return 0;
  3362                           
  3363                           
  3364                           	psect	text1380
  3365  05A4                     __ptext1380:	
  3366 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3367                           
  3368                           
  3369 ;; *************** function _startThreeHoursTimer *****************
  3370 ;; Defined at:
  3371 ;;		line 525 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  uiSetTime       2   25[BANK0 ] unsigned int 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 60/0
  3382 ;;		On exit  : 60/0
  3383 ;;		Unchanged: FFF9F/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       2       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0
  3388 ;;      Totals:         0       2       0       0       0
  3389 ;;Total ram usage:        2 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    3
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398  05A4                     _startThreeHoursTimer:	
  3399                           
  3400                           ;common.c: 526: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3401                           
  3402                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3403  05A4  0842               	movf	_uiSmallTimer+1,w
  3404  05A5  0441               	iorwf	_uiSmallTimer,w
  3405  05A6  1D03               	skipz
  3406  05A7  0008               	return
  3407  05A8  08C9               	movf	_bSmallTimerStartFlag,f
  3408  05A9  1D03               	skipz
  3409  05AA  0008               	return
  3410                           
  3411                           ;common.c: 527: {
  3412                           ;common.c: 528: uiSmallTimer = uiSetTime;
  3413  05AB  083A               	movf	startThreeHoursTimer@uiSetTime+1,w
  3414  05AC  00C2               	movwf	_uiSmallTimer+1
  3415  05AD  0839               	movf	startThreeHoursTimer@uiSetTime,w
  3416  05AE  00C1               	movwf	_uiSmallTimer
  3417                           
  3418                           ;common.c: 529: bSmallTimerStartFlag = 1;
  3419  05AF  01C9               	clrf	_bSmallTimerStartFlag
  3420  05B0  0AC9               	incf	_bSmallTimerStartFlag,f
  3421  05B1  0008               	return
  3422  05B2                     __end_of_startThreeHoursTimer:	
  3423                           
  3424                           	psect	text1381
  3425  05ED                     __ptext1381:	
  3426 ;; =============== function _startThreeHoursTimer ends ============
  3427                           
  3428                           
  3429 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3430 ;; Defined at:
  3431 ;;		line 597 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      unsigned char 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 60/0
  3442 ;;		On exit  : 60/0
  3443 ;;		Unchanged: FFF9F/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         0       0       0       0       0
  3449 ;;Total ram usage:        0 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    3
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458  05ED                     _isFinishedTwelveHoursTimer:	
  3459                           
  3460                           ;common.c: 598: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3461                           
  3462                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3463  05ED  083E               	movf	_uiBigTimer+1,w
  3464  05EE  043D               	iorwf	_uiBigTimer,w
  3465  05EF  1D03               	skipz
  3466  05F0  3400               	retlw	0
  3467  05F1  0847               	movf	_bBigTimerStartFlag,w
  3468  05F2  1903               	btfsc	3,2
  3469  05F3  3400               	retlw	0
  3470  05F4  3001               	movlw	1
  3471                           
  3472                           ;common.c: 599: {
  3473                           ;common.c: 600: bBigTimerStartFlag = 0;
  3474  05F5  01C7               	clrf	_bBigTimerStartFlag
  3475                           
  3476                           ;common.c: 601: return 1;
  3477  05F6  0008               	return
  3478  05F7                     __end_of_isFinishedTwelveHoursTimer:	
  3479                           ;common.c: 603: else
  3480                           ;common.c: 604: return 0;
  3481                           
  3482                           
  3483                           	psect	text1382
  3484  05B2                     __ptext1382:	
  3485 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3486                           
  3487                           
  3488 ;; *************** function _startTwelveHourTimer *****************
  3489 ;; Defined at:
  3490 ;;		line 484 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  uiSetTime       2   25[BANK0 ] unsigned int 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;		None               void
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0
  3499 ;; Tracked objects:
  3500 ;;		On entry : 60/0
  3501 ;;		On exit  : 60/0
  3502 ;;		Unchanged: FFF9F/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3504 ;;      Params:         0       2       0       0       0
  3505 ;;      Locals:         0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0
  3507 ;;      Totals:         0       2       0       0       0
  3508 ;;Total ram usage:        2 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    3
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517  05B2                     _startTwelveHourTimer:	
  3518                           
  3519                           ;common.c: 485: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3520                           
  3521                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3522  05B2  083E               	movf	_uiBigTimer+1,w
  3523  05B3  043D               	iorwf	_uiBigTimer,w
  3524  05B4  1D03               	skipz
  3525  05B5  0008               	return
  3526  05B6  08C7               	movf	_bBigTimerStartFlag,f
  3527  05B7  1D03               	skipz
  3528  05B8  0008               	return
  3529                           
  3530                           ;common.c: 486: {
  3531                           ;common.c: 487: uiBigTimer = uiSetTime;
  3532  05B9  083A               	movf	startTwelveHourTimer@uiSetTime+1,w
  3533  05BA  00BE               	movwf	_uiBigTimer+1
  3534  05BB  0839               	movf	startTwelveHourTimer@uiSetTime,w
  3535  05BC  00BD               	movwf	_uiBigTimer
  3536                           
  3537                           ;common.c: 488: bBigTimerStartFlag = 1;
  3538  05BD  01C7               	clrf	_bBigTimerStartFlag
  3539  05BE  0AC7               	incf	_bBigTimerStartFlag,f
  3540  05BF  0008               	return
  3541  05C0                     __end_of_startTwelveHourTimer:	
  3542                           
  3543                           	psect	text1383
  3544  05C0                     __ptext1383:	
  3545 ;; =============== function _startTwelveHourTimer ends ============
  3546                           
  3547                           
  3548 ;; *************** function _isFinishedTwentyMinTimer *****************
  3549 ;; Defined at:
  3550 ;;		line 573 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      unsigned char 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0
  3559 ;; Tracked objects:
  3560 ;;		On entry : 60/0
  3561 ;;		On exit  : 40/0
  3562 ;;		Unchanged: FFF9F/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0
  3567 ;;      Totals:         0       0       0       0       0
  3568 ;;Total ram usage:        0 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    3
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577  05C0                     _isFinishedTwentyMinTimer:	
  3578                           
  3579                           ;common.c: 574: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3580                           
  3581                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3582  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3583  05C1  0823               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3584  05C2  0422               	iorwf	_uiTwentyMinTimer^(0+128),w
  3585  05C3  1D03               	skipz
  3586  05C4  3400               	retlw	0
  3587  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3588  05C6  084A               	movf	_bTwentyMinStartFlag,w
  3589  05C7  1903               	btfsc	3,2
  3590  05C8  3400               	retlw	0
  3591  05C9  3001               	movlw	1
  3592                           
  3593                           ;common.c: 575: {
  3594                           ;common.c: 576: bTwentyMinStartFlag = 0;
  3595  05CA  01CA               	clrf	_bTwentyMinStartFlag
  3596                           
  3597                           ;common.c: 577: return 1;
  3598  05CB  0008               	return
  3599  05CC                     __end_of_isFinishedTwentyMinTimer:	
  3600                           ;common.c: 579: else
  3601                           ;common.c: 580: return 0;
  3602                           
  3603                           
  3604                           	psect	text1384
  3605  061F                     __ptext1384:	
  3606 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3607                           
  3608                           
  3609 ;; *************** function _clrSampeTime *****************
  3610 ;; Defined at:
  3611 ;;		line 643 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;		None               void
  3618 ;; Registers used:
  3619 ;;		status,2
  3620 ;; Tracked objects:
  3621 ;;		On entry : 60/0
  3622 ;;		On exit  : 60/0
  3623 ;;		Unchanged: FFF9F/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3625 ;;      Params:         0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    3
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_main
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638  061F                     _clrSampeTime:	
  3639                           
  3640                           ;common.c: 644: timer.timer10msStopWatch = 0;
  3641                           
  3642                           ; Regs used in _clrSampeTime: [status,2]
  3643  061F  01CD               	clrf	_timer
  3644  0620  0008               	return
  3645  0621                     __end_of_clrSampeTime:	
  3646                           
  3647                           	psect	text1385
  3648  0611                     __ptext1385:	
  3649 ;; =============== function _clrSampeTime ends ============
  3650                           
  3651                           
  3652 ;; *************** function _isPermitSampleTime *****************
  3653 ;; Defined at:
  3654 ;;		line 633 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      unsigned char 
  3661 ;; Registers used:
  3662 ;;		wreg
  3663 ;; Tracked objects:
  3664 ;;		On entry : 60/0
  3665 ;;		On exit  : 60/0
  3666 ;;		Unchanged: FFF9F/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         0       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         0       0       0       0       0
  3672 ;;Total ram usage:        0 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    3
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681  0611                     _isPermitSampleTime:	
  3682                           
  3683                           ;common.c: 634: if(timer.timer10msStopWatch >= 1)
  3684                           
  3685                           ; Regs used in _isPermitSampleTime: [wreg]
  3686  0611  084D               	movf	_timer,w
  3687  0612  1D03               	skipz
  3688                           
  3689                           ;common.c: 635: {
  3690                           ;common.c: 636: return 1;
  3691  0613  3401               	retlw	1
  3692                           
  3693                           ;common.c: 638: else
  3694                           ;common.c: 639: return 0;
  3695  0614  3400               	retlw	0
  3696  0615                     __end_of_isPermitSampleTime:	
  3697                           
  3698                           	psect	text1387
  3699  0571                     __ptext1387:	
  3700 ;; =============== function _adc_start ends ============
  3701                           
  3702                           
  3703 ;; *************** function _startTwentyMinTimer *****************
  3704 ;; Defined at:
  3705 ;;		line 563 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  uiSetValue      2   25[BANK0 ] unsigned int 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;		None               void
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0
  3714 ;; Tracked objects:
  3715 ;;		On entry : 17F/0
  3716 ;;		On exit  : 15F/0
  3717 ;;		Unchanged: FFE80/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3719 ;;      Params:         0       2       0       0       0
  3720 ;;      Locals:         0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0
  3722 ;;      Totals:         0       2       0       0       0
  3723 ;;Total ram usage:        2 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    3
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732  0571                     _startTwentyMinTimer:	
  3733                           
  3734                           ;common.c: 564: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3735                           
  3736                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3737  0571  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0572  0823               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3739  0573  0422               	iorwf	_uiTwentyMinTimer^(0+128),w
  3740  0574  1D03               	skipz
  3741  0575  0008               	return
  3742  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0577  08CA               	movf	_bTwentyMinStartFlag,f
  3744  0578  1D03               	skipz
  3745  0579  0008               	return
  3746                           
  3747                           ;common.c: 565: {
  3748                           ;common.c: 566: uiTwentyMinTimer = uiSetValue;
  3749  057A  083A               	movf	startTwentyMinTimer@uiSetValue+1,w
  3750  057B  1683               	bsf	3,5	;RP0=1, select bank1
  3751  057C  00A3               	movwf	(_uiTwentyMinTimer+1)^(0+128)
  3752  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3753  057E  0839               	movf	startTwentyMinTimer@uiSetValue,w
  3754  057F  1683               	bsf	3,5	;RP0=1, select bank1
  3755  0580  00A2               	movwf	_uiTwentyMinTimer^(0+128)
  3756                           
  3757                           ;common.c: 567: bTwentyMinStartFlag = 1;
  3758  0581  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0582  01CA               	clrf	_bTwentyMinStartFlag
  3760  0583  0ACA               	incf	_bTwentyMinStartFlag,f
  3761  0584  0008               	return
  3762  0585                     __end_of_startTwentyMinTimer:	
  3763                           
  3764                           	psect	text1389
  3765  05CC                     __ptext1389:	
  3766 ;; =============== function _adc_test_init ends ============
  3767                           
  3768                           
  3769 ;; *************** function _op1_init *****************
  3770 ;; Defined at:
  3771 ;;		line 63 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;		None               void
  3778 ;; Registers used:
  3779 ;;		wreg
  3780 ;; Tracked objects:
  3781 ;;		On entry : 17F/60
  3782 ;;		On exit  : 17F/20
  3783 ;;		Unchanged: FFE80/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0
  3788 ;;      Totals:         0       0       0       0       0
  3789 ;;Total ram usage:        0 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    3
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798  05CC                     _op1_init:	
  3799                           
  3800                           ;periph.c: 69: OP1CON1=0x13;
  3801                           
  3802                           ; Regs used in _op1_init: [wreg]
  3803  05CC  3013               	movlw	19
  3804  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3805  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3806  05CF  009C               	movwf	28	;volatile
  3807                           
  3808                           ;periph.c: 70: OP1CON2=0x10;
  3809  05D0  3010               	movlw	16
  3810  05D1  009D               	movwf	29	;volatile
  3811                           
  3812                           ;periph.c: 71: OP1CON0=0x80;
  3813  05D2  3080               	movlw	128
  3814  05D3  009B               	movwf	27	;volatile
  3815                           
  3816                           ;periph.c: 74: TRISB3=1;
  3817  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3818  05D5  1586               	bsf	6,3
  3819                           
  3820                           ;periph.c: 76: TRISB5=0;
  3821  05D6  1286               	bcf	6,5
  3822  05D7  0008               	return
  3823  05D8                     __end_of_op1_init:	
  3824                           
  3825                           	psect	text1390
  3826  0585                     __ptext1390:	
  3827 ;; =============== function _op1_init ends ============
  3828                           
  3829                           
  3830 ;; *************** function _uid_get *****************
  3831 ;; Defined at:
  3832 ;;		line 31 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;		None               void
  3839 ;; Registers used:
  3840 ;;		wreg
  3841 ;; Tracked objects:
  3842 ;;		On entry : 17F/20
  3843 ;;		On exit  : 17F/60
  3844 ;;		Unchanged: FFE80/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    3
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859  0585                     _uid_get:	
  3860                           
  3861                           ;periph.c: 33: SRAM_MAP = 1;
  3862                           
  3863                           ; Regs used in _uid_get: [wreg]
  3864  0585  1703               	bsf	3,6	;RP1=1, select bank3
  3865  0586  140F               	bsf	15,0
  3866                           
  3867                           ;periph.c: 35: bgr_trim = key.u_1v2;
  3868  0587  0862               	movf	98,w	;volatile
  3869  0588  0863               	movf	99,w	;volatile
  3870                           
  3871                           ;periph.c: 36: ad_offset = key.otp_uid&0xff;
  3872  0589  0867               	movf	103,w	;volatile
  3873  058A  1303               	bcf	3,6	;RP1=0, select bank1
  3874  058B  00A1               	movwf	(_ad_offset+1)^(0+128)	;volatile
  3875  058C  1703               	bsf	3,6	;RP1=1, select bank3
  3876  058D  0866               	movf	102,w	;volatile
  3877  058E  1303               	bcf	3,6	;RP1=0, select bank1
  3878  058F  00A0               	movwf	_ad_offset^(0+128)	;volatile
  3879  0590  30FF               	movlw	255
  3880  0591  05A0               	andwf	_ad_offset^(0+128),f
  3881  0592  01A1               	clrf	(_ad_offset+1)^(0+128)
  3882                           
  3883                           ;periph.c: 38: SRAM_MAP = 0;
  3884  0593  1703               	bsf	3,6	;RP1=1, select bank3
  3885  0594  100F               	bcf	15,0
  3886  0595  0008               	return
  3887  0596                     __end_of_uid_get:	
  3888                           
  3889                           	psect	text1391
  3890  061C                     __ptext1391:	
  3891 ;; =============== function _uid_get ends ============
  3892                           
  3893                           
  3894 ;; *************** function _timer1_interrupt_config *****************
  3895 ;; Defined at:
  3896 ;;		line 373 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;		None               void
  3903 ;; Registers used:
  3904 ;;		None
  3905 ;; Tracked objects:
  3906 ;;		On entry : 17F/20
  3907 ;;		On exit  : 17F/20
  3908 ;;		Unchanged: FFE80/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3910 ;;      Params:         0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    3
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_main
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923  061C                     _timer1_interrupt_config:	
  3924                           
  3925                           ;common.c: 374: GIE = 1;
  3926                           
  3927                           ; Regs used in _timer1_interrupt_config: []
  3928  061C  178B               	bsf	11,7
  3929                           
  3930                           ;common.c: 375: PEIE = 1;
  3931  061D  170B               	bsf	11,6
  3932  061E  0008               	return
  3933  061F                     __end_of_timer1_interrupt_config:	
  3934                           
  3935                           	psect	text1392
  3936  05F7                     __ptext1392:	
  3937 ;; =============== function _timer1_interrupt_config ends ============
  3938                           
  3939                           
  3940 ;; *************** function _timer1_config *****************
  3941 ;; Defined at:
  3942 ;;		line 361 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;		None               void
  3949 ;; Registers used:
  3950 ;;		wreg
  3951 ;; Tracked objects:
  3952 ;;		On entry : 17F/40
  3953 ;;		On exit  : 17F/20
  3954 ;;		Unchanged: FFE80/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3956 ;;      Params:         0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0
  3959 ;;      Totals:         0       0       0       0       0
  3960 ;;Total ram usage:        0 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    3
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_main
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969  05F7                     _timer1_config:	
  3970                           
  3971                           ;common.c: 363: TMR1H=0xCF;
  3972                           
  3973                           ; Regs used in _timer1_config: [wreg]
  3974  05F7  30CF               	movlw	207
  3975  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3976  05F9  008F               	movwf	15	;volatile
  3977                           
  3978                           ;common.c: 364: TMR1L=0x2C;
  3979  05FA  302C               	movlw	44
  3980  05FB  008E               	movwf	14	;volatile
  3981                           
  3982                           ;common.c: 365: T1CON=0xE1;
  3983  05FC  30E1               	movlw	225
  3984  05FD  0090               	movwf	16	;volatile
  3985                           
  3986                           ;common.c: 366: TMR1IE=1;
  3987  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3988  05FF  140C               	bsf	12,0
  3989  0600  0008               	return
  3990  0601                     __end_of_timer1_config:	
  3991                           
  3992                           	psect	text1393
  3993  0609                     __ptext1393:	
  3994 ;; =============== function _timer1_config ends ============
  3995                           
  3996                           
  3997 ;; *************** function _clock_config *****************
  3998 ;; Defined at:
  3999 ;;		line 353 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;		None               void
  4006 ;; Registers used:
  4007 ;;		wreg, status,2
  4008 ;; Tracked objects:
  4009 ;;		On entry : 17F/20
  4010 ;;		On exit  : 17F/40
  4011 ;;		Unchanged: FFE80/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4013 ;;      Params:         0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0
  4016 ;;      Totals:         0       0       0       0       0
  4017 ;;Total ram usage:        0 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    3
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026  0609                     _clock_config:	
  4027                           
  4028                           ;common.c: 355: CLKPR = 0x80;
  4029                           
  4030                           ; Regs used in _clock_config: [wreg+status,2]
  4031  0609  3080               	movlw	128
  4032  060A  1283               	bcf	3,5	;RP0=0, select bank2
  4033  060B  1703               	bsf	3,6	;RP1=1, select bank2
  4034  060C  0088               	movwf	8	;volatile
  4035                           
  4036                           ;common.c: 356: CLKPR = 0x00;
  4037  060D  0188               	clrf	8	;volatile
  4038  060E                     l1574:	
  4039                           ;common.c: 357: while(CLKPCE);
  4040                           
  4041  060E  1F88               	btfss	8,7
  4042  060F  0008               	return
  4043  0610  2E0E               	goto	l1574
  4044  0611                     __end_of_clock_config:	
  4045                           
  4046                           	psect	text1398
  4047  0621                     __ptext1398:	
  4048 ;; =============== function _clearTwelveHoursTimer ends ============
  4049                           
  4050                           
  4051 ;; *************** function _reset *****************
  4052 ;; Defined at:
  4053 ;;		line 307 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;		None               void
  4060 ;; Registers used:
  4061 ;;		None
  4062 ;; Tracked objects:
  4063 ;;		On entry : 60/0
  4064 ;;		On exit  : 60/0
  4065 ;;		Unchanged: FFFFFF9F/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    3
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080  0621                     _reset:	
  4081  0621                     l730:	
  4082                           ; Regs used in _reset: []
  4083                           ;main.c: 309: while(1);
  4084                           
  4085  0621  2E21               	goto	l730
  4086                           
  4087                           	psect	text1399
  4088  0615                     __ptext1399:	
  4089  0615                     __end_of_reset:	
  4090                           
  4091 ;; =============== function _reset ends ============
  4092 ;; *************** function _selectAdChannel *****************
  4093 ;; Defined at:
  4094 ;;		line 296 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;		None               void
  4101 ;; Registers used:
  4102 ;;		None
  4103 ;; Tracked objects:
  4104 ;;		On entry : 17F/0
  4105 ;;		On exit  : 17F/20
  4106 ;;		Unchanged: FFE80/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    3
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121  0615                     _selectAdChannel:	
  4122                           
  4123                           ;main.c: 298: TRISB4 = 1;
  4124                           
  4125                           ; Regs used in _selectAdChannel: []
  4126  0615  1683               	bsf	3,5	;RP0=1, select bank1
  4127  0616  1606               	bsf	6,4
  4128                           
  4129                           ;main.c: 299: TRISB5 = 1;
  4130  0617  1686               	bsf	6,5
  4131  0618  0008               	return
  4132  0619                     __end_of_selectAdChannel:	
  4133                           
  4134                           	psect	text1400
  4135  055C                     __ptext1400:	
  4136 ;; =============== function _selectAdChannel ends ============
  4137                           
  4138                           
  4139 ;; *************** function _pwm_start *****************
  4140 ;; Defined at:
  4141 ;;		line 244 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  ucPulseWidth    1    wreg     unsigned char 
  4144 ;;  ucPulseFrequ    1   25[BANK0 ] unsigned char 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  ucPulseWidth    1   26[BANK0 ] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;		None               void
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 60/0
  4153 ;;		On exit  : 60/0
  4154 ;;		Unchanged: FFF9F/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4156 ;;      Params:         0       1       0       0       0
  4157 ;;      Locals:         0       1       0       0       0
  4158 ;;      Temps:          0       0       0       0       0
  4159 ;;      Totals:         0       2       0       0       0
  4160 ;;Total ram usage:        2 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; Hardware stack levels required when called:    3
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_main
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169  055C                     _pwm_start:	
  4170                           
  4171                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  4172                           ;pwm_start@ucPulseWidth stored from wreg
  4173  055C  00BA               	movwf	pwm_start@ucPulseWidth
  4174                           
  4175                           ;main.c: 246: CCP1CON&= 0xf0;
  4176  055D  30F0               	movlw	240
  4177  055E  0597               	andwf	23,f	;volatile
  4178                           
  4179                           ;main.c: 248: T2CON=0x04;
  4180  055F  3004               	movlw	4
  4181  0560  0092               	movwf	18	;volatile
  4182                           
  4183                           ;main.c: 249: PR2 = ucPulseFrequency;
  4184  0561  0839               	movf	pwm_start@ucPulseFrequency,w
  4185  0562  1683               	bsf	3,5	;RP0=1, select bank1
  4186  0563  0092               	movwf	18	;volatile
  4187                           
  4188                           ;main.c: 250: CCPR1L = ucPulseWidth;
  4189  0564  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0565  083A               	movf	pwm_start@ucPulseWidth,w
  4191  0566  0095               	movwf	21	;volatile
  4192                           
  4193                           ;main.c: 251: CCP1CON=0x00;
  4194  0567  0197               	clrf	23	;volatile
  4195                           
  4196                           ;main.c: 253: TRISB2=0;
  4197  0568  1683               	bsf	3,5	;RP0=1, select bank1
  4198  0569  300C               	movlw	12
  4199  056A  1106               	bcf	6,2
  4200                           
  4201                           ;main.c: 254: PBOD2 = 0;
  4202  056B  1703               	bsf	3,6	;RP1=1, select bank3
  4203  056C  1108               	bcf	8,2
  4204                           
  4205                           ;main.c: 256: CCP1CON|= 0x0c;
  4206  056D  1283               	bcf	3,5	;RP0=0, select bank0
  4207  056E  1303               	bcf	3,6	;RP1=0, select bank0
  4208  056F  0497               	iorwf	23,f	;volatile
  4209  0570  0008               	return
  4210  0571                     __end_of_pwm_start:	
  4211                           
  4212                           	psect	text1408
  4213  0013                     __ptext1408:	
  4214 ;; =============== function _initPB3 ends ============
  4215                           
  4216                           
  4217 ;; *************** function _ISR *****************
  4218 ;; Defined at:
  4219 ;;		line 651 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;		None               void
  4226 ;; Registers used:
  4227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 60/0
  4231 ;;		Unchanged: FFE00/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0
  4235 ;;      Temps:          0       4       0       0       0
  4236 ;;      Totals:         0       4       0       0       0
  4237 ;;Total ram usage:        4 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    2
  4240 ;; This function calls:
  4241 ;;		i1_setAD_ConvertFlag
  4242 ;;		_adc_get
  4243 ;;		_vPutSampleDataIntoTable
  4244 ;; This function is called by:
  4245 ;;		Interrupt level 1
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248  0013                     _ISR:	
  4249                           
  4250                           ;common.c: 652: static unsigned char ucTimer1sCnt = 0;
  4251                           ;common.c: 655: if(TMR1IF == 1)
  4252  0013  1C0C               	btfss	12,0
  4253  0014  2851               	goto	i1l3819
  4254  0015  3064               	movlw	100
  4255                           
  4256                           ;common.c: 656: {
  4257                           ;common.c: 657: TMR1IF = 0 ;
  4258  0016  100C               	bcf	12,0
  4259                           
  4260                           ;common.c: 658: timer.timer10msStopWatch++;
  4261  0017  0ACD               	incf	_timer,f
  4262                           
  4263                           ;common.c: 659: ucTimer1sCnt++;
  4264  0018  0AC5               	incf	ISR@ucTimer1sCnt,f
  4265                           
  4266                           ;common.c: 663: if(ucTimer1sCnt >= 100)
  4267  0019  0245               	subwf	ISR@ucTimer1sCnt,w
  4268  001A  1C03               	skipc
  4269  001B  2851               	goto	i1l3819
  4270                           
  4271                           ;common.c: 664: {
  4272                           ;common.c: 665: ucTimer1sCnt = 0;
  4273  001C  01C5               	clrf	ISR@ucTimer1sCnt
  4274                           
  4275                           ;common.c: 666: if(uiBigTimer > 0)
  4276  001D  083E               	movf	_uiBigTimer+1,w
  4277  001E  043D               	iorwf	_uiBigTimer,w
  4278  001F  1903               	skipnz
  4279  0020  2827               	goto	i1l1677
  4280                           
  4281                           ;common.c: 667: uiBigTimer--;
  4282  0021  3001               	movlw	1
  4283  0022  02BD               	subwf	_uiBigTimer,f
  4284  0023  3000               	movlw	0
  4285  0024  1C03               	skipc
  4286  0025  03BE               	decf	_uiBigTimer+1,f
  4287  0026  02BE               	subwf	_uiBigTimer+1,f
  4288  0027                     i1l1677:	
  4289                           
  4290                           ;common.c: 669: if(uiSmallTimer)
  4291  0027  0842               	movf	_uiSmallTimer+1,w
  4292  0028  0441               	iorwf	_uiSmallTimer,w
  4293  0029  1903               	skipnz
  4294  002A  2831               	goto	i1l1678
  4295                           
  4296                           ;common.c: 670: uiSmallTimer--;
  4297  002B  3001               	movlw	1
  4298  002C  02C1               	subwf	_uiSmallTimer,f
  4299  002D  3000               	movlw	0
  4300  002E  1C03               	skipc
  4301  002F  03C2               	decf	_uiSmallTimer+1,f
  4302  0030  02C2               	subwf	_uiSmallTimer+1,f
  4303  0031                     i1l1678:	
  4304                           
  4305                           ;common.c: 672: if(uiTwentySecondsTimer)
  4306  0031  1683               	bsf	3,5	;RP0=1, select bank1
  4307  0032  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4308  0033  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4309  0034  1903               	skipnz
  4310  0035  283C               	goto	i1l1679
  4311                           
  4312                           ;common.c: 673: uiTwentySecondsTimer--;
  4313  0036  3001               	movlw	1
  4314  0037  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  4315  0038  3000               	movlw	0
  4316  0039  1C03               	skipc
  4317  003A  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4318  003B  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4319  003C                     i1l1679:	
  4320                           
  4321                           ;common.c: 675: if(uiTwentyMinTimer)
  4322  003C  0823               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  4323  003D  0422               	iorwf	_uiTwentyMinTimer^(0+128),w
  4324  003E  1903               	skipnz
  4325  003F  2846               	goto	i1l1680
  4326                           
  4327                           ;common.c: 676: uiTwentyMinTimer--;
  4328  0040  3001               	movlw	1
  4329  0041  02A2               	subwf	_uiTwentyMinTimer^(0+128),f
  4330  0042  3000               	movlw	0
  4331  0043  1C03               	skipc
  4332  0044  03A3               	decf	(_uiTwentyMinTimer+1)^(0+128),f
  4333  0045  02A3               	subwf	(_uiTwentyMinTimer+1)^(0+128),f
  4334  0046                     i1l1680:	
  4335                           
  4336                           ;common.c: 678: if( uiOneHourTimer )
  4337  0046  1283               	bcf	3,5	;RP0=0, select bank0
  4338  0047  0840               	movf	_uiOneHourTimer+1,w
  4339  0048  043F               	iorwf	_uiOneHourTimer,w
  4340  0049  1903               	skipnz
  4341  004A  2851               	goto	i1l3819
  4342                           
  4343                           ;common.c: 679: uiOneHourTimer--;
  4344  004B  3001               	movlw	1
  4345  004C  02BF               	subwf	_uiOneHourTimer,f
  4346  004D  3000               	movlw	0
  4347  004E  1C03               	skipc
  4348  004F  03C0               	decf	_uiOneHourTimer+1,f
  4349  0050  02C0               	subwf	_uiOneHourTimer+1,f
  4350  0051                     i1l3819:	
  4351                           
  4352                           ;common.c: 680: }
  4353                           ;common.c: 681: }
  4354                           ;common.c: 683: if(ADIF)
  4355  0051  1D0D               	btfss	13,2
  4356  0052  286D               	goto	i1l1685
  4357  0053  3001               	movlw	1
  4358                           
  4359                           ;common.c: 684: {
  4360                           ;common.c: 686: ADIF=0;
  4361  0054  110D               	bcf	13,2
  4362                           
  4363                           ;common.c: 687: setAD_ConvertFlag(1);
  4364  0055  208B  118A         	fcall	i1_setAD_ConvertFlag
  4365                           
  4366                           ;common.c: 689: if(sampleChannelSelect == 2)
  4367  0057  0855               	movf	_sampleChannelSelect,w
  4368  0058  3A02               	xorlw	2
  4369  0059  1D03               	skipz
  4370  005A  2864               	goto	i1l3829
  4371                           
  4372                           ;common.c: 690: {
  4373                           ;common.c: 693: vPutSampleDataIntoTable(adc_get(),2);
  4374  005B  207A  118A         	fcall	_adc_get
  4375  005D  0871               	movf	?_adc_get+1,w
  4376  005E  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4377  005F  0870               	movf	?_adc_get,w
  4378  0060  00F6               	movwf	?_vPutSampleDataIntoTable
  4379  0061  3002               	movlw	2
  4380  0062  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4381  0063  286C               	goto	L12
  4382  0064                     i1l3829:	
  4383                           ;common.c: 697: }
  4384                           
  4385                           
  4386                           ;common.c: 698: else
  4387                           ;common.c: 699: {
  4388                           ;common.c: 703: vPutSampleDataIntoTable(adc_get(),1);
  4389  0064  207A  118A         	fcall	_adc_get
  4390  0066  0871               	movf	?_adc_get+1,w
  4391  0067  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4392  0068  0870               	movf	?_adc_get,w
  4393  0069  00F6               	movwf	?_vPutSampleDataIntoTable
  4394  006A  01F8               	clrf	?_vPutSampleDataIntoTable+2
  4395  006B  0AF8               	incf	?_vPutSampleDataIntoTable+2,f
  4396  006C                     L12:	
  4397  006C  208E               	fcall	_vPutSampleDataIntoTable
  4398  006D                     i1l1685:	
  4399  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4400  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4401  006F  0838               	movf	??_ISR+3,w
  4402  0070  00FF               	movwf	127
  4403  0071  0837               	movf	??_ISR+2,w
  4404  0072  008A               	movwf	10
  4405  0073  0836               	movf	??_ISR+1,w
  4406  0074  0084               	movwf	4
  4407  0075  0E35               	swapf	??_ISR^0,w
  4408  0076  0083               	movwf	3
  4409  0077  0EFE               	swapf	126,f
  4410  0078  0E7E               	swapf	126,w
  4411  0079  0009               	retfie
  4412  007A                     __end_of_ISR:	
  4413  007A                     __ptext1411:	
  4414 ;; =============== function i1_setAD_ConvertFlag ends ============
  4415                           
  4416                           
  4417 ;; *************** function _adc_get *****************
  4418 ;; Defined at:
  4419 ;;		line 142 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;  val             2    2[COMMON] unsigned int 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  2    0[COMMON] unsigned int 
  4426 ;; Registers used:
  4427 ;;		wreg
  4428 ;; Tracked objects:
  4429 ;;		On entry : 60/0
  4430 ;;		On exit  : 60/20
  4431 ;;		Unchanged: FFF9F/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4433 ;;      Params:         2       0       0       0       0
  4434 ;;      Locals:         2       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0
  4436 ;;      Totals:         4       0       0       0       0
  4437 ;;Total ram usage:        4 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_ISR
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445  007A                     _adc_get:	
  4446                           
  4447                           ;periph.c: 143: unsigned int val;
  4448                           ;periph.c: 144: val = (ADRESH<<8) | ADRESL;
  4449                           
  4450                           ; Regs used in _adc_get: [wreg]
  4451  007A  081E               	movf	30,w	;volatile
  4452  007B  00F3               	movwf	adc_get@val+1
  4453  007C  01F2               	clrf	adc_get@val
  4454  007D  1683               	bsf	3,5	;RP0=1, select bank1
  4455  007E  081E               	movf	30,w	;volatile
  4456  007F  04F2               	iorwf	adc_get@val,f
  4457                           
  4458                           ;periph.c: 146: val = val + ad_offset;
  4459  0080  0820               	movf	_ad_offset^(0+128),w
  4460  0081  07F2               	addwf	adc_get@val,f
  4461  0082  1803               	skipnc
  4462  0083  0AF3               	incf	adc_get@val+1,f
  4463  0084  0821               	movf	(_ad_offset+1)^(0+128),w
  4464  0085  07F3               	addwf	adc_get@val+1,f
  4465                           
  4466                           ;periph.c: 148: return val;
  4467  0086  0873               	movf	adc_get@val+1,w
  4468  0087  00F1               	movwf	?_adc_get+1
  4469  0088  0872               	movf	adc_get@val,w
  4470  0089  00F0               	movwf	?_adc_get
  4471  008A  0008               	return
  4472  008B                     __end_of_adc_get:	
  4473  008B                     __ptext1410:	
  4474 ;; =============== function _vPutSampleDataIntoTable ends ============
  4475                           
  4476                           
  4477 ;; *************** function i1_setAD_ConvertFlag *****************
  4478 ;; Defined at:
  4479 ;;		line 387 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  setAD_Conver    1    wreg     unsigned char 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;		None               void
  4486 ;; Registers used:
  4487 ;;		wreg
  4488 ;; Tracked objects:
  4489 ;;		On entry : 60/0
  4490 ;;		On exit  : 60/0
  4491 ;;		Unchanged: FFF9F/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4493 ;;      Params:         0       0       0       0       0
  4494 ;;      Locals:         1       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0
  4496 ;;      Totals:         1       0       0       0       0
  4497 ;;Total ram usage:        1 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_ISR
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505  008B                     i1_setAD_ConvertFlag:	
  4506                           
  4507                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4508                           ;i1setAD_ConvertFlag@flag stored from wreg
  4509  008B  00F0               	movwf	i1setAD_ConvertFlag@flag
  4510                           
  4511                           ;common.c: 388: adc_convert_flag = flag;
  4512  008C  00C6               	movwf	_adc_convert_flag
  4513  008D  0008               	return
  4514  008E                     __end_ofi1_setAD_ConvertFlag:	
  4515  008E                     __ptext1409:	
  4516 ;; =============== function _ISR ends ============
  4517                           
  4518                           
  4519 ;; *************** function _vPutSampleDataIntoTable *****************
  4520 ;; Defined at:
  4521 ;;		line 165 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4524 ;;  channel         1    8[COMMON] unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  uiDeviationV    2   19[BANK0 ] unsigned int 
  4527 ;;  uiAbstractVa    2   15[BANK0 ] unsigned int 
  4528 ;;  i               2   17[BANK0 ] int 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;		None               void
  4531 ;; Registers used:
  4532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 60/20
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: FFE00/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         3       0       0       0       0
  4539 ;;      Locals:         0       6       0       0       0
  4540 ;;      Temps:          2       0       0       0       0
  4541 ;;      Totals:         5       6       0       0       0
  4542 ;;Total ram usage:       11 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    1
  4545 ;; This function calls:
  4546 ;;		_Filter
  4547 ;;		_getWaitResetFlag
  4548 ;;		_setPWM_Width
  4549 ;; This function is called by:
  4550 ;;		_ISR
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553  008E                     _vPutSampleDataIntoTable:	
  4554                           
  4555                           ;common.c: 167: static unsigned char ucCh12Length = 0;
  4556                           ;common.c: 169: static unsigned char ucCh13Length = 0;
  4557                           ;common.c: 171: static unsigned char ucChannelFourteenthLength = 0;
  4558                           ;common.c: 172: static unsigned int uiCalWidthArrayNew = 0;
  4559                           ;common.c: 173: static unsigned int uiCalWidthArrayOld = 0;
  4560                           ;common.c: 180: static unsigned char ucInitFlag = 0;
  4561                           ;common.c: 182: if(channel == 2)
  4562                           
  4563                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4564  008E  0878               	movf	vPutSampleDataIntoTable@channel,w
  4565  008F  3A02               	xorlw	2
  4566  0090  1D03               	skipz
  4567  0091  2921               	goto	i1l3741
  4568                           
  4569                           ;common.c: 183: {
  4570                           ;common.c: 184: if(ucCh12Length < 3)
  4571  0092  3003               	movlw	3
  4572  0093  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4573  0094  1803               	skipnc
  4574  0095  291B               	goto	i1l3737
  4575                           
  4576                           ;common.c: 185: {
  4577                           ;common.c: 186: uiSampleCh12[ucCh12Length] = uiSampleData;
  4578  0096  1003               	clrc
  4579  0097  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4580  0098  3EAE               	addlw	_uiSampleCh12& (0+255)
  4581  0099  21FB  118A         	fcall	PL2	;call to abstracted procedure
  4582                           
  4583                           ;common.c: 188: ucCh12Length++;
  4584  009B  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4585                           
  4586                           ;common.c: 190: if( 3 == ucCh12Length )
  4587  009C  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4588  009D  3A03               	xorlw	3
  4589  009E  1D03               	skipz
  4590  009F  0008               	return
  4591  00A0  30AE               	movlw	_uiSampleCh12& (0+255)
  4592                           
  4593                           ;common.c: 191: {
  4594                           ;common.c: 192: ucCh12Length = 0;
  4595  00A1  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4596                           
  4597                           ;common.c: 196: static unsigned char bInitArrayFlag = 0;
  4598                           ;common.c: 198: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4599                           ;common.c: 200: static unsigned char uiInitWidth = 75;
  4600                           ;common.c: 202: uiCalWidthArrayNew = Filter(uiSampleCh12);
  4601  00A2  2172  118A         	fcall	_Filter
  4602  00A4  0871               	movf	?_Filter+1,w
  4603  00A5  00FC               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1
  4604  00A6  0870               	movf	?_Filter,w
  4605  00A7  00FB               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew
  4606                           
  4607                           ;common.c: 217: if( uiCalWidthArrayNew >= uiCalWidthArrayOld)
  4608  00A8  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4609  00A9  027C               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4610  00AA  1D03               	skipz
  4611  00AB  28AE               	goto	u123_25
  4612  00AC  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4613  00AD  027B               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4614  00AE                     u123_25:	
  4615  00AE  1C03               	skipc
  4616  00AF  28C3               	goto	i1l3703
  4617                           
  4618                           ;common.c: 218: {
  4619                           ;common.c: 219: uiAbstractValue = uiCalWidthArrayNew - uiCalWidthArrayOld;
  4620  00B0  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4621  00B1  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4622  00B2  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4623  00B3  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4624  00B4  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4625  00B5  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4626  00B6  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4627  00B7  1C03               	skipc
  4628  00B8  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4629  00B9  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4630                           
  4631                           ;common.c: 220: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) + (uiAbs
      +                          tractValue<<1);
  4632  00BA  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4633  00BB  2203  118A         	fcall	PL3	;call to abstracted procedure
  4634  00BD  07B3               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4635  00BE  1803               	skipnc
  4636  00BF  0AB4               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4637  00C0  087A               	movf	??_vPutSampleDataIntoTable+1,w
  4638  00C1  07B4               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4639                           
  4640                           ;common.c: 222: }
  4641  00C2  28D4               	goto	i1l3707
  4642  00C3                     i1l3703:	
  4643                           
  4644                           ;common.c: 223: else
  4645                           ;common.c: 224: {
  4646                           ;common.c: 225: uiAbstractValue = uiCalWidthArrayOld - uiCalWidthArrayNew;
  4647  00C3  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4648  00C4  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4649  00C5  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4650  00C6  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4651  00C7  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4652  00C8  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4653  00C9  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4654  00CA  1C03               	skipc
  4655  00CB  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4656  00CC  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4657                           
  4658                           ;common.c: 226: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) - (uiAbs
      +                          tractValue<<1);
  4659  00CD  2203  118A         	fcall	PL3	;call to abstracted procedure
  4660  00CF  02B3               	subwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4661  00D0  087A               	movf	??_vPutSampleDataIntoTable+1,w
  4662  00D1  1C03               	skipc
  4663  00D2  03B4               	decf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4664  00D3  02B4               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4665  00D4                     i1l3707:	
  4666                           
  4667                           ;common.c: 229: }
  4668                           ;common.c: 236: if(uiCalWidthCnt>400)
  4669  00D4  3001               	movlw	1
  4670  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  4671  00D6  022D               	subwf	(vPutSampleDataIntoTable@uiCalWidthCnt+1)^(0+128),w
  4672  00D7  3091               	movlw	145
  4673  00D8  1903               	skipnz
  4674  00D9  022C               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt^(0+128),w
  4675  00DA  1C03               	skipc
  4676  00DB  28E1               	goto	i1l1546
  4677                           
  4678                           ;common.c: 237: uiDeviationValue =400;
  4679  00DC  3090               	movlw	144
  4680  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  4681  00DE  00B3               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4682  00DF  3001               	movlw	1
  4683  00E0  00B4               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4684  00E1                     i1l1546:	
  4685                           
  4686                           ;common.c: 244: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4687  00E1  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4688  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4689  00E3  00C4               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1
  4690  00E4  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4691  00E5  00C3               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld
  4692                           
  4693                           ;common.c: 249: if(uiDeviationValue > (400))
  4694  00E6  3001               	movlw	1
  4695  00E7  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4696  00E8  3091               	movlw	145
  4697  00E9  1903               	skipnz
  4698  00EA  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4699                           
  4700                           ;common.c: 250: {
  4701                           ;common.c: 252: if(uiDeviationValue <= (400+5))
  4702  00EB  3001               	movlw	1
  4703  00EC  1C03               	skipc
  4704  00ED  28F6               	goto	L14
  4705  00EE  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4706  00EF  3096               	movlw	150
  4707  00F0  1903               	skipnz
  4708  00F1  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4709  00F2  1803               	skipnc
  4710                           
  4711                           ;common.c: 255: else
  4712                           ;common.c: 256: {uiInitWidth=uiInitWidth+2;
  4713                           
  4714                           ;common.c: 254: }
  4715                           
  4716                           ;common.c: 253: {uiInitWidth++;
  4717  00F3  0AD6               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4718  00F4  0AD6               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4719  00F5  2907               	goto	i1l3725
  4720  00F6                     L14:	
  4721                           ;common.c: 260: else if(uiDeviationValue < (400))
  4722                           
  4723  00F6  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4724  00F7  3090               	movlw	144
  4725  00F8  1903               	skipnz
  4726  00F9  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4727  00FA  1803               	skipnc
  4728  00FB  2907               	goto	i1l3725
  4729                           
  4730                           ;common.c: 261: {
  4731                           ;common.c: 264: if(uiDeviationValue >= (400+5))
  4732  00FC  3001               	movlw	1
  4733  00FD  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4734  00FE  3095               	movlw	149
  4735  00FF  1903               	skipnz
  4736  0100  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4737  0101  1C03               	skipc
  4738  0102  2905               	goto	i1l3723
  4739                           
  4740                           ;common.c: 265: {uiInitWidth--;
  4741  0103  03D6               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4742                           
  4743                           ;common.c: 266: }
  4744  0104  2907               	goto	i1l3725
  4745  0105                     i1l3723:	
  4746                           
  4747                           ;common.c: 267: else
  4748                           ;common.c: 268: {uiInitWidth=uiInitWidth-2;
  4749  0105  30FE               	movlw	254
  4750  0106  07D6               	addwf	vPutSampleDataIntoTable@uiInitWidth,f
  4751  0107                     i1l3725:	
  4752                           
  4753                           ;common.c: 276: if(uiInitWidth > 249)
  4754  0107  30FA               	movlw	250
  4755  0108  0256               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4756  0109  1C03               	skipc
  4757  010A  290D               	goto	i1l1555
  4758                           
  4759                           ;common.c: 277: uiInitWidth = 249;
  4760  010B  30F9               	movlw	249
  4761  010C  00D6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4762  010D                     i1l1555:	
  4763                           
  4764                           ;common.c: 279: if(uiInitWidth < 75)
  4765  010D  304B               	movlw	75
  4766  010E  0256               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4767  010F  1803               	skipnc
  4768  0110  2913               	goto	i1l3731
  4769                           
  4770                           ;common.c: 280: uiInitWidth = 75;
  4771  0111  304B               	movlw	75
  4772  0112  00D6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4773  0113                     i1l3731:	
  4774                           
  4775                           ;common.c: 61: return bWaitResetFlag;
  4776                           
  4777                           ; Regs used in _getWaitResetFlag: [wreg]
  4778                           
  4779                           ;common.c: 284: if( 1 == getWaitResetFlag())
  4780  0113  084B               	movf	_bWaitResetFlag,w
  4781  0114  3A01               	xorlw	1
  4782  0115  1D03               	skipz
  4783  0116  2919               	goto	i1l3735
  4784                           
  4785                           ;common.c: 285: {
  4786                           ;common.c: 287: uiInitWidth = 150;
  4787  0117  3096               	movlw	150
  4788  0118  00D6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4789  0119                     i1l3735:	
  4790                           
  4791                           ;common.c: 288: }
  4792                           ;common.c: 289: setPWM_Width(uiInitWidth);
  4793  0119  0856               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4794  011A  29F8               	ljmp	_setPWM_Width
  4795  011B                     i1l3737:	
  4796                           
  4797                           ;common.c: 294: else
  4798                           ;common.c: 295: {
  4799                           ;common.c: 296: ucCh12Length = 0;
  4800  011B  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4801                           
  4802                           ;common.c: 298: uiSampleCh12[ucCh12Length] = uiSampleData;
  4803  011C  1003               	clrc
  4804  011D  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4805  011E  3EAE               	addlw	_uiSampleCh12& (0+255)
  4806  011F  21FB               	fcall	PL2	;call to abstracted procedure
  4807  0120  0008               	return
  4808  0121                     i1l3741:	
  4809                           
  4810                           ;common.c: 301: else if(channel == 1)
  4811  0121  0B78               	decfsz	vPutSampleDataIntoTable@channel,w
  4812  0122  2934               	goto	i1l3753
  4813                           
  4814                           ;common.c: 302: {
  4815                           ;common.c: 303: if(ucCh13Length < 3)
  4816  0123  3003               	movlw	3
  4817  0124  1283               	bcf	3,5	;RP0=0, select bank0
  4818  0125  0253               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4819  0126  1803               	skipnc
  4820  0127  292E               	goto	i1l3749
  4821                           
  4822                           ;common.c: 304: {
  4823                           ;common.c: 305: uiSampleCh13[ucCh13Length] = uiSampleData;
  4824  0128  1003               	clrc
  4825  0129  0D53               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4826  012A  3EB4               	addlw	_uiSampleCh13& (0+255)
  4827  012B  21FB               	fcall	PL2	;call to abstracted procedure
  4828                           
  4829                           ;common.c: 307: ucCh13Length++;
  4830  012C  0AD3               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4831                           
  4832                           ;common.c: 308: }
  4833  012D  0008               	return
  4834  012E                     i1l3749:	
  4835                           
  4836                           ;common.c: 309: else
  4837                           ;common.c: 310: {
  4838                           ;common.c: 311: ucCh13Length = 0;
  4839  012E  01D3               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4840                           
  4841                           ;common.c: 313: uiSampleCh13[ucCh13Length] = uiSampleData;
  4842  012F  1003               	clrc
  4843  0130  0D53               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4844  0131  3EB4               	addlw	_uiSampleCh13& (0+255)
  4845  0132  21FB               	fcall	PL2	;call to abstracted procedure
  4846  0133  0008               	return
  4847  0134                     i1l3753:	
  4848                           
  4849                           ;common.c: 316: else if(channel == 14)
  4850  0134  0878               	movf	vPutSampleDataIntoTable@channel,w
  4851  0135  3A0E               	xorlw	14
  4852  0136  1D03               	skipz
  4853  0137  2949               	goto	i1l3765
  4854                           
  4855                           ;common.c: 317: {
  4856                           ;common.c: 318: if(ucChannelFourteenthLength < 3)
  4857  0138  3003               	movlw	3
  4858  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4859  013A  0254               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4860  013B  1803               	skipnc
  4861  013C  2943               	goto	i1l3761
  4862                           
  4863                           ;common.c: 319: {
  4864                           ;common.c: 320: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4865  013D  1003               	clrc
  4866  013E  0D54               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4867  013F  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4868  0140  21FB               	fcall	PL2	;call to abstracted procedure
  4869                           
  4870                           ;common.c: 322: ucChannelFourteenthLength++;
  4871  0141  0AD4               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4872                           
  4873                           ;common.c: 323: }
  4874  0142  0008               	return
  4875  0143                     i1l3761:	
  4876                           
  4877                           ;common.c: 324: else
  4878                           ;common.c: 325: {
  4879                           ;common.c: 326: ucChannelFourteenthLength = 0;
  4880  0143  01D4               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4881                           
  4882                           ;common.c: 328: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4883  0144  1003               	clrc
  4884  0145  0D54               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4885  0146  3EB4               	addlw	_uiSampleCh13& (0+255)
  4886  0147  21FB               	fcall	PL2	;call to abstracted procedure
  4887  0148  0008               	return
  4888  0149                     i1l3765:	
  4889                           
  4890                           ;common.c: 331: else
  4891                           ;common.c: 332: {
  4892                           ;common.c: 333: ucCh12Length = 0;
  4893  0149  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4894                           
  4895                           ;common.c: 335: ucCh13Length = 0;
  4896  014A  1283               	bcf	3,5	;RP0=0, select bank0
  4897  014B  01D3               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4898                           
  4899                           ;common.c: 337: ucChannelFourteenthLength = 0;
  4900  014C  01D4               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4901                           
  4902                           ;common.c: 339: for(int i = 0;i < 3; i++)
  4903  014D  01B1               	clrf	vPutSampleDataIntoTable@i
  4904  014E  01B2               	clrf	vPutSampleDataIntoTable@i+1
  4905  014F                     i1l3771:	
  4906                           
  4907                           ;common.c: 340: {
  4908                           ;common.c: 341: uiSampleCh12[i] = 0;
  4909  014F  1283               	bcf	3,5	;RP0=0, select bank0
  4910  0150  1303               	bcf	3,6	;RP1=0, select bank0
  4911  0151  1003               	clrc
  4912  0152  0D31               	rlf	vPutSampleDataIntoTable@i,w
  4913  0153  3EAE               	addlw	_uiSampleCh12& (0+255)
  4914  0154  0084               	movwf	4
  4915  0155  1383               	bcf	3,7	;select IRP bank1
  4916                           
  4917                           ;common.c: 343: uiSampleCh13[i] = 0;
  4918  0156  222E  118A         	fcall	PL11	;call to abstracted procedure
  4919  0158  3EB4               	addlw	_uiSampleCh13& (0+255)
  4920  0159  0084               	movwf	4
  4921                           
  4922                           ;common.c: 345: uiSampleChannelFourteenth[i] = 0;
  4923  015A  222E  118A         	fcall	PL11	;call to abstracted procedure
  4924  015C  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4925  015D  0084               	movwf	4
  4926  015E  0180               	clrf	0
  4927  015F  0A84               	incf	4,f
  4928  0160  0180               	clrf	0
  4929  0161  0AB1               	incf	vPutSampleDataIntoTable@i,f
  4930  0162  1903               	skipnz
  4931  0163  0AB2               	incf	vPutSampleDataIntoTable@i+1,f
  4932  0164  0832               	movf	vPutSampleDataIntoTable@i+1,w
  4933  0165  3A80               	xorlw	128
  4934  0166  00FF               	movwf	127
  4935  0167  3080               	movlw	128
  4936  0168  027F               	subwf	127,w
  4937  0169  1D03               	skipz
  4938  016A  296D               	goto	u136_25
  4939  016B  3003               	movlw	3
  4940  016C  0231               	subwf	vPutSampleDataIntoTable@i,w
  4941  016D                     u136_25:	
  4942  016D  1803               	btfsc	3,0
  4943  016E  0008               	return
  4944  016F  294F               	goto	i1l3771
  4945  0170                     __end_of_vPutSampleDataIntoTable:	
  4946  0170                     __ptext1414:	
  4947 ;; =============== function _setPWM_Width ends ============
  4948                           
  4949                           
  4950 ;; *************** function _getWaitResetFlag *****************
  4951 ;; Defined at:
  4952 ;;		line 60 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      unsigned char 
  4959 ;; Registers used:
  4960 ;;		wreg
  4961 ;; Tracked objects:
  4962 ;;		On entry : 160/0
  4963 ;;		On exit  : 160/0
  4964 ;;		Unchanged: FFE9F/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4966 ;;      Params:         0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_vPutSampleDataIntoTable
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978  0170                     _getWaitResetFlag:	
  4979                           
  4980                           ;common.c: 61: return bWaitResetFlag;
  4981                           
  4982                           ; Regs used in _getWaitResetFlag: [wreg]
  4983  0170  084B               	movf	_bWaitResetFlag,w
  4984  0171  0008               	return
  4985  0172                     __end_of_getWaitResetFlag:	
  4986  0172                     __ptext1412:	
  4987 ;; =============== function _adc_get ends ============
  4988                           
  4989                           
  4990 ;; *************** function _Filter *****************
  4991 ;; Defined at:
  4992 ;;		line 117 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  tmpValue        1    wreg     PTR unsigned int 
  4995 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  tmpValue        1    4[BANK0 ] PTR unsigned int 
  4998 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4999 ;;  cir             2   11[BANK0 ] int 
  5000 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  5001 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  5002 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  5003 ;;  i               1   14[BANK0 ] unsigned char 
  5004 ;;  j               1   13[BANK0 ] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  2    0[COMMON] unsigned int 
  5007 ;; Registers used:
  5008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5009 ;; Tracked objects:
  5010 ;;		On entry : 160/20
  5011 ;;		On exit  : 160/0
  5012 ;;		Unchanged: FFE00/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5014 ;;      Params:         2       0       0       0       0
  5015 ;;      Locals:         0      15       0       0       0
  5016 ;;      Temps:          4       0       0       0       0
  5017 ;;      Totals:         6      15       0       0       0
  5018 ;;Total ram usage:       21 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_vPutSampleDataIntoTable
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026  0172                     _Filter:	
  5027                           
  5028                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5029                           ;Filter@tmpValue stored from wreg
  5030  0172  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0173  00A4               	movwf	Filter@tmpValue
  5032  0174  01AD               	clrf	Filter@j
  5033                           
  5034                           ;common.c: 121: unsigned int filter_temp = 0, filter_sum = 0;
  5035  0175  01A0               	clrf	Filter@filter_temp
  5036  0176  01A1               	clrf	Filter@filter_temp+1
  5037  0177  01A2               	clrf	Filter@filter_sum
  5038  0178  01A3               	clrf	Filter@filter_sum+1
  5039                           
  5040                           ;common.c: 123: unsigned int filter_buf[3];
  5041                           ;common.c: 125: for(int cir = 0;cir < 3; cir++)
  5042  0179  01AB               	clrf	Filter@cir
  5043  017A  01AC               	clrf	Filter@cir+1
  5044  017B                     i1l3637:	
  5045                           
  5046                           ;common.c: 126: filter_buf[cir] = *tmpValue++;
  5047  017B  1283               	bcf	3,5	;RP0=0, select bank0
  5048  017C  1303               	bcf	3,6	;RP1=0, select bank0
  5049  017D  0824               	movf	Filter@tmpValue,w
  5050  017E  2218  118A         	fcall	PL4	;call to abstracted procedure
  5051  0180  1003               	clrc
  5052  0181  0D2B               	rlf	Filter@cir,w
  5053  0182  2220  118A         	fcall	PL8	;call to abstracted procedure
  5054  0184  0AA4               	incf	Filter@tmpValue,f
  5055  0185  0AA4               	incf	Filter@tmpValue,f
  5056  0186  0AAB               	incf	Filter@cir,f
  5057  0187  1903               	skipnz
  5058  0188  0AAC               	incf	Filter@cir+1,f
  5059  0189  082C               	movf	Filter@cir+1,w
  5060  018A  3A80               	xorlw	128
  5061  018B  00FF               	movwf	127
  5062  018C  3080               	movlw	128
  5063  018D  027F               	subwf	127,w
  5064  018E  1D03               	skipz
  5065  018F  2992               	goto	u115_25
  5066  0190  3003               	movlw	3
  5067  0191  022B               	subwf	Filter@cir,w
  5068  0192                     u115_25:	
  5069  0192  1C03               	skipc
  5070  0193  297B               	goto	i1l3637
  5071                           
  5072                           ;common.c: 130: for(j = 0; j < 3 - 1; j++)
  5073  0194  1283               	bcf	3,5	;RP0=0, select bank0
  5074  0195  1303               	bcf	3,6	;RP1=0, select bank0
  5075  0196  01AD               	clrf	Filter@j
  5076                           
  5077                           ;common.c: 131: {
  5078                           ;common.c: 132: for(i = 0; i < 3 - 1 - j; i++)
  5079  0197  01AE               	clrf	Filter@i
  5080  0198                     i1l3659:	
  5081  0198  01F3               	clrf	??_Filter+1
  5082  0199  082D               	movf	Filter@j,w
  5083  019A  3C02               	sublw	2
  5084  019B  00F2               	movwf	??_Filter
  5085  019C  1C03               	skipc
  5086  019D  03F3               	decf	??_Filter+1,f
  5087  019E  0873               	movf	??_Filter+1,w
  5088  019F  3A80               	xorlw	128
  5089  01A0  3C80               	sublw	128
  5090  01A1  1D03               	skipz
  5091  01A2  29A5               	goto	u117_25
  5092  01A3  0872               	movf	??_Filter,w
  5093  01A4  022E               	subwf	Filter@i,w
  5094  01A5                     u117_25:	
  5095  01A5  1803               	btfsc	3,0
  5096  01A6  29DA               	goto	i1l3661
  5097                           
  5098                           ;common.c: 133: {
  5099                           ;common.c: 134: if(filter_buf[i] > filter_buf[i + 1])
  5100  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  5101  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  5102  01A9  1003               	clrc
  5103  01AA  0D2E               	rlf	Filter@i,w
  5104  01AB  3E25               	addlw	Filter@filter_buf& (0+255)
  5105  01AC  2218  118A         	fcall	PL4	;call to abstracted procedure
  5106  01AE  2228  118A         	fcall	PL10	;call to abstracted procedure
  5107  01B0  0800               	movf	0,w
  5108  01B1  00F4               	movwf	??_Filter+2
  5109  01B2  0A84               	incf	4,f
  5110  01B3  0800               	movf	0,w
  5111  01B4  00F5               	movwf	??_Filter+3
  5112  01B5  0873               	movf	??_Filter+1,w
  5113  01B6  0275               	subwf	??_Filter+3,w
  5114  01B7  1D03               	skipz
  5115  01B8  29BB               	goto	u116_25
  5116  01B9  0872               	movf	??_Filter,w
  5117  01BA  0274               	subwf	??_Filter+2,w
  5118  01BB                     u116_25:	
  5119  01BB  1803               	skipnc
  5120  01BC  29D8               	goto	i1l3657
  5121                           
  5122                           ;common.c: 135: {
  5123                           ;common.c: 137: filter_temp = filter_buf[i];
  5124  01BD  1003               	clrc
  5125  01BE  0D2E               	rlf	Filter@i,w
  5126  01BF  3E25               	addlw	Filter@filter_buf& (0+255)
  5127  01C0  0084               	movwf	4
  5128  01C1  0800               	movf	0,w
  5129  01C2  00A0               	movwf	Filter@filter_temp
  5130  01C3  0A84               	incf	4,f
  5131  01C4  0800               	movf	0,w
  5132  01C5  00A1               	movwf	Filter@filter_temp+1
  5133                           
  5134                           ;common.c: 139: filter_buf[i] = filter_buf[i + 1];
  5135  01C6  2228  118A         	fcall	PL10	;call to abstracted procedure
  5136  01C8  0800               	movf	0,w
  5137  01C9  00F2               	movwf	??_Filter
  5138  01CA  0A84               	incf	4,f
  5139  01CB  0800               	movf	0,w
  5140  01CC  00F3               	movwf	??_Filter+1
  5141  01CD  1003               	clrc
  5142  01CE  0D2E               	rlf	Filter@i,w
  5143  01CF  2220  118A         	fcall	PL8	;call to abstracted procedure
  5144                           
  5145                           ;common.c: 141: filter_buf[i + 1] = filter_temp;
  5146  01D1  2228  118A         	fcall	PL10	;call to abstracted procedure
  5147  01D3  0820               	movf	Filter@filter_temp,w
  5148  01D4  0080               	movwf	0
  5149  01D5  0A84               	incf	4,f
  5150  01D6  0821               	movf	Filter@filter_temp+1,w
  5151  01D7  0080               	movwf	0
  5152  01D8                     i1l3657:	
  5153  01D8  0AAE               	incf	Filter@i,f
  5154  01D9  2998               	goto	i1l3659
  5155  01DA                     i1l3661:	
  5156  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  5157  01DB  3002               	movlw	2
  5158  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  5159  01DD  0AAD               	incf	Filter@j,f
  5160  01DE  022D               	subwf	Filter@j,w
  5161                           
  5162                           ;common.c: 142: }
  5163                           ;common.c: 143: }
  5164                           ;common.c: 144: }
  5165                           ;common.c: 146: for(i = 1; i < 3 - 1; i++)
  5166  01DF  01AE               	clrf	Filter@i
  5167  01E0  1C03               	skipc
  5168  01E1  2998               	goto	i1l3659
  5169  01E2  0AAE               	incf	Filter@i,f
  5170                           
  5171                           ;common.c: 147: {
  5172                           ;common.c: 148: filter_sum += filter_buf[i];
  5173  01E3  1003               	clrc
  5174  01E4                     L15:	
  5175  01E4  0D2E               	rlf	Filter@i,w
  5176  01E5  3E25               	addlw	Filter@filter_buf& (0+255)
  5177  01E6  2218  118A         	fcall	PL4	;call to abstracted procedure
  5178  01E8  0872               	movf	??_Filter,w
  5179  01E9  07A2               	addwf	Filter@filter_sum,f
  5180  01EA  1803               	skipnc
  5181  01EB  0AA3               	incf	Filter@filter_sum+1,f
  5182  01EC  0873               	movf	??_Filter+1,w
  5183  01ED  07A3               	addwf	Filter@filter_sum+1,f
  5184  01EE  3002               	movlw	2
  5185  01EF  0AAE               	incf	Filter@i,f
  5186  01F0  022E               	subwf	Filter@i,w
  5187  01F1  1C03               	skipc
  5188  01F2  29E4               	goto	L15
  5189                           
  5190                           ;common.c: 149: }
  5191                           ;common.c: 153: return (filter_sum );
  5192  01F3  0823               	movf	Filter@filter_sum+1,w
  5193  01F4  00F1               	movwf	?_Filter+1
  5194  01F5  0822               	movf	Filter@filter_sum,w
  5195  01F6  00F0               	movwf	?_Filter
  5196  01F7  0008               	return
  5197  01F8                     __end_of_Filter:	
  5198  01F8                     __ptext1413:	
  5199 ;; =============== function _Filter ends ============
  5200                           
  5201                           
  5202 ;; *************** function _setPWM_Width *****************
  5203 ;; Defined at:
  5204 ;;		line 65 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  ucWidth         1    wreg     unsigned char 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  ucWidth         1    0[COMMON] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;		None               void
  5211 ;; Registers used:
  5212 ;;		wreg
  5213 ;; Tracked objects:
  5214 ;;		On entry : 160/0
  5215 ;;		On exit  : 160/0
  5216 ;;		Unchanged: FFE9F/0
  5217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5218 ;;      Params:         0       0       0       0       0
  5219 ;;      Locals:         1       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0
  5221 ;;      Totals:         1       0       0       0       0
  5222 ;;Total ram usage:        1 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_vPutSampleDataIntoTable
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230  01F8                     _setPWM_Width:	
  5231                           
  5232                           ; Regs used in _setPWM_Width: [wreg]
  5233                           ;setPWM_Width@ucWidth stored from wreg
  5234  01F8  00F0               	movwf	setPWM_Width@ucWidth
  5235                           
  5236                           ;common.c: 71: ucOldWidth = ucWidth;
  5237  01F9  0095               	movwf	21	;volatile
  5238  01FA  0008               	return
  5239  01FB                     __end_of_setPWM_Width:	
  5240  01FB                     PL2:	
  5241  01FB  0084               	movwf	4
  5242  01FC  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5243  01FD  1383               	bcf	3,7	;select IRP bank1
  5244  01FE  0080               	movwf	0
  5245  01FF  0A84               	incf	4,f
  5246  0200  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5247  0201  0080               	movwf	0
  5248  0202  0008               	return
  5249  0203                     PL3:	
  5250  0203  00B4               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  5251  0204  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  5252  0205  00B3               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  5253  0206  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  5254  0207  07B3               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  5255  0208  1803               	skipnc
  5256  0209  0AB4               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5257  020A  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  5258  020B  07B4               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5259  020C  1003               	clrc
  5260  020D  0CB4               	rrf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5261  020E  0CB3               	rrf	vPutSampleDataIntoTable@uiDeviationValue,f
  5262  020F  0830               	movf	vPutSampleDataIntoTable@uiAbstractValue+1,w
  5263  0210  00FA               	movwf	??_vPutSampleDataIntoTable+1
  5264  0211  082F               	movf	vPutSampleDataIntoTable@uiAbstractValue,w
  5265  0212  00F9               	movwf	??_vPutSampleDataIntoTable
  5266  0213  1003               	clrc
  5267  0214  0DF9               	rlf	??_vPutSampleDataIntoTable,f
  5268  0215  0DFA               	rlf	??_vPutSampleDataIntoTable+1,f
  5269  0216  0879               	movf	??_vPutSampleDataIntoTable,w
  5270  0217  0008               	return
  5271  0218                     PL4:	
  5272  0218  0084               	movwf	4
  5273  0219  1383               	bcf	3,7	;select IRP bank0
  5274  021A  0800               	movf	0,w
  5275  021B  00F2               	movwf	??_Filter
  5276  021C  0A84               	incf	4,f
  5277  021D  0800               	movf	0,w
  5278  021E  00F3               	movwf	??_Filter+1
  5279  021F  0008               	return
  5280  0220                     PL8:	
  5281  0220  3E25               	addlw	Filter@filter_buf& (0+255)
  5282  0221  0084               	movwf	4
  5283  0222  0872               	movf	??_Filter,w
  5284  0223  0080               	movwf	0
  5285  0224  0A84               	incf	4,f
  5286  0225  0873               	movf	??_Filter+1,w
  5287  0226  0080               	movwf	0
  5288  0227  0008               	return
  5289  0228                     PL10:	
  5290  0228  1003               	clrc
  5291  0229  0D2E               	rlf	Filter@i,w
  5292  022A  3E02               	addlw	2
  5293  022B  3E25               	addlw	Filter@filter_buf& (0+255)
  5294  022C  0084               	movwf	4
  5295  022D  0008               	return
  5296  022E                     PL11:	
  5297  022E  0180               	clrf	0
  5298  022F  0A84               	incf	4,f
  5299  0230  0180               	clrf	0
  5300  0231  1003               	clrc
  5301  0232  0D31               	rlf	vPutSampleDataIntoTable@i,w
  5302  0233  0008               	return
  5303                           
  5304                           	psect	intentry
  5305  0004                     __pintentry:	
  5306                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5307                           
  5308  0004                     interrupt_function:	
  5309  007E                     saved_w	set	btemp
  5310  0004  00FE               	movwf	btemp
  5311  0005  0E03               	swapf	3,w
  5312  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5313  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5314  0008  00B5               	movwf	??_ISR
  5315  0009  0804               	movf	4,w
  5316  000A  00B6               	movwf	??_ISR+1
  5317  000B  080A               	movf	10,w
  5318  000C  00B7               	movwf	??_ISR+2
  5319  000D  087F               	movf	btemp+1,w
  5320  000E  00B8               	movwf	??_ISR+3
  5321  000F  118A  2813         	ljmp	_ISR
  5322                           
  5323                           	psect	text1415
  5324  0000                     __ptext1415:	
  5325 ;; =============== function _getWaitResetFlag ends ============
  5326                           
  5327  007E                     btemp	set	126	;btemp
  5328  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 20 14:10:56 2019

                                  ??_clock_config 0039                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 0039                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l700 0522  
                                             l710 052A                                               l705 0508  
                                             l721 0000                                               l730 0621  
                                             l715 0000                                               l724 0000  
                                             l718 0000                                               l742 03E2  
                                             l727 0000                                               l736 0000  
                                             l690 051A                                               l685 04ED  
                                             l695 04FD                                               _GIE 005F  
                                             _PB0 0030                                               _PB1 0031  
                                             _PB2 0032                                               _PB3 0033  
                                             _PR2 0092                                               _ISR 0013  
                                             _key 01E0                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 003B  
                                            ?_ISR 0070                              ??_startOneHoursTimer 003B  
                              __size_of_AD_Sample 0014                                              l1505 0000  
                                            l2332 0000                                              l1621 0000  
                                            l4101 0000                                              l1630 0000  
                                            l2326 0000                                              l4031 0000  
                                            l4103 0000                                              l2343 0000  
                                            l4111 0000                                              l1624 0000  
                                            l4033 0000                                              l4041 0000  
                                            l4113 0000                                              l4105 0000  
                                            l4121 0000                                              l4035 0000  
                                            l4043 0000                                              l4051 0000  
                                            l1627 0000                                              l4107 0000  
                                            l4115 0000                                              l4123 04D6  
                                            l4203 0000                                              l4211 0000  
                                            l1483 0000                                              l1580 0000  
                                            l4037 0000                                              l4045 0000  
                                            l4053 0000                                              l4061 0000  
                                            l4109 0000                                              l2349 0000  
                                            l4125 0000                                              l4301 0000  
                                            l1574 060E                                              l1670 0000  
                                            l4039 0000                                              l4047 0000  
                                            l4055 0000                                              l4071 0000  
                                            l4063 0000                                              l1583 0000  
                                            l4127 0000                                              l4143 0000  
                                            l4215 0000                                              l4303 0000  
                                            l4049 0000                                              l4065 0000  
                                            l4057 0000                                              l4073 0000  
                                            l4081 0540                                              l1577 0000  
                                            l4137 0000                                              l4145 0000  
                                            l4161 0000                                              l4209 0000  
                                            l4217 0000                                              l4241 0000  
                                            l4305 0000                                              l4313 0000  
                                            l4321 0000                                              l4401 02DF  
                                            l1586 0000                                              l4067 0000  
                                            l4059 0000                                              l4075 0000  
                                            l4083 0000                                              l4091 0000  
                                            l4139 0000                                              l4155 0000  
                                            l4163 0000                                              l4227 0000  
                                            l4235 03F3                                              l4307 0000  
                                            l1595 0000                                              l4411 0000  
                                            l4331 0000                                              l4069 0000  
                                            l4077 0000                                              l4085 0000  
                                            l4093 0000                                              l4261 0000  
                                            l4237 0000                                              l4229 0000  
                                            l1589 0000                                              l4317 049B  
                                            l4309 0000                                              l4421 0000  
                                            l4413 0000                                              l4405 0000  
                                            l4341 0000                                              l4333 0000  
                                            l4325 0000                                              l4079 0000  
                                            l4087 0000                                              l4095 0000  
                                            l4167 0000                                              l4191 0000  
                                            l4271 0000                                              l4255 044B  
                                            l4239 0000                                              l4431 0320  
                                            l4415 0000                                              l4407 02E6  
                                            l4351 0271                                              l4335 0000  
                                            l4327 0000                                              l4089 0000  
                                            l4097 0000                                              l4169 0000  
                                            l4185 0000                                              l4193 0000  
                                            l4257 0411                                              l4281 0000  
                                            l4441 0000                                              l4433 0323  
                                            l4417 0000                                              l4409 0000  
                                            l4361 0283                                              l4345 0266  
                                            l4337 03B2                                              l4329 0000  
                                            l4099 0000                                              l4179 0000  
                                            l4187 0000                                              l4259 044D  
                                            l4291 0000                                              l4283 0000  
                                            l4443 0000                                              l4435 0325  
                                            l4419 02FE                                              l4371 02A4  
                                            l4363 0286                                              l4355 027D  
                                            l4339 0000                                              l4269 0000  
                                            l4277 0000                                              l4461 0000  
                                            l4453 0352                                              l4381 02B9  
                                            l4373 02AA                                              l4365 0000  
                                            l4357 027E                                              l4349 0000  
                                            l4295 04B8                                              l4287 0000  
                                            l4471 0391                                              l4463 0380  
                                            l4455 0354                                              l4439 0000  
                                            l4391 02CC                                              l4375 02AC  
                                            l4367 0000                                              l4297 0000  
                                            l4473 0000                                              l4385 0000  
                                            l4369 0000                                              l4299 0000  
                                            l4483 03AE                                              l4467 038C  
                                            l4459 0368                                              l4387 02C0  
                                            l4379 02B8                                              l4485 0000  
                                            l4477 03A5                                              l4469 0000  
                                            l4389 0000                                              l4479 03A7  
                                            l4399 02DE                                              _ADIE 046A  
                                            _ADIF 006A                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0039                                              u2257 025D  
                                            u1955 040B                                              _PEIE 005E  
                                            u1965 0432                                              u1975 041E  
                            FilterCh13@filter_buf 00C9                              FilterCh13@filter_sum 00C7  
                                            _main 0234                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 003B  
                      ??_isFinishedTwentyMinTimer 0039                                             ??_ISR 0035  
                               ??_setPinInitVaule 003A                        __end_of_isPermitSampleTime 0615  
                             _sampleChannelSelect 0055                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 008B  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0039  
                               ??_selectAdChannel 0039                             FilterCh13@filter_temp 00C5  
                                      _FilterCh13 03EA                                   __end_of_initPB3 04F0  
                                 __end_of_initPB4 0500                                   __end_of_initPB5 050B  
                         _vPutSampleDataIntoTable 008E                                   __end_of_initPin 04E4  
                                           _reset 0621                                             _timer 004D  
                                 __end_of_uid_get 0596                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03EA                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 0621                                      __end_of_main 03E3  
                          __size_of_adc_test_init 001B                                 __end_of_AD_Sample 04BB  
                                          ??_main 00D3                               setPWM_Width@ucWidth 0070  
                                   main@ucChValue 00D4                                     main@ucDelay1s 00A6  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 0611                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l1518 0000                                            i1l2352 0000  
                                          i1l1546 00E1                                            i1l1555 010D  
                                          i1l1492 0000                                            i1l1486 0000  
                                          i1l1680 0046                                            i1l1589 0000  
                                          i1l3701 0000                                            i1l1685 006D  
                                          i1l1677 0027                                            i1l1678 0031  
                                          i1l3631 0000                                            i1l3703 00C3  
                                          i1l1679 003C                                            i1l3641 0000  
                                          i1l3705 0000                                            i1l3801 0000  
                                          i1l3643 0000                                            i1l3731 0113  
                                          i1l3723 0105                                            i1l3707 00D4  
                                          i1l3803 0000                                            i1l3581 0000  
                                          i1l3661 01DA                                            u115_25 0192  
                                          i1l3637 017B                                            i1l3725 0107  
                                          u123_25 00AE                                            i1l3741 0121  
                                          i1l3671 0000                                            i1l3663 0000  
                                          i1l3639 0000                                            i1l3831 0000  
                                          i1l3751 0000                                            i1l3743 0000  
                                          i1l3735 0119                                            i1l3823 0000  
                                          i1l3807 0000                                            i1l3577 0000  
                                          i1l3673 0000                                            i1l3657 01D8  
                                          i1l3761 0143                                            i1l3753 0134  
                                          i1l3737 011B                                            i1l3825 0000  
                                          i1l3659 0198                                            i1l3835 0000  
                                          i1l3771 014F                                            i1l3763 0000  
                                          i1l3747 0000                                            i1l3739 0000  
                                          i1l3691 0000                                            i1l3819 0051  
                                          u116_25 01BB                                            i1l3773 0000  
                                          i1l3765 0149                                            i1l3749 012E  
                                          i1l3693 0000                                            i1l3685 0000  
                                          i1l3829 0064                                            i1l3775 0000  
                                          i1l3759 0000                                            i1l3695 0000  
                                          i1l3687 0000                                            i1l3679 0000  
                                          i1l3697 0000                                            u117_25 01A5  
                                          i1l3797 0000                                            u136_25 016D  
                           __end_of_resetAllTimer 0533                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 04A0  
                               _setAD_ConvertFlag 04A4                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0172                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 05D8                       ??_isFinishedThreeHoursTimer 0039  
                   __size_of_clearThreeHoursTimer 0004                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0039                               ??_setAD_ConvertFlag 0039  
                                          _setPB3 0513                                            _setPB4 051C  
                                          _setPB5 0524                       __end_of_clearTwentyMinTimer 0546  
                                          clrloop 0602                                  Filter@filter_buf 0025  
                                       ??_initPB3 0039                                         ??_initPB4 0039  
                                       ??_initPB5 0039                                  Filter@filter_sum 0022  
                                       ??_initPin 003A                         ??_vPutSampleDataIntoTable 0079  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0039  
                                     ?_FilterCh13 0039                                         ??_uid_get 0039  
                        __end_of_setWaitResetFlag 061C                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 04BB                         __end_of_getAD_ConvertFlag 04A4  
                       __end_of_setAD_ConvertFlag 04A7                                     ?_setPWM_Width 0070  
                              __size_of_adc_start 0004                          _initPB2_AsHighResistence 04F0  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 05CC  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 00A8                                     __end_of_reset 0615  
                               main@uiTimerTwoP5s 00AA                            setWaitResetFlag@bValue 0039  
                  vPutSampleDataIntoTable@channel 0078                         _isFinishedThreeHoursTimer 05E3  
                           __end_of_timer1_config 0601                         __size_of_getWaitResetFlag 0002  
                                  ?_adc_test_init 0039                       __end_of_startTwentyMinTimer 0585  
                                         ??_reset 0039                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 003D  
                                      __pbssBANK1 00A0                                    ??_setPWM_Width 0070  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 050B  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 00A2  
                 __end_of_vPutSampleDataIntoTable 0170                                           ?_Filter 0070  
                     __size_of_clearOneHoursTimer 0004                                        __pmaintext 0234  
             vPutSampleDataIntoTable@ucCh12Length 007D                               __size_of_FilterCh13 0082  
             vPutSampleDataIntoTable@ucCh13Length 0053           vPutSampleDataIntoTable@uiDeviationValue 0033  
                                 _selectAdChannel 0615                                        __pintentry 0004  
                                         _CCP1CON 0017                                        __ptext1400 055C  
                                      __ptext1401 04F0                                        __ptext1410 008B  
                                      __ptext1402 0524                                        __ptext1411 007A  
                                      __ptext1403 0500                                        __ptext1412 0172  
                                      __ptext1404 051C                                        __ptext1413 01F8  
                                      __ptext1405 04F5                                        __ptext1414 0170  
                                      __ptext1406 0513                                           ?_setPB3 0070  
                                      __ptext1415 0000                                        __ptext1407 04E4  
                                         ?_setPB4 0070                                        __ptext1408 0013  
                                         ?_setPB5 0070                                        __ptext1409 008E  
                                      __ptext1370 050B                                        __ptext1371 04DA  
                                      __ptext1380 05A4                                        __ptext1372 04A7  
                                      __ptext1381 05ED                                        __ptext1373 04A4  
                                      __ptext1390 0585                                        __ptext1382 05B2  
                                      __ptext1374 04A0                                        __ptext1391 061C  
                                      __ptext1383 05C0                                        __ptext1375 03EA  
                                      __ptext1367 03E3                                        __ptext1392 05F7  
                                      __ptext1384 061F                                        __ptext1376 0619  
                                      __ptext1368 048B                                        __ptext1393 0609  
                                      __ptext1385 0611                                        __ptext1377 05D8  
                                      __ptext1369 052C                                        __ptext1394 0540  
                                      __ptext1386 04D6                                        __ptext1378 0596  
                                      __ptext1395 053C                                        __ptext1387 0571  
                                      __ptext1379 05E3                                        __ptext1396 0538  
                                      __ptext1388 04BB                                        __ptext1397 0533  
                                      __ptext1389 05CC                                        __ptext1398 0621  
                                      __ptext1399 0615                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                      _clrSampeTime 061F  
                               __end_of_adc_start 04DA                              _uiTwentySecondsTimer 00A4  
                                       ?_op1_init 0070                                _isPermitSampleTime 0611  
                                         Filter@i 002E                                           Filter@j 002D  
                              __size_of_pwm_start 0015                       __size_of_startOneHoursTimer 000E  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimerP3s 0051  
                                  main@ucTimerP5s 0052                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0086                                        _uiBigTimer 003D  
                                    setPB3@bValue 0039                                      setPB4@bValue 0039  
                                    _clock_config 0609                                      setPB5@bValue 0039  
                                         _adc_get 007A                                   __size_of_setPB3 0009  
                                 __size_of_setPB4 0008                                   __size_of_setPB5 0008  
                            ??_isPermitSampleTime 0039                      __end_of_startTwelveHourTimer 05C0  
                                   initPB3@bValue 0039                                     initPB4@bValue 0039  
                                       _AD_Sample 04A7                                           _initPB3 04E4  
                                         _initPB4 04F5                                           _initPB5 0500  
                                    __size_of_ISR 0067                                     initPB5@bValue 0039  
                                         _initPin 04DA                              _bSmallTimerStartFlag 0049  
                                 ??_adc_test_init 003A                                           _uid_get 0585  
               __size_of_isFinishedTwentyMinTimer 000C                                        ??_op1_init 0039  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 0513  
                            end_of_initialization 0559                                 Filter@filter_temp 0020  
                           pwm_start@ucPulseWidth 003A                           __end_of_selectAdChannel 0619  
                         _isFinishedOneHoursTimer 05D8                                 __end_of_pwm_start 0571  
                            __end_of_setPWM_Width 01FB                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 0039                                         Filter@cir 002B  
                             _bTwentyMinStartFlag 004A                                  _adc_convert_flag 0046  
                                    ??_FilterCh13 00C0                                  _getWaitResetFlag 0170  
                    __end_of_clearThreeHoursTimer 053C                    __size_of_clearTwelveHoursTimer 0005  
                               ?_setWaitResetFlag 0070                           _timer1_interrupt_config 061C  
                   __end_of_clearTwelveHoursTimer 0538                        ??_initPB2_AsHighResistence 0039  
                              ??_setWaitResetFlag 0039                __size_of_isFinishedThreeHoursTimer 000A  
                                      main@ucStep 0050                                    __end_of_Filter 01F8  
                   startTwentyMinTimer@uiSetValue 0039               __size_of_isFinishedTwelveHoursTimer 000A  
                              FilterCh13@tmpValue 00C4                                __end_of_FilterCh13 046C  
                        vPutSampleDataIntoTable@i 0031                               i1_setAD_ConvertFlag 008B  
                                  __end_of_setPB3 051C                                    __end_of_setPB4 0524  
                                  __end_of_setPB5 052C                            __size_of_resetAllTimer 0007  
                             start_initialization 0546                                       __end_of_ISR 007A  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 003D  
                    __size_of_clearTwentyMinTimer 0006                         ??_isFinishedOneHoursTimer 0039  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 05B2  
               __end_of_isFinishedThreeHoursTimer 05ED                                  ?_selectAdChannel 0070  
                                        ??_Filter 0072                                       __pdataBANK0 0055  
                                        ??_setPB3 0039                                          ??_setPB4 0039  
                                        ??_setPB5 0039                          ?_vPutSampleDataIntoTable 0076  
                                     ??_AD_Sample 0039                         ??_timer1_interrupt_config 0039  
                                     __pbssCOMMON 007B                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00C0                                         _ad_offset 00A0  
                                       _adc_start 04D6                                 __size_of_op1_init 000C  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 00D6  
                           ?_startTwelveHourTimer 0039                                     _resetAllTimer 052C  
                      __end_of_clearOneHoursTimer 0540                      __size_of_startTwentyMinTimer 0014  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 0538  
                           __size_of_setPWM_Width 0003                      __end_of_startThreeHoursTimer 05B2  
                               main@cTimerP5s_801 004F                                 main@cTimerP5s_795 004E  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 05E3  
              __end_of_isFinishedTwelveHoursTimer 05F7                        _isFinishedTwelveHoursTimer 05ED  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 0045  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 05A4  
                                        ?_uid_get 0070                  __end_of_initPB2_AsHighResistence 04F5  
                       _uiSampleChannelFourteenth 00BA                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh13Value 0007                                    __size_of_reset FFF4  
                                  ?_resetAllTimer 0070                                 interrupt_function 0004  
                                    _setPWM_Width 01F8                                    _bWaitResetFlag 004B  
                 __end_of_timer1_interrupt_config 061F                         pwm_start@ucPulseFrequency 0039  
                        __end_of_getWaitResetFlag 0172                             ?_clearThreeHoursTimer 0070  
                                    _uiSampleCh12 00AE                                      _uiSampleCh13 00B4  
                            adc_test_init@channel 003B                                          _SRAM_MAP 0C78  
             vPutSampleDataIntoTable@uiSampleData 0076                       __size_of_isPermitSampleTime 0004  
                                       _pwm_start 055C         vPutSampleDataIntoTable@uiCalWidthArrayOld 0043  
       vPutSampleDataIntoTable@uiCalWidthArrayNew 007B                                      _uiSmallTimer 0041  
            vPutSampleDataIntoTable@uiCalWidthCnt 00AC                             __end_of_adc_test_init 04D6  
                                   _timer1_config 05F7                      ??_process_AD_Converter_Value 003C  
                          ??_startTwelveHourTimer 003B                         __size_of_setWaitResetFlag 0003  
                          _getAdOriginalCh13Value 03E3                               _clearTwentyMinTimer 0540  
                     startOneHoursTimer@uiSetTime 0039                                  __size_of_adc_get 0011  
             __size_of_process_AD_Converter_Value 0015                                        ?_pwm_start 0039  
                        _isFinishedTwentyMinTimer 05C0  vPutSampleDataIntoTable@ucChannelFourteenthLength 0054  
                                __size_of_initPB3 000C                                  __size_of_initPB4 000B  
                                __size_of_initPB5 000B                                  __size_of_initPin 000A  
                                  Filter@tmpValue 0024                                    ?_timer1_config 0070  
                                        _op1_init 05CC                                  __size_of_uid_get 0011  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0039  
                                 ??_resetAllTimer 0039                              _startThreeHoursTimer 05A4  
                           _clearTwelveHoursTimer 0533                                    _uiOneHourTimer 003F  
                                   __size_of_main 01AF                vPutSampleDataIntoTable@uiInitWidth 0056  
                                   FilterCh13@cir 00CF                                          clear_ram 0601  
                          ??_clearThreeHoursTimer 0039                 __size_of_initPB2_AsHighResistence 0005  
                       ?_initPB2_AsHighResistence 0070                            _bOneHourTimerStartFlag 0048  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 0571  
                                     _sampleTimes 004C                             ??_clearTwentyMinTimer 0039  
                           ?_startThreeHoursTimer 0039                  __size_of_vPutSampleDataIntoTable 00E2  
                                        intlevel1 0000                              ?_startTwentyMinTimer 0039  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
          vPutSampleDataIntoTable@uiAbstractValue 002F                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                                _clearOneHoursTimer 053C  
                   startThreeHoursTimer@uiSetTime 0039                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 003A                                    ??_clrSampeTime 0039  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 0047  
                                 ??_timer1_config 0039                                       FilterCh13@i 00D2  
                                     FilterCh13@j 00D1                               ?_clearOneHoursTimer 0070  
                     __end_ofi1_setAD_ConvertFlag 008E                __end_of_process_AD_Converter_Value 04A0  
                      _process_AD_Converter_Value 048B                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0039  
                           ??_startTwentyMinTimer 003B                                _startOneHoursTimer 0596  
                            ??_clearOneHoursTimer 0039                                  _setWaitResetFlag 0619  
