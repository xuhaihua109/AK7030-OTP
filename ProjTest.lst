

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Dec 02 19:18:38 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1272,local,class=CODE,delta=2
    17                           	psect	text1273,local,class=CODE,delta=2
    18                           	psect	text1274,local,class=CODE,delta=2
    19                           	psect	text1275,local,class=CODE,delta=2
    20                           	psect	text1276,local,class=CODE,delta=2
    21                           	psect	text1281,local,class=CODE,delta=2
    22                           	psect	text1282,local,class=CODE,delta=2
    23                           	psect	text1283,local,class=CODE,delta=2
    24                           	psect	text1284,local,class=CODE,delta=2
    25                           	psect	text1285,local,class=CODE,delta=2
    26                           	psect	text1286,local,class=CODE,delta=2
    27                           	psect	text1287,local,class=CODE,delta=2
    28                           	psect	text1288,local,class=CODE,delta=2
    29                           	psect	text1289,local,class=CODE,delta=2
    30                           	psect	text1290,local,class=CODE,delta=2
    31                           	psect	text1292,local,class=CODE,delta=2
    32                           	psect	text1294,local,class=CODE,delta=2
    33                           	psect	text1295,local,class=CODE,delta=2
    34                           	psect	text1296,local,class=CODE,delta=2
    35                           	psect	text1301,local,class=CODE,delta=2
    36                           	psect	text1302,local,class=CODE,delta=2
    37                           	psect	text1303,local,class=CODE,delta=2
    38                           	psect	text1311,local,class=CODE,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text1318,local,class=CODE,delta=2
    41                           	psect	pa_nodes,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  000A                     	;#
    44                           
    45                           	psect	config
    46  2000  0FFF               	dw	4095	;#
    47  2001  3FDE               	dw	16350	;#
    48  2002  3F78               	dw	16248	;#
    49                           
    50                           	psect	idataBANK0
    51  0000                     __pidataBANK0:	
    52  001F                     _ADCON0	set	31
    53  001E                     _ADRESH	set	30
    54  0017                     _CCP1CON	set	23
    55  0015                     _CCPR1L	set	21
    56  0010                     _T1CON	set	16
    57  0012                     _T2CON	set	18
    58  000F                     _TMR1H	set	15
    59  000E                     _TMR1L	set	14
    60  006A                     _ADIF	set	106
    61  00F8                     _ADON	set	248
    62  005F                     _GIE	set	95
    63  00F9                     _GO	set	249
    64  0032                     _PB2	set	50
    65  0033                     _PB3	set	51
    66  0034                     _PB4	set	52
    67  0035                     _PB5	set	53
    68  005E                     _PEIE	set	94
    69  0060                     _TMR1IF	set	96
    70  009F                     _ADCON1	set	159
    71  009E                     _ADRESL	set	158
    72  0092                     _PR2	set	146
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0430                     _TRISB0	set	1072
    76  0431                     _TRISB1	set	1073
    77  0432                     _TRISB2	set	1074
    78  0433                     _TRISB3	set	1075
    79  0434                     _TRISB4	set	1076
    80  0435                     _TRISB5	set	1077
    81  0108                     _CLKPR	set	264
    82  0847                     _CLKPCE	set	2119
    83  0C42                     _PBOD2	set	3138
    84                           
    85                           	psect	cinit
    86  0543                     start_initialization:	
    87  0543  303D               	movlw	low __pbssBANK0
    88                           
    89                           ; Clear objects allocated to COMMON
    90  0544  01FD               	clrf	__pbssCOMMON& (0+127)
    91                           
    92                           ; Clear objects allocated to BANK0
    93  0545  1383               	bcf	3,7	;select IRP bank0
    94  0546  0084               	movwf	4
    95  0547  3059               	movlw	low (__pbssBANK0+28)
    96  0548  118A  25C2  118A   	fcall	clear_ram
    97                           
    98                           ; Clear objects allocated to BANK1
    99  054B  30A0               	movlw	low __pbssBANK1
   100  054C  0084               	movwf	4
   101  054D  30BC               	movlw	low (__pbssBANK1+28)
   102  054E  118A  25C2         	fcall	clear_ram
   103                           
   104                           ;initializer for _sampleChannelSelect
   105  0550  300C               	movlw	12
   106  0551  00D9               	movwf	__pdataBANK0& (0+127)
   107                           
   108                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   109  0552  304B               	movlw	75
   110  0553  00DA               	movwf	(__pdataBANK0+1)& (0+127)
   111  0554                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  0554  0183               	clrf	3
   115  0555  118A  2A17         	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMMON
   118  007D                     __pbssCOMMON:	
   119  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   120  007D                     	ds	1
   121                           
   122                           	psect	bssBANK0
   123  003D                     __pbssBANK0:	
   124  003D                     _uiBigTimer:	
   125  003D                     	ds	2
   126  003F                     _uiOneHourTimer:	
   127  003F                     	ds	2
   128  0041                     _uiSmallTimer:	
   129  0041                     	ds	2
   130  0043                     _uiTwentyMinTimer:	
   131  0043                     	ds	2
   132  0045                     vPutSampleDataIntoTable@uiCalWidthArrayNew:	
   133  0045                     	ds	2
   134  0047                     vPutSampleDataIntoTable@uiCalWidthArrayOld:	
   135  0047                     	ds	2
   136  0049                     ISR@ucTimer1sCnt:	
   137  0049                     	ds	1
   138  004A                     _adc_convert_flag:	
   139  004A                     	ds	1
   140  004B                     _bBigTimerStartFlag:	
   141  004B                     	ds	1
   142  004C                     _bOneHourTimerStartFlag:	
   143  004C                     	ds	1
   144  004D                     _bSmallTimerStartFlag:	
   145  004D                     	ds	1
   146  004E                     _bTwentyMinStartFlag:	
   147  004E                     	ds	1
   148  004F                     _bWaitResetFlag:	
   149  004F                     	ds	1
   150  0050                     _sampleTimes:	
   151  0050                     	ds	1
   152  0051                     _timer:	
   153  0051                     	ds	1
   154  0052                     main@cTimerP5s_786:	
   155  0052                     	ds	1
   156  0053                     main@cTimerP5s_792:	
   157  0053                     	ds	1
   158  0054                     main@ucStep:	
   159  0054                     	ds	1
   160  0055                     main@ucTimerP3s:	
   161  0055                     	ds	1
   162  0056                     main@ucTimerP5s:	
   163  0056                     	ds	1
   164  0057                     vPutSampleDataIntoTable@ucCh13Length:	
   165  0057                     	ds	1
   166  0058                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   167  0058                     	ds	1
   168                           
   169                           	psect	dataBANK0
   170  0059                     __pdataBANK0:	
   171  0059                     _sampleChannelSelect:	
   172  0059                     	ds	1
   173  005A                     vPutSampleDataIntoTable@uiInitWidth:	
   174  005A                     	ds	1
   175                           
   176                           	psect	bssBANK1
   177  00A0                     __pbssBANK1:	
   178  00A0                     _uiTwentySecondsTimer:	
   179  00A0                     	ds	2
   180  00A2                     main@ucDelay1s:	
   181  00A2                     	ds	2
   182  00A4                     main@uiTimerOneP5s:	
   183  00A4                     	ds	2
   184  00A6                     main@uiTimerTwoP5s:	
   185  00A6                     	ds	2
   186  00A8                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   187  00A8                     	ds	2
   188  00AA                     _uiSampleCh12:	
   189  00AA                     	ds	6
   190  00B0                     _uiSampleCh13:	
   191  00B0                     	ds	6
   192  00B6                     _uiSampleChannelFourteenth:	
   193  00B6                     	ds	6
   194                           
   195                           	psect	clrtext
   196  05C2                     clear_ram:	
   197                           ;	Called with FSR containing the base address, and
   198                           ;	W with the last address+1
   199                           
   200  05C2  0064               	clrwdt	;clear the watchdog before getting into this loop
   201  05C3                     clrloop:	
   202  05C3  0180               	clrf	0	;clear RAM location pointed to by FSR
   203  05C4  0A84               	incf	4,f	;increment pointer
   204  05C5  0604               	xorwf	4,w	;XOR with final address
   205  05C6  1903               	btfsc	3,2	;have we reached the end yet?
   206  05C7  3400               	retlw	0	;all done for this memory range, return
   207  05C8  0604               	xorwf	4,w	;XOR again to restore value
   208  05C9  2DC3               	goto	clrloop	;do the next byte
   209                           
   210                           	psect	cstackBANK1
   211  00BC                     __pcstackBANK1:	
   212  00BC                     FilterCh13@tmpValue:	
   213                           
   214                           ; 1 bytes @ 0x0
   215  00BC                     	ds	1
   216  00BD                     FilterCh13@filter_temp:	
   217                           
   218                           ; 2 bytes @ 0x1
   219  00BD                     	ds	2
   220  00BF                     FilterCh13@filter_sum:	
   221                           
   222                           ; 2 bytes @ 0x3
   223  00BF                     	ds	2
   224  00C1                     FilterCh13@filter_buf:	
   225                           
   226                           ; 6 bytes @ 0x5
   227  00C1                     	ds	6
   228  00C7                     FilterCh13@cir:	
   229                           
   230                           ; 2 bytes @ 0xB
   231  00C7                     	ds	2
   232  00C9                     FilterCh13@j:	
   233                           
   234                           ; 1 bytes @ 0xD
   235  00C9                     	ds	1
   236  00CA                     FilterCh13@i:	
   237                           
   238                           ; 1 bytes @ 0xE
   239  00CA                     	ds	1
   240  00CB                     ??_main:	
   241                           
   242                           ; 0 bytes @ 0xF
   243  00CB                     	ds	1
   244  00CC                     main@ucChValue:	
   245                           
   246                           ; 2 bytes @ 0x10
   247  00CC                     	ds	2
   248  00CE                     main@uiCh13Value:	
   249                           
   250                           ; 2 bytes @ 0x12
   251  00CE                     	ds	2
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:	
   255  0070                     ?_clearTwelveHoursTimer:	
   256  0070                     ?_clearThreeHoursTimer:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_clearOneHoursTimer:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_clearTwentyMinTimer:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_clock_config:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_timer1_config:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_timer1_interrupt_config:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_adc_start:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_process_AD_Converter_Value:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_clrSampeTime:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_setWaitResetFlag:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_AD_Sample:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_initPB3:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_setPB3:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_initPB4:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_setPB4:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_initPB5:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_setPB5:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_initPB2_AsHighResistence:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_initPin:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_setPinInitVaule:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_selectAdChannel:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_reset:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_resetAllTimer:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ??_getWaitResetFlag:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_setPWM_Width:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ??_setPWM_Width:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_setAD_ConvertFlag:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_ISR:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?i1_setAD_ConvertFlag:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ??i1_setAD_ConvertFlag:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_isPermitSampleTime:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_isFinishedTwentyMinTimer:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_isFinishedTwelveHoursTimer:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_isFinishedThreeHoursTimer:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_isFinishedOneHoursTimer:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_getWaitResetFlag:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_getAD_ConvertFlag:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_adc_get:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_main:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0070                     ?_Filter:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0070                     setPWM_Width@ucWidth:	
   377                           ; 2 bytes @ 0x0
   378                           
   379  0070                     i1setAD_ConvertFlag@flag:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0070                     	ds	2
   385  0072                     ??_adc_get:	
   386  0072                     ??_Filter:	
   387                           ; 0 bytes @ 0x2
   388                           
   389  0072                     adc_get@val:	
   390                           ; 0 bytes @ 0x2
   391                           
   392                           
   393                           ; 2 bytes @ 0x2
   394  0072                     	ds	4
   395  0076                     ?_vPutSampleDataIntoTable:	
   396  0076                     vPutSampleDataIntoTable@uiSampleData:	
   397                           ; 0 bytes @ 0x6
   398                           
   399                           
   400                           ; 2 bytes @ 0x6
   401  0076                     	ds	2
   402  0078                     vPutSampleDataIntoTable@channel:	
   403                           
   404                           ; 1 bytes @ 0x8
   405  0078                     	ds	1
   406  0079                     ??_vPutSampleDataIntoTable:	
   407  0079                     ??_ISR:	
   408                           ; 0 bytes @ 0x9
   409                           
   410                           
   411                           ; 0 bytes @ 0x9
   412  0079                     	ds	4
   413                           
   414                           	psect	cstackBANK0
   415  0020                     __pcstackBANK0:	
   416  0020                     Filter@filter_temp:	
   417                           
   418                           ; 2 bytes @ 0x0
   419  0020                     	ds	2
   420  0022                     Filter@filter_sum:	
   421                           
   422                           ; 2 bytes @ 0x2
   423  0022                     	ds	2
   424  0024                     Filter@tmpValue:	
   425                           
   426                           ; 1 bytes @ 0x4
   427  0024                     	ds	1
   428  0025                     Filter@filter_buf:	
   429                           
   430                           ; 6 bytes @ 0x5
   431  0025                     	ds	6
   432  002B                     Filter@cir:	
   433                           
   434                           ; 2 bytes @ 0xB
   435  002B                     	ds	2
   436  002D                     Filter@j:	
   437                           
   438                           ; 1 bytes @ 0xD
   439  002D                     	ds	1
   440  002E                     Filter@i:	
   441                           
   442                           ; 1 bytes @ 0xE
   443  002E                     	ds	1
   444  002F                     vPutSampleDataIntoTable@uiAbstractValue:	
   445                           
   446                           ; 2 bytes @ 0xF
   447  002F                     	ds	2
   448  0031                     vPutSampleDataIntoTable@uiDeviationValue:	
   449                           
   450                           ; 2 bytes @ 0x11
   451  0031                     	ds	2
   452  0033                     vPutSampleDataIntoTable@i:	
   453                           
   454                           ; 2 bytes @ 0x13
   455  0033                     	ds	2
   456  0035                     ??_clearTwelveHoursTimer:	
   457  0035                     ??_clearThreeHoursTimer:	
   458                           ; 0 bytes @ 0x15
   459                           
   460  0035                     ??_clearOneHoursTimer:	
   461                           ; 0 bytes @ 0x15
   462                           
   463  0035                     ??_clearTwentyMinTimer:	
   464                           ; 0 bytes @ 0x15
   465                           
   466  0035                     ??_clock_config:	
   467                           ; 0 bytes @ 0x15
   468                           
   469  0035                     ??_timer1_config:	
   470                           ; 0 bytes @ 0x15
   471                           
   472  0035                     ??_timer1_interrupt_config:	
   473                           ; 0 bytes @ 0x15
   474                           
   475  0035                     ?_adc_test_init:	
   476                           ; 0 bytes @ 0x15
   477                           
   478  0035                     ?_startTwentyMinTimer:	
   479                           ; 0 bytes @ 0x15
   480                           
   481  0035                     ??_adc_start:	
   482                           ; 0 bytes @ 0x15
   483                           
   484  0035                     ??_isPermitSampleTime:	
   485                           ; 0 bytes @ 0x15
   486                           
   487  0035                     ??_clrSampeTime:	
   488                           ; 0 bytes @ 0x15
   489                           
   490  0035                     ??_isFinishedTwentyMinTimer:	
   491                           ; 0 bytes @ 0x15
   492                           
   493  0035                     ?_startTwelveHourTimer:	
   494                           ; 0 bytes @ 0x15
   495                           
   496  0035                     ??_isFinishedTwelveHoursTimer:	
   497                           ; 0 bytes @ 0x15
   498                           
   499  0035                     ?_startThreeHoursTimer:	
   500                           ; 0 bytes @ 0x15
   501                           
   502  0035                     ??_isFinishedThreeHoursTimer:	
   503                           ; 0 bytes @ 0x15
   504                           
   505  0035                     ?_startOneHoursTimer:	
   506                           ; 0 bytes @ 0x15
   507                           
   508  0035                     ??_isFinishedOneHoursTimer:	
   509                           ; 0 bytes @ 0x15
   510                           
   511  0035                     ??_setWaitResetFlag:	
   512                           ; 0 bytes @ 0x15
   513                           
   514  0035                     ??_AD_Sample:	
   515                           ; 0 bytes @ 0x15
   516                           
   517  0035                     ??_initPB3:	
   518                           ; 0 bytes @ 0x15
   519                           
   520  0035                     ??_setPB3:	
   521                           ; 0 bytes @ 0x15
   522                           
   523  0035                     ??_initPB4:	
   524                           ; 0 bytes @ 0x15
   525                           
   526  0035                     ??_setPB4:	
   527                           ; 0 bytes @ 0x15
   528                           
   529  0035                     ??_initPB5:	
   530                           ; 0 bytes @ 0x15
   531                           
   532  0035                     ??_setPB5:	
   533                           ; 0 bytes @ 0x15
   534                           
   535  0035                     ??_initPB2_AsHighResistence:	
   536                           ; 0 bytes @ 0x15
   537                           
   538  0035                     ?_pwm_start:	
   539                           ; 0 bytes @ 0x15
   540                           
   541  0035                     ??_selectAdChannel:	
   542                           ; 0 bytes @ 0x15
   543                           
   544  0035                     ??_reset:	
   545                           ; 0 bytes @ 0x15
   546                           
   547  0035                     ??_resetAllTimer:	
   548                           ; 0 bytes @ 0x15
   549                           
   550  0035                     ??_getAD_ConvertFlag:	
   551                           ; 0 bytes @ 0x15
   552                           
   553  0035                     ??_setAD_ConvertFlag:	
   554                           ; 0 bytes @ 0x15
   555                           
   556  0035                     ?_FilterCh13:	
   557                           ; 0 bytes @ 0x15
   558                           
   559  0035                     initPB3@bValue:	
   560                           ; 2 bytes @ 0x15
   561                           
   562  0035                     setPB3@bValue:	
   563                           ; 1 bytes @ 0x15
   564                           
   565  0035                     initPB4@bValue:	
   566                           ; 1 bytes @ 0x15
   567                           
   568  0035                     setPB4@bValue:	
   569                           ; 1 bytes @ 0x15
   570                           
   571  0035                     initPB5@bValue:	
   572                           ; 1 bytes @ 0x15
   573                           
   574  0035                     setPB5@bValue:	
   575                           ; 1 bytes @ 0x15
   576                           
   577  0035                     pwm_start@ucPulseFrequency:	
   578                           ; 1 bytes @ 0x15
   579                           
   580  0035                     setWaitResetFlag@bValue:	
   581                           ; 1 bytes @ 0x15
   582                           
   583  0035                     setAD_ConvertFlag@flag:	
   584                           ; 1 bytes @ 0x15
   585                           
   586  0035                     adc_test_init@ref:	
   587                           ; 1 bytes @ 0x15
   588                           
   589  0035                     startTwelveHourTimer@uiSetTime:	
   590                           ; 1 bytes @ 0x15
   591                           
   592  0035                     startThreeHoursTimer@uiSetTime:	
   593                           ; 2 bytes @ 0x15
   594                           
   595  0035                     startOneHoursTimer@uiSetTime:	
   596                           ; 2 bytes @ 0x15
   597                           
   598  0035                     startTwentyMinTimer@uiSetValue:	
   599                           ; 2 bytes @ 0x15
   600                           
   601                           
   602                           ; 2 bytes @ 0x15
   603  0035                     	ds	1
   604  0036                     ??_adc_test_init:	
   605  0036                     ??_pwm_start:	
   606                           ; 0 bytes @ 0x16
   607                           
   608  0036                     ??_initPin:	
   609                           ; 0 bytes @ 0x16
   610                           
   611  0036                     ??_setPinInitVaule:	
   612                           ; 0 bytes @ 0x16
   613                           
   614  0036                     pwm_start@ucPulseWidth:	
   615                           ; 0 bytes @ 0x16
   616                           
   617                           
   618                           ; 1 bytes @ 0x16
   619  0036                     	ds	1
   620  0037                     ??_startTwentyMinTimer:	
   621  0037                     ??_startTwelveHourTimer:	
   622                           ; 0 bytes @ 0x17
   623                           
   624  0037                     ??_startThreeHoursTimer:	
   625                           ; 0 bytes @ 0x17
   626                           
   627  0037                     ??_startOneHoursTimer:	
   628                           ; 0 bytes @ 0x17
   629                           
   630  0037                     ??_FilterCh13:	
   631                           ; 0 bytes @ 0x17
   632                           
   633  0037                     adc_test_init@channel:	
   634                           ; 0 bytes @ 0x17
   635                           
   636                           
   637                           ; 1 bytes @ 0x17
   638  0037                     	ds	1
   639  0038                     ??_process_AD_Converter_Value:	
   640                           
   641                           ; 0 bytes @ 0x18
   642  0038                     	ds	3
   643  003B                     ?_getAdOriginalCh13Value:	
   644                           
   645                           ; 2 bytes @ 0x1B
   646  003B                     	ds	2
   647  003D                     ??_getAdOriginalCh13Value:	
   648                           
   649                           	psect	maintext
   650  0217                     __pmaintext:	
   651                           ; 0 bytes @ 0x1D
   652 ;;Data sizes: Strings 0, constant 0, data 2, bss 57, persistent 0 stack 0
   653 ;;Auto spaces:   Size  Autos    Used
   654 ;; COMMON          14     13      14
   655 ;; BANK0           80     29      59
   656 ;; BANK1           80     20      48
   657 ;; BANK3           96      0       0
   658 ;; BANK2           96      0       0
   659 ;;
   660 ;; Pointer list with targets:
   661 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   662 ;;
   663 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   664 ;;
   665 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   666 ;;
   667 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   668 ;;
   669 ;; Filter@tmpValue	PTR unsigned int  size(1) Largest target is 6
   670 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   671 ;;
   672 ;; FilterCh13@tmpValue	PTR unsigned int  size(1) Largest target is 6
   673 ;;		 -> uiSampleCh13(BANK1[6]), 
   674 ;;
   675 ;;
   676 ;; Critical Paths under _main in COMMON
   677 ;;
   678 ;;   None.
   679 ;;
   680 ;; Critical Paths under _ISR in COMMON
   681 ;;
   682 ;;   _ISR->_vPutSampleDataIntoTable
   683 ;;   _vPutSampleDataIntoTable->_Filter
   684 ;;
   685 ;; Critical Paths under _main in BANK0
   686 ;;
   687 ;;   _main->_getAdOriginalCh13Value
   688 ;;   _getAdOriginalCh13Value->_FilterCh13
   689 ;;   _process_AD_Converter_Value->_adc_test_init
   690 ;;   _setPinInitVaule->_setPB3
   691 ;;   _setPinInitVaule->_setPB4
   692 ;;   _setPinInitVaule->_setPB5
   693 ;;   _initPin->_initPB3
   694 ;;   _initPin->_initPB4
   695 ;;   _initPin->_initPB5
   696 ;;
   697 ;; Critical Paths under _ISR in BANK0
   698 ;;
   699 ;;   _ISR->_vPutSampleDataIntoTable
   700 ;;   _vPutSampleDataIntoTable->_Filter
   701 ;;
   702 ;; Critical Paths under _main in BANK1
   703 ;;
   704 ;;   _getAdOriginalCh13Value->_FilterCh13
   705 ;;
   706 ;; Critical Paths under _ISR in BANK1
   707 ;;
   708 ;;   None.
   709 ;;
   710 ;; Critical Paths under _main in BANK3
   711 ;;
   712 ;;   None.
   713 ;;
   714 ;; Critical Paths under _ISR in BANK3
   715 ;;
   716 ;;   None.
   717 ;;
   718 ;; Critical Paths under _main in BANK2
   719 ;;
   720 ;;   None.
   721 ;;
   722 ;; Critical Paths under _ISR in BANK2
   723 ;;
   724 ;;   None.
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   727 ;;
   728 ;;
   729 ;;Call Graph Tables:
   730 ;;
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (0) _main                                                 5     5      0    1665
   735 ;;                                             15 BANK1      5     5      0
   736 ;;                            _initPin
   737 ;;                    _setPinInitVaule
   738 ;;                    _selectAdChannel
   739 ;;                       _clock_config
   740 ;;                      _timer1_config
   741 ;;            _timer1_interrupt_config
   742 ;;                      _adc_test_init
   743 ;;                _startTwentyMinTimer
   744 ;;                          _adc_start
   745 ;;         _process_AD_Converter_Value
   746 ;;                 _isPermitSampleTime
   747 ;;                       _clrSampeTime
   748 ;;           _isFinishedTwentyMinTimer
   749 ;;             _getAdOriginalCh13Value
   750 ;;                          _pwm_start
   751 ;;                             _setPB3
   752 ;;                             _setPB4
   753 ;;                             _setPB5
   754 ;;                _clearTwentyMinTimer
   755 ;;               _startTwelveHourTimer
   756 ;;         _isFinishedTwelveHoursTimer
   757 ;;              _clearTwelveHoursTimer
   758 ;;               _startThreeHoursTimer
   759 ;;          _isFinishedThreeHoursTimer
   760 ;;               _clearThreeHoursTimer
   761 ;;                 _startOneHoursTimer
   762 ;;            _isFinishedOneHoursTimer
   763 ;;                      _resetAllTimer
   764 ;;                   _setWaitResetFlag
   765 ;;                              _reset
   766 ;; ---------------------------------------------------------------------------------
   767 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   768 ;;                                             27 BANK0      2     0      2
   769 ;;                         _FilterCh13
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   772 ;;                  _getAD_ConvertFlag
   773 ;;                  _setAD_ConvertFlag
   774 ;;                          _AD_Sample
   775 ;;                      _adc_test_init
   776 ;;                          _adc_start
   777 ;; ---------------------------------------------------------------------------------
   778 ;; (1) _resetAllTimer                                        0     0      0       0
   779 ;;              _clearTwelveHoursTimer
   780 ;;               _clearThreeHoursTimer
   781 ;;                 _clearOneHoursTimer
   782 ;;                _clearTwentyMinTimer
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (1) _setPinInitVaule                                      0     0      0      93
   785 ;;                             _setPB3
   786 ;;                             _setPB4
   787 ;;                             _setPB5
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (1) _initPin                                              0     0      0      93
   790 ;;           _initPB2_AsHighResistence
   791 ;;                            _initPB3
   792 ;;                            _initPB4
   793 ;;                            _initPB5
   794 ;; ---------------------------------------------------------------------------------
   795 ;; (2) _AD_Sample                                            0     0      0       0
   796 ;; ---------------------------------------------------------------------------------
   797 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   798 ;;                                             21 BANK0      1     1      0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (2) _FilterCh13                                          21    19      2     915
   803 ;;                                             21 BANK0      6     4      2
   804 ;;                                              0 BANK1     15    15      0
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _setWaitResetFlag                                     1     1      0      31
   807 ;;                                             21 BANK0      1     1      0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (1) _startOneHoursTimer                                   2     0      2      31
   812 ;;                                             21 BANK0      2     0      2
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   815 ;; ---------------------------------------------------------------------------------
   816 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   817 ;;                                             21 BANK0      2     0      2
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   822 ;;                                             21 BANK0      2     0      2
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (1) _clrSampeTime                                         0     0      0       0
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (1) _isPermitSampleTime                                   0     0      0       0
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (2) _adc_start                                            0     0      0       0
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   833 ;;                                             21 BANK0      2     0      2
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (2) _adc_test_init                                        3     2      1      62
   836 ;;                                             21 BANK0      3     2      1
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _timer1_interrupt_config                              0     0      0       0
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (1) _timer1_config                                        0     0      0       0
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (1) _clock_config                                         0     0      0       0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (2) _clearTwentyMinTimer                                  0     0      0       0
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (2) _clearOneHoursTimer                                   0     0      0       0
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (1) _reset                                                0     0      0       0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (1) _selectAdChannel                                      0     0      0       0
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (1) _pwm_start                                            2     1      1      62
   857 ;;                                             21 BANK0      2     1      1
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (1) _setPB5                                               1     1      0      31
   862 ;;                                             21 BANK0      1     1      0
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (2) _initPB5                                              1     1      0      31
   865 ;;                                             21 BANK0      1     1      0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _setPB4                                               1     1      0      31
   868 ;;                                             21 BANK0      1     1      0
   869 ;; ---------------------------------------------------------------------------------
   870 ;; (2) _initPB4                                              1     1      0      31
   871 ;;                                             21 BANK0      1     1      0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (1) _setPB3                                               1     1      0      31
   874 ;;                                             21 BANK0      1     1      0
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (2) _initPB3                                              1     1      0      31
   877 ;;                                             21 BANK0      1     1      0
   878 ;; ---------------------------------------------------------------------------------
   879 ;; Estimated maximum stack depth 2
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (3) _ISR                                                  4     4      0    1163
   884 ;;                                              9 COMMON     4     4      0
   885 ;;                i1_setAD_ConvertFlag
   886 ;;                            _adc_get
   887 ;;            _vPutSampleDataIntoTable
   888 ;; ---------------------------------------------------------------------------------
   889 ;; (4) _vPutSampleDataIntoTable                              9     6      3    1066
   890 ;;                                              6 COMMON     3     0      3
   891 ;;                                             15 BANK0      6     6      0
   892 ;;                             _Filter
   893 ;;                   _getWaitResetFlag
   894 ;;                       _setPWM_Width
   895 ;;                            _adc_get (ARG)
   896 ;; ---------------------------------------------------------------------------------
   897 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   898 ;;                                              0 COMMON     1     1      0
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (4) _adc_get                                              4     2      2      24
   901 ;;                                              0 COMMON     4     2      2
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (5) _Filter                                              21    19      2     620
   904 ;;                                              0 COMMON     6     4      2
   905 ;;                                              0 BANK0     15    15      0
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (5) _setPWM_Width                                         1     1      0      33
   908 ;;                                              0 COMMON     1     1      0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; (5) _getWaitResetFlag                                     0     0      0       0
   911 ;; ---------------------------------------------------------------------------------
   912 ;; Estimated maximum stack depth 5
   913 ;; ---------------------------------------------------------------------------------
   914 ;; Call Graph Graphs:
   915 ;; _main (ROOT)
   916 ;;   _initPin
   917 ;;     _initPB2_AsHighResistence
   918 ;;     _initPB3
   919 ;;     _initPB4
   920 ;;     _initPB5
   921 ;;   _setPinInitVaule
   922 ;;     _setPB3
   923 ;;     _setPB4
   924 ;;     _setPB5
   925 ;;   _selectAdChannel
   926 ;;   _clock_config
   927 ;;   _timer1_config
   928 ;;   _timer1_interrupt_config
   929 ;;   _adc_test_init
   930 ;;   _startTwentyMinTimer
   931 ;;   _adc_start
   932 ;;   _process_AD_Converter_Value
   933 ;;     _getAD_ConvertFlag
   934 ;;     _setAD_ConvertFlag
   935 ;;     _AD_Sample
   936 ;;     _adc_test_init
   937 ;;     _adc_start
   938 ;;   _isPermitSampleTime
   939 ;;   _clrSampeTime
   940 ;;   _isFinishedTwentyMinTimer
   941 ;;   _getAdOriginalCh13Value
   942 ;;     _FilterCh13
   943 ;;   _pwm_start
   944 ;;   _setPB3
   945 ;;   _setPB4
   946 ;;   _setPB5
   947 ;;   _clearTwentyMinTimer
   948 ;;   _startTwelveHourTimer
   949 ;;   _isFinishedTwelveHoursTimer
   950 ;;   _clearTwelveHoursTimer
   951 ;;   _startThreeHoursTimer
   952 ;;   _isFinishedThreeHoursTimer
   953 ;;   _clearThreeHoursTimer
   954 ;;   _startOneHoursTimer
   955 ;;   _isFinishedOneHoursTimer
   956 ;;   _resetAllTimer
   957 ;;     _clearTwelveHoursTimer
   958 ;;     _clearThreeHoursTimer
   959 ;;     _clearOneHoursTimer
   960 ;;     _clearTwentyMinTimer
   961 ;;   _setWaitResetFlag
   962 ;;   _reset
   963 ;;
   964 ;; _ISR (ROOT)
   965 ;;   i1_setAD_ConvertFlag
   966 ;;   _adc_get
   967 ;;   _vPutSampleDataIntoTable
   968 ;;     _Filter
   969 ;;     _getWaitResetFlag
   970 ;;     _setPWM_Width
   971 ;;     _adc_get (ARG)
   972 ;;
   973 ;; Address spaces:
   974 ;;Name               Size   Autos  Total    Cost      Usage
   975 ;;BANK3               60      0       0      10        0.0%
   976 ;;BITBANK3            60      0       0       9        0.0%
   977 ;;SFR3                 0      0       0       4        0.0%
   978 ;;BITSFR3              0      0       0       4        0.0%
   979 ;;BANK2               60      0       0      12        0.0%
   980 ;;BITBANK2            60      0       0      11        0.0%
   981 ;;SFR2                 0      0       0       5        0.0%
   982 ;;BITSFR2              0      0       0       5        0.0%
   983 ;;SFR1                 0      0       0       2        0.0%
   984 ;;BITSFR1              0      0       0       2        0.0%
   985 ;;BANK1               50     14      30       8       60.0%
   986 ;;BITBANK1            50      0       0       7        0.0%
   987 ;;CODE                 0      0       0       0        0.0%
   988 ;;DATA                 0      0      81       6        0.0%
   989 ;;ABS                  0      0      79       3        0.0%
   990 ;;NULL                 0      0       0       0        0.0%
   991 ;;STACK                0      0       8       2        0.0%
   992 ;;BANK0               50     1D      3B       5       73.8%
   993 ;;BITBANK0            50      0       0       4        0.0%
   994 ;;SFR0                 0      0       0       1        0.0%
   995 ;;BITSFR0              0      0       0       1        0.0%
   996 ;;COMMON               E      D       E       1      100.0%
   997 ;;BITCOMMON            E      0       0       0        0.0%
   998                           
   999                           
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 516 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  ucChValue       2   16[BANK1 ] unsigned int 
  1007 ;;  uiCh13Value     2   18[BANK1 ] unsigned int 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  2  732[COMMON] int 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 17F/0
  1014 ;;		On exit  : 40/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       4       0       0
  1019 ;;      Temps:          0       0       1       0       0
  1020 ;;      Totals:         0       0       5       0       0
  1021 ;;Total ram usage:        5 bytes
  1022 ;; Hardware stack levels required when called:    5
  1023 ;; This function calls:
  1024 ;;		_initPin
  1025 ;;		_setPinInitVaule
  1026 ;;		_selectAdChannel
  1027 ;;		_clock_config
  1028 ;;		_timer1_config
  1029 ;;		_timer1_interrupt_config
  1030 ;;		_adc_test_init
  1031 ;;		_startTwentyMinTimer
  1032 ;;		_adc_start
  1033 ;;		_process_AD_Converter_Value
  1034 ;;		_isPermitSampleTime
  1035 ;;		_clrSampeTime
  1036 ;;		_isFinishedTwentyMinTimer
  1037 ;;		_getAdOriginalCh13Value
  1038 ;;		_pwm_start
  1039 ;;		_setPB3
  1040 ;;		_setPB4
  1041 ;;		_setPB5
  1042 ;;		_clearTwentyMinTimer
  1043 ;;		_startTwelveHourTimer
  1044 ;;		_isFinishedTwelveHoursTimer
  1045 ;;		_clearTwelveHoursTimer
  1046 ;;		_startThreeHoursTimer
  1047 ;;		_isFinishedThreeHoursTimer
  1048 ;;		_clearThreeHoursTimer
  1049 ;;		_startOneHoursTimer
  1050 ;;		_isFinishedOneHoursTimer
  1051 ;;		_resetAllTimer
  1052 ;;		_setWaitResetFlag
  1053 ;;		_reset
  1054 ;; This function is called by:
  1055 ;;		Startup code after reset
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058  0217                     _main:	
  1059                           
  1060                           ;main.c: 517: enum systemStep {
  1061                           ;main.c: 518: INIT_STEP = 0,
  1062                           ;main.c: 519: START_UP_PWM_STEP,
  1063                           ;main.c: 520: CHECK_10_HOUR_TIMER_STEP,
  1064                           ;main.c: 521: STARTUP_3_HOUR_TIMER_STEP,
  1065                           ;main.c: 522: CHECK_3_HOUR_TIMER_STEP,
  1066                           ;main.c: 523: STARTUP_1_HOUR_TIMER_STEP,
  1067                           ;main.c: 524: CHECK_1_HOUR_TIMER_STEP,
  1068                           ;main.c: 525: READY_FOR_RESET_STEP = 99,
  1069                           ;main.c: 526: DELAY_ONE_SECOND_FOR_PWM,
  1070                           ;main.c: 527: MEET_RESET_CONDITION_STEP,
  1071                           ;main.c: 528: RESET_STEP,
  1072                           ;main.c: 529: };
  1073                           ;main.c: 531: static enum systemStep ucStep = INIT_STEP;
  1074                           
  1075                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1076  0217  118A  24C4  118A   	fcall	_initPin
  1077                           
  1078                           ;main.c: 545: setPinInitVaule();
  1079  021A  118A  24F5  118A   	fcall	_setPinInitVaule
  1080                           
  1081                           ;main.c: 546: selectAdChannel();
  1082  021D  118A  25D6  118A   	fcall	_selectAdChannel
  1083                           
  1084                           ;main.c: 548: clock_config();
  1085  0220  118A  25CA  118A   	fcall	_clock_config
  1086                           
  1087                           ;main.c: 549: timer1_config();
  1088  0223  118A  25B8  118A   	fcall	_timer1_config
  1089                           
  1090                           ;main.c: 550: timer1_interrupt_config();
  1091  0226  118A  25DD  118A   	fcall	_timer1_interrupt_config
  1092                           
  1093                           ;main.c: 552: adc_test_init(12,3);
  1094  0229  3003               	movlw	3
  1095  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1096  022B  00B5               	movwf	?_adc_test_init
  1097  022C  300C               	movlw	12
  1098  022D  118A  24A5  118A   	fcall	_adc_test_init
  1099                           
  1100                           ;main.c: 558: startTwentyMinTimer( 60 );
  1101  0230  303C               	movlw	60
  1102  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0232  00B5               	movwf	?_startTwentyMinTimer
  1104  0233  01B6               	clrf	?_startTwentyMinTimer+1
  1105  0234  118A  2581  118A   	fcall	_startTwentyMinTimer
  1106                           
  1107                           ;main.c: 559: _delay(1000);
  1108  0237  30F9               	movlw	249
  1109  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1110  0239  00CB               	movwf	??_main^(0+128)
  1111  023A                     u2217:	
  1112  023A  0064               	clrwdt
  1113  023B  0BCB               	decfsz	??_main^(0+128),f
  1114  023C  2A3A               	goto	u2217
  1115  023D  2A3E               	nop2	;nop
  1116  023E  0064               	clrwdt
  1117                           
  1118                           ;main.c: 560: adc_start();
  1119  023F  118A  24C0  118A   	fcall	_adc_start
  1120                           
  1121                           ;main.c: 588: switch(ucStep)
  1122  0242  2B8B               	goto	l4268
  1123  0243                     l4276:	
  1124                           
  1125                           ;main.c: 592: {
  1126                           ;main.c: 597: static unsigned char ucTimerP3s = 0;
  1127                           ;main.c: 599: if( isFinishedTwentyMinTimer() )
  1128  0243  118A  25AE  118A   	fcall	_isFinishedTwentyMinTimer
  1129  0246  3A00               	xorlw	0
  1130  0247  1903               	skipnz
  1131  0248  2A4D               	goto	l4282
  1132                           
  1133                           ;main.c: 600: {
  1134                           ;main.c: 601: ucStep = READY_FOR_RESET_STEP;
  1135  0249  3063               	movlw	99
  1136  024A  00D4               	movwf	main@ucStep
  1137                           
  1138                           ;main.c: 602: ucTimerP3s = 0;
  1139  024B  01D5               	clrf	main@ucTimerP3s
  1140                           
  1141                           ;main.c: 603: }
  1142  024C  2B8B               	goto	l4268
  1143  024D                     l4282:	
  1144                           
  1145                           ;main.c: 604: else
  1146                           ;main.c: 605: {
  1147                           ;main.c: 606: if( getAdOriginalCh13Value() > 90 )
  1148  024D  118A  23BC  118A   	fcall	_getAdOriginalCh13Value
  1149  0250  3000               	movlw	0
  1150  0251  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1151  0252  305B               	movlw	91
  1152  0253  1903               	skipnz
  1153  0254  023B               	subwf	?_getAdOriginalCh13Value,w
  1154  0255  1C03               	skipc
  1155  0256  2A59               	goto	l4286
  1156                           
  1157                           ;main.c: 607: {
  1158                           ;main.c: 608: ucTimerP3s++;
  1159  0257  0AD5               	incf	main@ucTimerP3s,f
  1160                           
  1161                           ;main.c: 609: }
  1162  0258  2A5A               	goto	l4288
  1163  0259                     l4286:	
  1164                           
  1165                           ;main.c: 610: else
  1166                           ;main.c: 611: ucTimerP3s = 0;
  1167  0259  01D5               	clrf	main@ucTimerP3s
  1168  025A                     l4288:	
  1169                           
  1170                           ;main.c: 613: if( ucTimerP3s >= 30)
  1171  025A  301E               	movlw	30
  1172  025B  0255               	subwf	main@ucTimerP3s,w
  1173  025C  1C03               	skipc
  1174  025D  2B8B               	goto	l4268
  1175                           
  1176                           ;main.c: 614: {
  1177                           ;main.c: 615: ucTimerP3s = 0;
  1178  025E  01D5               	clrf	main@ucTimerP3s
  1179  025F                     l4292:	
  1180                           
  1181                           ;main.c: 616: ucStep = START_UP_PWM_STEP;
  1182  025F  01D4               	clrf	main@ucStep
  1183  0260  0AD4               	incf	main@ucStep,f
  1184  0261  2B8B               	goto	l4268
  1185  0262                     l4294:	
  1186                           
  1187                           ;main.c: 627: {
  1188                           ;main.c: 632: pwm_start(150,249);
  1189  0262  30F9               	movlw	249
  1190  0263  00B5               	movwf	?_pwm_start
  1191  0264  3096               	movlw	150
  1192  0265  118A  252E  118A   	fcall	_pwm_start
  1193                           
  1194                           ;main.c: 634: setPB3(0);
  1195  0268  3000               	movlw	0
  1196  0269  118A  24FD  118A   	fcall	_setPB3
  1197                           
  1198                           ;main.c: 635: setPB4(1);
  1199  026C  3001               	movlw	1
  1200  026D  118A  2506  118A   	fcall	_setPB4
  1201                           
  1202                           ;main.c: 636: setPB5(0);
  1203  0270  3000               	movlw	0
  1204  0271  118A  250E  118A   	fcall	_setPB5
  1205                           
  1206                           ;main.c: 637: clearTwentyMinTimer();
  1207  0274  118A  252A  118A   	fcall	_clearTwentyMinTimer
  1208                           
  1209                           ;main.c: 638: startTwelveHourTimer( 240);
  1210  0277  30F0               	movlw	240
  1211  0278  00B5               	movwf	?_startTwelveHourTimer
  1212  0279  01B6               	clrf	?_startTwelveHourTimer+1
  1213  027A  118A  2573  118A   	fcall	_startTwelveHourTimer
  1214                           
  1215                           ;main.c: 639: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1216  027D  3002               	movlw	2
  1217  027E  2B85               	goto	L8
  1218  027F                     l4302:	
  1219                           ;main.c: 640: break;
  1220                           
  1221                           
  1222                           ;main.c: 644: {
  1223                           ;main.c: 649: static unsigned char ucTimerP5s = 0;
  1224                           ;main.c: 651: if( isFinishedTwelveHoursTimer () )
  1225  027F  118A  25A4  118A   	fcall	_isFinishedTwelveHoursTimer
  1226  0282  3A00               	xorlw	0
  1227  0283  1903               	skipnz
  1228  0284  2A87               	goto	l4306
  1229  0285                     l4304:	
  1230                           
  1231                           ;main.c: 652: ucStep = READY_FOR_RESET_STEP;
  1232  0285  3063               	movlw	99
  1233  0286  2B85               	goto	L8
  1234  0287                     l4306:	
  1235                           
  1236                           ;main.c: 653: else
  1237                           ;main.c: 654: {
  1238                           ;main.c: 655: if( getAdOriginalCh13Value() < 200 )
  1239  0287  118A  23BC  118A   	fcall	_getAdOriginalCh13Value
  1240  028A  3000               	movlw	0
  1241  028B  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1242  028C  30C8               	movlw	200
  1243  028D  1903               	skipnz
  1244  028E  023B               	subwf	?_getAdOriginalCh13Value,w
  1245  028F  1803               	skipnc
  1246  0290  2A93               	goto	l4310
  1247                           
  1248                           ;main.c: 656: ucTimerP5s++;
  1249  0291  0AD6               	incf	main@ucTimerP5s,f
  1250  0292  2A94               	goto	l4312
  1251  0293                     l4310:	
  1252                           
  1253                           ;main.c: 657: else
  1254                           ;main.c: 658: ucTimerP5s = 0;
  1255  0293  01D6               	clrf	main@ucTimerP5s
  1256  0294                     l4312:	
  1257                           
  1258                           ;main.c: 660: if( ucTimerP5s >= 10)
  1259  0294  300A               	movlw	10
  1260  0295  0256               	subwf	main@ucTimerP5s,w
  1261  0296  1C03               	skipc
  1262  0297  2B8B               	goto	l4268
  1263  0298  3003               	movlw	3
  1264                           
  1265                           ;main.c: 661: {
  1266                           ;main.c: 662: ucTimerP5s = 0;
  1267  0299  01D6               	clrf	main@ucTimerP5s
  1268                           
  1269                           ;main.c: 663: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1270  029A  2B85               	goto	L8
  1271  029B                     l4318:	
  1272                           
  1273                           ;main.c: 671: {
  1274                           ;main.c: 672: clearTwelveHoursTimer();
  1275  029B  118A  251D  118A   	fcall	_clearTwelveHoursTimer
  1276                           
  1277                           ;main.c: 673: startThreeHoursTimer(180);
  1278  029E  30B4               	movlw	180
  1279  029F  00B5               	movwf	?_startThreeHoursTimer
  1280  02A0  01B6               	clrf	?_startThreeHoursTimer+1
  1281  02A1  118A  2565  118A   	fcall	_startThreeHoursTimer
  1282                           
  1283                           ;main.c: 674: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1284  02A4  3004               	movlw	4
  1285  02A5  2B85               	goto	L8
  1286  02A6                     l4322:	
  1287                           ;main.c: 675: break;
  1288                           
  1289                           
  1290                           ;main.c: 679: {
  1291                           ;main.c: 680: static unsigned char ucTimerP5s = 0;
  1292                           ;main.c: 682: if( isFinishedThreeHoursTimer() )
  1293  02A6  118A  259A  118A   	fcall	_isFinishedThreeHoursTimer
  1294  02A9  3A00               	xorlw	0
  1295  02AA  1D03               	btfss	3,2
  1296  02AB  2A85               	goto	l4304
  1297                           
  1298                           ;main.c: 684: else
  1299                           ;main.c: 685: {
  1300                           ;main.c: 686: if( getAdOriginalCh13Value() < 65 )
  1301  02AC  118A  23BC  118A   	fcall	_getAdOriginalCh13Value
  1302  02AF  3000               	movlw	0
  1303  02B0  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1304  02B1  3041               	movlw	65
  1305  02B2  1903               	skipnz
  1306  02B3  023B               	subwf	?_getAdOriginalCh13Value,w
  1307  02B4  1803               	skipnc
  1308  02B5  2AB8               	goto	l4330
  1309                           
  1310                           ;main.c: 687: ucTimerP5s++;
  1311  02B6  0AD2               	incf	main@cTimerP5s_786,f
  1312  02B7  2AB9               	goto	l4332
  1313  02B8                     l4330:	
  1314                           
  1315                           ;main.c: 688: else
  1316                           ;main.c: 689: ucTimerP5s = 0;
  1317  02B8  01D2               	clrf	main@cTimerP5s_786
  1318  02B9                     l4332:	
  1319                           
  1320                           ;main.c: 691: if( ucTimerP5s >= 10)
  1321  02B9  300A               	movlw	10
  1322  02BA  0252               	subwf	main@cTimerP5s_786,w
  1323  02BB  1C03               	skipc
  1324  02BC  2B8B               	goto	l4268
  1325  02BD  3005               	movlw	5
  1326                           
  1327                           ;main.c: 692: {
  1328                           ;main.c: 693: ucTimerP5s = 0;
  1329  02BE  01D2               	clrf	main@cTimerP5s_786
  1330                           
  1331                           ;main.c: 694: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1332  02BF  2B85               	goto	L8
  1333  02C0                     l4338:	
  1334                           
  1335                           ;main.c: 701: {
  1336                           ;main.c: 702: clearThreeHoursTimer();
  1337  02C0  118A  2522  118A   	fcall	_clearThreeHoursTimer
  1338                           
  1339                           ;main.c: 703: startOneHoursTimer( 120 );
  1340  02C3  3078               	movlw	120
  1341  02C4  00B5               	movwf	?_startOneHoursTimer
  1342  02C5  01B6               	clrf	?_startOneHoursTimer+1
  1343  02C6  118A  2557  118A   	fcall	_startOneHoursTimer
  1344                           
  1345                           ;main.c: 704: setPB3(1);
  1346  02C9  3001               	movlw	1
  1347  02CA  118A  24FD  118A   	fcall	_setPB3
  1348                           
  1349                           ;main.c: 705: setPB4(0);
  1350  02CD  3000               	movlw	0
  1351  02CE  118A  2506  118A   	fcall	_setPB4
  1352                           
  1353                           ;main.c: 706: setPB5(1);
  1354  02D1  3001               	movlw	1
  1355  02D2  118A  250E  118A   	fcall	_setPB5
  1356                           
  1357                           ;main.c: 707: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1358  02D5  3006               	movlw	6
  1359  02D6  2B85               	goto	L8
  1360  02D7                     l4350:	
  1361                           ;main.c: 708: break;
  1362                           
  1363                           
  1364                           ;main.c: 712: {
  1365                           ;main.c: 717: static unsigned int uiTimerOneP5s = 0;
  1366                           ;main.c: 718: static unsigned int uiTimerTwoP5s = 0;
  1367                           ;main.c: 719: static unsigned int uiTimerThreeP5s = 0;
  1368                           ;main.c: 721: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1369  02D7  118A  23BC  118A   	fcall	_getAdOriginalCh13Value
  1370  02DA  083C               	movf	?_getAdOriginalCh13Value+1,w
  1371  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  1372  02DC  00CF               	movwf	(main@uiCh13Value+1)^(0+128)
  1373  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1374  02DE  083B               	movf	?_getAdOriginalCh13Value,w
  1375  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1376  02E0  00CE               	movwf	main@uiCh13Value^(0+128)
  1377                           
  1378                           ;main.c: 724: if( isFinishedOneHoursTimer() )
  1379  02E1  118A  258F  118A   	fcall	_isFinishedOneHoursTimer
  1380  02E4  3A00               	xorlw	0
  1381  02E5  1D03               	btfss	3,2
  1382  02E6  2A85               	goto	l4304
  1383                           
  1384                           ;main.c: 726: else
  1385                           ;main.c: 727: {
  1386                           ;main.c: 728: if( uiCh13Value > 90 )
  1387  02E7  3000               	movlw	0
  1388  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1389  02E9  024F               	subwf	(main@uiCh13Value+1)^(0+128),w
  1390  02EA  305B               	movlw	91
  1391  02EB  1903               	skipnz
  1392  02EC  024E               	subwf	main@uiCh13Value^(0+128),w
  1393  02ED  1C03               	skipc
  1394  02EE  2AFC               	goto	l4364
  1395                           
  1396                           ;main.c: 729: {
  1397                           ;main.c: 730: if( uiTimerOneP5s <= 10 )
  1398  02EF  3000               	movlw	0
  1399  02F0  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1400  02F1  300B               	movlw	11
  1401  02F2  1903               	skipnz
  1402  02F3  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1403  02F4  1803               	skipnc
  1404  02F5  2AF9               	goto	l4362
  1405                           
  1406                           ;main.c: 731: uiTimerOneP5s++;
  1407  02F6  0AA4               	incf	main@uiTimerOneP5s^(0+128),f
  1408  02F7  1903               	skipnz
  1409  02F8  0AA5               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1410  02F9                     l4362:	
  1411                           
  1412                           ;main.c: 733: uiTimerThreeP5s = 0;
  1413  02F9  01A6               	clrf	main@uiTimerTwoP5s^(0+128)
  1414  02FA  01A7               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1415                           
  1416                           ;main.c: 734: }
  1417  02FB  2AFE               	goto	l4366
  1418  02FC                     l4364:	
  1419                           
  1420                           ;main.c: 735: else
  1421                           ;main.c: 736: {
  1422                           ;main.c: 737: uiTimerOneP5s = 0;
  1423  02FC  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1424  02FD  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1425  02FE                     l4366:	
  1426                           
  1427                           ;main.c: 738: }
  1428                           ;main.c: 741: if(uiTimerOneP5s > 10)
  1429  02FE  3000               	movlw	0
  1430  02FF  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1431  0300  300B               	movlw	11
  1432  0301  1903               	skipnz
  1433  0302  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1434                           
  1435                           ;main.c: 742: {
  1436                           ;main.c: 743: setPB3(0);
  1437  0303  3000               	movlw	0
  1438  0304  1C03               	skipc
  1439  0305  2B1A               	goto	L9
  1440  0306  118A  24FD  118A   	fcall	_setPB3
  1441                           
  1442                           ;main.c: 744: setPB4(1);
  1443  0309  3001               	movlw	1
  1444  030A  118A  2506  118A   	fcall	_setPB4
  1445                           
  1446                           ;main.c: 745: setPB5(0);
  1447  030D  3000               	movlw	0
  1448  030E  118A  250E  118A   	fcall	_setPB5
  1449                           
  1450                           ;main.c: 747: uiTimerOneP5s = 0;
  1451  0311  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0312  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1453  0313  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1454                           
  1455                           ;main.c: 748: uiTimerTwoP5s = 0;
  1456  0314  01A6               	clrf	main@uiTimerTwoP5s^(0+128)
  1457  0315  01A7               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1458                           
  1459                           ;main.c: 750: resetAllTimer();
  1460  0316  118A  2516  118A   	fcall	_resetAllTimer
  1461  0319  2A5F               	goto	l4292
  1462  031A                     L9:	
  1463                           ;main.c: 754: else
  1464                           ;main.c: 755: {
  1465                           ;main.c: 756: if( uiCh13Value < 65 )
  1466                           
  1467  031A  024F               	subwf	(main@uiCh13Value+1)^(0+128),w
  1468  031B  3041               	movlw	65
  1469  031C  1903               	skipnz
  1470  031D  024E               	subwf	main@uiCh13Value^(0+128),w
  1471  031E  1803               	skipnc
  1472  031F  2B2B               	goto	l4384
  1473                           
  1474                           ;main.c: 757: {
  1475                           ;main.c: 759: if( uiTimerTwoP5s <= 10)
  1476  0320  3000               	movlw	0
  1477  0321  0227               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1478  0322  300B               	movlw	11
  1479  0323  1903               	skipnz
  1480  0324  0226               	subwf	main@uiTimerTwoP5s^(0+128),w
  1481  0325  1803               	skipnc
  1482  0326  2B2D               	goto	l4386
  1483                           
  1484                           ;main.c: 760: uiTimerTwoP5s++;
  1485  0327  0AA6               	incf	main@uiTimerTwoP5s^(0+128),f
  1486  0328  1903               	skipnz
  1487  0329  0AA7               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1488  032A  2B2D               	goto	l4386
  1489  032B                     l4384:	
  1490                           
  1491                           ;main.c: 765: uiTimerThreeP5s = 0;
  1492  032B  01A6               	clrf	main@uiTimerTwoP5s^(0+128)
  1493  032C  01A7               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1494  032D                     l4386:	
  1495                           
  1496                           ;main.c: 766: }
  1497                           ;main.c: 768: if(uiTimerTwoP5s > 10)
  1498  032D  3000               	movlw	0
  1499  032E  0227               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1500  032F  300B               	movlw	11
  1501  0330  1903               	skipnz
  1502  0331  0226               	subwf	main@uiTimerTwoP5s^(0+128),w
  1503  0332  1C03               	skipc
  1504  0333  2B8B               	goto	l4268
  1505                           
  1506                           ;main.c: 769: {
  1507                           ;main.c: 770: setPB3(1);
  1508  0334  3001               	movlw	1
  1509  0335  118A  24FD  118A   	fcall	_setPB3
  1510                           
  1511                           ;main.c: 771: setPB4(0);
  1512  0338  3000               	movlw	0
  1513  0339  118A  2506  118A   	fcall	_setPB4
  1514                           
  1515                           ;main.c: 772: setPB5(1);
  1516  033C  3001               	movlw	1
  1517  033D  118A  250E  118A   	fcall	_setPB5
  1518  0340  2B8B               	goto	l4268
  1519  0341                     l4390:	
  1520                           
  1521                           ;main.c: 791: {
  1522                           ;main.c: 792: setPB3(0);
  1523  0341  3000               	movlw	0
  1524  0342  118A  24FD  118A   	fcall	_setPB3
  1525                           
  1526                           ;main.c: 793: setPB4(0);
  1527  0345  3000               	movlw	0
  1528  0346  118A  2506  118A   	fcall	_setPB4
  1529                           
  1530                           ;main.c: 794: setPB5(1);
  1531  0349  3001               	movlw	1
  1532  034A  118A  250E  118A   	fcall	_setPB5
  1533                           
  1534                           ;main.c: 797: setWaitResetFlag(1);
  1535  034D  3001               	movlw	1
  1536  034E  118A  25DA  118A   	fcall	_setWaitResetFlag
  1537                           
  1538                           ;main.c: 798: pwm_start(150,249);
  1539  0351  30F9               	movlw	249
  1540  0352  00B5               	movwf	?_pwm_start
  1541  0353  3096               	movlw	150
  1542  0354  118A  252E  118A   	fcall	_pwm_start
  1543                           
  1544                           ;main.c: 804: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1545  0357  3064               	movlw	100
  1546  0358  2B85               	goto	L8
  1547  0359                     l4394:	
  1548                           ;main.c: 805: break;
  1549                           
  1550                           
  1551                           ;main.c: 809: {
  1552                           ;main.c: 810: static unsigned ucDelay1s = 0;
  1553                           ;main.c: 811: if(ucDelay1s <= 50)
  1554  0359  3000               	movlw	0
  1555  035A  1683               	bsf	3,5	;RP0=1, select bank1
  1556  035B  0223               	subwf	(main@ucDelay1s+1)^(0+128),w
  1557  035C  3033               	movlw	51
  1558  035D  1903               	skipnz
  1559  035E  0222               	subwf	main@ucDelay1s^(0+128),w
  1560  035F  1803               	skipnc
  1561  0360  2B65               	goto	l4398
  1562                           
  1563                           ;main.c: 812: ucDelay1s++;
  1564  0361  0AA2               	incf	main@ucDelay1s^(0+128),f
  1565  0362  1903               	skipnz
  1566  0363  0AA3               	incf	(main@ucDelay1s+1)^(0+128),f
  1567  0364  2B8B               	goto	l4268
  1568  0365                     l4398:	
  1569  0365  3065               	movlw	101
  1570                           
  1571                           ;main.c: 813: else
  1572                           ;main.c: 814: {
  1573                           ;main.c: 815: ucDelay1s = 0;
  1574  0366  01A2               	clrf	main@ucDelay1s^(0+128)
  1575  0367  01A3               	clrf	(main@ucDelay1s+1)^(0+128)
  1576                           
  1577                           ;main.c: 816: ucStep = MEET_RESET_CONDITION_STEP;
  1578  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0369  2B85               	goto	L8
  1580  036A                     l4402:	
  1581                           
  1582                           ;main.c: 826: {
  1583                           ;main.c: 827: static unsigned char ucTimerP5s = 0;
  1584                           ;main.c: 828: unsigned int ucChValue = getAdOriginalCh13Value();
  1585  036A  118A  23BC  118A   	fcall	_getAdOriginalCh13Value
  1586  036D  083C               	movf	?_getAdOriginalCh13Value+1,w
  1587  036E  1683               	bsf	3,5	;RP0=1, select bank1
  1588  036F  00CD               	movwf	(main@ucChValue+1)^(0+128)
  1589  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0371  083B               	movf	?_getAdOriginalCh13Value,w
  1591  0372  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0373  00CC               	movwf	main@ucChValue^(0+128)
  1593                           
  1594                           ;main.c: 830: if( ucChValue > 50 )
  1595  0374  3000               	movlw	0
  1596  0375  024D               	subwf	(main@ucChValue+1)^(0+128),w
  1597  0376  3033               	movlw	51
  1598  0377  1903               	skipnz
  1599  0378  024C               	subwf	main@ucChValue^(0+128),w
  1600  0379  1C03               	skipc
  1601  037A  2B7E               	goto	l4408
  1602                           
  1603                           ;main.c: 831: ucTimerP5s++;
  1604  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1605  037C  0AD3               	incf	main@cTimerP5s_792,f
  1606  037D  2B80               	goto	l4410
  1607  037E                     l4408:	
  1608                           
  1609                           ;main.c: 832: else
  1610                           ;main.c: 833: ucTimerP5s = 0;
  1611  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1612  037F  01D3               	clrf	main@cTimerP5s_792
  1613  0380                     l4410:	
  1614                           
  1615                           ;main.c: 835: if(ucTimerP5s >= 50)
  1616  0380  3032               	movlw	50
  1617  0381  0253               	subwf	main@cTimerP5s_792,w
  1618  0382  1C03               	skipc
  1619  0383  2B8B               	goto	l4268
  1620                           
  1621                           ;main.c: 836: ucStep = RESET_STEP;
  1622  0384  3066               	movlw	102
  1623  0385                     L8:	
  1624  0385  00D4               	movwf	main@ucStep
  1625  0386  2B8B               	goto	l4268
  1626  0387                     l4414:	
  1627                           
  1628                           ;main.c: 841: {
  1629                           ;main.c: 842: ucStep = INIT_STEP;
  1630  0387  01D4               	clrf	main@ucStep
  1631                           
  1632                           ;main.c: 843: reset();
  1633  0388  118A  25E2  118A   	fcall	_reset
  1634  038B                     l4268:	
  1635                           ;main.c: 844: break;
  1636                           
  1637  038B  0064               	clrwdt	;#
  1638                           
  1639                           ;main.c: 573: process_AD_Converter_Value();
  1640  038C  118A  2474  118A   	fcall	_process_AD_Converter_Value
  1641                           
  1642                           ;main.c: 575: if( isPermitSampleTime() )
  1643  038F  118A  25D2  118A   	fcall	_isPermitSampleTime
  1644  0392  3A00               	xorlw	0
  1645  0393  1903               	skipnz
  1646  0394  2B8B               	goto	l4268
  1647                           
  1648                           ;main.c: 576: {
  1649                           ;main.c: 579: clrSampeTime();
  1650  0395  118A  25E0  118A   	fcall	_clrSampeTime
  1651  0398  0854               	movf	main@ucStep,w
  1652                           
  1653                           ; Switch size 1, requested type "space"
  1654                           ; Number of cases is 11, Range of values is 0 to 102
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte           34    18 (average)
  1658                           ; direct_byte          213     7 (fixed)
  1659                           ; jumptable            260     6 (fixed)
  1660                           ; rangetable           107     6 (fixed)
  1661                           ; spacedrange          212     9 (fixed)
  1662                           ; locatedrange         103     3 (fixed)
  1663                           ;	Chosen strategy is simple_byte
  1664  0399  3A00               	xorlw	0	; case 0
  1665  039A  1903               	skipnz
  1666  039B  2A43               	goto	l4276
  1667  039C  3A01               	xorlw	1	; case 1
  1668  039D  1903               	skipnz
  1669  039E  2A62               	goto	l4294
  1670  039F  3A03               	xorlw	3	; case 2
  1671  03A0  1903               	skipnz
  1672  03A1  2A7F               	goto	l4302
  1673  03A2  3A01               	xorlw	1	; case 3
  1674  03A3  1903               	skipnz
  1675  03A4  2A9B               	goto	l4318
  1676  03A5  3A07               	xorlw	7	; case 4
  1677  03A6  1903               	skipnz
  1678  03A7  2AA6               	goto	l4322
  1679  03A8  3A01               	xorlw	1	; case 5
  1680  03A9  1903               	skipnz
  1681  03AA  2AC0               	goto	l4338
  1682  03AB  3A03               	xorlw	3	; case 6
  1683  03AC  1903               	skipnz
  1684  03AD  2AD7               	goto	l4350
  1685  03AE  3A65               	xorlw	101	; case 99
  1686  03AF  1903               	skipnz
  1687  03B0  2B41               	goto	l4390
  1688  03B1  3A07               	xorlw	7	; case 100
  1689  03B2  1903               	skipnz
  1690  03B3  2B59               	goto	l4394
  1691  03B4  3A01               	xorlw	1	; case 101
  1692  03B5  1903               	skipnz
  1693  03B6  2B6A               	goto	l4402
  1694  03B7  3A03               	xorlw	3	; case 102
  1695  03B8  1903               	skipnz
  1696  03B9  2B87               	goto	l4414
  1697  03BA  2BBB               	goto	l736
  1698  03BB                     l736:	
  1699  03BB  2B8B               	goto	l4268
  1700  03BC                     __end_of_main:	
  1701                           
  1702                           	psect	text1272
  1703  03BC                     __ptext1272:	
  1704 ;; =============== function _main ends ============
  1705                           
  1706                           
  1707 ;; *************** function _getAdOriginalCh13Value *****************
  1708 ;; Defined at:
  1709 ;;		line 372 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  2   27[BANK0 ] unsigned int 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 60/0
  1720 ;;		On exit  : 160/0
  1721 ;;		Unchanged: FFE00/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       2       0       0       0
  1724 ;;      Locals:         0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0
  1726 ;;      Totals:         0       2       0       0       0
  1727 ;;Total ram usage:        2 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    4
  1730 ;; This function calls:
  1731 ;;		_FilterCh13
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736  03BC                     _getAdOriginalCh13Value:	
  1737                           
  1738                           ;common.c: 374: return FilterCh13(uiSampleCh13);
  1739                           
  1740                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1741  03BC  30B0               	movlw	_uiSampleCh13& (0+255)
  1742  03BD  23C3               	fcall	_FilterCh13
  1743  03BE  0836               	movf	?_FilterCh13+1,w
  1744  03BF  00BC               	movwf	?_getAdOriginalCh13Value+1
  1745  03C0  0835               	movf	?_FilterCh13,w
  1746  03C1  00BB               	movwf	?_getAdOriginalCh13Value
  1747  03C2  0008               	return
  1748  03C3                     __end_of_getAdOriginalCh13Value:	
  1749  03C3                     __ptext1280:	
  1750 ;; =============== function _getAD_ConvertFlag ends ============
  1751                           
  1752                           
  1753 ;; *************** function _FilterCh13 *****************
  1754 ;; Defined at:
  1755 ;;		line 76 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  tmpValue        1    wreg     PTR unsigned int 
  1758 ;;		 -> uiSampleCh13(6), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  tmpValue        1    0[BANK1 ] PTR unsigned int 
  1761 ;;		 -> uiSampleCh13(6), 
  1762 ;;  cir             2   11[BANK1 ] int 
  1763 ;;  filter_buf      6    5[BANK1 ] unsigned int [3]
  1764 ;;  filter_sum      2    3[BANK1 ] unsigned int 
  1765 ;;  filter_temp     2    1[BANK1 ] unsigned int 
  1766 ;;  i               1   14[BANK1 ] unsigned char 
  1767 ;;  j               1   13[BANK1 ] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2   21[BANK0 ] unsigned int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1772 ;; Tracked objects:
  1773 ;;		On entry : 60/0
  1774 ;;		On exit  : 160/0
  1775 ;;		Unchanged: FFE00/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       2       0       0       0
  1778 ;;      Locals:         0       0      15       0       0
  1779 ;;      Temps:          0       4       0       0       0
  1780 ;;      Totals:         0       6      15       0       0
  1781 ;;Total ram usage:       21 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_getAdOriginalCh13Value
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790  03C3                     _FilterCh13:	
  1791                           
  1792                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1793                           ;FilterCh13@tmpValue stored from wreg
  1794  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1795  03C4  00BC               	movwf	FilterCh13@tmpValue^(0+128)
  1796  03C5  01C9               	clrf	FilterCh13@j^(0+128)
  1797                           
  1798                           ;common.c: 79: unsigned int filter_temp = 0, filter_sum = 0;
  1799  03C6  01BD               	clrf	FilterCh13@filter_temp^(0+128)
  1800  03C7  01BE               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1801  03C8  01BF               	clrf	FilterCh13@filter_sum^(0+128)
  1802  03C9  01C0               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1803                           
  1804                           ;common.c: 81: unsigned int filter_buf[3];
  1805                           ;common.c: 83: for(int cir = 0;cir < 3; cir++)
  1806  03CA  01C7               	clrf	FilterCh13@cir^(0+128)
  1807  03CB  01C8               	clrf	(FilterCh13@cir+1)^(0+128)
  1808  03CC                     l4166:	
  1809                           
  1810                           ;common.c: 84: filter_buf[cir] = *tmpValue++;
  1811  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  1812  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  1813  03CE  083C               	movf	FilterCh13@tmpValue^(0+128),w
  1814  03CF  0084               	movwf	4
  1815  03D0  1383               	bcf	3,7	;select IRP bank0
  1816  03D1  2458  118A         	fcall	PL4	;call to abstracted procedure
  1817  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  1818  03D4  1003               	clrc
  1819  03D5  0D47               	rlf	FilterCh13@cir^(0+128),w
  1820  03D6  2464  118A         	fcall	PL7	;call to abstracted procedure
  1821  03D8  0ABC               	incf	FilterCh13@tmpValue^(0+128),f
  1822  03D9  0ABC               	incf	FilterCh13@tmpValue^(0+128),f
  1823  03DA  0AC7               	incf	FilterCh13@cir^(0+128),f
  1824  03DB  1903               	skipnz
  1825  03DC  0AC8               	incf	(FilterCh13@cir+1)^(0+128),f
  1826  03DD  0848               	movf	(FilterCh13@cir+1)^(0+128),w
  1827  03DE  3A80               	xorlw	128
  1828  03DF  00FF               	movwf	127
  1829  03E0  3080               	movlw	128
  1830  03E1  027F               	subwf	127,w
  1831  03E2  1D03               	skipz
  1832  03E3  2BE6               	goto	u1915
  1833  03E4  3003               	movlw	3
  1834  03E5  0247               	subwf	FilterCh13@cir^(0+128),w
  1835  03E6                     u1915:	
  1836  03E6  1C03               	skipc
  1837  03E7  2BCC               	goto	l4166
  1838                           
  1839                           ;common.c: 88: for(j = 0; j < 3 - 1; j++)
  1840  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  1841  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  1842  03EA  01C9               	clrf	FilterCh13@j^(0+128)
  1843                           
  1844                           ;common.c: 89: {
  1845                           ;common.c: 90: for(i = 0; i < 3 - 1 - j; i++)
  1846  03EB  01CA               	clrf	FilterCh13@i^(0+128)
  1847  03EC                     l4188:	
  1848  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1849  03ED  01B8               	clrf	??_FilterCh13+1
  1850  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  1851  03EF  0849               	movf	FilterCh13@j^(0+128),w
  1852  03F0  3C02               	sublw	2
  1853  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1854  03F2  00B7               	movwf	??_FilterCh13
  1855  03F3  1C03               	skipc
  1856  03F4  03B8               	decf	??_FilterCh13+1,f
  1857  03F5  0838               	movf	??_FilterCh13+1,w
  1858  03F6  3A80               	xorlw	128
  1859  03F7  3C80               	sublw	128
  1860  03F8  1D03               	skipz
  1861  03F9  2BFD               	goto	u1935
  1862  03FA  0837               	movf	??_FilterCh13,w
  1863  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1864  03FC  024A               	subwf	FilterCh13@i^(0+128),w
  1865  03FD                     u1935:	
  1866  03FD  1803               	btfsc	3,0
  1867  03FE  2C34               	goto	l4190
  1868                           
  1869                           ;common.c: 91: {
  1870                           ;common.c: 92: if(filter_buf[i] > filter_buf[i + 1])
  1871  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0401  1003               	clrc
  1874  0402  245F  118A         	fcall	PL6	;call to abstracted procedure
  1875  0404  2458  118A         	fcall	PL4	;call to abstracted procedure
  1876  0406  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0407  246E  118A         	fcall	PL9	;call to abstracted procedure
  1878  0409  0800               	movf	0,w
  1879  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1880  040B  00B9               	movwf	??_FilterCh13+2
  1881  040C  0A84               	incf	4,f
  1882  040D  0800               	movf	0,w
  1883  040E  00BA               	movwf	??_FilterCh13+3
  1884  040F  0838               	movf	??_FilterCh13+1,w
  1885  0410  023A               	subwf	??_FilterCh13+3,w
  1886  0411  1D03               	skipz
  1887  0412  2C15               	goto	u1925
  1888  0413  0837               	movf	??_FilterCh13,w
  1889  0414  0239               	subwf	??_FilterCh13+2,w
  1890  0415                     u1925:	
  1891  0415  1803               	skipnc
  1892  0416  2C31               	goto	l4186
  1893                           
  1894                           ;common.c: 93: {
  1895                           ;common.c: 95: filter_temp = filter_buf[i];
  1896  0417  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0418  1003               	clrc
  1898  0419  0D4A               	rlf	FilterCh13@i^(0+128),w
  1899  041A  3EC1               	addlw	FilterCh13@filter_buf& (0+255)
  1900  041B  0084               	movwf	4
  1901  041C  0800               	movf	0,w
  1902  041D  00BD               	movwf	FilterCh13@filter_temp^(0+128)
  1903  041E  0A84               	incf	4,f
  1904  041F  0800               	movf	0,w
  1905  0420  00BE               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1906                           
  1907                           ;common.c: 97: filter_buf[i] = filter_buf[i + 1];
  1908  0421  246E  118A         	fcall	PL9	;call to abstracted procedure
  1909  0423  2458  118A         	fcall	PL4	;call to abstracted procedure
  1910  0425  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0426  1003               	clrc
  1912  0427  0D4A               	rlf	FilterCh13@i^(0+128),w
  1913                           
  1914                           ;common.c: 99: filter_buf[i + 1] = filter_temp;
  1915  0428  2464  118A         	fcall	PL7	;call to abstracted procedure
  1916  042A  246E  118A         	fcall	PL9	;call to abstracted procedure
  1917  042C  083D               	movf	FilterCh13@filter_temp^(0+128),w
  1918  042D  0080               	movwf	0
  1919  042E  0A84               	incf	4,f
  1920  042F  083E               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1921  0430  0080               	movwf	0
  1922  0431                     l4186:	
  1923  0431  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0432  0ACA               	incf	FilterCh13@i^(0+128),f
  1925  0433  2BEC               	goto	l4188
  1926  0434                     l4190:	
  1927  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0435  3002               	movlw	2
  1929  0436  1303               	bcf	3,6	;RP1=0, select bank1
  1930  0437  0AC9               	incf	FilterCh13@j^(0+128),f
  1931  0438  0249               	subwf	FilterCh13@j^(0+128),w
  1932                           
  1933                           ;common.c: 100: }
  1934                           ;common.c: 101: }
  1935                           ;common.c: 102: }
  1936                           ;common.c: 104: for(i = 1; i < 3 - 1; i++)
  1937  0439  01CA               	clrf	FilterCh13@i^(0+128)
  1938  043A  1C03               	skipc
  1939  043B  2BEC               	goto	l4188
  1940  043C  0ACA               	incf	FilterCh13@i^(0+128),f
  1941                           
  1942                           ;common.c: 105: {
  1943                           ;common.c: 106: filter_sum += filter_buf[i];
  1944  043D  1003               	clrc
  1945  043E                     L12:	
  1946  043E  245F  118A         	fcall	PL6	;call to abstracted procedure
  1947  0440  2458  118A         	fcall	PL4	;call to abstracted procedure
  1948  0442  0837               	movf	??_FilterCh13,w
  1949  0443  1683               	bsf	3,5	;RP0=1, select bank1
  1950  0444  07BF               	addwf	FilterCh13@filter_sum^(0+128),f
  1951  0445  1803               	skipnc
  1952  0446  0AC0               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1953  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0448  0838               	movf	??_FilterCh13+1,w
  1955  0449  1683               	bsf	3,5	;RP0=1, select bank1
  1956  044A  07C0               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1957  044B  3002               	movlw	2
  1958  044C  0ACA               	incf	FilterCh13@i^(0+128),f
  1959  044D  024A               	subwf	FilterCh13@i^(0+128),w
  1960  044E  1C03               	skipc
  1961  044F  2C3E               	goto	L12
  1962                           
  1963                           ;common.c: 107: }
  1964                           ;common.c: 110: return (filter_sum >> 0 );
  1965  0450  0840               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1966  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0452  00B6               	movwf	?_FilterCh13+1
  1968  0453  1683               	bsf	3,5	;RP0=1, select bank1
  1969  0454  083F               	movf	FilterCh13@filter_sum^(0+128),w
  1970  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0456  00B5               	movwf	?_FilterCh13
  1972  0457  0008               	return
  1973  0458                     __end_of_FilterCh13:	
  1974  0458                     PL4:	
  1975  0458  0800               	movf	0,w
  1976  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1977  045A  00B7               	movwf	??_FilterCh13
  1978  045B  0A84               	incf	4,f
  1979  045C  0800               	movf	0,w
  1980  045D  00B8               	movwf	??_FilterCh13+1
  1981  045E  0008               	return
  1982  045F                     PL6:	
  1983  045F  0D4A               	rlf	FilterCh13@i^(0+128),w
  1984  0460  3EC1               	addlw	FilterCh13@filter_buf& (0+255)
  1985  0461  0084               	movwf	4
  1986  0462  1383               	bcf	3,7	;select IRP bank1
  1987  0463  0008               	return
  1988  0464                     PL7:	
  1989  0464  3EC1               	addlw	FilterCh13@filter_buf& (0+255)
  1990  0465  0084               	movwf	4
  1991  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0467  0837               	movf	??_FilterCh13,w
  1993  0468  0080               	movwf	0
  1994  0469  0A84               	incf	4,f
  1995  046A  0838               	movf	??_FilterCh13+1,w
  1996  046B  0080               	movwf	0
  1997  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1998  046D  0008               	return
  1999  046E                     PL9:	
  2000  046E  1003               	clrc
  2001  046F  0D4A               	rlf	FilterCh13@i^(0+128),w
  2002  0470  3E02               	addlw	2
  2003  0471  3EC1               	addlw	FilterCh13@filter_buf& (0+255)
  2004  0472  0084               	movwf	4
  2005  0473  0008               	return
  2006                           
  2007                           	psect	text1273
  2008  0474                     __ptext1273:	
  2009 ;; =============== function _getAdOriginalCh13Value ends ============
  2010                           
  2011                           
  2012 ;; *************** function _process_AD_Converter_Value *****************
  2013 ;; Defined at:
  2014 ;;		line 394 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 60/0
  2026 ;;		Unchanged: FFF9F/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    4
  2035 ;; This function calls:
  2036 ;;		_getAD_ConvertFlag
  2037 ;;		_setAD_ConvertFlag
  2038 ;;		_AD_Sample
  2039 ;;		_adc_test_init
  2040 ;;		_adc_start
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045  0474                     _process_AD_Converter_Value:	
  2046                           
  2047                           ;common.c: 395: if(getAD_ConvertFlag())
  2048                           
  2049                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2050  0474  248A  118A         	fcall	_getAD_ConvertFlag
  2051  0476  3A00               	xorlw	0
  2052  0477  1903               	skipnz
  2053  0478  0008               	return
  2054                           
  2055                           ;common.c: 396: {
  2056                           ;common.c: 397: setAD_ConvertFlag(0);
  2057  0479  3000               	movlw	0
  2058  047A  248E  118A         	fcall	_setAD_ConvertFlag
  2059                           
  2060                           ;common.c: 398: AD_Sample();
  2061  047C  2491  118A         	fcall	_AD_Sample
  2062                           
  2063                           ;common.c: 399: if(12 == sampleChannelSelect)
  2064  047E  0859               	movf	_sampleChannelSelect,w
  2065  047F  3A0C               	xorlw	12
  2066                           
  2067                           ;common.c: 400: adc_test_init(12,3);
  2068  0480  3003               	movlw	3
  2069  0481  00B5               	movwf	?_adc_test_init
  2070  0482  1D03               	skipz
  2071  0483  2C86               	goto	L11
  2072  0484  300C               	movlw	12
  2073  0485  2C87               	goto	L10
  2074  0486                     L11:	
  2075                           ;common.c: 401: else
  2076                           ;common.c: 402: adc_test_init(13,3);
  2077                           
  2078  0486  300D               	movlw	13
  2079  0487                     L10:	
  2080  0487  24A5  118A         	fcall	_adc_test_init
  2081                           
  2082                           ;common.c: 403: adc_start();
  2083  0489  2CC0               	ljmp	l4054
  2084  048A                     __end_of_process_AD_Converter_Value:	
  2085  048A                     __ptext1279:	
  2086 ;; =============== function _setAD_ConvertFlag ends ============
  2087                           
  2088                           
  2089 ;; *************** function _getAD_ConvertFlag *****************
  2090 ;; Defined at:
  2091 ;;		line 343 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      unsigned char 
  2098 ;; Registers used:
  2099 ;;		wreg
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 60/0
  2103 ;;		Unchanged: FFF9F/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0
  2108 ;;      Totals:         0       0       0       0       0
  2109 ;;Total ram usage:        0 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    3
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_process_AD_Converter_Value
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118  048A                     _getAD_ConvertFlag:	
  2119                           
  2120                           ;common.c: 344: return adc_convert_flag;
  2121                           
  2122                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2123  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2124  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2125  048C  084A               	movf	_adc_convert_flag,w
  2126  048D  0008               	return
  2127  048E                     __end_of_getAD_ConvertFlag:	
  2128  048E                     __ptext1278:	
  2129 ;; =============== function _AD_Sample ends ============
  2130                           
  2131                           
  2132 ;; *************** function _setAD_ConvertFlag *****************
  2133 ;; Defined at:
  2134 ;;		line 349 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  flag            1    wreg     unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  flag            1   21[BANK0 ] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;		None               void
  2141 ;; Registers used:
  2142 ;;		wreg
  2143 ;; Tracked objects:
  2144 ;;		On entry : 60/0
  2145 ;;		On exit  : 60/0
  2146 ;;		Unchanged: FFF9F/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         0       0       0       0       0
  2149 ;;      Locals:         0       1       0       0       0
  2150 ;;      Temps:          0       0       0       0       0
  2151 ;;      Totals:         0       1       0       0       0
  2152 ;;Total ram usage:        1 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    3
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_process_AD_Converter_Value
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161  048E                     _setAD_ConvertFlag:	
  2162                           
  2163                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2164                           ;setAD_ConvertFlag@flag stored from wreg
  2165  048E  00B5               	movwf	setAD_ConvertFlag@flag
  2166                           
  2167                           ;common.c: 350: adc_convert_flag = flag;
  2168  048F  00CA               	movwf	_adc_convert_flag
  2169  0490  0008               	return
  2170  0491                     __end_of_setAD_ConvertFlag:	
  2171  0491                     __ptext1277:	
  2172 ;; =============== function _initPin ends ============
  2173                           
  2174                           
  2175 ;; *************** function _AD_Sample *****************
  2176 ;; Defined at:
  2177 ;;		line 417 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 60/0
  2188 ;;		On exit  : 60/0
  2189 ;;		Unchanged: FFF9F/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2191 ;;      Params:         0       0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0
  2194 ;;      Totals:         0       0       0       0       0
  2195 ;;Total ram usage:        0 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_process_AD_Converter_Value
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204  0491                     _AD_Sample:	
  2205                           
  2206                           ;common.c: 418: if(sampleTimes < 3)
  2207                           
  2208                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2209  0491  3003               	movlw	3
  2210  0492  0250               	subwf	_sampleTimes,w
  2211  0493  1803               	skipnc
  2212  0494  0008               	return
  2213  0495  3003               	movlw	3
  2214                           
  2215                           ;common.c: 419: {
  2216                           ;common.c: 420: sampleTimes++;
  2217  0496  0AD0               	incf	_sampleTimes,f
  2218                           
  2219                           ;common.c: 422: if(sampleTimes >= 3)
  2220  0497  0250               	subwf	_sampleTimes,w
  2221  0498  1C03               	skipc
  2222  0499  0008               	return
  2223                           
  2224                           ;common.c: 423: {
  2225                           ;common.c: 424: sampleTimes = 0;
  2226  049A  01D0               	clrf	_sampleTimes
  2227                           
  2228                           ;common.c: 426: if(sampleChannelSelect == 12)
  2229  049B  0859               	movf	_sampleChannelSelect,w
  2230  049C  3A0C               	xorlw	12
  2231  049D  1D03               	skipz
  2232  049E  2CA2               	goto	l4226
  2233                           
  2234                           ;common.c: 427: {
  2235                           ;common.c: 428: sampleChannelSelect = 13;
  2236  049F  300D               	movlw	13
  2237  04A0  00D9               	movwf	_sampleChannelSelect
  2238                           
  2239                           ;common.c: 429: }
  2240  04A1  0008               	return
  2241  04A2                     l4226:	
  2242                           
  2243                           ;common.c: 431: else
  2244                           ;common.c: 432: {
  2245                           ;common.c: 433: sampleChannelSelect = 12;
  2246  04A2  300C               	movlw	12
  2247  04A3  00D9               	movwf	_sampleChannelSelect
  2248  04A4  0008               	return
  2249  04A5                     __end_of_AD_Sample:	
  2250  04A5                     __ptext1293:	
  2251 ;; =============== function _startTwentyMinTimer ends ============
  2252                           
  2253                           
  2254 ;; *************** function _adc_test_init *****************
  2255 ;; Defined at:
  2256 ;;		line 85 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  channel         1    wreg     unsigned char 
  2259 ;;  ref             1   21[BANK0 ] unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  channel         1   23[BANK0 ] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;		None               void
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 60/0
  2268 ;;		On exit  : 60/20
  2269 ;;		Unchanged: FFF9F/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       1       0       0       0
  2272 ;;      Locals:         0       1       0       0       0
  2273 ;;      Temps:          0       1       0       0       0
  2274 ;;      Totals:         0       3       0       0       0
  2275 ;;Total ram usage:        3 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    3
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;;		_process_AD_Converter_Value
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285  04A5                     _adc_test_init:	
  2286                           
  2287                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2288                           ;adc_test_init@channel stored from wreg
  2289  04A5  00B7               	movwf	adc_test_init@channel
  2290                           
  2291                           ;periph.c: 86: ADCON0 = 0x40;
  2292  04A6  3040               	movlw	64
  2293  04A7  009F               	movwf	31	;volatile
  2294                           
  2295                           ;periph.c: 87: ADCON0|=channel<<2;
  2296  04A8  0837               	movf	adc_test_init@channel,w
  2297  04A9  00B6               	movwf	??_adc_test_init
  2298  04AA  1003               	clrc
  2299  04AB  0DB6               	rlf	??_adc_test_init,f
  2300  04AC  1003               	clrc
  2301  04AD  0D36               	rlf	??_adc_test_init,w
  2302  04AE  049F               	iorwf	31,f	;volatile
  2303                           
  2304                           ;periph.c: 88: ADCON1 = 0x35;
  2305  04AF  3035               	movlw	53
  2306  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  2307  04B1  009F               	movwf	31	;volatile
  2308                           
  2309                           ;periph.c: 89: ADCON1|=ref<<6;
  2310  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2311  04B3  0835               	movf	adc_test_init@ref,w
  2312  04B4  00B6               	movwf	??_adc_test_init
  2313  04B5  0CB6               	rrf	??_adc_test_init,f
  2314  04B6  0CB6               	rrf	??_adc_test_init,f
  2315  04B7  0C36               	rrf	??_adc_test_init,w
  2316  04B8  39C0               	andlw	192
  2317  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  2318  04BA  049F               	iorwf	31,f	;volatile
  2319                           
  2320                           ;periph.c: 90: ADON=1;
  2321  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2322  04BC  141F               	bsf	31,0
  2323                           
  2324                           ;periph.c: 91: ADIE=1;
  2325  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2326  04BE  150D               	bsf	13,2
  2327  04BF  0008               	return
  2328  04C0                     __end_of_adc_test_init:	
  2329  04C0                     __ptext1291:	
  2330 ;; =============== function _isPermitSampleTime ends ============
  2331                           
  2332                           
  2333 ;; *************** function _adc_start *****************
  2334 ;; Defined at:
  2335 ;;		line 101 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;		None               void
  2342 ;; Registers used:
  2343 ;;		None
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 60/0
  2347 ;;		Unchanged: FFF9F/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         0       0       0       0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    3
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;;		_process_AD_Converter_Value
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363  04C0                     _adc_start:	
  2364  04C0                     l4054:	
  2365                           ; Regs used in _adc_start: []
  2366                           
  2367                           
  2368                           ;periph.c: 102: GO=1;
  2369  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2370  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2371  04C2  149F               	bsf	31,1
  2372  04C3  0008               	return
  2373  04C4                     __end_of_adc_start:	
  2374                           
  2375                           	psect	text1274
  2376  0516                     __ptext1274:	
  2377 ;; =============== function _process_AD_Converter_Value ends ============
  2378                           
  2379                           
  2380 ;; *************** function _resetAllTimer *****************
  2381 ;; Defined at:
  2382 ;;		line 481 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;		None               void
  2389 ;; Registers used:
  2390 ;;		status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 160/20
  2393 ;;		On exit  : 160/0
  2394 ;;		Unchanged: FFE9F/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0
  2399 ;;      Totals:         0       0       0       0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    4
  2403 ;; This function calls:
  2404 ;;		_clearTwelveHoursTimer
  2405 ;;		_clearThreeHoursTimer
  2406 ;;		_clearOneHoursTimer
  2407 ;;		_clearTwentyMinTimer
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412  0516                     _resetAllTimer:	
  2413                           
  2414                           ;main.c: 482: clearTwelveHoursTimer();
  2415                           
  2416                           ; Regs used in _resetAllTimer: [status,2+status,0+pclath+cstack]
  2417  0516  251D  118A         	fcall	_clearTwelveHoursTimer
  2418                           
  2419                           ;main.c: 483: clearThreeHoursTimer();
  2420  0518  2522  118A         	fcall	_clearThreeHoursTimer
  2421                           
  2422                           ;main.c: 484: clearOneHoursTimer();
  2423  051A  2526  118A         	fcall	_clearOneHoursTimer
  2424                           
  2425                           ;main.c: 485: clearTwentyMinTimer();
  2426  051C  2D2A               	ljmp	l4024
  2427  051D                     __end_of_resetAllTimer:	
  2428  051D                     __ptext1300:	
  2429 ;; =============== function _clearThreeHoursTimer ends ============
  2430                           
  2431                           
  2432 ;; *************** function _clearTwelveHoursTimer *****************
  2433 ;; Defined at:
  2434 ;;		line 460 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;		None               void
  2441 ;; Registers used:
  2442 ;;		status,2
  2443 ;; Tracked objects:
  2444 ;;		On entry : 40/0
  2445 ;;		On exit  : 60/0
  2446 ;;		Unchanged: FFF9F/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    3
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_resetAllTimer
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462  051D                     _clearTwelveHoursTimer:	
  2463                           
  2464                           ;common.c: 461: uiBigTimer = 0;
  2465                           
  2466                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2467  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2468  051E  01BD               	clrf	_uiBigTimer
  2469  051F  01BE               	clrf	_uiBigTimer+1
  2470                           
  2471                           ;common.c: 462: bBigTimerStartFlag = 0;
  2472  0520  01CB               	clrf	_bBigTimerStartFlag
  2473  0521  0008               	return
  2474  0522                     __end_of_clearTwelveHoursTimer:	
  2475  0522                     __ptext1299:	
  2476 ;; =============== function _clearOneHoursTimer ends ============
  2477                           
  2478                           
  2479 ;; *************** function _clearThreeHoursTimer *****************
  2480 ;; Defined at:
  2481 ;;		line 467 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		status,2
  2490 ;; Tracked objects:
  2491 ;;		On entry : 60/0
  2492 ;;		On exit  : 60/0
  2493 ;;		Unchanged: FFF9F/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    3
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_resetAllTimer
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509  0522                     _clearThreeHoursTimer:	
  2510                           
  2511                           ;common.c: 468: uiSmallTimer = 0;
  2512                           
  2513                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2514  0522  01C1               	clrf	_uiSmallTimer
  2515  0523  01C2               	clrf	_uiSmallTimer+1
  2516                           
  2517                           ;common.c: 469: bSmallTimerStartFlag = 0;
  2518  0524  01CD               	clrf	_bSmallTimerStartFlag
  2519  0525  0008               	return
  2520  0526                     __end_of_clearThreeHoursTimer:	
  2521  0526                     __ptext1298:	
  2522 ;; =============== function _clearTwentyMinTimer ends ============
  2523                           
  2524                           
  2525 ;; *************** function _clearOneHoursTimer *****************
  2526 ;; Defined at:
  2527 ;;		line 473 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;		None               void
  2534 ;; Registers used:
  2535 ;;		status,2
  2536 ;; Tracked objects:
  2537 ;;		On entry : 160/0
  2538 ;;		On exit  : 160/0
  2539 ;;		Unchanged: FFE9F/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    3
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_resetAllTimer
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554  0526                     _clearOneHoursTimer:	
  2555                           
  2556                           ;common.c: 474: uiOneHourTimer = 0;
  2557                           
  2558                           ; Regs used in _clearOneHoursTimer: [status,2]
  2559  0526  01BF               	clrf	_uiOneHourTimer
  2560  0527  01C0               	clrf	_uiOneHourTimer+1
  2561                           
  2562                           ;common.c: 475: bOneHourTimerStartFlag = 0;
  2563  0528  01CC               	clrf	_bOneHourTimerStartFlag
  2564  0529  0008               	return
  2565  052A                     __end_of_clearOneHoursTimer:	
  2566  052A                     __ptext1297:	
  2567 ;; =============== function _clock_config ends ============
  2568                           
  2569                           
  2570 ;; *************** function _clearTwentyMinTimer *****************
  2571 ;; Defined at:
  2572 ;;		line 480 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;		None               void
  2579 ;; Registers used:
  2580 ;;		status,2
  2581 ;; Tracked objects:
  2582 ;;		On entry : 60/0
  2583 ;;		On exit  : 60/0
  2584 ;;		Unchanged: FFF9F/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         0       0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    3
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_resetAllTimer
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600  052A                     _clearTwentyMinTimer:	
  2601  052A                     l4024:	
  2602                           ; Regs used in _clearTwentyMinTimer: [status,2]
  2603                           
  2604                           
  2605                           ;common.c: 481: uiTwentyMinTimer = 0;
  2606  052A  01C3               	clrf	_uiTwentyMinTimer
  2607  052B  01C4               	clrf	_uiTwentyMinTimer+1
  2608                           
  2609                           ;common.c: 482: bTwentyMinStartFlag = 0;
  2610  052C  01CE               	clrf	_bTwentyMinStartFlag
  2611  052D  0008               	return
  2612  052E                     __end_of_clearTwentyMinTimer:	
  2613                           
  2614                           	psect	text1275
  2615  04F5                     __ptext1275:	
  2616 ;; =============== function _resetAllTimer ends ============
  2617                           
  2618                           
  2619 ;; *************** function _setPinInitVaule *****************
  2620 ;; Defined at:
  2621 ;;		line 272 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 17F/20
  2632 ;;		On exit  : 17F/0
  2633 ;;		Unchanged: FFE80/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0
  2638 ;;      Totals:         0       0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		_setPB3
  2644 ;;		_setPB4
  2645 ;;		_setPB5
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650  04F5                     _setPinInitVaule:	
  2651                           
  2652                           ;main.c: 274: setPB3(1);
  2653                           
  2654                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2655  04F5  3001               	movlw	1
  2656  04F6  24FD  118A         	fcall	_setPB3
  2657                           
  2658                           ;main.c: 275: setPB4(0);
  2659  04F8  3000               	movlw	0
  2660  04F9  2506  118A         	fcall	_setPB4
  2661                           
  2662                           ;main.c: 276: setPB5(1);
  2663  04FB  3001               	movlw	1
  2664  04FC  2D0E               	ljmp	_setPB5
  2665  04FD                     __end_of_setPinInitVaule:	
  2666  04FD                     __ptext1309:	
  2667 ;; =============== function _initPB4 ends ============
  2668                           
  2669                           
  2670 ;; *************** function _setPB3 *****************
  2671 ;; Defined at:
  2672 ;;		line 133 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  bValue          1    wreg     unsigned char 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  bValue          1   21[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;		None               void
  2679 ;; Registers used:
  2680 ;;		wreg
  2681 ;; Tracked objects:
  2682 ;;		On entry : 40/0
  2683 ;;		On exit  : 60/0
  2684 ;;		Unchanged: FFF9F/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       0       0       0       0
  2687 ;;      Locals:         0       1       0       0       0
  2688 ;;      Temps:          0       0       0       0       0
  2689 ;;      Totals:         0       1       0       0       0
  2690 ;;Total ram usage:        1 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    3
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_setPinInitVaule
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700  04FD                     _setPB3:	
  2701                           
  2702                           ; Regs used in _setPB3: [wreg]
  2703                           ;setPB3@bValue stored from wreg
  2704  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2705  04FE  00B5               	movwf	setPB3@bValue
  2706                           
  2707                           ;main.c: 134: if( bValue )
  2708  04FF  0835               	movf	setPB3@bValue,w
  2709  0500  1903               	btfsc	3,2
  2710  0501  2D04               	goto	l684
  2711                           
  2712                           ;main.c: 136: PB3 = 1;
  2713  0502  1586               	bsf	6,3
  2714  0503  0008               	return
  2715  0504                     l684:	
  2716                           
  2717                           ;main.c: 140: else
  2718                           ;main.c: 142: PB3= 0;
  2719  0504  1186               	bcf	6,3
  2720  0505  0008               	return
  2721  0506                     __end_of_setPB3:	
  2722  0506                     __ptext1307:	
  2723 ;; =============== function _initPB5 ends ============
  2724                           
  2725                           
  2726 ;; *************** function _setPB4 *****************
  2727 ;; Defined at:
  2728 ;;		line 168 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  bValue          1    wreg     unsigned char 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  bValue          1   21[BANK0 ] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg
  2737 ;; Tracked objects:
  2738 ;;		On entry : 60/0
  2739 ;;		On exit  : 60/0
  2740 ;;		Unchanged: FFF9F/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2742 ;;      Params:         0       0       0       0       0
  2743 ;;      Locals:         0       1       0       0       0
  2744 ;;      Temps:          0       0       0       0       0
  2745 ;;      Totals:         0       1       0       0       0
  2746 ;;Total ram usage:        1 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    3
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_setPinInitVaule
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756  0506                     _setPB4:	
  2757                           
  2758                           ; Regs used in _setPB4: [wreg]
  2759                           ;setPB4@bValue stored from wreg
  2760  0506  00B5               	movwf	setPB4@bValue
  2761                           
  2762                           ;main.c: 169: if( bValue )
  2763  0507  0835               	movf	setPB4@bValue,w
  2764  0508  1903               	btfsc	3,2
  2765  0509  2D0C               	goto	l694
  2766                           
  2767                           ;main.c: 171: PB4 = 1;
  2768  050A  1606               	bsf	6,4
  2769  050B  0008               	return
  2770  050C                     l694:	
  2771                           
  2772                           ;main.c: 175: else
  2773                           ;main.c: 177: PB4= 0;
  2774  050C  1206               	bcf	6,4
  2775  050D  0008               	return
  2776  050E                     __end_of_setPB4:	
  2777  050E                     __ptext1305:	
  2778 ;; =============== function _initPB2_AsHighResistence ends ============
  2779                           
  2780                           
  2781 ;; *************** function _setPB5 *****************
  2782 ;; Defined at:
  2783 ;;		line 202 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  bValue          1    wreg     unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  bValue          1   21[BANK0 ] unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg
  2792 ;; Tracked objects:
  2793 ;;		On entry : 60/0
  2794 ;;		On exit  : 60/0
  2795 ;;		Unchanged: FFF9F/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2797 ;;      Params:         0       0       0       0       0
  2798 ;;      Locals:         0       1       0       0       0
  2799 ;;      Temps:          0       0       0       0       0
  2800 ;;      Totals:         0       1       0       0       0
  2801 ;;Total ram usage:        1 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    3
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_setPinInitVaule
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811  050E                     _setPB5:	
  2812                           
  2813                           ; Regs used in _setPB5: [wreg]
  2814                           ;setPB5@bValue stored from wreg
  2815  050E  00B5               	movwf	setPB5@bValue
  2816                           
  2817                           ;main.c: 203: if( bValue )
  2818  050F  0835               	movf	setPB5@bValue,w
  2819  0510  1903               	btfsc	3,2
  2820  0511  2D14               	goto	l704
  2821                           
  2822                           ;main.c: 205: PB5 = 1;
  2823  0512  1686               	bsf	6,5
  2824  0513  0008               	return
  2825  0514                     l704:	
  2826                           
  2827                           ;main.c: 209: else
  2828                           ;main.c: 211: PB5= 0;
  2829  0514  1286               	bcf	6,5
  2830  0515  0008               	return
  2831  0516                     __end_of_setPB5:	
  2832                           
  2833                           	psect	text1276
  2834  04C4                     __ptext1276:	
  2835 ;; =============== function _setPinInitVaule ends ============
  2836                           
  2837                           
  2838 ;; *************** function _initPin *****************
  2839 ;; Defined at:
  2840 ;;		line 256 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;		None               void
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 17F/0
  2851 ;;		On exit  : 17F/20
  2852 ;;		Unchanged: FFE80/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    4
  2861 ;; This function calls:
  2862 ;;		_initPB2_AsHighResistence
  2863 ;;		_initPB3
  2864 ;;		_initPB4
  2865 ;;		_initPB5
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870  04C4                     _initPin:	
  2871                           
  2872                           ;main.c: 258: initPB2_AsHighResistence();
  2873                           
  2874                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2875  04C4  24DA  118A         	fcall	_initPB2_AsHighResistence
  2876                           
  2877                           ;main.c: 260: initPB3(0);
  2878  04C6  3000               	movlw	0
  2879  04C7  24CE  118A         	fcall	_initPB3
  2880                           
  2881                           ;main.c: 262: initPB4(0);
  2882  04C9  3000               	movlw	0
  2883  04CA  24DF  118A         	fcall	_initPB4
  2884                           
  2885                           ;main.c: 264: initPB5(0);
  2886  04CC  3000               	movlw	0
  2887  04CD  2CEA               	ljmp	_initPB5
  2888  04CE                     __end_of_initPin:	
  2889  04CE                     __ptext1310:	
  2890 ;; =============== function _setPB3 ends ============
  2891                           
  2892                           
  2893 ;; *************** function _initPB3 *****************
  2894 ;; Defined at:
  2895 ;;		line 116 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  bValue          1    wreg     unsigned char 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  bValue          1   21[BANK0 ] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;		None               void
  2902 ;; Registers used:
  2903 ;;		wreg
  2904 ;; Tracked objects:
  2905 ;;		On entry : 17F/60
  2906 ;;		On exit  : 17F/20
  2907 ;;		Unchanged: FFE80/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       0       0       0       0
  2910 ;;      Locals:         0       1       0       0       0
  2911 ;;      Temps:          0       0       0       0       0
  2912 ;;      Totals:         0       1       0       0       0
  2913 ;;Total ram usage:        1 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    3
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_initPin
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922  04CE                     _initPB3:	
  2923                           
  2924                           ; Regs used in _initPB3: [wreg]
  2925                           ;initPB3@bValue stored from wreg
  2926  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2927  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2928  04D0  00B5               	movwf	initPB3@bValue
  2929                           
  2930                           ;main.c: 117: if( bValue )
  2931  04D1  0835               	movf	initPB3@bValue,w
  2932  04D2  1903               	btfsc	3,2
  2933  04D3  2CD7               	goto	l679
  2934                           
  2935                           ;main.c: 119: TRISB3 = 1;
  2936  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2937  04D5  1586               	bsf	6,3
  2938  04D6  0008               	return
  2939  04D7                     l679:	
  2940                           
  2941                           ;main.c: 123: else
  2942                           ;main.c: 125: TRISB3 = 0;
  2943  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2944  04D8  1186               	bcf	6,3
  2945  04D9  0008               	return
  2946  04DA                     __end_of_initPB3:	
  2947  04DA                     __ptext1304:	
  2948 ;; =============== function _pwm_start ends ============
  2949                           
  2950                           
  2951 ;; *************** function _initPB2_AsHighResistence *****************
  2952 ;; Defined at:
  2953 ;;		line 219 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		None
  2962 ;; Tracked objects:
  2963 ;;		On entry : 17F/0
  2964 ;;		On exit  : 17F/60
  2965 ;;		Unchanged: FFE80/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0
  2970 ;;      Totals:         0       0       0       0       0
  2971 ;;Total ram usage:        0 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    3
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_initPin
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980  04DA                     _initPB2_AsHighResistence:	
  2981                           
  2982                           ;main.c: 221: PB2 = 1;
  2983                           
  2984                           ; Regs used in _initPB2_AsHighResistence: []
  2985  04DA  1506               	bsf	6,2
  2986                           
  2987                           ;main.c: 222: PBOD2 = 1;
  2988  04DB  1683               	bsf	3,5	;RP0=1, select bank3
  2989  04DC  1703               	bsf	3,6	;RP1=1, select bank3
  2990  04DD  1508               	bsf	8,2
  2991  04DE  0008               	return
  2992  04DF                     __end_of_initPB2_AsHighResistence:	
  2993  04DF                     __ptext1308:	
  2994 ;; =============== function _setPB4 ends ============
  2995                           
  2996                           
  2997 ;; *************** function _initPB4 *****************
  2998 ;; Defined at:
  2999 ;;		line 151 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  bValue          1    wreg     unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  bValue          1   21[BANK0 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg
  3008 ;; Tracked objects:
  3009 ;;		On entry : 17F/20
  3010 ;;		On exit  : 17F/20
  3011 ;;		Unchanged: FFE80/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       0       0       0       0
  3014 ;;      Locals:         0       1       0       0       0
  3015 ;;      Temps:          0       0       0       0       0
  3016 ;;      Totals:         0       1       0       0       0
  3017 ;;Total ram usage:        1 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    3
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_initPin
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026  04DF                     _initPB4:	
  3027                           
  3028                           ; Regs used in _initPB4: [wreg]
  3029                           ;initPB4@bValue stored from wreg
  3030  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3031  04E0  00B5               	movwf	initPB4@bValue
  3032                           
  3033                           ;main.c: 152: if( bValue )
  3034  04E1  0835               	movf	initPB4@bValue,w
  3035  04E2  1903               	btfsc	3,2
  3036  04E3  2CE7               	goto	l689
  3037                           
  3038                           ;main.c: 154: TRISB4 = 1;
  3039  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  3040  04E5  1606               	bsf	6,4
  3041  04E6  0008               	return
  3042  04E7                     l689:	
  3043                           
  3044                           ;main.c: 158: else
  3045                           ;main.c: 160: TRISB4= 0;
  3046  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  3047  04E8  1206               	bcf	6,4
  3048  04E9  0008               	return
  3049  04EA                     __end_of_initPB4:	
  3050  04EA                     __ptext1306:	
  3051 ;; =============== function _setPB5 ends ============
  3052                           
  3053                           
  3054 ;; *************** function _initPB5 *****************
  3055 ;; Defined at:
  3056 ;;		line 185 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  bValue          1    wreg     unsigned char 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  bValue          1   21[BANK0 ] unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;		None               void
  3063 ;; Registers used:
  3064 ;;		wreg
  3065 ;; Tracked objects:
  3066 ;;		On entry : 17F/20
  3067 ;;		On exit  : 17F/20
  3068 ;;		Unchanged: FFE80/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3070 ;;      Params:         0       0       0       0       0
  3071 ;;      Locals:         0       1       0       0       0
  3072 ;;      Temps:          0       0       0       0       0
  3073 ;;      Totals:         0       1       0       0       0
  3074 ;;Total ram usage:        1 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    3
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_initPin
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083  04EA                     _initPB5:	
  3084                           
  3085                           ; Regs used in _initPB5: [wreg]
  3086                           ;initPB5@bValue stored from wreg
  3087  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3088  04EB  00B5               	movwf	initPB5@bValue
  3089                           
  3090                           ;main.c: 186: if( bValue )
  3091  04EC  0835               	movf	initPB5@bValue,w
  3092  04ED  1903               	btfsc	3,2
  3093  04EE  2CF2               	goto	l699
  3094                           
  3095                           ;main.c: 188: TRISB5 = 1;
  3096  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3097  04F0  1686               	bsf	6,5
  3098  04F1  0008               	return
  3099  04F2                     l699:	
  3100                           
  3101                           ;main.c: 192: else
  3102                           ;main.c: 194: TRISB5= 0;
  3103  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3104  04F3  1286               	bcf	6,5
  3105  04F4  0008               	return
  3106  04F5                     __end_of_initPB5:	
  3107                           
  3108                           	psect	text1281
  3109  05DA                     __ptext1281:	
  3110 ;; =============== function _FilterCh13 ends ============
  3111                           
  3112                           
  3113 ;; *************** function _setWaitResetFlag *****************
  3114 ;; Defined at:
  3115 ;;		line 55 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  bValue          1    wreg     unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  bValue          1   21[BANK0 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;		None               void
  3122 ;; Registers used:
  3123 ;;		wreg
  3124 ;; Tracked objects:
  3125 ;;		On entry : 60/0
  3126 ;;		On exit  : 60/0
  3127 ;;		Unchanged: FFF9F/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       1       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         0       1       0       0       0
  3133 ;;Total ram usage:        1 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142  05DA                     _setWaitResetFlag:	
  3143                           
  3144                           ; Regs used in _setWaitResetFlag: [wreg]
  3145                           ;setWaitResetFlag@bValue stored from wreg
  3146  05DA  00B5               	movwf	setWaitResetFlag@bValue
  3147                           
  3148                           ;common.c: 56: bWaitResetFlag = bValue;
  3149  05DB  00CF               	movwf	_bWaitResetFlag
  3150  05DC  0008               	return
  3151  05DD                     __end_of_setWaitResetFlag:	
  3152                           
  3153                           	psect	text1282
  3154  058F                     __ptext1282:	
  3155 ;; =============== function _setWaitResetFlag ends ============
  3156                           
  3157                           
  3158 ;; *************** function _isFinishedOneHoursTimer *****************
  3159 ;; Defined at:
  3160 ;;		line 583 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      unsigned char 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0
  3169 ;; Tracked objects:
  3170 ;;		On entry : 160/20
  3171 ;;		On exit  : 160/0
  3172 ;;		Unchanged: FFE9F/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    3
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187  058F                     _isFinishedOneHoursTimer:	
  3188                           
  3189                           ;common.c: 584: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3190                           
  3191                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3192  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0590  0840               	movf	_uiOneHourTimer+1,w
  3194  0591  043F               	iorwf	_uiOneHourTimer,w
  3195  0592  1D03               	skipz
  3196  0593  3400               	retlw	0
  3197  0594  084C               	movf	_bOneHourTimerStartFlag,w
  3198  0595  1903               	btfsc	3,2
  3199  0596  3400               	retlw	0
  3200  0597  3001               	movlw	1
  3201                           
  3202                           ;common.c: 585: {
  3203                           ;common.c: 586: bOneHourTimerStartFlag = 0;
  3204  0598  01CC               	clrf	_bOneHourTimerStartFlag
  3205                           
  3206                           ;common.c: 587: return 1;
  3207  0599  0008               	return
  3208  059A                     __end_of_isFinishedOneHoursTimer:	
  3209                           ;common.c: 589: else
  3210                           ;common.c: 590: return 0;
  3211                           
  3212                           
  3213                           	psect	text1283
  3214  0557                     __ptext1283:	
  3215 ;; =============== function _isFinishedOneHoursTimer ends ============
  3216                           
  3217                           
  3218 ;; *************** function _startOneHoursTimer *****************
  3219 ;; Defined at:
  3220 ;;		line 500 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;		None               void
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 60/0
  3231 ;;		On exit  : 60/0
  3232 ;;		Unchanged: FFF9F/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       2       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         0       2       0       0       0
  3238 ;;Total ram usage:        2 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    3
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247  0557                     _startOneHoursTimer:	
  3248                           
  3249                           ;common.c: 501: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3250                           
  3251                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3252  0557  0840               	movf	_uiOneHourTimer+1,w
  3253  0558  043F               	iorwf	_uiOneHourTimer,w
  3254  0559  1D03               	skipz
  3255  055A  0008               	return
  3256  055B  08CC               	movf	_bOneHourTimerStartFlag,f
  3257  055C  1D03               	skipz
  3258  055D  0008               	return
  3259                           
  3260                           ;common.c: 502: {
  3261                           ;common.c: 503: uiOneHourTimer = uiSetTime;
  3262  055E  0836               	movf	startOneHoursTimer@uiSetTime+1,w
  3263  055F  00C0               	movwf	_uiOneHourTimer+1
  3264  0560  0835               	movf	startOneHoursTimer@uiSetTime,w
  3265  0561  00BF               	movwf	_uiOneHourTimer
  3266                           
  3267                           ;common.c: 504: bOneHourTimerStartFlag = 1;
  3268  0562  01CC               	clrf	_bOneHourTimerStartFlag
  3269  0563  0ACC               	incf	_bOneHourTimerStartFlag,f
  3270  0564  0008               	return
  3271  0565                     __end_of_startOneHoursTimer:	
  3272                           
  3273                           	psect	text1284
  3274  059A                     __ptext1284:	
  3275 ;; =============== function _startOneHoursTimer ends ============
  3276                           
  3277                           
  3278 ;; *************** function _isFinishedThreeHoursTimer *****************
  3279 ;; Defined at:
  3280 ;;		line 570 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      unsigned char 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 60/0
  3291 ;;		On exit  : 60/0
  3292 ;;		Unchanged: FFF9F/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    3
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307  059A                     _isFinishedThreeHoursTimer:	
  3308                           
  3309                           ;common.c: 571: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3310                           
  3311                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3312  059A  0842               	movf	_uiSmallTimer+1,w
  3313  059B  0441               	iorwf	_uiSmallTimer,w
  3314  059C  1D03               	skipz
  3315  059D  3400               	retlw	0
  3316  059E  084D               	movf	_bSmallTimerStartFlag,w
  3317  059F  1903               	btfsc	3,2
  3318  05A0  3400               	retlw	0
  3319  05A1  3001               	movlw	1
  3320                           
  3321                           ;common.c: 572: {
  3322                           ;common.c: 573: bSmallTimerStartFlag = 0;
  3323  05A2  01CD               	clrf	_bSmallTimerStartFlag
  3324                           
  3325                           ;common.c: 574: return 1;
  3326  05A3  0008               	return
  3327  05A4                     __end_of_isFinishedThreeHoursTimer:	
  3328                           ;common.c: 576: else
  3329                           ;common.c: 577: return 0;
  3330                           
  3331                           
  3332                           	psect	text1285
  3333  0565                     __ptext1285:	
  3334 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3335                           
  3336                           
  3337 ;; *************** function _startThreeHoursTimer *****************
  3338 ;; Defined at:
  3339 ;;		line 487 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;		None               void
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0
  3348 ;; Tracked objects:
  3349 ;;		On entry : 60/0
  3350 ;;		On exit  : 60/0
  3351 ;;		Unchanged: FFF9F/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       2       0       0       0
  3354 ;;      Locals:         0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0
  3356 ;;      Totals:         0       2       0       0       0
  3357 ;;Total ram usage:        2 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    3
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366  0565                     _startThreeHoursTimer:	
  3367                           
  3368                           ;common.c: 488: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3369                           
  3370                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3371  0565  0842               	movf	_uiSmallTimer+1,w
  3372  0566  0441               	iorwf	_uiSmallTimer,w
  3373  0567  1D03               	skipz
  3374  0568  0008               	return
  3375  0569  08CD               	movf	_bSmallTimerStartFlag,f
  3376  056A  1D03               	skipz
  3377  056B  0008               	return
  3378                           
  3379                           ;common.c: 489: {
  3380                           ;common.c: 490: uiSmallTimer = uiSetTime;
  3381  056C  0836               	movf	startThreeHoursTimer@uiSetTime+1,w
  3382  056D  00C2               	movwf	_uiSmallTimer+1
  3383  056E  0835               	movf	startThreeHoursTimer@uiSetTime,w
  3384  056F  00C1               	movwf	_uiSmallTimer
  3385                           
  3386                           ;common.c: 491: bSmallTimerStartFlag = 1;
  3387  0570  01CD               	clrf	_bSmallTimerStartFlag
  3388  0571  0ACD               	incf	_bSmallTimerStartFlag,f
  3389  0572  0008               	return
  3390  0573                     __end_of_startThreeHoursTimer:	
  3391                           
  3392                           	psect	text1286
  3393  05A4                     __ptext1286:	
  3394 ;; =============== function _startThreeHoursTimer ends ============
  3395                           
  3396                           
  3397 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3398 ;; Defined at:
  3399 ;;		line 559 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      unsigned char 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 60/0
  3410 ;;		On exit  : 60/0
  3411 ;;		Unchanged: FFF9F/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    3
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426  05A4                     _isFinishedTwelveHoursTimer:	
  3427                           
  3428                           ;common.c: 560: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3429                           
  3430                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3431  05A4  083E               	movf	_uiBigTimer+1,w
  3432  05A5  043D               	iorwf	_uiBigTimer,w
  3433  05A6  1D03               	skipz
  3434  05A7  3400               	retlw	0
  3435  05A8  084B               	movf	_bBigTimerStartFlag,w
  3436  05A9  1903               	btfsc	3,2
  3437  05AA  3400               	retlw	0
  3438  05AB  3001               	movlw	1
  3439                           
  3440                           ;common.c: 561: {
  3441                           ;common.c: 562: bBigTimerStartFlag = 0;
  3442  05AC  01CB               	clrf	_bBigTimerStartFlag
  3443                           
  3444                           ;common.c: 563: return 1;
  3445  05AD  0008               	return
  3446  05AE                     __end_of_isFinishedTwelveHoursTimer:	
  3447                           ;common.c: 565: else
  3448                           ;common.c: 566: return 0;
  3449                           
  3450                           
  3451                           	psect	text1287
  3452  0573                     __ptext1287:	
  3453 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3454                           
  3455                           
  3456 ;; *************** function _startTwelveHourTimer *****************
  3457 ;; Defined at:
  3458 ;;		line 446 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;		None               void
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 60/0
  3469 ;;		On exit  : 60/0
  3470 ;;		Unchanged: FFF9F/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3472 ;;      Params:         0       2       0       0       0
  3473 ;;      Locals:         0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0
  3475 ;;      Totals:         0       2       0       0       0
  3476 ;;Total ram usage:        2 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    3
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_main
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485  0573                     _startTwelveHourTimer:	
  3486                           
  3487                           ;common.c: 447: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3488                           
  3489                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3490  0573  083E               	movf	_uiBigTimer+1,w
  3491  0574  043D               	iorwf	_uiBigTimer,w
  3492  0575  1D03               	skipz
  3493  0576  0008               	return
  3494  0577  08CB               	movf	_bBigTimerStartFlag,f
  3495  0578  1D03               	skipz
  3496  0579  0008               	return
  3497                           
  3498                           ;common.c: 448: {
  3499                           ;common.c: 449: uiBigTimer = uiSetTime;
  3500  057A  0836               	movf	startTwelveHourTimer@uiSetTime+1,w
  3501  057B  00BE               	movwf	_uiBigTimer+1
  3502  057C  0835               	movf	startTwelveHourTimer@uiSetTime,w
  3503  057D  00BD               	movwf	_uiBigTimer
  3504                           
  3505                           ;common.c: 450: bBigTimerStartFlag = 1;
  3506  057E  01CB               	clrf	_bBigTimerStartFlag
  3507  057F  0ACB               	incf	_bBigTimerStartFlag,f
  3508  0580  0008               	return
  3509  0581                     __end_of_startTwelveHourTimer:	
  3510                           
  3511                           	psect	text1288
  3512  05AE                     __ptext1288:	
  3513 ;; =============== function _startTwelveHourTimer ends ============
  3514                           
  3515                           
  3516 ;; *************** function _isFinishedTwentyMinTimer *****************
  3517 ;; Defined at:
  3518 ;;		line 535 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      unsigned char 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 60/0
  3529 ;;		On exit  : 60/0
  3530 ;;		Unchanged: FFF9F/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    3
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545  05AE                     _isFinishedTwentyMinTimer:	
  3546                           
  3547                           ;common.c: 536: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3548                           
  3549                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3550  05AE  0844               	movf	_uiTwentyMinTimer+1,w
  3551  05AF  0443               	iorwf	_uiTwentyMinTimer,w
  3552  05B0  1D03               	skipz
  3553  05B1  3400               	retlw	0
  3554  05B2  084E               	movf	_bTwentyMinStartFlag,w
  3555  05B3  1903               	btfsc	3,2
  3556  05B4  3400               	retlw	0
  3557  05B5  3001               	movlw	1
  3558                           
  3559                           ;common.c: 537: {
  3560                           ;common.c: 538: bTwentyMinStartFlag = 0;
  3561  05B6  01CE               	clrf	_bTwentyMinStartFlag
  3562                           
  3563                           ;common.c: 539: return 1;
  3564  05B7  0008               	return
  3565  05B8                     __end_of_isFinishedTwentyMinTimer:	
  3566                           ;common.c: 541: else
  3567                           ;common.c: 542: return 0;
  3568                           
  3569                           
  3570                           	psect	text1289
  3571  05E0                     __ptext1289:	
  3572 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3573                           
  3574                           
  3575 ;; *************** function _clrSampeTime *****************
  3576 ;; Defined at:
  3577 ;;		line 605 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;		None               void
  3584 ;; Registers used:
  3585 ;;		status,2
  3586 ;; Tracked objects:
  3587 ;;		On entry : 60/0
  3588 ;;		On exit  : 60/0
  3589 ;;		Unchanged: FFF9F/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    3
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604  05E0                     _clrSampeTime:	
  3605                           
  3606                           ;common.c: 606: timer.timer10msStopWatch = 0;
  3607                           
  3608                           ; Regs used in _clrSampeTime: [status,2]
  3609  05E0  01D1               	clrf	_timer
  3610  05E1  0008               	return
  3611  05E2                     __end_of_clrSampeTime:	
  3612                           
  3613                           	psect	text1290
  3614  05D2                     __ptext1290:	
  3615 ;; =============== function _clrSampeTime ends ============
  3616                           
  3617                           
  3618 ;; *************** function _isPermitSampleTime *****************
  3619 ;; Defined at:
  3620 ;;		line 595 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      unsigned char 
  3627 ;; Registers used:
  3628 ;;		wreg
  3629 ;; Tracked objects:
  3630 ;;		On entry : 60/0
  3631 ;;		On exit  : 60/0
  3632 ;;		Unchanged: FFF9F/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3634 ;;      Params:         0       0       0       0       0
  3635 ;;      Locals:         0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0
  3637 ;;      Totals:         0       0       0       0       0
  3638 ;;Total ram usage:        0 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    3
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647  05D2                     _isPermitSampleTime:	
  3648                           
  3649                           ;common.c: 596: if(timer.timer10msStopWatch >= 1)
  3650                           
  3651                           ; Regs used in _isPermitSampleTime: [wreg]
  3652  05D2  0851               	movf	_timer,w
  3653  05D3  1D03               	skipz
  3654                           
  3655                           ;common.c: 597: {
  3656                           ;common.c: 598: return 1;
  3657  05D4  3401               	retlw	1
  3658                           
  3659                           ;common.c: 600: else
  3660                           ;common.c: 601: return 0;
  3661  05D5  3400               	retlw	0
  3662  05D6                     __end_of_isPermitSampleTime:	
  3663                           
  3664                           	psect	text1292
  3665  0581                     __ptext1292:	
  3666 ;; =============== function _adc_start ends ============
  3667                           
  3668                           
  3669 ;; *************** function _startTwentyMinTimer *****************
  3670 ;; Defined at:
  3671 ;;		line 525 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  uiSetValue      2   21[BANK0 ] unsigned int 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 17F/0
  3682 ;;		On exit  : 17F/0
  3683 ;;		Unchanged: FFE80/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       2       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       2       0       0       0
  3689 ;;Total ram usage:        2 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698  0581                     _startTwentyMinTimer:	
  3699                           
  3700                           ;common.c: 526: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3701                           
  3702                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3703  0581  0844               	movf	_uiTwentyMinTimer+1,w
  3704  0582  0443               	iorwf	_uiTwentyMinTimer,w
  3705  0583  1D03               	skipz
  3706  0584  0008               	return
  3707  0585  08CE               	movf	_bTwentyMinStartFlag,f
  3708  0586  1D03               	skipz
  3709  0587  0008               	return
  3710                           
  3711                           ;common.c: 527: {
  3712                           ;common.c: 528: uiTwentyMinTimer = uiSetValue;
  3713  0588  0836               	movf	startTwentyMinTimer@uiSetValue+1,w
  3714  0589  00C4               	movwf	_uiTwentyMinTimer+1
  3715  058A  0835               	movf	startTwentyMinTimer@uiSetValue,w
  3716  058B  00C3               	movwf	_uiTwentyMinTimer
  3717                           
  3718                           ;common.c: 529: bTwentyMinStartFlag = 1;
  3719  058C  01CE               	clrf	_bTwentyMinStartFlag
  3720  058D  0ACE               	incf	_bTwentyMinStartFlag,f
  3721  058E  0008               	return
  3722  058F                     __end_of_startTwentyMinTimer:	
  3723                           
  3724                           	psect	text1294
  3725  05DD                     __ptext1294:	
  3726 ;; =============== function _adc_test_init ends ============
  3727                           
  3728                           
  3729 ;; *************** function _timer1_interrupt_config *****************
  3730 ;; Defined at:
  3731 ;;		line 335 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;		None               void
  3738 ;; Registers used:
  3739 ;;		None
  3740 ;; Tracked objects:
  3741 ;;		On entry : 17F/20
  3742 ;;		On exit  : 17F/20
  3743 ;;		Unchanged: FFE80/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3745 ;;      Params:         0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    3
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758  05DD                     _timer1_interrupt_config:	
  3759                           
  3760                           ;common.c: 336: GIE = 1;
  3761                           
  3762                           ; Regs used in _timer1_interrupt_config: []
  3763  05DD  178B               	bsf	11,7
  3764                           
  3765                           ;common.c: 337: PEIE = 1;
  3766  05DE  170B               	bsf	11,6
  3767  05DF  0008               	return
  3768  05E0                     __end_of_timer1_interrupt_config:	
  3769                           
  3770                           	psect	text1295
  3771  05B8                     __ptext1295:	
  3772 ;; =============== function _timer1_interrupt_config ends ============
  3773                           
  3774                           
  3775 ;; *************** function _timer1_config *****************
  3776 ;; Defined at:
  3777 ;;		line 323 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg
  3786 ;; Tracked objects:
  3787 ;;		On entry : 17F/40
  3788 ;;		On exit  : 17F/20
  3789 ;;		Unchanged: FFE80/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0
  3794 ;;      Totals:         0       0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    3
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804  05B8                     _timer1_config:	
  3805                           
  3806                           ;common.c: 325: TMR1H=0xCF;
  3807                           
  3808                           ; Regs used in _timer1_config: [wreg]
  3809  05B8  30CF               	movlw	207
  3810  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3811  05BA  008F               	movwf	15	;volatile
  3812                           
  3813                           ;common.c: 326: TMR1L=0x2C;
  3814  05BB  302C               	movlw	44
  3815  05BC  008E               	movwf	14	;volatile
  3816                           
  3817                           ;common.c: 327: T1CON=0xE1;
  3818  05BD  30E1               	movlw	225
  3819  05BE  0090               	movwf	16	;volatile
  3820                           
  3821                           ;common.c: 328: TMR1IE=1;
  3822  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3823  05C0  140C               	bsf	12,0
  3824  05C1  0008               	return
  3825  05C2                     __end_of_timer1_config:	
  3826                           
  3827                           	psect	text1296
  3828  05CA                     __ptext1296:	
  3829 ;; =============== function _timer1_config ends ============
  3830                           
  3831                           
  3832 ;; *************** function _clock_config *****************
  3833 ;; Defined at:
  3834 ;;		line 315 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;		None               void
  3841 ;; Registers used:
  3842 ;;		wreg, status,2
  3843 ;; Tracked objects:
  3844 ;;		On entry : 17F/20
  3845 ;;		On exit  : 17F/40
  3846 ;;		Unchanged: FFE80/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3848 ;;      Params:         0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0
  3850 ;;      Temps:          0       0       0       0       0
  3851 ;;      Totals:         0       0       0       0       0
  3852 ;;Total ram usage:        0 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    3
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861  05CA                     _clock_config:	
  3862                           
  3863                           ;common.c: 317: CLKPR = 0x80;
  3864                           
  3865                           ; Regs used in _clock_config: [wreg+status,2]
  3866  05CA  3080               	movlw	128
  3867  05CB  1283               	bcf	3,5	;RP0=0, select bank2
  3868  05CC  1703               	bsf	3,6	;RP1=1, select bank2
  3869  05CD  0088               	movwf	8	;volatile
  3870                           
  3871                           ;common.c: 318: CLKPR = 0x00;
  3872  05CE  0188               	clrf	8	;volatile
  3873  05CF                     l1560:	
  3874                           ;common.c: 319: while(CLKPCE);
  3875                           
  3876  05CF  1F88               	btfss	8,7
  3877  05D0  0008               	return
  3878  05D1  2DCF               	goto	l1560
  3879  05D2                     __end_of_clock_config:	
  3880                           
  3881                           	psect	text1301
  3882  05E2                     __ptext1301:	
  3883 ;; =============== function _clearTwelveHoursTimer ends ============
  3884                           
  3885                           
  3886 ;; *************** function _reset *****************
  3887 ;; Defined at:
  3888 ;;		line 294 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;		None               void
  3895 ;; Registers used:
  3896 ;;		None
  3897 ;; Tracked objects:
  3898 ;;		On entry : 60/0
  3899 ;;		On exit  : 60/0
  3900 ;;		Unchanged: FFFFFF9F/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    3
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915  05E2                     _reset:	
  3916  05E2                     l724:	
  3917                           ; Regs used in _reset: []
  3918                           ;main.c: 296: while(1);
  3919                           
  3920  05E2  2DE2               	goto	l724
  3921                           
  3922                           	psect	text1302
  3923  05D6                     __ptext1302:	
  3924  05D6                     __end_of_reset:	
  3925                           
  3926 ;; =============== function _reset ends ============
  3927 ;; *************** function _selectAdChannel *****************
  3928 ;; Defined at:
  3929 ;;		line 283 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;		None
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;		None               void
  3936 ;; Registers used:
  3937 ;;		None
  3938 ;; Tracked objects:
  3939 ;;		On entry : 17F/0
  3940 ;;		On exit  : 17F/20
  3941 ;;		Unchanged: FFE80/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3943 ;;      Params:         0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0
  3946 ;;      Totals:         0       0       0       0       0
  3947 ;;Total ram usage:        0 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    3
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956  05D6                     _selectAdChannel:	
  3957                           
  3958                           ;main.c: 285: TRISB0 = 1;
  3959                           
  3960                           ; Regs used in _selectAdChannel: []
  3961  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  3962  05D7  1406               	bsf	6,0
  3963                           
  3964                           ;main.c: 286: TRISB1 = 1;
  3965  05D8  1486               	bsf	6,1
  3966  05D9  0008               	return
  3967  05DA                     __end_of_selectAdChannel:	
  3968                           
  3969                           	psect	text1303
  3970  052E                     __ptext1303:	
  3971 ;; =============== function _selectAdChannel ends ============
  3972                           
  3973                           
  3974 ;; *************** function _pwm_start *****************
  3975 ;; Defined at:
  3976 ;;		line 231 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  ucPulseWidth    1    wreg     unsigned char 
  3979 ;;  ucPulseFrequ    1   21[BANK0 ] unsigned char 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  ucPulseWidth    1   22[BANK0 ] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 60/0
  3988 ;;		On exit  : 60/0
  3989 ;;		Unchanged: FFF9F/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       1       0       0       0
  3992 ;;      Locals:         0       1       0       0       0
  3993 ;;      Temps:          0       0       0       0       0
  3994 ;;      Totals:         0       2       0       0       0
  3995 ;;Total ram usage:        2 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    3
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004  052E                     _pwm_start:	
  4005                           
  4006                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  4007                           ;pwm_start@ucPulseWidth stored from wreg
  4008  052E  00B6               	movwf	pwm_start@ucPulseWidth
  4009                           
  4010                           ;main.c: 233: CCP1CON&= 0xf0;
  4011  052F  30F0               	movlw	240
  4012  0530  0597               	andwf	23,f	;volatile
  4013                           
  4014                           ;main.c: 235: T2CON=0x04;
  4015  0531  3004               	movlw	4
  4016  0532  0092               	movwf	18	;volatile
  4017                           
  4018                           ;main.c: 236: PR2 = ucPulseFrequency;
  4019  0533  0835               	movf	pwm_start@ucPulseFrequency,w
  4020  0534  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0535  0092               	movwf	18	;volatile
  4022                           
  4023                           ;main.c: 237: CCPR1L = ucPulseWidth;
  4024  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0537  0836               	movf	pwm_start@ucPulseWidth,w
  4026  0538  0095               	movwf	21	;volatile
  4027                           
  4028                           ;main.c: 238: CCP1CON=0x00;
  4029  0539  0197               	clrf	23	;volatile
  4030                           
  4031                           ;main.c: 240: TRISB2=0;
  4032  053A  1683               	bsf	3,5	;RP0=1, select bank1
  4033  053B  300C               	movlw	12
  4034  053C  1106               	bcf	6,2
  4035                           
  4036                           ;main.c: 241: PBOD2 = 0;
  4037  053D  1703               	bsf	3,6	;RP1=1, select bank3
  4038  053E  1108               	bcf	8,2
  4039                           
  4040                           ;main.c: 243: CCP1CON|= 0x0c;
  4041  053F  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0540  1303               	bcf	3,6	;RP1=0, select bank0
  4043  0541  0497               	iorwf	23,f	;volatile
  4044  0542  0008               	return
  4045  0543                     __end_of_pwm_start:	
  4046                           
  4047                           	psect	text1311
  4048  0013                     __ptext1311:	
  4049 ;; =============== function _initPB3 ends ============
  4050                           
  4051                           
  4052 ;; *************** function _ISR *****************
  4053 ;; Defined at:
  4054 ;;		line 613 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;		None               void
  4061 ;; Registers used:
  4062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 60/0
  4066 ;;		Unchanged: FFE00/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4068 ;;      Params:         0       0       0       0       0
  4069 ;;      Locals:         0       0       0       0       0
  4070 ;;      Temps:          4       0       0       0       0
  4071 ;;      Totals:         4       0       0       0       0
  4072 ;;Total ram usage:        4 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    2
  4075 ;; This function calls:
  4076 ;;		i1_setAD_ConvertFlag
  4077 ;;		_adc_get
  4078 ;;		_vPutSampleDataIntoTable
  4079 ;; This function is called by:
  4080 ;;		Interrupt level 1
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083  0013                     _ISR:	
  4084                           
  4085                           ;common.c: 614: static unsigned char ucTimer1sCnt = 0;
  4086                           ;common.c: 617: if(TMR1IF == 1)
  4087  0013  1C0C               	btfss	12,0
  4088  0014  2851               	goto	i1l3762
  4089  0015  3064               	movlw	100
  4090                           
  4091                           ;common.c: 618: {
  4092                           ;common.c: 619: TMR1IF = 0 ;
  4093  0016  100C               	bcf	12,0
  4094                           
  4095                           ;common.c: 620: timer.timer10msStopWatch++;
  4096  0017  0AD1               	incf	_timer,f
  4097                           
  4098                           ;common.c: 621: ucTimer1sCnt++;
  4099  0018  0AC9               	incf	ISR@ucTimer1sCnt,f
  4100                           
  4101                           ;common.c: 625: if(ucTimer1sCnt >= 100)
  4102  0019  0249               	subwf	ISR@ucTimer1sCnt,w
  4103  001A  1C03               	skipc
  4104  001B  2851               	goto	i1l3762
  4105                           
  4106                           ;common.c: 626: {
  4107                           ;common.c: 627: ucTimer1sCnt = 0;
  4108  001C  01C9               	clrf	ISR@ucTimer1sCnt
  4109                           
  4110                           ;common.c: 628: if(uiBigTimer > 0)
  4111  001D  083E               	movf	_uiBigTimer+1,w
  4112  001E  043D               	iorwf	_uiBigTimer,w
  4113  001F  1903               	skipnz
  4114  0020  2827               	goto	i1l1663
  4115                           
  4116                           ;common.c: 629: uiBigTimer--;
  4117  0021  3001               	movlw	1
  4118  0022  02BD               	subwf	_uiBigTimer,f
  4119  0023  3000               	movlw	0
  4120  0024  1C03               	skipc
  4121  0025  03BE               	decf	_uiBigTimer+1,f
  4122  0026  02BE               	subwf	_uiBigTimer+1,f
  4123  0027                     i1l1663:	
  4124                           
  4125                           ;common.c: 631: if(uiSmallTimer)
  4126  0027  0842               	movf	_uiSmallTimer+1,w
  4127  0028  0441               	iorwf	_uiSmallTimer,w
  4128  0029  1903               	skipnz
  4129  002A  2831               	goto	i1l1664
  4130                           
  4131                           ;common.c: 632: uiSmallTimer--;
  4132  002B  3001               	movlw	1
  4133  002C  02C1               	subwf	_uiSmallTimer,f
  4134  002D  3000               	movlw	0
  4135  002E  1C03               	skipc
  4136  002F  03C2               	decf	_uiSmallTimer+1,f
  4137  0030  02C2               	subwf	_uiSmallTimer+1,f
  4138  0031                     i1l1664:	
  4139                           
  4140                           ;common.c: 634: if(uiTwentySecondsTimer)
  4141  0031  1683               	bsf	3,5	;RP0=1, select bank1
  4142  0032  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4143  0033  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4144  0034  1903               	skipnz
  4145  0035  283C               	goto	i1l1665
  4146                           
  4147                           ;common.c: 635: uiTwentySecondsTimer--;
  4148  0036  3001               	movlw	1
  4149  0037  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4150  0038  3000               	movlw	0
  4151  0039  1C03               	skipc
  4152  003A  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4153  003B  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4154  003C                     i1l1665:	
  4155                           
  4156                           ;common.c: 637: if(uiTwentyMinTimer)
  4157  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4158  003D  0844               	movf	_uiTwentyMinTimer+1,w
  4159  003E  0443               	iorwf	_uiTwentyMinTimer,w
  4160  003F  1903               	skipnz
  4161  0040  2847               	goto	i1l1666
  4162                           
  4163                           ;common.c: 638: uiTwentyMinTimer--;
  4164  0041  3001               	movlw	1
  4165  0042  02C3               	subwf	_uiTwentyMinTimer,f
  4166  0043  3000               	movlw	0
  4167  0044  1C03               	skipc
  4168  0045  03C4               	decf	_uiTwentyMinTimer+1,f
  4169  0046  02C4               	subwf	_uiTwentyMinTimer+1,f
  4170  0047                     i1l1666:	
  4171                           
  4172                           ;common.c: 640: if( uiOneHourTimer )
  4173  0047  0840               	movf	_uiOneHourTimer+1,w
  4174  0048  043F               	iorwf	_uiOneHourTimer,w
  4175  0049  1903               	skipnz
  4176  004A  2851               	goto	i1l3762
  4177                           
  4178                           ;common.c: 641: uiOneHourTimer--;
  4179  004B  3001               	movlw	1
  4180  004C  02BF               	subwf	_uiOneHourTimer,f
  4181  004D  3000               	movlw	0
  4182  004E  1C03               	skipc
  4183  004F  03C0               	decf	_uiOneHourTimer+1,f
  4184  0050  02C0               	subwf	_uiOneHourTimer+1,f
  4185  0051                     i1l3762:	
  4186                           
  4187                           ;common.c: 642: }
  4188                           ;common.c: 643: }
  4189                           ;common.c: 645: if(ADIF)
  4190  0051  1D0D               	btfss	13,2
  4191  0052  286C               	goto	i1l1671
  4192  0053  3001               	movlw	1
  4193                           
  4194                           ;common.c: 646: {
  4195                           ;common.c: 648: ADIF=0;
  4196  0054  110D               	bcf	13,2
  4197                           
  4198                           ;common.c: 649: setAD_ConvertFlag(1);
  4199  0055  2084  118A         	fcall	i1_setAD_ConvertFlag
  4200                           
  4201                           ;common.c: 651: if(sampleChannelSelect == 12)
  4202  0057  0859               	movf	_sampleChannelSelect,w
  4203  0058  3A0C               	xorlw	12
  4204  0059  1D03               	skipz
  4205  005A  2863               	goto	i1l3772
  4206                           
  4207                           ;common.c: 652: {
  4208                           ;common.c: 655: vPutSampleDataIntoTable(adc_get(),12);
  4209  005B  2079  118A         	fcall	_adc_get
  4210  005D  0871               	movf	?_adc_get+1,w
  4211  005E  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4212  005F  0870               	movf	?_adc_get,w
  4213  0060  00F6               	movwf	?_vPutSampleDataIntoTable
  4214  0061  300C               	movlw	12
  4215  0062  286A               	goto	L13
  4216  0063                     i1l3772:	
  4217                           ;common.c: 659: }
  4218                           
  4219                           
  4220                           ;common.c: 660: else
  4221                           ;common.c: 661: {
  4222                           ;common.c: 665: vPutSampleDataIntoTable(adc_get(),13);
  4223  0063  2079  118A         	fcall	_adc_get
  4224  0065  0871               	movf	?_adc_get+1,w
  4225  0066  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4226  0067  0870               	movf	?_adc_get,w
  4227  0068  00F6               	movwf	?_vPutSampleDataIntoTable
  4228  0069  300D               	movlw	13
  4229  006A                     L13:	
  4230  006A  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4231  006B  2087               	fcall	_vPutSampleDataIntoTable
  4232  006C                     i1l1671:	
  4233  006C  087C               	movf	??_ISR+3,w
  4234  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4235  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4236  006F  00FF               	movwf	127
  4237  0070  087B               	movf	??_ISR+2,w
  4238  0071  008A               	movwf	10
  4239  0072  087A               	movf	??_ISR+1,w
  4240  0073  0084               	movwf	4
  4241  0074  0E79               	swapf	??_ISR^(0+-128),w
  4242  0075  0083               	movwf	3
  4243  0076  0EFE               	swapf	126,f
  4244  0077  0E7E               	swapf	126,w
  4245  0078  0009               	retfie
  4246  0079                     __end_of_ISR:	
  4247  0079                     __ptext1314:	
  4248 ;; =============== function i1_setAD_ConvertFlag ends ============
  4249                           
  4250                           
  4251 ;; *************** function _adc_get *****************
  4252 ;; Defined at:
  4253 ;;		line 106 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  val             2    2[COMMON] unsigned int 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2    0[COMMON] unsigned int 
  4260 ;; Registers used:
  4261 ;;		wreg
  4262 ;; Tracked objects:
  4263 ;;		On entry : 60/0
  4264 ;;		On exit  : 60/20
  4265 ;;		Unchanged: FFF9F/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4267 ;;      Params:         2       0       0       0       0
  4268 ;;      Locals:         2       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0
  4270 ;;      Totals:         4       0       0       0       0
  4271 ;;Total ram usage:        4 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_ISR
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279  0079                     _adc_get:	
  4280                           
  4281                           ;periph.c: 107: unsigned int val;
  4282                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4283                           
  4284                           ; Regs used in _adc_get: [wreg]
  4285  0079  081E               	movf	30,w	;volatile
  4286  007A  00F3               	movwf	adc_get@val+1
  4287  007B  01F2               	clrf	adc_get@val
  4288  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4289  007D  081E               	movf	30,w	;volatile
  4290  007E  04F2               	iorwf	adc_get@val,f
  4291                           
  4292                           ;periph.c: 109: return val;
  4293  007F  0873               	movf	adc_get@val+1,w
  4294  0080  00F1               	movwf	?_adc_get+1
  4295  0081  0872               	movf	adc_get@val,w
  4296  0082  00F0               	movwf	?_adc_get
  4297  0083  0008               	return
  4298  0084                     __end_of_adc_get:	
  4299  0084                     __ptext1313:	
  4300 ;; =============== function _vPutSampleDataIntoTable ends ============
  4301                           
  4302                           
  4303 ;; *************** function i1_setAD_ConvertFlag *****************
  4304 ;; Defined at:
  4305 ;;		line 349 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  setAD_Conver    1    wreg     unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;		None               void
  4312 ;; Registers used:
  4313 ;;		wreg
  4314 ;; Tracked objects:
  4315 ;;		On entry : 60/0
  4316 ;;		On exit  : 60/0
  4317 ;;		Unchanged: FFF9F/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         0       0       0       0       0
  4320 ;;      Locals:         1       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0
  4322 ;;      Totals:         1       0       0       0       0
  4323 ;;Total ram usage:        1 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_ISR
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331  0084                     i1_setAD_ConvertFlag:	
  4332                           
  4333                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4334                           ;i1setAD_ConvertFlag@flag stored from wreg
  4335  0084  00F0               	movwf	i1setAD_ConvertFlag@flag
  4336                           
  4337                           ;common.c: 350: adc_convert_flag = flag;
  4338  0085  00CA               	movwf	_adc_convert_flag
  4339  0086  0008               	return
  4340  0087                     __end_ofi1_setAD_ConvertFlag:	
  4341  0087                     __ptext1312:	
  4342 ;; =============== function _ISR ends ============
  4343                           
  4344                           
  4345 ;; *************** function _vPutSampleDataIntoTable *****************
  4346 ;; Defined at:
  4347 ;;		line 165 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4350 ;;  channel         1    8[COMMON] unsigned char 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  uiDeviationV    2   17[BANK0 ] unsigned int 
  4353 ;;  uiAbstractVa    2   15[BANK0 ] unsigned int 
  4354 ;;  i               2   19[BANK0 ] int 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 60/20
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: FFE00/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         3       0       0       0       0
  4365 ;;      Locals:         0       6       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         3       6       0       0       0
  4368 ;;Total ram usage:        9 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    1
  4371 ;; This function calls:
  4372 ;;		_Filter
  4373 ;;		_getWaitResetFlag
  4374 ;;		_setPWM_Width
  4375 ;; This function is called by:
  4376 ;;		_ISR
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379  0087                     _vPutSampleDataIntoTable:	
  4380                           
  4381                           ;common.c: 167: static unsigned char ucCh12Length = 0;
  4382                           ;common.c: 169: static unsigned char ucCh13Length = 0;
  4383                           ;common.c: 171: static unsigned char ucChannelFourteenthLength = 0;
  4384                           ;common.c: 172: static unsigned int uiCalWidthArrayNew = 0;
  4385                           ;common.c: 173: static unsigned int uiCalWidthArrayOld = 0;
  4386                           ;common.c: 174: if(channel == 12)
  4387                           
  4388                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4389  0087  0878               	movf	vPutSampleDataIntoTable@channel,w
  4390  0088  3A0C               	xorlw	12
  4391  0089  1D03               	skipz
  4392  008A  2909               	goto	i1l3684
  4393                           
  4394                           ;common.c: 175: {
  4395                           ;common.c: 176: if(ucCh12Length < 3)
  4396  008B  3003               	movlw	3
  4397  008C  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4398  008D  1803               	skipnc
  4399  008E  2903               	goto	i1l3680
  4400                           
  4401                           ;common.c: 177: {
  4402                           ;common.c: 178: uiSampleCh12[ucCh12Length] = uiSampleData;
  4403  008F  1003               	clrc
  4404  0090  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4405  0091  3EAA               	addlw	_uiSampleCh12& (0+255)
  4406  0092  21E5  118A         	fcall	PL2	;call to abstracted procedure
  4407                           
  4408                           ;common.c: 180: ucCh12Length++;
  4409  0094  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4410                           
  4411                           ;common.c: 182: if( 3 == ucCh12Length )
  4412  0095  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4413  0096  3A03               	xorlw	3
  4414  0097  1D03               	skipz
  4415  0098  0008               	return
  4416  0099  30AA               	movlw	_uiSampleCh12& (0+255)
  4417                           
  4418                           ;common.c: 183: {
  4419                           ;common.c: 184: ucCh12Length = 0;
  4420  009A  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4421                           
  4422                           ;common.c: 188: static unsigned char bInitArrayFlag = 0;
  4423                           ;common.c: 190: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4424                           ;common.c: 192: static unsigned char uiInitWidth = 75;
  4425                           ;common.c: 194: uiCalWidthArrayNew = Filter(uiSampleCh12);
  4426  009B  215C  118A         	fcall	_Filter
  4427  009D  0871               	movf	?_Filter+1,w
  4428  009E  00C6               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1
  4429  009F  0870               	movf	?_Filter,w
  4430  00A0  00C5               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew
  4431                           
  4432                           ;common.c: 198: if( uiCalWidthArrayNew >= uiCalWidthArrayOld)
  4433  00A1  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4434  00A2  0246               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4435  00A3  1D03               	skipz
  4436  00A4  28A7               	goto	u121_25
  4437  00A5  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4438  00A6  0245               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4439  00A7                     u121_25:	
  4440  00A7  1C03               	skipc
  4441  00A8  28BC               	goto	i1l3652
  4442                           
  4443                           ;common.c: 199: {
  4444                           ;common.c: 200: uiAbstractValue = uiCalWidthArrayNew - uiCalWidthArrayOld;
  4445  00A9  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4446  00AA  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4447  00AB  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4448  00AC  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4449  00AD  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4450  00AE  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4451  00AF  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4452  00B0  1C03               	skipc
  4453  00B1  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4454  00B2  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4455                           
  4456                           ;common.c: 201: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) + uiAbst
      +                          ractValue;
  4457  00B3  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4458  00B4  21ED  118A         	fcall	PL3	;call to abstracted procedure
  4459  00B6  07B1               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4460  00B7  1803               	skipnc
  4461  00B8  0AB2               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4462  00B9  0830               	movf	vPutSampleDataIntoTable@uiAbstractValue+1,w
  4463  00BA  07B2               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4464                           
  4465                           ;common.c: 202: }
  4466  00BB  28CD               	goto	i1l3658
  4467  00BC                     i1l3652:	
  4468                           
  4469                           ;common.c: 203: else
  4470                           ;common.c: 204: {
  4471                           ;common.c: 205: uiAbstractValue = uiCalWidthArrayOld - uiCalWidthArrayNew;
  4472  00BC  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4473  00BD  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4474  00BE  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4475  00BF  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4476  00C0  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4477  00C1  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4478  00C2  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4479  00C3  1C03               	skipc
  4480  00C4  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4481  00C5  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4482                           
  4483                           ;common.c: 206: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) - uiAbst
      +                          ractValue;
  4484  00C6  21ED  118A         	fcall	PL3	;call to abstracted procedure
  4485  00C8  02B1               	subwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4486  00C9  0830               	movf	vPutSampleDataIntoTable@uiAbstractValue+1,w
  4487  00CA  1C03               	skipc
  4488  00CB  03B2               	decf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4489  00CC  02B2               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4490  00CD                     i1l3658:	
  4491                           
  4492                           ;common.c: 208: }
  4493                           ;common.c: 212: if(uiCalWidthCnt>400)
  4494  00CD  3001               	movlw	1
  4495  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  4496  00CF  0229               	subwf	(vPutSampleDataIntoTable@uiCalWidthCnt+1)^(0+128),w
  4497  00D0  3091               	movlw	145
  4498  00D1  1903               	skipnz
  4499  00D2  0228               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt^(0+128),w
  4500  00D3  1C03               	skipc
  4501  00D4  28DA               	goto	i1l1536
  4502                           
  4503                           ;common.c: 213: uiDeviationValue =400;
  4504  00D5  3090               	movlw	144
  4505  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4506  00D7  00B1               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4507  00D8  3001               	movlw	1
  4508  00D9  00B2               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4509  00DA                     i1l1536:	
  4510                           
  4511                           ;common.c: 216: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4512  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  4513  00DB  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4514  00DC  00C8               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1
  4515  00DD  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4516  00DE  00C7               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld
  4517                           
  4518                           ;common.c: 221: if(uiDeviationValue > (295))
  4519  00DF  3001               	movlw	1
  4520  00E0  0232               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4521  00E1  3028               	movlw	40
  4522  00E2  1903               	skipnz
  4523  00E3  0231               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4524  00E4  1C03               	skipc
  4525  00E5  28E8               	goto	i1l3664
  4526                           
  4527                           ;common.c: 222: {
  4528                           ;common.c: 225: uiInitWidth++;
  4529  00E6  0ADA               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4530                           
  4531                           ;common.c: 227: }
  4532  00E7  28EF               	goto	i1l3668
  4533  00E8                     i1l3664:	
  4534                           
  4535                           ;common.c: 228: else if(uiDeviationValue < (295))
  4536  00E8  3001               	movlw	1
  4537  00E9  0232               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4538  00EA  3027               	movlw	39
  4539  00EB  1903               	skipnz
  4540  00EC  0231               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4541  00ED  1C03               	btfss	3,0
  4542                           
  4543                           ;common.c: 229: {
  4544                           ;common.c: 232: uiInitWidth--;
  4545  00EE  03DA               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4546  00EF                     i1l3668:	
  4547                           ;common.c: 234: }
  4548                           
  4549                           
  4550                           ;common.c: 238: if(uiInitWidth > 249)
  4551  00EF  30FA               	movlw	250
  4552  00F0  025A               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4553  00F1  1C03               	skipc
  4554  00F2  28F5               	goto	i1l1541
  4555                           
  4556                           ;common.c: 239: uiInitWidth = 249;
  4557  00F3  30F9               	movlw	249
  4558  00F4  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4559  00F5                     i1l1541:	
  4560                           
  4561                           ;common.c: 241: if(uiInitWidth < 75)
  4562  00F5  304B               	movlw	75
  4563  00F6  025A               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4564  00F7  1803               	skipnc
  4565  00F8  28FB               	goto	i1l3674
  4566                           
  4567                           ;common.c: 242: uiInitWidth = 75;
  4568  00F9  304B               	movlw	75
  4569  00FA  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4570  00FB                     i1l3674:	
  4571                           
  4572                           ;common.c: 61: return bWaitResetFlag;
  4573                           
  4574                           ; Regs used in _getWaitResetFlag: [wreg]
  4575                           
  4576                           ;common.c: 246: if( 1 == getWaitResetFlag())
  4577  00FB  084F               	movf	_bWaitResetFlag,w
  4578  00FC  3A01               	xorlw	1
  4579  00FD  1D03               	skipz
  4580  00FE  2901               	goto	i1l3678
  4581                           
  4582                           ;common.c: 247: {
  4583                           ;common.c: 249: uiInitWidth = 150;
  4584  00FF  3096               	movlw	150
  4585  0100  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4586  0101                     i1l3678:	
  4587                           
  4588                           ;common.c: 250: }
  4589                           ;common.c: 251: setPWM_Width(uiInitWidth);
  4590  0101  085A               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4591  0102  29E2               	ljmp	_setPWM_Width
  4592  0103                     i1l3680:	
  4593                           
  4594                           ;common.c: 256: else
  4595                           ;common.c: 257: {
  4596                           ;common.c: 258: ucCh12Length = 0;
  4597  0103  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4598                           
  4599                           ;common.c: 260: uiSampleCh12[ucCh12Length] = uiSampleData;
  4600  0104  1003               	clrc
  4601  0105  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4602  0106  3EAA               	addlw	_uiSampleCh12& (0+255)
  4603  0107  21E5               	fcall	PL2	;call to abstracted procedure
  4604  0108  0008               	return
  4605  0109                     i1l3684:	
  4606                           
  4607                           ;common.c: 263: else if(channel == 13)
  4608  0109  0878               	movf	vPutSampleDataIntoTable@channel,w
  4609  010A  3A0D               	xorlw	13
  4610  010B  1D03               	skipz
  4611  010C  291E               	goto	i1l3696
  4612                           
  4613                           ;common.c: 264: {
  4614                           ;common.c: 265: if(ucCh13Length < 3)
  4615  010D  3003               	movlw	3
  4616  010E  1283               	bcf	3,5	;RP0=0, select bank0
  4617  010F  0257               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4618  0110  1803               	skipnc
  4619  0111  2918               	goto	i1l3692
  4620                           
  4621                           ;common.c: 266: {
  4622                           ;common.c: 267: uiSampleCh13[ucCh13Length] = uiSampleData;
  4623  0112  1003               	clrc
  4624  0113  0D57               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4625  0114  3EB0               	addlw	_uiSampleCh13& (0+255)
  4626  0115  21E5               	fcall	PL2	;call to abstracted procedure
  4627                           
  4628                           ;common.c: 269: ucCh13Length++;
  4629  0116  0AD7               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4630                           
  4631                           ;common.c: 270: }
  4632  0117  0008               	return
  4633  0118                     i1l3692:	
  4634                           
  4635                           ;common.c: 271: else
  4636                           ;common.c: 272: {
  4637                           ;common.c: 273: ucCh13Length = 0;
  4638  0118  01D7               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4639                           
  4640                           ;common.c: 275: uiSampleCh13[ucCh13Length] = uiSampleData;
  4641  0119  1003               	clrc
  4642  011A  0D57               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4643  011B  3EB0               	addlw	_uiSampleCh13& (0+255)
  4644  011C  21E5               	fcall	PL2	;call to abstracted procedure
  4645  011D  0008               	return
  4646  011E                     i1l3696:	
  4647                           
  4648                           ;common.c: 278: else if(channel == 14)
  4649  011E  0878               	movf	vPutSampleDataIntoTable@channel,w
  4650  011F  3A0E               	xorlw	14
  4651  0120  1D03               	skipz
  4652  0121  2933               	goto	i1l3708
  4653                           
  4654                           ;common.c: 279: {
  4655                           ;common.c: 280: if(ucChannelFourteenthLength < 3)
  4656  0122  3003               	movlw	3
  4657  0123  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0124  0258               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4659  0125  1803               	skipnc
  4660  0126  292D               	goto	i1l3704
  4661                           
  4662                           ;common.c: 281: {
  4663                           ;common.c: 282: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4664  0127  1003               	clrc
  4665  0128  0D58               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4666  0129  3EB6               	addlw	_uiSampleChannelFourteenth& (0+255)
  4667  012A  21E5               	fcall	PL2	;call to abstracted procedure
  4668                           
  4669                           ;common.c: 284: ucChannelFourteenthLength++;
  4670  012B  0AD8               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4671                           
  4672                           ;common.c: 285: }
  4673  012C  0008               	return
  4674  012D                     i1l3704:	
  4675                           
  4676                           ;common.c: 286: else
  4677                           ;common.c: 287: {
  4678                           ;common.c: 288: ucChannelFourteenthLength = 0;
  4679  012D  01D8               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4680                           
  4681                           ;common.c: 290: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4682  012E  1003               	clrc
  4683  012F  0D58               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4684  0130  3EB0               	addlw	_uiSampleCh13& (0+255)
  4685  0131  21E5               	fcall	PL2	;call to abstracted procedure
  4686  0132  0008               	return
  4687  0133                     i1l3708:	
  4688                           
  4689                           ;common.c: 293: else
  4690                           ;common.c: 294: {
  4691                           ;common.c: 295: ucCh12Length = 0;
  4692  0133  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4693                           
  4694                           ;common.c: 297: ucCh13Length = 0;
  4695  0134  1283               	bcf	3,5	;RP0=0, select bank0
  4696  0135  01D7               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4697                           
  4698                           ;common.c: 299: ucChannelFourteenthLength = 0;
  4699  0136  01D8               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4700                           
  4701                           ;common.c: 301: for(int i = 0;i < 3; i++)
  4702  0137  01B3               	clrf	vPutSampleDataIntoTable@i
  4703  0138  01B4               	clrf	vPutSampleDataIntoTable@i+1
  4704  0139                     i1l3714:	
  4705                           
  4706                           ;common.c: 302: {
  4707                           ;common.c: 303: uiSampleCh12[i] = 0;
  4708  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4709  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4710  013B  1003               	clrc
  4711  013C  0D33               	rlf	vPutSampleDataIntoTable@i,w
  4712  013D  3EAA               	addlw	_uiSampleCh12& (0+255)
  4713  013E  0084               	movwf	4
  4714  013F  1383               	bcf	3,7	;select IRP bank1
  4715                           
  4716                           ;common.c: 305: uiSampleCh13[i] = 0;
  4717  0140  2211  118A         	fcall	PL11	;call to abstracted procedure
  4718  0142  3EB0               	addlw	_uiSampleCh13& (0+255)
  4719  0143  0084               	movwf	4
  4720                           
  4721                           ;common.c: 307: uiSampleChannelFourteenth[i] = 0;
  4722  0144  2211  118A         	fcall	PL11	;call to abstracted procedure
  4723  0146  3EB6               	addlw	_uiSampleChannelFourteenth& (0+255)
  4724  0147  0084               	movwf	4
  4725  0148  0180               	clrf	0
  4726  0149  0A84               	incf	4,f
  4727  014A  0180               	clrf	0
  4728  014B  0AB3               	incf	vPutSampleDataIntoTable@i,f
  4729  014C  1903               	skipnz
  4730  014D  0AB4               	incf	vPutSampleDataIntoTable@i+1,f
  4731  014E  0834               	movf	vPutSampleDataIntoTable@i+1,w
  4732  014F  3A80               	xorlw	128
  4733  0150  00FF               	movwf	127
  4734  0151  3080               	movlw	128
  4735  0152  027F               	subwf	127,w
  4736  0153  1D03               	skipz
  4737  0154  2957               	goto	u132_25
  4738  0155  3003               	movlw	3
  4739  0156  0233               	subwf	vPutSampleDataIntoTable@i,w
  4740  0157                     u132_25:	
  4741  0157  1803               	btfsc	3,0
  4742  0158  0008               	return
  4743  0159  2939               	goto	i1l3714
  4744  015A                     __end_of_vPutSampleDataIntoTable:	
  4745  015A                     __ptext1317:	
  4746 ;; =============== function _setPWM_Width ends ============
  4747                           
  4748                           
  4749 ;; *************** function _getWaitResetFlag *****************
  4750 ;; Defined at:
  4751 ;;		line 60 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      unsigned char 
  4758 ;; Registers used:
  4759 ;;		wreg
  4760 ;; Tracked objects:
  4761 ;;		On entry : 160/0
  4762 ;;		On exit  : 160/0
  4763 ;;		Unchanged: FFE9F/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4765 ;;      Params:         0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0
  4768 ;;      Totals:         0       0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_vPutSampleDataIntoTable
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777  015A                     _getWaitResetFlag:	
  4778                           
  4779                           ;common.c: 61: return bWaitResetFlag;
  4780                           
  4781                           ; Regs used in _getWaitResetFlag: [wreg]
  4782  015A  084F               	movf	_bWaitResetFlag,w
  4783  015B  0008               	return
  4784  015C                     __end_of_getWaitResetFlag:	
  4785  015C                     __ptext1315:	
  4786 ;; =============== function _adc_get ends ============
  4787                           
  4788                           
  4789 ;; *************** function _Filter *****************
  4790 ;; Defined at:
  4791 ;;		line 117 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  tmpValue        1    wreg     PTR unsigned int 
  4794 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  tmpValue        1    4[BANK0 ] PTR unsigned int 
  4797 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4798 ;;  cir             2   11[BANK0 ] int 
  4799 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  4800 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  4801 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  4802 ;;  i               1   14[BANK0 ] unsigned char 
  4803 ;;  j               1   13[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2    0[COMMON] unsigned int 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4808 ;; Tracked objects:
  4809 ;;		On entry : 160/20
  4810 ;;		On exit  : 160/0
  4811 ;;		Unchanged: FFE00/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         2       0       0       0       0
  4814 ;;      Locals:         0      15       0       0       0
  4815 ;;      Temps:          4       0       0       0       0
  4816 ;;      Totals:         6      15       0       0       0
  4817 ;;Total ram usage:       21 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_vPutSampleDataIntoTable
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825  015C                     _Filter:	
  4826                           
  4827                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4828                           ;Filter@tmpValue stored from wreg
  4829  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4830  015D  00A4               	movwf	Filter@tmpValue
  4831  015E  01AD               	clrf	Filter@j
  4832                           
  4833                           ;common.c: 121: unsigned int filter_temp = 0, filter_sum = 0;
  4834  015F  01A0               	clrf	Filter@filter_temp
  4835  0160  01A1               	clrf	Filter@filter_temp+1
  4836  0161  01A2               	clrf	Filter@filter_sum
  4837  0162  01A3               	clrf	Filter@filter_sum+1
  4838                           
  4839                           ;common.c: 123: unsigned int filter_buf[3];
  4840                           ;common.c: 125: for(int cir = 0;cir < 3; cir++)
  4841  0163  01AB               	clrf	Filter@cir
  4842  0164  01AC               	clrf	Filter@cir+1
  4843  0165                     i1l3584:	
  4844                           
  4845                           ;common.c: 126: filter_buf[cir] = *tmpValue++;
  4846  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4847  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4848  0167  0824               	movf	Filter@tmpValue,w
  4849  0168  21FB  118A         	fcall	PL5	;call to abstracted procedure
  4850  016A  1003               	clrc
  4851  016B  0D2B               	rlf	Filter@cir,w
  4852  016C  2203  118A         	fcall	PL8	;call to abstracted procedure
  4853  016E  0AA4               	incf	Filter@tmpValue,f
  4854  016F  0AA4               	incf	Filter@tmpValue,f
  4855  0170  0AAB               	incf	Filter@cir,f
  4856  0171  1903               	skipnz
  4857  0172  0AAC               	incf	Filter@cir+1,f
  4858  0173  082C               	movf	Filter@cir+1,w
  4859  0174  3A80               	xorlw	128
  4860  0175  00FF               	movwf	127
  4861  0176  3080               	movlw	128
  4862  0177  027F               	subwf	127,w
  4863  0178  1D03               	skipz
  4864  0179  297C               	goto	u113_25
  4865  017A  3003               	movlw	3
  4866  017B  022B               	subwf	Filter@cir,w
  4867  017C                     u113_25:	
  4868  017C  1C03               	skipc
  4869  017D  2965               	goto	i1l3584
  4870                           
  4871                           ;common.c: 130: for(j = 0; j < 3 - 1; j++)
  4872  017E  1283               	bcf	3,5	;RP0=0, select bank0
  4873  017F  1303               	bcf	3,6	;RP1=0, select bank0
  4874  0180  01AD               	clrf	Filter@j
  4875                           
  4876                           ;common.c: 131: {
  4877                           ;common.c: 132: for(i = 0; i < 3 - 1 - j; i++)
  4878  0181  01AE               	clrf	Filter@i
  4879  0182                     i1l3606:	
  4880  0182  01F3               	clrf	??_Filter+1
  4881  0183  082D               	movf	Filter@j,w
  4882  0184  3C02               	sublw	2
  4883  0185  00F2               	movwf	??_Filter
  4884  0186  1C03               	skipc
  4885  0187  03F3               	decf	??_Filter+1,f
  4886  0188  0873               	movf	??_Filter+1,w
  4887  0189  3A80               	xorlw	128
  4888  018A  3C80               	sublw	128
  4889  018B  1D03               	skipz
  4890  018C  298F               	goto	u115_25
  4891  018D  0872               	movf	??_Filter,w
  4892  018E  022E               	subwf	Filter@i,w
  4893  018F                     u115_25:	
  4894  018F  1803               	btfsc	3,0
  4895  0190  29C4               	goto	i1l3608
  4896                           
  4897                           ;common.c: 133: {
  4898                           ;common.c: 134: if(filter_buf[i] > filter_buf[i + 1])
  4899  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4900  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4901  0193  1003               	clrc
  4902  0194  0D2E               	rlf	Filter@i,w
  4903  0195  3E25               	addlw	Filter@filter_buf& (0+255)
  4904  0196  21FB  118A         	fcall	PL5	;call to abstracted procedure
  4905  0198  220B  118A         	fcall	PL10	;call to abstracted procedure
  4906  019A  0800               	movf	0,w
  4907  019B  00F4               	movwf	??_Filter+2
  4908  019C  0A84               	incf	4,f
  4909  019D  0800               	movf	0,w
  4910  019E  00F5               	movwf	??_Filter+3
  4911  019F  0873               	movf	??_Filter+1,w
  4912  01A0  0275               	subwf	??_Filter+3,w
  4913  01A1  1D03               	skipz
  4914  01A2  29A5               	goto	u114_25
  4915  01A3  0872               	movf	??_Filter,w
  4916  01A4  0274               	subwf	??_Filter+2,w
  4917  01A5                     u114_25:	
  4918  01A5  1803               	skipnc
  4919  01A6  29C2               	goto	i1l3604
  4920                           
  4921                           ;common.c: 135: {
  4922                           ;common.c: 137: filter_temp = filter_buf[i];
  4923  01A7  1003               	clrc
  4924  01A8  0D2E               	rlf	Filter@i,w
  4925  01A9  3E25               	addlw	Filter@filter_buf& (0+255)
  4926  01AA  0084               	movwf	4
  4927  01AB  0800               	movf	0,w
  4928  01AC  00A0               	movwf	Filter@filter_temp
  4929  01AD  0A84               	incf	4,f
  4930  01AE  0800               	movf	0,w
  4931  01AF  00A1               	movwf	Filter@filter_temp+1
  4932                           
  4933                           ;common.c: 139: filter_buf[i] = filter_buf[i + 1];
  4934  01B0  220B  118A         	fcall	PL10	;call to abstracted procedure
  4935  01B2  0800               	movf	0,w
  4936  01B3  00F2               	movwf	??_Filter
  4937  01B4  0A84               	incf	4,f
  4938  01B5  0800               	movf	0,w
  4939  01B6  00F3               	movwf	??_Filter+1
  4940  01B7  1003               	clrc
  4941  01B8  0D2E               	rlf	Filter@i,w
  4942  01B9  2203  118A         	fcall	PL8	;call to abstracted procedure
  4943                           
  4944                           ;common.c: 141: filter_buf[i + 1] = filter_temp;
  4945  01BB  220B  118A         	fcall	PL10	;call to abstracted procedure
  4946  01BD  0820               	movf	Filter@filter_temp,w
  4947  01BE  0080               	movwf	0
  4948  01BF  0A84               	incf	4,f
  4949  01C0  0821               	movf	Filter@filter_temp+1,w
  4950  01C1  0080               	movwf	0
  4951  01C2                     i1l3604:	
  4952  01C2  0AAE               	incf	Filter@i,f
  4953  01C3  2982               	goto	i1l3606
  4954  01C4                     i1l3608:	
  4955  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  4956  01C5  3002               	movlw	2
  4957  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  4958  01C7  0AAD               	incf	Filter@j,f
  4959  01C8  022D               	subwf	Filter@j,w
  4960                           
  4961                           ;common.c: 142: }
  4962                           ;common.c: 143: }
  4963                           ;common.c: 144: }
  4964                           ;common.c: 146: for(i = 1; i < 3 - 1; i++)
  4965  01C9  01AE               	clrf	Filter@i
  4966  01CA  1C03               	skipc
  4967  01CB  2982               	goto	i1l3606
  4968  01CC  0AAE               	incf	Filter@i,f
  4969                           
  4970                           ;common.c: 147: {
  4971                           ;common.c: 148: filter_sum += filter_buf[i];
  4972  01CD  1003               	clrc
  4973  01CE                     L14:	
  4974  01CE  0D2E               	rlf	Filter@i,w
  4975  01CF  3E25               	addlw	Filter@filter_buf& (0+255)
  4976  01D0  21FB  118A         	fcall	PL5	;call to abstracted procedure
  4977  01D2  0872               	movf	??_Filter,w
  4978  01D3  07A2               	addwf	Filter@filter_sum,f
  4979  01D4  1803               	skipnc
  4980  01D5  0AA3               	incf	Filter@filter_sum+1,f
  4981  01D6  0873               	movf	??_Filter+1,w
  4982  01D7  07A3               	addwf	Filter@filter_sum+1,f
  4983  01D8  3002               	movlw	2
  4984  01D9  0AAE               	incf	Filter@i,f
  4985  01DA  022E               	subwf	Filter@i,w
  4986  01DB  1C03               	skipc
  4987  01DC  29CE               	goto	L14
  4988                           
  4989                           ;common.c: 149: }
  4990                           ;common.c: 152: return (filter_sum );
  4991  01DD  0823               	movf	Filter@filter_sum+1,w
  4992  01DE  00F1               	movwf	?_Filter+1
  4993  01DF  0822               	movf	Filter@filter_sum,w
  4994  01E0  00F0               	movwf	?_Filter
  4995  01E1  0008               	return
  4996  01E2                     __end_of_Filter:	
  4997  01E2                     __ptext1316:	
  4998 ;; =============== function _Filter ends ============
  4999                           
  5000                           
  5001 ;; *************** function _setPWM_Width *****************
  5002 ;; Defined at:
  5003 ;;		line 65 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  ucWidth         1    wreg     unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  ucWidth         1    0[COMMON] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;		None               void
  5010 ;; Registers used:
  5011 ;;		wreg
  5012 ;; Tracked objects:
  5013 ;;		On entry : 160/0
  5014 ;;		On exit  : 160/0
  5015 ;;		Unchanged: FFE9F/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5017 ;;      Params:         0       0       0       0       0
  5018 ;;      Locals:         1       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0
  5020 ;;      Totals:         1       0       0       0       0
  5021 ;;Total ram usage:        1 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_vPutSampleDataIntoTable
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029  01E2                     _setPWM_Width:	
  5030                           
  5031                           ; Regs used in _setPWM_Width: [wreg]
  5032                           ;setPWM_Width@ucWidth stored from wreg
  5033  01E2  00F0               	movwf	setPWM_Width@ucWidth
  5034                           
  5035                           ;common.c: 71: ucOldWidth = ucWidth;
  5036  01E3  0095               	movwf	21	;volatile
  5037  01E4  0008               	return
  5038  01E5                     __end_of_setPWM_Width:	
  5039  01E5                     PL2:	
  5040  01E5  0084               	movwf	4
  5041  01E6  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5042  01E7  1383               	bcf	3,7	;select IRP bank1
  5043  01E8  0080               	movwf	0
  5044  01E9  0A84               	incf	4,f
  5045  01EA  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5046  01EB  0080               	movwf	0
  5047  01EC  0008               	return
  5048  01ED                     PL3:	
  5049  01ED  00B2               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  5050  01EE  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  5051  01EF  00B1               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  5052  01F0  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  5053  01F1  07B1               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  5054  01F2  1803               	skipnc
  5055  01F3  0AB2               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5056  01F4  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  5057  01F5  07B2               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5058  01F6  1003               	clrc
  5059  01F7  0CB2               	rrf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5060  01F8  0CB1               	rrf	vPutSampleDataIntoTable@uiDeviationValue,f
  5061  01F9  082F               	movf	vPutSampleDataIntoTable@uiAbstractValue,w
  5062  01FA  0008               	return
  5063  01FB                     PL5:	
  5064  01FB  0084               	movwf	4
  5065  01FC  1383               	bcf	3,7	;select IRP bank0
  5066  01FD  0800               	movf	0,w
  5067  01FE  00F2               	movwf	??_Filter
  5068  01FF  0A84               	incf	4,f
  5069  0200  0800               	movf	0,w
  5070  0201  00F3               	movwf	??_Filter+1
  5071  0202  0008               	return
  5072  0203                     PL8:	
  5073  0203  3E25               	addlw	Filter@filter_buf& (0+255)
  5074  0204  0084               	movwf	4
  5075  0205  0872               	movf	??_Filter,w
  5076  0206  0080               	movwf	0
  5077  0207  0A84               	incf	4,f
  5078  0208  0873               	movf	??_Filter+1,w
  5079  0209  0080               	movwf	0
  5080  020A  0008               	return
  5081  020B                     PL10:	
  5082  020B  1003               	clrc
  5083  020C  0D2E               	rlf	Filter@i,w
  5084  020D  3E02               	addlw	2
  5085  020E  3E25               	addlw	Filter@filter_buf& (0+255)
  5086  020F  0084               	movwf	4
  5087  0210  0008               	return
  5088  0211                     PL11:	
  5089  0211  0180               	clrf	0
  5090  0212  0A84               	incf	4,f
  5091  0213  0180               	clrf	0
  5092  0214  1003               	clrc
  5093  0215  0D33               	rlf	vPutSampleDataIntoTable@i,w
  5094  0216  0008               	return
  5095                           
  5096                           	psect	intentry
  5097  0004                     __pintentry:	
  5098                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5099                           
  5100  0004                     interrupt_function:	
  5101  007E                     saved_w	set	btemp
  5102  0004  00FE               	movwf	btemp
  5103  0005  0E03               	swapf	3,w
  5104  0006  00F9               	movwf	??_ISR
  5105  0007  0804               	movf	4,w
  5106  0008  00FA               	movwf	??_ISR+1
  5107  0009  080A               	movf	10,w
  5108  000A  00FB               	movwf	??_ISR+2
  5109  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5110  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5111  000D  087F               	movf	btemp+1,w
  5112  000E  00FC               	movwf	??_ISR+3
  5113  000F  118A  2813         	ljmp	_ISR
  5114                           
  5115                           	psect	text1318
  5116  0000                     __ptext1318:	
  5117 ;; =============== function _getWaitResetFlag ends ============
  5118                           
  5119  007E                     btemp	set	126	;btemp
  5120  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Dec 02 19:18:38 2019

                                  ??_clock_config 0035                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 0035                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l704 0514  
                                             l712 0000                                               l721 0000  
                                             l730 0000                                               l715 0000  
                                             l724 05E2                                               l709 0000  
                                             l718 0000                                               l736 03BB  
                                             l684 0504                                               l694 050C  
                                             l679 04D7                                               l689 04E7  
                                             l699 04F2                                               _GIE 005F  
                                             _PB2 0032                                               _PB3 0033  
                                             _PB4 0034                                               _PB5 0035  
                                             _PR2 0092                                               _ISR 0013  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0037                                              ?_ISR 0070  
                            ??_startOneHoursTimer 0037                                __size_of_AD_Sample 0014  
                                            l4000 0000                                              l4010 0000  
                                            l4002 0000                                              l1610 0000  
                                            l4012 0000                                              l4004 0000  
                                            l4020 0000                                              l2324 0000  
                                            l4100 0000                                              l1613 0000  
                                            l4014 0000                                              l4006 0000  
                                            l4022 0000                                              l4030 0000  
                                            l2318 0000                                              l4110 0000  
                                            l1607 0000                                              l4008 0000  
                                            l4016 0000                                              l1616 0000  
                                            l4024 052A                                              l1560 05CF  
                                            l4032 0000                                              l4040 0000  
                                            l4200 0000                                              l4018 0000  
                                            l4026 0000                                              l4034 0000  
                                            l4042 0000                                              l4122 0000  
                                            l4202 0000                                              l1563 0000  
                                            l1475 0000                                              l4028 0000  
                                            l4044 0000                                              l4036 0000  
                                            l4052 0000                                              l4116 0000  
                                            l4124 0000                                              l4140 0000  
                                            l1572 0000                                              l4212 0000  
                                            l4300 0000                                              l1581 0000  
                                            l1566 0000                                              l4038 0000  
                                            l4046 0000                                              l4054 04C0  
                                            l4070 0000                                              l4118 0000  
                                            l4134 0000                                              l4142 0000  
                                            l4222 0000                                              l4214 0000  
                                            l4230 0000                                              l4310 0293  
                                            l4302 027F                                              l1575 0000  
                                            l4056 0000                                              l1656 0000  
                                            l4160 0000                                              l4208 0000  
                                            l4232 0000                                              l4240 0000  
                                            l4400 0000                                              l4320 0000  
                                            l4312 0294                                              l4304 0285  
                                            l1569 0000                                              l1497 0000  
                                            l4058 0000                                              l4074 0000  
                                            l4146 0000                                              l4170 0000  
                                            l4226 04A2                                              l4218 0000  
                                            l4234 0000                                              l4410 0380  
                                            l4402 036A                                              l4330 02B8  
                                            l4322 02A6                                              l4306 0287  
                                            l4068 0000                                              l4076 0000  
                                            l4092 0000                                              l4148 0000  
                                            l4172 0000                                              l4228 0000  
                                            l4236 0000                                              l4244 0000  
                                            l4252 0000                                              l4404 0000  
                                            l4340 0000                                              l4332 02B9  
                                            l4316 0000                                              l4260 0000  
                                            l4086 0000                                              l4094 0000  
                                            l4158 0000                                              l4190 0434  
                                            l4166 03CC                                              l4238 0000  
                                            l4414 0387                                              l4350 02D7  
                                            l4342 0000                                              l4318 029B  
                                            l4270 0000                                              l4262 0000  
                                            l4192 0000                                              l4168 0000  
                                            l4416 0000                                              l4408 037E  
                                            l4352 0000                                              l4344 0000  
                                            l4336 0000                                              l4280 0000  
                                            l4272 0000                                              l4264 0000  
                                            l4256 0000                                              l4098 0000  
                                            l4186 0431                                              l4370 0000  
                                            l4362 02F9                                              l4346 0000  
                                            l4338 02C0                                              l4282 024D  
                                            l4266 0000                                              l4258 0000  
                                            l4188 03EC                                              l4372 0000  
                                            l4364 02FC                                              l4348 0000  
                                            l4292 025F                                              l4276 0243  
                                            l4268 038B                                              l4390 0341  
                                            l4374 0000                                              l4366 02FE  
                                            l4294 0262                                              l4286 0259  
                                            l4392 0000                                              l4384 032B  
                                            l4296 0000                                              l4288 025A  
                                            l4394 0359                                              l4386 032D  
                                            l4298 0000                                              l4398 0365  
                                            l3980 0000                                              l3974 0000  
                                            l3982 0000                                              l3990 0000  
                                            _ADIE 046A                                              l3976 0000  
                                            l3984 0000                                              l3992 0000  
                                            _ADIF 006A                                              l3978 0000  
                                            l3986 0000                                              l3994 0000  
                                            l3988 0000                                              l3996 0000  
                                            l3998 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0035                                              u2217 023A  
                                            u1915 03E6                                              u1925 0415  
                                            u1935 03FD                                              _PEIE 005E  
                            FilterCh13@filter_buf 00C1                              FilterCh13@filter_sum 00BF  
                                            _main 0217                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 003B  
                      ??_isFinishedTwentyMinTimer 0035                                             ??_ISR 0079  
                               ??_setPinInitVaule 0036                        __end_of_isPermitSampleTime 05D6  
                             _sampleChannelSelect 0059                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 0084  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0035  
                               ??_selectAdChannel 0035                             FilterCh13@filter_temp 00BD  
                                      _FilterCh13 03C3                                   __end_of_initPB3 04DA  
                                 __end_of_initPB4 04EA                                   __end_of_initPB5 04F5  
                         _vPutSampleDataIntoTable 0087                                   __end_of_initPin 04CE  
                                           _reset 05E2                                             _timer 0051  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh13Value 03C3  
                   __size_of_startTwelveHourTimer 000E                              __end_of_clrSampeTime 05E2  
                                    __end_of_main 03BC                            __size_of_adc_test_init 001B  
                               __end_of_AD_Sample 04A5                                            ??_main 00CB  
                             setPWM_Width@ucWidth 0070                                     main@ucChValue 00CC  
                                   main@ucDelay1s 00A2                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 05D2  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l1510 0000  
                                          i1l1541 00F5                                            i1l2327 0000  
                                          i1l1536 00DA                                            i1l1484 0000  
                                          u113_25 017C                                            u121_25 00A7  
                                          i1l1478 0000                                            i1l1575 0000  
                                          i1l1671 006C                                            i1l1663 0027  
                                          i1l1664 0031                                            i1l1665 003C  
                                          i1l3610 0000                                            i1l1666 0047  
                                          i1l3524 0000                                            i1l3620 0000  
                                          i1l3604 01C2                                            u114_25 01A5  
                                          i1l3606 0182                                            i1l3702 0000  
                                          i1l3528 0000                                            i1l3608 01C4  
                                          i1l3704 012D                                            i1l3640 0000  
                                          i1l3632 0000                                            i1l3618 0000  
                                          i1l3714 0139                                            i1l3706 0000  
                                          i1l3650 0000                                            i1l3642 0000  
                                          i1l3634 0000                                            i1l3626 0000  
                                          i1l3716 0000                                            i1l3708 0133  
                                          i1l3652 00BC                                            i1l3644 0000  
                                          i1l3740 0000                                            u115_25 018F  
                                          i1l3590 0000                                            i1l3718 0000  
                                          i1l3654 0000                                            i1l3638 0000  
                                          i1l3750 0000                                            i1l3584 0165  
                                          i1l3664 00E8                                            i1l3656 0000  
                                          i1l3648 0000                                            i1l3680 0103  
                                          i1l3744 0000                                            i1l3586 0000  
                                          i1l3578 0000                                            i1l3690 0000  
                                          i1l3682 0000                                            i1l3674 00FB  
                                          i1l3658 00CD                                            i1l3746 0000  
                                          i1l3762 0051                                            i1l3588 0000  
                                          i1l3692 0118                                            i1l3668 00EF  
                                          i1l3684 0109                                            i1l3772 0063  
                                          u132_25 0157                                            i1l3774 0000  
                                          i1l3694 0000                                            i1l3678 0101  
                                          i1l3766 0000                                            i1l3696 011E  
                                          i1l3768 0000                                            i1l3778 0000  
                           __end_of_resetAllTimer 051D                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 048A  
                               _setAD_ConvertFlag 048E                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 015C                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0035                     __size_of_clearThreeHoursTimer 0004  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0035  
                             ??_setAD_ConvertFlag 0035                                            _setPB3 04FD  
                                          _setPB4 0506                                            _setPB5 050E  
                     __end_of_clearTwentyMinTimer 052E                                            clrloop 05C3  
                                Filter@filter_buf 0025                                         ??_initPB3 0035  
                                       ??_initPB4 0035                                         ??_initPB5 0035  
                                Filter@filter_sum 0022                                         ??_initPin 0036  
                       ??_vPutSampleDataIntoTable 0079                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0035                                       ?_FilterCh13 0035  
                        __end_of_setWaitResetFlag 05DD                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 04A5                         __end_of_getAD_ConvertFlag 048E  
                       __end_of_setAD_ConvertFlag 0491                                     ?_setPWM_Width 0070  
                              __size_of_adc_start 0004                          _initPB2_AsHighResistence 04DA  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 05B8  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 00A4                                     __end_of_reset 05D6  
                               main@uiTimerTwoP5s 00A6                            setWaitResetFlag@bValue 0035  
                  vPutSampleDataIntoTable@channel 0078                         _isFinishedThreeHoursTimer 059A  
                           __end_of_timer1_config 05C2                         __size_of_getWaitResetFlag 0002  
                                  ?_adc_test_init 0035                       __end_of_startTwentyMinTimer 058F  
                                         ??_reset 0035                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 003D  
                                      __pbssBANK1 00A0                                    ??_setPWM_Width 0070  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 04F5  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 0043  
                 __end_of_vPutSampleDataIntoTable 015A                                           ?_Filter 0070  
                     __size_of_clearOneHoursTimer 0004                                        __pmaintext 0217  
             vPutSampleDataIntoTable@ucCh12Length 007D                               __size_of_FilterCh13 0095  
             vPutSampleDataIntoTable@ucCh13Length 0057           vPutSampleDataIntoTable@uiDeviationValue 0031  
                                 _selectAdChannel 05D6                                        __pintentry 0004  
                                         _CCP1CON 0017                                        __ptext1300 051D  
                                      __ptext1301 05E2                                        __ptext1310 04CE  
                                      __ptext1302 05D6                                        __ptext1311 0013  
                                      __ptext1303 052E                                        __ptext1312 0087  
                                      __ptext1304 04DA                                        __ptext1313 0084  
                                      __ptext1305 050E                                        __ptext1314 0079  
                                      __ptext1306 04EA                                        __ptext1315 015C  
                                      __ptext1307 0506                                        __ptext1316 01E2  
                                      __ptext1308 04DF                                        __ptext1317 015A  
                                      __ptext1309 04FD                                        __ptext1318 0000  
                                         ?_setPB3 0070                                           ?_setPB4 0070  
                                      __ptext1280 03C3                                        __ptext1272 03BC  
                                         ?_setPB5 0070                                        __ptext1281 05DA  
                                      __ptext1273 0474                                        __ptext1290 05D2  
                                      __ptext1282 058F                                        __ptext1274 0516  
                                      __ptext1291 04C0                                        __ptext1283 0557  
                                      __ptext1275 04F5                                        __ptext1292 0581  
                                      __ptext1284 059A                                        __ptext1276 04C4  
                                      __ptext1293 04A5                                        __ptext1285 0565  
                                      __ptext1277 0491                                        __ptext1294 05DD  
                                      __ptext1286 05A4                                        __ptext1278 048E  
                                      __ptext1295 05B8                                        __ptext1287 0573  
                                      __ptext1279 048A                                        __ptext1296 05CA  
                                      __ptext1288 05AE                                        __ptext1297 052A  
                                      __ptext1289 05E0                                        __ptext1298 0526  
                                      __ptext1299 0522                             __size_of_clock_config 0008  
                                    _clrSampeTime 05E0                                 __end_of_adc_start 04C4  
                            _uiTwentySecondsTimer 00A0                                _isPermitSampleTime 05D2  
                                         Filter@i 002E                                           Filter@j 002D  
                              __size_of_pwm_start 0015                       __size_of_startOneHoursTimer 000E  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimerP3s 0055  
                                  main@ucTimerP5s 0056                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0086                                        _uiBigTimer 003D  
                                    setPB3@bValue 0035                                      setPB4@bValue 0035  
                                    _clock_config 05CA                                      setPB5@bValue 0035  
                                         _adc_get 0079                                   __size_of_setPB3 0009  
                                 __size_of_setPB4 0008                                   __size_of_setPB5 0008  
                            ??_isPermitSampleTime 0035                      __end_of_startTwelveHourTimer 0581  
                                   initPB3@bValue 0035                                     initPB4@bValue 0035  
                                       _AD_Sample 0491                                           _initPB3 04CE  
                                         _initPB4 04DF                                           _initPB5 04EA  
                                    __size_of_ISR 0066                                     initPB5@bValue 0035  
                                         _initPin 04C4                              _bSmallTimerStartFlag 004D  
                                 ??_adc_test_init 0036                 __size_of_isFinishedTwentyMinTimer 000A  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 04FD  
                            end_of_initialization 0554                                 Filter@filter_temp 0020  
                           pwm_start@ucPulseWidth 0036                           __end_of_selectAdChannel 05DA  
                         _isFinishedOneHoursTimer 058F                                 __end_of_pwm_start 0543  
                            __end_of_setPWM_Width 01E5                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 0035                                         Filter@cir 002B  
                             _bTwentyMinStartFlag 004E                                  _adc_convert_flag 004A  
                                    ??_FilterCh13 0037                                  _getWaitResetFlag 015A  
                    __end_of_clearThreeHoursTimer 0526                    __size_of_clearTwelveHoursTimer 0005  
                               ?_setWaitResetFlag 0070                           _timer1_interrupt_config 05DD  
                   __end_of_clearTwelveHoursTimer 0522                        ??_initPB2_AsHighResistence 0035  
                              ??_setWaitResetFlag 0035                __size_of_isFinishedThreeHoursTimer 000A  
                                      main@ucStep 0054                                    __end_of_Filter 01E2  
                   startTwentyMinTimer@uiSetValue 0035               __size_of_isFinishedTwelveHoursTimer 000A  
                              FilterCh13@tmpValue 00BC                                __end_of_FilterCh13 0458  
                        vPutSampleDataIntoTable@i 0033                               i1_setAD_ConvertFlag 0084  
                                  __end_of_setPB3 0506                                    __end_of_setPB4 050E  
                                  __end_of_setPB5 0516                            __size_of_resetAllTimer 0007  
                             start_initialization 0543                                       __end_of_ISR 0079  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 003D  
                    __size_of_clearTwentyMinTimer 0004                         ??_isFinishedOneHoursTimer 0035  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 0573  
               __end_of_isFinishedThreeHoursTimer 05A4                                  ?_selectAdChannel 0070  
                                        ??_Filter 0072                                       __pdataBANK0 0059  
                                        ??_setPB3 0035                                          ??_setPB4 0035  
                                        ??_setPB5 0035                          ?_vPutSampleDataIntoTable 0076  
                                     ??_AD_Sample 0035                         ??_timer1_interrupt_config 0035  
                                     __pbssCOMMON 007D                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00BC                                         _adc_start 04C0  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 00CE  
                           ?_startTwelveHourTimer 0035                                     _resetAllTimer 0516  
                      __end_of_clearOneHoursTimer 052A                      __size_of_startTwentyMinTimer 000E  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 0522  
                           __size_of_setPWM_Width 0003                      __end_of_startThreeHoursTimer 0573  
                               main@cTimerP5s_792 0053                                 main@cTimerP5s_786 0052  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 059A  
              __end_of_isFinishedTwelveHoursTimer 05AE                        _isFinishedTwelveHoursTimer 05A4  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 0049  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 0565  
                __end_of_initPB2_AsHighResistence 04DF                         _uiSampleChannelFourteenth 00B6  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset FFF4                                    ?_resetAllTimer 0070  
                               interrupt_function 0004                                      _setPWM_Width 01E2  
                                  _bWaitResetFlag 004F                   __end_of_timer1_interrupt_config 05E0  
                       pwm_start@ucPulseFrequency 0035                          __end_of_getWaitResetFlag 015C  
                           ?_clearThreeHoursTimer 0070                                      _uiSampleCh12 00AA  
                                    _uiSampleCh13 00B0                              adc_test_init@channel 0037  
             vPutSampleDataIntoTable@uiSampleData 0076                       __size_of_isPermitSampleTime 0004  
                                       _pwm_start 052E         vPutSampleDataIntoTable@uiCalWidthArrayOld 0047  
       vPutSampleDataIntoTable@uiCalWidthArrayNew 0045                                      _uiSmallTimer 0041  
            vPutSampleDataIntoTable@uiCalWidthCnt 00A8                             __end_of_adc_test_init 04C0  
                                   _timer1_config 05B8                      ??_process_AD_Converter_Value 0038  
                          ??_startTwelveHourTimer 0037                         __size_of_setWaitResetFlag 0003  
                          _getAdOriginalCh13Value 03BC                               _clearTwentyMinTimer 052A  
                     startOneHoursTimer@uiSetTime 0035                                  __size_of_adc_get 000B  
             __size_of_process_AD_Converter_Value 0016                                        ?_pwm_start 0035  
                        _isFinishedTwentyMinTimer 05AE  vPutSampleDataIntoTable@ucChannelFourteenthLength 0058  
                                __size_of_initPB3 000C                                  __size_of_initPB4 000B  
                                __size_of_initPB5 000B                                  __size_of_initPin 000A  
                                  Filter@tmpValue 0024                                    ?_timer1_config 0070  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0035  
                                 ??_resetAllTimer 0035                              _startThreeHoursTimer 0565  
                           _clearTwelveHoursTimer 051D                                    _uiOneHourTimer 003F  
                                   __size_of_main 01A5                vPutSampleDataIntoTable@uiInitWidth 005A  
                                   FilterCh13@cir 00C7                                          clear_ram 05C2  
                          ??_clearThreeHoursTimer 0035                 __size_of_initPB2_AsHighResistence 0005  
                       ?_initPB2_AsHighResistence 0070                            _bOneHourTimerStartFlag 004C  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 0581  
                                     _sampleTimes 0050                             ??_clearTwentyMinTimer 0035  
                           ?_startThreeHoursTimer 0035                  __size_of_vPutSampleDataIntoTable 00D3  
                                        intlevel1 0000                              ?_startTwentyMinTimer 0035  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
          vPutSampleDataIntoTable@uiAbstractValue 002F                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                                _clearOneHoursTimer 0526  
                   startThreeHoursTimer@uiSetTime 0035                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 0036                                    ??_clrSampeTime 0035  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 004B  
                                 ??_timer1_config 0035                                       FilterCh13@i 00CA  
                                     FilterCh13@j 00C9                               ?_clearOneHoursTimer 0070  
                     __end_ofi1_setAD_ConvertFlag 0087                __end_of_process_AD_Converter_Value 048A  
                      _process_AD_Converter_Value 0474                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0035  
                           ??_startTwentyMinTimer 0037                                _startOneHoursTimer 0557  
                            ??_clearOneHoursTimer 0035                                  _setWaitResetFlag 05DA  
