

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Jul 03 23:14:39 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	text755,local,class=CODE,delta=2
    20                           	psect	text756,local,class=CODE,delta=2
    21                           	psect	text759,local,class=CODE,delta=2
    22                           	psect	text765,local,class=CODE,delta=2
    23                           	psect	text766,local,class=CODE,delta=2
    24                           	psect	text767,local,class=CODE,delta=2
    25                           	psect	text768,local,class=CODE,delta=2
    26                           	psect	text769,local,class=CODE,delta=2
    27                           	psect	text770,local,class=CODE,delta=2
    28                           	psect	text771,local,class=CODE,delta=2
    29                           	psect	text772,local,class=CODE,delta=2
    30                           	psect	text774,local,class=CODE,delta=2
    31                           	psect	text775,local,class=CODE,delta=2
    32                           	psect	text776,local,class=CODE,delta=2
    33                           	psect	text778,local,class=CODE,delta=2
    34                           	psect	text779,local,class=CODE,delta=2
    35                           	psect	text780,local,class=CODE,delta=2
    36                           	psect	text781,local,class=CODE,delta=2
    37                           	psect	text785,local,class=CODE,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text789,local,class=CODE,delta=2
    40                           	psect	pa_nodes,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  000A                     	;#
    43                           
    44                           	psect	config
    45  2000  2FFF               	dw	12287	;#
    46  2001  3FDE               	dw	16350	;#
    47  2002  3FF8               	dw	16376	;#
    48                           
    49                           	psect	idataBANK0
    50  0000                     __pidataBANK0:	
    51  001F                     _ADCON0	set	31
    52  001E                     _ADRESH	set	30
    53  001B                     _OP1CON0	set	27
    54  001C                     _OP1CON1	set	28
    55  001D                     _OP1CON2	set	29
    56  0010                     _T1CON	set	16
    57  000F                     _TMR1H	set	15
    58  000E                     _TMR1L	set	14
    59  006A                     _ADIF	set	106
    60  00F8                     _ADON	set	248
    61  005F                     _GIE	set	95
    62  00F9                     _GO	set	249
    63  0028                     _PA0	set	40
    64  0029                     _PA1	set	41
    65  002A                     _PA2	set	42
    66  002B                     _PA3	set	43
    67  002E                     _PA6	set	46
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  0037                     _PB7	set	55
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0436                     _TRISB6	set	1078
    96  0437                     _TRISB7	set	1079
    97  0108                     _CLKPR	set	264
    98  0847                     _CLKPCE	set	2119
    99  0C46                     _PBOD6	set	3142
   100  0C47                     _PBOD7	set	3143
   101                           
   102                           	psect	cinit
   103  05B9                     start_initialization:	
   104  05B9  3048               	movlw	low __pbssBANK0
   105                           
   106                           ; Clear objects allocated to COMMON
   107  05BA  01FD               	clrf	__pbssCOMMON& (0+127)
   108                           
   109                           ; Clear objects allocated to BANK0
   110  05BB  1383               	bcf	3,7	;select IRP bank0
   111  05BC  0084               	movwf	4
   112  05BD  306E               	movlw	low (__pbssBANK0+38)
   113  05BE  118A  263F  118A   	fcall	clear_ram
   114                           
   115                           ; Clear objects allocated to BANK1
   116  05C1  30A0               	movlw	low __pbssBANK1
   117  05C2  0084               	movwf	4
   118  05C3  30DC               	movlw	low (__pbssBANK1+60)
   119  05C4  118A  263F  118A   	fcall	clear_ram
   120  05C7  3090               	movlw	low __pbssBANK3
   121                           
   122                           ; Clear objects allocated to BANK3
   123  05C8  1783               	bsf	3,7	;select IRP bank2
   124  05C9  0084               	movwf	4
   125  05CA  30A8               	movlw	low (__pbssBANK3+24)
   126  05CB  118A  263F         	fcall	clear_ram
   127                           
   128                           ;initializer for _sampleChannelSelect
   129  05CD  300E               	movlw	14
   130  05CE  00EE               	movwf	__pdataBANK0& (0+127)
   131  05CF                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  05CF  0183               	clrf	3
   135  05D0  118A  2813         	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  007D                     __pbssCOMMON:	
   139  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   140  007D                     	ds	1
   141                           
   142                           	psect	bssBANK0
   143  0048                     __pbssBANK0:	
   144  0048                     _sampleTimes:	
   145  0048                     	ds	1
   146  0049                     main@bCheckTweHour:	
   147  0049                     	ds	1
   148  004A                     main@enumBranchStep:	
   149  004A                     	ds	1
   150  004B                     main@enumMainLoopStep:	
   151  004B                     	ds	1
   152  004C                     main@ucADC4_Step:	
   153  004C                     	ds	1
   154  004D                     main@ucChannel4Type:	
   155  004D                     	ds	1
   156  004E                     main@ucLoaderStep:	
   157  004E                     	ds	1
   158  004F                     main@ucLoaderStep1:	
   159  004F                     	ds	1
   160  0050                     main@ucLoaderStep2:	
   161  0050                     	ds	1
   162  0051                     main@ucLoaderStep3:	
   163  0051                     	ds	1
   164  0052                     main@ucLoaderStep4:	
   165  0052                     	ds	1
   166  0053                     main@ucTimer1s:	
   167  0053                     	ds	1
   168  0054                     main@ucTimer20s:	
   169  0054                     	ds	1
   170  0055                     main@ucTimerADC1ZeroP5s:	
   171  0055                     	ds	1
   172  0056                     main@ucTimerDelay:	
   173  0056                     	ds	1
   174  0057                     main@ucTimerDelay1:	
   175  0057                     	ds	1
   176  0058                     main@ucTimerDelay2:	
   177  0058                     	ds	1
   178  0059                     main@ucTimerDelay3:	
   179  0059                     	ds	1
   180  005A                     main@ucTimerDelay4:	
   181  005A                     	ds	1
   182  005B                     main@ucTimerDelayP5s:	
   183  005B                     	ds	1
   184  005C                     main@ucTimerForDACR0_CNT1:	
   185  005C                     	ds	1
   186  005D                     main@ucTimerForDACR0_CNT1_f:	
   187  005D                     	ds	1
   188  005E                     main@ucTimerForDACR0_CNT2:	
   189  005E                     	ds	1
   190  005F                     main@ucTimerForDACR0_CNT2_f:	
   191  005F                     	ds	1
   192  0060                     main@ucTimerLessADC1ZeroP5s:	
   193  0060                     	ds	1
   194  0061                     main@ucTimerLessX1P5s:	
   195  0061                     	ds	1
   196  0062                     main@ucTimerLessX2P5s:	
   197  0062                     	ds	1
   198  0063                     main@ucTimerP5s:	
   199  0063                     	ds	1
   200  0064                     main@ucTimerPA6DelayP1s:	
   201  0064                     	ds	1
   202  0065                     main@ucTimerPB6DelayP1s:	
   203  0065                     	ds	1
   204  0066                     main@ucTimerRightP5s:	
   205  0066                     	ds	1
   206  0067                     main@ucTimerSeond1s:	
   207  0067                     	ds	1
   208  0068                     main@ucTimerX1P5s:	
   209  0068                     	ds	1
   210  0069                     main@ucTimerX2P5s:	
   211  0069                     	ds	1
   212  006A                     main@ucTimerZeroPoint3s:	
   213  006A                     	ds	1
   214  006B                     main@ucTimerZeroPoint5s:	
   215  006B                     	ds	1
   216  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   217  006C                     	ds	1
   218  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   219  006D                     	ds	1
   220                           
   221                           	psect	dataBANK0
   222  006E                     __pdataBANK0:	
   223  006E                     _sampleChannelSelect:	
   224  006E                     	ds	1
   225                           
   226                           	psect	bssBANK1
   227  00A0                     __pbssBANK1:	
   228  00A0                     _uiBigTimer:	
   229  00A0                     	ds	2
   230  00A2                     _uiSmallTimer:	
   231  00A2                     	ds	2
   232  00A4                     _uiTwentySecondsTimer:	
   233  00A4                     	ds	2
   234  00A6                     ISR@ucTimer1sCnt:	
   235  00A6                     	ds	1
   236  00A7                     _adc_convert_flag:	
   237  00A7                     	ds	1
   238  00A8                     _timer:	
   239  00A8                     	ds	1
   240  00A9                     main@cTimer1s_825:	
   241  00A9                     	ds	1
   242  00AA                     main@enumInteralStep:	
   243  00AA                     	ds	1
   244  00AB                     main@ucTimerP3s:	
   245  00AB                     	ds	1
   246  00AC                     _uiSampleChannelFirst:	
   247  00AC                     	ds	24
   248  00C4                     _uiSampleChannelFourth:	
   249  00C4                     	ds	24
   250                           
   251                           	psect	bssBANK3
   252  0190                     __pbssBANK3:	
   253  0190                     _uiSampleChannelFourteenth:	
   254  0190                     	ds	24
   255                           
   256                           	psect	clrtext
   257  063F                     clear_ram:	
   258                           ;	Called with FSR containing the base address, and
   259                           ;	W with the last address+1
   260                           
   261  063F  0064               	clrwdt	;clear the watchdog before getting into this loop
   262  0640                     clrloop:	
   263  0640  0180               	clrf	0	;clear RAM location pointed to by FSR
   264  0641  0A84               	incf	4,f	;increment pointer
   265  0642  0604               	xorwf	4,w	;XOR with final address
   266  0643  1903               	btfsc	3,2	;have we reached the end yet?
   267  0644  3400               	retlw	0	;all done for this memory range, return
   268  0645  0604               	xorwf	4,w	;XOR again to restore value
   269  0646  2E40               	goto	clrloop	;do the next byte
   270                           
   271                           	psect	cstackCOMMON
   272  0070                     __pcstackCOMMON:	
   273  0070                     ?_clearTwelveHoursTimer:	
   274  0070                     ?_clearThreeHoursTimer:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_clearTwentySecondsTimer:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_clock_config:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_timer1_config:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_timer1_interrupt_config:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_dac_init:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_op1_init:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_op2_init:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_adc_start:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_process_AD_Converter_Value:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_clrSampeTime:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_startTwentySecondsTimer:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_AD_Sample:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_clearAllTimer:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_clearPinPortAndTimer:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_initPin:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_main:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_setAD_ConvertFlag:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_ISR:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?i1_setAD_ConvertFlag:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ??i1_setAD_ConvertFlag:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_isPermitSampleTime:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_isFinishedTwelveHoursTimer:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_isFinishedTwentySecondsTimer:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_isFinishedThreeHoursTimer:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_getAD_ConvertFlag:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_adc_get:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     i1setAD_ConvertFlag@flag:	
   356                           ; 2 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0070                     	ds	2
   361  0072                     ??_adc_get:	
   362  0072                     adc_get@val:	
   363                           ; 0 bytes @ 0x2
   364                           
   365                           
   366                           ; 2 bytes @ 0x2
   367  0072                     	ds	2
   368  0074                     ?_vPutSampleDataIntoTable:	
   369  0074                     vPutSampleDataIntoTable@uiSampleData:	
   370                           ; 0 bytes @ 0x4
   371                           
   372                           
   373                           ; 2 bytes @ 0x4
   374  0074                     	ds	2
   375  0076                     vPutSampleDataIntoTable@channel:	
   376                           
   377                           ; 1 bytes @ 0x6
   378  0076                     	ds	1
   379  0077                     ??_vPutSampleDataIntoTable:	
   380  0077                     vPutSampleDataIntoTable@i:	
   381                           ; 0 bytes @ 0x7
   382                           
   383                           
   384                           ; 2 bytes @ 0x7
   385  0077                     	ds	2
   386  0079                     ??_ISR:	
   387                           
   388                           ; 0 bytes @ 0x9
   389  0079                     	ds	4
   390                           
   391                           	psect	cstackBANK0
   392  0020                     __pcstackBANK0:	
   393  0020                     ??_clearTwelveHoursTimer:	
   394  0020                     ??_clearThreeHoursTimer:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0020                     ??_clearTwentySecondsTimer:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0020                     ??_clock_config:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0020                     ??_timer1_config:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0020                     ??_timer1_interrupt_config:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0020                     ?_adc_test_init:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0020                     ??_dac_init:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0020                     ??_op1_init:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0020                     ??_op2_init:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ??_adc_start:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ??_isPermitSampleTime:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ??_clrSampeTime:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ?_startTwelveHourTimer:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ??_isFinishedTwelveHoursTimer:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     ??_startTwentySecondsTimer:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0020                     ??_isFinishedTwentySecondsTimer:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0020                     ?_startThreeHoursTimer:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0020                     ??_isFinishedThreeHoursTimer:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0020                     ??_AD_Sample:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     ??_clearAllTimer:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0020                     ??_clearPinPortAndTimer:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0020                     ??_initPin:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0020                     ??_getAD_ConvertFlag:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0020                     ??_setAD_ConvertFlag:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0020                     ?_Filter:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0020                     setAD_ConvertFlag@flag:	
   470                           ; 2 bytes @ 0x0
   471                           
   472  0020                     adc_test_init@ref:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0020                     Filter@tmpValue:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0020                     startTwelveHourTimer@uiSetTime:	
   479                           ; 2 bytes @ 0x0
   480                           
   481  0020                     startThreeHoursTimer@uiSetTime:	
   482                           ; 2 bytes @ 0x0
   483                           
   484                           
   485                           ; 2 bytes @ 0x0
   486  0020                     	ds	1
   487  0021                     ??_adc_test_init:	
   488                           
   489                           ; 0 bytes @ 0x1
   490  0021                     	ds	1
   491  0022                     ??_startTwelveHourTimer:	
   492  0022                     ??_startThreeHoursTimer:	
   493                           ; 0 bytes @ 0x2
   494                           
   495  0022                     ??_Filter:	
   496                           ; 0 bytes @ 0x2
   497                           
   498  0022                     adc_test_init@channel:	
   499                           ; 0 bytes @ 0x2
   500                           
   501                           
   502                           ; 1 bytes @ 0x2
   503  0022                     	ds	1
   504  0023                     ??_process_AD_Converter_Value:	
   505                           
   506                           ; 0 bytes @ 0x3
   507  0023                     	ds	3
   508  0026                     Filter@filter_buf:	
   509                           
   510                           ; 24 bytes @ 0x6
   511  0026                     	ds	24
   512  003E                     Filter@filter_temp:	
   513                           
   514                           ; 2 bytes @ 0x1E
   515  003E                     	ds	2
   516  0040                     Filter@filter_sum:	
   517                           
   518                           ; 2 bytes @ 0x20
   519  0040                     	ds	2
   520  0042                     Filter@cir:	
   521                           
   522                           ; 2 bytes @ 0x22
   523  0042                     	ds	2
   524  0044                     Filter@j:	
   525                           
   526                           ; 1 bytes @ 0x24
   527  0044                     	ds	1
   528  0045                     Filter@i:	
   529                           
   530                           ; 1 bytes @ 0x25
   531  0045                     	ds	1
   532  0046                     ?_getAdOriginalCh14Value:	
   533  0046                     ?_getAdOriginalCh1Value:	
   534                           ; 2 bytes @ 0x26
   535                           
   536  0046                     ?_getAdOriginaCh4Value:	
   537                           ; 2 bytes @ 0x26
   538                           
   539                           
   540                           ; 2 bytes @ 0x26
   541  0046                     	ds	2
   542  0048                     ??_getAdOriginalCh14Value:	
   543  0048                     ??_getAdOriginalCh1Value:	
   544                           ; 0 bytes @ 0x28
   545                           
   546  0048                     ??_getAdOriginaCh4Value:	
   547                           ; 0 bytes @ 0x28
   548                           
   549  0048                     ??_main:	
   550                           ; 0 bytes @ 0x28
   551                           
   552                           
   553                           	psect	maintext
   554  0013                     __pmaintext:	
   555                           ; 0 bytes @ 0x28
   556 ;;Data sizes: Strings 0, constant 0, data 1, bss 123, persistent 0 stack 0
   557 ;;Auto spaces:   Size  Autos    Used
   558 ;; COMMON          14     13      14
   559 ;; BANK0           80     40      79
   560 ;; BANK1           80      0      60
   561 ;; BANK3           96      0      24
   562 ;; BANK2           96      0       0
   563 ;;
   564 ;; Pointer list with targets:
   565 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   566 ;;
   567 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   568 ;;
   569 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   570 ;;
   571 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   572 ;;
   573 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   574 ;;
   575 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   576 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   577 ;;
   578 ;;
   579 ;; Critical Paths under _main in COMMON
   580 ;;
   581 ;;   None.
   582 ;;
   583 ;; Critical Paths under _ISR in COMMON
   584 ;;
   585 ;;   _ISR->_vPutSampleDataIntoTable
   586 ;;   _vPutSampleDataIntoTable->_adc_get
   587 ;;
   588 ;; Critical Paths under _main in BANK0
   589 ;;
   590 ;;   _main->_getAdOriginalCh14Value
   591 ;;   _main->_getAdOriginalCh1Value
   592 ;;   _main->_getAdOriginaCh4Value
   593 ;;   _getAdOriginaCh4Value->_Filter
   594 ;;   _getAdOriginalCh1Value->_Filter
   595 ;;   _getAdOriginalCh14Value->_Filter
   596 ;;   _process_AD_Converter_Value->_adc_test_init
   597 ;;
   598 ;; Critical Paths under _ISR in BANK0
   599 ;;
   600 ;;   None.
   601 ;;
   602 ;; Critical Paths under _main in BANK1
   603 ;;
   604 ;;   None.
   605 ;;
   606 ;; Critical Paths under _ISR in BANK1
   607 ;;
   608 ;;   None.
   609 ;;
   610 ;; Critical Paths under _main in BANK3
   611 ;;
   612 ;;   None.
   613 ;;
   614 ;; Critical Paths under _ISR in BANK3
   615 ;;
   616 ;;   None.
   617 ;;
   618 ;; Critical Paths under _main in BANK2
   619 ;;
   620 ;;   None.
   621 ;;
   622 ;; Critical Paths under _ISR in BANK2
   623 ;;
   624 ;;   None.
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   627 ;;
   628 ;;
   629 ;;Call Graph Tables:
   630 ;;
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (0) _main                                                 0     0      0    2014
   635 ;;                            _initPin
   636 ;;                       _clock_config
   637 ;;                      _timer1_config
   638 ;;            _timer1_interrupt_config
   639 ;;                      _adc_test_init
   640 ;;                           _dac_init
   641 ;;                           _op1_init
   642 ;;                           _op2_init
   643 ;;                          _adc_start
   644 ;;         _process_AD_Converter_Value
   645 ;;                 _isPermitSampleTime
   646 ;;                       _clrSampeTime
   647 ;;             _getAdOriginalCh14Value
   648 ;;               _clearPinPortAndTimer
   649 ;;              _getAdOriginalCh1Value
   650 ;;               _startTwelveHourTimer
   651 ;;         _isFinishedTwelveHoursTimer
   652 ;;            _startTwentySecondsTimer
   653 ;;               _getAdOriginaCh4Value
   654 ;;       _isFinishedTwentySecondsTimer
   655 ;;               _startThreeHoursTimer
   656 ;;          _isFinishedThreeHoursTimer
   657 ;;               _clearThreeHoursTimer
   658 ;;                      _clearAllTimer
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   661 ;;                      _clearAllTimer
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   664 ;;                                             38 BANK0      2     0      2
   665 ;;                             _Filter
   666 ;; ---------------------------------------------------------------------------------
   667 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   668 ;;                                             38 BANK0      2     0      2
   669 ;;                             _Filter
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   672 ;;                                             38 BANK0      2     0      2
   673 ;;                             _Filter
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   676 ;;                  _getAD_ConvertFlag
   677 ;;                  _setAD_ConvertFlag
   678 ;;                          _AD_Sample
   679 ;;                      _adc_test_init
   680 ;;                          _adc_start
   681 ;; ---------------------------------------------------------------------------------
   682 ;; (1) _clearAllTimer                                        0     0      0       0
   683 ;;              _clearTwelveHoursTimer
   684 ;;               _clearThreeHoursTimer
   685 ;;            _clearTwentySecondsTimer
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (2) _AD_Sample                                            0     0      0       0
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   690 ;;                                              0 BANK0      1     1      0
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (2) _Filter                                              38    36      2     620
   695 ;;                                              0 BANK0     38    36      2
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   700 ;;                                              0 BANK0      2     0      2
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   709 ;;                                              0 BANK0      2     0      2
   710 ;; ---------------------------------------------------------------------------------
   711 ;; (1) _clrSampeTime                                         0     0      0       0
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (1) _isPermitSampleTime                                   0     0      0       0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (2) _adc_start                                            0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _op2_init                                             0     0      0       0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _op1_init                                             0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _dac_init                                             0     0      0       0
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (2) _adc_test_init                                        3     2      1      44
   724 ;;                                              0 BANK0      3     2      1
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _timer1_interrupt_config                              0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _timer1_config                                        0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _clock_config                                         0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _initPin                                              0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; Estimated maximum stack depth 2
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (4) _ISR                                                  4     4      0     407
   745 ;;                                              9 COMMON     4     4      0
   746 ;;                i1_setAD_ConvertFlag
   747 ;;                            _adc_get
   748 ;;            _vPutSampleDataIntoTable
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   751 ;;                                              0 COMMON     1     1      0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (5) _adc_get                                              4     2      2      24
   754 ;;                                              0 COMMON     4     2      2
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   757 ;;                                              4 COMMON     5     2      3
   758 ;;                            _adc_get (ARG)
   759 ;; ---------------------------------------------------------------------------------
   760 ;; Estimated maximum stack depth 5
   761 ;; ---------------------------------------------------------------------------------
   762 ;; Call Graph Graphs:
   763 ;; _main (ROOT)
   764 ;;   _initPin
   765 ;;   _clock_config
   766 ;;   _timer1_config
   767 ;;   _timer1_interrupt_config
   768 ;;   _adc_test_init
   769 ;;   _dac_init
   770 ;;   _op1_init
   771 ;;   _op2_init
   772 ;;   _adc_start
   773 ;;   _process_AD_Converter_Value
   774 ;;     _getAD_ConvertFlag
   775 ;;     _setAD_ConvertFlag
   776 ;;     _AD_Sample
   777 ;;     _adc_test_init
   778 ;;     _adc_start
   779 ;;   _isPermitSampleTime
   780 ;;   _clrSampeTime
   781 ;;   _getAdOriginalCh14Value
   782 ;;     _Filter
   783 ;;   _clearPinPortAndTimer
   784 ;;     _clearAllTimer
   785 ;;       _clearTwelveHoursTimer
   786 ;;       _clearThreeHoursTimer
   787 ;;       _clearTwentySecondsTimer
   788 ;;   _getAdOriginalCh1Value
   789 ;;     _Filter
   790 ;;   _startTwelveHourTimer
   791 ;;   _isFinishedTwelveHoursTimer
   792 ;;   _startTwentySecondsTimer
   793 ;;   _getAdOriginaCh4Value
   794 ;;     _Filter
   795 ;;   _isFinishedTwentySecondsTimer
   796 ;;   _startThreeHoursTimer
   797 ;;   _isFinishedThreeHoursTimer
   798 ;;   _clearThreeHoursTimer
   799 ;;   _clearAllTimer
   800 ;;     _clearTwelveHoursTimer
   801 ;;     _clearThreeHoursTimer
   802 ;;     _clearTwentySecondsTimer
   803 ;;
   804 ;; _ISR (ROOT)
   805 ;;   i1_setAD_ConvertFlag
   806 ;;   _adc_get
   807 ;;   _vPutSampleDataIntoTable
   808 ;;     _adc_get (ARG)
   809 ;;
   810 ;; Address spaces:
   811 ;;Name               Size   Autos  Total    Cost      Usage
   812 ;;BANK3               60      0      18      10       25.0%
   813 ;;BITBANK3            60      0       0       9        0.0%
   814 ;;SFR3                 0      0       0       4        0.0%
   815 ;;BITSFR3              0      0       0       4        0.0%
   816 ;;BANK2               60      0       0      12        0.0%
   817 ;;BITBANK2            60      0       0      11        0.0%
   818 ;;SFR2                 0      0       0       5        0.0%
   819 ;;BITSFR2              0      0       0       5        0.0%
   820 ;;SFR1                 0      0       0       2        0.0%
   821 ;;BITSFR1              0      0       0       2        0.0%
   822 ;;BANK1               50      0      3C       8       75.0%
   823 ;;BITBANK1            50      0       0       7        0.0%
   824 ;;CODE                 0      0       0       0        0.0%
   825 ;;DATA                 0      0      B8       6        0.0%
   826 ;;ABS                  0      0      B1       3        0.0%
   827 ;;NULL                 0      0       0       0        0.0%
   828 ;;STACK                0      0       7       2        0.0%
   829 ;;BANK0               50     28      4F       5       98.8%
   830 ;;BITBANK0            50      0       0       4        0.0%
   831 ;;SFR0                 0      0       0       1        0.0%
   832 ;;BITSFR0              0      0       0       1        0.0%
   833 ;;COMMON               E      D       E       1      100.0%
   834 ;;BITCOMMON            E      0       0       0        0.0%
   835                           
   836                           
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 137 in file "D:\develop\190625\AK7030-OTP\main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;		None               void
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 17F/0
   850 ;;		On exit  : 60/0
   851 ;;		Unchanged: FFE00/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels required when called:    5
   859 ;; This function calls:
   860 ;;		_initPin
   861 ;;		_clock_config
   862 ;;		_timer1_config
   863 ;;		_timer1_interrupt_config
   864 ;;		_adc_test_init
   865 ;;		_dac_init
   866 ;;		_op1_init
   867 ;;		_op2_init
   868 ;;		_adc_start
   869 ;;		_process_AD_Converter_Value
   870 ;;		_isPermitSampleTime
   871 ;;		_clrSampeTime
   872 ;;		_getAdOriginalCh14Value
   873 ;;		_clearPinPortAndTimer
   874 ;;		_getAdOriginalCh1Value
   875 ;;		_startTwelveHourTimer
   876 ;;		_isFinishedTwelveHoursTimer
   877 ;;		_startTwentySecondsTimer
   878 ;;		_getAdOriginaCh4Value
   879 ;;		_isFinishedTwentySecondsTimer
   880 ;;		_startThreeHoursTimer
   881 ;;		_isFinishedThreeHoursTimer
   882 ;;		_clearThreeHoursTimer
   883 ;;		_clearAllTimer
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888  0013                     _main:	
   889                           
   890                           ;main.c: 138: enum setp_Adc4
   891                           ;main.c: 139: {
   892                           ;main.c: 140: ADC4_STEP_INIT = 0,
   893                           ;main.c: 141: ADC4_STEP_FIRST,
   894                           ;main.c: 142: ADC4_STEP_SECOND,
   895                           ;main.c: 143: ADC4_STEP_THIRD,
   896                           ;main.c: 144: ADC4_STEP_FOURTH,
   897                           ;main.c: 145: ADC4_STEP_FIFTH,
   898                           ;main.c: 146: ADC4_STEP_SIXTH,
   899                           ;main.c: 147: };
   900                           ;main.c: 150: static unsigned char ucWaitTime1S = 0;
   901                           ;main.c: 152: static unsigned char ucWaitTimeO3s = 0;
   902                           ;main.c: 154: static unsigned char ucSmallTimerActionFlag = 0;
   903                           ;main.c: 156: static unsigned char ucSetSmallActionFlag = 0;
   904                           
   905                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   906  0013  1683               	bsf	3,5	;RP0=1, select bank1
   907  0014  1005               	bcf	5,0
   908                           
   909                           ;main.c: 163: TRISA1 = 0;
   910  0015  1085               	bcf	5,1
   911                           
   912                           ;main.c: 164: TRISA2 = 0;
   913  0016  1105               	bcf	5,2
   914                           
   915                           ;main.c: 165: TRISA3 = 0;
   916  0017  1185               	bcf	5,3
   917                           
   918                           ;main.c: 166: TRISB0 = 0;
   919  0018  1006               	bcf	6,0
   920                           
   921                           ;main.c: 167: TRISB1 = 0;
   922  0019  1086               	bcf	6,1
   923                           
   924                           ;main.c: 168: TRISA6 = 0;
   925  001A  1305               	bcf	5,6
   926                           
   927                           ;main.c: 170: TRISB7 = 0;
   928  001B  1386               	bcf	6,7
   929                           
   930                           ;main.c: 171: TRISB6 = 0;
   931  001C  1306               	bcf	6,6
   932                           
   933                           ;main.c: 174: initPin();
   934  001D  118A  25D2  118A   	fcall	_initPin
   935                           
   936                           ;main.c: 177: TRISB2 = 1;
   937  0020  1303               	bcf	3,6	;RP1=0, select bank1
   938  0021  1506               	bsf	6,2
   939                           
   940                           ;main.c: 180: TRISA7 = 1;
   941  0022  1785               	bsf	5,7
   942                           
   943                           ;main.c: 182: TRISB4 = 1;
   944  0023  1606               	bsf	6,4
   945                           
   946                           ;main.c: 184: clock_config();
   947  0024  118A  2647  118A   	fcall	_clock_config
   948                           
   949                           ;main.c: 185: timer1_config();
   950  0027  118A  2635  118A   	fcall	_timer1_config
   951                           
   952                           ;main.c: 186: timer1_interrupt_config();
   953  002A  118A  2678  118A   	fcall	_timer1_interrupt_config
   954                           
   955                           ;main.c: 188: adc_test_init(14,3);
   956  002D  3003               	movlw	3
   957  002E  1283               	bcf	3,5	;RP0=0, select bank0
   958  002F  00A0               	movwf	?_adc_test_init
   959  0030  300E               	movlw	14
   960  0031  118A  2585  118A   	fcall	_adc_test_init
   961                           
   962                           ;main.c: 190: dac_init();
   963  0034  118A  2673  118A   	fcall	_dac_init
   964                           
   965                           ;main.c: 191: op1_init();
   966  0037  118A  262A  118A   	fcall	_op1_init
   967                           
   968                           ;main.c: 192: op2_init();
   969  003A  118A  264F  118A   	fcall	_op2_init
   970                           
   971                           ;main.c: 195: adc_start();
   972  003D  118A  259A  118A   	fcall	_adc_start
   973  0040                     l4242:	
   974  0040  0064               	clrwdt	;#
   975                           
   976                           ;main.c: 235: process_AD_Converter_Value();
   977  0041  118A  2540  118A   	fcall	_process_AD_Converter_Value
   978                           
   979                           ;main.c: 237: if(isPermitSampleTime())
   980  0044  118A  2668  118A   	fcall	_isPermitSampleTime
   981  0047  3A00               	xorlw	0
   982  0048  1903               	skipnz
   983  0049  2840               	goto	l4242
   984                           
   985                           ;main.c: 238: {
   986                           ;main.c: 239: clrSampeTime();
   987  004A  118A  267B  118A   	fcall	_clrSampeTime
   988                           
   989                           ;main.c: 253: switch(enumMainLoopStep)
   990  004D  2B78               	goto	l4806
   991  004E                     l4250:	
   992                           
   993                           ;main.c: 256: {
   994                           ;main.c: 257: static unsigned char ucTimerZeroPoint5s = 0;
   995                           ;main.c: 258: if(getAdOriginalCh14Value() > 1950)
   996  004E  118A  2488  118A   	fcall	_getAdOriginalCh14Value
   997  0051  3007               	movlw	7
   998  0052  0247               	subwf	?_getAdOriginalCh14Value+1,w
   999  0053  309F               	movlw	159
  1000  0054  1903               	skipnz
  1001  0055  0246               	subwf	?_getAdOriginalCh14Value,w
  1002  0056  1C03               	skipc
  1003  0057  285A               	goto	l4254
  1004                           
  1005                           ;main.c: 259: {
  1006                           ;main.c: 260: ucTimerZeroPoint5s++;
  1007  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1008                           
  1009                           ;main.c: 261: }
  1010  0059  285B               	goto	l4256
  1011  005A                     l4254:	
  1012                           
  1013                           ;main.c: 262: else
  1014                           ;main.c: 263: ucTimerZeroPoint5s = 0;
  1015  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1016  005B                     l4256:	
  1017                           
  1018                           ;main.c: 265: if(ucTimerZeroPoint5s >= 5)
  1019  005B  3005               	movlw	5
  1020  005C  026B               	subwf	main@ucTimerZeroPoint5s,w
  1021  005D  1C03               	skipc
  1022  005E  2840               	goto	l4242
  1023                           
  1024                           ;main.c: 266: {
  1025                           ;main.c: 267: ucTimerZeroPoint5s = 0;
  1026  005F  01EB               	clrf	main@ucTimerZeroPoint5s
  1027                           
  1028                           ;main.c: 268: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1029  0060  01CB               	clrf	main@enumMainLoopStep
  1030  0061  0ACB               	incf	main@enumMainLoopStep,f
  1031  0062                     l712:	
  1032                           
  1033                           ;main.c: 269: }
  1034                           ;main.c: 270: break;
  1035  0062  2840               	goto	l4242
  1036  0063                     l4262:	
  1037                           
  1038                           ;main.c: 274: {
  1039                           ;main.c: 275: static unsigned char ucTimerZeroPoint3s = 0;
  1040                           ;main.c: 278: if(getAdOriginalCh14Value() > 1950)
  1041  0063  118A  2488  118A   	fcall	_getAdOriginalCh14Value
  1042  0066  3007               	movlw	7
  1043  0067  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1044  0068  309F               	movlw	159
  1045  0069  1903               	skipnz
  1046  006A  0246               	subwf	?_getAdOriginalCh14Value,w
  1047  006B  1C03               	skipc
  1048  006C  2871               	goto	l4268
  1049                           
  1050                           ;main.c: 279: {
  1051                           ;main.c: 281: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1052  006D  3002               	movlw	2
  1053  006E  00CB               	movwf	main@enumMainLoopStep
  1054                           
  1055                           ;main.c: 283: ucTimerZeroPoint3s = 0;
  1056  006F  01EA               	clrf	main@ucTimerZeroPoint3s
  1057                           
  1058                           ;main.c: 286: }
  1059  0070  2840               	goto	l4242
  1060  0071                     l4268:	
  1061  0071  3003               	movlw	3
  1062                           
  1063                           ;main.c: 287: else
  1064                           ;main.c: 288: {
  1065                           ;main.c: 289: ucTimerZeroPoint3s++;
  1066  0072  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1067                           
  1068                           ;main.c: 291: if(ucTimerZeroPoint3s >= 3)
  1069  0073  026A               	subwf	main@ucTimerZeroPoint3s,w
  1070  0074  1C03               	skipc
  1071  0075  2840               	goto	l4242
  1072                           
  1073                           ;main.c: 292: {
  1074                           ;main.c: 293: ucTimerZeroPoint3s = 0;
  1075  0076  01EA               	clrf	main@ucTimerZeroPoint3s
  1076                           
  1077                           ;main.c: 295: clearPinPortAndTimer();
  1078  0077  118A  259D  118A   	fcall	_clearPinPortAndTimer
  1079  007A  2840               	goto	l4242
  1080  007B                     l720:	
  1081                           ;main.c: 304: }
  1082                           ;main.c: 306: case MAIN_LOOP_STEP_SECOND:
  1083                           
  1084  007B  3005               	movlw	5
  1085                           
  1086                           ;main.c: 307: {
  1087                           ;main.c: 308: static unsigned char ucTimerP5s = 0;
  1088                           ;main.c: 310: PA6 = 1;
  1089  007C  1705               	bsf	5,6
  1090                           
  1091                           ;main.c: 312: if(ucTimerP5s < 5)
  1092  007D  0263               	subwf	main@ucTimerP5s,w
  1093  007E  1803               	skipnc
  1094  007F  2882               	goto	l4280
  1095                           
  1096                           ;main.c: 313: ucTimerP5s++;
  1097  0080  0AE3               	incf	main@ucTimerP5s,f
  1098  0081  2840               	goto	l4242
  1099  0082                     l4280:	
  1100  0082  3003               	movlw	3
  1101                           
  1102                           ;main.c: 314: else
  1103                           ;main.c: 315: {
  1104                           ;main.c: 316: ucTimerP5s = 0;
  1105  0083  01E3               	clrf	main@ucTimerP5s
  1106                           
  1107                           ;main.c: 318: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1108  0084  2AF0               	goto	L6
  1109  0085                     l4284:	
  1110                           
  1111                           ;main.c: 325: {
  1112                           ;main.c: 326: static unsigned char ucTimerADC1ZeroP5s = 0;
  1113                           ;main.c: 328: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1114                           ;main.c: 330: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1115                           ;main.c: 332: static unsigned char ucTimerRightP5s = 0;
  1116                           ;main.c: 334: if(getAdOriginalCh1Value() < 115)
  1117  0085  118A  247E  118A   	fcall	_getAdOriginalCh1Value
  1118  0088  3000               	movlw	0
  1119  0089  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1120  008A  3073               	movlw	115
  1121  008B  1903               	skipnz
  1122  008C  0246               	subwf	?_getAdOriginalCh1Value,w
  1123  008D  1803               	skipnc
  1124  008E  2892               	goto	l4290
  1125                           
  1126                           ;main.c: 335: {
  1127                           ;main.c: 336: ucTimerADC1ZeroP5s = 0;
  1128  008F  01D5               	clrf	main@ucTimerADC1ZeroP5s
  1129                           
  1130                           ;main.c: 338: ucTimerLessADC1ZeroP5s++;
  1131  0090  0AE0               	incf	main@ucTimerLessADC1ZeroP5s,f
  1132                           
  1133                           ;main.c: 339: }
  1134  0091  2894               	goto	l4294
  1135  0092                     l4290:	
  1136                           
  1137                           ;main.c: 340: else
  1138                           ;main.c: 341: {
  1139                           ;main.c: 342: ucTimerADC1ZeroP5s++;
  1140  0092  0AD5               	incf	main@ucTimerADC1ZeroP5s,f
  1141                           
  1142                           ;main.c: 344: ucTimerLessADC1ZeroP5s = 0;
  1143  0093  01E0               	clrf	main@ucTimerLessADC1ZeroP5s
  1144  0094                     l4294:	
  1145                           
  1146                           ;main.c: 345: }
  1147                           ;main.c: 347: if(ucTimerADC1ZeroP5s >= 3)
  1148  0094  3003               	movlw	3
  1149  0095  0255               	subwf	main@ucTimerADC1ZeroP5s,w
  1150  0096  1C03               	skipc
  1151  0097  289B               	goto	l4300
  1152  0098  3004               	movlw	4
  1153                           
  1154                           ;main.c: 348: {
  1155                           ;main.c: 349: ucTimerADC1ZeroP5s = 0;
  1156  0099  01D5               	clrf	main@ucTimerADC1ZeroP5s
  1157                           
  1158                           ;main.c: 350: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1159  009A  28B3               	goto	L2
  1160  009B                     l4300:	
  1161                           ;main.c: 351: }
  1162                           
  1163                           
  1164                           ;main.c: 352: else if( ucTimerLessADC1ZeroP5s >= 3)
  1165  009B  3003               	movlw	3
  1166  009C  0260               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1167  009D  1C03               	skipc
  1168  009E  28B4               	goto	l4314
  1169                           
  1170                           ;main.c: 353: {
  1171                           ;main.c: 355: if(getAdOriginalCh1Value() < 105)
  1172  009F  118A  247E  118A   	fcall	_getAdOriginalCh1Value
  1173  00A2  3000               	movlw	0
  1174  00A3  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1175  00A4  3069               	movlw	105
  1176  00A5  1903               	skipnz
  1177  00A6  0246               	subwf	?_getAdOriginalCh1Value,w
  1178  00A7  1803               	skipnc
  1179  00A8  28AB               	goto	l4306
  1180                           
  1181                           ;main.c: 356: {
  1182                           ;main.c: 357: ucTimerRightP5s++;
  1183  00A9  0AE6               	incf	main@ucTimerRightP5s,f
  1184                           
  1185                           ;main.c: 358: }
  1186  00AA  28AC               	goto	l4308
  1187  00AB                     l4306:	
  1188                           
  1189                           ;main.c: 359: else
  1190                           ;main.c: 360: {
  1191                           ;main.c: 361: ucTimerRightP5s = 0;
  1192  00AB  01E6               	clrf	main@ucTimerRightP5s
  1193  00AC                     l4308:	
  1194                           
  1195                           ;main.c: 362: }
  1196                           ;main.c: 364: if(ucTimerRightP5s >= 3)
  1197  00AC  3003               	movlw	3
  1198  00AD  0266               	subwf	main@ucTimerRightP5s,w
  1199  00AE  1C03               	skipc
  1200  00AF  28B4               	goto	l4314
  1201  00B0  3008               	movlw	8
  1202                           
  1203                           ;main.c: 365: {
  1204                           ;main.c: 366: ucTimerLessADC1ZeroP5s = 0;
  1205  00B1  01E0               	clrf	main@ucTimerLessADC1ZeroP5s
  1206                           
  1207                           ;main.c: 367: ucTimerRightP5s = 0;
  1208  00B2  01E6               	clrf	main@ucTimerRightP5s
  1209  00B3                     L2:	
  1210                           ;main.c: 368: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1211                           
  1212  00B3  00CB               	movwf	main@enumMainLoopStep
  1213  00B4                     l4314:	
  1214                           ;main.c: 375: else
  1215                           ;main.c: 376: {
  1216                           ;main.c: 377: ;
  1217                           
  1218                           ;main.c: 369: }
  1219                           
  1220                           
  1221                           ;main.c: 378: }
  1222                           ;main.c: 380: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1223  00B4  084B               	movf	main@enumMainLoopStep,w
  1224  00B5  3A08               	xorlw	8
  1225  00B6  1903               	skipnz
  1226  00B7  28BC               	goto	l4318
  1227  00B8  084B               	movf	main@enumMainLoopStep,w
  1228  00B9  3A04               	xorlw	4
  1229  00BA  1D03               	skipz
  1230  00BB  2840               	goto	l4242
  1231  00BC                     l4318:	
  1232                           
  1233                           ;main.c: 381: {
  1234                           ;main.c: 382: ucTimerRightP5s = 0;
  1235  00BC  01E6               	clrf	main@ucTimerRightP5s
  1236                           
  1237                           ;main.c: 383: ucTimerADC1ZeroP5s = 0;
  1238  00BD  01D5               	clrf	main@ucTimerADC1ZeroP5s
  1239                           
  1240                           ;main.c: 384: ucTimerLessADC1ZeroP5s = 0;
  1241  00BE  01E0               	clrf	main@ucTimerLessADC1ZeroP5s
  1242  00BF  2840               	goto	l4242
  1243  00C0                     l4320:	
  1244                           
  1245                           ;main.c: 392: {
  1246                           ;main.c: 394: startTwelveHourTimer(43200);
  1247  00C0  30C0               	movlw	192
  1248  00C1  00A0               	movwf	?_startTwelveHourTimer
  1249  00C2  30A8               	movlw	168
  1250  00C3  00A1               	movwf	?_startTwelveHourTimer+1
  1251  00C4  118A  261C  118A   	fcall	_startTwelveHourTimer
  1252                           
  1253                           ;main.c: 395: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1254  00C7  3005               	movlw	5
  1255  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1256  00C9  00CB               	movwf	main@enumMainLoopStep
  1257                           
  1258                           ;main.c: 397: bCheckTweHour = 0;
  1259  00CA  01C9               	clrf	main@bCheckTweHour
  1260                           
  1261                           ;main.c: 399: break;
  1262  00CB  2840               	goto	l4242
  1263  00CC                     l4326:	
  1264                           
  1265                           ;main.c: 403: {
  1266                           ;main.c: 405: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1267  00CC  118A  2662  118A   	fcall	_isFinishedTwelveHoursTimer
  1268  00CF  3A00               	xorlw	0
  1269  00D0  1903               	skipnz
  1270  00D1  2A94               	goto	l4686
  1271  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1272  00D3  08C9               	movf	main@bCheckTweHour,f
  1273  00D4  1D03               	skipz
  1274  00D5  2A94               	goto	l4686
  1275                           
  1276                           ;main.c: 406: {
  1277                           ;main.c: 407: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1278  00D6  3009               	movlw	9
  1279  00D7  00CB               	movwf	main@enumMainLoopStep
  1280                           
  1281                           ;main.c: 408: bCheckTweHour = 1;
  1282  00D8  01C9               	clrf	main@bCheckTweHour
  1283  00D9  0AC9               	incf	main@bCheckTweHour,f
  1284                           
  1285                           ;main.c: 409: }
  1286  00DA  2840               	goto	l4242
  1287  00DB                     l4334:	
  1288                           
  1289                           ;main.c: 417: {
  1290                           ;main.c: 418: startTwentySecondsTimer();
  1291  00DB  118A  266E  118A   	fcall	_startTwentySecondsTimer
  1292  00DE                     l4336:	
  1293                           
  1294                           ;main.c: 419: ucADC4_Step = ADC4_STEP_FIRST;
  1295  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1296  00DF  01CC               	clrf	main@ucADC4_Step
  1297  00E0  0ACC               	incf	main@ucADC4_Step,f
  1298                           
  1299                           ;main.c: 420: break;
  1300  00E1  2840               	goto	l4242
  1301  00E2                     l4338:	
  1302                           
  1303                           ;main.c: 424: {
  1304                           ;main.c: 425: if(getAdOriginaCh4Value() < 1931)
  1305  00E2  118A  2475  118A   	fcall	_getAdOriginaCh4Value
  1306  00E5  3007               	movlw	7
  1307  00E6  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1308  00E7  308B               	movlw	139
  1309  00E8  1903               	skipnz
  1310  00E9  0246               	subwf	?_getAdOriginaCh4Value,w
  1311  00EA  1803               	skipnc
  1312  00EB  28EE               	goto	l4342
  1313                           
  1314                           ;main.c: 426: ucChannel4Type = LESS_THAN_1911;
  1315  00EC  01CD               	clrf	main@ucChannel4Type
  1316  00ED  2915               	goto	l758
  1317  00EE                     l4342:	
  1318                           
  1319                           ;main.c: 427: else if(getAdOriginaCh4Value() < 2047)
  1320  00EE  118A  2475  118A   	fcall	_getAdOriginaCh4Value
  1321  00F1  3007               	movlw	7
  1322  00F2  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1323  00F3  30FF               	movlw	255
  1324  00F4  1903               	skipnz
  1325  00F5  0246               	subwf	?_getAdOriginaCh4Value,w
  1326  00F6  1803               	skipnc
  1327  00F7  28FB               	goto	l4346
  1328                           
  1329                           ;main.c: 428: ucChannel4Type = BETWEEN_1911_AND_2067;
  1330  00F8  01CD               	clrf	main@ucChannel4Type
  1331  00F9  0ACD               	incf	main@ucChannel4Type,f
  1332  00FA  2915               	goto	l758
  1333  00FB                     l4346:	
  1334                           
  1335                           ;main.c: 429: else if(getAdOriginaCh4Value() < 2164)
  1336  00FB  118A  2475  118A   	fcall	_getAdOriginaCh4Value
  1337  00FE  3008               	movlw	8
  1338  00FF  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1339  0100  3074               	movlw	116
  1340  0101  1903               	skipnz
  1341  0102  0246               	subwf	?_getAdOriginaCh4Value,w
  1342  0103  1803               	skipnc
  1343  0104  2907               	goto	l4350
  1344                           
  1345                           ;main.c: 430: ucChannel4Type = BETWEEN_2067_AND_2204;
  1346  0105  3002               	movlw	2
  1347  0106  2914               	goto	L3
  1348  0107                     l4350:	
  1349                           
  1350                           ;main.c: 431: else if(getAdOriginaCh4Value() < 2281)
  1351  0107  118A  2475  118A   	fcall	_getAdOriginaCh4Value
  1352  010A  3008               	movlw	8
  1353  010B  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1354  010C  30E9               	movlw	233
  1355  010D  1903               	skipnz
  1356  010E  0246               	subwf	?_getAdOriginaCh4Value,w
  1357  010F  1803               	skipnc
  1358  0110  2913               	goto	l4354
  1359                           
  1360                           ;main.c: 432: ucChannel4Type = BETWEEN_2204_AND_2340;
  1361  0111  3003               	movlw	3
  1362  0112  2914               	goto	L3
  1363  0113                     l4354:	
  1364                           
  1365                           ;main.c: 433: else
  1366                           ;main.c: 434: ucChannel4Type = MORE_THAN_2340;
  1367  0113  3004               	movlw	4
  1368  0114                     L3:	
  1369  0114  00CD               	movwf	main@ucChannel4Type
  1370  0115                     l758:	
  1371                           
  1372                           ;main.c: 436: ucADC4_Step = ADC4_STEP_SECOND;
  1373  0115  3002               	movlw	2
  1374  0116  2945               	goto	L4
  1375  0117                     l773:	
  1376                           ;main.c: 451: {
  1377                           ;main.c: 452: case 0:
  1378                           
  1379                           ;main.c: 437: break;
  1380                           
  1381                           
  1382                           ;main.c: 453: {
  1383                           ;main.c: 454: PB0 = 1;
  1384  0117  1406               	bsf	6,0
  1385  0118                     l4356:	
  1386                           
  1387                           ;main.c: 455: ucLoaderStep++;
  1388  0118  0ACE               	incf	main@ucLoaderStep,f
  1389                           
  1390                           ;main.c: 456: break;
  1391  0119  2840               	goto	l4242
  1392  011A                     l4358:	
  1393                           
  1394                           ;main.c: 460: {
  1395                           ;main.c: 461: if(ucTimerDelay >= 5)
  1396  011A  3005               	movlw	5
  1397  011B  0256               	subwf	main@ucTimerDelay,w
  1398  011C  1C03               	skipc
  1399  011D  2921               	goto	l4366
  1400                           
  1401                           ;main.c: 462: {
  1402                           ;main.c: 463: PA0 = 1;
  1403  011E  1405               	bsf	5,0
  1404  011F                     l4362:	
  1405                           
  1406                           ;main.c: 464: ucTimerDelay = 0;
  1407  011F  01D6               	clrf	main@ucTimerDelay
  1408  0120  2918               	goto	l4356
  1409  0121                     l4366:	
  1410                           
  1411                           ;main.c: 467: else
  1412                           ;main.c: 468: ucTimerDelay++;
  1413  0121  0AD6               	incf	main@ucTimerDelay,f
  1414  0122  2840               	goto	l4242
  1415  0123                     l4368:	
  1416                           
  1417                           ;main.c: 473: {
  1418                           ;main.c: 474: if(ucTimerDelay >= 5)
  1419  0123  3005               	movlw	5
  1420  0124  0256               	subwf	main@ucTimerDelay,w
  1421  0125  1C03               	skipc
  1422  0126  2921               	goto	l4366
  1423                           
  1424                           ;main.c: 475: {
  1425                           ;main.c: 476: PA1= 1;
  1426  0127  1485               	bsf	5,1
  1427  0128  291F               	goto	l4362
  1428  0129                     l4378:	
  1429                           
  1430                           ;main.c: 487: {
  1431                           ;main.c: 488: if(ucTimerDelay >= 5)
  1432  0129  3005               	movlw	5
  1433  012A  0256               	subwf	main@ucTimerDelay,w
  1434  012B  1C03               	skipc
  1435  012C  2921               	goto	l4366
  1436                           
  1437                           ;main.c: 489: {
  1438                           ;main.c: 490: PA2= 1;
  1439  012D  1505               	bsf	5,2
  1440  012E  291F               	goto	l4362
  1441  012F                     l4388:	
  1442                           
  1443                           ;main.c: 500: {
  1444                           ;main.c: 501: if(ucTimerDelay >= 5)
  1445  012F  3005               	movlw	5
  1446  0130  0256               	subwf	main@ucTimerDelay,w
  1447  0131  1C03               	skipc
  1448  0132  2921               	goto	l4366
  1449                           
  1450                           ;main.c: 502: {
  1451                           ;main.c: 503: PA3 = 1;
  1452  0133  1585               	bsf	5,3
  1453  0134  291F               	goto	l4362
  1454  0135                     l4398:	
  1455                           
  1456                           ;main.c: 513: {
  1457                           ;main.c: 514: if(ucTimerDelay >= 5)
  1458  0135  3005               	movlw	5
  1459  0136  0256               	subwf	main@ucTimerDelay,w
  1460  0137  1C03               	skipc
  1461  0138  2921               	goto	l4366
  1462                           
  1463                           ;main.c: 515: {
  1464                           ;main.c: 516: PB0 = 0;
  1465  0139  1006               	bcf	6,0
  1466                           
  1467                           ;main.c: 517: PA0 = 0;
  1468  013A  1005               	bcf	5,0
  1469                           
  1470                           ;main.c: 518: PA1 = 0;
  1471  013B  1085               	bcf	5,1
  1472                           
  1473                           ;main.c: 519: PA2 = 0;
  1474  013C  1105               	bcf	5,2
  1475                           
  1476                           ;main.c: 520: PA3 = 0;
  1477  013D  1185               	bcf	5,3
  1478  013E  291F               	goto	l4362
  1479  013F                     l4408:	
  1480                           
  1481                           ;main.c: 530: {
  1482                           ;main.c: 531: if(ucTimerDelay >= 1)
  1483  013F  0856               	movf	main@ucTimerDelay,w
  1484  0140  1903               	btfsc	3,2
  1485  0141  2921               	goto	l4366
  1486                           
  1487                           ;main.c: 532: {
  1488                           ;main.c: 533: ucTimerDelay = 0;
  1489  0142  01D6               	clrf	main@ucTimerDelay
  1490                           
  1491                           ;main.c: 535: ucLoaderStep = 0;
  1492  0143  01CE               	clrf	main@ucLoaderStep
  1493  0144                     l4412:	
  1494                           
  1495                           ;main.c: 536: ucADC4_Step = ADC4_STEP_THIRD;
  1496  0144  3003               	movlw	3
  1497  0145                     L4:	
  1498  0145  00CC               	movwf	main@ucADC4_Step
  1499                           
  1500                           ;main.c: 537: }
  1501  0146  2840               	goto	l4242
  1502  0147                     l4418:	
  1503  0147  084E               	movf	main@ucLoaderStep,w
  1504                           
  1505                           ; Switch size 1, requested type "space"
  1506                           ; Number of cases is 7, Range of values is 0 to 6
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; direct_byte           21     7 (fixed)
  1510                           ; simple_byte           22    12 (average)
  1511                           ; jumptable            260     6 (fixed)
  1512                           ; rangetable            11     6 (fixed)
  1513                           ; spacedrange           20     9 (fixed)
  1514                           ; locatedrange           7     3 (fixed)
  1515                           ;	Chosen strategy is direct_byte
  1516  0148  0084               	movwf	4
  1517  0149  3007               	movlw	7
  1518  014A  0204               	subwf	4,w
  1519  014B  1803               	skipnc
  1520  014C  2840               	goto	l4242
  1521  014D  3005               	movlw	high S5024
  1522  014E  008A               	movwf	10
  1523  014F  1003               	clrc
  1524  0150  0D04               	rlf	4,w
  1525  0151  3EE5               	addlw	low S5024
  1526  0152  0082               	movwf	2
  1527  0153                     l801:	
  1528                           ;main.c: 556: {
  1529                           ;main.c: 557: case 0:
  1530                           
  1531                           
  1532                           ;main.c: 558: {
  1533                           ;main.c: 559: PB0 = 1;
  1534  0153  1406               	bsf	6,0
  1535  0154                     l4420:	
  1536                           
  1537                           ;main.c: 560: ucLoaderStep1++;
  1538  0154  0ACF               	incf	main@ucLoaderStep1,f
  1539                           
  1540                           ;main.c: 561: break;
  1541  0155  2840               	goto	l4242
  1542  0156                     l4422:	
  1543                           
  1544                           ;main.c: 565: {
  1545                           ;main.c: 566: if(ucTimerDelay1 >= 5)
  1546  0156  3005               	movlw	5
  1547  0157  0257               	subwf	main@ucTimerDelay1,w
  1548  0158  1C03               	skipc
  1549  0159  295D               	goto	l4430
  1550                           
  1551                           ;main.c: 567: {
  1552                           ;main.c: 568: PA0 = 1;
  1553  015A  1405               	bsf	5,0
  1554  015B                     l4426:	
  1555                           
  1556                           ;main.c: 569: ucTimerDelay1 = 0;
  1557  015B  01D7               	clrf	main@ucTimerDelay1
  1558  015C  2954               	goto	l4420
  1559  015D                     l4430:	
  1560                           
  1561                           ;main.c: 572: else
  1562                           ;main.c: 573: ucTimerDelay1++;
  1563  015D  0AD7               	incf	main@ucTimerDelay1,f
  1564  015E  2840               	goto	l4242
  1565  015F                     l4432:	
  1566                           
  1567                           ;main.c: 578: {
  1568                           ;main.c: 579: if(ucTimerDelay1 >= 5)
  1569  015F  3005               	movlw	5
  1570  0160  0257               	subwf	main@ucTimerDelay1,w
  1571  0161  1C03               	skipc
  1572  0162  295D               	goto	l4430
  1573                           
  1574                           ;main.c: 580: {
  1575                           ;main.c: 581: PA1= 1;
  1576  0163  1485               	bsf	5,1
  1577  0164  295B               	goto	l4426
  1578  0165                     l4442:	
  1579                           
  1580                           ;main.c: 591: {
  1581                           ;main.c: 592: if(ucTimerDelay1 >= 5)
  1582  0165  3005               	movlw	5
  1583  0166  0257               	subwf	main@ucTimerDelay1,w
  1584  0167  1C03               	skipc
  1585  0168  295D               	goto	l4430
  1586                           
  1587                           ;main.c: 593: {
  1588                           ;main.c: 594: PA2 = 1;
  1589  0169  1505               	bsf	5,2
  1590  016A  295B               	goto	l4426
  1591  016B                     l4452:	
  1592                           
  1593                           ;main.c: 604: {
  1594                           ;main.c: 605: if(ucTimerDelay1 >= 5)
  1595  016B  3005               	movlw	5
  1596  016C  0257               	subwf	main@ucTimerDelay1,w
  1597  016D  1C03               	skipc
  1598  016E  295D               	goto	l4430
  1599                           
  1600                           ;main.c: 606: {
  1601                           ;main.c: 607: PA3 = 1;
  1602  016F  1585               	bsf	5,3
  1603  0170  295B               	goto	l4426
  1604  0171                     l4462:	
  1605                           
  1606                           ;main.c: 617: {
  1607                           ;main.c: 618: if(ucTimerDelay1 >= 5)
  1608  0171  3005               	movlw	5
  1609  0172  0257               	subwf	main@ucTimerDelay1,w
  1610  0173  1C03               	skipc
  1611  0174  295D               	goto	l4430
  1612                           
  1613                           ;main.c: 619: {
  1614                           ;main.c: 620: PA0 = 0;
  1615  0175  1005               	bcf	5,0
  1616                           
  1617                           ;main.c: 621: PA1 = 0;
  1618  0176  1085               	bcf	5,1
  1619                           
  1620                           ;main.c: 622: PA2 = 0;
  1621  0177  1105               	bcf	5,2
  1622                           
  1623                           ;main.c: 623: PA3 = 0;
  1624  0178  1185               	bcf	5,3
  1625  0179  295B               	goto	l4426
  1626  017A                     l4472:	
  1627                           
  1628                           ;main.c: 633: {
  1629                           ;main.c: 634: if(ucTimerDelay1 >= 1)
  1630  017A  0857               	movf	main@ucTimerDelay1,w
  1631  017B  1903               	btfsc	3,2
  1632  017C  295D               	goto	l4430
  1633                           
  1634                           ;main.c: 635: {
  1635                           ;main.c: 636: ucTimerDelay1 = 0;
  1636  017D  01D7               	clrf	main@ucTimerDelay1
  1637                           
  1638                           ;main.c: 638: ucLoaderStep1 = 0;
  1639  017E  01CF               	clrf	main@ucLoaderStep1
  1640  017F  2944               	goto	l4412
  1641  0180                     l4482:	
  1642  0180  084F               	movf	main@ucLoaderStep1,w
  1643                           
  1644                           ; Switch size 1, requested type "space"
  1645                           ; Number of cases is 7, Range of values is 0 to 6
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; direct_byte           21     7 (fixed)
  1649                           ; simple_byte           22    12 (average)
  1650                           ; jumptable            260     6 (fixed)
  1651                           ; rangetable            11     6 (fixed)
  1652                           ; spacedrange           20     9 (fixed)
  1653                           ; locatedrange           7     3 (fixed)
  1654                           ;	Chosen strategy is direct_byte
  1655  0181  0084               	movwf	4
  1656  0182  3007               	movlw	7
  1657  0183  0204               	subwf	4,w
  1658  0184  1803               	skipnc
  1659  0185  2840               	goto	l4242
  1660  0186  3006               	movlw	high S5026
  1661  0187  008A               	movwf	10
  1662  0188  1003               	clrc
  1663  0189  0D04               	rlf	4,w
  1664  018A  3E00               	addlw	low S5026
  1665  018B  0082               	movwf	2
  1666  018C                     l828:	
  1667                           ;main.c: 660: {
  1668                           ;main.c: 661: case 0:
  1669                           
  1670                           
  1671                           ;main.c: 662: {
  1672                           ;main.c: 663: PB0 = 1;
  1673  018C  1406               	bsf	6,0
  1674                           
  1675                           ;main.c: 664: PA0 = 1;
  1676  018D  1405               	bsf	5,0
  1677  018E                     l4484:	
  1678                           
  1679                           ;main.c: 665: ucLoaderStep2++;
  1680  018E  0AD0               	incf	main@ucLoaderStep2,f
  1681                           
  1682                           ;main.c: 666: break;
  1683  018F  2840               	goto	l4242
  1684  0190                     l4486:	
  1685                           
  1686                           ;main.c: 670: {
  1687                           ;main.c: 671: if(ucTimerDelay2 >= 5)
  1688  0190  3005               	movlw	5
  1689  0191  0258               	subwf	main@ucTimerDelay2,w
  1690  0192  1C03               	skipc
  1691  0193  2997               	goto	l4494
  1692                           
  1693                           ;main.c: 672: {
  1694                           ;main.c: 673: PA1 = 1;
  1695  0194  1485               	bsf	5,1
  1696  0195                     l4490:	
  1697                           
  1698                           ;main.c: 674: ucTimerDelay2 = 0;
  1699  0195  01D8               	clrf	main@ucTimerDelay2
  1700  0196  298E               	goto	l4484
  1701  0197                     l4494:	
  1702                           
  1703                           ;main.c: 677: else
  1704                           ;main.c: 678: ucTimerDelay2++;
  1705  0197  0AD8               	incf	main@ucTimerDelay2,f
  1706  0198  2840               	goto	l4242
  1707  0199                     l4496:	
  1708                           
  1709                           ;main.c: 683: {
  1710                           ;main.c: 684: if(ucTimerDelay2 >= 5)
  1711  0199  3005               	movlw	5
  1712  019A  0258               	subwf	main@ucTimerDelay2,w
  1713  019B  1C03               	skipc
  1714  019C  2997               	goto	l4494
  1715                           
  1716                           ;main.c: 685: {
  1717                           ;main.c: 686: PA2 = 1;
  1718  019D  1505               	bsf	5,2
  1719  019E  2995               	goto	l4490
  1720  019F                     l4506:	
  1721                           
  1722                           ;main.c: 696: {
  1723                           ;main.c: 697: if(ucTimerDelay2 >= 5)
  1724  019F  3005               	movlw	5
  1725  01A0  0258               	subwf	main@ucTimerDelay2,w
  1726  01A1  1C03               	skipc
  1727  01A2  2997               	goto	l4494
  1728                           
  1729                           ;main.c: 698: {
  1730                           ;main.c: 699: PA3 = 1;
  1731  01A3  1585               	bsf	5,3
  1732  01A4  2995               	goto	l4490
  1733  01A5                     l4516:	
  1734                           
  1735                           ;main.c: 709: {
  1736                           ;main.c: 710: if(ucTimerDelay2 >= 5)
  1737  01A5  3005               	movlw	5
  1738  01A6  0258               	subwf	main@ucTimerDelay2,w
  1739  01A7  1C03               	skipc
  1740  01A8  2997               	goto	l4494
  1741                           
  1742                           ;main.c: 711: {
  1743                           ;main.c: 713: PA1 = 0;
  1744  01A9  1085               	bcf	5,1
  1745                           
  1746                           ;main.c: 714: PA2 = 0;
  1747  01AA  1105               	bcf	5,2
  1748                           
  1749                           ;main.c: 715: PA3 = 0;
  1750  01AB  1185               	bcf	5,3
  1751  01AC  2995               	goto	l4490
  1752  01AD                     l4526:	
  1753                           
  1754                           ;main.c: 725: {
  1755                           ;main.c: 726: if(ucTimerDelay2 >= 1)
  1756  01AD  0858               	movf	main@ucTimerDelay2,w
  1757  01AE  1903               	btfsc	3,2
  1758  01AF  2997               	goto	l4494
  1759                           
  1760                           ;main.c: 727: {
  1761                           ;main.c: 728: ucTimerDelay2 = 0;
  1762  01B0  01D8               	clrf	main@ucTimerDelay2
  1763                           
  1764                           ;main.c: 730: ucLoaderStep2 = 0;
  1765  01B1  01D0               	clrf	main@ucLoaderStep2
  1766  01B2  2944               	goto	l4412
  1767  01B3                     l4536:	
  1768  01B3  0850               	movf	main@ucLoaderStep2,w
  1769                           
  1770                           ; Switch size 1, requested type "space"
  1771                           ; Number of cases is 6, Range of values is 0 to 5
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; direct_byte           19     7 (fixed)
  1775                           ; simple_byte           19    10 (average)
  1776                           ; jumptable            260     6 (fixed)
  1777                           ; rangetable            10     6 (fixed)
  1778                           ; spacedrange           18     9 (fixed)
  1779                           ; locatedrange           6     3 (fixed)
  1780                           ;	Chosen strategy is direct_byte
  1781  01B4  0084               	movwf	4
  1782  01B5  3006               	movlw	6
  1783  01B6  0204               	subwf	4,w
  1784  01B7  1803               	skipnc
  1785  01B8  2840               	goto	l4242
  1786  01B9  3005               	movlw	high S5028
  1787  01BA  008A               	movwf	10
  1788  01BB  1003               	clrc
  1789  01BC  0D04               	rlf	4,w
  1790  01BD  3EF3               	addlw	low S5028
  1791  01BE  0082               	movwf	2
  1792  01BF                     l852:	
  1793                           ;main.c: 752: {
  1794                           ;main.c: 753: case 0:
  1795                           
  1796                           
  1797                           ;main.c: 754: {
  1798                           ;main.c: 755: PB0 = 1;
  1799  01BF  1406               	bsf	6,0
  1800                           
  1801                           ;main.c: 756: PA0 = 1;
  1802  01C0  1405               	bsf	5,0
  1803                           
  1804                           ;main.c: 757: PA1 = 1;
  1805  01C1  1485               	bsf	5,1
  1806  01C2                     l4538:	
  1807                           
  1808                           ;main.c: 758: ucLoaderStep3++;
  1809  01C2  0AD1               	incf	main@ucLoaderStep3,f
  1810                           
  1811                           ;main.c: 759: break;
  1812  01C3  2840               	goto	l4242
  1813  01C4                     l4540:	
  1814                           
  1815                           ;main.c: 763: {
  1816                           ;main.c: 764: if(ucTimerDelay3 >= 5)
  1817  01C4  3005               	movlw	5
  1818  01C5  0259               	subwf	main@ucTimerDelay3,w
  1819  01C6  1C03               	skipc
  1820  01C7  29CB               	goto	l4548
  1821                           
  1822                           ;main.c: 765: {
  1823                           ;main.c: 766: PA2 = 1;
  1824  01C8  1505               	bsf	5,2
  1825  01C9                     l4544:	
  1826                           
  1827                           ;main.c: 767: ucTimerDelay3 = 0;
  1828  01C9  01D9               	clrf	main@ucTimerDelay3
  1829  01CA  29C2               	goto	l4538
  1830  01CB                     l4548:	
  1831                           
  1832                           ;main.c: 770: else
  1833                           ;main.c: 771: ucTimerDelay3++;
  1834  01CB  0AD9               	incf	main@ucTimerDelay3,f
  1835  01CC  2840               	goto	l4242
  1836  01CD                     l4550:	
  1837                           
  1838                           ;main.c: 776: {
  1839                           ;main.c: 777: if(ucTimerDelay3 >= 5)
  1840  01CD  3005               	movlw	5
  1841  01CE  0259               	subwf	main@ucTimerDelay3,w
  1842  01CF  1C03               	skipc
  1843  01D0  29CB               	goto	l4548
  1844                           
  1845                           ;main.c: 778: {
  1846                           ;main.c: 779: PA3 = 1;
  1847  01D1  1585               	bsf	5,3
  1848  01D2  29C9               	goto	l4544
  1849  01D3                     l4560:	
  1850                           
  1851                           ;main.c: 790: {
  1852                           ;main.c: 791: if(ucTimerDelay3 >= 5)
  1853  01D3  3005               	movlw	5
  1854  01D4  0259               	subwf	main@ucTimerDelay3,w
  1855  01D5  1C03               	skipc
  1856  01D6  29CB               	goto	l4548
  1857                           
  1858                           ;main.c: 792: {
  1859                           ;main.c: 794: PA2 = 0;
  1860  01D7  1105               	bcf	5,2
  1861                           
  1862                           ;main.c: 795: PA3 = 0;
  1863  01D8  1185               	bcf	5,3
  1864  01D9  29C9               	goto	l4544
  1865  01DA                     l4570:	
  1866                           
  1867                           ;main.c: 805: {
  1868                           ;main.c: 806: if(ucTimerDelay3 >= 1)
  1869  01DA  0859               	movf	main@ucTimerDelay3,w
  1870  01DB  1903               	btfsc	3,2
  1871  01DC  29CB               	goto	l4548
  1872                           
  1873                           ;main.c: 807: {
  1874                           ;main.c: 808: ucTimerDelay3 = 0;
  1875  01DD  01D9               	clrf	main@ucTimerDelay3
  1876                           
  1877                           ;main.c: 810: ucLoaderStep3 = 0;
  1878  01DE  01D1               	clrf	main@ucLoaderStep3
  1879  01DF  2944               	goto	l4412
  1880  01E0                     l4580:	
  1881  01E0  0851               	movf	main@ucLoaderStep3,w
  1882                           
  1883                           ; Switch size 1, requested type "space"
  1884                           ; Number of cases is 5, Range of values is 0 to 4
  1885                           ; switch strategies available:
  1886                           ; Name         Instructions Cycles
  1887                           ; simple_byte           16     9 (average)
  1888                           ; direct_byte           17     7 (fixed)
  1889                           ; jumptable            260     6 (fixed)
  1890                           ; rangetable             9     6 (fixed)
  1891                           ; spacedrange           16     9 (fixed)
  1892                           ; locatedrange           5     3 (fixed)
  1893                           ;	Chosen strategy is simple_byte
  1894  01E1  3A00               	xorlw	0	; case 0
  1895  01E2  1903               	skipnz
  1896  01E3  29BF               	goto	l852
  1897  01E4  3A01               	xorlw	1	; case 1
  1898  01E5  1903               	skipnz
  1899  01E6  29C4               	goto	l4540
  1900  01E7  3A03               	xorlw	3	; case 2
  1901  01E8  1903               	skipnz
  1902  01E9  29CD               	goto	l4550
  1903  01EA  3A01               	xorlw	1	; case 3
  1904  01EB  1903               	skipnz
  1905  01EC  29D3               	goto	l4560
  1906  01ED  3A07               	xorlw	7	; case 4
  1907  01EE  1903               	skipnz
  1908  01EF  29DA               	goto	l4570
  1909  01F0  2862               	goto	l712
  1910  01F1                     l873:	
  1911                           ;main.c: 832: {
  1912                           ;main.c: 833: case 0:
  1913                           
  1914                           
  1915                           ;main.c: 834: {
  1916                           ;main.c: 835: PB0 = 1;
  1917  01F1  1406               	bsf	6,0
  1918                           
  1919                           ;main.c: 836: PA0 = 1;
  1920  01F2  1405               	bsf	5,0
  1921                           
  1922                           ;main.c: 837: PA1 = 1;
  1923  01F3  1485               	bsf	5,1
  1924                           
  1925                           ;main.c: 838: PA2 = 1;
  1926  01F4  1505               	bsf	5,2
  1927  01F5                     l4582:	
  1928                           
  1929                           ;main.c: 839: ucLoaderStep4++;
  1930  01F5  0AD2               	incf	main@ucLoaderStep4,f
  1931                           
  1932                           ;main.c: 840: break;
  1933  01F6  2840               	goto	l4242
  1934  01F7                     l4584:	
  1935                           
  1936                           ;main.c: 844: {
  1937                           ;main.c: 845: if(ucTimerDelay4 >= 5)
  1938  01F7  3005               	movlw	5
  1939  01F8  025A               	subwf	main@ucTimerDelay4,w
  1940  01F9  1C03               	skipc
  1941  01FA  29FE               	goto	l4592
  1942                           
  1943                           ;main.c: 846: {
  1944                           ;main.c: 847: PA3 = 1;
  1945  01FB  1585               	bsf	5,3
  1946  01FC                     l4588:	
  1947                           
  1948                           ;main.c: 848: ucTimerDelay4 = 0;
  1949  01FC  01DA               	clrf	main@ucTimerDelay4
  1950  01FD  29F5               	goto	l4582
  1951  01FE                     l4592:	
  1952                           
  1953                           ;main.c: 851: else
  1954                           ;main.c: 852: ucTimerDelay4++;
  1955  01FE  0ADA               	incf	main@ucTimerDelay4,f
  1956  01FF  2840               	goto	l4242
  1957  0200                     l4594:	
  1958                           
  1959                           ;main.c: 857: {
  1960                           ;main.c: 858: if(ucTimerDelay4 >= 5)
  1961  0200  3005               	movlw	5
  1962  0201  025A               	subwf	main@ucTimerDelay4,w
  1963  0202  1C03               	skipc
  1964  0203  29FE               	goto	l4592
  1965                           
  1966                           ;main.c: 859: {
  1967                           ;main.c: 860: PA3 = 0;
  1968  0204  1185               	bcf	5,3
  1969  0205  29FC               	goto	l4588
  1970  0206                     l4604:	
  1971                           
  1972                           ;main.c: 870: {
  1973                           ;main.c: 871: if(ucTimerDelay4 >= 1)
  1974  0206  085A               	movf	main@ucTimerDelay4,w
  1975  0207  1903               	btfsc	3,2
  1976  0208  29FE               	goto	l4592
  1977                           
  1978                           ;main.c: 872: {
  1979                           ;main.c: 873: ucTimerDelay4 = 0;
  1980  0209  01DA               	clrf	main@ucTimerDelay4
  1981                           
  1982                           ;main.c: 875: ucLoaderStep4 = 0;
  1983  020A  01D2               	clrf	main@ucLoaderStep4
  1984  020B  2944               	goto	l4412
  1985  020C                     l4614:	
  1986  020C  0852               	movf	main@ucLoaderStep4,w
  1987                           
  1988                           ; Switch size 1, requested type "space"
  1989                           ; Number of cases is 4, Range of values is 0 to 3
  1990                           ; switch strategies available:
  1991                           ; Name         Instructions Cycles
  1992                           ; simple_byte           13     7 (average)
  1993                           ; direct_byte           15     7 (fixed)
  1994                           ; jumptable            260     6 (fixed)
  1995                           ; rangetable             8     6 (fixed)
  1996                           ; spacedrange           14     9 (fixed)
  1997                           ; locatedrange           4     3 (fixed)
  1998                           ;	Chosen strategy is simple_byte
  1999  020D  3A00               	xorlw	0	; case 0
  2000  020E  1903               	skipnz
  2001  020F  29F1               	goto	l873
  2002  0210  3A01               	xorlw	1	; case 1
  2003  0211  1903               	skipnz
  2004  0212  29F7               	goto	l4584
  2005  0213  3A03               	xorlw	3	; case 2
  2006  0214  1903               	skipnz
  2007  0215  2A00               	goto	l4594
  2008  0216  3A01               	xorlw	1	; case 3
  2009  0217  1903               	skipnz
  2010  0218  2A06               	goto	l4604
  2011  0219  2862               	goto	l712
  2012  021A                     l4618:	
  2013  021A  084D               	movf	main@ucChannel4Type,w
  2014                           
  2015                           ; Switch size 1, requested type "space"
  2016                           ; Number of cases is 5, Range of values is 0 to 4
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte           16     9 (average)
  2020                           ; direct_byte           17     7 (fixed)
  2021                           ; jumptable            260     6 (fixed)
  2022                           ; rangetable             9     6 (fixed)
  2023                           ; spacedrange           16     9 (fixed)
  2024                           ; locatedrange           5     3 (fixed)
  2025                           ;	Chosen strategy is simple_byte
  2026  021B  3A00               	xorlw	0	; case 0
  2027  021C  1903               	skipnz
  2028  021D  2947               	goto	l4418
  2029  021E  3A01               	xorlw	1	; case 1
  2030  021F  1903               	skipnz
  2031  0220  2980               	goto	l4482
  2032  0221  3A03               	xorlw	3	; case 2
  2033  0222  1903               	skipnz
  2034  0223  29B3               	goto	l4536
  2035  0224  3A01               	xorlw	1	; case 3
  2036  0225  1903               	skipnz
  2037  0226  29E0               	goto	l4580
  2038  0227  3A07               	xorlw	7	; case 4
  2039  0228  1903               	skipnz
  2040  0229  2A0C               	goto	l4614
  2041  022A  2862               	goto	l712
  2042  022B                     l4620:	
  2043                           
  2044                           ;main.c: 899: {
  2045                           ;main.c: 900: static unsigned char ucTimerDelayP5s = 0;
  2046                           ;main.c: 902: static unsigned char ucTimerPA6DelayP1s = 0;
  2047                           ;main.c: 904: static unsigned char ucTimerPB6DelayP1s = 0;
  2048                           ;main.c: 906: if(isFinishedTwentySecondsTimer())
  2049  022B  118A  265C  118A   	fcall	_isFinishedTwentySecondsTimer
  2050  022E  3A00               	xorlw	0
  2051  022F  1903               	skipnz
  2052  0230  28DE               	goto	l4336
  2053                           
  2054                           ;main.c: 907: {
  2055                           ;main.c: 908: if(ucTimerPA6DelayP1s < 1)
  2056  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0232  08E4               	movf	main@ucTimerPA6DelayP1s,f
  2058  0233  1D03               	skipz
  2059  0234  2A38               	goto	l4628
  2060                           
  2061                           ;main.c: 909: {
  2062                           ;main.c: 910: PA6 = 0;
  2063  0235  1305               	bcf	5,6
  2064                           
  2065                           ;main.c: 911: ucTimerPA6DelayP1s++;
  2066  0236  0AE4               	incf	main@ucTimerPA6DelayP1s,f
  2067                           
  2068                           ;main.c: 912: }
  2069  0237  2840               	goto	l4242
  2070  0238                     l4628:	
  2071                           
  2072                           ;main.c: 913: else
  2073                           ;main.c: 914: {
  2074                           ;main.c: 915: if(ucTimerPB6DelayP1s < 1)
  2075  0238  08E5               	movf	main@ucTimerPB6DelayP1s,f
  2076  0239  1D03               	skipz
  2077  023A  2A43               	goto	l4634
  2078                           
  2079                           ;main.c: 916: {
  2080                           ;main.c: 917: PBOD6 =0;
  2081  023B  1683               	bsf	3,5	;RP0=1, select bank3
  2082  023C  1703               	bsf	3,6	;RP1=1, select bank3
  2083  023D  1308               	bcf	8,6
  2084                           
  2085                           ;main.c: 918: PB6 = 1;
  2086  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2087  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0240  1706               	bsf	6,6
  2089                           
  2090                           ;main.c: 919: ucTimerPB6DelayP1s++;
  2091  0241  0AE5               	incf	main@ucTimerPB6DelayP1s,f
  2092                           
  2093                           ;main.c: 920: }
  2094  0242  2840               	goto	l4242
  2095  0243                     l4634:	
  2096                           
  2097                           ;main.c: 921: else
  2098                           ;main.c: 922: {
  2099                           ;main.c: 923: if(ucTimerDelayP5s < 3)
  2100  0243  3003               	movlw	3
  2101  0244  025B               	subwf	main@ucTimerDelayP5s,w
  2102  0245  1803               	skipnc
  2103  0246  2A49               	goto	l4638
  2104                           
  2105                           ;main.c: 924: {
  2106                           ;main.c: 925: ucTimerDelayP5s++;
  2107  0247  0ADB               	incf	main@ucTimerDelayP5s,f
  2108                           
  2109                           ;main.c: 926: }
  2110  0248  2840               	goto	l4242
  2111  0249                     l4638:	
  2112                           
  2113                           ;main.c: 927: else
  2114                           ;main.c: 928: {
  2115                           ;main.c: 930: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2116                           ;main.c: 932: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f = 
      +                          0;
  2117                           ;main.c: 934: if((getAdOriginalCh14Value() > 2800))
  2118  0249  118A  2488  118A   	fcall	_getAdOriginalCh14Value
  2119  024C  300A               	movlw	10
  2120  024D  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2121  024E  30F1               	movlw	241
  2122  024F  1903               	skipnz
  2123  0250  0246               	subwf	?_getAdOriginalCh14Value,w
  2124  0251  1C03               	skipc
  2125  0252  2A56               	goto	l4644
  2126                           
  2127                           ;main.c: 935: {
  2128                           ;main.c: 936: ucTimerForDACR0_CNT1++;
  2129  0253  0ADC               	incf	main@ucTimerForDACR0_CNT1,f
  2130                           
  2131                           ;main.c: 937: ucTimerForDACR0_CNT2 = 0;
  2132  0254  01DE               	clrf	main@ucTimerForDACR0_CNT2
  2133                           
  2134                           ;main.c: 938: }
  2135  0255  2A58               	goto	l4648
  2136  0256                     l4644:	
  2137                           
  2138                           ;main.c: 939: else
  2139                           ;main.c: 940: {
  2140                           ;main.c: 941: ucTimerForDACR0_CNT2++;
  2141  0256  0ADE               	incf	main@ucTimerForDACR0_CNT2,f
  2142                           
  2143                           ;main.c: 942: ucTimerForDACR0_CNT1 = 0;
  2144  0257  01DC               	clrf	main@ucTimerForDACR0_CNT1
  2145  0258                     l4648:	
  2146                           
  2147                           ;main.c: 943: }
  2148                           ;main.c: 945: if(ucTimerForDACR0_CNT1 >= 3)
  2149  0258  3003               	movlw	3
  2150  0259  025C               	subwf	main@ucTimerForDACR0_CNT1,w
  2151  025A  1C03               	skipc
  2152  025B  2A5E               	goto	l4652
  2153                           
  2154                           ;main.c: 946: ucTimerForDACR0_CNT1_f = 1;
  2155  025C  01DD               	clrf	main@ucTimerForDACR0_CNT1_f
  2156  025D  0ADD               	incf	main@ucTimerForDACR0_CNT1_f,f
  2157  025E                     l4652:	
  2158                           
  2159                           ;main.c: 948: if(ucTimerForDACR0_CNT2 >= 3)
  2160  025E  3003               	movlw	3
  2161  025F  025E               	subwf	main@ucTimerForDACR0_CNT2,w
  2162  0260  1C03               	skipc
  2163  0261  2A64               	goto	l4656
  2164                           
  2165                           ;main.c: 949: ucTimerForDACR0_CNT2_f = 1;
  2166  0262  01DF               	clrf	main@ucTimerForDACR0_CNT2_f
  2167  0263  0ADF               	incf	main@ucTimerForDACR0_CNT2_f,f
  2168  0264                     l4656:	
  2169                           
  2170                           ;main.c: 951: if(ucTimerForDACR0_CNT1_f)
  2171  0264  085D               	movf	main@ucTimerForDACR0_CNT1_f,w
  2172  0265  1903               	btfsc	3,2
  2173  0266  2A69               	goto	l4660
  2174                           
  2175                           ;main.c: 952: {
  2176                           ;main.c: 953: DACR0=0x0F;
  2177  0267  300F               	movlw	15
  2178  0268  2A6D               	goto	L5
  2179  0269                     l4660:	
  2180                           ;main.c: 955: }
  2181                           
  2182                           ;main.c: 954: ucADC4_Step = ADC4_STEP_FOURTH;
  2183                           
  2184                           
  2185                           ;main.c: 956: else if(ucTimerForDACR0_CNT2_f)
  2186  0269  085F               	movf	main@ucTimerForDACR0_CNT2_f,w
  2187  026A  1903               	btfsc	3,2
  2188  026B  2A72               	goto	l4664
  2189                           
  2190                           ;main.c: 957: {
  2191                           ;main.c: 958: DACR0=0x07;
  2192  026C  3007               	movlw	7
  2193  026D                     L5:	
  2194  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2195  026E  0088               	movwf	8	;volatile
  2196                           
  2197                           ;main.c: 959: ucADC4_Step = ADC4_STEP_FOURTH;
  2198  026F  3004               	movlw	4
  2199  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0271  00CC               	movwf	main@ucADC4_Step
  2201  0272                     l4664:	
  2202                           ;main.c: 960: }
  2203                           
  2204                           
  2205                           ;main.c: 964: }
  2206                           ;main.c: 966: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2207  0272  084C               	movf	main@ucADC4_Step,w
  2208  0273  3A04               	xorlw	4
  2209  0274  1D03               	skipz
  2210  0275  2840               	goto	l4242
  2211                           
  2212                           ;main.c: 967: {
  2213                           ;main.c: 968: ucTimerForDACR0_CNT1 = 0;
  2214  0276  01DC               	clrf	main@ucTimerForDACR0_CNT1
  2215                           
  2216                           ;main.c: 969: ucTimerForDACR0_CNT2 = 0;
  2217  0277  01DE               	clrf	main@ucTimerForDACR0_CNT2
  2218                           
  2219                           ;main.c: 970: ucTimerForDACR0_CNT1_f = 0;
  2220  0278  01DD               	clrf	main@ucTimerForDACR0_CNT1_f
  2221                           
  2222                           ;main.c: 971: ucTimerForDACR0_CNT2_f = 0;
  2223  0279  01DF               	clrf	main@ucTimerForDACR0_CNT2_f
  2224                           
  2225                           ;main.c: 973: ucTimerPB6DelayP1s = 0;
  2226  027A  01E5               	clrf	main@ucTimerPB6DelayP1s
  2227                           
  2228                           ;main.c: 974: ucTimerPA6DelayP1s = 0;
  2229  027B  01E4               	clrf	main@ucTimerPA6DelayP1s
  2230                           
  2231                           ;main.c: 976: ucTimerDelayP5s = 0;
  2232  027C  01DB               	clrf	main@ucTimerDelayP5s
  2233  027D  2840               	goto	l4242
  2234  027E                     l4668:	
  2235                           
  2236                           ;main.c: 989: {
  2237                           ;main.c: 990: static unsigned char ucTimer1s = 0;
  2238                           ;main.c: 992: static unsigned char ucTimerSeond1s = 0;
  2239                           ;main.c: 994: if(ucTimerSeond1s < 3)
  2240  027E  3003               	movlw	3
  2241  027F  0267               	subwf	main@ucTimerSeond1s,w
  2242  0280  1803               	skipnc
  2243  0281  2A84               	goto	l4672
  2244                           
  2245                           ;main.c: 995: {
  2246                           ;main.c: 996: ucTimerSeond1s++;
  2247  0282  0AE7               	incf	main@ucTimerSeond1s,f
  2248                           
  2249                           ;main.c: 997: }
  2250  0283  2840               	goto	l4242
  2251  0284                     l4672:	
  2252                           
  2253                           ;main.c: 998: else
  2254                           ;main.c: 999: {
  2255                           ;main.c: 1000: if(ucTimer1s < 3)
  2256  0284  3003               	movlw	3
  2257  0285  0253               	subwf	main@ucTimer1s,w
  2258  0286  1803               	skipnc
  2259  0287  2A8E               	goto	l4680
  2260                           
  2261                           ;main.c: 1001: {
  2262                           ;main.c: 1002: ucTimer1s++;
  2263  0288  0AD3               	incf	main@ucTimer1s,f
  2264                           
  2265                           ;main.c: 1003: PB6 = 1;
  2266  0289  1706               	bsf	6,6
  2267                           
  2268                           ;main.c: 1004: PBOD6 = 1;
  2269  028A  1683               	bsf	3,5	;RP0=1, select bank3
  2270  028B  1703               	bsf	3,6	;RP1=1, select bank3
  2271  028C  1708               	bsf	8,6
  2272                           
  2273                           ;main.c: 1005: }
  2274  028D  2840               	goto	l4242
  2275  028E                     l4680:	
  2276                           
  2277                           ;main.c: 1006: else
  2278                           ;main.c: 1007: {
  2279                           ;main.c: 1008: ucTimer1s = 0;
  2280  028E  01D3               	clrf	main@ucTimer1s
  2281                           
  2282                           ;main.c: 1010: ucTimerSeond1s = 0;
  2283  028F  01E7               	clrf	main@ucTimerSeond1s
  2284                           
  2285                           ;main.c: 1012: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2286  0290  01CB               	clrf	main@enumMainLoopStep
  2287  0291  0ACB               	incf	main@enumMainLoopStep,f
  2288                           
  2289                           ;main.c: 1014: ucADC4_Step = ADC4_STEP_INIT;
  2290  0292  01CC               	clrf	main@ucADC4_Step
  2291  0293  2840               	goto	l4242
  2292  0294                     l4686:	
  2293  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0295  084C               	movf	main@ucADC4_Step,w
  2295                           
  2296                           ; Switch size 1, requested type "space"
  2297                           ; Number of cases is 5, Range of values is 0 to 4
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte           16     9 (average)
  2301                           ; direct_byte           17     7 (fixed)
  2302                           ; jumptable            260     6 (fixed)
  2303                           ; rangetable             9     6 (fixed)
  2304                           ; spacedrange           16     9 (fixed)
  2305                           ; locatedrange           5     3 (fixed)
  2306                           ;	Chosen strategy is simple_byte
  2307  0296  3A00               	xorlw	0	; case 0
  2308  0297  1903               	skipnz
  2309  0298  28DB               	goto	l4334
  2310  0299  3A01               	xorlw	1	; case 1
  2311  029A  1903               	skipnz
  2312  029B  28E2               	goto	l4338
  2313  029C  3A03               	xorlw	3	; case 2
  2314  029D  1903               	skipnz
  2315  029E  2A1A               	goto	l4618
  2316  029F  3A01               	xorlw	1	; case 3
  2317  02A0  1903               	skipnz
  2318  02A1  2A2B               	goto	l4620
  2319  02A2  3A07               	xorlw	7	; case 4
  2320  02A3  1903               	skipnz
  2321  02A4  2A7E               	goto	l4668
  2322  02A5  2862               	goto	l712
  2323  02A6                     l932:	
  2324                           ;main.c: 1041: {
  2325                           ;main.c: 1042: case HOUR_3_BRANCH_STEP_FIRST:
  2326                           
  2327                           
  2328                           ;main.c: 1043: {
  2329                           ;main.c: 1045: PB7 = 1;
  2330  02A6  1786               	bsf	6,7
  2331                           
  2332                           ;main.c: 1046: PBOD7 = 1;
  2333  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  2334  02A8  3030               	movlw	48
  2335  02A9  1703               	bsf	3,6	;RP1=1, select bank3
  2336  02AA  1788               	bsf	8,7
  2337                           
  2338                           ;main.c: 1047: startThreeHoursTimer(10800);
  2339  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2340  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2341  02AD  00A0               	movwf	?_startThreeHoursTimer
  2342  02AE  302A               	movlw	42
  2343  02AF  00A1               	movwf	?_startThreeHoursTimer+1
  2344  02B0  118A  260E  118A   	fcall	_startThreeHoursTimer
  2345                           
  2346                           ;main.c: 1049: PB0 = 1;
  2347  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2348  02B4  1406               	bsf	6,0
  2349                           
  2350                           ;main.c: 1050: PA0 = 1;
  2351  02B5  1405               	bsf	5,0
  2352                           
  2353                           ;main.c: 1051: PA1 = 1;
  2354  02B6  1485               	bsf	5,1
  2355                           
  2356                           ;main.c: 1052: PA2 = 1;
  2357  02B7  1505               	bsf	5,2
  2358                           
  2359                           ;main.c: 1053: PA3 = 1;
  2360  02B8  1585               	bsf	5,3
  2361                           
  2362                           ;main.c: 1055: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2363  02B9  01CA               	clrf	main@enumBranchStep
  2364  02BA  0ACA               	incf	main@enumBranchStep,f
  2365                           
  2366                           ;main.c: 1056: break;
  2367  02BB  2840               	goto	l4242
  2368  02BC                     l4702:	
  2369                           
  2370                           ;main.c: 1060: {
  2371                           ;main.c: 1061: static unsigned char ucTimer20s = 0;
  2372                           ;main.c: 1063: if(ucTimer20s < 200)
  2373  02BC  30C8               	movlw	200
  2374  02BD  0254               	subwf	main@ucTimer20s,w
  2375  02BE  1803               	skipnc
  2376  02BF  2AC2               	goto	l4706
  2377                           
  2378                           ;main.c: 1064: {
  2379                           ;main.c: 1065: ucTimer20s++;
  2380  02C0  0AD4               	incf	main@ucTimer20s,f
  2381                           
  2382                           ;main.c: 1067: }
  2383  02C1  2840               	goto	l4242
  2384  02C2                     l4706:	
  2385  02C2  3002               	movlw	2
  2386                           
  2387                           ;main.c: 1068: else
  2388                           ;main.c: 1069: {
  2389                           ;main.c: 1071: ucTimer20s = 0;
  2390  02C3  01D4               	clrf	main@ucTimer20s
  2391                           
  2392                           ;main.c: 1073: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2393  02C4  00CA               	movwf	main@enumBranchStep
  2394                           
  2395                           ;main.c: 1075: PA6 = 0;
  2396  02C5  1305               	bcf	5,6
  2397  02C6  2840               	goto	l4242
  2398  02C7                     l4712:	
  2399                           
  2400                           ;main.c: 1081: {
  2401                           ;main.c: 1082: if(isFinishedThreeHoursTimer())
  2402  02C7  118A  2656  118A   	fcall	_isFinishedThreeHoursTimer
  2403  02CA  3A00               	xorlw	0
  2404  02CB  1903               	skipnz
  2405  02CC  2AD0               	goto	l4718
  2406                           
  2407                           ;main.c: 1083: {
  2408                           ;main.c: 1084: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2409  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2410  02CE  3009               	movlw	9
  2411  02CF  2AEF               	goto	L7
  2412  02D0                     l4718:	
  2413                           ;main.c: 1086: }
  2414                           
  2415                           ;main.c: 1085: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  2416                           
  2417                           
  2418                           ;main.c: 1087: else
  2419                           ;main.c: 1088: {
  2420                           ;main.c: 1089: static unsigned char ucTimerX1P5s = 0;
  2421                           ;main.c: 1091: static unsigned char ucTimerLessX1P5s = 0;
  2422                           ;main.c: 1093: if(getAdOriginalCh1Value() < 115)
  2423  02D0  118A  247E  118A   	fcall	_getAdOriginalCh1Value
  2424  02D3  3000               	movlw	0
  2425  02D4  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2426  02D5  3073               	movlw	115
  2427  02D6  1903               	skipnz
  2428  02D7  0246               	subwf	?_getAdOriginalCh1Value,w
  2429  02D8  1803               	skipnc
  2430  02D9  2ADD               	goto	l4724
  2431                           
  2432                           ;main.c: 1094: {
  2433                           ;main.c: 1095: ucTimerX1P5s = 0;
  2434  02DA  01E8               	clrf	main@ucTimerX1P5s
  2435                           
  2436                           ;main.c: 1096: ucTimerLessX1P5s++;
  2437  02DB  0AE1               	incf	main@ucTimerLessX1P5s,f
  2438                           
  2439                           ;main.c: 1097: }
  2440  02DC  2ADF               	goto	l4728
  2441  02DD                     l4724:	
  2442                           
  2443                           ;main.c: 1098: else
  2444                           ;main.c: 1099: {
  2445                           ;main.c: 1100: ucTimerX1P5s++;
  2446  02DD  0AE8               	incf	main@ucTimerX1P5s,f
  2447                           
  2448                           ;main.c: 1101: ucTimerLessX1P5s = 0;
  2449  02DE  01E1               	clrf	main@ucTimerLessX1P5s
  2450  02DF                     l4728:	
  2451                           
  2452                           ;main.c: 1102: }
  2453                           ;main.c: 1104: if(ucTimerX1P5s >= 5)
  2454  02DF  3005               	movlw	5
  2455  02E0  0268               	subwf	main@ucTimerX1P5s,w
  2456  02E1  1C03               	skipc
  2457  02E2  2AF2               	goto	l4742
  2458                           
  2459                           ;main.c: 1105: {
  2460                           ;main.c: 1106: ucTimerX1P5s = 0;
  2461  02E3  01E8               	clrf	main@ucTimerX1P5s
  2462                           
  2463                           ;main.c: 1109: PBOD7 = 0;
  2464  02E4  1683               	bsf	3,5	;RP0=1, select bank3
  2465  02E5  1703               	bsf	3,6	;RP1=1, select bank3
  2466  02E6  1388               	bcf	8,7
  2467                           
  2468                           ;main.c: 1110: PB7 = 0;
  2469  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2470  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2471  02E9  1386               	bcf	6,7
  2472                           
  2473                           ;main.c: 1111: clearThreeHoursTimer();
  2474  02EA  118A  25B2  118A   	fcall	_clearThreeHoursTimer
  2475                           
  2476                           ;main.c: 1113: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2477  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2478  02EE  3002               	movlw	2
  2479  02EF                     L7:	
  2480  02EF  01CA               	clrf	main@enumBranchStep
  2481  02F0                     L6:	
  2482                           ;main.c: 1115: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2483                           
  2484  02F0  00CB               	movwf	main@enumMainLoopStep
  2485                           
  2486                           ;main.c: 1116: }
  2487  02F1  2840               	goto	l4242
  2488  02F2                     l4742:	
  2489                           
  2490                           ;main.c: 1117: else if(ucTimerLessX1P5s >= 5)
  2491  02F2  3005               	movlw	5
  2492  02F3  0261               	subwf	main@ucTimerLessX1P5s,w
  2493  02F4  1C03               	skipc
  2494  02F5  2840               	goto	l4242
  2495                           
  2496                           ;main.c: 1118: {
  2497                           ;main.c: 1119: static unsigned char ucTimerX2P5s = 0;
  2498                           ;main.c: 1121: static unsigned char ucTimerLessX2P5s = 0;
  2499                           ;main.c: 1123: if(getAdOriginalCh14Value() >= 1950)
  2500  02F6  118A  2488  118A   	fcall	_getAdOriginalCh14Value
  2501  02F9  3007               	movlw	7
  2502  02FA  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2503  02FB  309E               	movlw	158
  2504  02FC  1903               	skipnz
  2505  02FD  0246               	subwf	?_getAdOriginalCh14Value,w
  2506  02FE  1C03               	skipc
  2507  02FF  2B03               	goto	l4750
  2508                           
  2509                           ;main.c: 1124: {
  2510                           ;main.c: 1125: ucTimerX2P5s++;
  2511  0300  0AE9               	incf	main@ucTimerX2P5s,f
  2512                           
  2513                           ;main.c: 1126: ucTimerLessX2P5s = 0;
  2514  0301  01E2               	clrf	main@ucTimerLessX2P5s
  2515                           
  2516                           ;main.c: 1127: }
  2517  0302  2B05               	goto	l4754
  2518  0303                     l4750:	
  2519                           
  2520                           ;main.c: 1128: else
  2521                           ;main.c: 1129: {
  2522                           ;main.c: 1130: ucTimerX2P5s = 0;
  2523  0303  01E9               	clrf	main@ucTimerX2P5s
  2524                           
  2525                           ;main.c: 1131: ucTimerLessX2P5s++;
  2526  0304  0AE2               	incf	main@ucTimerLessX2P5s,f
  2527  0305                     l4754:	
  2528                           
  2529                           ;main.c: 1132: }
  2530                           ;main.c: 1134: if(ucTimerX2P5s >= 5)
  2531  0305  3005               	movlw	5
  2532  0306  0269               	subwf	main@ucTimerX2P5s,w
  2533  0307  1C03               	skipc
  2534  0308  2B0B               	goto	l4758
  2535                           
  2536                           ;main.c: 1135: {
  2537                           ;main.c: 1136: ucTimerX2P5s = 0;
  2538  0309  01E9               	clrf	main@ucTimerX2P5s
  2539                           
  2540                           ;main.c: 1137: }
  2541  030A  2840               	goto	l4242
  2542  030B                     l4758:	
  2543                           
  2544                           ;main.c: 1138: else if(ucTimerLessX2P5s >= 5)
  2545  030B  3005               	movlw	5
  2546  030C  0262               	subwf	main@ucTimerLessX2P5s,w
  2547  030D  1C03               	skipc
  2548  030E  2840               	goto	l4242
  2549                           
  2550                           ;main.c: 1139: {
  2551                           ;main.c: 1140: clearPinPortAndTimer();
  2552  030F  118A  259D  118A   	fcall	_clearPinPortAndTimer
  2553                           
  2554                           ;main.c: 1141: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2555  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0313  01CB               	clrf	main@enumMainLoopStep
  2557  0314  0ACB               	incf	main@enumMainLoopStep,f
  2558                           
  2559                           ;main.c: 1142: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2560  0315  01CA               	clrf	main@enumBranchStep
  2561                           
  2562                           ;main.c: 1143: }
  2563  0316  2840               	goto	l4242
  2564  0317                     l4768:	
  2565  0317  084A               	movf	main@enumBranchStep,w
  2566                           
  2567                           ; Switch size 1, requested type "space"
  2568                           ; Number of cases is 3, Range of values is 0 to 2
  2569                           ; switch strategies available:
  2570                           ; Name         Instructions Cycles
  2571                           ; simple_byte           10     6 (average)
  2572                           ; direct_byte           13     7 (fixed)
  2573                           ; jumptable            260     6 (fixed)
  2574                           ; rangetable             7     6 (fixed)
  2575                           ; spacedrange           12     9 (fixed)
  2576                           ; locatedrange           3     3 (fixed)
  2577                           ;	Chosen strategy is simple_byte
  2578  0318  3A00               	xorlw	0	; case 0
  2579  0319  1903               	skipnz
  2580  031A  2AA6               	goto	l932
  2581  031B  3A01               	xorlw	1	; case 1
  2582  031C  1903               	skipnz
  2583  031D  2ABC               	goto	l4702
  2584  031E  3A03               	xorlw	3	; case 2
  2585  031F  1903               	skipnz
  2586  0320  2AC7               	goto	l4712
  2587  0321  2862               	goto	l712
  2588  0322                     l967:	
  2589                           ;main.c: 1179: {
  2590                           ;main.c: 1180: case INTERNAL_FIRST_STEP:
  2591                           
  2592                           
  2593                           ;main.c: 1181: {
  2594                           ;main.c: 1182: PB0 = 0;
  2595  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0323  1006               	bcf	6,0
  2597                           
  2598                           ;main.c: 1183: PB1 = 0;
  2599  0324  1086               	bcf	6,1
  2600                           
  2601                           ;main.c: 1184: PA0 = 0;
  2602  0325  1005               	bcf	5,0
  2603                           
  2604                           ;main.c: 1185: PA1 = 0;
  2605  0326  1085               	bcf	5,1
  2606                           
  2607                           ;main.c: 1186: PA2 = 0;
  2608  0327  1105               	bcf	5,2
  2609                           
  2610                           ;main.c: 1187: PA3 = 0;
  2611  0328  1185               	bcf	5,3
  2612                           
  2613                           ;main.c: 1188: PBOD6 = 0;
  2614  0329  1683               	bsf	3,5	;RP0=1, select bank3
  2615  032A  1703               	bsf	3,6	;RP1=1, select bank3
  2616  032B  1308               	bcf	8,6
  2617                           
  2618                           ;main.c: 1189: PB6 = 1;
  2619  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2620  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2621  032E  1706               	bsf	6,6
  2622                           
  2623                           ;main.c: 1190: PA6 =0;
  2624  032F  1305               	bcf	5,6
  2625                           
  2626                           ;main.c: 1192: enumInteralStep = INTERNAL_SECOND_STEP;
  2627  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2628  0331  01AA               	clrf	main@enumInteralStep^(0+128)
  2629  0332  0AAA               	incf	main@enumInteralStep^(0+128),f
  2630                           
  2631                           ;main.c: 1193: break;
  2632  0333  2840               	goto	l4242
  2633  0334                     l4770:	
  2634                           
  2635                           ;main.c: 1197: {
  2636                           ;main.c: 1198: static unsigned char ucTimer1s = 0;
  2637                           ;main.c: 1200: if(getAdOriginalCh14Value() <= 1000)
  2638  0334  118A  2488  118A   	fcall	_getAdOriginalCh14Value
  2639  0337  3003               	movlw	3
  2640  0338  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2641  0339  30E9               	movlw	233
  2642  033A  1903               	skipnz
  2643  033B  0246               	subwf	?_getAdOriginalCh14Value,w
  2644  033C  1803               	skipnc
  2645  033D  2B41               	goto	l4774
  2646                           
  2647                           ;main.c: 1201: {
  2648                           ;main.c: 1202: ucTimer1s++;
  2649  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2650  033F  0AA9               	incf	main@cTimer1s_825^(0+128),f
  2651                           
  2652                           ;main.c: 1203: }
  2653  0340  2B43               	goto	l4776
  2654  0341                     l4774:	
  2655                           
  2656                           ;main.c: 1204: else
  2657                           ;main.c: 1205: ucTimer1s = 0;
  2658  0341  1683               	bsf	3,5	;RP0=1, select bank1
  2659  0342  01A9               	clrf	main@cTimer1s_825^(0+128)
  2660  0343                     l4776:	
  2661                           
  2662                           ;main.c: 1207: if(ucTimer1s >= 10)
  2663  0343  300A               	movlw	10
  2664  0344  0229               	subwf	main@cTimer1s_825^(0+128),w
  2665  0345  1C03               	skipc
  2666  0346  2840               	goto	l4242
  2667                           
  2668                           ;main.c: 1208: {
  2669                           ;main.c: 1209: enumInteralStep = INTERNAL_THIRD_STEP;
  2670  0347  3002               	movlw	2
  2671  0348  00AA               	movwf	main@enumInteralStep^(0+128)
  2672                           
  2673                           ;main.c: 1210: ucTimer1s = 0;
  2674  0349  01A9               	clrf	main@cTimer1s_825^(0+128)
  2675  034A  2840               	goto	l4242
  2676  034B                     l4782:	
  2677                           
  2678                           ;main.c: 1216: {
  2679                           ;main.c: 1217: static unsigned char ucTimerP3s = 0;
  2680                           ;main.c: 1219: if(getAdOriginalCh14Value() >= 1950)
  2681  034B  118A  2488  118A   	fcall	_getAdOriginalCh14Value
  2682  034E  3007               	movlw	7
  2683  034F  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2684  0350  309E               	movlw	158
  2685  0351  1903               	skipnz
  2686  0352  0246               	subwf	?_getAdOriginalCh14Value,w
  2687  0353  1C03               	skipc
  2688  0354  2B58               	goto	l4786
  2689                           
  2690                           ;main.c: 1220: {
  2691                           ;main.c: 1221: ucTimerP3s++;
  2692  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0356  0AAB               	incf	main@ucTimerP3s^(0+128),f
  2694                           
  2695                           ;main.c: 1222: }
  2696  0357  2B5A               	goto	l4788
  2697  0358                     l4786:	
  2698                           
  2699                           ;main.c: 1223: else
  2700                           ;main.c: 1224: ucTimerP3s = 0;
  2701  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2702  0359  01AB               	clrf	main@ucTimerP3s^(0+128)
  2703  035A                     l4788:	
  2704                           
  2705                           ;main.c: 1226: if(ucTimerP3s >= 3)
  2706  035A  3003               	movlw	3
  2707  035B  022B               	subwf	main@ucTimerP3s^(0+128),w
  2708  035C  1C03               	skipc
  2709  035D  2840               	goto	l4242
  2710                           
  2711                           ;main.c: 1227: {
  2712                           ;main.c: 1228: enumInteralStep = INTERNAL_FIRST_STEP;
  2713  035E  01AA               	clrf	main@enumInteralStep^(0+128)
  2714                           
  2715                           ;main.c: 1229: ucTimerP3s = 0;
  2716  035F  01AB               	clrf	main@ucTimerP3s^(0+128)
  2717                           
  2718                           ;main.c: 1230: clearAllTimer();
  2719  0360  118A  25A9  118A   	fcall	_clearAllTimer
  2720                           
  2721                           ;main.c: 1232: DACR0=0x0F;
  2722  0363  300F               	movlw	15
  2723  0364  0088               	movwf	8	;volatile
  2724                           
  2725                           ;main.c: 1233: initPin();
  2726  0365  118A  25D2  118A   	fcall	_initPin
  2727                           
  2728                           ;main.c: 1236: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2729  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2731  036A  01CB               	clrf	main@enumMainLoopStep
  2732  036B                     l982:	
  2733  036B  2B6B               	goto	l982
  2734  036C                     l4802:	
  2735  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2736  036D  082A               	movf	main@enumInteralStep^(0+128),w
  2737                           
  2738                           ; Switch size 1, requested type "space"
  2739                           ; Number of cases is 3, Range of values is 0 to 2
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte           10     6 (average)
  2743                           ; direct_byte           13     7 (fixed)
  2744                           ; jumptable            260     6 (fixed)
  2745                           ; rangetable             7     6 (fixed)
  2746                           ; spacedrange           12     9 (fixed)
  2747                           ; locatedrange           3     3 (fixed)
  2748                           ;	Chosen strategy is simple_byte
  2749  036E  3A00               	xorlw	0	; case 0
  2750  036F  1903               	skipnz
  2751  0370  2B22               	goto	l967
  2752  0371  3A01               	xorlw	1	; case 1
  2753  0372  1903               	skipnz
  2754  0373  2B34               	goto	l4770
  2755  0374  3A03               	xorlw	3	; case 2
  2756  0375  1903               	skipnz
  2757  0376  2B4B               	goto	l4782
  2758  0377  2862               	goto	l712
  2759  0378                     l4806:	
  2760  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0379  084B               	movf	main@enumMainLoopStep,w
  2762                           
  2763                           ; Switch size 1, requested type "space"
  2764                           ; Number of cases is 8, Range of values is 0 to 9
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte           25    13 (average)
  2768                           ; direct_byte           27     7 (fixed)
  2769                           ; jumptable            260     6 (fixed)
  2770                           ; rangetable            14     6 (fixed)
  2771                           ; spacedrange           26     9 (fixed)
  2772                           ; locatedrange          10     3 (fixed)
  2773                           ;	Chosen strategy is simple_byte
  2774  037A  3A00               	xorlw	0	; case 0
  2775  037B  1903               	skipnz
  2776  037C  284E               	goto	l4250
  2777  037D  3A01               	xorlw	1	; case 1
  2778  037E  1903               	skipnz
  2779  037F  2863               	goto	l4262
  2780  0380  3A03               	xorlw	3	; case 2
  2781  0381  1903               	skipnz
  2782  0382  287B               	goto	l720
  2783  0383  3A01               	xorlw	1	; case 3
  2784  0384  1903               	skipnz
  2785  0385  2885               	goto	l4284
  2786  0386  3A07               	xorlw	7	; case 4
  2787  0387  1903               	skipnz
  2788  0388  28C0               	goto	l4320
  2789  0389  3A01               	xorlw	1	; case 5
  2790  038A  1903               	skipnz
  2791  038B  28CC               	goto	l4326
  2792  038C  3A0D               	xorlw	13	; case 8
  2793  038D  1903               	skipnz
  2794  038E  2B17               	goto	l4768
  2795  038F  3A01               	xorlw	1	; case 9
  2796  0390  1903               	skipnz
  2797  0391  2B6C               	goto	l4802
  2798  0392  2862               	goto	l712
  2799  0393  118A  2811         	ljmp	start
  2800  0395                     __end_of_main:	
  2801                           
  2802                           	psect	swtext1
  2803  05E5                     __pswtext1:	
  2804  05E5                     S5024:	
  2805  05E5  118A  2917         	ljmp	l773
  2806  05E7  118A  291A         	ljmp	l4358
  2807  05E9  118A  2923         	ljmp	l4368
  2808  05EB  118A  2929         	ljmp	l4378
  2809  05ED  118A  292F         	ljmp	l4388
  2810  05EF  118A  2935         	ljmp	l4398
  2811  05F1  118A  293F         	ljmp	l4408
  2812                           
  2813                           	psect	swtext2
  2814  0600                     __pswtext2:	
  2815  0600                     S5026:	
  2816  0600  118A  2953         	ljmp	l801
  2817  0602  118A  2956         	ljmp	l4422
  2818  0604  118A  295F         	ljmp	l4432
  2819  0606  118A  2965         	ljmp	l4442
  2820  0608  118A  296B         	ljmp	l4452
  2821  060A  118A  2971         	ljmp	l4462
  2822  060C  118A  297A         	ljmp	l4472
  2823                           
  2824                           	psect	swtext3
  2825  05F3                     __pswtext3:	
  2826  05F3                     S5028:	
  2827  05F3  118A  298C         	ljmp	l828
  2828  05F5  118A  2990         	ljmp	l4486
  2829  05F7  118A  2999         	ljmp	l4496
  2830  05F9  118A  299F         	ljmp	l4506
  2831  05FB  118A  29A5         	ljmp	l4516
  2832  05FD  118A  29AD         	ljmp	l4526
  2833                           
  2834                           	psect	text755
  2835  059D                     __ptext755:	
  2836 ;; =============== function _main ends ============
  2837                           
  2838                           
  2839 ;; *************** function _clearPinPortAndTimer *****************
  2840 ;; Defined at:
  2841 ;;		line 92 in file "D:\develop\190625\AK7030-OTP\main.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;		None               void
  2848 ;; Registers used:
  2849 ;;		status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 160/0
  2852 ;;		On exit  : 160/20
  2853 ;;		Unchanged: FFE9F/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0
  2858 ;;      Totals:         0       0       0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    4
  2862 ;; This function calls:
  2863 ;;		_clearAllTimer
  2864 ;; This function is called by:
  2865 ;;		_main
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868  059D                     _clearPinPortAndTimer:	
  2869                           
  2870                           ;main.c: 93: PB0 = 0;
  2871                           
  2872                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  2873  059D  1006               	bcf	6,0
  2874                           
  2875                           ;main.c: 94: PA0 = 0;
  2876  059E  1005               	bcf	5,0
  2877                           
  2878                           ;main.c: 95: PA1 = 0;
  2879  059F  1085               	bcf	5,1
  2880                           
  2881                           ;main.c: 96: PA2 = 0;
  2882  05A0  1105               	bcf	5,2
  2883                           
  2884                           ;main.c: 97: PA3 = 0;
  2885  05A1  1185               	bcf	5,3
  2886                           
  2887                           ;main.c: 100: PBOD7 = 0;
  2888  05A2  1683               	bsf	3,5	;RP0=1, select bank3
  2889  05A3  1703               	bsf	3,6	;RP1=1, select bank3
  2890  05A4  1388               	bcf	8,7
  2891                           
  2892                           ;main.c: 101: PB7 = 0;
  2893  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2894  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2895  05A7  1386               	bcf	6,7
  2896                           
  2897                           ;main.c: 102: clearAllTimer();
  2898  05A8  2DA9               	ljmp	l4186
  2899  05A9                     __end_of_clearPinPortAndTimer:	
  2900  05A9                     __ptext760:	
  2901 ;; =============== function _process_AD_Converter_Value ends ============
  2902                           
  2903                           
  2904 ;; *************** function _clearAllTimer *****************
  2905 ;; Defined at:
  2906 ;;		line 83 in file "D:\develop\190625\AK7030-OTP\main.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;		None               void
  2913 ;; Registers used:
  2914 ;;		status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 140/20
  2917 ;;		On exit  : 160/20
  2918 ;;		Unchanged: FFE9F/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    3
  2927 ;; This function calls:
  2928 ;;		_clearTwelveHoursTimer
  2929 ;;		_clearThreeHoursTimer
  2930 ;;		_clearTwentySecondsTimer
  2931 ;; This function is called by:
  2932 ;;		_clearPinPortAndTimer
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936  05A9                     _clearAllTimer:	
  2937  05A9                     l4186:	
  2938                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  2939                           
  2940                           
  2941                           ;main.c: 84: clearTwelveHoursTimer();
  2942  05A9  25AE  118A         	fcall	_clearTwelveHoursTimer
  2943                           
  2944                           ;main.c: 85: clearThreeHoursTimer();
  2945  05AB  25B2  118A         	fcall	_clearThreeHoursTimer
  2946                           
  2947                           ;main.c: 86: clearTwentySecondsTimer();
  2948  05AD  2DB6               	ljmp	l3920
  2949  05AE                     __end_of_clearAllTimer:	
  2950  05AE                     __ptext784:	
  2951 ;; =============== function _clearThreeHoursTimer ends ============
  2952                           
  2953                           
  2954 ;; *************** function _clearTwelveHoursTimer *****************
  2955 ;; Defined at:
  2956 ;;		line 365 in file "D:\develop\190625\AK7030-OTP\common.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		status,2
  2965 ;; Tracked objects:
  2966 ;;		On entry : 140/20
  2967 ;;		On exit  : 160/20
  2968 ;;		Unchanged: FFE9F/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    2
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_clearAllTimer
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983  05AE                     _clearTwelveHoursTimer:	
  2984                           
  2985                           ;common.c: 366: uiBigTimer = 0;
  2986                           
  2987                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2988  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2989  05AF  01A0               	clrf	_uiBigTimer^(0+128)
  2990  05B0  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  2991  05B1  0008               	return
  2992  05B2                     __end_of_clearTwelveHoursTimer:	
  2993  05B2                     __ptext783:	
  2994 ;; =============== function _clearTwentySecondsTimer ends ============
  2995                           
  2996                           
  2997 ;; *************** function _clearThreeHoursTimer *****************
  2998 ;; Defined at:
  2999 ;;		line 371 in file "D:\develop\190625\AK7030-OTP\common.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		status,2
  3008 ;; Tracked objects:
  3009 ;;		On entry : 140/0
  3010 ;;		On exit  : 160/20
  3011 ;;		Unchanged: FFE9F/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0
  3016 ;;      Totals:         0       0       0       0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    2
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_clearAllTimer
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027  05B2                     _clearThreeHoursTimer:	
  3028                           
  3029                           ;common.c: 372: uiSmallTimer = 0;
  3030                           
  3031                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3032  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  3033  05B3  01A2               	clrf	_uiSmallTimer^(0+128)
  3034  05B4  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  3035  05B5  0008               	return
  3036  05B6                     __end_of_clearThreeHoursTimer:	
  3037  05B6                     __ptext782:	
  3038 ;; =============== function _initPin ends ============
  3039                           
  3040                           
  3041 ;; *************** function _clearTwentySecondsTimer *****************
  3042 ;; Defined at:
  3043 ;;		line 376 in file "D:\develop\190625\AK7030-OTP\common.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;		None               void
  3050 ;; Registers used:
  3051 ;;		status,2
  3052 ;; Tracked objects:
  3053 ;;		On entry : 160/20
  3054 ;;		On exit  : 160/20
  3055 ;;		Unchanged: FFE9F/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0
  3060 ;;      Totals:         0       0       0       0       0
  3061 ;;Total ram usage:        0 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    2
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_clearAllTimer
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070  05B6                     _clearTwentySecondsTimer:	
  3071  05B6                     l3920:	
  3072                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3073                           
  3074                           
  3075                           ;common.c: 377: uiTwentySecondsTimer = 0;
  3076  05B6  01A4               	clrf	_uiTwentySecondsTimer^(0+128)
  3077  05B7  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3078  05B8  0008               	return
  3079  05B9                     __end_of_clearTwentySecondsTimer:	
  3080                           
  3081                           	psect	text756
  3082  0475                     __ptext756:	
  3083 ;; =============== function _clearPinPortAndTimer ends ============
  3084                           
  3085                           
  3086 ;; *************** function _getAdOriginaCh4Value *****************
  3087 ;; Defined at:
  3088 ;;		line 229 in file "D:\develop\190625\AK7030-OTP\common.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2   38[BANK0 ] unsigned int 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 60/0
  3099 ;;		On exit  : 160/0
  3100 ;;		Unchanged: FFE00/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       2       0       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         0       2       0       0       0
  3106 ;;Total ram usage:        2 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    3
  3109 ;; This function calls:
  3110 ;;		_Filter
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115  0475                     _getAdOriginaCh4Value:	
  3116                           
  3117                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  3118                           
  3119                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3120  0475  30C4               	movlw	_uiSampleChannelFourth& (0+255)
  3121  0476  00A0               	movwf	?_Filter
  3122  0477  01A1               	clrf	?_Filter+1
  3123  0478  2493               	fcall	_Filter
  3124  0479  0821               	movf	?_Filter+1,w
  3125  047A  00C7               	movwf	?_getAdOriginaCh4Value+1
  3126  047B  0820               	movf	?_Filter,w
  3127  047C  00C6               	movwf	?_getAdOriginaCh4Value
  3128  047D  0008               	return
  3129  047E                     __end_of_getAdOriginaCh4Value:	
  3130  047E                     __ptext757:	
  3131 ;; =============== function _getAdOriginaCh4Value ends ============
  3132                           
  3133                           
  3134 ;; *************** function _getAdOriginalCh1Value *****************
  3135 ;; Defined at:
  3136 ;;		line 217 in file "D:\develop\190625\AK7030-OTP\common.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  2   38[BANK0 ] unsigned int 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 40/0
  3147 ;;		On exit  : 160/0
  3148 ;;		Unchanged: FFE00/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       2       0       0       0
  3151 ;;      Locals:         0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0
  3153 ;;      Totals:         0       2       0       0       0
  3154 ;;Total ram usage:        2 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    3
  3157 ;; This function calls:
  3158 ;;		_Filter
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163  047E                     _getAdOriginalCh1Value:	
  3164                           
  3165                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  3166                           
  3167                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3168  047E  30AC               	movlw	_uiSampleChannelFirst& (0+255)
  3169  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0480  00A0               	movwf	?_Filter
  3171  0481  01A1               	clrf	?_Filter+1
  3172  0482  2493               	fcall	_Filter
  3173  0483  0821               	movf	?_Filter+1,w
  3174  0484  00C7               	movwf	?_getAdOriginalCh1Value+1
  3175  0485  0820               	movf	?_Filter,w
  3176  0486  00C6               	movwf	?_getAdOriginalCh1Value
  3177  0487  0008               	return
  3178  0488                     __end_of_getAdOriginalCh1Value:	
  3179  0488                     __ptext758:	
  3180 ;; =============== function _getAdOriginalCh1Value ends ============
  3181                           
  3182                           
  3183 ;; *************** function _getAdOriginalCh14Value *****************
  3184 ;; Defined at:
  3185 ;;		line 240 in file "D:\develop\190625\AK7030-OTP\common.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  2   38[BANK0 ] unsigned int 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 40/0
  3196 ;;		On exit  : 160/0
  3197 ;;		Unchanged: FFE00/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       2       0       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0
  3202 ;;      Totals:         0       2       0       0       0
  3203 ;;Total ram usage:        2 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    3
  3206 ;; This function calls:
  3207 ;;		_Filter
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212  0488                     _getAdOriginalCh14Value:	
  3213                           
  3214                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  3215                           
  3216                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3217  0488  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  3218  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3219  048A  00A0               	movwf	?_Filter
  3220  048B  3001               	movlw	1
  3221  048C  00A1               	movwf	?_Filter+1
  3222  048D  2493               	fcall	_Filter
  3223  048E  0821               	movf	?_Filter+1,w
  3224  048F  00C7               	movwf	?_getAdOriginalCh14Value+1
  3225  0490  0820               	movf	?_Filter,w
  3226  0491  00C6               	movwf	?_getAdOriginalCh14Value
  3227  0492  0008               	return
  3228  0493                     __end_of_getAdOriginalCh14Value:	
  3229  0493                     __ptext764:	
  3230 ;; =============== function _getAD_ConvertFlag ends ============
  3231                           
  3232                           
  3233 ;; *************** function _Filter *****************
  3234 ;; Defined at:
  3235 ;;		line 51 in file "D:\develop\190625\AK7030-OTP\common.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3238 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  cir             2   34[BANK0 ] int 
  3241 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3242 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3243 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3244 ;;  i               1   37[BANK0 ] unsigned char 
  3245 ;;  j               1   36[BANK0 ] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  2    0[BANK0 ] unsigned int 
  3248 ;; Registers used:
  3249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3250 ;; Tracked objects:
  3251 ;;		On entry : 60/0
  3252 ;;		On exit  : 160/0
  3253 ;;		Unchanged: FFE00/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         0       2       0       0       0
  3256 ;;      Locals:         0      32       0       0       0
  3257 ;;      Temps:          0       4       0       0       0
  3258 ;;      Totals:         0      38       0       0       0
  3259 ;;Total ram usage:       38 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    2
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_getAdOriginalCh1Value
  3266 ;;		_getAdOriginaCh4Value
  3267 ;;		_getAdOriginalCh14Value
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270  0493                     _Filter:	
  3271                           
  3272                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3273  0493  01C4               	clrf	Filter@j
  3274                           
  3275                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  3276  0494  01BE               	clrf	Filter@filter_temp
  3277  0495  01BF               	clrf	Filter@filter_temp+1
  3278  0496  01C0               	clrf	Filter@filter_sum
  3279  0497  01C1               	clrf	Filter@filter_sum+1
  3280                           
  3281                           ;common.c: 57: unsigned int filter_buf[12];
  3282                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  3283  0498  01C2               	clrf	Filter@cir
  3284  0499  01C3               	clrf	Filter@cir+1
  3285  049A                     l4026:	
  3286                           
  3287                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  3288  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3289  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3290  049C  0820               	movf	Filter@tmpValue,w
  3291  049D  0084               	movwf	4
  3292  049E  1783               	bsf	3,7
  3293  049F  1C21               	btfss	Filter@tmpValue+1,0
  3294  04A0  1383               	bcf	3,7
  3295  04A1  0800               	movf	0,w
  3296  04A2  2534  118A         	fcall	PL5	;call to abstracted procedure
  3297  04A4  0D42               	rlf	Filter@cir,w
  3298  04A5  3E26               	addlw	Filter@filter_buf& (0+255)
  3299  04A6  0084               	movwf	4
  3300  04A7  0822               	movf	??_Filter,w
  3301  04A8  1383               	bcf	3,7	;select IRP bank0
  3302  04A9  0080               	movwf	0
  3303  04AA  0A84               	incf	4,f
  3304  04AB  0823               	movf	??_Filter+1,w
  3305  04AC  0080               	movwf	0
  3306  04AD  3002               	movlw	2
  3307  04AE  07A0               	addwf	Filter@tmpValue,f
  3308  04AF  1803               	skipnc
  3309  04B0  0AA1               	incf	Filter@tmpValue+1,f
  3310  04B1  0AC2               	incf	Filter@cir,f
  3311  04B2  1903               	skipnz
  3312  04B3  0AC3               	incf	Filter@cir+1,f
  3313  04B4  0843               	movf	Filter@cir+1,w
  3314  04B5  3A80               	xorlw	128
  3315  04B6  00FF               	movwf	127
  3316  04B7  3080               	movlw	128
  3317  04B8  027F               	subwf	127,w
  3318  04B9  1D03               	skipz
  3319  04BA  2CBD               	goto	u1105
  3320  04BB  300C               	movlw	12
  3321  04BC  0242               	subwf	Filter@cir,w
  3322  04BD                     u1105:	
  3323  04BD  1C03               	skipc
  3324  04BE  2C9A               	goto	l4026
  3325                           
  3326                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3327  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3328  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3329  04C1  01C4               	clrf	Filter@j
  3330  04C2                     l4040:	
  3331                           
  3332                           ;common.c: 64: {
  3333                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3334  04C2  01C5               	clrf	Filter@i
  3335  04C3                     l4048:	
  3336  04C3  01A3               	clrf	??_Filter+1
  3337  04C4  0844               	movf	Filter@j,w
  3338  04C5  3C0B               	sublw	11
  3339  04C6  00A2               	movwf	??_Filter
  3340  04C7  1C03               	skipc
  3341  04C8  03A3               	decf	??_Filter+1,f
  3342  04C9  0823               	movf	??_Filter+1,w
  3343  04CA  3A80               	xorlw	128
  3344  04CB  3C80               	sublw	128
  3345  04CC  1D03               	skipz
  3346  04CD  2CD0               	goto	u1125
  3347  04CE  0822               	movf	??_Filter,w
  3348  04CF  0245               	subwf	Filter@i,w
  3349  04D0                     u1125:	
  3350  04D0  1803               	btfsc	3,0
  3351  04D1  2D05               	goto	l4050
  3352                           
  3353                           ;common.c: 66: {
  3354                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3355  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3356  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3357  04D4  1003               	clrc
  3358  04D5  252A  118A         	fcall	PL3	;call to abstracted procedure
  3359  04D7  253A  118A         	fcall	PL6	;call to abstracted procedure
  3360  04D9  0800               	movf	0,w
  3361  04DA  00A4               	movwf	??_Filter+2
  3362  04DB  0A84               	incf	4,f
  3363  04DC  0800               	movf	0,w
  3364  04DD  00A5               	movwf	??_Filter+3
  3365  04DE  0823               	movf	??_Filter+1,w
  3366  04DF  0225               	subwf	??_Filter+3,w
  3367  04E0  1D03               	skipz
  3368  04E1  2CE4               	goto	u1115
  3369  04E2  0822               	movf	??_Filter,w
  3370  04E3  0224               	subwf	??_Filter+2,w
  3371  04E4                     u1115:	
  3372  04E4  1803               	skipnc
  3373  04E5  2D03               	goto	l4046
  3374                           
  3375                           ;common.c: 68: {
  3376                           ;common.c: 70: filter_temp = filter_buf[i];
  3377  04E6  1003               	clrc
  3378  04E7  0D45               	rlf	Filter@i,w
  3379  04E8  3E26               	addlw	Filter@filter_buf& (0+255)
  3380  04E9  0084               	movwf	4
  3381  04EA  0800               	movf	0,w
  3382  04EB  00BE               	movwf	Filter@filter_temp
  3383  04EC  0A84               	incf	4,f
  3384  04ED  0800               	movf	0,w
  3385  04EE  00BF               	movwf	Filter@filter_temp+1
  3386                           
  3387                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3388  04EF  253A  118A         	fcall	PL6	;call to abstracted procedure
  3389  04F1  0800               	movf	0,w
  3390  04F2  2534  118A         	fcall	PL5	;call to abstracted procedure
  3391  04F4  0D45               	rlf	Filter@i,w
  3392  04F5  3E26               	addlw	Filter@filter_buf& (0+255)
  3393  04F6  0084               	movwf	4
  3394  04F7  0822               	movf	??_Filter,w
  3395  04F8  0080               	movwf	0
  3396  04F9  0A84               	incf	4,f
  3397  04FA  0823               	movf	??_Filter+1,w
  3398  04FB  0080               	movwf	0
  3399                           
  3400                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3401  04FC  253A  118A         	fcall	PL6	;call to abstracted procedure
  3402  04FE  083E               	movf	Filter@filter_temp,w
  3403  04FF  0080               	movwf	0
  3404  0500  0A84               	incf	4,f
  3405  0501  083F               	movf	Filter@filter_temp+1,w
  3406  0502  0080               	movwf	0
  3407  0503                     l4046:	
  3408  0503  0AC5               	incf	Filter@i,f
  3409  0504  2CC3               	goto	l4048
  3410  0505                     l4050:	
  3411  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0506  300B               	movlw	11
  3413  0507  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0508  0AC4               	incf	Filter@j,f
  3415  0509  0244               	subwf	Filter@j,w
  3416  050A  1C03               	skipc
  3417  050B  2CC2               	goto	l4040
  3418                           
  3419                           ;common.c: 75: }
  3420                           ;common.c: 76: }
  3421                           ;common.c: 77: }
  3422                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3423  050C  3002               	movlw	2
  3424  050D  00C5               	movwf	Filter@i
  3425                           
  3426                           ;common.c: 80: {
  3427                           ;common.c: 81: filter_sum += filter_buf[i];
  3428  050E  1003               	clrc
  3429  050F                     L9:	
  3430  050F  252A  118A         	fcall	PL3	;call to abstracted procedure
  3431  0511  0822               	movf	??_Filter,w
  3432  0512  07C0               	addwf	Filter@filter_sum,f
  3433  0513  1803               	skipnc
  3434  0514  0AC1               	incf	Filter@filter_sum+1,f
  3435  0515  0823               	movf	??_Filter+1,w
  3436  0516  07C1               	addwf	Filter@filter_sum+1,f
  3437  0517  300A               	movlw	10
  3438  0518  0AC5               	incf	Filter@i,f
  3439  0519  0245               	subwf	Filter@i,w
  3440  051A  1C03               	skipc
  3441  051B  2D0F               	goto	L9
  3442                           
  3443                           ;common.c: 82: }
  3444                           ;common.c: 84: return (filter_sum >> 3);
  3445  051C  0841               	movf	Filter@filter_sum+1,w
  3446  051D  00A1               	movwf	?_Filter+1
  3447  051E  0840               	movf	Filter@filter_sum,w
  3448  051F  00A0               	movwf	?_Filter
  3449  0520  1003               	clrc
  3450  0521  0CA1               	rrf	?_Filter+1,f
  3451  0522  0CA0               	rrf	?_Filter,f
  3452  0523  1003               	clrc
  3453  0524  0CA1               	rrf	?_Filter+1,f
  3454  0525  0CA0               	rrf	?_Filter,f
  3455  0526  1003               	clrc
  3456  0527  0CA1               	rrf	?_Filter+1,f
  3457  0528  0CA0               	rrf	?_Filter,f
  3458  0529  0008               	return
  3459  052A                     __end_of_Filter:	
  3460  052A                     PL3:	
  3461  052A  0D45               	rlf	Filter@i,w
  3462  052B  3E26               	addlw	Filter@filter_buf& (0+255)
  3463  052C  0084               	movwf	4
  3464  052D  1383               	bcf	3,7	;select IRP bank0
  3465  052E  0800               	movf	0,w
  3466  052F  00A2               	movwf	??_Filter
  3467  0530  0A84               	incf	4,f
  3468  0531  0800               	movf	0,w
  3469  0532  00A3               	movwf	??_Filter+1
  3470  0533  0008               	return
  3471  0534                     PL5:	
  3472  0534  00A2               	movwf	??_Filter
  3473  0535  0A84               	incf	4,f
  3474  0536  0800               	movf	0,w
  3475  0537  00A3               	movwf	??_Filter+1
  3476  0538  1003               	clrc
  3477  0539  0008               	return
  3478  053A                     PL6:	
  3479  053A  1003               	clrc
  3480  053B  0D45               	rlf	Filter@i,w
  3481  053C  3E02               	addlw	2
  3482  053D  3E26               	addlw	Filter@filter_buf& (0+255)
  3483  053E  0084               	movwf	4
  3484  053F  0008               	return
  3485                           
  3486                           	psect	text759
  3487  0540                     __ptext759:	
  3488 ;; =============== function _getAdOriginalCh14Value ends ============
  3489                           
  3490                           
  3491 ;; *************** function _process_AD_Converter_Value *****************
  3492 ;; Defined at:
  3493 ;;		line 251 in file "D:\develop\190625\AK7030-OTP\common.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 40/0
  3505 ;;		Unchanged: FFF9F/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    3
  3514 ;; This function calls:
  3515 ;;		_getAD_ConvertFlag
  3516 ;;		_setAD_ConvertFlag
  3517 ;;		_AD_Sample
  3518 ;;		_adc_test_init
  3519 ;;		_adc_start
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524  0540                     _process_AD_Converter_Value:	
  3525                           
  3526                           ;common.c: 252: if(getAD_ConvertFlag())
  3527                           
  3528                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3529  0540  255E  118A         	fcall	_getAD_ConvertFlag
  3530  0542  3A00               	xorlw	0
  3531  0543  1903               	skipnz
  3532  0544  0008               	return
  3533                           
  3534                           ;common.c: 253: {
  3535                           ;common.c: 254: setAD_ConvertFlag(0);
  3536  0545  3000               	movlw	0
  3537  0546  2562  118A         	fcall	_setAD_ConvertFlag
  3538                           
  3539                           ;common.c: 255: AD_Sample();
  3540  0548  2567  118A         	fcall	_AD_Sample
  3541                           
  3542                           ;common.c: 256: if(5 == sampleChannelSelect)
  3543  054A  086E               	movf	_sampleChannelSelect,w
  3544  054B  3A05               	xorlw	5
  3545  054C  1D03               	skipz
  3546  054D  2D52               	goto	l4196
  3547                           
  3548                           ;common.c: 257: adc_test_init(5,3);
  3549  054E  3003               	movlw	3
  3550  054F  00A0               	movwf	?_adc_test_init
  3551  0550  3005               	movlw	5
  3552  0551  2D5B               	goto	L8
  3553  0552                     l4196:	
  3554                           
  3555                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3556  0552  0B6E               	decfsz	_sampleChannelSelect,w
  3557  0553  2D58               	goto	l4200
  3558                           
  3559                           ;common.c: 259: adc_test_init(1,3);
  3560  0554  3003               	movlw	3
  3561  0555  00A0               	movwf	?_adc_test_init
  3562  0556  3001               	movlw	1
  3563  0557  2D5B               	goto	L8
  3564  0558                     l4200:	
  3565                           
  3566                           ;common.c: 260: else
  3567                           ;common.c: 261: adc_test_init(14,3);
  3568  0558  3003               	movlw	3
  3569  0559  00A0               	movwf	?_adc_test_init
  3570  055A  300E               	movlw	14
  3571  055B                     L8:	
  3572  055B  2585  118A         	fcall	_adc_test_init
  3573                           
  3574                           ;common.c: 263: adc_start();
  3575  055D  2D9A               	ljmp	l3958
  3576  055E                     __end_of_process_AD_Converter_Value:	
  3577  055E                     __ptext763:	
  3578 ;; =============== function _setAD_ConvertFlag ends ============
  3579                           
  3580                           
  3581 ;; *************** function _getAD_ConvertFlag *****************
  3582 ;; Defined at:
  3583 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\common.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      unsigned char 
  3590 ;; Registers used:
  3591 ;;		wreg
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 60/20
  3595 ;;		Unchanged: FFF9F/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       0       0       0       0
  3598 ;;      Locals:         0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0
  3600 ;;      Totals:         0       0       0       0       0
  3601 ;;Total ram usage:        0 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    2
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_process_AD_Converter_Value
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610  055E                     _getAD_ConvertFlag:	
  3611                           
  3612                           ;common.c: 201: return adc_convert_flag;
  3613                           
  3614                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3615  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3616  055F  1303               	bcf	3,6	;RP1=0, select bank1
  3617  0560  0827               	movf	_adc_convert_flag^(0+128),w
  3618  0561  0008               	return
  3619  0562                     __end_of_getAD_ConvertFlag:	
  3620  0562                     __ptext762:	
  3621 ;; =============== function _AD_Sample ends ============
  3622                           
  3623                           
  3624 ;; *************** function _setAD_ConvertFlag *****************
  3625 ;; Defined at:
  3626 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  flag            1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  flag            1    0[BANK0 ] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;		None               void
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 60/20
  3637 ;;		On exit  : 60/20
  3638 ;;		Unchanged: FFF9F/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3640 ;;      Params:         0       0       0       0       0
  3641 ;;      Locals:         0       1       0       0       0
  3642 ;;      Temps:          0       0       0       0       0
  3643 ;;      Totals:         0       1       0       0       0
  3644 ;;Total ram usage:        1 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    2
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_process_AD_Converter_Value
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653  0562                     _setAD_ConvertFlag:	
  3654                           
  3655                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3656                           ;setAD_ConvertFlag@flag stored from wreg
  3657  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0563  00A0               	movwf	setAD_ConvertFlag@flag
  3659                           
  3660                           ;common.c: 207: adc_convert_flag = flag;
  3661  0564  1683               	bsf	3,5	;RP0=1, select bank1
  3662  0565  00A7               	movwf	_adc_convert_flag^(0+128)
  3663  0566  0008               	return
  3664  0567                     __end_of_setAD_ConvertFlag:	
  3665  0567                     __ptext761:	
  3666 ;; =============== function _clearAllTimer ends ============
  3667                           
  3668                           
  3669 ;; *************** function _AD_Sample *****************
  3670 ;; Defined at:
  3671 ;;		line 277 in file "D:\develop\190625\AK7030-OTP\common.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 60/20
  3682 ;;		On exit  : 60/0
  3683 ;;		Unchanged: FFF9F/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    2
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_process_AD_Converter_Value
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698  0567                     _AD_Sample:	
  3699                           
  3700                           ;common.c: 278: if(sampleTimes < 12)
  3701                           
  3702                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  3703  0567  300C               	movlw	12
  3704  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0569  0248               	subwf	_sampleTimes,w
  3706  056A  1803               	skipnc
  3707  056B  0008               	return
  3708  056C  300C               	movlw	12
  3709                           
  3710                           ;common.c: 279: {
  3711                           ;common.c: 300: sampleTimes++;
  3712  056D  0AC8               	incf	_sampleTimes,f
  3713                           
  3714                           ;common.c: 302: if(sampleTimes >= 12)
  3715  056E  0248               	subwf	_sampleTimes,w
  3716  056F  1C03               	skipc
  3717  0570  0008               	return
  3718                           
  3719                           ;common.c: 303: {
  3720                           ;common.c: 304: sampleTimes = 0;
  3721  0571  01C8               	clrf	_sampleTimes
  3722                           
  3723                           ;common.c: 306: if(sampleChannelSelect == 14)
  3724  0572  086E               	movf	_sampleChannelSelect,w
  3725  0573  3A0E               	xorlw	14
  3726  0574  1D03               	skipz
  3727  0575  2D79               	goto	l4136
  3728                           
  3729                           ;common.c: 307: {
  3730                           ;common.c: 310: sampleChannelSelect = 1;
  3731  0576  01EE               	clrf	_sampleChannelSelect
  3732  0577  0AEE               	incf	_sampleChannelSelect,f
  3733                           
  3734                           ;common.c: 311: }
  3735  0578  0008               	return
  3736  0579                     l4136:	
  3737                           
  3738                           ;common.c: 312: else if(sampleChannelSelect == 5)
  3739  0579  086E               	movf	_sampleChannelSelect,w
  3740  057A  3A05               	xorlw	5
  3741  057B  1D03               	skipz
  3742  057C  2D80               	goto	l4140
  3743  057D                     l4138:	
  3744                           
  3745                           ;common.c: 313: {
  3746                           ;common.c: 315: sampleChannelSelect = 14;
  3747  057D  300E               	movlw	14
  3748  057E  00EE               	movwf	_sampleChannelSelect
  3749                           
  3750                           ;common.c: 316: }
  3751  057F  0008               	return
  3752  0580                     l4140:	
  3753                           
  3754                           ;common.c: 317: else if(sampleChannelSelect == 1)
  3755  0580  0B6E               	decfsz	_sampleChannelSelect,w
  3756  0581  2D7D               	goto	l4138
  3757                           
  3758                           ;common.c: 318: {
  3759                           ;common.c: 320: sampleChannelSelect = 5;
  3760  0582  3005               	movlw	5
  3761  0583  00EE               	movwf	_sampleChannelSelect
  3762                           
  3763                           ;common.c: 321: }
  3764  0584  0008               	return
  3765  0585                     __end_of_AD_Sample:	
  3766  0585                     __ptext777:	
  3767 ;; =============== function _dac_init ends ============
  3768                           
  3769                           
  3770 ;; *************** function _adc_test_init *****************
  3771 ;; Defined at:
  3772 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  channel         1    wreg     unsigned char 
  3775 ;;  ref             1    0[BANK0 ] unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  channel         1    2[BANK0 ] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;		None               void
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 60/0
  3784 ;;		On exit  : 60/20
  3785 ;;		Unchanged: FFF9F/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3787 ;;      Params:         0       1       0       0       0
  3788 ;;      Locals:         0       1       0       0       0
  3789 ;;      Temps:          0       1       0       0       0
  3790 ;;      Totals:         0       3       0       0       0
  3791 ;;Total ram usage:        3 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    2
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;;		_process_AD_Converter_Value
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801  0585                     _adc_test_init:	
  3802                           
  3803                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3804                           ;adc_test_init@channel stored from wreg
  3805  0585  00A2               	movwf	adc_test_init@channel
  3806                           
  3807                           ;periph.c: 86: ADCON0 = 0x00;
  3808  0586  019F               	clrf	31	;volatile
  3809                           
  3810                           ;periph.c: 87: ADCON0|=channel<<2;
  3811  0587  00A1               	movwf	??_adc_test_init
  3812  0588  1003               	clrc
  3813  0589  0DA1               	rlf	??_adc_test_init,f
  3814  058A  1003               	clrc
  3815  058B  0D21               	rlf	??_adc_test_init,w
  3816  058C  049F               	iorwf	31,f	;volatile
  3817                           
  3818                           ;periph.c: 88: ADCON1|=ref<<6;
  3819  058D  0820               	movf	adc_test_init@ref,w
  3820  058E  00A1               	movwf	??_adc_test_init
  3821  058F  0CA1               	rrf	??_adc_test_init,f
  3822  0590  0CA1               	rrf	??_adc_test_init,f
  3823  0591  0C21               	rrf	??_adc_test_init,w
  3824  0592  39C0               	andlw	192
  3825  0593  1683               	bsf	3,5	;RP0=1, select bank1
  3826  0594  049F               	iorwf	31,f	;volatile
  3827                           
  3828                           ;periph.c: 89: ADON=1;
  3829  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0596  141F               	bsf	31,0
  3831                           
  3832                           ;periph.c: 90: ADIE=1;
  3833  0597  1683               	bsf	3,5	;RP0=1, select bank1
  3834  0598  150D               	bsf	13,2
  3835  0599  0008               	return
  3836  059A                     __end_of_adc_test_init:	
  3837  059A                     __ptext773:	
  3838 ;; =============== function _isPermitSampleTime ends ============
  3839                           
  3840                           
  3841 ;; *************** function _adc_start *****************
  3842 ;; Defined at:
  3843 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;		None               void
  3850 ;; Registers used:
  3851 ;;		None
  3852 ;; Tracked objects:
  3853 ;;		On entry : 60/20
  3854 ;;		On exit  : 60/0
  3855 ;;		Unchanged: FFF9F/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3857 ;;      Params:         0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    2
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;;		_process_AD_Converter_Value
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871  059A                     _adc_start:	
  3872  059A                     l3958:	
  3873                           ; Regs used in _adc_start: []
  3874                           
  3875                           
  3876                           ;periph.c: 101: GO=1;
  3877  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3878  059B  149F               	bsf	31,1
  3879  059C  0008               	return
  3880  059D                     __end_of_adc_start:	
  3881                           
  3882                           	psect	text765
  3883  0656                     __ptext765:	
  3884 ;; =============== function _Filter ends ============
  3885                           
  3886                           
  3887 ;; *************** function _isFinishedThreeHoursTimer *****************
  3888 ;; Defined at:
  3889 ;;		line 416 in file "D:\develop\190625\AK7030-OTP\common.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0
  3898 ;; Tracked objects:
  3899 ;;		On entry : 60/0
  3900 ;;		On exit  : 60/20
  3901 ;;		Unchanged: FFF9F/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0
  3906 ;;      Totals:         0       0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    2
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916  0656                     _isFinishedThreeHoursTimer:	
  3917                           
  3918                           ;common.c: 417: if(uiSmallTimer == 0)
  3919                           
  3920                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3921  0656  1683               	bsf	3,5	;RP0=1, select bank1
  3922  0657  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  3923  0658  0422               	iorwf	_uiSmallTimer^(0+128),w
  3924  0659  1903               	btfsc	3,2
  3925                           
  3926                           ;common.c: 418: return 1;
  3927  065A  3401               	retlw	1
  3928                           
  3929                           ;common.c: 419: else
  3930                           ;common.c: 420: return 0;
  3931  065B  3400               	retlw	0
  3932  065C                     __end_of_isFinishedThreeHoursTimer:	
  3933                           
  3934                           	psect	text766
  3935  060E                     __ptext766:	
  3936 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3937                           
  3938                           
  3939 ;; *************** function _startThreeHoursTimer *****************
  3940 ;; Defined at:
  3941 ;;		line 382 in file "D:\develop\190625\AK7030-OTP\common.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;		None               void
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 60/0
  3952 ;;		On exit  : 60/20
  3953 ;;		Unchanged: FFF9F/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       2       0       0       0
  3956 ;;      Locals:         0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0
  3958 ;;      Totals:         0       2       0       0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    2
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968  060E                     _startThreeHoursTimer:	
  3969                           
  3970                           ;common.c: 383: if(0 == uiSmallTimer)
  3971                           
  3972                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3973  060E  1683               	bsf	3,5	;RP0=1, select bank1
  3974  060F  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  3975  0610  0422               	iorwf	_uiSmallTimer^(0+128),w
  3976  0611  1D03               	skipz
  3977  0612  0008               	return
  3978                           
  3979                           ;common.c: 384: uiSmallTimer = uiSetTime;
  3980  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0614  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3982  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3983  0616  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  3984  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0618  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3986  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3987  061A  00A2               	movwf	_uiSmallTimer^(0+128)
  3988  061B  0008               	return
  3989  061C                     __end_of_startThreeHoursTimer:	
  3990                           
  3991                           	psect	text767
  3992  065C                     __ptext767:	
  3993 ;; =============== function _startThreeHoursTimer ends ============
  3994                           
  3995                           
  3996 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3997 ;; Defined at:
  3998 ;;		line 399 in file "D:\develop\190625\AK7030-OTP\common.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;		None
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      unsigned char 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 60/0
  4009 ;;		On exit  : 60/20
  4010 ;;		Unchanged: FFF9F/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4012 ;;      Params:         0       0       0       0       0
  4013 ;;      Locals:         0       0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0
  4015 ;;      Totals:         0       0       0       0       0
  4016 ;;Total ram usage:        0 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:    2
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_main
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025  065C                     _isFinishedTwentySecondsTimer:	
  4026                           
  4027                           ;common.c: 400: if(0 == uiTwentySecondsTimer)
  4028                           
  4029                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4030  065C  1683               	bsf	3,5	;RP0=1, select bank1
  4031  065D  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4032  065E  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4033  065F  1903               	btfsc	3,2
  4034                           
  4035                           ;common.c: 401: return 1;
  4036  0660  3401               	retlw	1
  4037                           
  4038                           ;common.c: 402: else
  4039                           ;common.c: 403: return 0;
  4040  0661  3400               	retlw	0
  4041  0662                     __end_of_isFinishedTwentySecondsTimer:	
  4042                           
  4043                           	psect	text768
  4044  066E                     __ptext768:	
  4045 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4046                           
  4047                           
  4048 ;; *************** function _startTwentySecondsTimer *****************
  4049 ;; Defined at:
  4050 ;;		line 393 in file "D:\develop\190625\AK7030-OTP\common.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;		None               void
  4057 ;; Registers used:
  4058 ;;		wreg
  4059 ;; Tracked objects:
  4060 ;;		On entry : 60/0
  4061 ;;		On exit  : 60/20
  4062 ;;		Unchanged: FFF9F/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4064 ;;      Params:         0       0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0
  4067 ;;      Totals:         0       0       0       0       0
  4068 ;;Total ram usage:        0 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    2
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077  066E                     _startTwentySecondsTimer:	
  4078                           
  4079                           ;common.c: 394: uiTwentySecondsTimer = 20;
  4080                           
  4081                           ; Regs used in _startTwentySecondsTimer: [wreg]
  4082  066E  3014               	movlw	20
  4083  066F  1683               	bsf	3,5	;RP0=1, select bank1
  4084  0670  00A4               	movwf	_uiTwentySecondsTimer^(0+128)
  4085  0671  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4086  0672  0008               	return
  4087  0673                     __end_of_startTwentySecondsTimer:	
  4088                           
  4089                           	psect	text769
  4090  0662                     __ptext769:	
  4091 ;; =============== function _startTwentySecondsTimer ends ============
  4092                           
  4093                           
  4094 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4095 ;; Defined at:
  4096 ;;		line 408 in file "D:\develop\190625\AK7030-OTP\common.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      unsigned char 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0
  4105 ;; Tracked objects:
  4106 ;;		On entry : 60/0
  4107 ;;		On exit  : 60/20
  4108 ;;		Unchanged: FFF9F/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4110 ;;      Params:         0       0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0
  4113 ;;      Totals:         0       0       0       0       0
  4114 ;;Total ram usage:        0 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    2
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123  0662                     _isFinishedTwelveHoursTimer:	
  4124                           
  4125                           ;common.c: 409: if(uiBigTimer == 0)
  4126                           
  4127                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4128  0662  1683               	bsf	3,5	;RP0=1, select bank1
  4129  0663  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4130  0664  0420               	iorwf	_uiBigTimer^(0+128),w
  4131  0665  1903               	btfsc	3,2
  4132                           
  4133                           ;common.c: 410: return 1;
  4134  0666  3401               	retlw	1
  4135                           
  4136                           ;common.c: 411: else
  4137                           ;common.c: 412: return 0;
  4138  0667  3400               	retlw	0
  4139  0668                     __end_of_isFinishedTwelveHoursTimer:	
  4140                           
  4141                           	psect	text770
  4142  061C                     __ptext770:	
  4143 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4144                           
  4145                           
  4146 ;; *************** function _startTwelveHourTimer *****************
  4147 ;; Defined at:
  4148 ;;		line 354 in file "D:\develop\190625\AK7030-OTP\common.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;		None               void
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0
  4157 ;; Tracked objects:
  4158 ;;		On entry : 60/0
  4159 ;;		On exit  : 60/20
  4160 ;;		Unchanged: FFF9F/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4162 ;;      Params:         0       2       0       0       0
  4163 ;;      Locals:         0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0
  4165 ;;      Totals:         0       2       0       0       0
  4166 ;;Total ram usage:        2 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    2
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175  061C                     _startTwelveHourTimer:	
  4176                           
  4177                           ;common.c: 355: if(0 == uiBigTimer)
  4178                           
  4179                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4180  061C  1683               	bsf	3,5	;RP0=1, select bank1
  4181  061D  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4182  061E  0420               	iorwf	_uiBigTimer^(0+128),w
  4183  061F  1D03               	skipz
  4184  0620  0008               	return
  4185                           
  4186                           ;common.c: 356: uiBigTimer = uiSetTime;
  4187  0621  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0622  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4189  0623  1683               	bsf	3,5	;RP0=1, select bank1
  4190  0624  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4191  0625  1283               	bcf	3,5	;RP0=0, select bank0
  4192  0626  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4193  0627  1683               	bsf	3,5	;RP0=1, select bank1
  4194  0628  00A0               	movwf	_uiBigTimer^(0+128)
  4195  0629  0008               	return
  4196  062A                     __end_of_startTwelveHourTimer:	
  4197                           
  4198                           	psect	text771
  4199  067B                     __ptext771:	
  4200 ;; =============== function _startTwelveHourTimer ends ============
  4201                           
  4202                           
  4203 ;; *************** function _clrSampeTime *****************
  4204 ;; Defined at:
  4205 ;;		line 434 in file "D:\develop\190625\AK7030-OTP\common.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;		None               void
  4212 ;; Registers used:
  4213 ;;		status,2
  4214 ;; Tracked objects:
  4215 ;;		On entry : 60/20
  4216 ;;		On exit  : 60/20
  4217 ;;		Unchanged: FFF9F/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4219 ;;      Params:         0       0       0       0       0
  4220 ;;      Locals:         0       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0
  4222 ;;      Totals:         0       0       0       0       0
  4223 ;;Total ram usage:        0 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    2
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_main
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232  067B                     _clrSampeTime:	
  4233                           
  4234                           ;common.c: 435: timer.timer10msStopWatch = 0;
  4235                           
  4236                           ; Regs used in _clrSampeTime: [status,2]
  4237  067B  01A8               	clrf	_timer^(0+128)
  4238  067C  0008               	return
  4239  067D                     __end_of_clrSampeTime:	
  4240                           
  4241                           	psect	text772
  4242  0668                     __ptext772:	
  4243 ;; =============== function _clrSampeTime ends ============
  4244                           
  4245                           
  4246 ;; *************** function _isPermitSampleTime *****************
  4247 ;; Defined at:
  4248 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      unsigned char 
  4255 ;; Registers used:
  4256 ;;		wreg
  4257 ;; Tracked objects:
  4258 ;;		On entry : 40/0
  4259 ;;		On exit  : 60/20
  4260 ;;		Unchanged: FFF9F/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0
  4265 ;;      Totals:         0       0       0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    2
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275  0668                     _isPermitSampleTime:	
  4276                           
  4277                           ;common.c: 425: if(timer.timer10msStopWatch >= 10)
  4278                           
  4279                           ; Regs used in _isPermitSampleTime: [wreg]
  4280  0668  300A               	movlw	10
  4281  0669  1683               	bsf	3,5	;RP0=1, select bank1
  4282  066A  0228               	subwf	_timer^(0+128),w
  4283  066B  1803               	btfsc	3,0
  4284                           
  4285                           ;common.c: 426: {
  4286                           ;common.c: 427: return 1;
  4287  066C  3401               	retlw	1
  4288                           
  4289                           ;common.c: 429: else
  4290                           ;common.c: 430: return 0;
  4291  066D  3400               	retlw	0
  4292  066E                     __end_of_isPermitSampleTime:	
  4293                           
  4294                           	psect	text774
  4295  064F                     __ptext774:	
  4296 ;; =============== function _adc_start ends ============
  4297                           
  4298                           
  4299 ;; *************** function _op2_init *****************
  4300 ;; Defined at:
  4301 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;		None               void
  4308 ;; Registers used:
  4309 ;;		wreg
  4310 ;; Tracked objects:
  4311 ;;		On entry : 17F/20
  4312 ;;		On exit  : 17F/20
  4313 ;;		Unchanged: FFE80/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4315 ;;      Params:         0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    2
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328  064F                     _op2_init:	
  4329                           
  4330                           ;periph.c: 52: OP2CON1=0x14;
  4331                           
  4332                           ; Regs used in _op2_init: [wreg]
  4333  064F  3014               	movlw	20
  4334  0650  009C               	movwf	28	;volatile
  4335                           
  4336                           ;periph.c: 54: OP2CON2=0x10;
  4337  0651  3010               	movlw	16
  4338  0652  009D               	movwf	29	;volatile
  4339                           
  4340                           ;periph.c: 55: OP2CON0=0x80;
  4341  0653  3080               	movlw	128
  4342  0654  009B               	movwf	27	;volatile
  4343  0655  0008               	return
  4344  0656                     __end_of_op2_init:	
  4345                           
  4346                           	psect	text775
  4347  062A                     __ptext775:	
  4348 ;; =============== function _op2_init ends ============
  4349                           
  4350                           
  4351 ;; *************** function _op1_init *****************
  4352 ;; Defined at:
  4353 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;		None               void
  4360 ;; Registers used:
  4361 ;;		wreg
  4362 ;; Tracked objects:
  4363 ;;		On entry : 17F/20
  4364 ;;		On exit  : 17F/20
  4365 ;;		Unchanged: FFE80/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    2
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380  062A                     _op1_init:	
  4381                           
  4382                           ;periph.c: 33: OP1CON1=0x02;
  4383                           
  4384                           ; Regs used in _op1_init: [wreg]
  4385  062A  3002               	movlw	2
  4386  062B  1283               	bcf	3,5	;RP0=0, select bank0
  4387  062C  009C               	movwf	28	;volatile
  4388                           
  4389                           ;periph.c: 34: OP1CON2=0xA0;
  4390  062D  30A0               	movlw	160
  4391  062E  009D               	movwf	29	;volatile
  4392                           
  4393                           ;periph.c: 35: OP1CON0=0x80;
  4394  062F  3080               	movlw	128
  4395  0630  009B               	movwf	27	;volatile
  4396                           
  4397                           ;periph.c: 38: TRISB3=1;
  4398  0631  1683               	bsf	3,5	;RP0=1, select bank1
  4399  0632  1586               	bsf	6,3
  4400                           
  4401                           ;periph.c: 40: TRISB5=0;
  4402  0633  1286               	bcf	6,5
  4403  0634  0008               	return
  4404  0635                     __end_of_op1_init:	
  4405                           
  4406                           	psect	text776
  4407  0673                     __ptext776:	
  4408 ;; =============== function _op1_init ends ============
  4409                           
  4410                           
  4411 ;; *************** function _dac_init *****************
  4412 ;; Defined at:
  4413 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg
  4422 ;; Tracked objects:
  4423 ;;		On entry : 17F/20
  4424 ;;		On exit  : 17F/20
  4425 ;;		Unchanged: FFE80/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4427 ;;      Params:         0       0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0
  4430 ;;      Totals:         0       0       0       0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    2
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_main
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440  0673                     _dac_init:	
  4441                           
  4442                           ;periph.c: 15: DACCON|=1;
  4443                           
  4444                           ; Regs used in _dac_init: [wreg]
  4445  0673  1407               	bsf	7,0	;volatile
  4446                           
  4447                           ;periph.c: 17: DACR0=0x0F;
  4448  0674  300F               	movlw	15
  4449  0675  0088               	movwf	8	;volatile
  4450                           
  4451                           ;periph.c: 18: DACCON|=(1)<<2;
  4452  0676  1507               	bsf	7,2	;volatile
  4453  0677  0008               	return
  4454  0678                     __end_of_dac_init:	
  4455                           
  4456                           	psect	text778
  4457  0678                     __ptext778:	
  4458 ;; =============== function _adc_test_init ends ============
  4459                           
  4460                           
  4461 ;; *************** function _timer1_interrupt_config *****************
  4462 ;; Defined at:
  4463 ;;		line 192 in file "D:\develop\190625\AK7030-OTP\common.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;		None               void
  4470 ;; Registers used:
  4471 ;;		None
  4472 ;; Tracked objects:
  4473 ;;		On entry : 17F/20
  4474 ;;		On exit  : 17F/20
  4475 ;;		Unchanged: FFE80/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4477 ;;      Params:         0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0
  4480 ;;      Totals:         0       0       0       0       0
  4481 ;;Total ram usage:        0 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    2
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_main
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490  0678                     _timer1_interrupt_config:	
  4491                           
  4492                           ;common.c: 193: GIE = 1;
  4493                           
  4494                           ; Regs used in _timer1_interrupt_config: []
  4495  0678  178B               	bsf	11,7
  4496                           
  4497                           ;common.c: 194: PEIE = 1;
  4498  0679  170B               	bsf	11,6
  4499  067A  0008               	return
  4500  067B                     __end_of_timer1_interrupt_config:	
  4501                           
  4502                           	psect	text779
  4503  0635                     __ptext779:	
  4504 ;; =============== function _timer1_interrupt_config ends ============
  4505                           
  4506                           
  4507 ;; *************** function _timer1_config *****************
  4508 ;; Defined at:
  4509 ;;		line 180 in file "D:\develop\190625\AK7030-OTP\common.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;		None               void
  4516 ;; Registers used:
  4517 ;;		wreg
  4518 ;; Tracked objects:
  4519 ;;		On entry : 17F/40
  4520 ;;		On exit  : 17F/20
  4521 ;;		Unchanged: FFE80/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4523 ;;      Params:         0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0
  4526 ;;      Totals:         0       0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    2
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_main
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536  0635                     _timer1_config:	
  4537                           
  4538                           ;common.c: 182: TMR1H=0xCF;
  4539                           
  4540                           ; Regs used in _timer1_config: [wreg]
  4541  0635  30CF               	movlw	207
  4542  0636  1303               	bcf	3,6	;RP1=0, select bank0
  4543  0637  008F               	movwf	15	;volatile
  4544                           
  4545                           ;common.c: 183: TMR1L=0x2C;
  4546  0638  302C               	movlw	44
  4547  0639  008E               	movwf	14	;volatile
  4548                           
  4549                           ;common.c: 184: T1CON=0xE1;
  4550  063A  30E1               	movlw	225
  4551  063B  0090               	movwf	16	;volatile
  4552                           
  4553                           ;common.c: 185: TMR1IE=1;
  4554  063C  1683               	bsf	3,5	;RP0=1, select bank1
  4555  063D  140C               	bsf	12,0
  4556  063E  0008               	return
  4557  063F                     __end_of_timer1_config:	
  4558                           
  4559                           	psect	text780
  4560  0647                     __ptext780:	
  4561 ;; =============== function _timer1_config ends ============
  4562                           
  4563                           
  4564 ;; *************** function _clock_config *****************
  4565 ;; Defined at:
  4566 ;;		line 172 in file "D:\develop\190625\AK7030-OTP\common.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;		None               void
  4573 ;; Registers used:
  4574 ;;		wreg, status,2
  4575 ;; Tracked objects:
  4576 ;;		On entry : 17F/20
  4577 ;;		On exit  : 17F/40
  4578 ;;		Unchanged: FFE80/0
  4579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4580 ;;      Params:         0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0
  4583 ;;      Totals:         0       0       0       0       0
  4584 ;;Total ram usage:        0 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    2
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_main
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593  0647                     _clock_config:	
  4594                           
  4595                           ;common.c: 174: CLKPR = 0x80;
  4596                           
  4597                           ; Regs used in _clock_config: [wreg+status,2]
  4598  0647  3080               	movlw	128
  4599  0648  1283               	bcf	3,5	;RP0=0, select bank2
  4600  0649  1703               	bsf	3,6	;RP1=1, select bank2
  4601  064A  0088               	movwf	8	;volatile
  4602                           
  4603                           ;common.c: 175: CLKPR = 0x00;
  4604  064B  0188               	clrf	8	;volatile
  4605  064C                     l1685:	
  4606                           ;common.c: 176: while(CLKPCE);
  4607                           
  4608  064C  1F88               	btfss	8,7
  4609  064D  0008               	return
  4610  064E  2E4C               	goto	l1685
  4611  064F                     __end_of_clock_config:	
  4612                           
  4613                           	psect	text781
  4614  05D2                     __ptext781:	
  4615 ;; =============== function _clock_config ends ============
  4616                           
  4617                           
  4618 ;; *************** function _initPin *****************
  4619 ;; Defined at:
  4620 ;;		line 107 in file "D:\develop\190625\AK7030-OTP\main.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;		None               void
  4627 ;; Registers used:
  4628 ;;		None
  4629 ;; Tracked objects:
  4630 ;;		On entry : 160/20
  4631 ;;		On exit  : 160/60
  4632 ;;		Unchanged: FFE9F/0
  4633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4634 ;;      Params:         0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0
  4637 ;;      Totals:         0       0       0       0       0
  4638 ;;Total ram usage:        0 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    2
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_main
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647  05D2                     _initPin:	
  4648                           
  4649                           ;main.c: 108: PB6 = 1;
  4650                           
  4651                           ; Regs used in _initPin: []
  4652  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  4653  05D3  1706               	bsf	6,6
  4654                           
  4655                           ;main.c: 109: PBOD6 = 1;
  4656  05D4  1683               	bsf	3,5	;RP0=1, select bank3
  4657  05D5  1703               	bsf	3,6	;RP1=1, select bank3
  4658  05D6  1708               	bsf	8,6
  4659                           
  4660                           ;main.c: 113: PA0 = 0;
  4661  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  4662  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  4663  05D9  1005               	bcf	5,0
  4664                           
  4665                           ;main.c: 114: PA1 = 0;
  4666  05DA  1085               	bcf	5,1
  4667                           
  4668                           ;main.c: 115: PA2 = 0;
  4669  05DB  1105               	bcf	5,2
  4670                           
  4671                           ;main.c: 116: PA3 = 0;
  4672  05DC  1185               	bcf	5,3
  4673                           
  4674                           ;main.c: 117: PB0 = 0;
  4675  05DD  1006               	bcf	6,0
  4676                           
  4677                           ;main.c: 118: PB1 = 1;
  4678  05DE  1486               	bsf	6,1
  4679                           
  4680                           ;main.c: 119: PA6 = 0;
  4681  05DF  1305               	bcf	5,6
  4682                           
  4683                           ;main.c: 121: PB7 = 0;
  4684  05E0  1386               	bcf	6,7
  4685                           
  4686                           ;main.c: 122: PBOD7 = 0;
  4687  05E1  1683               	bsf	3,5	;RP0=1, select bank3
  4688  05E2  1703               	bsf	3,6	;RP1=1, select bank3
  4689  05E3  1388               	bcf	8,7
  4690  05E4  0008               	return
  4691  05E5                     __end_of_initPin:	
  4692                           
  4693                           	psect	text785
  4694  0395                     __ptext785:	
  4695 ;; =============== function _clearTwelveHoursTimer ends ============
  4696                           
  4697                           
  4698 ;; *************** function _ISR *****************
  4699 ;; Defined at:
  4700 ;;		line 439 in file "D:\develop\190625\AK7030-OTP\common.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;		None               void
  4707 ;; Registers used:
  4708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 60/0
  4712 ;;		Unchanged: FFE00/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4714 ;;      Params:         0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0
  4716 ;;      Temps:          4       0       0       0       0
  4717 ;;      Totals:         4       0       0       0       0
  4718 ;;Total ram usage:        4 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    1
  4721 ;; This function calls:
  4722 ;;		i1_setAD_ConvertFlag
  4723 ;;		_adc_get
  4724 ;;		_vPutSampleDataIntoTable
  4725 ;; This function is called by:
  4726 ;;		Interrupt level 1
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729  0395                     _ISR:	
  4730                           
  4731                           ;common.c: 440: static unsigned char ucTimer1sCnt = 0;
  4732                           ;common.c: 442: if(TMR1IF == 1)
  4733  0395  1C0C               	btfss	12,0
  4734  0396  2BBE               	goto	i1l4164
  4735                           
  4736                           ;common.c: 443: {
  4737                           ;common.c: 444: TMR1IF = 0 ;
  4738  0397  100C               	bcf	12,0
  4739                           
  4740                           ;common.c: 445: timer.timer10msStopWatch++;
  4741  0398  1683               	bsf	3,5	;RP0=1, select bank1
  4742  0399  3064               	movlw	100
  4743  039A  0AA8               	incf	_timer^(0+128),f
  4744                           
  4745                           ;common.c: 446: ucTimer1sCnt++;
  4746  039B  0AA6               	incf	ISR@ucTimer1sCnt^(0+128),f
  4747                           
  4748                           ;common.c: 448: if(ucTimer1sCnt >= 100)
  4749  039C  0226               	subwf	ISR@ucTimer1sCnt^(0+128),w
  4750  039D  1C03               	skipc
  4751  039E  2BBE               	goto	i1l4164
  4752                           
  4753                           ;common.c: 449: {
  4754                           ;common.c: 450: ucTimer1sCnt = 0;
  4755  039F  01A6               	clrf	ISR@ucTimer1sCnt^(0+128)
  4756                           
  4757                           ;common.c: 451: if(uiBigTimer > 0)
  4758  03A0  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4759  03A1  0420               	iorwf	_uiBigTimer^(0+128),w
  4760  03A2  1903               	skipnz
  4761  03A3  2BAA               	goto	i1l1781
  4762                           
  4763                           ;common.c: 452: uiBigTimer--;
  4764  03A4  3001               	movlw	1
  4765  03A5  02A0               	subwf	_uiBigTimer^(0+128),f
  4766  03A6  3000               	movlw	0
  4767  03A7  1C03               	skipc
  4768  03A8  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  4769  03A9  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  4770  03AA                     i1l1781:	
  4771                           
  4772                           ;common.c: 454: if(uiSmallTimer)
  4773  03AA  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4774  03AB  0422               	iorwf	_uiSmallTimer^(0+128),w
  4775  03AC  1903               	skipnz
  4776  03AD  2BB4               	goto	i1l1782
  4777                           
  4778                           ;common.c: 455: uiSmallTimer--;
  4779  03AE  3001               	movlw	1
  4780  03AF  02A2               	subwf	_uiSmallTimer^(0+128),f
  4781  03B0  3000               	movlw	0
  4782  03B1  1C03               	skipc
  4783  03B2  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  4784  03B3  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  4785  03B4                     i1l1782:	
  4786                           
  4787                           ;common.c: 457: if(uiTwentySecondsTimer)
  4788  03B4  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4789  03B5  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4790  03B6  1903               	skipnz
  4791  03B7  2BBE               	goto	i1l4164
  4792                           
  4793                           ;common.c: 458: uiTwentySecondsTimer--;
  4794  03B8  3001               	movlw	1
  4795  03B9  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  4796  03BA  3000               	movlw	0
  4797  03BB  1C03               	skipc
  4798  03BC  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4799  03BD  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4800  03BE                     i1l4164:	
  4801                           
  4802                           ;common.c: 459: }
  4803                           ;common.c: 460: }
  4804                           ;common.c: 462: if(ADIF)
  4805  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4806  03BF  1D0D               	btfss	13,2
  4807  03C0  2BE6               	goto	i1l1789
  4808  03C1  3001               	movlw	1
  4809                           
  4810                           ;common.c: 463: {
  4811                           ;common.c: 464: ADIF=0;
  4812  03C2  110D               	bcf	13,2
  4813                           
  4814                           ;common.c: 465: setAD_ConvertFlag(1);
  4815  03C3  2461  118A         	fcall	i1_setAD_ConvertFlag
  4816                           
  4817                           ;common.c: 467: if(sampleChannelSelect == 5)
  4818  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4819  03C6  086E               	movf	_sampleChannelSelect,w
  4820  03C7  3A05               	xorlw	5
  4821  03C8  1D03               	skipz
  4822  03C9  2BD2               	goto	i1l4174
  4823                           
  4824                           ;common.c: 468: {
  4825                           ;common.c: 471: vPutSampleDataIntoTable(adc_get(),5);
  4826  03CA  23F3  118A         	fcall	_adc_get
  4827  03CC  0871               	movf	?_adc_get+1,w
  4828  03CD  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4829  03CE  0870               	movf	?_adc_get,w
  4830  03CF  00F4               	movwf	?_vPutSampleDataIntoTable
  4831  03D0  3005               	movlw	5
  4832  03D1  2BE4               	goto	L10
  4833  03D2                     i1l4174:	
  4834                           ;common.c: 475: }
  4835                           
  4836                           
  4837                           ;common.c: 476: else if(sampleChannelSelect == 1)
  4838  03D2  0B6E               	decfsz	_sampleChannelSelect,w
  4839  03D3  2BDD               	goto	i1l4178
  4840                           
  4841                           ;common.c: 477: {
  4842                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),1);
  4843  03D4  23F3  118A         	fcall	_adc_get
  4844  03D6  0871               	movf	?_adc_get+1,w
  4845  03D7  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4846  03D8  0870               	movf	?_adc_get,w
  4847  03D9  00F4               	movwf	?_vPutSampleDataIntoTable
  4848  03DA  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4849  03DB  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4850  03DC  2BE5               	goto	L11
  4851  03DD                     i1l4178:	
  4852                           ;common.c: 484: }
  4853                           
  4854                           
  4855                           ;common.c: 485: else
  4856                           ;common.c: 486: {
  4857                           ;common.c: 490: vPutSampleDataIntoTable(adc_get(),14);
  4858  03DD  23F3  118A         	fcall	_adc_get
  4859  03DF  0871               	movf	?_adc_get+1,w
  4860  03E0  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4861  03E1  0870               	movf	?_adc_get,w
  4862  03E2  00F4               	movwf	?_vPutSampleDataIntoTable
  4863  03E3  300E               	movlw	14
  4864  03E4                     L10:	
  4865  03E4  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4866  03E5                     L11:	
  4867  03E5  23FE               	fcall	_vPutSampleDataIntoTable
  4868  03E6                     i1l1789:	
  4869  03E6  087C               	movf	??_ISR+3,w
  4870  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  4871  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  4872  03E9  00FF               	movwf	127
  4873  03EA  087B               	movf	??_ISR+2,w
  4874  03EB  008A               	movwf	10
  4875  03EC  087A               	movf	??_ISR+1,w
  4876  03ED  0084               	movwf	4
  4877  03EE  0E79               	swapf	??_ISR^(0+-128),w
  4878  03EF  0083               	movwf	3
  4879  03F0  0EFE               	swapf	126,f
  4880  03F1  0E7E               	swapf	126,w
  4881  03F2  0009               	retfie
  4882  03F3                     __end_of_ISR:	
  4883  03F3                     __ptext787:	
  4884 ;; =============== function i1_setAD_ConvertFlag ends ============
  4885                           
  4886                           
  4887 ;; *************** function _adc_get *****************
  4888 ;; Defined at:
  4889 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;		None
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  val             2    2[COMMON] unsigned int 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  2    0[COMMON] unsigned int 
  4896 ;; Registers used:
  4897 ;;		wreg
  4898 ;; Tracked objects:
  4899 ;;		On entry : 60/0
  4900 ;;		On exit  : 60/20
  4901 ;;		Unchanged: FFF9F/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4903 ;;      Params:         2       0       0       0       0
  4904 ;;      Locals:         2       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0
  4906 ;;      Totals:         4       0       0       0       0
  4907 ;;Total ram usage:        4 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_ISR
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915  03F3                     _adc_get:	
  4916                           
  4917                           ;periph.c: 106: unsigned int val;
  4918                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4919                           
  4920                           ; Regs used in _adc_get: [wreg]
  4921  03F3  081E               	movf	30,w	;volatile
  4922  03F4  00F3               	movwf	adc_get@val+1
  4923  03F5  01F2               	clrf	adc_get@val
  4924  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  4925  03F7  081E               	movf	30,w	;volatile
  4926  03F8  04F2               	iorwf	adc_get@val,f
  4927                           
  4928                           ;periph.c: 108: return val;
  4929  03F9  0873               	movf	adc_get@val+1,w
  4930  03FA  00F1               	movwf	?_adc_get+1
  4931  03FB  0872               	movf	adc_get@val,w
  4932  03FC  00F0               	movwf	?_adc_get
  4933  03FD  0008               	return
  4934  03FE                     __end_of_adc_get:	
  4935  03FE                     __ptext788:	
  4936 ;; =============== function _adc_get ends ============
  4937                           
  4938                           
  4939 ;; *************** function _vPutSampleDataIntoTable *****************
  4940 ;; Defined at:
  4941 ;;		line 97 in file "D:\develop\190625\AK7030-OTP\common.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4944 ;;  channel         1    6[COMMON] unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  i               2    7[COMMON] int 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;		None               void
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4951 ;; Tracked objects:
  4952 ;;		On entry : 60/20
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: FFE00/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4956 ;;      Params:         3       0       0       0       0
  4957 ;;      Locals:         2       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0
  4959 ;;      Totals:         5       0       0       0       0
  4960 ;;Total ram usage:        5 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_ISR
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968  03FE                     _vPutSampleDataIntoTable:	
  4969                           
  4970                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  4971                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  4972                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  4973                           ;common.c: 105: if(channel == 1)
  4974                           
  4975                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4976  03FE  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4977  03FF  2C10               	goto	i1l4082
  4978                           
  4979                           ;common.c: 106: {
  4980                           ;common.c: 107: if(ucChannelFirstLength < 12)
  4981  0400  300C               	movlw	12
  4982  0401  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4983  0402  1803               	skipnc
  4984  0403  2C0A               	goto	i1l4078
  4985                           
  4986                           ;common.c: 108: {
  4987                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4988  0404  1003               	clrc
  4989  0405  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4990  0406  3EAC               	addlw	_uiSampleChannelFirst& (0+255)
  4991  0407  2465               	fcall	PL2	;call to abstracted procedure
  4992                           
  4993                           ;common.c: 111: ucChannelFirstLength++;
  4994  0408  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4995                           
  4996                           ;common.c: 112: }
  4997  0409  0008               	return
  4998  040A                     i1l4078:	
  4999                           
  5000                           ;common.c: 113: else
  5001                           ;common.c: 114: {
  5002                           ;common.c: 115: ucChannelFirstLength = 0;
  5003  040A  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5004                           
  5005                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5006  040B  1003               	clrc
  5007  040C  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5008  040D  3EAC               	addlw	_uiSampleChannelFirst& (0+255)
  5009  040E  2465               	fcall	PL2	;call to abstracted procedure
  5010  040F  0008               	return
  5011  0410                     i1l4082:	
  5012                           
  5013                           ;common.c: 120: else if(channel == 5)
  5014  0410  0876               	movf	vPutSampleDataIntoTable@channel,w
  5015  0411  3A05               	xorlw	5
  5016  0412  1D03               	skipz
  5017  0413  2C25               	goto	i1l4094
  5018                           
  5019                           ;common.c: 121: {
  5020                           ;common.c: 122: if(ucChannelFourthLength < 12)
  5021  0414  300C               	movlw	12
  5022  0415  1283               	bcf	3,5	;RP0=0, select bank0
  5023  0416  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5024  0417  1803               	skipnc
  5025  0418  2C1F               	goto	i1l4090
  5026                           
  5027                           ;common.c: 123: {
  5028                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5029  0419  1003               	clrc
  5030  041A  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5031  041B  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5032  041C  2465               	fcall	PL2	;call to abstracted procedure
  5033                           
  5034                           ;common.c: 126: ucChannelFourthLength++;
  5035  041D  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5036                           
  5037                           ;common.c: 127: }
  5038  041E  0008               	return
  5039  041F                     i1l4090:	
  5040                           
  5041                           ;common.c: 128: else
  5042                           ;common.c: 129: {
  5043                           ;common.c: 130: ucChannelFourthLength = 0;
  5044  041F  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5045                           
  5046                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5047  0420  1003               	clrc
  5048  0421  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5049  0422  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5050  0423  2465               	fcall	PL2	;call to abstracted procedure
  5051  0424  0008               	return
  5052  0425                     i1l4094:	
  5053                           
  5054                           ;common.c: 135: else if(channel == 14)
  5055  0425  0876               	movf	vPutSampleDataIntoTable@channel,w
  5056  0426  3A0E               	xorlw	14
  5057  0427  1D03               	skipz
  5058  0428  2C40               	goto	i1l4106
  5059                           
  5060                           ;common.c: 136: {
  5061                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  5062  0429  300C               	movlw	12
  5063  042A  1283               	bcf	3,5	;RP0=0, select bank0
  5064  042B  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5065  042C  1803               	skipnc
  5066  042D  2C3A               	goto	i1l4102
  5067                           
  5068                           ;common.c: 138: {
  5069                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  5070  042E  1003               	clrc
  5071  042F  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5072  0430  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  5073  0431  0084               	movwf	4
  5074  0432  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5075  0433  1783               	bsf	3,7	;select IRP bank3
  5076  0434  0080               	movwf	0
  5077  0435  0A84               	incf	4,f
  5078  0436  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5079  0437  0080               	movwf	0
  5080                           
  5081                           ;common.c: 141: ucChannelFourteenthLength++;
  5082  0438  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  5083                           
  5084                           ;common.c: 142: }
  5085  0439  0008               	return
  5086  043A                     i1l4102:	
  5087                           
  5088                           ;common.c: 143: else
  5089                           ;common.c: 144: {
  5090                           ;common.c: 145: ucChannelFourteenthLength = 0;
  5091  043A  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5092                           
  5093                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  5094  043B  1003               	clrc
  5095  043C  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5096  043D  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5097  043E  2465               	fcall	PL2	;call to abstracted procedure
  5098  043F  0008               	return
  5099  0440                     i1l4106:	
  5100                           
  5101                           ;common.c: 150: else
  5102                           ;common.c: 151: {
  5103                           ;common.c: 152: ucChannelFirstLength = 0;
  5104  0440  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5105                           
  5106                           ;common.c: 154: ucChannelFourthLength = 0;
  5107  0441  1283               	bcf	3,5	;RP0=0, select bank0
  5108  0442  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5109                           
  5110                           ;common.c: 156: ucChannelFourteenthLength = 0;
  5111  0443  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5112                           
  5113                           ;common.c: 158: for(int i = 0;i < 12; i++)
  5114  0444  01F7               	clrf	vPutSampleDataIntoTable@i
  5115  0445  01F8               	clrf	vPutSampleDataIntoTable@i+1
  5116  0446                     i1l4112:	
  5117                           
  5118                           ;common.c: 159: {
  5119                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  5120  0446  1003               	clrc
  5121  0447  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5122  0448  3EAC               	addlw	_uiSampleChannelFirst& (0+255)
  5123  0449  0084               	movwf	4
  5124  044A  1383               	bcf	3,7	;select IRP bank1
  5125  044B  0180               	clrf	0
  5126                           
  5127                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  5128  044C  246D  118A         	fcall	PL4	;call to abstracted procedure
  5129                           
  5130                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  5131  044E  246D  118A         	fcall	PL4	;call to abstracted procedure
  5132  0450  0A84               	incf	4,f
  5133  0451  0180               	clrf	0
  5134  0452  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5135  0453  1903               	skipnz
  5136  0454  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5137  0455  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5138  0456  3A80               	xorlw	128
  5139  0457  00FF               	movwf	127
  5140  0458  3080               	movlw	128
  5141  0459  027F               	subwf	127,w
  5142  045A  1D03               	skipz
  5143  045B  2C5E               	goto	u121_25
  5144  045C  300C               	movlw	12
  5145  045D  0277               	subwf	vPutSampleDataIntoTable@i,w
  5146  045E                     u121_25:	
  5147  045E  1803               	btfsc	3,0
  5148  045F  0008               	return
  5149  0460  2C46               	goto	i1l4112
  5150  0461                     __end_of_vPutSampleDataIntoTable:	
  5151  0461                     __ptext786:	
  5152 ;; =============== function _ISR ends ============
  5153                           
  5154                           
  5155 ;; *************** function i1_setAD_ConvertFlag *****************
  5156 ;; Defined at:
  5157 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  setAD_Conver    1    wreg     unsigned char 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;		None               void
  5164 ;; Registers used:
  5165 ;;		wreg
  5166 ;; Tracked objects:
  5167 ;;		On entry : 60/0
  5168 ;;		On exit  : 60/20
  5169 ;;		Unchanged: FFF9F/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5171 ;;      Params:         0       0       0       0       0
  5172 ;;      Locals:         1       0       0       0       0
  5173 ;;      Temps:          0       0       0       0       0
  5174 ;;      Totals:         1       0       0       0       0
  5175 ;;Total ram usage:        1 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_ISR
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183  0461                     i1_setAD_ConvertFlag:	
  5184                           
  5185                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5186                           ;i1setAD_ConvertFlag@flag stored from wreg
  5187  0461  00F0               	movwf	i1setAD_ConvertFlag@flag
  5188                           
  5189                           ;common.c: 207: adc_convert_flag = flag;
  5190  0462  1683               	bsf	3,5	;RP0=1, select bank1
  5191  0463  00A7               	movwf	_adc_convert_flag^(0+128)
  5192  0464  0008               	return
  5193  0465                     __end_ofi1_setAD_ConvertFlag:	
  5194  0465                     PL2:	
  5195  0465  0084               	movwf	4
  5196  0466  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5197  0467  1383               	bcf	3,7	;select IRP bank1
  5198  0468  0080               	movwf	0
  5199  0469  0A84               	incf	4,f
  5200  046A  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5201  046B  0080               	movwf	0
  5202  046C  0008               	return
  5203  046D                     PL4:	
  5204  046D  0A84               	incf	4,f
  5205  046E  0180               	clrf	0
  5206  046F  1003               	clrc
  5207  0470  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5208  0471  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5209  0472  0084               	movwf	4
  5210  0473  0180               	clrf	0
  5211  0474  0008               	return
  5212                           
  5213                           	psect	intentry
  5214  0004                     __pintentry:	
  5215                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5216                           
  5217  0004                     interrupt_function:	
  5218  007E                     saved_w	set	btemp
  5219  0004  00FE               	movwf	btemp
  5220  0005  0E03               	swapf	3,w
  5221  0006  00F9               	movwf	??_ISR
  5222  0007  0804               	movf	4,w
  5223  0008  00FA               	movwf	??_ISR+1
  5224  0009  080A               	movf	10,w
  5225  000A  00FB               	movwf	??_ISR+2
  5226  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5227  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5228  000D  087F               	movf	btemp+1,w
  5229  000E  00FC               	movwf	??_ISR+3
  5230  000F  118A  2B95         	ljmp	_ISR
  5231                           
  5232                           	psect	text789
  5233  0000                     __ptext789:	
  5234 ;; =============== function _vPutSampleDataIntoTable ends ============
  5235                           
  5236  007E                     btemp	set	126	;btemp
  5237  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Jul 03 23:14:39 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l720 007B  
                                             l712 0062                                               l801 0153  
                                             l682 0000                                               l932 02A6  
                                             l852 01BF                                               l828 018C  
                                             l685 0000                                               l773 0117  
                                             l758 0115                                               l679 0000  
                                             l873 01F1                                               l982 036B  
                                             l967 0322                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PB6 0036  
                                             _PB7 0037                                               _ISR 0395  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              S5024 05E5  
                                            S5026 0600                                              S5028 05F3  
                                            ?_ISR 0070                                __size_of_AD_Sample 001E  
                          ?_getAdOriginalCh1Value 0046                                              l4004 0000  
                                            l4020 0000                                              l1700 0000  
                                            l2422 0000                                              l4030 0000  
                                            l1703 0000                                              l4008 0000  
                                            l4040 04C2                                              l4032 0000  
                                            l4200 0558                                              l2425 0000  
                                            l2442 0000                                              l4050 0505  
                                            l4026 049A                                              l4122 0000  
                                            l1706 0000                                              l2436 0000  
                                            l2428 0000                                              l4060 0000  
                                            l4052 0000                                              l4028 0000  
                                            l4140 0580                                              l4132 0000  
                                            l4124 0000                                              l4204 0000  
                                            l4212 0000                                              l4300 009B  
                                            l4220 0000                                              l1741 0000  
                                            l1709 0000                                              l4062 0000  
                                            l4046 0503                                              l4118 0000  
                                            l4142 0000                                              l4230 0000  
                                            l4222 0000                                              l1751 0000  
                                            l1744 0000                                              l4048 04C3  
                                            l4136 0579                                              l4128 0000  
                                            l4208 0000                                              l4216 0000  
                                            l4320 00C0                                              l4312 0000  
                                            l4240 0000                                              l4232 0000  
                                            l4224 0000                                              l1738 0000  
                                            l4066 0000                                              l4138 057D  
                                            l4218 0000                                              l4410 0000  
                                            l4322 0000                                              l4306 00AB  
                                            l4314 00B4                                              l4250 004E  
                                            l4242 0040                                              l4234 0000  
                                            l4226 0000                                              l1691 0000  
                                            l1659 0000                                              l4420 0154  
                                            l4412 0144                                              l4332 0000  
                                            l4324 0000                                              l4308 00AC  
                                            l4260 0000                                              l4244 0000  
                                            l4236 0000                                              l4228 0000  
                                            l1685 064C                                              l1694 0000  
                                            l1774 0000                                              l4430 015D  
                                            l4422 0156                                              l4350 0107  
                                            l4342 00EE                                              l4334 00DB  
                                            l4326 00CC                                              l4318 00BC  
                                            l4270 0000                                              l4262 0063  
                                            l4254 005A                                              l4246 0000  
                                            l4238 0000                                              l1688 0000  
                                            l4192 0000                                              l4432 015F  
                                            l4408 013F                                              l4336 00DE  
                                            l4280 0082                                              l4256 005B  
                                            l1697 0000                                              l4186 05A9  
                                            l4506 019F                                              l4442 0165  
                                            l4426 015B                                              l4418 0147  
                                            l4362 011F                                              l4354 0113  
                                            l4346 00FB                                              l4338 00E2  
                                            l4290 0092                                              l4282 0000  
                                            l4274 0000                                              l4266 0000  
                                            l4196 0552                                              l4188 0000  
                                            l4700 0000                                              l4620 022B  
                                            l4604 0206                                              l4540 01C4  
                                            l4516 01A5                                              l4452 016B  
                                            l4356 0118                                              l4292 0000  
                                            l4284 0085                                              l4276 0000  
                                            l4268 0071                                              l4198 0000  
                                            l4710 0000                                              l4702 02BC  
                                            l4614 020C                                              l4606 0000  
                                            l4550 01CD                                              l4526 01AD  
                                            l4462 0171                                              l4366 0121  
                                            l4358 011A                                              l4294 0094  
                                            l3920 05B6                                              l4712 02C7  
                                            l4632 0000                                              l4560 01D3  
                                            l4544 01C9                                              l4536 01B3  
                                            l4528 0000                                              l4472 017A  
                                            l4368 0123                                              l4288 0000  
                                            l3922 0000                                              l3930 0000  
                                            l4802 036C                                              l4722 0000  
                                            l4706 02C2                                              l4642 0000  
                                            l4634 0243                                              l4626 0000  
                                            l4618 021A                                              l4570 01DA  
                                            l4538 01C2                                              l4490 0195  
                                            l4482 0180                                              l4474 0000  
                                            l4378 0129                                              l4298 0000  
                                            l3916 0000                                              l3924 0000  
                                            l3932 0000                                              l3940 0000  
                                            l4740 0000                                              l4732 0000  
                                            l4724 02DD                                              l4716 0000  
                                            l4708 0000                                              l4660 0269  
                                            l4652 025E                                              l4644 0256  
                                            l4628 0238                                              l4580 01E0  
                                            l4572 0000                                              l4548 01CB  
                                            l4484 018E                                              l4388 012F  
                                            l3918 0000                                              l3926 0000  
                                            l3942 0000                                              l3934 0000  
                                            l3950 0000                                              l4750 0303  
                                            l4734 0000                                              l4742 02F2  
                                            l4726 0000                                              l4718 02D0  
                                            l4662 0000                                              l4646 0000  
                                            l4638 0249                                              l4582 01F5  
                                            l4494 0197                                              l4486 0190  
                                            l4398 0135                                              l4806 0378  
                                            l3928 0000                                              l3936 0000  
                                            l3944 0000                                              l3952 0000  
                                            l3960 0000                                              l4752 0000  
                                            l4736 0000                                              l4728 02DF  
                                            l4680 028E                                              l4672 0284  
                                            l4664 0272                                              l4656 0264  
                                            l4648 0258                                              l4592 01FE  
                                            l4584 01F7                                              l4496 0199  
                                            l3938 0000                                              l3946 0000  
                                            l3954 0000                                              l4770 0334  
                                            l4762 0000                                              l4754 0305  
                                            l4738 0000                                              l4690 0000  
                                            l4682 0000                                              l4658 0000  
                                            l4594 0200                                              l3948 0000  
                                            l3956 0000                                              l3972 0000  
                                            l4780 0000                                              l4764 0000  
                                            l4748 0000                                              l4692 0000  
                                            l4676 0000                                              l4668 027E  
                                            l4588 01FC                                              l3958 059A  
                                            l3974 0000                                              l3990 0000  
                                            l4782 034B                                              l4774 0341  
                                            l4758 030B                                              l4694 0000  
                                            l4678 0000                                              l4686 0294  
                                            _ADIE 046A                                              l3992 0000  
                                            l4792 0000                                              l4776 0343  
                                            l4768 0317                                              l4696 0000  
                                            l4688 0000                                              _ADIF 006A  
                                            l3978 0000                                              l4794 0000  
                                            l4786 0358                                              l4698 0000  
                                            l4796 0000                                              l4788 035A  
                                            l4798 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1105 04BD  
                                            u1115 04E4                                              u1125 04D0  
                                            _PEIE 005E                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 05B6  
                                            start 0011                           ?_getAdOriginalCh14Value 0046  
                               main@ucTimerDelay1 0057                                 main@ucTimerDelay2 0058  
                               main@ucTimerDelay3 0059                                 main@ucTimerDelay4 005A  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 066E  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0048  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 03FE                                             _PBOD6 0C46  
                                           _PBOD7 0C47                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 03FE                                   __end_of_initPin 05E5  
                                           _timer 00A8                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 0493                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 067D                             __end_of_clearAllTimer 05AE  
                                    __end_of_main 0395                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 0585                                main@ucTimerSeond1s 0067  
                                          ??_main 0048                              _clearPinPortAndTimer 059D  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 064F                                            _DACCON 0087  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CLKPCE 0847                                            i1l4100 0000  
                                          i1l1700 0000                                            i1l4102 043A  
                                          i1l4112 0446                                            i1l4104 0000  
                                          i1l4114 0000                                            i1l4106 0440  
                                          i1l4116 0000                                            u121_25 045E  
                                          i1l2445 0000                                            i1l4070 0000  
                                          i1l4150 0000                                            i1l4080 0000  
                                          i1l4072 0000                                            i1l4152 0000  
                                          i1l4090 041F                                            i1l4082 0410  
                                          i1l4170 0000                                            i1l4146 0000  
                                          i1l4092 0000                                            i1l4076 0000  
                                          i1l4180 0000                                            i1l4156 0000  
                                          i1l4164 03BE                                            i1l1781 03AA  
                                          i1l4094 0425                                            i1l4078 040A  
                                          i1l4174 03D2                                            i1l1782 03B4  
                                          i1l4088 0000                                            i1l4184 0000  
                                          i1l4176 0000                                            i1l4168 0000  
                                          i1l4178 03DD                                            i1l1789 03E6  
                                __end_of_dac_init 0678                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 055E                                 _setAD_ConvertFlag 0562  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 0053                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0493                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 0635                                  __end_of_op2_init 0656  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            clrloop 0640  
                                Filter@filter_buf 0026                                  Filter@filter_sum 0040  
                                       ??_initPin 0020                         ??_vPutSampleDataIntoTable 0077  
                           ?_clearPinPortAndTimer 0070                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 0585                  __size_of_startTwentySecondsTimer 0005  
                       __end_of_getAD_ConvertFlag 0562                         __end_of_setAD_ConvertFlag 0567  
                              __size_of_adc_start 0003                               main@ucTimerDelayP5s 005B  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 05B9                              _uiSampleChannelFirst 00AC  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0066  
                       _isFinishedThreeHoursTimer 0656                           ??_getAdOriginalCh1Value 0048  
                           __end_of_timer1_config 063F                                    ?_adc_test_init 0020  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0048  
                                      __pbssBANK1 00A0                                        __pbssBANK3 0190  
                    __size_ofi1_setAD_ConvertFlag 0004                                        adc_get@val 0072  
                 __end_of_vPutSampleDataIntoTable 0461                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 00AA                                         ?_dac_init 0070  
                          ??_clearPinPortAndTimer 0020                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                           _OP2CON0 009B  
                                         _OP2CON1 009C                                           _OP2CON2 009D  
                                    _clrSampeTime 067B                                 __end_of_adc_start 059D  
                            _uiTwentySecondsTimer 00A4                                         ?_op1_init 0070  
                                       ?_op2_init 0070                                _isPermitSampleTime 0668  
                                         Filter@i 0045                                           Filter@j 0044  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0005                                    main@ucTimer20s 0054  
                                  main@ucTimerP3s 00AB                                    main@ucTimerP5s 0063  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 0097  
                                      _uiBigTimer 00A0                                      _clock_config 0647  
                                         _adc_get 03F3              __end_of_isFinishedTwentySecondsTimer 0662  
           __size_of_isFinishedTwentySecondsTimer 0006                      _isFinishedTwentySecondsTimer 065C  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 062A  
                                      ??_dac_init 0020                                         _AD_Sample 0567  
                                    __size_of_ISR 005E                                           _initPin 05D2  
                   __size_of_getAdOriginaCh4Value 0009                                   ??_adc_test_init 0021  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                         _startTwentySecondsTimer 066E                              end_of_initialization 05CF  
                               Filter@filter_temp 003E                                  main@ucLoaderStep 004E  
                                      ?_AD_Sample 0070                     ?_isFinishedTwentySecondsTimer 0070  
                            main@enumMainLoopStep 004B                                main@ucChannel4Type 004D  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0042  
                                _adc_convert_flag 00A7                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 05B6                            main@ucTimerADC1ZeroP5s 0055  
                  __size_of_clearTwelveHoursTimer 0004                           _timer1_interrupt_config 0678  
                   __end_of_clearTwelveHoursTimer 05B2                          main@ucTimerForDACR0_CNT1 005C  
                        main@ucTimerForDACR0_CNT2 005E                __size_of_isFinishedThreeHoursTimer 0006  
                                main@ucTimerX1P5s 0068                                  main@ucTimerX2P5s 0069  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 0056                                    __end_of_Filter 052A  
                                 main@ucADC4_Step 004C               __size_of_isFinishedTwelveHoursTimer 0006  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 0461  
                       ??_startTwentySecondsTimer 0020                               start_initialization 05B9  
                                     __end_of_ISR 03F3                              main@ucTimerLessX1P5s 0061  
                            main@ucTimerLessX2P5s 0062                             _uiSampleChannelFourth 00C4  
                        ?_clearTwentySecondsTimer 0070                    __size_of_getAdOriginalCh1Value 000A  
                   __end_of_getAdOriginalCh1Value 0488                          ??_getAdOriginalCh14Value 0048  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 061C  
               __end_of_isFinishedThreeHoursTimer 065C                                main@enumBranchStep 004A  
                                        ??_Filter 0022                                     _clearAllTimer 05A9  
                                     __pdataBANK0 006E                          ?_vPutSampleDataIntoTable 0074  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 059A                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0007                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 0673  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 05B2                      __end_of_startThreeHoursTimer 061C  
                                       __ptext760 05A9                                         __ptext761 0567  
                                       __ptext770 061C                                         __ptext762 0562  
                                       __ptext771 067B                                         __ptext763 055E  
                                       __ptext755 059D                                         __ptext780 0647  
                                       __ptext772 0668                                         __ptext764 0493  
                                       __ptext756 0475                                         __ptext781 05D2  
                                       __ptext773 059A                                         __ptext765 0656  
                                       __ptext757 047E                                         __ptext782 05B6  
                                       __ptext774 064F                                         __ptext766 060E  
                                       __ptext758 0488                                         __ptext783 05B2  
                                       __ptext775 062A                                         __ptext767 065C  
                                       __ptext759 0540                                         __ptext784 05AE  
                                       __ptext776 0673                                         __ptext768 066E  
                                       __ptext785 0395                                         __ptext777 0585  
                                       __ptext769 0662                                         __ptext786 0461  
                                       __ptext778 0678                                         __ptext787 03F3  
                                       __ptext779 0635                                         __ptext788 03FE  
                                       __ptext789 0000                                          ?_adc_get 0070  
                                       __pswtext1 05E5                                         __pswtext2 0600  
                                       __pswtext3 05F3                __end_of_isFinishedTwelveHoursTimer 0668  
                      _isFinishedTwelveHoursTimer 0662                                   ISR@ucTimer1sCnt 00A6  
                                        ?_initPin 0070                     __size_of_clearPinPortAndTimer 000C  
                       _uiSampleChannelFourteenth 0190                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 000B                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 047E                   __end_of_timer1_interrupt_config 067B  
                          main@ucTimerPA6DelayP1s 0064                        main@ucTimerLessADC1ZeroP5s 0060  
                          main@ucTimerPB6DelayP1s 0065                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 006D                       __size_of_isPermitSampleTime 0006  
                                    _uiSmallTimer 00A2                             __end_of_adc_test_init 059A  
                                   _timer1_config 0635                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                                   ??_clearAllTimer 0020  
                          _getAdOriginalCh14Value 0488                                  __size_of_adc_get 000B  
             __size_of_process_AD_Converter_Value 001E                                          _dac_init 0673  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006C                        main@ucTimerForDACR0_CNT1_f 005D  
                      main@ucTimerForDACR0_CNT2_f 005F                                  __size_of_initPin 0013  
                                main@cTimer1s_825 00A9                                    Filter@tmpValue 0020  
                                  ?_timer1_config 0070                                          _op1_init 062A  
                                        _op2_init 064F                                       ??_adc_start 0020  
                            _startThreeHoursTimer 060E                             _clearTwelveHoursTimer 05AE  
                                   __size_of_main 0382                                          clear_ram 063F  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0003  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 0475  
                                     _sampleTimes 0048                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 0063                                          intlevel1 0000  
                           _getAdOriginalCh1Value 047E                        ?_isFinishedThreeHoursTimer 0070  
                               main@ucLoaderStep1 004F                                 main@ucLoaderStep2 0050  
                               main@ucLoaderStep3 0051                                 main@ucLoaderStep4 0052  
                                   ?_clock_config 0070                          ?_startTwentySecondsTimer 0070  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                           ?_getAdOriginaCh4Value 0046                                   ??_timer1_config 0020  
                               main@bCheckTweHour 0049                       __end_ofi1_setAD_ConvertFlag 0465  
              __end_of_process_AD_Converter_Value 055E                        _process_AD_Converter_Value 0540  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 05A9  
