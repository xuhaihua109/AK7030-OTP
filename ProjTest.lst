

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Mar 29 14:39:34 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text470,local,class=CODE,delta=2
    16                           	psect	text475,local,class=CODE,delta=2
    17                           	psect	text476,local,class=CODE,delta=2
    18                           	psect	text477,local,class=CODE,delta=2
    19                           	psect	text478,local,class=CODE,delta=2
    20                           	psect	text479,local,class=CODE,delta=2
    21                           	psect	text480,local,class=CODE,delta=2
    22                           	psect	text481,local,class=CODE,delta=2
    23                           	psect	text482,local,class=CODE,delta=2
    24                           	psect	text483,local,class=CODE,delta=2
    25                           	psect	text484,local,class=CODE,delta=2
    26                           	psect	text486,local,class=CODE,delta=2
    27                           	psect	text487,local,class=CODE,delta=2
    28                           	psect	text488,local,class=CODE,delta=2
    29                           	psect	text490,local,class=CODE,delta=2
    30                           	psect	text491,local,class=CODE,delta=2
    31                           	psect	text492,local,class=CODE,delta=2
    32                           	psect	text493,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text496,local,class=CODE,delta=2
    35                           	psect	pa_nodes,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37  000A                     	;#
    38                           
    39                           	psect	config
    40  2000  2FFF               	dw	12287	;#
    41  2001  3FDE               	dw	16350	;#
    42  2002  3FF8               	dw	16376	;#
    43                           
    44                           	psect	idataBANK0
    45  0000                     __pidataBANK0:	
    46  001F                     _ADCON0	set	31
    47  001E                     _ADRESH	set	30
    48  001B                     _OP1CON0	set	27
    49  001C                     _OP1CON1	set	28
    50  001D                     _OP1CON2	set	29
    51  0010                     _T1CON	set	16
    52  000F                     _TMR1H	set	15
    53  000E                     _TMR1L	set	14
    54  006A                     _ADIF	set	106
    55  00F8                     _ADON	set	248
    56  005F                     _GIE	set	95
    57  00F9                     _GO	set	249
    58  0028                     _PA0	set	40
    59  0029                     _PA1	set	41
    60  002A                     _PA2	set	42
    61  002B                     _PA3	set	43
    62  0032                     _PB2	set	50
    63  005E                     _PEIE	set	94
    64  0060                     _TMR1IF	set	96
    65  009F                     _ADCON1	set	159
    66  009E                     _ADRESL	set	158
    67  0087                     _DACCON	set	135
    68  0088                     _DACR0	set	136
    69  009B                     _OP2CON0	set	155
    70  009C                     _OP2CON1	set	156
    71  009D                     _OP2CON2	set	157
    72  046A                     _ADIE	set	1130
    73  0460                     _TMR1IE	set	1120
    74  0428                     _TRISA0	set	1064
    75  0429                     _TRISA1	set	1065
    76  042A                     _TRISA2	set	1066
    77  042B                     _TRISA3	set	1067
    78  042E                     _TRISA6	set	1070
    79  042F                     _TRISA7	set	1071
    80  0430                     _TRISB0	set	1072
    81  0431                     _TRISB1	set	1073
    82  0432                     _TRISB2	set	1074
    83  0433                     _TRISB3	set	1075
    84  0434                     _TRISB4	set	1076
    85  0435                     _TRISB5	set	1077
    86  0436                     _TRISB6	set	1078
    87  0437                     _TRISB7	set	1079
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90                           
    91                           	psect	cinit
    92  01F9                     start_initialization:	
    93  01F9  3020               	movlw	low __pbssBANK0
    94                           
    95                           ; Clear objects allocated to COMMON
    96  01FA  01F6               	clrf	__pbssCOMMON& (0+127)
    97  01FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    98  01FC  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
    99  01FD  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   100  01FE  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  01FF  1383               	bcf	3,7	;select IRP bank0
   104  0200  0084               	movwf	4
   105  0201  3041               	movlw	low (__pbssBANK0+33)
   106  0202  118A  2228         	fcall	clear_ram
   107                           
   108                           ;initializer for _sampleChannelSelect
   109  0204  300D               	movlw	13
   110  0205  00C6               	movwf	__pdataBANK0& (0+127)
   111  0206                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  0206  0183               	clrf	3
   115  0207  118A  280D         	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMMON
   118  0076                     __pbssCOMMON:	
   119  0076                     _uiBigTimer:	
   120  0076                     	ds	2
   121  0078                     ISR@ucTimer1sCnt:	
   122  0078                     	ds	1
   123  0079                     _adc_convert_flag:	
   124  0079                     	ds	1
   125  007A                     _timer:	
   126  007A                     	ds	1
   127                           
   128                           	psect	bssBANK0
   129  0020                     __pbssBANK0:	
   130  0020                     _buffer_Sample_AD_Value:	
   131  0020                     	ds	12
   132  002C                     _adc_original_CH12_value:	
   133  002C                     	ds	2
   134  002E                     _adc_original_CH13_value:	
   135  002E                     	ds	2
   136  0030                     _adc_original_value:	
   137  0030                     	ds	2
   138  0032                     _multiFilterMaxValue:	
   139  0032                     	ds	2
   140  0034                     _multiFilterMinValue:	
   141  0034                     	ds	2
   142  0036                     _uiSmallTimer:	
   143  0036                     	ds	2
   144  0038                     _sampleTimes:	
   145  0038                     	ds	1
   146  0039                     main@ampStep:	
   147  0039                     	ds	1
   148  003A                     main@tDA_timer:	
   149  003A                     	ds	1
   150  003B                     main@ucBigTimerActionFlag:	
   151  003B                     	ds	1
   152  003C                     main@ucCheckBatteryCnt:	
   153  003C                     	ds	1
   154  003D                     main@ucConfirmTimer1S:	
   155  003D                     	ds	1
   156  003E                     main@ucConfirmTimerZptS:	
   157  003E                     	ds	1
   158  003F                     main@ucInit:	
   159  003F                     	ds	1
   160  0040                     main@ucInstalledBatteryCnt:	
   161  0040                     	ds	1
   162                           
   163                           	psect	dataBANK0
   164  0046                     __pdataBANK0:	
   165  0046                     _sampleChannelSelect:	
   166  0046                     	ds	1
   167                           
   168                           	psect	clrtext
   169  0228                     clear_ram:	
   170                           ;	Called with FSR containing the base address, and
   171                           ;	W with the last address+1
   172                           
   173  0228  0064               	clrwdt	;clear the watchdog before getting into this loop
   174  0229                     clrloop:	
   175  0229  0180               	clrf	0	;clear RAM location pointed to by FSR
   176  022A  0A84               	incf	4,f	;increment pointer
   177  022B  0604               	xorwf	4,w	;XOR with final address
   178  022C  1903               	btfsc	3,2	;have we reached the end yet?
   179  022D  3400               	retlw	0	;all done for this memory range, return
   180  022E  0604               	xorwf	4,w	;XOR again to restore value
   181  022F  2A29               	goto	clrloop	;do the next byte
   182                           
   183                           	psect	cstackCOMMON
   184  0070                     __pcstackCOMMON:	
   185  0070                     ?_clock_config:	
   186  0070                     ?_timer1_config:	
   187                           ; 0 bytes @ 0x0
   188                           
   189  0070                     ?_timer1_interrupt_config:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0070                     ?_dac_init:	
   193                           ; 0 bytes @ 0x0
   194                           
   195  0070                     ?_op1_init:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_op2_init:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_adc_start:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_clrSampeTime:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_process_AD_Converter_Value:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_clearBigTimer:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_clearSmallTimer:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_startBigTimer:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_startSmallTimer:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_AD_Sample:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_main:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_setAD_ConvertFlag:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_ISR:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?i1_setAD_ConvertFlag:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ??i1_setAD_ConvertFlag:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_isPermitSampleTime:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_isFinishedBigTimer:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_isFinishedSmallTimer:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_getAD_ConvertFlag:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_adc_get:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     i1setAD_ConvertFlag@flag:	
   256                           ; 2 bytes @ 0x0
   257                           
   258                           
   259                           ; 1 bytes @ 0x0
   260  0070                     	ds	2
   261  0072                     ??_adc_get:	
   262  0072                     adc_get@val:	
   263                           ; 0 bytes @ 0x2
   264                           
   265                           
   266                           ; 2 bytes @ 0x2
   267  0072                     	ds	2
   268  0074                     ??_ISR:	
   269                           
   270                           ; 0 bytes @ 0x4
   271  0074                     	ds	2
   272                           
   273                           	psect	cstackBANK0
   274  0041                     __pcstackBANK0:	
   275  0041                     ??_clock_config:	
   276  0041                     ??_timer1_config:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0041                     ??_timer1_interrupt_config:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0041                     ?_adc_test_init:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0041                     ??_dac_init:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0041                     ??_op1_init:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0041                     ??_op2_init:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0041                     ??_adc_start:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0041                     ??_isPermitSampleTime:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0041                     ??_clrSampeTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0041                     ??_clearBigTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0041                     ??_clearSmallTimer:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0041                     ??_startBigTimer:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0041                     ??_startSmallTimer:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0041                     ??_isFinishedBigTimer:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0041                     ??_isFinishedSmallTimer:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0041                     ??_getAD_ConvertFlag:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0041                     ??_setAD_ConvertFlag:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0041                     ?_getAdOriginalCh12Value:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0041                     ?_getAdOriginalCh13Value:	
   331                           ; 2 bytes @ 0x0
   332                           
   333  0041                     ?_getAdOriginalValue:	
   334                           ; 2 bytes @ 0x0
   335                           
   336  0041                     setAD_ConvertFlag@flag:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  0041                     adc_test_init@ref:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344  0041                     	ds	1
   345  0042                     ??_adc_test_init:	
   346                           
   347                           ; 0 bytes @ 0x1
   348  0042                     	ds	1
   349  0043                     ??_getAdOriginalCh12Value:	
   350  0043                     ??_getAdOriginalCh13Value:	
   351                           ; 0 bytes @ 0x2
   352                           
   353  0043                     ??_AD_Sample:	
   354                           ; 0 bytes @ 0x2
   355                           
   356  0043                     ??_getAdOriginalValue:	
   357                           ; 0 bytes @ 0x2
   358                           
   359  0043                     adc_test_init@channel:	
   360                           ; 0 bytes @ 0x2
   361                           
   362                           
   363                           ; 1 bytes @ 0x2
   364  0043                     	ds	2
   365  0045                     AD_Sample@index:	
   366                           
   367                           ; 1 bytes @ 0x4
   368  0045                     	ds	1
   369  0046                     ??_process_AD_Converter_Value:	
   370  0046                     ??_main:	
   371                           ; 0 bytes @ 0x5
   372                           
   373                           
   374                           	psect	maintext
   375  000D                     __pmaintext:	
   376                           ; 0 bytes @ 0x5
   377 ;;Data sizes: Strings 0, constant 0, data 1, bss 38, persistent 0 stack 0
   378 ;;Auto spaces:   Size  Autos    Used
   379 ;; COMMON          14      6      11
   380 ;; BANK0           80      5      39
   381 ;; BANK1           80      0       0
   382 ;; BANK3           96      0       0
   383 ;; BANK2           96      0       0
   384 ;;
   385 ;; Pointer list with targets:
   386 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   387 ;;
   388 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   389 ;;
   390 ;; ?_getAdOriginalCh12Value	unsigned int  size(1) Largest target is 0
   391 ;;
   392 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   393 ;;
   394 ;;
   395 ;; Critical Paths under _main in COMMON
   396 ;;
   397 ;;   None.
   398 ;;
   399 ;; Critical Paths under _ISR in COMMON
   400 ;;
   401 ;;   _ISR->_adc_get
   402 ;;
   403 ;; Critical Paths under _main in BANK0
   404 ;;
   405 ;;   _process_AD_Converter_Value->_AD_Sample
   406 ;;   _AD_Sample->_getAdOriginalValue
   407 ;;
   408 ;; Critical Paths under _ISR in BANK0
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;; Critical Paths under _main in BANK1
   413 ;;
   414 ;;   None.
   415 ;;
   416 ;; Critical Paths under _ISR in BANK1
   417 ;;
   418 ;;   None.
   419 ;;
   420 ;; Critical Paths under _main in BANK3
   421 ;;
   422 ;;   None.
   423 ;;
   424 ;; Critical Paths under _ISR in BANK3
   425 ;;
   426 ;;   None.
   427 ;;
   428 ;; Critical Paths under _main in BANK2
   429 ;;
   430 ;;   None.
   431 ;;
   432 ;; Critical Paths under _ISR in BANK2
   433 ;;
   434 ;;   None.
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   437 ;;
   438 ;;
   439 ;;Call Graph Tables:
   440 ;;
   441 ;; ---------------------------------------------------------------------------------
   442 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   443 ;; ---------------------------------------------------------------------------------
   444 ;; (0) _main                                                 0     0      0     178
   445 ;;                       _clock_config
   446 ;;                      _timer1_config
   447 ;;            _timer1_interrupt_config
   448 ;;                      _adc_test_init
   449 ;;                           _dac_init
   450 ;;                           _op1_init
   451 ;;                           _op2_init
   452 ;;                          _adc_start
   453 ;;                 _isPermitSampleTime
   454 ;;                       _clrSampeTime
   455 ;;         _process_AD_Converter_Value
   456 ;;                      _clearBigTimer
   457 ;;                    _clearSmallTimer
   458 ;;             _getAdOriginalCh12Value
   459 ;;             _getAdOriginalCh13Value
   460 ;;                      _startBigTimer
   461 ;;                    _startSmallTimer
   462 ;;                 _isFinishedBigTimer
   463 ;;               _isFinishedSmallTimer
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   466 ;;                  _getAD_ConvertFlag
   467 ;;                  _setAD_ConvertFlag
   468 ;;                          _AD_Sample
   469 ;;                      _adc_test_init
   470 ;;                          _adc_start
   471 ;; ---------------------------------------------------------------------------------
   472 ;; (2) _AD_Sample                                            3     3      0      68
   473 ;;                                              2 BANK0      3     3      0
   474 ;;                 _getAdOriginalValue
   475 ;; ---------------------------------------------------------------------------------
   476 ;; (3) _getAdOriginalValue                                   2     0      2       0
   477 ;;                                              0 BANK0      2     0      2
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   480 ;;                                              0 BANK0      1     1      0
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   483 ;; ---------------------------------------------------------------------------------
   484 ;; (1) _isFinishedSmallTimer                                 0     0      0       0
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (1) _isFinishedBigTimer                                   0     0      0       0
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _startSmallTimer                                      0     0      0       0
   489 ;; ---------------------------------------------------------------------------------
   490 ;; (1) _startBigTimer                                        0     0      0       0
   491 ;; ---------------------------------------------------------------------------------
   492 ;; (1) _getAdOriginalCh13Value                               2     0      2       0
   493 ;;                                              0 BANK0      2     0      2
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (1) _getAdOriginalCh12Value                               2     0      2       0
   496 ;;                                              0 BANK0      2     0      2
   497 ;; ---------------------------------------------------------------------------------
   498 ;; (1) _clearSmallTimer                                      0     0      0       0
   499 ;; ---------------------------------------------------------------------------------
   500 ;; (1) _clearBigTimer                                        0     0      0       0
   501 ;; ---------------------------------------------------------------------------------
   502 ;; (1) _clrSampeTime                                         0     0      0       0
   503 ;; ---------------------------------------------------------------------------------
   504 ;; (1) _isPermitSampleTime                                   0     0      0       0
   505 ;; ---------------------------------------------------------------------------------
   506 ;; (2) _adc_start                                            0     0      0       0
   507 ;; ---------------------------------------------------------------------------------
   508 ;; (1) _op2_init                                             0     0      0       0
   509 ;; ---------------------------------------------------------------------------------
   510 ;; (1) _op1_init                                             0     0      0       0
   511 ;; ---------------------------------------------------------------------------------
   512 ;; (1) _dac_init                                             0     0      0       0
   513 ;; ---------------------------------------------------------------------------------
   514 ;; (2) _adc_test_init                                        3     2      1      44
   515 ;;                                              0 BANK0      3     2      1
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (1) _timer1_interrupt_config                              0     0      0       0
   518 ;; ---------------------------------------------------------------------------------
   519 ;; (1) _timer1_config                                        0     0      0       0
   520 ;; ---------------------------------------------------------------------------------
   521 ;; (1) _clock_config                                         0     0      0       0
   522 ;; ---------------------------------------------------------------------------------
   523 ;; Estimated maximum stack depth 3
   524 ;; ---------------------------------------------------------------------------------
   525 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   526 ;; ---------------------------------------------------------------------------------
   527 ;; (4) _ISR                                                  2     2      0      97
   528 ;;                                              4 COMMON     2     2      0
   529 ;;                i1_setAD_ConvertFlag
   530 ;;                            _adc_get
   531 ;; ---------------------------------------------------------------------------------
   532 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   533 ;;                                              0 COMMON     1     1      0
   534 ;; ---------------------------------------------------------------------------------
   535 ;; (5) _adc_get                                              4     2      2      24
   536 ;;                                              0 COMMON     4     2      2
   537 ;; ---------------------------------------------------------------------------------
   538 ;; Estimated maximum stack depth 5
   539 ;; ---------------------------------------------------------------------------------
   540 ;; Call Graph Graphs:
   541 ;; _main (ROOT)
   542 ;;   _clock_config
   543 ;;   _timer1_config
   544 ;;   _timer1_interrupt_config
   545 ;;   _adc_test_init
   546 ;;   _dac_init
   547 ;;   _op1_init
   548 ;;   _op2_init
   549 ;;   _adc_start
   550 ;;   _isPermitSampleTime
   551 ;;   _clrSampeTime
   552 ;;   _process_AD_Converter_Value
   553 ;;     _getAD_ConvertFlag
   554 ;;     _setAD_ConvertFlag
   555 ;;     _AD_Sample
   556 ;;       _getAdOriginalValue
   557 ;;     _adc_test_init
   558 ;;     _adc_start
   559 ;;   _clearBigTimer
   560 ;;   _clearSmallTimer
   561 ;;   _getAdOriginalCh12Value
   562 ;;   _getAdOriginalCh13Value
   563 ;;   _startBigTimer
   564 ;;   _startSmallTimer
   565 ;;   _isFinishedBigTimer
   566 ;;   _isFinishedSmallTimer
   567 ;;
   568 ;; _ISR (ROOT)
   569 ;;   i1_setAD_ConvertFlag
   570 ;;   _adc_get
   571 ;;
   572 ;; Address spaces:
   573 ;;Name               Size   Autos  Total    Cost      Usage
   574 ;;BANK3               60      0       0      10        0.0%
   575 ;;BITBANK3            60      0       0       9        0.0%
   576 ;;SFR3                 0      0       0       4        0.0%
   577 ;;BITSFR3              0      0       0       4        0.0%
   578 ;;BANK2               60      0       0      12        0.0%
   579 ;;BITBANK2            60      0       0      11        0.0%
   580 ;;SFR2                 0      0       0       5        0.0%
   581 ;;BITSFR2              0      0       0       5        0.0%
   582 ;;SFR1                 0      0       0       2        0.0%
   583 ;;BITSFR1              0      0       0       2        0.0%
   584 ;;BANK1               50      0       0       8        0.0%
   585 ;;BITBANK1            50      0       0       7        0.0%
   586 ;;CODE                 0      0       0       0        0.0%
   587 ;;DATA                 0      0      39       6        0.0%
   588 ;;ABS                  0      0      32       3        0.0%
   589 ;;NULL                 0      0       0       0        0.0%
   590 ;;STACK                0      0       7       2        0.0%
   591 ;;BANK0               50      5      27       5       48.8%
   592 ;;BITBANK0            50      0       0       4        0.0%
   593 ;;SFR0                 0      0       0       1        0.0%
   594 ;;BITSFR0              0      0       0       1        0.0%
   595 ;;COMMON               E      6       B       1       78.6%
   596 ;;BITCOMMON            E      0       0       0        0.0%
   597                           
   598                           
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 84 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;		None               void
   608 ;; Registers used:
   609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 17F/0
   612 ;;		On exit  : 60/0
   613 ;;		Unchanged: FFE00/0
   614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   615 ;;      Params:         0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels required when called:    5
   621 ;; This function calls:
   622 ;;		_clock_config
   623 ;;		_timer1_config
   624 ;;		_timer1_interrupt_config
   625 ;;		_adc_test_init
   626 ;;		_dac_init
   627 ;;		_op1_init
   628 ;;		_op2_init
   629 ;;		_adc_start
   630 ;;		_isPermitSampleTime
   631 ;;		_clrSampeTime
   632 ;;		_process_AD_Converter_Value
   633 ;;		_clearBigTimer
   634 ;;		_clearSmallTimer
   635 ;;		_getAdOriginalCh12Value
   636 ;;		_getAdOriginalCh13Value
   637 ;;		_startBigTimer
   638 ;;		_startSmallTimer
   639 ;;		_isFinishedBigTimer
   640 ;;		_isFinishedSmallTimer
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645  000D                     _main:	
   646                           
   647                           ;main.c: 85: enum step
   648                           ;main.c: 86: {
   649                           ;main.c: 87: SENSE_PB2_INPUT_VOLTAGE = 0,
   650                           ;main.c: 88: SENSE_PB2_DURATION_ONE_SECOND,
   651                           ;main.c: 89: SENSE_PB2_INPUT_VOLTAGE__AGAIN,
   652                           ;main.c: 90: SENSE_PB2_DURATION__SECOND,
   653                           ;main.c: 91: SET_PA2_VALUE,
   654                           ;main.c: 92: ADC1_VALUE_MEET_CONDITION,
   655                           ;main.c: 93: PROCESS_AD_VALUE,
   656                           ;main.c: 94: WAIT_SET_TIME_FINISHED,
   657                           ;main.c: 95: SET_TIME_BE_FINISHED,
   658                           ;main.c: 96: CHECKING_PULL_OUT_BATTERY,
   659                           ;main.c: 97: CHECKING_INSTALLED_BATTERY,
   660                           ;main.c: 98: };
   661                           ;main.c: 100: enum workTimerType
   662                           ;main.c: 101: {
   663                           
   664                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   665  000D  1683               	bsf	3,5	;RP0=1, select bank1
   666  000E  1005               	bcf	5,0
   667                           
   668                           ;main.c: 119: TRISA1 = 0;
   669  000F  1085               	bcf	5,1
   670                           
   671                           ;main.c: 120: TRISA3 = 0;
   672  0010  1185               	bcf	5,3
   673                           
   674                           ;main.c: 121: TRISA2 = 0;
   675  0011  1105               	bcf	5,2
   676                           
   677                           ;main.c: 122: TRISA6 = 0;
   678  0012  1305               	bcf	5,6
   679                           
   680                           ;main.c: 123: PA2 = 1;
   681  0013  1283               	bcf	3,5	;RP0=0, select bank0
   682  0014  1505               	bsf	5,2
   683                           
   684                           ;main.c: 124: PA0 = 1;
   685  0015  1405               	bsf	5,0
   686                           
   687                           ;main.c: 126: TRISB2 = 1;
   688  0016  1683               	bsf	3,5	;RP0=1, select bank1
   689  0017  1506               	bsf	6,2
   690                           
   691                           ;main.c: 128: TRISB1 = 1;
   692  0018  1486               	bsf	6,1
   693                           
   694                           ;main.c: 129: TRISB0 = 1;
   695  0019  1406               	bsf	6,0
   696                           
   697                           ;main.c: 131: clock_config();
   698  001A  118A  2230  118A   	fcall	_clock_config
   699                           
   700                           ;main.c: 132: timer1_config();
   701  001D  118A  2215  118A   	fcall	_timer1_config
   702                           
   703                           ;main.c: 133: timer1_interrupt_config();
   704  0020  118A  2266  118A   	fcall	_timer1_interrupt_config
   705                           
   706                           ;main.c: 135: adc_test_init(13,3);
   707  0023  3003               	movlw	3
   708  0024  1283               	bcf	3,5	;RP0=0, select bank0
   709  0025  00C1               	movwf	?_adc_test_init
   710  0026  300D               	movlw	13
   711  0027  118A  2170  118A   	fcall	_adc_test_init
   712                           
   713                           ;main.c: 137: dac_init();
   714  002A  118A  225B  118A   	fcall	_dac_init
   715                           
   716                           ;main.c: 138: op1_init();
   717  002D  118A  2209  118A   	fcall	_op1_init
   718                           
   719                           ;main.c: 139: op2_init();
   720  0030  118A  221F  118A   	fcall	_op2_init
   721                           
   722                           ;main.c: 142: adc_start();
   723  0033  118A  2184  118A   	fcall	_adc_start
   724                           
   725                           ;main.c: 155: switch(ampStep)
   726  0036  28D6               	goto	l3125
   727  0037                     l3133:	
   728                           
   729                           ;main.c: 158: {
   730                           ;main.c: 159: ucBigTimerActionFlag = 0;
   731  0037  01BB               	clrf	main@ucBigTimerActionFlag
   732                           
   733                           ;main.c: 160: clearBigTimer();
   734  0038  118A  2263  118A   	fcall	_clearBigTimer
   735                           
   736                           ;main.c: 161: clearSmallTimer();
   737  003B  118A  2260  118A   	fcall	_clearSmallTimer
   738  003E                     L1:	
   739                           
   740                           ;main.c: 162: if(!PB2)
   741  003E  1906               	btfsc	6,2
   742  003F  28D6               	goto	l3125
   743  0040                     l3141:	
   744                           
   745                           ;main.c: 163: ampStep++;
   746  0040  0AB9               	incf	main@ampStep,f
   747  0041  28D6               	goto	l3125
   748  0042                     l685:	
   749                           ;main.c: 165: }
   750                           ;main.c: 167: case SENSE_PB2_DURATION_ONE_SECOND:
   751                           
   752                           
   753                           ;main.c: 168: {
   754                           ;main.c: 169: static unsigned char ucConfirmTimer1S = 0;
   755                           ;main.c: 170: if(!PB2)
   756  0042  1906               	btfsc	6,2
   757  0043  2846               	goto	l3145
   758                           
   759                           ;main.c: 171: {
   760                           ;main.c: 172: ucConfirmTimer1S++;
   761  0044  0ABD               	incf	main@ucConfirmTimer1S,f
   762                           
   763                           ;main.c: 173: }
   764  0045  2847               	goto	l3147
   765  0046                     l3145:	
   766                           
   767                           ;main.c: 174: else
   768                           ;main.c: 175: {
   769                           ;main.c: 176: ucConfirmTimer1S = 0;
   770  0046  01BD               	clrf	main@ucConfirmTimer1S
   771  0047                     l3147:	
   772                           
   773                           ;main.c: 177: }
   774                           ;main.c: 179: if(ucConfirmTimer1S >= 10)
   775  0047  300A               	movlw	10
   776  0048  023D               	subwf	main@ucConfirmTimer1S,w
   777  0049  1C03               	skipc
   778  004A  28D6               	goto	l3125
   779                           
   780                           ;main.c: 180: {
   781                           ;main.c: 181: ucConfirmTimer1S = 0;
   782  004B  01BD               	clrf	main@ucConfirmTimer1S
   783  004C  2840               	goto	l3141
   784  004D                     l691:	
   785                           ;main.c: 186: }
   786                           ;main.c: 188: case SENSE_PB2_INPUT_VOLTAGE__AGAIN:
   787                           
   788                           
   789                           ;main.c: 189: {
   790                           ;main.c: 190: if(!PB2)
   791  004D  283E               	goto	L1
   792  004E                     l693:	
   793                           ;main.c: 193: }
   794                           ;main.c: 195: case SENSE_PB2_DURATION__SECOND:
   795                           
   796                           
   797                           ;main.c: 196: {
   798                           ;main.c: 197: static unsigned char ucConfirmTimerZptS = 0;
   799                           ;main.c: 198: if(!PB2)
   800  004E  1906               	btfsc	6,2
   801  004F  2852               	goto	l3157
   802                           
   803                           ;main.c: 199: {
   804                           ;main.c: 200: ucConfirmTimerZptS++;
   805  0050  0ABE               	incf	main@ucConfirmTimerZptS,f
   806                           
   807                           ;main.c: 201: }
   808  0051  2853               	goto	l3159
   809  0052                     l3157:	
   810                           
   811                           ;main.c: 202: else
   812                           ;main.c: 203: {
   813                           ;main.c: 204: ucConfirmTimerZptS = 0;
   814  0052  01BE               	clrf	main@ucConfirmTimerZptS
   815  0053                     l3159:	
   816                           
   817                           ;main.c: 205: }
   818                           ;main.c: 207: if(ucConfirmTimerZptS >= 10)
   819  0053  300A               	movlw	10
   820  0054  023E               	subwf	main@ucConfirmTimerZptS,w
   821  0055  1C03               	skipc
   822  0056  28D6               	goto	l3125
   823                           
   824                           ;main.c: 208: {
   825                           ;main.c: 209: ucConfirmTimerZptS = 0;
   826  0057  01BE               	clrf	main@ucConfirmTimerZptS
   827  0058  2840               	goto	l3141
   828  0059                     l699:	
   829                           ;main.c: 214: }
   830                           ;main.c: 216: case SET_PA2_VALUE:
   831                           
   832                           
   833                           ;main.c: 217: {
   834                           ;main.c: 218: PA2 = 0;
   835  0059  1105               	bcf	5,2
   836  005A  2840               	goto	l3141
   837  005B                     l3167:	
   838                           
   839                           ;main.c: 227: ucConFirmationTime++;
   840  005B  118A  2251  118A   	fcall	_getAdOriginalCh12Value
   841  005E  28D6               	goto	l3125
   842  005F                     l3171:	
   843                           
   844                           ;main.c: 234: {
   845                           ;main.c: 235: static unsigned char ucInit = 0;
   846                           ;main.c: 236: if(getAdOriginalCh13Value() > 36)
   847  005F  118A  224C  118A   	fcall	_getAdOriginalCh13Value
   848  0062  3000               	movlw	0
   849  0063  0242               	subwf	?_getAdOriginalCh13Value+1,w
   850  0064  3025               	movlw	37
   851  0065  1903               	skipnz
   852  0066  0241               	subwf	?_getAdOriginalCh13Value,w
   853  0067  1C03               	skipc
   854  0068  2878               	goto	l3183
   855  0069                     L3:	
   856                           
   857                           ;main.c: 237: {
   858                           ;main.c: 238: ucInit = 1;
   859  0069  01BF               	clrf	main@ucInit
   860  006A  0ABF               	incf	main@ucInit,f
   861                           
   862                           ;main.c: 239: PA0 = 0;
   863  006B  1005               	bcf	5,0
   864                           
   865                           ;main.c: 240: PA1 = 1;
   866  006C  1485               	bsf	5,1
   867                           
   868                           ;main.c: 241: PA3 = 1;
   869  006D  1585               	bsf	5,3
   870                           
   871                           ;main.c: 242: tDA_timer = BIG_TIMER_WORK;
   872  006E  01BA               	clrf	main@tDA_timer
   873                           
   874                           ;main.c: 244: if(!ucBigTimerActionFlag)
   875  006F  08BB               	movf	main@ucBigTimerActionFlag,f
   876  0070  1D03               	skipz
   877  0071  2840               	goto	l3141
   878                           
   879                           ;main.c: 245: {
   880                           ;main.c: 246: startBigTimer();
   881  0072  118A  2247  118A   	fcall	_startBigTimer
   882                           
   883                           ;main.c: 247: ucBigTimerActionFlag = 1;
   884  0075  01BB               	clrf	main@ucBigTimerActionFlag
   885  0076  0ABB               	incf	main@ucBigTimerActionFlag,f
   886  0077  2840               	goto	l3141
   887  0078                     l3183:	
   888                           
   889                           ;main.c: 250: else if(getAdOriginalCh13Value() <31)
   890  0078  118A  224C  118A   	fcall	_getAdOriginalCh13Value
   891  007B  3000               	movlw	0
   892  007C  0242               	subwf	?_getAdOriginalCh13Value+1,w
   893  007D  301F               	movlw	31
   894  007E  1903               	skipnz
   895  007F  0241               	subwf	?_getAdOriginalCh13Value,w
   896  0080  1803               	skipnc
   897  0081  288D               	goto	l3189
   898                           
   899                           ;main.c: 251: {
   900                           ;main.c: 252: ucInit = 1;
   901  0082  01BF               	clrf	main@ucInit
   902  0083  0ABF               	incf	main@ucInit,f
   903                           
   904                           ;main.c: 253: PA0 = 1;
   905  0084  1405               	bsf	5,0
   906                           
   907                           ;main.c: 254: PA1 = 0;
   908  0085  1085               	bcf	5,1
   909                           
   910                           ;main.c: 255: PA3 = 0;
   911  0086  1185               	bcf	5,3
   912                           
   913                           ;main.c: 259: ucSetSmallActionFlag = 1;
   914  0087  01BA               	clrf	main@tDA_timer
   915  0088  0ABA               	incf	main@tDA_timer,f
   916                           
   917                           ;main.c: 261: startSmallTimer();
   918  0089  118A  2242  118A   	fcall	_startSmallTimer
   919                           
   920                           ;main.c: 262: }
   921  008C  2840               	goto	l3141
   922  008D                     l3189:	
   923                           
   924                           ;main.c: 263: else
   925                           ;main.c: 264: {
   926                           ;main.c: 265: if(!ucInit)
   927  008D  08BF               	movf	main@ucInit,f
   928  008E  1D03               	skipz
   929  008F  2840               	goto	l3141
   930  0090  2869               	goto	L3
   931  0091                     l3203:	
   932                           ;main.c: 273: if(!ucBigTimerActionFlag)
   933                           
   934                           ;main.c: 271: tDA_timer = BIG_TIMER_WORK;
   935                           
   936                           ;main.c: 270: PA3 = 1;
   937                           
   938                           ;main.c: 269: PA1 = 1;
   939                           
   940                           ;main.c: 268: PA0 = 0;
   941                           
   942                           ;main.c: 266: {
   943                           ;main.c: 267: ucInit = 1;
   944                           
   945                           
   946                           ;main.c: 291: {
   947                           ;main.c: 292: if(!isFinishedBigTimer())
   948  0091  118A  223D  118A   	fcall	_isFinishedBigTimer
   949  0094  3800               	iorlw	0
   950  0095  1D03               	skipz
   951  0096  2840               	goto	l3141
   952  0097                     l3205:	
   953                           
   954                           ;main.c: 293: {
   955                           ;main.c: 294: ampStep = ADC1_VALUE_MEET_CONDITION;
   956  0097  3005               	movlw	5
   957  0098  00B9               	movwf	main@ampStep
   958                           
   959                           ;main.c: 295: }
   960  0099  28D6               	goto	l3125
   961  009A                     l3209:	
   962                           
   963                           ;main.c: 304: {
   964                           ;main.c: 305: if((ucBigTimerActionFlag == 1) && isFinishedBigTimer())
   965  009A  0B3B               	decfsz	main@ucBigTimerActionFlag,w
   966  009B  28A2               	goto	l3215
   967  009C  118A  223D  118A   	fcall	_isFinishedBigTimer
   968  009F  3A00               	xorlw	0
   969  00A0  1D03               	btfss	3,2
   970  00A1  2840               	goto	l3141
   971  00A2                     l3215:	
   972                           
   973                           ;main.c: 309: else if(!isFinishedSmallTimer())
   974  00A2  118A  2238  118A   	fcall	_isFinishedSmallTimer
   975  00A5  3800               	iorlw	0
   976  00A6  1D03               	skipz
   977  00A7  2840               	goto	l3141
   978                           
   979                           ;main.c: 315: ucSetSmallActionFlag = 0;
   980  00A8  118A  224C  118A   	fcall	_getAdOriginalCh13Value
   981  00AB  3000               	movlw	0
   982  00AC  0242               	subwf	?_getAdOriginalCh13Value+1,w
   983  00AD  3025               	movlw	37
   984  00AE  1903               	skipnz
   985  00AF  0241               	subwf	?_getAdOriginalCh13Value,w
   986  00B0  1803               	btfsc	3,0
   987  00B1  2897               	goto	l3205
   988  00B2  28D6               	goto	l3125
   989  00B3                     l3225:	
   990  00B3  083A               	movf	main@tDA_timer,w
   991                           
   992                           ; Switch size 1, requested type "space"
   993                           ; Number of cases is 2, Range of values is 0 to 1
   994                           ; switch strategies available:
   995                           ; Name         Instructions Cycles
   996                           ; simple_byte            7     4 (average)
   997                           ; direct_byte           11     7 (fixed)
   998                           ; jumptable            260     6 (fixed)
   999                           ; rangetable             6     6 (fixed)
  1000                           ; spacedrange           10     9 (fixed)
  1001                           ; locatedrange           2     3 (fixed)
  1002                           ;	Chosen strategy is simple_byte
  1003  00B4  3A00               	xorlw	0	; case 0
  1004  00B5  1903               	skipnz
  1005  00B6  2891               	goto	l3203
  1006  00B7  3A01               	xorlw	1	; case 1
  1007  00B8  1903               	skipnz
  1008  00B9  289A               	goto	l3209
  1009  00BA  28F1               	goto	l680
  1010  00BB                     l728:	
  1011                           ;main.c: 332: }
  1012                           ;main.c: 334: case SET_TIME_BE_FINISHED:
  1013                           
  1014                           
  1015                           ;main.c: 335: {
  1016                           ;main.c: 336: PA2 = 1;
  1017  00BB  1505               	bsf	5,2
  1018                           
  1019                           ;main.c: 337: PA0 = 0;
  1020  00BC  1005               	bcf	5,0
  1021                           
  1022                           ;main.c: 338: PA1 = 0;
  1023  00BD  1085               	bcf	5,1
  1024                           
  1025                           ;main.c: 342: ucSetSmallActionFlag = 0;
  1026  00BE  1185               	bcf	5,3
  1027  00BF  2840               	goto	l3141
  1028  00C0                     l729:	
  1029                           ;main.c: 346: }
  1030                           ;main.c: 348: case CHECKING_PULL_OUT_BATTERY:
  1031                           
  1032                           
  1033                           ;main.c: 349: {
  1034                           ;main.c: 350: static unsigned char ucCheckBatteryCnt = 0;
  1035                           ;main.c: 351: if(PB2)
  1036  00C0  1D06               	btfss	6,2
  1037  00C1  28C4               	goto	l3231
  1038                           
  1039                           ;main.c: 352: ucCheckBatteryCnt++;
  1040  00C2  0ABC               	incf	main@ucCheckBatteryCnt,f
  1041  00C3  28C5               	goto	l3233
  1042  00C4                     l3231:	
  1043                           
  1044                           ;main.c: 353: else
  1045                           ;main.c: 354: ucCheckBatteryCnt = 0;
  1046  00C4  01BC               	clrf	main@ucCheckBatteryCnt
  1047  00C5                     l3233:	
  1048                           
  1049                           ;main.c: 356: if(ucCheckBatteryCnt > 2)
  1050  00C5  3003               	movlw	3
  1051  00C6  023C               	subwf	main@ucCheckBatteryCnt,w
  1052  00C7  1C03               	skipc
  1053  00C8  28D6               	goto	l3125
  1054                           
  1055                           ;main.c: 357: {
  1056                           ;main.c: 358: ucCheckBatteryCnt = 0;
  1057  00C9  01BC               	clrf	main@ucCheckBatteryCnt
  1058  00CA  2840               	goto	l3141
  1059  00CB                     l735:	
  1060                           ;main.c: 362: }
  1061                           ;main.c: 364: case CHECKING_INSTALLED_BATTERY:
  1062                           
  1063                           
  1064                           ;main.c: 365: {
  1065                           ;main.c: 366: static unsigned char ucInstalledBatteryCnt = 0;
  1066                           ;main.c: 367: if(!PB2)
  1067  00CB  1906               	btfsc	6,2
  1068  00CC  28CF               	goto	l3241
  1069                           
  1070                           ;main.c: 368: ucInstalledBatteryCnt++;
  1071  00CD  0AC0               	incf	main@ucInstalledBatteryCnt,f
  1072  00CE  28D0               	goto	l3243
  1073  00CF                     l3241:	
  1074                           
  1075                           ;main.c: 369: else
  1076                           ;main.c: 370: ucInstalledBatteryCnt = 0;
  1077  00CF  01C0               	clrf	main@ucInstalledBatteryCnt
  1078  00D0                     l3243:	
  1079                           
  1080                           ;main.c: 372: if(ucInstalledBatteryCnt > 10)
  1081  00D0  300B               	movlw	11
  1082  00D1  0240               	subwf	main@ucInstalledBatteryCnt,w
  1083  00D2  1C03               	skipc
  1084  00D3  28D6               	goto	l3125
  1085                           
  1086                           ;main.c: 373: {
  1087                           ;main.c: 374: ucInstalledBatteryCnt = 0;
  1088  00D4  01C0               	clrf	main@ucInstalledBatteryCnt
  1089                           
  1090                           ;main.c: 375: ampStep = SENSE_PB2_INPUT_VOLTAGE;
  1091  00D5  01B9               	clrf	main@ampStep
  1092  00D6                     l3125:	
  1093  00D6  0064               	clrwdt	;#
  1094                           
  1095                           ;main.c: 150: if(isPermitSampleTime())
  1096  00D7  118A  2256  118A   	fcall	_isPermitSampleTime
  1097  00DA  3A00               	xorlw	0
  1098  00DB  1903               	skipnz
  1099  00DC  28D6               	goto	l3125
  1100                           
  1101                           ;main.c: 151: {
  1102                           ;main.c: 152: clrSampeTime();
  1103  00DD  118A  2269  118A   	fcall	_clrSampeTime
  1104                           
  1105                           ;main.c: 153: process_AD_Converter_Value();
  1106  00E0  118A  20F2  118A   	fcall	_process_AD_Converter_Value
  1107  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00E5  0839               	movf	main@ampStep,w
  1110                           
  1111                           ; Switch size 1, requested type "space"
  1112                           ; Number of cases is 11, Range of values is 0 to 10
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; direct_byte           29     7 (fixed)
  1116                           ; simple_byte           34    18 (average)
  1117                           ; jumptable            260     6 (fixed)
  1118                           ; rangetable            15     6 (fixed)
  1119                           ; spacedrange           28     9 (fixed)
  1120                           ; locatedrange          11     3 (fixed)
  1121                           ;	Chosen strategy is direct_byte
  1122  00E6  0084               	movwf	4
  1123  00E7  300B               	movlw	11
  1124  00E8  0204               	subwf	4,w
  1125  00E9  1803               	skipnc
  1126  00EA  28D6               	goto	l3125
  1127  00EB  3001               	movlw	high S3299
  1128  00EC  008A               	movwf	10
  1129  00ED  1003               	clrc
  1130  00EE  0D04               	rlf	4,w
  1131  00EF  3EE3               	addlw	low S3299
  1132  00F0  0082               	movwf	2
  1133  00F1                     l680:	
  1134  00F1  28D6               	goto	l3125
  1135  00F2                     __end_of_main:	
  1136                           
  1137                           	psect	swtext1
  1138  01E3                     __pswtext1:	
  1139  01E3                     S3299:	
  1140  01E3  118A  2837         	ljmp	l3133
  1141  01E5  118A  2842         	ljmp	l685
  1142  01E7  118A  284D         	ljmp	l691
  1143  01E9  118A  284E         	ljmp	l693
  1144  01EB  118A  2859         	ljmp	l699
  1145  01ED  118A  285B         	ljmp	l3167
  1146  01EF  118A  285F         	ljmp	l3171
  1147  01F1  118A  28B3         	ljmp	l3225
  1148  01F3  118A  28BB         	ljmp	l728
  1149  01F5  118A  28C0         	ljmp	l729
  1150  01F7  118A  28CB         	ljmp	l735
  1151                           
  1152                           	psect	text470
  1153  00F2                     __ptext470:	
  1154 ;; =============== function _main ends ============
  1155                           
  1156                           
  1157 ;; *************** function _process_AD_Converter_Value *****************
  1158 ;; Defined at:
  1159 ;;		line 94 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: FFE9F/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         0       0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		_getAD_ConvertFlag
  1182 ;;		_setAD_ConvertFlag
  1183 ;;		_AD_Sample
  1184 ;;		_adc_test_init
  1185 ;;		_adc_start
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190  00F2                     _process_AD_Converter_Value:	
  1191                           
  1192                           ;common.c: 65: return adc_convert_flag;
  1193                           
  1194                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1195                           
  1196                           ;common.c: 95: if(getAD_ConvertFlag())
  1197                           
  1198                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1199  00F2  0879               	movf	_adc_convert_flag,w
  1200  00F3  3A00               	xorlw	0
  1201  00F4  1903               	skipnz
  1202  00F5  0008               	return
  1203                           
  1204                           ;common.c: 96: {
  1205                           ;common.c: 97: setAD_ConvertFlag(0);
  1206  00F6  3000               	movlw	0
  1207  00F7  2109  118A         	fcall	_setAD_ConvertFlag
  1208                           
  1209                           ;common.c: 98: AD_Sample();
  1210  00F9  210E  118A         	fcall	_AD_Sample
  1211                           
  1212                           ;common.c: 99: if(1 == sampleChannelSelect)
  1213  00FB  0B46               	decfsz	_sampleChannelSelect,w
  1214  00FC  2901               	goto	l3105
  1215                           
  1216                           ;common.c: 100: adc_test_init(1,3);
  1217  00FD  3003               	movlw	3
  1218  00FE  00C1               	movwf	?_adc_test_init
  1219  00FF  3001               	movlw	1
  1220  0100  2904               	goto	L4
  1221  0101                     l3105:	
  1222                           
  1223                           ;common.c: 101: else
  1224                           ;common.c: 102: adc_test_init(13,3);
  1225  0101  3003               	movlw	3
  1226  0102  00C1               	movwf	?_adc_test_init
  1227  0103  300D               	movlw	13
  1228  0104                     L4:	
  1229  0104  2170  118A         	fcall	_adc_test_init
  1230                           
  1231                           ;common.c: 104: adc_start();
  1232  0106  2984               	ljmp	l2951
  1233  0107                     __end_of_process_AD_Converter_Value:	
  1234  0107                     __ptext474:	
  1235 ;; =============== function _setAD_ConvertFlag ends ============
  1236                           
  1237                           
  1238 ;; *************** function _getAD_ConvertFlag *****************
  1239 ;; Defined at:
  1240 ;;		line 64 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      unsigned char 
  1247 ;; Registers used:
  1248 ;;		wreg
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: FFFFF/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0
  1257 ;;      Totals:         0       0       0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    2
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_process_AD_Converter_Value
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267  0107                     _getAD_ConvertFlag:	
  1268                           
  1269                           ;common.c: 65: return adc_convert_flag;
  1270                           
  1271                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1272  0107  0879               	movf	_adc_convert_flag,w
  1273  0108  0008               	return
  1274  0109                     __end_of_getAD_ConvertFlag:	
  1275  0109                     __ptext473:	
  1276 ;; =============== function _getAdOriginalValue ends ============
  1277                           
  1278                           
  1279 ;; *************** function _setAD_ConvertFlag *****************
  1280 ;; Defined at:
  1281 ;;		line 70 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  flag            1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  flag            1    0[BANK0 ] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;		None               void
  1288 ;; Registers used:
  1289 ;;		wreg
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 60/0
  1293 ;;		Unchanged: FFF9F/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         0       1       0       0       0
  1297 ;;      Temps:          0       0       0       0       0
  1298 ;;      Totals:         0       1       0       0       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    2
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_process_AD_Converter_Value
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308  0109                     _setAD_ConvertFlag:	
  1309                           
  1310                           ; Regs used in _setAD_ConvertFlag: [wreg]
  1311                           ;setAD_ConvertFlag@flag stored from wreg
  1312  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1313  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1314  010B  00C1               	movwf	setAD_ConvertFlag@flag
  1315                           
  1316                           ;common.c: 71: adc_convert_flag = flag;
  1317  010C  00F9               	movwf	_adc_convert_flag
  1318  010D  0008               	return
  1319  010E                     __end_of_setAD_ConvertFlag:	
  1320  010E                     __ptext471:	
  1321 ;; =============== function _process_AD_Converter_Value ends ============
  1322                           
  1323                           
  1324 ;; *************** function _AD_Sample *****************
  1325 ;; Defined at:
  1326 ;;		line 118 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  index           1    4[BANK0 ] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;		None               void
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 60/0
  1337 ;;		On exit  : 60/0
  1338 ;;		Unchanged: FFE9F/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         0       1       0       0       0
  1342 ;;      Temps:          0       2       0       0       0
  1343 ;;      Totals:         0       3       0       0       0
  1344 ;;Total ram usage:        3 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    3
  1347 ;; This function calls:
  1348 ;;		_getAdOriginalValue
  1349 ;; This function is called by:
  1350 ;;		_process_AD_Converter_Value
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353  010E                     _AD_Sample:	
  1354                           
  1355                           ;common.c: 119: if(sampleTimes < 6)
  1356                           
  1357                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1358  010E  3006               	movlw	6
  1359  010F  0238               	subwf	_sampleTimes,w
  1360  0110  1803               	skipnc
  1361  0111  0008               	return
  1362                           
  1363                           ;common.c: 120: {
  1364                           ;common.c: 122: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  1365  0112  216B  118A         	fcall	_getAdOriginalValue
  1366  0114  1003               	clrc
  1367  0115  0D38               	rlf	_sampleTimes,w
  1368  0116  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1369  0117  0084               	movwf	4
  1370  0118  0841               	movf	?_getAdOriginalValue,w
  1371  0119  1383               	bcf	3,7	;select IRP bank0
  1372  011A  0080               	movwf	0
  1373  011B  0A84               	incf	4,f
  1374  011C  0842               	movf	?_getAdOriginalValue+1,w
  1375  011D  0080               	movwf	0
  1376                           
  1377                           ;common.c: 124: if(sampleTimes == 0)
  1378  011E  08B8               	movf	_sampleTimes,f
  1379  011F  1D03               	skipz
  1380  0120  2929               	goto	l3061
  1381                           
  1382                           ;common.c: 125: {
  1383                           ;common.c: 126: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  1384  0121  0821               	movf	_buffer_Sample_AD_Value+1,w
  1385  0122  00B3               	movwf	_multiFilterMaxValue+1
  1386  0123  0820               	movf	_buffer_Sample_AD_Value,w
  1387  0124  00B2               	movwf	_multiFilterMaxValue
  1388                           
  1389                           ;common.c: 127: multiFilterMinValue = buffer_Sample_AD_Value[0];
  1390  0125  0821               	movf	_buffer_Sample_AD_Value+1,w
  1391  0126  00B5               	movwf	_multiFilterMinValue+1
  1392  0127  0820               	movf	_buffer_Sample_AD_Value,w
  1393  0128  00B4               	movwf	_multiFilterMinValue
  1394  0129                     l3061:	
  1395                           
  1396                           ;common.c: 128: }
  1397                           ;common.c: 130: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  1398  0129  2187  118A         	fcall	PL2	;call to abstracted procedure
  1399  012B  0233               	subwf	_multiFilterMaxValue+1,w
  1400  012C  1D03               	skipz
  1401  012D  2930               	goto	u535
  1402  012E  0843               	movf	??_AD_Sample,w
  1403  012F  0232               	subwf	_multiFilterMaxValue,w
  1404  0130                     u535:	
  1405  0130  1803               	skipnc
  1406  0131  293B               	goto	l1442
  1407                           
  1408                           ;common.c: 131: {
  1409                           ;common.c: 132: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  1410  0132  1003               	clrc
  1411  0133  0D38               	rlf	_sampleTimes,w
  1412  0134  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1413  0135  0084               	movwf	4
  1414  0136  0800               	movf	0,w
  1415  0137  00B2               	movwf	_multiFilterMaxValue
  1416  0138  0A84               	incf	4,f
  1417  0139  0800               	movf	0,w
  1418  013A  00B3               	movwf	_multiFilterMaxValue+1
  1419  013B                     l1442:	
  1420                           
  1421                           ;common.c: 133: }
  1422                           ;common.c: 134: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  1423  013B  2187  118A         	fcall	PL2	;call to abstracted procedure
  1424  013D  0835               	movf	_multiFilterMinValue+1,w
  1425  013E  0244               	subwf	??_AD_Sample+1,w
  1426  013F  1D03               	skipz
  1427  0140  2943               	goto	u545
  1428  0141  0834               	movf	_multiFilterMinValue,w
  1429  0142  0243               	subwf	??_AD_Sample,w
  1430  0143                     u545:	
  1431  0143  1803               	skipnc
  1432  0144  294E               	goto	l3067
  1433                           
  1434                           ;common.c: 135: {
  1435                           ;common.c: 136: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  1436  0145  1003               	clrc
  1437  0146  0D38               	rlf	_sampleTimes,w
  1438  0147  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1439  0148  0084               	movwf	4
  1440  0149  0800               	movf	0,w
  1441  014A  00B4               	movwf	_multiFilterMinValue
  1442  014B  0A84               	incf	4,f
  1443  014C  0800               	movf	0,w
  1444  014D  00B5               	movwf	_multiFilterMinValue+1
  1445  014E                     l3067:	
  1446  014E  3006               	movlw	6
  1447                           
  1448                           ;common.c: 141: sampleTimes++;
  1449  014F  0AB8               	incf	_sampleTimes,f
  1450                           
  1451                           ;common.c: 143: if(sampleTimes >= 6)
  1452  0150  0238               	subwf	_sampleTimes,w
  1453  0151  1C03               	skipc
  1454  0152  0008               	return
  1455                           
  1456                           ;common.c: 144: {
  1457                           ;common.c: 145: sampleTimes = 0;
  1458  0153  01B8               	clrf	_sampleTimes
  1459                           
  1460                           ;common.c: 148: {
  1461                           ;common.c: 150: sampleCH13Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  1462  0154  0846               	movf	_sampleChannelSelect,w
  1463  0155  3A0D               	xorlw	13
  1464  0156  1D03               	skipz
  1465  0157  295B               	goto	l3079
  1466                           
  1467                           ;common.c: 151: sampleChannelSelect = 1;
  1468  0158  01C6               	clrf	_sampleChannelSelect
  1469  0159  0AC6               	incf	_sampleChannelSelect,f
  1470                           
  1471                           ;common.c: 152: }
  1472  015A  295D               	goto	l3083
  1473  015B                     l3079:	
  1474                           
  1475                           ;common.c: 156: sampleChannelSelect = 13;
  1476  015B  300D               	movlw	13
  1477  015C  00C6               	movwf	_sampleChannelSelect
  1478  015D                     l3083:	
  1479                           ;common.c: 157: }
  1480                           
  1481                           
  1482                           ;common.c: 162: }
  1483                           ;common.c: 164: for(unsigned char index = 0; index < 6;index++)
  1484  015D  01C5               	clrf	AD_Sample@index
  1485  015E                     l3089:	
  1486                           
  1487                           ;common.c: 165: buffer_Sample_AD_Value[index] = 0;
  1488  015E  1003               	clrc
  1489  015F  0D45               	rlf	AD_Sample@index,w
  1490  0160  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1491  0161  0084               	movwf	4
  1492  0162  3006               	movlw	6
  1493  0163  0180               	clrf	0
  1494  0164  0A84               	incf	4,f
  1495  0165  0180               	clrf	0
  1496  0166  0AC5               	incf	AD_Sample@index,f
  1497  0167  0245               	subwf	AD_Sample@index,w
  1498  0168  1803               	btfsc	3,0
  1499  0169  0008               	return
  1500  016A  295E               	goto	l3089
  1501  016B                     __end_of_AD_Sample:	
  1502  016B                     __ptext472:	
  1503 ;; =============== function _AD_Sample ends ============
  1504                           
  1505                           
  1506 ;; *************** function _getAdOriginalValue *****************
  1507 ;; Defined at:
  1508 ;;		line 76 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2    0[BANK0 ] unsigned int 
  1515 ;; Registers used:
  1516 ;;		wreg
  1517 ;; Tracked objects:
  1518 ;;		On entry : 60/0
  1519 ;;		On exit  : 60/0
  1520 ;;		Unchanged: FFF9F/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       2       0       0       0
  1523 ;;      Locals:         0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0
  1525 ;;      Totals:         0       2       0       0       0
  1526 ;;Total ram usage:        2 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    2
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_AD_Sample
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535  016B                     _getAdOriginalValue:	
  1536                           
  1537                           ;common.c: 77: return adc_original_value;
  1538                           
  1539                           ; Regs used in _getAdOriginalValue: [wreg]
  1540  016B  0831               	movf	_adc_original_value+1,w
  1541  016C  00C2               	movwf	?_getAdOriginalValue+1
  1542  016D  0830               	movf	_adc_original_value,w
  1543  016E  00C1               	movwf	?_getAdOriginalValue
  1544  016F  0008               	return
  1545  0170                     __end_of_getAdOriginalValue:	
  1546  0170                     __ptext489:	
  1547 ;; =============== function _dac_init ends ============
  1548                           
  1549                           
  1550 ;; *************** function _adc_test_init *****************
  1551 ;; Defined at:
  1552 ;;		line 85 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  channel         1    wreg     unsigned char 
  1555 ;;  ref             1    0[BANK0 ] unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  channel         1    2[BANK0 ] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;		None               void
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 60/0
  1564 ;;		On exit  : 60/20
  1565 ;;		Unchanged: FFF9F/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         0       1       0       0       0
  1568 ;;      Locals:         0       1       0       0       0
  1569 ;;      Temps:          0       1       0       0       0
  1570 ;;      Totals:         0       3       0       0       0
  1571 ;;Total ram usage:        3 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    2
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;;		_process_AD_Converter_Value
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581  0170                     _adc_test_init:	
  1582                           
  1583                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  1584                           ;adc_test_init@channel stored from wreg
  1585  0170  00C3               	movwf	adc_test_init@channel
  1586                           
  1587                           ;periph.c: 86: ADCON0|=channel<<2;
  1588  0171  00C2               	movwf	??_adc_test_init
  1589  0172  1003               	clrc
  1590  0173  0DC2               	rlf	??_adc_test_init,f
  1591  0174  1003               	clrc
  1592  0175  0D42               	rlf	??_adc_test_init,w
  1593  0176  049F               	iorwf	31,f	;volatile
  1594                           
  1595                           ;periph.c: 87: ADCON1|=ref<<6;
  1596  0177  0841               	movf	adc_test_init@ref,w
  1597  0178  00C2               	movwf	??_adc_test_init
  1598  0179  0CC2               	rrf	??_adc_test_init,f
  1599  017A  0CC2               	rrf	??_adc_test_init,f
  1600  017B  0C42               	rrf	??_adc_test_init,w
  1601  017C  39C0               	andlw	192
  1602  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1603  017E  049F               	iorwf	31,f	;volatile
  1604                           
  1605                           ;periph.c: 88: ADON=1;
  1606  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0180  141F               	bsf	31,0
  1608                           
  1609                           ;periph.c: 89: ADIE=1;
  1610  0181  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0182  150D               	bsf	13,2
  1612  0183  0008               	return
  1613  0184                     __end_of_adc_test_init:	
  1614  0184                     __ptext485:	
  1615 ;; =============== function _isPermitSampleTime ends ============
  1616                           
  1617                           
  1618 ;; *************** function _adc_start *****************
  1619 ;; Defined at:
  1620 ;;		line 99 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;		None               void
  1627 ;; Registers used:
  1628 ;;		None
  1629 ;; Tracked objects:
  1630 ;;		On entry : 60/20
  1631 ;;		On exit  : 60/0
  1632 ;;		Unchanged: FFF9F/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    2
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;;		_process_AD_Converter_Value
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648  0184                     _adc_start:	
  1649  0184                     l2951:	
  1650                           ; Regs used in _adc_start: []
  1651                           
  1652                           
  1653                           ;periph.c: 100: GO=1;
  1654  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0185  149F               	bsf	31,1
  1656  0186  0008               	return
  1657  0187                     __end_of_adc_start:	
  1658  0187                     PL2:	
  1659  0187  1003               	clrc
  1660  0188  0D38               	rlf	_sampleTimes,w
  1661  0189  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1662  018A  0084               	movwf	4
  1663  018B  0800               	movf	0,w
  1664  018C  00C3               	movwf	??_AD_Sample
  1665  018D  0A84               	incf	4,f
  1666  018E  0800               	movf	0,w
  1667  018F  00C4               	movwf	??_AD_Sample+1
  1668  0190  0008               	return
  1669                           
  1670                           	psect	text475
  1671  0238                     __ptext475:	
  1672 ;; =============== function _getAD_ConvertFlag ends ============
  1673                           
  1674                           
  1675 ;; *************** function _isFinishedSmallTimer *****************
  1676 ;; Defined at:
  1677 ;;		line 230 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      unsigned char 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 60/0
  1688 ;;		On exit  : 60/0
  1689 ;;		Unchanged: FFF9F/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    2
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704  0238                     _isFinishedSmallTimer:	
  1705                           
  1706                           ;common.c: 231: if(uiSmallTimer == 0)
  1707                           
  1708                           ; Regs used in _isFinishedSmallTimer: [wreg+status,2+status,0]
  1709  0238  0837               	movf	_uiSmallTimer+1,w
  1710  0239  0436               	iorwf	_uiSmallTimer,w
  1711  023A  1903               	btfsc	3,2
  1712                           
  1713                           ;common.c: 232: return 1;
  1714  023B  3401               	retlw	1
  1715                           
  1716                           ;common.c: 233: else
  1717                           ;common.c: 234: return 0;
  1718  023C  3400               	retlw	0
  1719  023D                     __end_of_isFinishedSmallTimer:	
  1720                           
  1721                           	psect	text476
  1722  023D                     __ptext476:	
  1723 ;; =============== function _isFinishedSmallTimer ends ============
  1724                           
  1725                           
  1726 ;; *************** function _isFinishedBigTimer *****************
  1727 ;; Defined at:
  1728 ;;		line 222 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0
  1737 ;; Tracked objects:
  1738 ;;		On entry : 60/0
  1739 ;;		On exit  : 60/0
  1740 ;;		Unchanged: FFF9F/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    2
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755  023D                     _isFinishedBigTimer:	
  1756                           
  1757                           ;common.c: 223: if(uiBigTimer == 0)
  1758                           
  1759                           ; Regs used in _isFinishedBigTimer: [wreg+status,2+status,0]
  1760  023D  0877               	movf	_uiBigTimer+1,w
  1761  023E  0476               	iorwf	_uiBigTimer,w
  1762  023F  1903               	btfsc	3,2
  1763                           
  1764                           ;common.c: 224: return 1;
  1765  0240  3401               	retlw	1
  1766                           
  1767                           ;common.c: 225: else
  1768                           ;common.c: 226: return 0;
  1769  0241  3400               	retlw	0
  1770  0242                     __end_of_isFinishedBigTimer:	
  1771                           
  1772                           	psect	text477
  1773  0242                     __ptext477:	
  1774 ;; =============== function _isFinishedBigTimer ends ============
  1775                           
  1776                           
  1777 ;; *************** function _startSmallTimer *****************
  1778 ;; Defined at:
  1779 ;;		line 212 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;		None               void
  1786 ;; Registers used:
  1787 ;;		wreg
  1788 ;; Tracked objects:
  1789 ;;		On entry : 60/0
  1790 ;;		On exit  : 60/0
  1791 ;;		Unchanged: FFF9F/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    2
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806  0242                     _startSmallTimer:	
  1807                           
  1808                           ;common.c: 213: uiSmallTimer = 3600;
  1809                           
  1810                           ; Regs used in _startSmallTimer: [wreg]
  1811  0242  3010               	movlw	16
  1812  0243  00B6               	movwf	_uiSmallTimer
  1813  0244  300E               	movlw	14
  1814  0245  00B7               	movwf	_uiSmallTimer+1
  1815  0246  0008               	return
  1816  0247                     __end_of_startSmallTimer:	
  1817                           
  1818                           	psect	text478
  1819  0247                     __ptext478:	
  1820 ;; =============== function _startSmallTimer ends ============
  1821                           
  1822                           
  1823 ;; *************** function _startBigTimer *****************
  1824 ;; Defined at:
  1825 ;;		line 190 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;		None               void
  1832 ;; Registers used:
  1833 ;;		wreg
  1834 ;; Tracked objects:
  1835 ;;		On entry : 60/0
  1836 ;;		On exit  : 60/0
  1837 ;;		Unchanged: FFF9F/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0
  1842 ;;      Totals:         0       0       0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852  0247                     _startBigTimer:	
  1853                           
  1854                           ;common.c: 191: uiBigTimer = 32400;
  1855                           
  1856                           ; Regs used in _startBigTimer: [wreg]
  1857  0247  3090               	movlw	144
  1858  0248  00F6               	movwf	_uiBigTimer
  1859  0249  307E               	movlw	126
  1860  024A  00F7               	movwf	_uiBigTimer+1
  1861  024B  0008               	return
  1862  024C                     __end_of_startBigTimer:	
  1863                           
  1864                           	psect	text479
  1865  024C                     __ptext479:	
  1866 ;; =============== function _startBigTimer ends ============
  1867                           
  1868                           
  1869 ;; *************** function _getAdOriginalCh13Value *****************
  1870 ;; Defined at:
  1871 ;;		line 87 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    0[BANK0 ] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg
  1880 ;; Tracked objects:
  1881 ;;		On entry : 60/0
  1882 ;;		On exit  : 60/0
  1883 ;;		Unchanged: FFF9F/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       2       0       0       0
  1886 ;;      Locals:         0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         0       2       0       0       0
  1889 ;;Total ram usage:        2 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    2
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898  024C                     _getAdOriginalCh13Value:	
  1899                           
  1900                           ;common.c: 88: return adc_original_CH13_value;
  1901                           
  1902                           ; Regs used in _getAdOriginalCh13Value: [wreg]
  1903  024C  082F               	movf	_adc_original_CH13_value+1,w
  1904  024D  00C2               	movwf	?_getAdOriginalCh13Value+1
  1905  024E  082E               	movf	_adc_original_CH13_value,w
  1906  024F  00C1               	movwf	?_getAdOriginalCh13Value
  1907  0250  0008               	return
  1908  0251                     __end_of_getAdOriginalCh13Value:	
  1909                           
  1910                           	psect	text480
  1911  0251                     __ptext480:	
  1912 ;; =============== function _getAdOriginalCh13Value ends ============
  1913                           
  1914                           
  1915 ;; *************** function _getAdOriginalCh12Value *****************
  1916 ;; Defined at:
  1917 ;;		line 81 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    0[BANK0 ] unsigned int 
  1924 ;; Registers used:
  1925 ;;		wreg
  1926 ;; Tracked objects:
  1927 ;;		On entry : 60/0
  1928 ;;		On exit  : 60/0
  1929 ;;		Unchanged: FFF9F/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       2       0       0       0
  1932 ;;      Locals:         0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         0       2       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    2
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944  0251                     _getAdOriginalCh12Value:	
  1945                           
  1946                           ;common.c: 82: return adc_original_CH12_value;
  1947                           
  1948                           ; Regs used in _getAdOriginalCh12Value: [wreg]
  1949  0251  082D               	movf	_adc_original_CH12_value+1,w
  1950  0252  00C2               	movwf	?_getAdOriginalCh12Value+1
  1951  0253  082C               	movf	_adc_original_CH12_value,w
  1952  0254  00C1               	movwf	?_getAdOriginalCh12Value
  1953  0255  0008               	return
  1954  0256                     __end_of_getAdOriginalCh12Value:	
  1955                           
  1956                           	psect	text481
  1957  0260                     __ptext481:	
  1958 ;; =============== function _getAdOriginalCh12Value ends ============
  1959                           
  1960                           
  1961 ;; *************** function _clearSmallTimer *****************
  1962 ;; Defined at:
  1963 ;;		line 206 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		status,2
  1972 ;; Tracked objects:
  1973 ;;		On entry : 60/0
  1974 ;;		On exit  : 60/0
  1975 ;;		Unchanged: FFF9F/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1977 ;;      Params:         0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    2
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990  0260                     _clearSmallTimer:	
  1991                           
  1992                           ;common.c: 207: uiSmallTimer = 0;
  1993                           
  1994                           ; Regs used in _clearSmallTimer: [status,2]
  1995  0260  01B6               	clrf	_uiSmallTimer
  1996  0261  01B7               	clrf	_uiSmallTimer+1
  1997  0262  0008               	return
  1998  0263                     __end_of_clearSmallTimer:	
  1999                           
  2000                           	psect	text482
  2001  0263                     __ptext482:	
  2002 ;; =============== function _clearSmallTimer ends ============
  2003                           
  2004                           
  2005 ;; *************** function _clearBigTimer *****************
  2006 ;; Defined at:
  2007 ;;		line 200 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;		None               void
  2014 ;; Registers used:
  2015 ;;		status,2
  2016 ;; Tracked objects:
  2017 ;;		On entry : 60/0
  2018 ;;		On exit  : 60/0
  2019 ;;		Unchanged: FFF9F/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    2
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034  0263                     _clearBigTimer:	
  2035                           
  2036                           ;common.c: 201: uiBigTimer = 0;
  2037                           
  2038                           ; Regs used in _clearBigTimer: [status,2]
  2039  0263  01F6               	clrf	_uiBigTimer
  2040  0264  01F7               	clrf	_uiBigTimer+1
  2041  0265  0008               	return
  2042  0266                     __end_of_clearBigTimer:	
  2043                           
  2044                           	psect	text483
  2045  0269                     __ptext483:	
  2046 ;; =============== function _clearBigTimer ends ============
  2047                           
  2048                           
  2049 ;; *************** function _clrSampeTime *****************
  2050 ;; Defined at:
  2051 ;;		line 248 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;		None               void
  2058 ;; Registers used:
  2059 ;;		status,2
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: FFFFF/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    2
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078  0269                     _clrSampeTime:	
  2079                           
  2080                           ;common.c: 249: timer.timer10msStopWatch = 0;
  2081                           
  2082                           ; Regs used in _clrSampeTime: [status,2]
  2083  0269  01FA               	clrf	_timer
  2084  026A  0008               	return
  2085  026B                     __end_of_clrSampeTime:	
  2086                           
  2087                           	psect	text484
  2088  0256                     __ptext484:	
  2089 ;; =============== function _clrSampeTime ends ============
  2090                           
  2091                           
  2092 ;; *************** function _isPermitSampleTime *****************
  2093 ;; Defined at:
  2094 ;;		line 238 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      unsigned char 
  2101 ;; Registers used:
  2102 ;;		wreg
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: FFFFF/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0
  2111 ;;      Totals:         0       0       0       0       0
  2112 ;;Total ram usage:        0 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    2
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121  0256                     _isPermitSampleTime:	
  2122                           
  2123                           ;common.c: 239: if(timer.timer10msStopWatch > 10)
  2124                           
  2125                           ; Regs used in _isPermitSampleTime: [wreg]
  2126  0256  300B               	movlw	11
  2127  0257  027A               	subwf	_timer,w
  2128  0258  1803               	btfsc	3,0
  2129                           
  2130                           ;common.c: 240: {
  2131                           ;common.c: 241: return 1;
  2132  0259  3401               	retlw	1
  2133                           
  2134                           ;common.c: 243: else
  2135                           ;common.c: 244: return 0;
  2136  025A  3400               	retlw	0
  2137  025B                     __end_of_isPermitSampleTime:	
  2138                           
  2139                           	psect	text486
  2140  021F                     __ptext486:	
  2141 ;; =============== function _adc_start ends ============
  2142                           
  2143                           
  2144 ;; *************** function _op2_init *****************
  2145 ;; Defined at:
  2146 ;;		line 45 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		wreg, status,2
  2155 ;; Tracked objects:
  2156 ;;		On entry : 17F/20
  2157 ;;		On exit  : 17F/20
  2158 ;;		Unchanged: FFE80/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    2
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173  021F                     _op2_init:	
  2174                           
  2175                           ;periph.c: 52: OP2CON1=0x00;
  2176                           
  2177                           ; Regs used in _op2_init: [wreg+status,2]
  2178  021F  019C               	clrf	28	;volatile
  2179                           
  2180                           ;periph.c: 54: OP2CON2=0xA0;
  2181  0220  30A0               	movlw	160
  2182  0221  009D               	movwf	29	;volatile
  2183                           
  2184                           ;periph.c: 55: OP2CON0=0x80;
  2185  0222  3080               	movlw	128
  2186  0223  009B               	movwf	27	;volatile
  2187                           
  2188                           ;periph.c: 58: TRISA7=0;
  2189  0224  1385               	bcf	5,7
  2190                           
  2191                           ;periph.c: 59: TRISB6=1;
  2192  0225  1706               	bsf	6,6
  2193                           
  2194                           ;periph.c: 60: TRISB7 = 1;
  2195  0226  1786               	bsf	6,7
  2196  0227  0008               	return
  2197  0228                     __end_of_op2_init:	
  2198                           
  2199                           	psect	text487
  2200  0209                     __ptext487:	
  2201 ;; =============== function _op2_init ends ============
  2202                           
  2203                           
  2204 ;; *************** function _op1_init *****************
  2205 ;; Defined at:
  2206 ;;		line 26 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg
  2215 ;; Tracked objects:
  2216 ;;		On entry : 17F/20
  2217 ;;		On exit  : 17F/20
  2218 ;;		Unchanged: FFE80/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0
  2223 ;;      Totals:         0       0       0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    2
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233  0209                     _op1_init:	
  2234                           
  2235                           ;periph.c: 33: OP1CON1=0x02;
  2236                           
  2237                           ; Regs used in _op1_init: [wreg]
  2238  0209  3002               	movlw	2
  2239  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2240  020B  009C               	movwf	28	;volatile
  2241                           
  2242                           ;periph.c: 34: OP1CON2=0xA0;
  2243  020C  30A0               	movlw	160
  2244  020D  009D               	movwf	29	;volatile
  2245                           
  2246                           ;periph.c: 35: OP1CON0=0x80;
  2247  020E  3080               	movlw	128
  2248  020F  009B               	movwf	27	;volatile
  2249                           
  2250                           ;periph.c: 38: TRISB3=1;
  2251  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2252  0211  1586               	bsf	6,3
  2253                           
  2254                           ;periph.c: 39: TRISB4=1;
  2255  0212  1606               	bsf	6,4
  2256                           
  2257                           ;periph.c: 40: TRISB5=0;
  2258  0213  1286               	bcf	6,5
  2259  0214  0008               	return
  2260  0215                     __end_of_op1_init:	
  2261                           
  2262                           	psect	text488
  2263  025B                     __ptext488:	
  2264 ;; =============== function _op1_init ends ============
  2265                           
  2266                           
  2267 ;; *************** function _dac_init *****************
  2268 ;; Defined at:
  2269 ;;		line 14 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg
  2278 ;; Tracked objects:
  2279 ;;		On entry : 17F/20
  2280 ;;		On exit  : 17F/20
  2281 ;;		Unchanged: FFE80/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    2
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296  025B                     _dac_init:	
  2297                           
  2298                           ;periph.c: 15: DACCON|=2;
  2299                           
  2300                           ; Regs used in _dac_init: [wreg]
  2301  025B  1487               	bsf	7,1	;volatile
  2302                           
  2303                           ;periph.c: 17: DACR0=0x19;
  2304  025C  3019               	movlw	25
  2305  025D  0088               	movwf	8	;volatile
  2306                           
  2307                           ;periph.c: 18: DACCON|=(1)<<2;
  2308  025E  1507               	bsf	7,2	;volatile
  2309  025F  0008               	return
  2310  0260                     __end_of_dac_init:	
  2311                           
  2312                           	psect	text490
  2313  0266                     __ptext490:	
  2314 ;; =============== function _adc_test_init ends ============
  2315                           
  2316                           
  2317 ;; *************** function _timer1_interrupt_config *****************
  2318 ;; Defined at:
  2319 ;;		line 56 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;		None               void
  2326 ;; Registers used:
  2327 ;;		None
  2328 ;; Tracked objects:
  2329 ;;		On entry : 17F/20
  2330 ;;		On exit  : 17F/20
  2331 ;;		Unchanged: FFE80/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    2
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346  0266                     _timer1_interrupt_config:	
  2347                           
  2348                           ;common.c: 57: GIE = 1;
  2349                           
  2350                           ; Regs used in _timer1_interrupt_config: []
  2351  0266  178B               	bsf	11,7
  2352                           
  2353                           ;common.c: 58: PEIE = 1;
  2354  0267  170B               	bsf	11,6
  2355  0268  0008               	return
  2356  0269                     __end_of_timer1_interrupt_config:	
  2357                           
  2358                           	psect	text491
  2359  0215                     __ptext491:	
  2360 ;; =============== function _timer1_interrupt_config ends ============
  2361                           
  2362                           
  2363 ;; *************** function _timer1_config *****************
  2364 ;; Defined at:
  2365 ;;		line 44 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		wreg
  2374 ;; Tracked objects:
  2375 ;;		On entry : 17F/40
  2376 ;;		On exit  : 17F/20
  2377 ;;		Unchanged: FFE80/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0
  2382 ;;      Totals:         0       0       0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    2
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392  0215                     _timer1_config:	
  2393                           
  2394                           ;common.c: 46: TMR1H=0xCF;
  2395                           
  2396                           ; Regs used in _timer1_config: [wreg]
  2397  0215  30CF               	movlw	207
  2398  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0217  008F               	movwf	15	;volatile
  2400                           
  2401                           ;common.c: 47: TMR1L=0x2C;
  2402  0218  302C               	movlw	44
  2403  0219  008E               	movwf	14	;volatile
  2404                           
  2405                           ;common.c: 48: T1CON=0xE1;
  2406  021A  30E1               	movlw	225
  2407  021B  0090               	movwf	16	;volatile
  2408                           
  2409                           ;common.c: 49: TMR1IE=1;
  2410  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2411  021D  140C               	bsf	12,0
  2412  021E  0008               	return
  2413  021F                     __end_of_timer1_config:	
  2414                           
  2415                           	psect	text492
  2416  0230                     __ptext492:	
  2417 ;; =============== function _timer1_config ends ============
  2418                           
  2419                           
  2420 ;; *************** function _clock_config *****************
  2421 ;; Defined at:
  2422 ;;		line 36 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;		None               void
  2429 ;; Registers used:
  2430 ;;		wreg, status,2
  2431 ;; Tracked objects:
  2432 ;;		On entry : 17F/20
  2433 ;;		On exit  : 17F/40
  2434 ;;		Unchanged: FFE80/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0
  2439 ;;      Totals:         0       0       0       0       0
  2440 ;;Total ram usage:        0 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    2
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449  0230                     _clock_config:	
  2450                           
  2451                           ;common.c: 38: CLKPR = 0x80;
  2452                           
  2453                           ; Regs used in _clock_config: [wreg+status,2]
  2454  0230  3080               	movlw	128
  2455  0231  1283               	bcf	3,5	;RP0=0, select bank2
  2456  0232  1703               	bsf	3,6	;RP1=1, select bank2
  2457  0233  0088               	movwf	8	;volatile
  2458                           
  2459                           ;common.c: 39: CLKPR = 0x00;
  2460  0234  0188               	clrf	8	;volatile
  2461  0235                     l1407:	
  2462                           ;common.c: 40: while(CLKPCE);
  2463                           
  2464  0235  1F88               	btfss	8,7
  2465  0236  0008               	return
  2466  0237  2A35               	goto	l1407
  2467  0238                     __end_of_clock_config:	
  2468                           
  2469                           	psect	text493
  2470  0191                     __ptext493:	
  2471 ;; =============== function _clock_config ends ============
  2472                           
  2473                           
  2474 ;; *************** function _ISR *****************
  2475 ;; Defined at:
  2476 ;;		line 253 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;		None               void
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, pclath, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 60/0
  2488 ;;		Unchanged: FFF9F/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2490 ;;      Params:         0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0
  2492 ;;      Temps:          2       0       0       0       0
  2493 ;;      Totals:         2       0       0       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    1
  2497 ;; This function calls:
  2498 ;;		i1_setAD_ConvertFlag
  2499 ;;		_adc_get
  2500 ;; This function is called by:
  2501 ;;		Interrupt level 1
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504  0191                     _ISR:	
  2505                           
  2506                           ;common.c: 254: static unsigned char ucTimer1sCnt = 0;
  2507                           ;common.c: 256: if(TMR1IF == 1)
  2508  0191  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0192  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0193  1C0C               	btfss	12,0
  2511  0194  29B1               	goto	i1l3033
  2512  0195  3064               	movlw	100
  2513                           
  2514                           ;common.c: 257: {
  2515                           ;common.c: 258: TMR1IF = 0 ;
  2516  0196  100C               	bcf	12,0
  2517                           
  2518                           ;common.c: 259: timer.timer10msStopWatch++;
  2519  0197  0AFA               	incf	_timer,f
  2520                           
  2521                           ;common.c: 260: ucTimer1sCnt++;
  2522  0198  0AF8               	incf	ISR@ucTimer1sCnt,f
  2523                           
  2524                           ;common.c: 262: if(ucTimer1sCnt >= 100)
  2525  0199  0278               	subwf	ISR@ucTimer1sCnt,w
  2526  019A  1C03               	skipc
  2527  019B  29B1               	goto	i1l3033
  2528                           
  2529                           ;common.c: 263: {
  2530                           ;common.c: 264: ucTimer1sCnt = 0;
  2531  019C  01F8               	clrf	ISR@ucTimer1sCnt
  2532                           
  2533                           ;common.c: 265: if(uiBigTimer > 0)
  2534  019D  0877               	movf	_uiBigTimer+1,w
  2535  019E  0476               	iorwf	_uiBigTimer,w
  2536  019F  1903               	skipnz
  2537  01A0  29A7               	goto	i1l1497
  2538                           
  2539                           ;common.c: 266: uiBigTimer--;
  2540  01A1  3001               	movlw	1
  2541  01A2  02F6               	subwf	_uiBigTimer,f
  2542  01A3  3000               	movlw	0
  2543  01A4  1C03               	skipc
  2544  01A5  03F7               	decf	_uiBigTimer+1,f
  2545  01A6  02F7               	subwf	_uiBigTimer+1,f
  2546  01A7                     i1l1497:	
  2547                           
  2548                           ;common.c: 268: if(uiSmallTimer)
  2549  01A7  0837               	movf	_uiSmallTimer+1,w
  2550  01A8  0436               	iorwf	_uiSmallTimer,w
  2551  01A9  1903               	skipnz
  2552  01AA  29B1               	goto	i1l3033
  2553                           
  2554                           ;common.c: 269: uiSmallTimer--;
  2555  01AB  3001               	movlw	1
  2556  01AC  02B6               	subwf	_uiSmallTimer,f
  2557  01AD  3000               	movlw	0
  2558  01AE  1C03               	skipc
  2559  01AF  03B7               	decf	_uiSmallTimer+1,f
  2560  01B0  02B7               	subwf	_uiSmallTimer+1,f
  2561  01B1                     i1l3033:	
  2562                           
  2563                           ;common.c: 270: }
  2564                           ;common.c: 271: }
  2565                           ;common.c: 273: if(ADIF)
  2566  01B1  1D0D               	btfss	13,2
  2567  01B2  29CE               	goto	i1l1502
  2568  01B3  3001               	movlw	1
  2569                           
  2570                           ;common.c: 274: {
  2571                           ;common.c: 275: ADIF=0;
  2572  01B4  110D               	bcf	13,2
  2573                           
  2574                           ;common.c: 276: setAD_ConvertFlag(1);
  2575  01B5  21E0  118A         	fcall	i1_setAD_ConvertFlag
  2576                           
  2577                           ;common.c: 277: adc_original_value = adc_get();
  2578  01B7  21D5  118A         	fcall	_adc_get
  2579  01B9  0871               	movf	?_adc_get+1,w
  2580  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2581  01BB  00B1               	movwf	_adc_original_value+1
  2582  01BC  0870               	movf	?_adc_get,w
  2583  01BD  00B0               	movwf	_adc_original_value
  2584                           
  2585                           ;common.c: 278: if(sampleChannelSelect == 1)
  2586  01BE  0B46               	decfsz	_sampleChannelSelect,w
  2587  01BF  29C8               	goto	i1l3045
  2588                           
  2589                           ;common.c: 279: adc_original_CH12_value = adc_get();
  2590  01C0  21D5  118A         	fcall	_adc_get
  2591  01C2  0871               	movf	?_adc_get+1,w
  2592  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2593  01C4  00AD               	movwf	_adc_original_CH12_value+1
  2594  01C5  0870               	movf	?_adc_get,w
  2595  01C6  00AC               	movwf	_adc_original_CH12_value
  2596  01C7  29CE               	goto	i1l1502
  2597  01C8                     i1l3045:	
  2598                           
  2599                           ;common.c: 280: else
  2600                           ;common.c: 281: adc_original_CH13_value = adc_get();
  2601  01C8  21D5               	fcall	_adc_get
  2602  01C9  0871               	movf	?_adc_get+1,w
  2603  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2604  01CB  00AF               	movwf	_adc_original_CH13_value+1
  2605  01CC  0870               	movf	?_adc_get,w
  2606  01CD  00AE               	movwf	_adc_original_CH13_value
  2607  01CE                     i1l1502:	
  2608  01CE  0875               	movf	??_ISR+1,w
  2609  01CF  008A               	movwf	10
  2610  01D0  0E74               	swapf	??_ISR^(0+-128),w
  2611  01D1  0083               	movwf	3
  2612  01D2  0EFE               	swapf	126,f
  2613  01D3  0E7E               	swapf	126,w
  2614  01D4  0009               	retfie
  2615  01D5                     __end_of_ISR:	
  2616  01D5                     __ptext495:	
  2617 ;; =============== function i1_setAD_ConvertFlag ends ============
  2618                           
  2619                           
  2620 ;; *************** function _adc_get *****************
  2621 ;; Defined at:
  2622 ;;		line 104 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  val             2    2[COMMON] unsigned int 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  2    0[COMMON] unsigned int 
  2629 ;; Registers used:
  2630 ;;		wreg
  2631 ;; Tracked objects:
  2632 ;;		On entry : 60/0
  2633 ;;		On exit  : 60/20
  2634 ;;		Unchanged: FFF9F/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         2       0       0       0       0
  2637 ;;      Locals:         2       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0
  2639 ;;      Totals:         4       0       0       0       0
  2640 ;;Total ram usage:        4 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_ISR
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648  01D5                     _adc_get:	
  2649                           
  2650                           ;periph.c: 105: unsigned int val;
  2651                           ;periph.c: 106: val = (ADRESH<<8) | ADRESL;
  2652                           
  2653                           ; Regs used in _adc_get: [wreg]
  2654  01D5  081E               	movf	30,w	;volatile
  2655  01D6  00F3               	movwf	adc_get@val+1
  2656  01D7  01F2               	clrf	adc_get@val
  2657  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2658  01D9  081E               	movf	30,w	;volatile
  2659  01DA  04F2               	iorwf	adc_get@val,f
  2660                           
  2661                           ;periph.c: 107: return val;
  2662  01DB  0873               	movf	adc_get@val+1,w
  2663  01DC  00F1               	movwf	?_adc_get+1
  2664  01DD  0872               	movf	adc_get@val,w
  2665  01DE  00F0               	movwf	?_adc_get
  2666  01DF  0008               	return
  2667  01E0                     __end_of_adc_get:	
  2668  01E0                     __ptext494:	
  2669 ;; =============== function _ISR ends ============
  2670                           
  2671                           
  2672 ;; *************** function i1_setAD_ConvertFlag *****************
  2673 ;; Defined at:
  2674 ;;		line 70 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  setAD_Conver    1    wreg     unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg
  2683 ;; Tracked objects:
  2684 ;;		On entry : 60/0
  2685 ;;		On exit  : 60/0
  2686 ;;		Unchanged: FFF9F/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         1       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         1       0       0       0       0
  2692 ;;Total ram usage:        1 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_ISR
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700  01E0                     i1_setAD_ConvertFlag:	
  2701                           
  2702                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  2703                           ;i1setAD_ConvertFlag@flag stored from wreg
  2704  01E0  00F0               	movwf	i1setAD_ConvertFlag@flag
  2705                           
  2706                           ;common.c: 71: adc_convert_flag = flag;
  2707  01E1  00F9               	movwf	_adc_convert_flag
  2708  01E2  0008               	return
  2709  01E3                     __end_ofi1_setAD_ConvertFlag:	
  2710                           
  2711                           	psect	intentry
  2712  0004                     __pintentry:	
  2713                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2714                           
  2715  0004                     interrupt_function:	
  2716  007E                     saved_w	set	btemp
  2717  0004  00FE               	movwf	btemp
  2718  0005  0E03               	swapf	3,w
  2719  0006  00F4               	movwf	??_ISR
  2720  0007  080A               	movf	10,w
  2721  0008  00F5               	movwf	??_ISR+1
  2722  0009  118A  2991         	ljmp	_ISR
  2723                           
  2724                           	psect	text496
  2725  0000                     __ptext496:	
  2726 ;; =============== function _adc_get ends ============
  2727                           
  2728  007E                     btemp	set	126	;btemp
  2729  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Mar 29 14:39:34 2019

                     ??_clock_config 0041                                    pc 0002  
                                 _GO 00F9                                   fsr 0004  
                ?_getAdOriginalValue 0041             ?_timer1_interrupt_config 0070  
                                l735 00CB                                  l728 00BB  
                                l680 00F1                                  l729 00C0  
                                l691 004D                                  l693 004E  
                                l685 0042                                  l699 0059  
                                _PA0 0028                                  _PA1 0029  
                                _GIE 005F                                  _PA2 002A  
                                _PA3 002B                                  _PB2 0032  
                                _ISR 0191                                  u535 0130  
                                u545 0143                                  fsr0 0004  
                                indf 0000             main@ucBigTimerActionFlag 003B  
                      _startBigTimer 0247                                 S3299 01E3  
                        main@ampStep 0039                                 ?_ISR 0070  
                 __size_of_AD_Sample 005D                                 l1410 0000  
                               l2130 0000                                 l3011 0000  
                               l1413 0000                                 l2141 0000  
                               l2133 0000                                 l3013 0000  
                               l3101 0000                                 l1422 0000  
                               l1407 0235                                 l2127 0000  
                               l1431 0000                                 l3007 0000  
                               l3103 0000                                 l3111 0000  
                               l1416 0000                                 l1425 0000  
                               l3105 0101                                 l3121 0000  
                               l3113 0000                                 l1442 013B  
                               l2147 0000                                 l1419 0000  
                               l3211 0000                                 l3203 0091  
                               l3131 0000                                 l3123 0000  
                               l3115 0000                                 l1428 0000  
                               l3061 0129                                 l3053 0000  
                               l3205 0097                                 l3141 0040  
                               l3133 0037                                 l3125 00D6  
                               l3117 0000                                 l3109 0000  
                               l1463 0000                                 l3231 00C4  
                               l3215 00A2                                 l3135 0000  
                               l3127 0000                                 l3119 0000  
                               l1472 0000                                 l3073 0000  
                               l3057 0000                                 l3241 00CF  
                               l3233 00C5                                 l3225 00B3  
                               l3209 009A                                 l3145 0046  
                               l3137 0000                                 l1490 0000  
                               l1466 0000                                 l3091 0000  
                               l3083 015D                                 l3067 014E  
                               l3243 00D0                                 l3171 005F  
                               l3147 0047                                 l3139 0000  
                               l1469 0000                                 l3093 0000  
                               l3069 0000                                 l3181 0000  
                               l3157 0052                                 l3079 015B  
                               l3095 0000                                 l3175 0000  
                               l3183 0078                                 l3167 005B  
                               l3159 0053                                 l3089 015E  
                               l3193 0000                                 l3177 0000  
                               l3099 0000                                 l3195 0000  
                               l3187 0000                                 l3189 008D  
                               l2911 0000                                 l2913 0000  
                               l2921 0000                                 l2915 0000  
                               l2923 0000                                 l2931 0000  
                               l2909 0000                                 l2917 0000  
                               l2925 0000                                 l2933 0000  
                               l2941 0000                                 l2919 0000  
                               l2927 0000                                 l2935 0000  
                               l2943 0000                                 l2951 0184  
                               l2929 0000                                 l2937 0000  
                               l2945 0000                                 l2953 0000  
                               l2947 0000                                 l2939 0000  
                               l2971 0000                                 l2949 0000  
                               l2965 0000                                 l2981 0000  
                               l2967 0000                                 l2975 0000  
                               l2983 0000                                 l2969 0000  
                               l2979 0000                                 l2995 0000  
                               _ADIE 046A                                 _ADIF 006A  
                               _ADON 00F8                                 _PEIE 005E  
               ??_getAdOriginalValue 0043               ??_isFinishedSmallTimer 0041  
                               _main 000D                    ??_startSmallTimer 0041  
                               btemp 007E                                 start 000B  
            ?_getAdOriginalCh12Value 0041              ?_getAdOriginalCh13Value 0041  
                              ??_ISR 0074           __end_of_isPermitSampleTime 025B  
                _sampleChannelSelect 0046                                ?_main 0070  
                              _DACR0 0088                                _CLKPR 0108  
                              _T1CON 0010                      __end_of_adc_get 01E0  
                              _TMR1H 000F                                _TMR1L 000E  
                     ?_startBigTimer 0070                setAD_ConvertFlag@flag 0041  
                      main@tDA_timer 003A                                _timer 007A  
                              pclath 000A                                status 0003  
     __end_of_getAdOriginalCh12Value 0256                                wtemp0 007E  
     __end_of_getAdOriginalCh13Value 0251                __end_of_clearBigTimer 0266  
               __end_of_clrSampeTime 026B           __end_of_isFinishedBigTimer 0242  
                       __end_of_main 00F2               __size_of_adc_test_init 0014  
                  __end_of_AD_Sample 016B             __size_of_clearSmallTimer 0003  
          main@ucInstalledBatteryCnt 0040                               ??_main 0046  
                             _ADCON0 001F                               _ADCON1 009F  
               __end_of_clock_config 0238                               _DACCON 0087  
                             _ADRESH 001E                               _ADRESL 009E  
                             _CLKPCE 0847                               i1l3021 0000  
                             i1l2150 0000                               i1l1422 0000  
                             i1l1502 01CE                               i1l3023 0000  
                             i1l3041 0000                               i1l3033 01B1  
                             i1l3017 0000                               i1l3051 0000  
                             i1l3043 0000                               i1l3027 0000  
                             i1l3045 01C8                               i1l3037 0000  
                             i1l3047 0000                               i1l3039 0000  
                             i1l1497 01A7                     __end_of_dac_init 0260  
                             _TMR1IE 0460                               _TMR1IF 0060  
                  _getAD_ConvertFlag 0107                    _setAD_ConvertFlag 0109  
                             _TRISA0 0428                               _TRISA1 0429  
                             _TRISB0 0430                               _TRISA2 042A  
                             _TRISB1 0431                               _TRISA3 042B  
                             _TRISB2 0432                               _TRISB3 0433  
                             _TRISB4 0434                               _TRISA6 042E  
                             _TRISB5 0435                               _TRISA7 042F  
                             _TRISB6 0436                               _TRISB7 0437  
                 ?_getAD_ConvertFlag 0070                   ?_setAD_ConvertFlag 0070  
                   __end_of_op1_init 0215                     __end_of_op2_init 0228  
             main@ucConfirmTimerZptS 003E                            ??_adc_get 0072  
                ??_getAD_ConvertFlag 0041                  ??_setAD_ConvertFlag 0041  
                             clrloop 0229                      ??_startBigTimer 0041  
                             saved_w 007E          ?_process_AD_Converter_Value 0070  
                      _adc_test_init 0170            __end_of_getAD_ConvertFlag 0109  
          __end_of_setAD_ConvertFlag 010E                   __size_of_adc_start 0003  
                     __pcstackCOMMON 0070                         __pidataBANK0 0000  
            _adc_original_CH12_value 002C                      _startSmallTimer 0242  
            _adc_original_CH13_value 002E                    ??_clearSmallTimer 0041  
              __end_of_timer1_config 021F                       ?_adc_test_init 0041  
   __size_of_timer1_interrupt_config 0003                __size_of_clrSampeTime 0002  
                         __pbssBANK0 0020         __size_ofi1_setAD_ConvertFlag 0003  
                         adc_get@val 0072                           __pmaintext 000D  
                         __pintentry 0004                            ?_dac_init 0070  
              __size_of_clock_config 0008                              _OP1CON0 001B  
                            _OP1CON1 001C                              _OP1CON2 001D  
                            _OP2CON0 009B                              _OP2CON1 009C  
                            _OP2CON2 009D                         _clrSampeTime 0269  
                  __end_of_adc_start 0187                            ?_op1_init 0070  
                          ?_op2_init 0070                   _isPermitSampleTime 0256  
             _buffer_Sample_AD_Value 0020                   _adc_original_value 0030  
         __size_of_getAD_ConvertFlag 0002           __size_of_setAD_ConvertFlag 0005  
        __size_of_getAdOriginalValue 0005                  ?_isPermitSampleTime 0070  
      __size_of_isFinishedSmallTimer 0005                           _uiBigTimer 0076  
                       _clock_config 0230                              _adc_get 01D5  
            __end_of_startSmallTimer 0247                  _multiFilterMaxValue 0032  
                _multiFilterMinValue 0034                 ??_isPermitSampleTime 0041  
                 _isFinishedBigTimer 023D                           ??_dac_init 0041  
                          _AD_Sample 010E                         __size_of_ISR 0044  
                    ??_adc_test_init 0042                           ??_op1_init 0041  
                         ??_op2_init 0041                  ?_isFinishedBigTimer 0070  
               end_of_initialization 0206                 ??_isFinishedBigTimer 0041  
                         ?_AD_Sample 0070               __size_of_clearBigTimer 0003  
                   _adc_convert_flag 0079              _timer1_interrupt_config 0266  
                     AD_Sample@index 0045                           main@ucInit 003F  
                    _clearSmallTimer 0260                     ?_startSmallTimer 0070  
                i1_setAD_ConvertFlag 01E0                __end_of_startBigTimer 024C  
                start_initialization 01F9                          __end_of_ISR 01D5  
           ??_getAdOriginalCh12Value 0043             ??_getAdOriginalCh13Value 0043  
               ?i1_setAD_ConvertFlag 0070                        _clearBigTimer 0263  
              main@ucCheckBatteryCnt 003C                          __pdataBANK0 0046  
                        ??_AD_Sample 0043            ??_timer1_interrupt_config 0041  
                        __pbssCOMMON 0076                    __size_of_dac_init 0005  
                      __pcstackBANK0 0041                            _adc_start 0184  
                  __size_of_op1_init 000C                    __size_of_op2_init 0009  
              ??i1_setAD_ConvertFlag 0070                       ?_clearBigTimer 0070  
            __end_of_clearSmallTimer 0263               __size_of_timer1_config 000A  
                          __ptext470 00F2                            __ptext471 010E  
                          __ptext480 0251                            __ptext472 016B  
                          __ptext481 0260                            __ptext473 0109  
                          __ptext490 0266                            __ptext482 0263  
                          __ptext474 0107                            __ptext491 0215  
                          __ptext483 0269                            __ptext475 0238  
                          __ptext492 0230                            __ptext484 0256  
                          __ptext476 023D                            __ptext493 0191  
                          __ptext485 0184                            __ptext477 0242  
                          __ptext494 01E0                            __ptext486 021F  
                          __ptext478 0247                            __ptext495 01D5  
                          __ptext487 0209                            __ptext479 024C  
                          __ptext496 0000                            __ptext488 025B  
                          __ptext489 0170                             ?_adc_get 0070  
       __end_of_isFinishedSmallTimer 023D                            __pswtext1 01E3  
                    ISR@ucTimer1sCnt 0078           __end_of_getAdOriginalValue 0170  
                         ?_adc_start 0070      __size_of_getAdOriginalCh12Value 0005  
    __size_of_getAdOriginalCh13Value 0005                    interrupt_function 0004  
    __end_of_timer1_interrupt_config 0269                 adc_test_init@channel 0043  
        __size_of_isPermitSampleTime 0005                         _uiSmallTimer 0036  
              __end_of_adc_test_init 0184                        _timer1_config 0215  
       ??_process_AD_Converter_Value 0046                      ??_clearBigTimer 0041  
                   ?_clearSmallTimer 0070                 main@ucConfirmTimer1S 003D  
             _getAdOriginalCh12Value 0251          __size_of_isFinishedBigTimer 0005  
             _getAdOriginalCh13Value 024C                     __size_of_adc_get 000B  
__size_of_process_AD_Converter_Value 0015                             _dac_init 025B  
                     ?_timer1_config 0070                             _op1_init 0209  
                           _op2_init 021F                          ??_adc_start 0041  
                      __size_of_main 00E5                 _isFinishedSmallTimer 0238  
                           clear_ram 0228                        ?_clrSampeTime 0070  
                        _sampleTimes 0038             __size_of_startSmallTimer 0005  
                           intlevel1 0000                ?_isFinishedSmallTimer 0070  
             __size_of_startBigTimer 0005                        ?_clock_config 0070  
            i1setAD_ConvertFlag@flag 0070                       ??_clrSampeTime 0041  
                    ??_timer1_config 0041          __end_ofi1_setAD_ConvertFlag 01E3  
 __end_of_process_AD_Converter_Value 0107           _process_AD_Converter_Value 00F2  
                   adc_test_init@ref 0041                   _getAdOriginalValue 016B  
