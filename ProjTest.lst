

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jun 13 11:11:54 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	text583,local,class=CODE,delta=2
    18                           	psect	text584,local,class=CODE,delta=2
    19                           	psect	text590,local,class=CODE,delta=2
    20                           	psect	text591,local,class=CODE,delta=2
    21                           	psect	text592,local,class=CODE,delta=2
    22                           	psect	text593,local,class=CODE,delta=2
    23                           	psect	text594,local,class=CODE,delta=2
    24                           	psect	text595,local,class=CODE,delta=2
    25                           	psect	text596,local,class=CODE,delta=2
    26                           	psect	text597,local,class=CODE,delta=2
    27                           	psect	text598,local,class=CODE,delta=2
    28                           	psect	text599,local,class=CODE,delta=2
    29                           	psect	text600,local,class=CODE,delta=2
    30                           	psect	text602,local,class=CODE,delta=2
    31                           	psect	text603,local,class=CODE,delta=2
    32                           	psect	text604,local,class=CODE,delta=2
    33                           	psect	text606,local,class=CODE,delta=2
    34                           	psect	text607,local,class=CODE,delta=2
    35                           	psect	text608,local,class=CODE,delta=2
    36                           	psect	text612,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text615,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0032                     _PB2	set	50
    71  0036                     _PB6	set	54
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  041F                     start_initialization:	
   103  041F  3020               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0420  01F6               	clrf	__pbssCOMMON& (0+127)
   107  0421  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   108  0422  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   109  0423  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   110  0424  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   111                           
   112                           ; Clear objects allocated to BANK0
   113  0425  1383               	bcf	3,7	;select IRP bank0
   114  0426  0084               	movwf	4
   115  0427  3055               	movlw	low (__pbssBANK0+53)
   116  0428  118A  246C         	fcall	clear_ram
   117                           
   118                           ;initializer for _sampleChannelSelect
   119  042A  300E               	movlw	14
   120  042B  00DA               	movwf	__pdataBANK0& (0+127)
   121  042C                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  042C  0183               	clrf	3
   125  042D  118A  280D         	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMMON
   128  0076                     __pbssCOMMON:	
   129  0076                     _uiBigTimer:	
   130  0076                     	ds	2
   131  0078                     ISR@ucTimer1sCnt:	
   132  0078                     	ds	1
   133  0079                     _adc_convert_flag:	
   134  0079                     	ds	1
   135  007A                     _timer:	
   136  007A                     	ds	1
   137                           
   138                           	psect	bssBANK0
   139  0020                     __pbssBANK0:	
   140  0020                     _buffer_Sample_AD_Value:	
   141  0020                     	ds	12
   142  002C                     _adc_original_CH14_value:	
   143  002C                     	ds	2
   144  002E                     _adc_original_CH1_value:	
   145  002E                     	ds	2
   146  0030                     _adc_original_CH4_value:	
   147  0030                     	ds	2
   148  0032                     _adc_original_value:	
   149  0032                     	ds	2
   150  0034                     _multiFilterMaxValue:	
   151  0034                     	ds	2
   152  0036                     _multiFilterMinValue:	
   153  0036                     	ds	2
   154  0038                     _uiSmallTimer:	
   155  0038                     	ds	2
   156  003A                     _uiTwentySecondsTimer:	
   157  003A                     	ds	2
   158  003C                     _sampleTimes:	
   159  003C                     	ds	1
   160  003D                     main@cTimer1s_805:	
   161  003D                     	ds	1
   162  003E                     main@enumBranchStep:	
   163  003E                     	ds	1
   164  003F                     main@enumInteralStep:	
   165  003F                     	ds	1
   166  0040                     main@enumMainLoopStep:	
   167  0040                     	ds	1
   168  0041                     main@ucADC4_Step:	
   169  0041                     	ds	1
   170  0042                     main@ucChannel4Type:	
   171  0042                     	ds	1
   172  0043                     main@ucLoaderStep:	
   173  0043                     	ds	1
   174  0044                     main@ucLoaderStep1:	
   175  0044                     	ds	1
   176  0045                     main@ucLoaderStep2:	
   177  0045                     	ds	1
   178  0046                     main@ucLoaderStep3:	
   179  0046                     	ds	1
   180  0047                     main@ucLoaderStep4:	
   181  0047                     	ds	1
   182  0048                     main@ucTimer1s:	
   183  0048                     	ds	1
   184  0049                     main@ucTimerADC1ZeroP5s:	
   185  0049                     	ds	1
   186  004A                     main@ucTimerDelay:	
   187  004A                     	ds	1
   188  004B                     main@ucTimerDelay1:	
   189  004B                     	ds	1
   190  004C                     main@ucTimerDelay2:	
   191  004C                     	ds	1
   192  004D                     main@ucTimerDelay3:	
   193  004D                     	ds	1
   194  004E                     main@ucTimerDelay4:	
   195  004E                     	ds	1
   196  004F                     main@ucTimerP3s:	
   197  004F                     	ds	1
   198  0050                     main@ucTimerRightP5s:	
   199  0050                     	ds	1
   200  0051                     main@ucTimerX1P5s:	
   201  0051                     	ds	1
   202  0052                     main@ucTimerX2P5s:	
   203  0052                     	ds	1
   204  0053                     main@ucTimerZeroPoint3s:	
   205  0053                     	ds	1
   206  0054                     main@ucTimerZeroPoint5s:	
   207  0054                     	ds	1
   208                           
   209                           	psect	dataBANK0
   210  005A                     __pdataBANK0:	
   211  005A                     _sampleChannelSelect:	
   212  005A                     	ds	1
   213                           
   214                           	psect	clrtext
   215  046C                     clear_ram:	
   216                           ;	Called with FSR containing the base address, and
   217                           ;	W with the last address+1
   218                           
   219  046C  0064               	clrwdt	;clear the watchdog before getting into this loop
   220  046D                     clrloop:	
   221  046D  0180               	clrf	0	;clear RAM location pointed to by FSR
   222  046E  0A84               	incf	4,f	;increment pointer
   223  046F  0604               	xorwf	4,w	;XOR with final address
   224  0470  1903               	btfsc	3,2	;have we reached the end yet?
   225  0471  3400               	retlw	0	;all done for this memory range, return
   226  0472  0604               	xorwf	4,w	;XOR again to restore value
   227  0473  2C6D               	goto	clrloop	;do the next byte
   228                           
   229                           	psect	cstackCOMMON
   230  0070                     __pcstackCOMMON:	
   231  0070                     ?_clearTwelveHoursTimer:	
   232  0070                     ?_clearThreeHoursTimer:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0070                     ?_clearTwentySecondsTimer:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ?_clock_config:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_timer1_config:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_timer1_interrupt_config:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ?_dac_init:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ?_op1_init:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_op2_init:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0070                     ?_adc_start:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_clrSampeTime:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_process_AD_Converter_Value:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_startTwelveHourTimer:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_startTwentySecondsTimer:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_startThreeHoursTimer:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_AD_Sample:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_clearAllTimer:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_clearPinPortAndTimer:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_main:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_setAD_ConvertFlag:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_ISR:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?i1_setAD_ConvertFlag:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ??i1_setAD_ConvertFlag:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_isPermitSampleTime:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_isFinishedTwelveHoursTimer:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_isFinishedTwentySecondsTimer:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_isFinishedThreeHoursTimer:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_getAD_ConvertFlag:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_adc_get:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     i1setAD_ConvertFlag@flag:	
   317                           ; 2 bytes @ 0x0
   318                           
   319                           
   320                           ; 1 bytes @ 0x0
   321  0070                     	ds	2
   322  0072                     ??_adc_get:	
   323  0072                     adc_get@val:	
   324                           ; 0 bytes @ 0x2
   325                           
   326                           
   327                           ; 2 bytes @ 0x2
   328  0072                     	ds	2
   329  0074                     ??_ISR:	
   330                           
   331                           ; 0 bytes @ 0x4
   332  0074                     	ds	2
   333                           
   334                           	psect	cstackBANK0
   335  0055                     __pcstackBANK0:	
   336  0055                     ??_clearTwelveHoursTimer:	
   337  0055                     ??_clearThreeHoursTimer:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0055                     ??_clearTwentySecondsTimer:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0055                     ??_clock_config:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0055                     ??_timer1_config:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0055                     ??_timer1_interrupt_config:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0055                     ?_adc_test_init:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0055                     ??_dac_init:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0055                     ??_op1_init:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0055                     ??_op2_init:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0055                     ??_adc_start:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0055                     ??_isPermitSampleTime:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0055                     ??_clrSampeTime:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0055                     ??_startTwelveHourTimer:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0055                     ??_isFinishedTwelveHoursTimer:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0055                     ??_startTwentySecondsTimer:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0055                     ??_isFinishedTwentySecondsTimer:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0055                     ??_startThreeHoursTimer:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0055                     ??_isFinishedThreeHoursTimer:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0055                     ??_clearAllTimer:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0055                     ??_clearPinPortAndTimer:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0055                     ??_getAD_ConvertFlag:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0055                     ??_setAD_ConvertFlag:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0055                     ?_getAdOriginalCh14Value:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0055                     ?_getAdOriginalCh1Value:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0055                     ?_getAdOriginaCh4Value:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0055                     ?_getAdOriginalValue:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0055                     setAD_ConvertFlag@flag:	
   416                           ; 2 bytes @ 0x0
   417                           
   418  0055                     adc_test_init@ref:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 1 bytes @ 0x0
   423  0055                     	ds	1
   424  0056                     ??_adc_test_init:	
   425                           
   426                           ; 0 bytes @ 0x1
   427  0056                     	ds	1
   428  0057                     ??_getAdOriginalCh14Value:	
   429  0057                     ??_getAdOriginalCh1Value:	
   430                           ; 0 bytes @ 0x2
   431                           
   432  0057                     ??_getAdOriginaCh4Value:	
   433                           ; 0 bytes @ 0x2
   434                           
   435  0057                     ??_AD_Sample:	
   436                           ; 0 bytes @ 0x2
   437                           
   438  0057                     ??_getAdOriginalValue:	
   439                           ; 0 bytes @ 0x2
   440                           
   441  0057                     adc_test_init@channel:	
   442                           ; 0 bytes @ 0x2
   443                           
   444                           
   445                           ; 1 bytes @ 0x2
   446  0057                     	ds	2
   447  0059                     AD_Sample@index:	
   448                           
   449                           ; 1 bytes @ 0x4
   450  0059                     	ds	1
   451  005A                     ??_process_AD_Converter_Value:	
   452  005A                     ??_main:	
   453                           ; 0 bytes @ 0x5
   454                           
   455                           
   456                           	psect	maintext
   457  000D                     __pmaintext:	
   458                           ; 0 bytes @ 0x5
   459 ;;Data sizes: Strings 0, constant 0, data 1, bss 58, persistent 0 stack 0
   460 ;;Auto spaces:   Size  Autos    Used
   461 ;; COMMON          14      6      11
   462 ;; BANK0           80      5      59
   463 ;; BANK1           80      0       0
   464 ;; BANK3           96      0       0
   465 ;; BANK2           96      0       0
   466 ;;
   467 ;; Pointer list with targets:
   468 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   469 ;;
   470 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   471 ;;
   472 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   473 ;;
   474 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   475 ;;
   476 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   477 ;;
   478 ;;
   479 ;; Critical Paths under _main in COMMON
   480 ;;
   481 ;;   None.
   482 ;;
   483 ;; Critical Paths under _ISR in COMMON
   484 ;;
   485 ;;   _ISR->_adc_get
   486 ;;
   487 ;; Critical Paths under _main in BANK0
   488 ;;
   489 ;;   _process_AD_Converter_Value->_AD_Sample
   490 ;;   _AD_Sample->_getAdOriginalValue
   491 ;;
   492 ;; Critical Paths under _ISR in BANK0
   493 ;;
   494 ;;   None.
   495 ;;
   496 ;; Critical Paths under _main in BANK1
   497 ;;
   498 ;;   None.
   499 ;;
   500 ;; Critical Paths under _ISR in BANK1
   501 ;;
   502 ;;   None.
   503 ;;
   504 ;; Critical Paths under _main in BANK3
   505 ;;
   506 ;;   None.
   507 ;;
   508 ;; Critical Paths under _ISR in BANK3
   509 ;;
   510 ;;   None.
   511 ;;
   512 ;; Critical Paths under _main in BANK2
   513 ;;
   514 ;;   None.
   515 ;;
   516 ;; Critical Paths under _ISR in BANK2
   517 ;;
   518 ;;   None.
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   521 ;;
   522 ;;
   523 ;;Call Graph Tables:
   524 ;;
   525 ;; ---------------------------------------------------------------------------------
   526 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   527 ;; ---------------------------------------------------------------------------------
   528 ;; (0) _main                                                 0     0      0     178
   529 ;;                       _clock_config
   530 ;;                      _timer1_config
   531 ;;            _timer1_interrupt_config
   532 ;;                      _adc_test_init
   533 ;;                           _dac_init
   534 ;;                           _op1_init
   535 ;;                           _op2_init
   536 ;;                          _adc_start
   537 ;;                 _isPermitSampleTime
   538 ;;                       _clrSampeTime
   539 ;;         _process_AD_Converter_Value
   540 ;;             _getAdOriginalCh14Value
   541 ;;               _clearPinPortAndTimer
   542 ;;              _getAdOriginalCh1Value
   543 ;;               _startTwelveHourTimer
   544 ;;         _isFinishedTwelveHoursTimer
   545 ;;            _startTwentySecondsTimer
   546 ;;               _getAdOriginaCh4Value
   547 ;;       _isFinishedTwentySecondsTimer
   548 ;;               _startThreeHoursTimer
   549 ;;          _isFinishedThreeHoursTimer
   550 ;;               _clearThreeHoursTimer
   551 ;;                      _clearAllTimer
   552 ;; ---------------------------------------------------------------------------------
   553 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   554 ;;                  _getAD_ConvertFlag
   555 ;;                  _setAD_ConvertFlag
   556 ;;                          _AD_Sample
   557 ;;                      _adc_test_init
   558 ;;                          _adc_start
   559 ;; ---------------------------------------------------------------------------------
   560 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   561 ;;                      _clearAllTimer
   562 ;; ---------------------------------------------------------------------------------
   563 ;; (2) _AD_Sample                                            3     3      0      68
   564 ;;                                              2 BANK0      3     3      0
   565 ;;                 _getAdOriginalValue
   566 ;; ---------------------------------------------------------------------------------
   567 ;; (1) _clearAllTimer                                        0     0      0       0
   568 ;;              _clearTwelveHoursTimer
   569 ;;               _clearThreeHoursTimer
   570 ;;            _clearTwentySecondsTimer
   571 ;; ---------------------------------------------------------------------------------
   572 ;; (3) _getAdOriginalValue                                   2     0      2       0
   573 ;;                                              0 BANK0      2     0      2
   574 ;; ---------------------------------------------------------------------------------
   575 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   576 ;;                                              0 BANK0      1     1      0
   577 ;; ---------------------------------------------------------------------------------
   578 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   579 ;; ---------------------------------------------------------------------------------
   580 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   581 ;; ---------------------------------------------------------------------------------
   582 ;; (1) _startThreeHoursTimer                                 0     0      0       0
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   585 ;; ---------------------------------------------------------------------------------
   586 ;; (1) _getAdOriginaCh4Value                                 2     0      2       0
   587 ;;                                              0 BANK0      2     0      2
   588 ;; ---------------------------------------------------------------------------------
   589 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   590 ;; ---------------------------------------------------------------------------------
   591 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (1) _startTwelveHourTimer                                 0     0      0       0
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (1) _getAdOriginalCh1Value                                2     0      2       0
   596 ;;                                              0 BANK0      2     0      2
   597 ;; ---------------------------------------------------------------------------------
   598 ;; (1) _getAdOriginalCh14Value                               2     0      2       0
   599 ;;                                              0 BANK0      2     0      2
   600 ;; ---------------------------------------------------------------------------------
   601 ;; (1) _clrSampeTime                                         0     0      0       0
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (1) _isPermitSampleTime                                   0     0      0       0
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (2) _adc_start                                            0     0      0       0
   606 ;; ---------------------------------------------------------------------------------
   607 ;; (1) _op2_init                                             0     0      0       0
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (1) _op1_init                                             0     0      0       0
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (1) _dac_init                                             0     0      0       0
   612 ;; ---------------------------------------------------------------------------------
   613 ;; (2) _adc_test_init                                        3     2      1      44
   614 ;;                                              0 BANK0      3     2      1
   615 ;; ---------------------------------------------------------------------------------
   616 ;; (1) _timer1_interrupt_config                              0     0      0       0
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _timer1_config                                        0     0      0       0
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _clock_config                                         0     0      0       0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   627 ;; ---------------------------------------------------------------------------------
   628 ;; Estimated maximum stack depth 3
   629 ;; ---------------------------------------------------------------------------------
   630 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (4) _ISR                                                  2     2      0      97
   633 ;;                                              4 COMMON     2     2      0
   634 ;;                i1_setAD_ConvertFlag
   635 ;;                            _adc_get
   636 ;; ---------------------------------------------------------------------------------
   637 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   638 ;;                                              0 COMMON     1     1      0
   639 ;; ---------------------------------------------------------------------------------
   640 ;; (5) _adc_get                                              4     2      2      24
   641 ;;                                              0 COMMON     4     2      2
   642 ;; ---------------------------------------------------------------------------------
   643 ;; Estimated maximum stack depth 5
   644 ;; ---------------------------------------------------------------------------------
   645 ;; Call Graph Graphs:
   646 ;; _main (ROOT)
   647 ;;   _clock_config
   648 ;;   _timer1_config
   649 ;;   _timer1_interrupt_config
   650 ;;   _adc_test_init
   651 ;;   _dac_init
   652 ;;   _op1_init
   653 ;;   _op2_init
   654 ;;   _adc_start
   655 ;;   _isPermitSampleTime
   656 ;;   _clrSampeTime
   657 ;;   _process_AD_Converter_Value
   658 ;;     _getAD_ConvertFlag
   659 ;;     _setAD_ConvertFlag
   660 ;;     _AD_Sample
   661 ;;       _getAdOriginalValue
   662 ;;     _adc_test_init
   663 ;;     _adc_start
   664 ;;   _getAdOriginalCh14Value
   665 ;;   _clearPinPortAndTimer
   666 ;;     _clearAllTimer
   667 ;;       _clearTwelveHoursTimer
   668 ;;       _clearThreeHoursTimer
   669 ;;       _clearTwentySecondsTimer
   670 ;;   _getAdOriginalCh1Value
   671 ;;   _startTwelveHourTimer
   672 ;;   _isFinishedTwelveHoursTimer
   673 ;;   _startTwentySecondsTimer
   674 ;;   _getAdOriginaCh4Value
   675 ;;   _isFinishedTwentySecondsTimer
   676 ;;   _startThreeHoursTimer
   677 ;;   _isFinishedThreeHoursTimer
   678 ;;   _clearThreeHoursTimer
   679 ;;   _clearAllTimer
   680 ;;     _clearTwelveHoursTimer
   681 ;;     _clearThreeHoursTimer
   682 ;;     _clearTwentySecondsTimer
   683 ;;
   684 ;; _ISR (ROOT)
   685 ;;   i1_setAD_ConvertFlag
   686 ;;   _adc_get
   687 ;;
   688 ;; Address spaces:
   689 ;;Name               Size   Autos  Total    Cost      Usage
   690 ;;BANK3               60      0       0      10        0.0%
   691 ;;BITBANK3            60      0       0       9        0.0%
   692 ;;SFR3                 0      0       0       4        0.0%
   693 ;;BITSFR3              0      0       0       4        0.0%
   694 ;;BANK2               60      0       0      12        0.0%
   695 ;;BITBANK2            60      0       0      11        0.0%
   696 ;;SFR2                 0      0       0       5        0.0%
   697 ;;BITSFR2              0      0       0       5        0.0%
   698 ;;SFR1                 0      0       0       2        0.0%
   699 ;;BITSFR1              0      0       0       2        0.0%
   700 ;;BANK1               50      0       0       8        0.0%
   701 ;;BITBANK1            50      0       0       7        0.0%
   702 ;;CODE                 0      0       0       0        0.0%
   703 ;;DATA                 0      0      4D       6        0.0%
   704 ;;ABS                  0      0      46       3        0.0%
   705 ;;NULL                 0      0       0       0        0.0%
   706 ;;STACK                0      0       7       2        0.0%
   707 ;;BANK0               50      5      3B       5       73.8%
   708 ;;BITBANK0            50      0       0       4        0.0%
   709 ;;SFR0                 0      0       0       1        0.0%
   710 ;;BITSFR0              0      0       0       1        0.0%
   711 ;;COMMON               E      6       B       1       78.6%
   712 ;;BITCOMMON            E      0       0       0        0.0%
   713                           
   714                           
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;		None               void
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 17F/0
   728 ;;		On exit  : 60/0
   729 ;;		Unchanged: FFE00/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels required when called:    5
   737 ;; This function calls:
   738 ;;		_clock_config
   739 ;;		_timer1_config
   740 ;;		_timer1_interrupt_config
   741 ;;		_adc_test_init
   742 ;;		_dac_init
   743 ;;		_op1_init
   744 ;;		_op2_init
   745 ;;		_adc_start
   746 ;;		_isPermitSampleTime
   747 ;;		_clrSampeTime
   748 ;;		_process_AD_Converter_Value
   749 ;;		_getAdOriginalCh14Value
   750 ;;		_clearPinPortAndTimer
   751 ;;		_getAdOriginalCh1Value
   752 ;;		_startTwelveHourTimer
   753 ;;		_isFinishedTwelveHoursTimer
   754 ;;		_startTwentySecondsTimer
   755 ;;		_getAdOriginaCh4Value
   756 ;;		_isFinishedTwentySecondsTimer
   757 ;;		_startThreeHoursTimer
   758 ;;		_isFinishedThreeHoursTimer
   759 ;;		_clearThreeHoursTimer
   760 ;;		_clearAllTimer
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765  000D                     _main:	
   766                           
   767                           ;main.c: 106: enum setp_Adc4
   768                           ;main.c: 107: {
   769                           ;main.c: 108: ADC4_STEP_INIT = 0,
   770                           ;main.c: 109: ADC4_STEP_FIRST,
   771                           ;main.c: 110: ADC4_STEP_SECOND,
   772                           ;main.c: 111: ADC4_STEP_THIRD,
   773                           ;main.c: 112: ADC4_STEP_FOURTH,
   774                           ;main.c: 113: ADC4_STEP_FIFTH,
   775                           ;main.c: 114: ADC4_STEP_SIXTH,
   776                           ;main.c: 115: };
   777                           ;main.c: 118: static unsigned char ucWaitTime1S = 0;
   778                           ;main.c: 120: static unsigned char ucWaitTimeO3s = 0;
   779                           ;main.c: 122: static unsigned char ucSmallTimerActionFlag = 0;
   780                           ;main.c: 124: static unsigned char ucSetSmallActionFlag = 0;
   781                           
   782                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   783  000D  1683               	bsf	3,5	;RP0=1, select bank1
   784  000E  1005               	bcf	5,0
   785                           
   786                           ;main.c: 127: TRISA1 = 0;
   787  000F  1085               	bcf	5,1
   788                           
   789                           ;main.c: 128: TRISA2 = 0;
   790  0010  1105               	bcf	5,2
   791                           
   792                           ;main.c: 129: TRISA3 = 0;
   793  0011  1185               	bcf	5,3
   794                           
   795                           ;main.c: 130: TRISB0 = 0;
   796  0012  1006               	bcf	6,0
   797                           
   798                           ;main.c: 131: TRISB1 = 0;
   799  0013  1086               	bcf	6,1
   800                           
   801                           ;main.c: 132: TRISA6 = 0;
   802  0014  1305               	bcf	5,6
   803                           
   804                           ;main.c: 133: TRISA7 = 0;
   805  0015  1385               	bcf	5,7
   806                           
   807                           ;main.c: 135: PBOD6 = 1;
   808  0016  1703               	bsf	3,6	;RP1=1, select bank3
   809  0017  1708               	bsf	8,6
   810                           
   811                           ;main.c: 137: PA0 = 0;
   812  0018  1283               	bcf	3,5	;RP0=0, select bank0
   813  0019  1303               	bcf	3,6	;RP1=0, select bank0
   814  001A  1005               	bcf	5,0
   815                           
   816                           ;main.c: 138: PA1 = 0;
   817  001B  1085               	bcf	5,1
   818                           
   819                           ;main.c: 139: PA2 = 0;
   820  001C  1105               	bcf	5,2
   821                           
   822                           ;main.c: 140: PA3 = 1;
   823  001D  1585               	bsf	5,3
   824                           
   825                           ;main.c: 141: PB0 = 0;
   826  001E  1006               	bcf	6,0
   827                           
   828                           ;main.c: 142: PB1 = 0;
   829  001F  1086               	bcf	6,1
   830                           
   831                           ;main.c: 143: PA6 = 0;
   832  0020  1305               	bcf	5,6
   833                           
   834                           ;main.c: 144: PA7 = 0;
   835  0021  1385               	bcf	5,7
   836                           
   837                           ;main.c: 146: TRISB2 = 1;
   838  0022  1683               	bsf	3,5	;RP0=1, select bank1
   839  0023  1506               	bsf	6,2
   840                           
   841                           ;main.c: 148: TRISB7 = 1;
   842  0024  1786               	bsf	6,7
   843                           
   844                           ;main.c: 149: TRISB4 = 1;
   845  0025  1606               	bsf	6,4
   846                           
   847                           ;main.c: 151: clock_config();
   848  0026  118A  247C  118A   	fcall	_clock_config
   849                           
   850                           ;main.c: 152: timer1_config();
   851  0029  118A  2462  118A   	fcall	_timer1_config
   852                           
   853                           ;main.c: 153: timer1_interrupt_config();
   854  002C  118A  24BC  118A   	fcall	_timer1_interrupt_config
   855                           
   856                           ;main.c: 155: adc_test_init(14,3);
   857  002F  3003               	movlw	3
   858  0030  1283               	bcf	3,5	;RP0=0, select bank0
   859  0031  00D5               	movwf	?_adc_test_init
   860  0032  300E               	movlw	14
   861  0033  118A  238A  118A   	fcall	_adc_test_init
   862                           
   863                           ;main.c: 157: dac_init();
   864  0036  118A  24B3  118A   	fcall	_dac_init
   865                           
   866                           ;main.c: 158: op1_init();
   867  0039  118A  2457  118A   	fcall	_op1_init
   868                           
   869                           ;main.c: 159: op2_init();
   870  003C  118A  2474  118A   	fcall	_op2_init
   871                           
   872                           ;main.c: 162: adc_start();
   873  003F  118A  239F  118A   	fcall	_adc_start
   874  0042                     l3917:	
   875  0042  0064               	clrwdt	;#
   876                           
   877                           ;main.c: 197: if(isPermitSampleTime())
   878  0043  118A  24AE  118A   	fcall	_isPermitSampleTime
   879  0046  3A00               	xorlw	0
   880  0047  1903               	skipnz
   881  0048  2842               	goto	l3917
   882                           
   883                           ;main.c: 198: {
   884                           ;main.c: 199: clrSampeTime();
   885  0049  118A  24BF  118A   	fcall	_clrSampeTime
   886                           
   887                           ;main.c: 200: process_AD_Converter_Value();
   888  004C  118A  22FE  118A   	fcall	_process_AD_Converter_Value
   889                           
   890                           ;main.c: 202: switch(enumMainLoopStep)
   891  004F  2AE0               	goto	l4393
   892  0050                     l3925:	
   893                           
   894                           ;main.c: 205: {
   895                           ;main.c: 206: static unsigned char ucTimerZeroPoint5s = 0;
   896                           ;main.c: 207: if(getAdOriginalCh14Value() > 1950)
   897  0050  118A  24A9  118A   	fcall	_getAdOriginalCh14Value
   898  0053  3007               	movlw	7
   899  0054  0256               	subwf	?_getAdOriginalCh14Value+1,w
   900  0055  309F               	movlw	159
   901  0056  1903               	skipnz
   902  0057  0255               	subwf	?_getAdOriginalCh14Value,w
   903  0058  1C03               	skipc
   904  0059  285C               	goto	l3929
   905                           
   906                           ;main.c: 208: {
   907                           ;main.c: 209: ucTimerZeroPoint5s++;
   908  005A  0AD4               	incf	main@ucTimerZeroPoint5s,f
   909                           
   910                           ;main.c: 210: }
   911  005B  285D               	goto	l3931
   912  005C                     l3929:	
   913                           
   914                           ;main.c: 211: else
   915                           ;main.c: 212: ucTimerZeroPoint5s = 0;
   916  005C  01D4               	clrf	main@ucTimerZeroPoint5s
   917  005D                     l3931:	
   918                           
   919                           ;main.c: 214: if(ucTimerZeroPoint5s >= 5)
   920  005D  3005               	movlw	5
   921  005E  0254               	subwf	main@ucTimerZeroPoint5s,w
   922  005F  1C03               	skipc
   923  0060  2842               	goto	l3917
   924                           
   925                           ;main.c: 215: {
   926                           ;main.c: 216: ucTimerZeroPoint5s = 0;
   927  0061  01D4               	clrf	main@ucTimerZeroPoint5s
   928  0062                     l3935:	
   929                           
   930                           ;main.c: 217: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   931  0062  01C0               	clrf	main@enumMainLoopStep
   932  0063  0AC0               	incf	main@enumMainLoopStep,f
   933  0064                     l703:	
   934                           
   935                           ;main.c: 218: }
   936                           ;main.c: 219: break;
   937  0064  2842               	goto	l3917
   938  0065                     l3937:	
   939                           
   940                           ;main.c: 223: {
   941                           ;main.c: 224: static unsigned char ucTimerZeroPoint3s = 0;
   942                           ;main.c: 225: if(getAdOriginalCh14Value() > 1950)
   943  0065  118A  24A9  118A   	fcall	_getAdOriginalCh14Value
   944  0068  3007               	movlw	7
   945  0069  0256               	subwf	?_getAdOriginalCh14Value+1,w
   946  006A  309F               	movlw	159
   947  006B  1903               	skipnz
   948  006C  0255               	subwf	?_getAdOriginalCh14Value,w
   949  006D  1C03               	skipc
   950  006E  2871               	goto	l3941
   951                           
   952                           ;main.c: 226: {
   953                           ;main.c: 227: ucTimerZeroPoint3s++;
   954  006F  0AD3               	incf	main@ucTimerZeroPoint3s,f
   955                           
   956                           ;main.c: 228: }
   957  0070  2872               	goto	l3943
   958  0071                     l3941:	
   959                           
   960                           ;main.c: 229: else
   961                           ;main.c: 230: ucTimerZeroPoint3s = 0;
   962  0071  01D3               	clrf	main@ucTimerZeroPoint3s
   963  0072                     l3943:	
   964                           
   965                           ;main.c: 232: if(ucTimerZeroPoint3s >= 3)
   966  0072  3003               	movlw	3
   967  0073  0253               	subwf	main@ucTimerZeroPoint3s,w
   968  0074  1C03               	skipc
   969  0075  2879               	goto	l3949
   970                           
   971                           ;main.c: 233: {
   972                           ;main.c: 234: ucTimerZeroPoint3s = 0;
   973  0076  01D3               	clrf	main@ucTimerZeroPoint3s
   974  0077                     l3947:	
   975                           
   976                           ;main.c: 235: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
   977  0077  3002               	movlw	2
   978  0078  28B2               	goto	L5
   979  0079                     l3949:	
   980                           ;main.c: 236: }
   981                           
   982                           
   983                           ;main.c: 237: else
   984                           ;main.c: 238: {
   985                           ;main.c: 239: clearPinPortAndTimer();
   986  0079  118A  240A  118A   	fcall	_clearPinPortAndTimer
   987  007C  2842               	goto	l3917
   988  007D                     l712:	
   989                           ;main.c: 242: }
   990                           ;main.c: 244: case MAIN_LOOP_STEP_SECOND:
   991                           
   992  007D  3003               	movlw	3
   993                           
   994                           ;main.c: 245: {
   995                           ;main.c: 247: PA6 = 1;
   996  007E  1705               	bsf	5,6
   997                           
   998                           ;main.c: 248: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
   999  007F  28B2               	goto	L5
  1000  0080                     l3953:	
  1001                           ;main.c: 250: break;
  1002                           
  1003                           
  1004                           ;main.c: 254: {
  1005                           ;main.c: 255: static unsigned char ucTimerADC1ZeroP5s = 0;
  1006                           ;main.c: 257: if(getAdOriginalCh1Value() < 130)
  1007  0080  118A  24A4  118A   	fcall	_getAdOriginalCh1Value
  1008  0083  3000               	movlw	0
  1009  0084  0256               	subwf	?_getAdOriginalCh1Value+1,w
  1010  0085  3082               	movlw	130
  1011  0086  1903               	skipnz
  1012  0087  0255               	subwf	?_getAdOriginalCh1Value,w
  1013  0088  1803               	skipnc
  1014  0089  288C               	goto	l3957
  1015                           
  1016                           ;main.c: 258: {
  1017                           ;main.c: 259: ucTimerADC1ZeroP5s = 0;
  1018  008A  01C9               	clrf	main@ucTimerADC1ZeroP5s
  1019                           
  1020                           ;main.c: 261: }
  1021  008B  288D               	goto	l3959
  1022  008C                     l3957:	
  1023                           
  1024                           ;main.c: 262: else
  1025                           ;main.c: 263: {
  1026                           ;main.c: 264: ucTimerADC1ZeroP5s++;
  1027  008C  0AC9               	incf	main@ucTimerADC1ZeroP5s,f
  1028  008D                     l3959:	
  1029                           
  1030                           ;main.c: 265: }
  1031                           ;main.c: 267: if(ucTimerADC1ZeroP5s >= 1)
  1032  008D  0849               	movf	main@ucTimerADC1ZeroP5s,w
  1033  008E  1903               	btfsc	3,2
  1034  008F  2893               	goto	l3965
  1035  0090  3004               	movlw	4
  1036                           
  1037                           ;main.c: 268: {
  1038                           ;main.c: 269: ucTimerADC1ZeroP5s = 0;
  1039  0091  01C9               	clrf	main@ucTimerADC1ZeroP5s
  1040                           
  1041                           ;main.c: 270: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1042  0092  28B2               	goto	L5
  1043  0093                     l3965:	
  1044                           ;main.c: 271: }
  1045                           
  1046                           
  1047                           ;main.c: 272: else
  1048                           ;main.c: 273: {
  1049                           ;main.c: 274: static unsigned char ucTimerRightP5s = 0;
  1050                           ;main.c: 276: if(getAdOriginalCh1Value() < 0x0075)
  1051  0093  118A  24A4  118A   	fcall	_getAdOriginalCh1Value
  1052  0096  3000               	movlw	0
  1053  0097  0256               	subwf	?_getAdOriginalCh1Value+1,w
  1054  0098  3075               	movlw	117
  1055  0099  1903               	skipnz
  1056  009A  0255               	subwf	?_getAdOriginalCh1Value,w
  1057  009B  1803               	skipnc
  1058  009C  289F               	goto	l3969
  1059                           
  1060                           ;main.c: 277: {
  1061                           ;main.c: 278: ucTimerRightP5s++;
  1062  009D  0AD0               	incf	main@ucTimerRightP5s,f
  1063                           
  1064                           ;main.c: 279: }
  1065  009E  28A0               	goto	l3971
  1066  009F                     l3969:	
  1067                           
  1068                           ;main.c: 280: else
  1069                           ;main.c: 281: {
  1070                           ;main.c: 282: ucTimerRightP5s = 0;
  1071  009F  01D0               	clrf	main@ucTimerRightP5s
  1072  00A0                     l3971:	
  1073                           
  1074                           ;main.c: 283: }
  1075                           ;main.c: 285: if(ucTimerRightP5s >= 1)
  1076  00A0  0850               	movf	main@ucTimerRightP5s,w
  1077  00A1  1903               	btfsc	3,2
  1078  00A2  2842               	goto	l3917
  1079  00A3  3008               	movlw	8
  1080                           
  1081                           ;main.c: 286: {
  1082                           ;main.c: 287: ucTimerRightP5s = 0;
  1083  00A4  01D0               	clrf	main@ucTimerRightP5s
  1084                           
  1085                           ;main.c: 288: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1086  00A5  28B2               	goto	L5
  1087  00A6                     l3977:	
  1088                           ;main.c: 289: }
  1089                           
  1090                           
  1091                           ;main.c: 300: {
  1092                           ;main.c: 302: startTwelveHourTimer();
  1093  00A6  118A  249F  118A   	fcall	_startTwelveHourTimer
  1094                           
  1095                           ;main.c: 303: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1096  00A9  3005               	movlw	5
  1097  00AA  28B2               	goto	L5
  1098  00AB                     l3981:	
  1099                           ;main.c: 305: break;
  1100                           
  1101                           
  1102                           ;main.c: 309: {
  1103                           ;main.c: 311: if(isFinishedTwelveHoursTimer())
  1104  00AB  118A  249A  118A   	fcall	_isFinishedTwelveHoursTimer
  1105  00AE  3A00               	xorlw	0
  1106  00AF  1903               	skipnz
  1107  00B0  2A37               	goto	l4293
  1108  00B1                     l3983:	
  1109                           
  1110                           ;main.c: 312: {
  1111                           ;main.c: 313: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1112  00B1  3009               	movlw	9
  1113  00B2                     L5:	
  1114  00B2  00C0               	movwf	main@enumMainLoopStep
  1115                           
  1116                           ;main.c: 314: }
  1117  00B3  2842               	goto	l3917
  1118  00B4                     l3985:	
  1119                           
  1120                           ;main.c: 322: {
  1121                           ;main.c: 323: startTwentySecondsTimer();
  1122  00B4  118A  24B8  118A   	fcall	_startTwentySecondsTimer
  1123  00B7                     l3987:	
  1124                           
  1125                           ;main.c: 324: ucADC4_Step = ADC4_STEP_FIRST;
  1126  00B7  01C1               	clrf	main@ucADC4_Step
  1127  00B8  0AC1               	incf	main@ucADC4_Step,f
  1128                           
  1129                           ;main.c: 325: break;
  1130  00B9  2842               	goto	l3917
  1131  00BA                     l3989:	
  1132                           
  1133                           ;main.c: 329: {
  1134                           ;main.c: 330: if(getAdOriginaCh4Value() < 1911)
  1135  00BA  118A  2495  118A   	fcall	_getAdOriginaCh4Value
  1136  00BD  3007               	movlw	7
  1137  00BE  0256               	subwf	?_getAdOriginaCh4Value+1,w
  1138  00BF  3077               	movlw	119
  1139  00C0  1903               	skipnz
  1140  00C1  0255               	subwf	?_getAdOriginaCh4Value,w
  1141  00C2  1803               	skipnc
  1142  00C3  28C6               	goto	l3993
  1143                           
  1144                           ;main.c: 331: ucChannel4Type = LESS_THAN_1911;
  1145  00C4  01C2               	clrf	main@ucChannel4Type
  1146  00C5  28ED               	goto	l737
  1147  00C6                     l3993:	
  1148                           
  1149                           ;main.c: 332: else if(getAdOriginaCh4Value() < 2067)
  1150  00C6  118A  2495  118A   	fcall	_getAdOriginaCh4Value
  1151  00C9  3008               	movlw	8
  1152  00CA  0256               	subwf	?_getAdOriginaCh4Value+1,w
  1153  00CB  3013               	movlw	19
  1154  00CC  1903               	skipnz
  1155  00CD  0255               	subwf	?_getAdOriginaCh4Value,w
  1156  00CE  1803               	skipnc
  1157  00CF  28D3               	goto	l3997
  1158                           
  1159                           ;main.c: 333: ucChannel4Type = BETWEEN_1911_AND_2067;
  1160  00D0  01C2               	clrf	main@ucChannel4Type
  1161  00D1  0AC2               	incf	main@ucChannel4Type,f
  1162  00D2  28ED               	goto	l737
  1163  00D3                     l3997:	
  1164                           
  1165                           ;main.c: 334: else if(getAdOriginaCh4Value() < 2204)
  1166  00D3  118A  2495  118A   	fcall	_getAdOriginaCh4Value
  1167  00D6  3008               	movlw	8
  1168  00D7  0256               	subwf	?_getAdOriginaCh4Value+1,w
  1169  00D8  309C               	movlw	156
  1170  00D9  1903               	skipnz
  1171  00DA  0255               	subwf	?_getAdOriginaCh4Value,w
  1172  00DB  1803               	skipnc
  1173  00DC  28DF               	goto	l4001
  1174                           
  1175                           ;main.c: 335: ucChannel4Type = BETWEEN_2067_AND_2204;
  1176  00DD  3002               	movlw	2
  1177  00DE  28EC               	goto	L6
  1178  00DF                     l4001:	
  1179                           
  1180                           ;main.c: 336: else if(getAdOriginaCh4Value() < 2340)
  1181  00DF  118A  2495  118A   	fcall	_getAdOriginaCh4Value
  1182  00E2  3009               	movlw	9
  1183  00E3  0256               	subwf	?_getAdOriginaCh4Value+1,w
  1184  00E4  3024               	movlw	36
  1185  00E5  1903               	skipnz
  1186  00E6  0255               	subwf	?_getAdOriginaCh4Value,w
  1187  00E7  1803               	skipnc
  1188  00E8  28EB               	goto	l4005
  1189                           
  1190                           ;main.c: 337: ucChannel4Type = BETWEEN_2204_AND_2340;
  1191  00E9  3003               	movlw	3
  1192  00EA  28EC               	goto	L6
  1193  00EB                     l4005:	
  1194                           
  1195                           ;main.c: 338: else
  1196                           ;main.c: 339: ucChannel4Type = MORE_THAN_2340;
  1197  00EB  3004               	movlw	4
  1198  00EC                     L6:	
  1199  00EC  00C2               	movwf	main@ucChannel4Type
  1200  00ED                     l737:	
  1201                           
  1202                           ;main.c: 341: ucADC4_Step = ADC4_STEP_SECOND;
  1203  00ED  3002               	movlw	2
  1204  00EE  2A25               	goto	L8
  1205  00EF                     l752:	
  1206                           ;main.c: 356: {
  1207                           ;main.c: 357: case 0:
  1208                           
  1209                           ;main.c: 342: break;
  1210                           
  1211                           
  1212                           ;main.c: 358: {
  1213                           ;main.c: 359: PB0 = 1;
  1214  00EF  1406               	bsf	6,0
  1215  00F0                     l4007:	
  1216                           
  1217                           ;main.c: 360: ucLoaderStep++;
  1218  00F0  0AC3               	incf	main@ucLoaderStep,f
  1219                           
  1220                           ;main.c: 361: break;
  1221  00F1  2842               	goto	l3917
  1222  00F2                     l4009:	
  1223                           
  1224                           ;main.c: 365: {
  1225                           ;main.c: 366: if(ucTimerDelay >= 5)
  1226  00F2  3005               	movlw	5
  1227  00F3  024A               	subwf	main@ucTimerDelay,w
  1228  00F4  1C03               	skipc
  1229  00F5  28F9               	goto	l4017
  1230                           
  1231                           ;main.c: 367: {
  1232                           ;main.c: 368: PA0 = 1;
  1233  00F6  1405               	bsf	5,0
  1234  00F7                     l4013:	
  1235                           
  1236                           ;main.c: 369: ucTimerDelay = 0;
  1237  00F7  01CA               	clrf	main@ucTimerDelay
  1238  00F8  28F0               	goto	l4007
  1239  00F9                     l4017:	
  1240                           
  1241                           ;main.c: 372: else
  1242                           ;main.c: 373: ucTimerDelay++;
  1243  00F9  0ACA               	incf	main@ucTimerDelay,f
  1244  00FA  2842               	goto	l3917
  1245  00FB                     l4019:	
  1246                           
  1247                           ;main.c: 378: {
  1248                           ;main.c: 379: if(ucTimerDelay >= 5)
  1249  00FB  3005               	movlw	5
  1250  00FC  024A               	subwf	main@ucTimerDelay,w
  1251  00FD  1C03               	skipc
  1252  00FE  28F9               	goto	l4017
  1253                           
  1254                           ;main.c: 380: {
  1255                           ;main.c: 381: PA1= 1;
  1256  00FF  1485               	bsf	5,1
  1257  0100  28F7               	goto	l4013
  1258  0101                     l4029:	
  1259                           
  1260                           ;main.c: 392: {
  1261                           ;main.c: 393: if(ucTimerDelay >= 5)
  1262  0101  3005               	movlw	5
  1263  0102  024A               	subwf	main@ucTimerDelay,w
  1264  0103  1C03               	skipc
  1265  0104  28F9               	goto	l4017
  1266                           
  1267                           ;main.c: 394: {
  1268                           ;main.c: 395: PA2= 1;
  1269  0105  1505               	bsf	5,2
  1270  0106  28F7               	goto	l4013
  1271  0107                     l4039:	
  1272                           
  1273                           ;main.c: 405: {
  1274                           ;main.c: 406: if(ucTimerDelay >= 5)
  1275  0107  3005               	movlw	5
  1276  0108  024A               	subwf	main@ucTimerDelay,w
  1277  0109  1C03               	skipc
  1278  010A  28F9               	goto	l4017
  1279                           
  1280                           ;main.c: 407: {
  1281                           ;main.c: 408: PA3 = 1;
  1282  010B  1585               	bsf	5,3
  1283  010C  28F7               	goto	l4013
  1284  010D                     l4049:	
  1285                           
  1286                           ;main.c: 418: {
  1287                           ;main.c: 419: if(ucTimerDelay >= 5)
  1288  010D  3005               	movlw	5
  1289  010E  024A               	subwf	main@ucTimerDelay,w
  1290  010F  1C03               	skipc
  1291  0110  28F9               	goto	l4017
  1292                           
  1293                           ;main.c: 420: {
  1294                           ;main.c: 421: PB2 = 0;
  1295  0111  1106               	bcf	6,2
  1296                           
  1297                           ;main.c: 422: PA0 = 0;
  1298  0112  1005               	bcf	5,0
  1299                           
  1300                           ;main.c: 423: PA1 = 0;
  1301  0113  1085               	bcf	5,1
  1302                           
  1303                           ;main.c: 424: PA2 = 0;
  1304  0114  1105               	bcf	5,2
  1305                           
  1306                           ;main.c: 425: PA3 = 0;
  1307  0115  1185               	bcf	5,3
  1308  0116  28F7               	goto	l4013
  1309  0117                     l4059:	
  1310                           
  1311                           ;main.c: 435: {
  1312                           ;main.c: 436: if(ucTimerDelay >= 2)
  1313  0117  3002               	movlw	2
  1314  0118  024A               	subwf	main@ucTimerDelay,w
  1315  0119  1C03               	skipc
  1316  011A  28F9               	goto	l4017
  1317                           
  1318                           ;main.c: 437: {
  1319                           ;main.c: 438: ucTimerDelay = 0;
  1320  011B  01CA               	clrf	main@ucTimerDelay
  1321                           
  1322                           ;main.c: 440: ucLoaderStep = 0;
  1323  011C  01C3               	clrf	main@ucLoaderStep
  1324  011D                     l4063:	
  1325                           
  1326                           ;main.c: 441: ucADC4_Step = ADC4_STEP_THIRD;
  1327  011D  3003               	movlw	3
  1328  011E  2A25               	goto	L8
  1329  011F                     l4069:	
  1330                           ;main.c: 442: }
  1331                           
  1332  011F  0843               	movf	main@ucLoaderStep,w
  1333                           
  1334                           ; Switch size 1, requested type "space"
  1335                           ; Number of cases is 7, Range of values is 0 to 6
  1336                           ; switch strategies available:
  1337                           ; Name         Instructions Cycles
  1338                           ; direct_byte           21     7 (fixed)
  1339                           ; simple_byte           22    12 (average)
  1340                           ; jumptable            260     6 (fixed)
  1341                           ; rangetable            11     6 (fixed)
  1342                           ; spacedrange           20     9 (fixed)
  1343                           ; locatedrange           7     3 (fixed)
  1344                           ;	Chosen strategy is direct_byte
  1345  0120  0084               	movwf	4
  1346  0121  3007               	movlw	7
  1347  0122  0204               	subwf	4,w
  1348  0123  1803               	skipnc
  1349  0124  2842               	goto	l3917
  1350  0125  3004               	movlw	high S4611
  1351  0126  008A               	movwf	10
  1352  0127  1003               	clrc
  1353  0128  0D04               	rlf	4,w
  1354  0129  3E2F               	addlw	low S4611
  1355  012A  0082               	movwf	2
  1356  012B                     l780:	
  1357                           ;main.c: 461: {
  1358                           ;main.c: 462: case 0:
  1359                           
  1360                           
  1361                           ;main.c: 463: {
  1362                           ;main.c: 464: PB0 = 1;
  1363  012B  1406               	bsf	6,0
  1364  012C                     l4071:	
  1365                           
  1366                           ;main.c: 465: ucLoaderStep1++;
  1367  012C  0AC4               	incf	main@ucLoaderStep1,f
  1368                           
  1369                           ;main.c: 466: break;
  1370  012D  2842               	goto	l3917
  1371  012E                     l4073:	
  1372                           
  1373                           ;main.c: 470: {
  1374                           ;main.c: 471: if(ucTimerDelay1 >= 5)
  1375  012E  3005               	movlw	5
  1376  012F  024B               	subwf	main@ucTimerDelay1,w
  1377  0130  1C03               	skipc
  1378  0131  2935               	goto	l4081
  1379                           
  1380                           ;main.c: 472: {
  1381                           ;main.c: 473: PA0 = 1;
  1382  0132  1405               	bsf	5,0
  1383  0133                     l4077:	
  1384                           
  1385                           ;main.c: 474: ucTimerDelay1 = 0;
  1386  0133  01CB               	clrf	main@ucTimerDelay1
  1387  0134  292C               	goto	l4071
  1388  0135                     l4081:	
  1389                           
  1390                           ;main.c: 477: else
  1391                           ;main.c: 478: ucTimerDelay1++;
  1392  0135  0ACB               	incf	main@ucTimerDelay1,f
  1393  0136  2842               	goto	l3917
  1394  0137                     l4083:	
  1395                           
  1396                           ;main.c: 483: {
  1397                           ;main.c: 484: if(ucTimerDelay1 >= 5)
  1398  0137  3005               	movlw	5
  1399  0138  024B               	subwf	main@ucTimerDelay1,w
  1400  0139  1C03               	skipc
  1401  013A  2935               	goto	l4081
  1402                           
  1403                           ;main.c: 485: {
  1404                           ;main.c: 486: PA1= 1;
  1405  013B  1485               	bsf	5,1
  1406  013C  2933               	goto	l4077
  1407  013D                     l4093:	
  1408                           
  1409                           ;main.c: 496: {
  1410                           ;main.c: 497: if(ucTimerDelay1 >= 5)
  1411  013D  3005               	movlw	5
  1412  013E  024B               	subwf	main@ucTimerDelay1,w
  1413  013F  1C03               	skipc
  1414  0140  2935               	goto	l4081
  1415                           
  1416                           ;main.c: 498: {
  1417                           ;main.c: 499: PA2 = 1;
  1418  0141  1505               	bsf	5,2
  1419  0142  2933               	goto	l4077
  1420  0143                     l4103:	
  1421                           
  1422                           ;main.c: 509: {
  1423                           ;main.c: 510: if(ucTimerDelay1 >= 5)
  1424  0143  3005               	movlw	5
  1425  0144  024B               	subwf	main@ucTimerDelay1,w
  1426  0145  1C03               	skipc
  1427  0146  2935               	goto	l4081
  1428                           
  1429                           ;main.c: 511: {
  1430                           ;main.c: 512: PA3 = 1;
  1431  0147  1585               	bsf	5,3
  1432  0148  2933               	goto	l4077
  1433  0149                     l4113:	
  1434                           
  1435                           ;main.c: 522: {
  1436                           ;main.c: 523: if(ucTimerDelay1 >= 5)
  1437  0149  3005               	movlw	5
  1438  014A  024B               	subwf	main@ucTimerDelay1,w
  1439  014B  1C03               	skipc
  1440  014C  2935               	goto	l4081
  1441                           
  1442                           ;main.c: 524: {
  1443                           ;main.c: 525: PA0 = 0;
  1444  014D  1005               	bcf	5,0
  1445                           
  1446                           ;main.c: 526: PA1 = 0;
  1447  014E  1085               	bcf	5,1
  1448                           
  1449                           ;main.c: 527: PA2 = 0;
  1450  014F  1105               	bcf	5,2
  1451                           
  1452                           ;main.c: 528: PA3 = 0;
  1453  0150  1185               	bcf	5,3
  1454  0151  2933               	goto	l4077
  1455  0152                     l4123:	
  1456                           
  1457                           ;main.c: 538: {
  1458                           ;main.c: 539: if(ucTimerDelay1 >= 2)
  1459  0152  3002               	movlw	2
  1460  0153  024B               	subwf	main@ucTimerDelay1,w
  1461  0154  1C03               	skipc
  1462  0155  2935               	goto	l4081
  1463                           
  1464                           ;main.c: 540: {
  1465                           ;main.c: 541: ucTimerDelay1 = 0;
  1466  0156  01CB               	clrf	main@ucTimerDelay1
  1467                           
  1468                           ;main.c: 543: ucLoaderStep1 = 0;
  1469  0157  01C4               	clrf	main@ucLoaderStep1
  1470  0158  291D               	goto	l4063
  1471  0159                     l4133:	
  1472  0159  0844               	movf	main@ucLoaderStep1,w
  1473                           
  1474                           ; Switch size 1, requested type "space"
  1475                           ; Number of cases is 7, Range of values is 0 to 6
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; direct_byte           21     7 (fixed)
  1479                           ; simple_byte           22    12 (average)
  1480                           ; jumptable            260     6 (fixed)
  1481                           ; rangetable            11     6 (fixed)
  1482                           ; spacedrange           20     9 (fixed)
  1483                           ; locatedrange           7     3 (fixed)
  1484                           ;	Chosen strategy is direct_byte
  1485  015A  0084               	movwf	4
  1486  015B  3007               	movlw	7
  1487  015C  0204               	subwf	4,w
  1488  015D  1803               	skipnc
  1489  015E  2842               	goto	l3917
  1490  015F  3004               	movlw	high S4613
  1491  0160  008A               	movwf	10
  1492  0161  1003               	clrc
  1493  0162  0D04               	rlf	4,w
  1494  0163  3E3D               	addlw	low S4613
  1495  0164  0082               	movwf	2
  1496  0165                     l807:	
  1497                           ;main.c: 565: {
  1498                           ;main.c: 566: case 0:
  1499                           
  1500                           
  1501                           ;main.c: 567: {
  1502                           ;main.c: 568: PB0 = 1;
  1503  0165  1406               	bsf	6,0
  1504                           
  1505                           ;main.c: 569: PA0 = 1;
  1506  0166  1405               	bsf	5,0
  1507  0167                     l4135:	
  1508                           
  1509                           ;main.c: 570: ucLoaderStep2++;
  1510  0167  0AC5               	incf	main@ucLoaderStep2,f
  1511                           
  1512                           ;main.c: 571: break;
  1513  0168  2842               	goto	l3917
  1514  0169                     l4137:	
  1515                           
  1516                           ;main.c: 575: {
  1517                           ;main.c: 576: if(ucTimerDelay2 >= 5)
  1518  0169  3005               	movlw	5
  1519  016A  024C               	subwf	main@ucTimerDelay2,w
  1520  016B  1C03               	skipc
  1521  016C  2970               	goto	l4145
  1522                           
  1523                           ;main.c: 577: {
  1524                           ;main.c: 578: PA1 = 1;
  1525  016D  1485               	bsf	5,1
  1526  016E                     l4141:	
  1527                           
  1528                           ;main.c: 579: ucTimerDelay2 = 0;
  1529  016E  01CC               	clrf	main@ucTimerDelay2
  1530  016F  2967               	goto	l4135
  1531  0170                     l4145:	
  1532                           
  1533                           ;main.c: 582: else
  1534                           ;main.c: 583: ucTimerDelay2++;
  1535  0170  0ACC               	incf	main@ucTimerDelay2,f
  1536  0171  2842               	goto	l3917
  1537  0172                     l4147:	
  1538                           
  1539                           ;main.c: 588: {
  1540                           ;main.c: 589: if(ucTimerDelay2 >= 5)
  1541  0172  3005               	movlw	5
  1542  0173  024C               	subwf	main@ucTimerDelay2,w
  1543  0174  1C03               	skipc
  1544  0175  2970               	goto	l4145
  1545                           
  1546                           ;main.c: 590: {
  1547                           ;main.c: 591: PA2 = 1;
  1548  0176  1505               	bsf	5,2
  1549  0177  296E               	goto	l4141
  1550  0178                     l4157:	
  1551                           
  1552                           ;main.c: 601: {
  1553                           ;main.c: 602: if(ucTimerDelay2 >= 5)
  1554  0178  3005               	movlw	5
  1555  0179  024C               	subwf	main@ucTimerDelay2,w
  1556  017A  1C03               	skipc
  1557  017B  2970               	goto	l4145
  1558                           
  1559                           ;main.c: 603: {
  1560                           ;main.c: 604: PA3 = 1;
  1561  017C  1585               	bsf	5,3
  1562  017D  296E               	goto	l4141
  1563  017E                     l4167:	
  1564                           
  1565                           ;main.c: 614: {
  1566                           ;main.c: 615: if(ucTimerDelay2 >= 5)
  1567  017E  3005               	movlw	5
  1568  017F  024C               	subwf	main@ucTimerDelay2,w
  1569  0180  1C03               	skipc
  1570  0181  2970               	goto	l4145
  1571                           
  1572                           ;main.c: 616: {
  1573                           ;main.c: 618: PA1 = 0;
  1574  0182  1085               	bcf	5,1
  1575                           
  1576                           ;main.c: 619: PA2 = 0;
  1577  0183  1105               	bcf	5,2
  1578                           
  1579                           ;main.c: 620: PA3 = 0;
  1580  0184  1185               	bcf	5,3
  1581  0185  296E               	goto	l4141
  1582  0186                     l4177:	
  1583                           
  1584                           ;main.c: 630: {
  1585                           ;main.c: 631: if(ucTimerDelay2 >= 2)
  1586  0186  3002               	movlw	2
  1587  0187  024C               	subwf	main@ucTimerDelay2,w
  1588  0188  1C03               	skipc
  1589  0189  2970               	goto	l4145
  1590                           
  1591                           ;main.c: 632: {
  1592                           ;main.c: 633: ucTimerDelay2 = 0;
  1593  018A  01CC               	clrf	main@ucTimerDelay2
  1594                           
  1595                           ;main.c: 635: ucLoaderStep2 = 0;
  1596  018B  01C5               	clrf	main@ucLoaderStep2
  1597  018C  291D               	goto	l4063
  1598  018D                     l4187:	
  1599  018D  0845               	movf	main@ucLoaderStep2,w
  1600                           
  1601                           ; Switch size 1, requested type "space"
  1602                           ; Number of cases is 6, Range of values is 0 to 5
  1603                           ; switch strategies available:
  1604                           ; Name         Instructions Cycles
  1605                           ; direct_byte           19     7 (fixed)
  1606                           ; simple_byte           19    10 (average)
  1607                           ; jumptable            260     6 (fixed)
  1608                           ; rangetable            10     6 (fixed)
  1609                           ; spacedrange           18     9 (fixed)
  1610                           ; locatedrange           6     3 (fixed)
  1611                           ;	Chosen strategy is direct_byte
  1612  018E  0084               	movwf	4
  1613  018F  3006               	movlw	6
  1614  0190  0204               	subwf	4,w
  1615  0191  1803               	skipnc
  1616  0192  2842               	goto	l3917
  1617  0193  3004               	movlw	high S4615
  1618  0194  008A               	movwf	10
  1619  0195  1003               	clrc
  1620  0196  0D04               	rlf	4,w
  1621  0197  3E4B               	addlw	low S4615
  1622  0198  0082               	movwf	2
  1623  0199                     l831:	
  1624                           ;main.c: 657: {
  1625                           ;main.c: 658: case 0:
  1626                           
  1627                           
  1628                           ;main.c: 659: {
  1629                           ;main.c: 660: PB0 = 1;
  1630  0199  1406               	bsf	6,0
  1631                           
  1632                           ;main.c: 661: PA0 = 1;
  1633  019A  1405               	bsf	5,0
  1634                           
  1635                           ;main.c: 662: PA1 = 1;
  1636  019B  1485               	bsf	5,1
  1637  019C                     l4189:	
  1638                           
  1639                           ;main.c: 663: ucLoaderStep3++;
  1640  019C  0AC6               	incf	main@ucLoaderStep3,f
  1641                           
  1642                           ;main.c: 664: break;
  1643  019D  2842               	goto	l3917
  1644  019E                     l4191:	
  1645                           
  1646                           ;main.c: 668: {
  1647                           ;main.c: 669: if(ucTimerDelay3 >= 5)
  1648  019E  3005               	movlw	5
  1649  019F  024D               	subwf	main@ucTimerDelay3,w
  1650  01A0  1C03               	skipc
  1651  01A1  29A5               	goto	l4199
  1652                           
  1653                           ;main.c: 670: {
  1654                           ;main.c: 671: PA2 = 1;
  1655  01A2  1505               	bsf	5,2
  1656  01A3                     l4195:	
  1657                           
  1658                           ;main.c: 672: ucTimerDelay3 = 0;
  1659  01A3  01CD               	clrf	main@ucTimerDelay3
  1660  01A4  299C               	goto	l4189
  1661  01A5                     l4199:	
  1662                           
  1663                           ;main.c: 675: else
  1664                           ;main.c: 676: ucTimerDelay3++;
  1665  01A5  0ACD               	incf	main@ucTimerDelay3,f
  1666  01A6  2842               	goto	l3917
  1667  01A7                     l4201:	
  1668                           
  1669                           ;main.c: 681: {
  1670                           ;main.c: 682: if(ucTimerDelay3 >= 5)
  1671  01A7  3005               	movlw	5
  1672  01A8  024D               	subwf	main@ucTimerDelay3,w
  1673  01A9  1C03               	skipc
  1674  01AA  29A5               	goto	l4199
  1675                           
  1676                           ;main.c: 683: {
  1677                           ;main.c: 684: PA3 = 1;
  1678  01AB  1585               	bsf	5,3
  1679  01AC  29A3               	goto	l4195
  1680  01AD                     l4211:	
  1681                           
  1682                           ;main.c: 695: {
  1683                           ;main.c: 696: if(ucTimerDelay3 >= 5)
  1684  01AD  3005               	movlw	5
  1685  01AE  024D               	subwf	main@ucTimerDelay3,w
  1686  01AF  1C03               	skipc
  1687  01B0  29A5               	goto	l4199
  1688                           
  1689                           ;main.c: 697: {
  1690                           ;main.c: 699: PA2 = 0;
  1691  01B1  1105               	bcf	5,2
  1692                           
  1693                           ;main.c: 700: PA3 = 0;
  1694  01B2  1185               	bcf	5,3
  1695  01B3  29A3               	goto	l4195
  1696  01B4                     l4221:	
  1697                           
  1698                           ;main.c: 710: {
  1699                           ;main.c: 711: if(ucTimerDelay3 >= 2)
  1700  01B4  3002               	movlw	2
  1701  01B5  024D               	subwf	main@ucTimerDelay3,w
  1702  01B6  1C03               	skipc
  1703  01B7  29A5               	goto	l4199
  1704                           
  1705                           ;main.c: 712: {
  1706                           ;main.c: 713: ucTimerDelay3 = 0;
  1707  01B8  01CD               	clrf	main@ucTimerDelay3
  1708                           
  1709                           ;main.c: 715: ucLoaderStep3 = 0;
  1710  01B9  01C6               	clrf	main@ucLoaderStep3
  1711  01BA  291D               	goto	l4063
  1712  01BB                     l4231:	
  1713  01BB  0846               	movf	main@ucLoaderStep3,w
  1714                           
  1715                           ; Switch size 1, requested type "space"
  1716                           ; Number of cases is 5, Range of values is 0 to 4
  1717                           ; switch strategies available:
  1718                           ; Name         Instructions Cycles
  1719                           ; simple_byte           16     9 (average)
  1720                           ; direct_byte           17     7 (fixed)
  1721                           ; jumptable            260     6 (fixed)
  1722                           ; rangetable             9     6 (fixed)
  1723                           ; spacedrange           16     9 (fixed)
  1724                           ; locatedrange           5     3 (fixed)
  1725                           ;	Chosen strategy is simple_byte
  1726  01BC  3A00               	xorlw	0	; case 0
  1727  01BD  1903               	skipnz
  1728  01BE  2999               	goto	l831
  1729  01BF  3A01               	xorlw	1	; case 1
  1730  01C0  1903               	skipnz
  1731  01C1  299E               	goto	l4191
  1732  01C2  3A03               	xorlw	3	; case 2
  1733  01C3  1903               	skipnz
  1734  01C4  29A7               	goto	l4201
  1735  01C5  3A01               	xorlw	1	; case 3
  1736  01C6  1903               	skipnz
  1737  01C7  29AD               	goto	l4211
  1738  01C8  3A07               	xorlw	7	; case 4
  1739  01C9  1903               	skipnz
  1740  01CA  29B4               	goto	l4221
  1741  01CB  2864               	goto	l703
  1742  01CC                     l852:	
  1743                           ;main.c: 737: {
  1744                           ;main.c: 738: case 0:
  1745                           
  1746                           
  1747                           ;main.c: 739: {
  1748                           ;main.c: 740: PB0 = 1;
  1749  01CC  1406               	bsf	6,0
  1750                           
  1751                           ;main.c: 741: PA0 = 1;
  1752  01CD  1405               	bsf	5,0
  1753                           
  1754                           ;main.c: 742: PA1 = 1;
  1755  01CE  1485               	bsf	5,1
  1756                           
  1757                           ;main.c: 743: PA2 = 1;
  1758  01CF  1505               	bsf	5,2
  1759  01D0                     l4233:	
  1760                           
  1761                           ;main.c: 744: ucLoaderStep4++;
  1762  01D0  0AC7               	incf	main@ucLoaderStep4,f
  1763                           
  1764                           ;main.c: 745: break;
  1765  01D1  2842               	goto	l3917
  1766  01D2                     l4235:	
  1767                           
  1768                           ;main.c: 749: {
  1769                           ;main.c: 750: if(ucTimerDelay4 >= 5)
  1770  01D2  3005               	movlw	5
  1771  01D3  024E               	subwf	main@ucTimerDelay4,w
  1772  01D4  1C03               	skipc
  1773  01D5  29D9               	goto	l4243
  1774                           
  1775                           ;main.c: 751: {
  1776                           ;main.c: 752: PA3 = 1;
  1777  01D6  1585               	bsf	5,3
  1778  01D7                     l4239:	
  1779                           
  1780                           ;main.c: 753: ucTimerDelay4 = 0;
  1781  01D7  01CE               	clrf	main@ucTimerDelay4
  1782  01D8  29D0               	goto	l4233
  1783  01D9                     l4243:	
  1784                           
  1785                           ;main.c: 756: else
  1786                           ;main.c: 757: ucTimerDelay4++;
  1787  01D9  0ACE               	incf	main@ucTimerDelay4,f
  1788  01DA  2842               	goto	l3917
  1789  01DB                     l4245:	
  1790                           
  1791                           ;main.c: 762: {
  1792                           ;main.c: 763: if(ucTimerDelay4 >= 5)
  1793  01DB  3005               	movlw	5
  1794  01DC  024E               	subwf	main@ucTimerDelay4,w
  1795  01DD  1C03               	skipc
  1796  01DE  29D9               	goto	l4243
  1797                           
  1798                           ;main.c: 764: {
  1799                           ;main.c: 765: PA3 = 0;
  1800  01DF  1185               	bcf	5,3
  1801  01E0  29D7               	goto	l4239
  1802  01E1                     l4255:	
  1803                           
  1804                           ;main.c: 775: {
  1805                           ;main.c: 776: if(ucTimerDelay4 >= 2)
  1806  01E1  3002               	movlw	2
  1807  01E2  024E               	subwf	main@ucTimerDelay4,w
  1808  01E3  1C03               	skipc
  1809  01E4  29D9               	goto	l4243
  1810                           
  1811                           ;main.c: 777: {
  1812                           ;main.c: 778: ucTimerDelay4 = 0;
  1813  01E5  01CE               	clrf	main@ucTimerDelay4
  1814                           
  1815                           ;main.c: 780: ucLoaderStep4 = 0;
  1816  01E6  01C7               	clrf	main@ucLoaderStep4
  1817  01E7  291D               	goto	l4063
  1818  01E8                     l4265:	
  1819  01E8  0847               	movf	main@ucLoaderStep4,w
  1820                           
  1821                           ; Switch size 1, requested type "space"
  1822                           ; Number of cases is 4, Range of values is 0 to 3
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte           13     7 (average)
  1826                           ; direct_byte           15     7 (fixed)
  1827                           ; jumptable            260     6 (fixed)
  1828                           ; rangetable             8     6 (fixed)
  1829                           ; spacedrange           14     9 (fixed)
  1830                           ; locatedrange           4     3 (fixed)
  1831                           ;	Chosen strategy is simple_byte
  1832  01E9  3A00               	xorlw	0	; case 0
  1833  01EA  1903               	skipnz
  1834  01EB  29CC               	goto	l852
  1835  01EC  3A01               	xorlw	1	; case 1
  1836  01ED  1903               	skipnz
  1837  01EE  29D2               	goto	l4235
  1838  01EF  3A03               	xorlw	3	; case 2
  1839  01F0  1903               	skipnz
  1840  01F1  29DB               	goto	l4245
  1841  01F2  3A01               	xorlw	1	; case 3
  1842  01F3  1903               	skipnz
  1843  01F4  29E1               	goto	l4255
  1844  01F5  2864               	goto	l703
  1845  01F6                     l4269:	
  1846  01F6  0842               	movf	main@ucChannel4Type,w
  1847                           
  1848                           ; Switch size 1, requested type "space"
  1849                           ; Number of cases is 5, Range of values is 0 to 4
  1850                           ; switch strategies available:
  1851                           ; Name         Instructions Cycles
  1852                           ; simple_byte           16     9 (average)
  1853                           ; direct_byte           17     7 (fixed)
  1854                           ; jumptable            260     6 (fixed)
  1855                           ; rangetable             9     6 (fixed)
  1856                           ; spacedrange           16     9 (fixed)
  1857                           ; locatedrange           5     3 (fixed)
  1858                           ;	Chosen strategy is simple_byte
  1859  01F7  3A00               	xorlw	0	; case 0
  1860  01F8  1903               	skipnz
  1861  01F9  291F               	goto	l4069
  1862  01FA  3A01               	xorlw	1	; case 1
  1863  01FB  1903               	skipnz
  1864  01FC  2959               	goto	l4133
  1865  01FD  3A03               	xorlw	3	; case 2
  1866  01FE  1903               	skipnz
  1867  01FF  298D               	goto	l4187
  1868  0200  3A01               	xorlw	1	; case 3
  1869  0201  1903               	skipnz
  1870  0202  29BB               	goto	l4231
  1871  0203  3A07               	xorlw	7	; case 4
  1872  0204  1903               	skipnz
  1873  0205  29E8               	goto	l4265
  1874  0206  2864               	goto	l703
  1875  0207                     l4271:	
  1876                           
  1877                           ;main.c: 804: {
  1878                           ;main.c: 805: if(isFinishedTwentySecondsTimer())
  1879  0207  118A  2490  118A   	fcall	_isFinishedTwentySecondsTimer
  1880  020A  3A00               	xorlw	0
  1881  020B  1903               	skipnz
  1882  020C  28B7               	goto	l3987
  1883                           
  1884                           ;main.c: 806: {
  1885                           ;main.c: 807: PB6 = 1;
  1886  020D  1706               	bsf	6,6
  1887                           
  1888                           ;main.c: 808: PA6 = 0;
  1889  020E  1305               	bcf	5,6
  1890                           
  1891                           ;main.c: 809: PB0 = 0;
  1892  020F  1006               	bcf	6,0
  1893                           
  1894                           ;main.c: 810: PA0 = 0;
  1895  0210  1005               	bcf	5,0
  1896                           
  1897                           ;main.c: 811: PA1 = 0;
  1898  0211  1085               	bcf	5,1
  1899                           
  1900                           ;main.c: 812: PA2 = 0;
  1901  0212  1105               	bcf	5,2
  1902                           
  1903                           ;main.c: 813: PA3 = 0;
  1904  0213  1185               	bcf	5,3
  1905                           
  1906                           ;main.c: 815: if((getAdOriginalCh14Value() > 3900))
  1907  0214  118A  24A9  118A   	fcall	_getAdOriginalCh14Value
  1908  0217  300F               	movlw	15
  1909  0218  0256               	subwf	?_getAdOriginalCh14Value+1,w
  1910  0219  303D               	movlw	61
  1911  021A  1903               	skipnz
  1912  021B  0255               	subwf	?_getAdOriginalCh14Value,w
  1913  021C  1C03               	skipc
  1914  021D  2A20               	goto	l4279
  1915                           
  1916                           ;main.c: 816: DACR0=0x0F;
  1917  021E  300F               	movlw	15
  1918  021F  2A21               	goto	L9
  1919  0220                     l4279:	
  1920                           
  1921                           ;main.c: 817: else
  1922                           ;main.c: 818: DACR0=0x07;
  1923  0220  3007               	movlw	7
  1924  0221                     L9:	
  1925  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0222  0088               	movwf	8	;volatile
  1927                           
  1928                           ;main.c: 820: ucADC4_Step = ADC4_STEP_FOURTH;
  1929  0223  3004               	movlw	4
  1930  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0225                     L8:	
  1932  0225  00C1               	movwf	main@ucADC4_Step
  1933                           
  1934                           ;main.c: 821: }
  1935  0226  2842               	goto	l3917
  1936  0227                     l4281:	
  1937                           
  1938                           ;main.c: 829: {
  1939                           ;main.c: 830: static unsigned char ucTimer1s = 0;
  1940                           ;main.c: 831: if(ucTimer1s < 10)
  1941  0227  300A               	movlw	10
  1942  0228  0248               	subwf	main@ucTimer1s,w
  1943  0229  1803               	skipnc
  1944  022A  2A2D               	goto	l4285
  1945                           
  1946                           ;main.c: 832: ucTimer1s++;
  1947  022B  0AC8               	incf	main@ucTimer1s,f
  1948  022C  2842               	goto	l3917
  1949  022D                     l4285:	
  1950                           
  1951                           ;main.c: 833: else
  1952                           ;main.c: 834: {
  1953                           ;main.c: 835: ucTimer1s = 0;
  1954  022D  01C8               	clrf	main@ucTimer1s
  1955                           
  1956                           ;main.c: 836: PBOD6 = 1;
  1957  022E  1683               	bsf	3,5	;RP0=1, select bank3
  1958  022F  1703               	bsf	3,6	;RP1=1, select bank3
  1959  0230  1708               	bsf	8,6
  1960                           
  1961                           ;main.c: 837: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1962  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0233  01C0               	clrf	main@enumMainLoopStep
  1965  0234  0AC0               	incf	main@enumMainLoopStep,f
  1966                           
  1967                           ;main.c: 838: ucADC4_Step = ADC4_STEP_INIT;
  1968  0235  01C1               	clrf	main@ucADC4_Step
  1969  0236  2842               	goto	l3917
  1970  0237                     l4293:	
  1971  0237  0841               	movf	main@ucADC4_Step,w
  1972                           
  1973                           ; Switch size 1, requested type "space"
  1974                           ; Number of cases is 5, Range of values is 0 to 4
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte           16     9 (average)
  1978                           ; direct_byte           17     7 (fixed)
  1979                           ; jumptable            260     6 (fixed)
  1980                           ; rangetable             9     6 (fixed)
  1981                           ; spacedrange           16     9 (fixed)
  1982                           ; locatedrange           5     3 (fixed)
  1983                           ;	Chosen strategy is simple_byte
  1984  0238  3A00               	xorlw	0	; case 0
  1985  0239  1903               	skipnz
  1986  023A  28B4               	goto	l3985
  1987  023B  3A01               	xorlw	1	; case 1
  1988  023C  1903               	skipnz
  1989  023D  28BA               	goto	l3989
  1990  023E  3A03               	xorlw	3	; case 2
  1991  023F  1903               	skipnz
  1992  0240  29F6               	goto	l4269
  1993  0241  3A01               	xorlw	1	; case 3
  1994  0242  1903               	skipnz
  1995  0243  2A07               	goto	l4271
  1996  0244  3A07               	xorlw	7	; case 4
  1997  0245  1903               	skipnz
  1998  0246  2A27               	goto	l4281
  1999  0247  2864               	goto	l703
  2000  0248                     l880:	
  2001                           ;main.c: 864: {
  2002                           ;main.c: 865: case HOUR_3_BRANCH_STEP_FIRST:
  2003                           
  2004                           
  2005                           ;main.c: 866: {
  2006                           ;main.c: 867: PAOD7 = 1;
  2007  0248  1683               	bsf	3,5	;RP0=1, select bank3
  2008  0249  1703               	bsf	3,6	;RP1=1, select bank3
  2009  024A  1787               	bsf	7,7
  2010                           
  2011                           ;main.c: 868: startThreeHoursTimer();
  2012  024B  118A  2484  118A   	fcall	_startThreeHoursTimer
  2013                           
  2014                           ;main.c: 870: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2015  024E  01BE               	clrf	main@enumBranchStep
  2016  024F  0ABE               	incf	main@enumBranchStep,f
  2017                           
  2018                           ;main.c: 871: break;
  2019  0250  2842               	goto	l3917
  2020  0251                     l4299:	
  2021                           
  2022                           ;main.c: 875: {
  2023                           ;main.c: 876: if(isFinishedThreeHoursTimer())
  2024  0251  118A  248B  118A   	fcall	_isFinishedThreeHoursTimer
  2025  0254  3A00               	xorlw	0
  2026  0255  1903               	skipnz
  2027  0256  2A59               	goto	l4305
  2028                           
  2029                           ;main.c: 877: {
  2030                           ;main.c: 878: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2031  0257  01BE               	clrf	main@enumBranchStep
  2032  0258  28B1               	goto	l3983
  2033  0259                     l4305:	
  2034                           
  2035                           ;main.c: 881: else
  2036                           ;main.c: 882: {
  2037                           ;main.c: 883: static unsigned char ucTimerX1P5s = 0;
  2038                           ;main.c: 885: if(getAdOriginalCh1Value() < 0x0082)
  2039  0259  118A  24A4  118A   	fcall	_getAdOriginalCh1Value
  2040  025C  3000               	movlw	0
  2041  025D  0256               	subwf	?_getAdOriginalCh1Value+1,w
  2042  025E  3082               	movlw	130
  2043  025F  1903               	skipnz
  2044  0260  0255               	subwf	?_getAdOriginalCh1Value,w
  2045  0261  1803               	skipnc
  2046  0262  2A65               	goto	l4309
  2047                           
  2048                           ;main.c: 886: {
  2049                           ;main.c: 887: ucTimerX1P5s = 0;
  2050  0263  01D1               	clrf	main@ucTimerX1P5s
  2051                           
  2052                           ;main.c: 888: }
  2053  0264  2A66               	goto	l4311
  2054  0265                     l4309:	
  2055                           
  2056                           ;main.c: 889: else
  2057                           ;main.c: 890: {
  2058                           ;main.c: 891: ucTimerX1P5s++;
  2059  0265  0AD1               	incf	main@ucTimerX1P5s,f
  2060  0266                     l4311:	
  2061                           
  2062                           ;main.c: 892: }
  2063                           ;main.c: 894: if(ucTimerX1P5s >= 1)
  2064  0266  0851               	movf	main@ucTimerX1P5s,w
  2065  0267  1903               	btfsc	3,2
  2066  0268  2A70               	goto	l4323
  2067                           
  2068                           ;main.c: 895: {
  2069                           ;main.c: 896: ucTimerX1P5s = 0;
  2070  0269  01D1               	clrf	main@ucTimerX1P5s
  2071                           
  2072                           ;main.c: 897: PA7 = 0;
  2073  026A  1385               	bcf	5,7
  2074                           
  2075                           ;main.c: 898: clearThreeHoursTimer();
  2076  026B  118A  2419  118A   	fcall	_clearThreeHoursTimer
  2077                           
  2078                           ;main.c: 900: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2079  026E  01BE               	clrf	main@enumBranchStep
  2080  026F  2877               	goto	l3947
  2081  0270                     l4323:	
  2082                           
  2083                           ;main.c: 904: else
  2084                           ;main.c: 905: {
  2085                           ;main.c: 906: static unsigned char ucTimerX2P5s = 0;
  2086                           ;main.c: 908: if(getAdOriginalCh14Value() >= 1950)
  2087  0270  118A  24A9  118A   	fcall	_getAdOriginalCh14Value
  2088  0273  3007               	movlw	7
  2089  0274  0256               	subwf	?_getAdOriginalCh14Value+1,w
  2090  0275  309E               	movlw	158
  2091  0276  1903               	skipnz
  2092  0277  0255               	subwf	?_getAdOriginalCh14Value,w
  2093  0278  1C03               	skipc
  2094  0279  2A7C               	goto	l4327
  2095                           
  2096                           ;main.c: 909: {
  2097                           ;main.c: 910: ucTimerX2P5s++;
  2098  027A  0AD2               	incf	main@ucTimerX2P5s,f
  2099                           
  2100                           ;main.c: 911: }
  2101  027B  2A7D               	goto	l4329
  2102  027C                     l4327:	
  2103                           
  2104                           ;main.c: 912: else
  2105                           ;main.c: 913: {
  2106                           ;main.c: 914: ucTimerX2P5s = 0;
  2107  027C  01D2               	clrf	main@ucTimerX2P5s
  2108  027D                     l4329:	
  2109                           
  2110                           ;main.c: 915: }
  2111                           ;main.c: 917: if(ucTimerX2P5s >= 1)
  2112  027D  0852               	movf	main@ucTimerX2P5s,w
  2113  027E  1903               	btfsc	3,2
  2114  027F  2A82               	goto	l4333
  2115                           
  2116                           ;main.c: 918: {
  2117                           ;main.c: 919: ucTimerX2P5s = 0;
  2118  0280  01D2               	clrf	main@ucTimerX2P5s
  2119                           
  2120                           ;main.c: 920: }
  2121  0281  2842               	goto	l3917
  2122  0282                     l4333:	
  2123                           
  2124                           ;main.c: 921: else
  2125                           ;main.c: 922: {
  2126                           ;main.c: 923: clearPinPortAndTimer();
  2127  0282  118A  240A  118A   	fcall	_clearPinPortAndTimer
  2128  0285  2862               	goto	l3935
  2129  0286                     l4339:	
  2130  0286  083E               	movf	main@enumBranchStep,w
  2131                           
  2132                           ; Switch size 1, requested type "space"
  2133                           ; Number of cases is 2, Range of values is 0 to 1
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte            7     4 (average)
  2137                           ; direct_byte           11     7 (fixed)
  2138                           ; jumptable            260     6 (fixed)
  2139                           ; rangetable             6     6 (fixed)
  2140                           ; spacedrange           10     9 (fixed)
  2141                           ; locatedrange           2     3 (fixed)
  2142                           ;	Chosen strategy is simple_byte
  2143  0287  3A00               	xorlw	0	; case 0
  2144  0288  1903               	skipnz
  2145  0289  2A48               	goto	l880
  2146  028A  3A01               	xorlw	1	; case 1
  2147  028B  1903               	skipnz
  2148  028C  2A51               	goto	l4299
  2149  028D  2864               	goto	l703
  2150  028E                     l902:	
  2151                           ;main.c: 953: {
  2152                           ;main.c: 954: case INTERNAL_FIRST_STEP:
  2153                           
  2154                           
  2155                           ;main.c: 955: {
  2156                           ;main.c: 956: PB0 = 0;
  2157  028E  1006               	bcf	6,0
  2158                           
  2159                           ;main.c: 957: PB1 = 0;
  2160  028F  1086               	bcf	6,1
  2161                           
  2162                           ;main.c: 958: PA0 = 0;
  2163  0290  1005               	bcf	5,0
  2164                           
  2165                           ;main.c: 959: PA1 = 0;
  2166  0291  1085               	bcf	5,1
  2167                           
  2168                           ;main.c: 960: PA2 = 0;
  2169  0292  1105               	bcf	5,2
  2170                           
  2171                           ;main.c: 961: PA3 = 0;
  2172  0293  1185               	bcf	5,3
  2173                           
  2174                           ;main.c: 962: PB6 = 1;
  2175  0294  1706               	bsf	6,6
  2176                           
  2177                           ;main.c: 963: PA6 =0;
  2178  0295  1305               	bcf	5,6
  2179                           
  2180                           ;main.c: 965: enumInteralStep = INTERNAL_SECOND_STEP;
  2181  0296  01BF               	clrf	main@enumInteralStep
  2182  0297  0ABF               	incf	main@enumInteralStep,f
  2183                           
  2184                           ;main.c: 966: break;
  2185  0298  2842               	goto	l3917
  2186  0299                     l4341:	
  2187                           
  2188                           ;main.c: 970: {
  2189                           ;main.c: 971: static unsigned char ucTimer1s = 0;
  2190                           ;main.c: 973: if(getAdOriginalCh14Value() <= 1000)
  2191  0299  118A  24A9  118A   	fcall	_getAdOriginalCh14Value
  2192  029C  3003               	movlw	3
  2193  029D  0256               	subwf	?_getAdOriginalCh14Value+1,w
  2194  029E  30E9               	movlw	233
  2195  029F  1903               	skipnz
  2196  02A0  0255               	subwf	?_getAdOriginalCh14Value,w
  2197  02A1  1803               	skipnc
  2198  02A2  2AA5               	goto	l4345
  2199                           
  2200                           ;main.c: 974: {
  2201                           ;main.c: 975: ucTimer1s++;
  2202  02A3  0ABD               	incf	main@cTimer1s_805,f
  2203                           
  2204                           ;main.c: 976: }
  2205  02A4  2AA6               	goto	l4347
  2206  02A5                     l4345:	
  2207                           
  2208                           ;main.c: 977: else
  2209                           ;main.c: 978: ucTimer1s = 0;
  2210  02A5  01BD               	clrf	main@cTimer1s_805
  2211  02A6                     l4347:	
  2212                           
  2213                           ;main.c: 980: if(ucTimer1s >= 10)
  2214  02A6  300A               	movlw	10
  2215  02A7  023D               	subwf	main@cTimer1s_805,w
  2216  02A8  1C03               	skipc
  2217  02A9  2842               	goto	l3917
  2218                           
  2219                           ;main.c: 981: {
  2220                           ;main.c: 982: enumInteralStep = INTERNAL_THIRD_STEP;
  2221  02AA  3002               	movlw	2
  2222  02AB  00BF               	movwf	main@enumInteralStep
  2223                           
  2224                           ;main.c: 983: ucTimer1s = 0;
  2225  02AC  01BD               	clrf	main@cTimer1s_805
  2226  02AD  2842               	goto	l3917
  2227  02AE                     l4353:	
  2228                           
  2229                           ;main.c: 989: {
  2230                           ;main.c: 990: static unsigned char ucTimerP3s = 0;
  2231                           ;main.c: 992: if(getAdOriginalCh14Value() >= 1950)
  2232  02AE  118A  24A9  118A   	fcall	_getAdOriginalCh14Value
  2233  02B1  3007               	movlw	7
  2234  02B2  0256               	subwf	?_getAdOriginalCh14Value+1,w
  2235  02B3  309E               	movlw	158
  2236  02B4  1903               	skipnz
  2237  02B5  0255               	subwf	?_getAdOriginalCh14Value,w
  2238  02B6  1C03               	skipc
  2239  02B7  2ABA               	goto	l4357
  2240                           
  2241                           ;main.c: 993: {
  2242                           ;main.c: 994: ucTimerP3s++;
  2243  02B8  0ACF               	incf	main@ucTimerP3s,f
  2244                           
  2245                           ;main.c: 995: }
  2246  02B9  2ABB               	goto	l4359
  2247  02BA                     l4357:	
  2248                           
  2249                           ;main.c: 996: else
  2250                           ;main.c: 997: ucTimerP3s = 0;
  2251  02BA  01CF               	clrf	main@ucTimerP3s
  2252  02BB                     l4359:	
  2253                           
  2254                           ;main.c: 999: if(ucTimerP3s >= 3)
  2255  02BB  3003               	movlw	3
  2256  02BC  024F               	subwf	main@ucTimerP3s,w
  2257  02BD  1C03               	skipc
  2258  02BE  2842               	goto	l3917
  2259                           
  2260                           ;main.c: 1000: {
  2261                           ;main.c: 1001: enumInteralStep = INTERNAL_FIRST_STEP;
  2262  02BF  01BF               	clrf	main@enumInteralStep
  2263                           
  2264                           ;main.c: 1002: ucTimerP3s = 0;
  2265  02C0  01CF               	clrf	main@ucTimerP3s
  2266                           
  2267                           ;main.c: 1003: clearAllTimer();
  2268  02C1  118A  2411  118A   	fcall	_clearAllTimer
  2269                           
  2270                           ;main.c: 1005: DACR0=0x0F;
  2271  02C4  300F               	movlw	15
  2272  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2273  02C6  0088               	movwf	8	;volatile
  2274                           
  2275                           ;main.c: 1006: PBOD6 = 1;
  2276  02C7  1703               	bsf	3,6	;RP1=1, select bank3
  2277  02C8  1708               	bsf	8,6
  2278                           
  2279                           ;main.c: 1008: PA0 = 0;
  2280  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2281  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2282  02CB  1005               	bcf	5,0
  2283                           
  2284                           ;main.c: 1009: PA1 = 0;
  2285  02CC  1085               	bcf	5,1
  2286                           
  2287                           ;main.c: 1010: PA2 = 0;
  2288  02CD  1105               	bcf	5,2
  2289                           
  2290                           ;main.c: 1011: PA3 = 1;
  2291  02CE  1585               	bsf	5,3
  2292                           
  2293                           ;main.c: 1012: PB0 = 0;
  2294  02CF  1006               	bcf	6,0
  2295                           
  2296                           ;main.c: 1013: PB1 = 0;
  2297  02D0  1086               	bcf	6,1
  2298                           
  2299                           ;main.c: 1014: PA6 = 0;
  2300  02D1  1305               	bcf	5,6
  2301                           
  2302                           ;main.c: 1015: PA7 = 0;
  2303  02D2  1385               	bcf	5,7
  2304                           
  2305                           ;main.c: 1018: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2306  02D3  01C0               	clrf	main@enumMainLoopStep
  2307  02D4  2842               	goto	l3917
  2308  02D5                     l4389:	
  2309  02D5  083F               	movf	main@enumInteralStep,w
  2310                           
  2311                           ; Switch size 1, requested type "space"
  2312                           ; Number of cases is 3, Range of values is 0 to 2
  2313                           ; switch strategies available:
  2314                           ; Name         Instructions Cycles
  2315                           ; simple_byte           10     6 (average)
  2316                           ; direct_byte           13     7 (fixed)
  2317                           ; jumptable            260     6 (fixed)
  2318                           ; rangetable             7     6 (fixed)
  2319                           ; spacedrange           12     9 (fixed)
  2320                           ; locatedrange           3     3 (fixed)
  2321                           ;	Chosen strategy is simple_byte
  2322  02D6  3A00               	xorlw	0	; case 0
  2323  02D7  1903               	skipnz
  2324  02D8  2A8E               	goto	l902
  2325  02D9  3A01               	xorlw	1	; case 1
  2326  02DA  1903               	skipnz
  2327  02DB  2A99               	goto	l4341
  2328  02DC  3A03               	xorlw	3	; case 2
  2329  02DD  1903               	skipnz
  2330  02DE  2AAE               	goto	l4353
  2331  02DF  2864               	goto	l703
  2332  02E0                     l4393:	
  2333  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2334  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2335  02E2  0840               	movf	main@enumMainLoopStep,w
  2336                           
  2337                           ; Switch size 1, requested type "space"
  2338                           ; Number of cases is 8, Range of values is 0 to 9
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte           25    13 (average)
  2342                           ; direct_byte           27     7 (fixed)
  2343                           ; jumptable            260     6 (fixed)
  2344                           ; rangetable            14     6 (fixed)
  2345                           ; spacedrange           26     9 (fixed)
  2346                           ; locatedrange          10     3 (fixed)
  2347                           ;	Chosen strategy is simple_byte
  2348  02E3  3A00               	xorlw	0	; case 0
  2349  02E4  1903               	skipnz
  2350  02E5  2850               	goto	l3925
  2351  02E6  3A01               	xorlw	1	; case 1
  2352  02E7  1903               	skipnz
  2353  02E8  2865               	goto	l3937
  2354  02E9  3A03               	xorlw	3	; case 2
  2355  02EA  1903               	skipnz
  2356  02EB  287D               	goto	l712
  2357  02EC  3A01               	xorlw	1	; case 3
  2358  02ED  1903               	skipnz
  2359  02EE  2880               	goto	l3953
  2360  02EF  3A07               	xorlw	7	; case 4
  2361  02F0  1903               	skipnz
  2362  02F1  28A6               	goto	l3977
  2363  02F2  3A01               	xorlw	1	; case 5
  2364  02F3  1903               	skipnz
  2365  02F4  28AB               	goto	l3981
  2366  02F5  3A0D               	xorlw	13	; case 8
  2367  02F6  1903               	skipnz
  2368  02F7  2A86               	goto	l4339
  2369  02F8  3A01               	xorlw	1	; case 9
  2370  02F9  1903               	skipnz
  2371  02FA  2AD5               	goto	l4389
  2372  02FB  2864               	goto	l703
  2373  02FC  118A  280B         	ljmp	start
  2374  02FE                     __end_of_main:	
  2375                           
  2376                           	psect	swtext1
  2377  042F                     __pswtext1:	
  2378  042F                     S4611:	
  2379  042F  118A  28EF         	ljmp	l752
  2380  0431  118A  28F2         	ljmp	l4009
  2381  0433  118A  28FB         	ljmp	l4019
  2382  0435  118A  2901         	ljmp	l4029
  2383  0437  118A  2907         	ljmp	l4039
  2384  0439  118A  290D         	ljmp	l4049
  2385  043B  118A  2917         	ljmp	l4059
  2386                           
  2387                           	psect	swtext2
  2388  043D                     __pswtext2:	
  2389  043D                     S4613:	
  2390  043D  118A  292B         	ljmp	l780
  2391  043F  118A  292E         	ljmp	l4073
  2392  0441  118A  2937         	ljmp	l4083
  2393  0443  118A  293D         	ljmp	l4093
  2394  0445  118A  2943         	ljmp	l4103
  2395  0447  118A  2949         	ljmp	l4113
  2396  0449  118A  2952         	ljmp	l4123
  2397                           
  2398                           	psect	swtext3
  2399  044B                     __pswtext3:	
  2400  044B                     S4615:	
  2401  044B  118A  2965         	ljmp	l807
  2402  044D  118A  2969         	ljmp	l4137
  2403  044F  118A  2972         	ljmp	l4147
  2404  0451  118A  2978         	ljmp	l4157
  2405  0453  118A  297E         	ljmp	l4167
  2406  0455  118A  2986         	ljmp	l4177
  2407                           
  2408                           	psect	text583
  2409  02FE                     __ptext583:	
  2410 ;; =============== function _main ends ============
  2411                           
  2412                           
  2413 ;; *************** function _process_AD_Converter_Value *****************
  2414 ;; Defined at:
  2415 ;;		line 102 in file "C:\190604\AK7030-OTP\common.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: FFE9F/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    4
  2436 ;; This function calls:
  2437 ;;		_getAD_ConvertFlag
  2438 ;;		_setAD_ConvertFlag
  2439 ;;		_AD_Sample
  2440 ;;		_adc_test_init
  2441 ;;		_adc_start
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446  02FE                     _process_AD_Converter_Value:	
  2447                           
  2448                           ;common.c: 67: return adc_convert_flag;
  2449                           
  2450                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2451                           
  2452                           ;common.c: 103: if(getAD_ConvertFlag())
  2453                           
  2454                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2455  02FE  0879               	movf	_adc_convert_flag,w
  2456  02FF  3A00               	xorlw	0
  2457  0300  1903               	skipnz
  2458  0301  0008               	return
  2459                           
  2460                           ;common.c: 104: {
  2461                           ;common.c: 105: setAD_ConvertFlag(0);
  2462  0302  3000               	movlw	0
  2463  0303  231D  118A         	fcall	_setAD_ConvertFlag
  2464                           
  2465                           ;common.c: 106: AD_Sample();
  2466  0305  2322  118A         	fcall	_AD_Sample
  2467                           
  2468                           ;common.c: 107: if(4 == sampleChannelSelect)
  2469  0307  085A               	movf	_sampleChannelSelect,w
  2470  0308  3A04               	xorlw	4
  2471  0309  1D03               	skipz
  2472  030A  2B0F               	goto	l3893
  2473                           
  2474                           ;common.c: 108: adc_test_init(4,3);
  2475  030B  3003               	movlw	3
  2476  030C  00D5               	movwf	?_adc_test_init
  2477  030D  3004               	movlw	4
  2478  030E  2B18               	goto	L10
  2479  030F                     l3893:	
  2480                           
  2481                           ;common.c: 109: else if(1 == sampleChannelSelect)
  2482  030F  0B5A               	decfsz	_sampleChannelSelect,w
  2483  0310  2B15               	goto	l3897
  2484                           
  2485                           ;common.c: 110: adc_test_init(1,3);
  2486  0311  3003               	movlw	3
  2487  0312  00D5               	movwf	?_adc_test_init
  2488  0313  3001               	movlw	1
  2489  0314  2B18               	goto	L10
  2490  0315                     l3897:	
  2491                           
  2492                           ;common.c: 111: else
  2493                           ;common.c: 112: adc_test_init(14,3);
  2494  0315  3003               	movlw	3
  2495  0316  00D5               	movwf	?_adc_test_init
  2496  0317  300E               	movlw	14
  2497  0318                     L10:	
  2498  0318  238A  118A         	fcall	_adc_test_init
  2499                           
  2500                           ;common.c: 114: adc_start();
  2501  031A  2B9F               	ljmp	l3711
  2502  031B                     __end_of_process_AD_Converter_Value:	
  2503  031B                     __ptext589:	
  2504 ;; =============== function _setAD_ConvertFlag ends ============
  2505                           
  2506                           
  2507 ;; *************** function _getAD_ConvertFlag *****************
  2508 ;; Defined at:
  2509 ;;		line 66 in file "C:\190604\AK7030-OTP\common.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: FFFFF/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    2
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_process_AD_Converter_Value
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536  031B                     _getAD_ConvertFlag:	
  2537                           
  2538                           ;common.c: 67: return adc_convert_flag;
  2539                           
  2540                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2541  031B  0879               	movf	_adc_convert_flag,w
  2542  031C  0008               	return
  2543  031D                     __end_of_getAD_ConvertFlag:	
  2544  031D                     __ptext588:	
  2545 ;; =============== function _getAdOriginalValue ends ============
  2546                           
  2547                           
  2548 ;; *************** function _setAD_ConvertFlag *****************
  2549 ;; Defined at:
  2550 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  flag            1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  flag            1    0[BANK0 ] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;		None               void
  2557 ;; Registers used:
  2558 ;;		wreg
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 60/0
  2562 ;;		Unchanged: FFF9F/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         0       1       0       0       0
  2566 ;;      Temps:          0       0       0       0       0
  2567 ;;      Totals:         0       1       0       0       0
  2568 ;;Total ram usage:        1 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    2
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_process_AD_Converter_Value
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577  031D                     _setAD_ConvertFlag:	
  2578                           
  2579                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2580                           ;setAD_ConvertFlag@flag stored from wreg
  2581  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2582  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2583  031F  00D5               	movwf	setAD_ConvertFlag@flag
  2584                           
  2585                           ;common.c: 73: adc_convert_flag = flag;
  2586  0320  00F9               	movwf	_adc_convert_flag
  2587  0321  0008               	return
  2588  0322                     __end_of_setAD_ConvertFlag:	
  2589  0322                     __ptext585:	
  2590 ;; =============== function _clearPinPortAndTimer ends ============
  2591                           
  2592                           
  2593 ;; *************** function _AD_Sample *****************
  2594 ;; Defined at:
  2595 ;;		line 128 in file "C:\190604\AK7030-OTP\common.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  index           1    4[BANK0 ] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 60/0
  2606 ;;		On exit  : 60/0
  2607 ;;		Unchanged: FFE9F/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         0       1       0       0       0
  2611 ;;      Temps:          0       2       0       0       0
  2612 ;;      Totals:         0       3       0       0       0
  2613 ;;Total ram usage:        3 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    3
  2616 ;; This function calls:
  2617 ;;		_getAdOriginalValue
  2618 ;; This function is called by:
  2619 ;;		_process_AD_Converter_Value
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622  0322                     _AD_Sample:	
  2623                           
  2624                           ;common.c: 129: if(sampleTimes < 6)
  2625                           
  2626                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2627  0322  3006               	movlw	6
  2628  0323  023C               	subwf	_sampleTimes,w
  2629  0324  1803               	skipnc
  2630  0325  0008               	return
  2631                           
  2632                           ;common.c: 130: {
  2633                           ;common.c: 132: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2634  0326  2385  118A         	fcall	_getAdOriginalValue
  2635  0328  1003               	clrc
  2636  0329  0D3C               	rlf	_sampleTimes,w
  2637  032A  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2638  032B  0084               	movwf	4
  2639  032C  0855               	movf	?_getAdOriginalValue,w
  2640  032D  1383               	bcf	3,7	;select IRP bank0
  2641  032E  0080               	movwf	0
  2642  032F  0A84               	incf	4,f
  2643  0330  0856               	movf	?_getAdOriginalValue+1,w
  2644  0331  0080               	movwf	0
  2645                           
  2646                           ;common.c: 134: if(sampleTimes == 0)
  2647  0332  08BC               	movf	_sampleTimes,f
  2648  0333  1D03               	skipz
  2649  0334  2B3D               	goto	l3841
  2650                           
  2651                           ;common.c: 135: {
  2652                           ;common.c: 136: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2653  0335  0821               	movf	_buffer_Sample_AD_Value+1,w
  2654  0336  00B5               	movwf	_multiFilterMaxValue+1
  2655  0337  0820               	movf	_buffer_Sample_AD_Value,w
  2656  0338  00B4               	movwf	_multiFilterMaxValue
  2657                           
  2658                           ;common.c: 137: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2659  0339  0821               	movf	_buffer_Sample_AD_Value+1,w
  2660  033A  00B7               	movwf	_multiFilterMinValue+1
  2661  033B  0820               	movf	_buffer_Sample_AD_Value,w
  2662  033C  00B6               	movwf	_multiFilterMinValue
  2663  033D                     l3841:	
  2664                           
  2665                           ;common.c: 138: }
  2666                           ;common.c: 140: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2667  033D  23A2  118A         	fcall	PL2	;call to abstracted procedure
  2668  033F  0235               	subwf	_multiFilterMaxValue+1,w
  2669  0340  1D03               	skipz
  2670  0341  2B44               	goto	u885
  2671  0342  0857               	movf	??_AD_Sample,w
  2672  0343  0234               	subwf	_multiFilterMaxValue,w
  2673  0344                     u885:	
  2674  0344  1803               	skipnc
  2675  0345  2B4F               	goto	l1635
  2676                           
  2677                           ;common.c: 141: {
  2678                           ;common.c: 142: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2679  0346  1003               	clrc
  2680  0347  0D3C               	rlf	_sampleTimes,w
  2681  0348  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2682  0349  0084               	movwf	4
  2683  034A  0800               	movf	0,w
  2684  034B  00B4               	movwf	_multiFilterMaxValue
  2685  034C  0A84               	incf	4,f
  2686  034D  0800               	movf	0,w
  2687  034E  00B5               	movwf	_multiFilterMaxValue+1
  2688  034F                     l1635:	
  2689                           
  2690                           ;common.c: 143: }
  2691                           ;common.c: 144: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2692  034F  23A2  118A         	fcall	PL2	;call to abstracted procedure
  2693  0351  0837               	movf	_multiFilterMinValue+1,w
  2694  0352  0258               	subwf	??_AD_Sample+1,w
  2695  0353  1D03               	skipz
  2696  0354  2B57               	goto	u895
  2697  0355  0836               	movf	_multiFilterMinValue,w
  2698  0356  0257               	subwf	??_AD_Sample,w
  2699  0357                     u895:	
  2700  0357  1803               	skipnc
  2701  0358  2B62               	goto	l3847
  2702                           
  2703                           ;common.c: 145: {
  2704                           ;common.c: 146: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2705  0359  1003               	clrc
  2706  035A  0D3C               	rlf	_sampleTimes,w
  2707  035B  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2708  035C  0084               	movwf	4
  2709  035D  0800               	movf	0,w
  2710  035E  00B6               	movwf	_multiFilterMinValue
  2711  035F  0A84               	incf	4,f
  2712  0360  0800               	movf	0,w
  2713  0361  00B7               	movwf	_multiFilterMinValue+1
  2714  0362                     l3847:	
  2715  0362  3006               	movlw	6
  2716                           
  2717                           ;common.c: 151: sampleTimes++;
  2718  0363  0ABC               	incf	_sampleTimes,f
  2719                           
  2720                           ;common.c: 153: if(sampleTimes >= 6)
  2721  0364  023C               	subwf	_sampleTimes,w
  2722  0365  1C03               	skipc
  2723  0366  0008               	return
  2724                           
  2725                           ;common.c: 154: {
  2726                           ;common.c: 155: sampleTimes = 0;
  2727  0367  01BC               	clrf	_sampleTimes
  2728                           
  2729                           ;common.c: 158: {
  2730                           ;common.c: 160: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2731  0368  085A               	movf	_sampleChannelSelect,w
  2732  0369  3A0E               	xorlw	14
  2733  036A  1D03               	skipz
  2734  036B  2B6E               	goto	l3857
  2735                           
  2736                           ;common.c: 161: sampleChannelSelect = 4;
  2737  036C  3004               	movlw	4
  2738  036D  2B76               	goto	L11
  2739  036E                     l3857:	
  2740                           ;common.c: 162: }
  2741                           
  2742                           
  2743                           ;common.c: 164: {
  2744                           ;common.c: 165: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  2745  036E  085A               	movf	_sampleChannelSelect,w
  2746  036F  3A04               	xorlw	4
  2747  0370  1D03               	skipz
  2748  0371  2B75               	goto	l3863
  2749                           
  2750                           ;common.c: 166: sampleChannelSelect = 1;
  2751  0372  01DA               	clrf	_sampleChannelSelect
  2752  0373  0ADA               	incf	_sampleChannelSelect,f
  2753                           
  2754                           ;common.c: 167: }
  2755  0374  2B77               	goto	l3867
  2756  0375                     l3863:	
  2757                           
  2758                           ;common.c: 171: sampleChannelSelect = 14;
  2759  0375  300E               	movlw	14
  2760  0376                     L11:	
  2761  0376  00DA               	movwf	_sampleChannelSelect
  2762  0377                     l3867:	
  2763                           ;common.c: 172: }
  2764                           
  2765                           
  2766                           ;common.c: 177: }
  2767                           ;common.c: 179: for(unsigned char index = 0; index < 6;index++)
  2768  0377  01D9               	clrf	AD_Sample@index
  2769  0378                     l3873:	
  2770                           
  2771                           ;common.c: 180: buffer_Sample_AD_Value[index] = 0;
  2772  0378  1003               	clrc
  2773  0379  0D59               	rlf	AD_Sample@index,w
  2774  037A  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2775  037B  0084               	movwf	4
  2776  037C  3006               	movlw	6
  2777  037D  0180               	clrf	0
  2778  037E  0A84               	incf	4,f
  2779  037F  0180               	clrf	0
  2780  0380  0AD9               	incf	AD_Sample@index,f
  2781  0381  0259               	subwf	AD_Sample@index,w
  2782  0382  1803               	btfsc	3,0
  2783  0383  0008               	return
  2784  0384  2B78               	goto	l3873
  2785  0385                     __end_of_AD_Sample:	
  2786  0385                     __ptext587:	
  2787 ;; =============== function _clearAllTimer ends ============
  2788                           
  2789                           
  2790 ;; *************** function _getAdOriginalValue *****************
  2791 ;; Defined at:
  2792 ;;		line 78 in file "C:\190604\AK7030-OTP\common.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2    0[BANK0 ] unsigned int 
  2799 ;; Registers used:
  2800 ;;		wreg
  2801 ;; Tracked objects:
  2802 ;;		On entry : 60/0
  2803 ;;		On exit  : 60/0
  2804 ;;		Unchanged: FFF9F/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806 ;;      Params:         0       2       0       0       0
  2807 ;;      Locals:         0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0
  2809 ;;      Totals:         0       2       0       0       0
  2810 ;;Total ram usage:        2 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    2
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_AD_Sample
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819  0385                     _getAdOriginalValue:	
  2820                           
  2821                           ;common.c: 79: return adc_original_value;
  2822                           
  2823                           ; Regs used in _getAdOriginalValue: [wreg]
  2824  0385  0833               	movf	_adc_original_value+1,w
  2825  0386  00D6               	movwf	?_getAdOriginalValue+1
  2826  0387  0832               	movf	_adc_original_value,w
  2827  0388  00D5               	movwf	?_getAdOriginalValue
  2828  0389  0008               	return
  2829  038A                     __end_of_getAdOriginalValue:	
  2830  038A                     __ptext605:	
  2831 ;; =============== function _dac_init ends ============
  2832                           
  2833                           
  2834 ;; *************** function _adc_test_init *****************
  2835 ;; Defined at:
  2836 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  channel         1    wreg     unsigned char 
  2839 ;;  ref             1    0[BANK0 ] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  channel         1    2[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 60/0
  2848 ;;		On exit  : 60/20
  2849 ;;		Unchanged: FFF9F/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       1       0       0       0
  2852 ;;      Locals:         0       1       0       0       0
  2853 ;;      Temps:          0       1       0       0       0
  2854 ;;      Totals:         0       3       0       0       0
  2855 ;;Total ram usage:        3 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;;		_process_AD_Converter_Value
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865  038A                     _adc_test_init:	
  2866                           
  2867                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2868                           ;adc_test_init@channel stored from wreg
  2869  038A  00D7               	movwf	adc_test_init@channel
  2870                           
  2871                           ;periph.c: 86: ADCON0 = 0x00;
  2872  038B  019F               	clrf	31	;volatile
  2873                           
  2874                           ;periph.c: 87: ADCON0|=channel<<2;
  2875  038C  00D6               	movwf	??_adc_test_init
  2876  038D  1003               	clrc
  2877  038E  0DD6               	rlf	??_adc_test_init,f
  2878  038F  1003               	clrc
  2879  0390  0D56               	rlf	??_adc_test_init,w
  2880  0391  049F               	iorwf	31,f	;volatile
  2881                           
  2882                           ;periph.c: 88: ADCON1|=ref<<6;
  2883  0392  0855               	movf	adc_test_init@ref,w
  2884  0393  00D6               	movwf	??_adc_test_init
  2885  0394  0CD6               	rrf	??_adc_test_init,f
  2886  0395  0CD6               	rrf	??_adc_test_init,f
  2887  0396  0C56               	rrf	??_adc_test_init,w
  2888  0397  39C0               	andlw	192
  2889  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2890  0399  049F               	iorwf	31,f	;volatile
  2891                           
  2892                           ;periph.c: 89: ADON=1;
  2893  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2894  039B  141F               	bsf	31,0
  2895                           
  2896                           ;periph.c: 90: ADIE=1;
  2897  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2898  039D  150D               	bsf	13,2
  2899  039E  0008               	return
  2900  039F                     __end_of_adc_test_init:	
  2901  039F                     __ptext601:	
  2902 ;; =============== function _isPermitSampleTime ends ============
  2903                           
  2904                           
  2905 ;; *************** function _adc_start *****************
  2906 ;; Defined at:
  2907 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;		None               void
  2914 ;; Registers used:
  2915 ;;		None
  2916 ;; Tracked objects:
  2917 ;;		On entry : 60/20
  2918 ;;		On exit  : 60/0
  2919 ;;		Unchanged: FFF9F/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    2
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;;		_process_AD_Converter_Value
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935  039F                     _adc_start:	
  2936  039F                     l3711:	
  2937                           ; Regs used in _adc_start: []
  2938                           
  2939                           
  2940                           ;periph.c: 101: GO=1;
  2941  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2942  03A0  149F               	bsf	31,1
  2943  03A1  0008               	return
  2944  03A2                     __end_of_adc_start:	
  2945  03A2                     PL2:	
  2946  03A2  1003               	clrc
  2947  03A3  0D3C               	rlf	_sampleTimes,w
  2948  03A4  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2949  03A5  0084               	movwf	4
  2950  03A6  0800               	movf	0,w
  2951  03A7  00D7               	movwf	??_AD_Sample
  2952  03A8  0A84               	incf	4,f
  2953  03A9  0800               	movf	0,w
  2954  03AA  00D8               	movwf	??_AD_Sample+1
  2955  03AB  0008               	return
  2956                           
  2957                           	psect	text584
  2958  040A                     __ptext584:	
  2959 ;; =============== function _process_AD_Converter_Value ends ============
  2960                           
  2961                           
  2962 ;; *************** function _clearPinPortAndTimer *****************
  2963 ;; Defined at:
  2964 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;		None               void
  2971 ;; Registers used:
  2972 ;;		status,2, status,0, pclath, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 60/0
  2975 ;;		On exit  : 60/0
  2976 ;;		Unchanged: FFF9F/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    4
  2985 ;; This function calls:
  2986 ;;		_clearAllTimer
  2987 ;; This function is called by:
  2988 ;;		_main
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991  040A                     _clearPinPortAndTimer:	
  2992                           
  2993                           ;main.c: 93: PB0 = 0;
  2994                           
  2995                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  2996  040A  1006               	bcf	6,0
  2997                           
  2998                           ;main.c: 94: PA0 = 0;
  2999  040B  1005               	bcf	5,0
  3000                           
  3001                           ;main.c: 95: PA1 = 0;
  3002  040C  1085               	bcf	5,1
  3003                           
  3004                           ;main.c: 96: PA2 = 0;
  3005  040D  1105               	bcf	5,2
  3006                           
  3007                           ;main.c: 97: PA3 = 0;
  3008  040E  1185               	bcf	5,3
  3009                           
  3010                           ;main.c: 98: PA7 = 0;
  3011  040F  1385               	bcf	5,7
  3012                           
  3013                           ;main.c: 99: clearAllTimer();
  3014  0410  2C11               	ljmp	l3831
  3015  0411                     __end_of_clearPinPortAndTimer:	
  3016  0411                     __ptext586:	
  3017 ;; =============== function _AD_Sample ends ============
  3018                           
  3019                           
  3020 ;; *************** function _clearAllTimer *****************
  3021 ;; Defined at:
  3022 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 60/0
  3033 ;;		On exit  : 60/0
  3034 ;;		Unchanged: FFF9F/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    3
  3043 ;; This function calls:
  3044 ;;		_clearTwelveHoursTimer
  3045 ;;		_clearThreeHoursTimer
  3046 ;;		_clearTwentySecondsTimer
  3047 ;; This function is called by:
  3048 ;;		_clearPinPortAndTimer
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052  0411                     _clearAllTimer:	
  3053  0411                     l3831:	
  3054                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3055                           
  3056                           
  3057                           ;main.c: 84: clearTwelveHoursTimer();
  3058  0411  2416  118A         	fcall	_clearTwelveHoursTimer
  3059                           
  3060                           ;main.c: 85: clearThreeHoursTimer();
  3061  0413  2419  118A         	fcall	_clearThreeHoursTimer
  3062                           
  3063                           ;main.c: 86: clearTwentySecondsTimer();
  3064  0415  2C1C               	ljmp	l3671
  3065  0416                     __end_of_clearAllTimer:	
  3066  0416                     __ptext611:	
  3067 ;; =============== function _clearThreeHoursTimer ends ============
  3068                           
  3069                           
  3070 ;; *************** function _clearTwelveHoursTimer *****************
  3071 ;; Defined at:
  3072 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;		None               void
  3079 ;; Registers used:
  3080 ;;		status,2
  3081 ;; Tracked objects:
  3082 ;;		On entry : 60/0
  3083 ;;		On exit  : 60/0
  3084 ;;		Unchanged: FFF9F/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    2
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_clearAllTimer
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099  0416                     _clearTwelveHoursTimer:	
  3100                           
  3101                           ;common.c: 216: uiBigTimer = 0;
  3102                           
  3103                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3104  0416  01F6               	clrf	_uiBigTimer
  3105  0417  01F7               	clrf	_uiBigTimer+1
  3106  0418  0008               	return
  3107  0419                     __end_of_clearTwelveHoursTimer:	
  3108  0419                     __ptext610:	
  3109 ;; =============== function _clearTwentySecondsTimer ends ============
  3110                           
  3111                           
  3112 ;; *************** function _clearThreeHoursTimer *****************
  3113 ;; Defined at:
  3114 ;;		line 221 in file "C:\190604\AK7030-OTP\common.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;		None               void
  3121 ;; Registers used:
  3122 ;;		status,2
  3123 ;; Tracked objects:
  3124 ;;		On entry : 60/0
  3125 ;;		On exit  : 60/0
  3126 ;;		Unchanged: FFF9F/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3128 ;;      Params:         0       0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0
  3131 ;;      Totals:         0       0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    2
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_clearAllTimer
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142  0419                     _clearThreeHoursTimer:	
  3143                           
  3144                           ;common.c: 222: uiSmallTimer = 0;
  3145                           
  3146                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3147  0419  01B8               	clrf	_uiSmallTimer
  3148  041A  01B9               	clrf	_uiSmallTimer+1
  3149  041B  0008               	return
  3150  041C                     __end_of_clearThreeHoursTimer:	
  3151  041C                     __ptext609:	
  3152 ;; =============== function _clock_config ends ============
  3153                           
  3154                           
  3155 ;; *************** function _clearTwentySecondsTimer *****************
  3156 ;; Defined at:
  3157 ;;		line 226 in file "C:\190604\AK7030-OTP\common.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;		None               void
  3164 ;; Registers used:
  3165 ;;		status,2
  3166 ;; Tracked objects:
  3167 ;;		On entry : 60/0
  3168 ;;		On exit  : 60/0
  3169 ;;		Unchanged: FFF9F/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_clearAllTimer
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184  041C                     _clearTwentySecondsTimer:	
  3185  041C                     l3671:	
  3186                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3187                           
  3188                           
  3189                           ;common.c: 227: uiTwentySecondsTimer = 0;
  3190  041C  01BA               	clrf	_uiTwentySecondsTimer
  3191  041D  01BB               	clrf	_uiTwentySecondsTimer+1
  3192  041E  0008               	return
  3193  041F                     __end_of_clearTwentySecondsTimer:	
  3194                           
  3195                           	psect	text590
  3196  048B                     __ptext590:	
  3197 ;; =============== function _getAD_ConvertFlag ends ============
  3198                           
  3199                           
  3200 ;; *************** function _isFinishedThreeHoursTimer *****************
  3201 ;; Defined at:
  3202 ;;		line 265 in file "C:\190604\AK7030-OTP\common.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      unsigned char 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 60/0
  3213 ;;		On exit  : 60/0
  3214 ;;		Unchanged: FFF9F/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0
  3219 ;;      Totals:         0       0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    2
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229  048B                     _isFinishedThreeHoursTimer:	
  3230                           
  3231                           ;common.c: 266: if(uiSmallTimer == 0)
  3232                           
  3233                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3234  048B  0839               	movf	_uiSmallTimer+1,w
  3235  048C  0438               	iorwf	_uiSmallTimer,w
  3236  048D  1903               	btfsc	3,2
  3237                           
  3238                           ;common.c: 267: return 1;
  3239  048E  3401               	retlw	1
  3240                           
  3241                           ;common.c: 268: else
  3242                           ;common.c: 269: return 0;
  3243  048F  3400               	retlw	0
  3244  0490                     __end_of_isFinishedThreeHoursTimer:	
  3245                           
  3246                           	psect	text591
  3247  0484                     __ptext591:	
  3248 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3249                           
  3250                           
  3251 ;; *************** function _startThreeHoursTimer *****************
  3252 ;; Defined at:
  3253 ;;		line 232 in file "C:\190604\AK7030-OTP\common.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg
  3262 ;; Tracked objects:
  3263 ;;		On entry : 60/60
  3264 ;;		On exit  : 60/0
  3265 ;;		Unchanged: FFF9F/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0
  3270 ;;      Totals:         0       0       0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280  0484                     _startThreeHoursTimer:	
  3281                           
  3282                           ;common.c: 233: uiSmallTimer = 10800;
  3283                           
  3284                           ; Regs used in _startThreeHoursTimer: [wreg]
  3285  0484  3030               	movlw	48
  3286  0485  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0486  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0487  00B8               	movwf	_uiSmallTimer
  3289  0488  302A               	movlw	42
  3290  0489  00B9               	movwf	_uiSmallTimer+1
  3291  048A  0008               	return
  3292  048B                     __end_of_startThreeHoursTimer:	
  3293                           
  3294                           	psect	text592
  3295  0490                     __ptext592:	
  3296 ;; =============== function _startThreeHoursTimer ends ============
  3297                           
  3298                           
  3299 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3300 ;; Defined at:
  3301 ;;		line 248 in file "C:\190604\AK7030-OTP\common.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      unsigned char 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 60/0
  3312 ;;		On exit  : 60/0
  3313 ;;		Unchanged: FFF9F/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    2
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328  0490                     _isFinishedTwentySecondsTimer:	
  3329                           
  3330                           ;common.c: 249: if(0 == uiTwentySecondsTimer)
  3331                           
  3332                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3333  0490  083B               	movf	_uiTwentySecondsTimer+1,w
  3334  0491  043A               	iorwf	_uiTwentySecondsTimer,w
  3335  0492  1903               	btfsc	3,2
  3336                           
  3337                           ;common.c: 250: return 1;
  3338  0493  3401               	retlw	1
  3339                           
  3340                           ;common.c: 251: else
  3341                           ;common.c: 252: return 0;
  3342  0494  3400               	retlw	0
  3343  0495                     __end_of_isFinishedTwentySecondsTimer:	
  3344                           
  3345                           	psect	text593
  3346  0495                     __ptext593:	
  3347 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3348                           
  3349                           
  3350 ;; *************** function _getAdOriginaCh4Value *****************
  3351 ;; Defined at:
  3352 ;;		line 89 in file "C:\190604\AK7030-OTP\common.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    0[BANK0 ] unsigned int 
  3359 ;; Registers used:
  3360 ;;		wreg
  3361 ;; Tracked objects:
  3362 ;;		On entry : 60/0
  3363 ;;		On exit  : 60/0
  3364 ;;		Unchanged: FFF9F/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       2       0       0       0
  3367 ;;      Locals:         0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0
  3369 ;;      Totals:         0       2       0       0       0
  3370 ;;Total ram usage:        2 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    2
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379  0495                     _getAdOriginaCh4Value:	
  3380                           
  3381                           ;common.c: 90: return adc_original_CH4_value;
  3382                           
  3383                           ; Regs used in _getAdOriginaCh4Value: [wreg]
  3384  0495  0831               	movf	_adc_original_CH4_value+1,w
  3385  0496  00D6               	movwf	?_getAdOriginaCh4Value+1
  3386  0497  0830               	movf	_adc_original_CH4_value,w
  3387  0498  00D5               	movwf	?_getAdOriginaCh4Value
  3388  0499  0008               	return
  3389  049A                     __end_of_getAdOriginaCh4Value:	
  3390                           
  3391                           	psect	text594
  3392  04B8                     __ptext594:	
  3393 ;; =============== function _getAdOriginaCh4Value ends ============
  3394                           
  3395                           
  3396 ;; *************** function _startTwentySecondsTimer *****************
  3397 ;; Defined at:
  3398 ;;		line 242 in file "C:\190604\AK7030-OTP\common.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;		None               void
  3405 ;; Registers used:
  3406 ;;		wreg
  3407 ;; Tracked objects:
  3408 ;;		On entry : 60/0
  3409 ;;		On exit  : 60/0
  3410 ;;		Unchanged: FFF9F/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    2
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425  04B8                     _startTwentySecondsTimer:	
  3426                           
  3427                           ;common.c: 243: uiTwentySecondsTimer = 20;
  3428                           
  3429                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3430  04B8  3014               	movlw	20
  3431  04B9  00BA               	movwf	_uiTwentySecondsTimer
  3432  04BA  01BB               	clrf	_uiTwentySecondsTimer+1
  3433  04BB  0008               	return
  3434  04BC                     __end_of_startTwentySecondsTimer:	
  3435                           
  3436                           	psect	text595
  3437  049A                     __ptext595:	
  3438 ;; =============== function _startTwentySecondsTimer ends ============
  3439                           
  3440                           
  3441 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3442 ;; Defined at:
  3443 ;;		line 257 in file "C:\190604\AK7030-OTP\common.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      unsigned char 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 60/0
  3454 ;;		On exit  : 60/0
  3455 ;;		Unchanged: FFF9F/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    2
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470  049A                     _isFinishedTwelveHoursTimer:	
  3471                           
  3472                           ;common.c: 258: if(uiBigTimer == 0)
  3473                           
  3474                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3475  049A  0877               	movf	_uiBigTimer+1,w
  3476  049B  0476               	iorwf	_uiBigTimer,w
  3477  049C  1903               	btfsc	3,2
  3478                           
  3479                           ;common.c: 259: return 1;
  3480  049D  3401               	retlw	1
  3481                           
  3482                           ;common.c: 260: else
  3483                           ;common.c: 261: return 0;
  3484  049E  3400               	retlw	0
  3485  049F                     __end_of_isFinishedTwelveHoursTimer:	
  3486                           
  3487                           	psect	text596
  3488  049F                     __ptext596:	
  3489 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3490                           
  3491                           
  3492 ;; *************** function _startTwelveHourTimer *****************
  3493 ;; Defined at:
  3494 ;;		line 205 in file "C:\190604\AK7030-OTP\common.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg
  3503 ;; Tracked objects:
  3504 ;;		On entry : 60/0
  3505 ;;		On exit  : 60/0
  3506 ;;		Unchanged: FFF9F/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0
  3511 ;;      Totals:         0       0       0       0       0
  3512 ;;Total ram usage:        0 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    2
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521  049F                     _startTwelveHourTimer:	
  3522                           
  3523                           ;common.c: 206: uiBigTimer = 43200;
  3524                           
  3525                           ; Regs used in _startTwelveHourTimer: [wreg]
  3526  049F  30C0               	movlw	192
  3527  04A0  00F6               	movwf	_uiBigTimer
  3528  04A1  30A8               	movlw	168
  3529  04A2  00F7               	movwf	_uiBigTimer+1
  3530  04A3  0008               	return
  3531  04A4                     __end_of_startTwelveHourTimer:	
  3532                           
  3533                           	psect	text597
  3534  04A4                     __ptext597:	
  3535 ;; =============== function _startTwelveHourTimer ends ============
  3536                           
  3537                           
  3538 ;; *************** function _getAdOriginalCh1Value *****************
  3539 ;; Defined at:
  3540 ;;		line 83 in file "C:\190604\AK7030-OTP\common.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2    0[BANK0 ] unsigned int 
  3547 ;; Registers used:
  3548 ;;		wreg
  3549 ;; Tracked objects:
  3550 ;;		On entry : 60/0
  3551 ;;		On exit  : 60/0
  3552 ;;		Unchanged: FFF9F/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       2       0       0       0
  3555 ;;      Locals:         0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         0       2       0       0       0
  3558 ;;Total ram usage:        2 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    2
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567  04A4                     _getAdOriginalCh1Value:	
  3568                           
  3569                           ;common.c: 84: return adc_original_CH1_value;
  3570                           
  3571                           ; Regs used in _getAdOriginalCh1Value: [wreg]
  3572  04A4  082F               	movf	_adc_original_CH1_value+1,w
  3573  04A5  00D6               	movwf	?_getAdOriginalCh1Value+1
  3574  04A6  082E               	movf	_adc_original_CH1_value,w
  3575  04A7  00D5               	movwf	?_getAdOriginalCh1Value
  3576  04A8  0008               	return
  3577  04A9                     __end_of_getAdOriginalCh1Value:	
  3578                           
  3579                           	psect	text598
  3580  04A9                     __ptext598:	
  3581 ;; =============== function _getAdOriginalCh1Value ends ============
  3582                           
  3583                           
  3584 ;; *************** function _getAdOriginalCh14Value *****************
  3585 ;; Defined at:
  3586 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    0[BANK0 ] unsigned int 
  3593 ;; Registers used:
  3594 ;;		wreg
  3595 ;; Tracked objects:
  3596 ;;		On entry : 60/0
  3597 ;;		On exit  : 60/0
  3598 ;;		Unchanged: FFF9F/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       2       0       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0
  3603 ;;      Totals:         0       2       0       0       0
  3604 ;;Total ram usage:        2 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    2
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613  04A9                     _getAdOriginalCh14Value:	
  3614                           
  3615                           ;common.c: 96: return adc_original_CH14_value;
  3616                           
  3617                           ; Regs used in _getAdOriginalCh14Value: [wreg]
  3618  04A9  082D               	movf	_adc_original_CH14_value+1,w
  3619  04AA  00D6               	movwf	?_getAdOriginalCh14Value+1
  3620  04AB  082C               	movf	_adc_original_CH14_value,w
  3621  04AC  00D5               	movwf	?_getAdOriginalCh14Value
  3622  04AD  0008               	return
  3623  04AE                     __end_of_getAdOriginalCh14Value:	
  3624                           
  3625                           	psect	text599
  3626  04BF                     __ptext599:	
  3627 ;; =============== function _getAdOriginalCh14Value ends ============
  3628                           
  3629                           
  3630 ;; *************** function _clrSampeTime *****************
  3631 ;; Defined at:
  3632 ;;		line 283 in file "C:\190604\AK7030-OTP\common.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;		None               void
  3639 ;; Registers used:
  3640 ;;		status,2
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: FFFFF/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    2
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659  04BF                     _clrSampeTime:	
  3660                           
  3661                           ;common.c: 284: timer.timer10msStopWatch = 0;
  3662                           
  3663                           ; Regs used in _clrSampeTime: [status,2]
  3664  04BF  01FA               	clrf	_timer
  3665  04C0  0008               	return
  3666  04C1                     __end_of_clrSampeTime:	
  3667                           
  3668                           	psect	text600
  3669  04AE                     __ptext600:	
  3670 ;; =============== function _clrSampeTime ends ============
  3671                           
  3672                           
  3673 ;; *************** function _isPermitSampleTime *****************
  3674 ;; Defined at:
  3675 ;;		line 273 in file "C:\190604\AK7030-OTP\common.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      unsigned char 
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: FFFFF/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    2
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_main
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702  04AE                     _isPermitSampleTime:	
  3703                           
  3704                           ;common.c: 274: if(timer.timer10msStopWatch >= 10)
  3705                           
  3706                           ; Regs used in _isPermitSampleTime: [wreg]
  3707  04AE  300A               	movlw	10
  3708  04AF  027A               	subwf	_timer,w
  3709  04B0  1803               	btfsc	3,0
  3710                           
  3711                           ;common.c: 275: {
  3712                           ;common.c: 276: return 1;
  3713  04B1  3401               	retlw	1
  3714                           
  3715                           ;common.c: 278: else
  3716                           ;common.c: 279: return 0;
  3717  04B2  3400               	retlw	0
  3718  04B3                     __end_of_isPermitSampleTime:	
  3719                           
  3720                           	psect	text602
  3721  0474                     __ptext602:	
  3722 ;; =============== function _adc_start ends ============
  3723                           
  3724                           
  3725 ;; *************** function _op2_init *****************
  3726 ;; Defined at:
  3727 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;		None               void
  3734 ;; Registers used:
  3735 ;;		wreg
  3736 ;; Tracked objects:
  3737 ;;		On entry : 17F/20
  3738 ;;		On exit  : 17F/20
  3739 ;;		Unchanged: FFE80/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0
  3744 ;;      Totals:         0       0       0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    2
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754  0474                     _op2_init:	
  3755                           
  3756                           ;periph.c: 52: OP2CON1=0x10;
  3757                           
  3758                           ; Regs used in _op2_init: [wreg]
  3759  0474  3010               	movlw	16
  3760  0475  009C               	movwf	28	;volatile
  3761                           
  3762                           ;periph.c: 54: OP2CON2=0x10;
  3763  0476  009D               	movwf	29	;volatile
  3764                           
  3765                           ;periph.c: 55: OP2CON0=0x80;
  3766  0477  3080               	movlw	128
  3767  0478  009B               	movwf	27	;volatile
  3768                           
  3769                           ;periph.c: 58: TRISA7=0;
  3770  0479  1385               	bcf	5,7
  3771                           
  3772                           ;periph.c: 60: TRISB7 = 1;
  3773  047A  1786               	bsf	6,7
  3774  047B  0008               	return
  3775  047C                     __end_of_op2_init:	
  3776                           
  3777                           	psect	text603
  3778  0457                     __ptext603:	
  3779 ;; =============== function _op2_init ends ============
  3780                           
  3781                           
  3782 ;; *************** function _op1_init *****************
  3783 ;; Defined at:
  3784 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;		None               void
  3791 ;; Registers used:
  3792 ;;		wreg
  3793 ;; Tracked objects:
  3794 ;;		On entry : 17F/20
  3795 ;;		On exit  : 17F/20
  3796 ;;		Unchanged: FFE80/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3798 ;;      Params:         0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0
  3801 ;;      Totals:         0       0       0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    2
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811  0457                     _op1_init:	
  3812                           
  3813                           ;periph.c: 33: OP1CON1=0x02;
  3814                           
  3815                           ; Regs used in _op1_init: [wreg]
  3816  0457  3002               	movlw	2
  3817  0458  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0459  009C               	movwf	28	;volatile
  3819                           
  3820                           ;periph.c: 34: OP1CON2=0xA0;
  3821  045A  30A0               	movlw	160
  3822  045B  009D               	movwf	29	;volatile
  3823                           
  3824                           ;periph.c: 35: OP1CON0=0x80;
  3825  045C  3080               	movlw	128
  3826  045D  009B               	movwf	27	;volatile
  3827                           
  3828                           ;periph.c: 38: TRISB3=1;
  3829  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3830  045F  1586               	bsf	6,3
  3831                           
  3832                           ;periph.c: 40: TRISB5=0;
  3833  0460  1286               	bcf	6,5
  3834  0461  0008               	return
  3835  0462                     __end_of_op1_init:	
  3836                           
  3837                           	psect	text604
  3838  04B3                     __ptext604:	
  3839 ;; =============== function _op1_init ends ============
  3840                           
  3841                           
  3842 ;; *************** function _dac_init *****************
  3843 ;; Defined at:
  3844 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;		None               void
  3851 ;; Registers used:
  3852 ;;		wreg
  3853 ;; Tracked objects:
  3854 ;;		On entry : 17F/20
  3855 ;;		On exit  : 17F/20
  3856 ;;		Unchanged: FFE80/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0
  3861 ;;      Totals:         0       0       0       0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    2
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871  04B3                     _dac_init:	
  3872                           
  3873                           ;periph.c: 15: DACCON|=1;
  3874                           
  3875                           ; Regs used in _dac_init: [wreg]
  3876  04B3  1407               	bsf	7,0	;volatile
  3877                           
  3878                           ;periph.c: 17: DACR0=0x0F;
  3879  04B4  300F               	movlw	15
  3880  04B5  0088               	movwf	8	;volatile
  3881                           
  3882                           ;periph.c: 18: DACCON|=(1)<<2;
  3883  04B6  1507               	bsf	7,2	;volatile
  3884  04B7  0008               	return
  3885  04B8                     __end_of_dac_init:	
  3886                           
  3887                           	psect	text606
  3888  04BC                     __ptext606:	
  3889 ;; =============== function _adc_test_init ends ============
  3890                           
  3891                           
  3892 ;; *************** function _timer1_interrupt_config *****************
  3893 ;; Defined at:
  3894 ;;		line 58 in file "C:\190604\AK7030-OTP\common.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;		None               void
  3901 ;; Registers used:
  3902 ;;		None
  3903 ;; Tracked objects:
  3904 ;;		On entry : 17F/20
  3905 ;;		On exit  : 17F/20
  3906 ;;		Unchanged: FFE80/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3908 ;;      Params:         0       0       0       0       0
  3909 ;;      Locals:         0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0
  3911 ;;      Totals:         0       0       0       0       0
  3912 ;;Total ram usage:        0 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    2
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_main
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921  04BC                     _timer1_interrupt_config:	
  3922                           
  3923                           ;common.c: 59: GIE = 1;
  3924                           
  3925                           ; Regs used in _timer1_interrupt_config: []
  3926  04BC  178B               	bsf	11,7
  3927                           
  3928                           ;common.c: 60: PEIE = 1;
  3929  04BD  170B               	bsf	11,6
  3930  04BE  0008               	return
  3931  04BF                     __end_of_timer1_interrupt_config:	
  3932                           
  3933                           	psect	text607
  3934  0462                     __ptext607:	
  3935 ;; =============== function _timer1_interrupt_config ends ============
  3936                           
  3937                           
  3938 ;; *************** function _timer1_config *****************
  3939 ;; Defined at:
  3940 ;;		line 46 in file "C:\190604\AK7030-OTP\common.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;		None               void
  3947 ;; Registers used:
  3948 ;;		wreg
  3949 ;; Tracked objects:
  3950 ;;		On entry : 17F/40
  3951 ;;		On exit  : 17F/20
  3952 ;;		Unchanged: FFE80/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0
  3957 ;;      Totals:         0       0       0       0       0
  3958 ;;Total ram usage:        0 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    2
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_main
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967  0462                     _timer1_config:	
  3968                           
  3969                           ;common.c: 48: TMR1H=0xCF;
  3970                           
  3971                           ; Regs used in _timer1_config: [wreg]
  3972  0462  30CF               	movlw	207
  3973  0463  1303               	bcf	3,6	;RP1=0, select bank0
  3974  0464  008F               	movwf	15	;volatile
  3975                           
  3976                           ;common.c: 49: TMR1L=0x2C;
  3977  0465  302C               	movlw	44
  3978  0466  008E               	movwf	14	;volatile
  3979                           
  3980                           ;common.c: 50: T1CON=0xE1;
  3981  0467  30E1               	movlw	225
  3982  0468  0090               	movwf	16	;volatile
  3983                           
  3984                           ;common.c: 51: TMR1IE=1;
  3985  0469  1683               	bsf	3,5	;RP0=1, select bank1
  3986  046A  140C               	bsf	12,0
  3987  046B  0008               	return
  3988  046C                     __end_of_timer1_config:	
  3989                           
  3990                           	psect	text608
  3991  047C                     __ptext608:	
  3992 ;; =============== function _timer1_config ends ============
  3993                           
  3994                           
  3995 ;; *************** function _clock_config *****************
  3996 ;; Defined at:
  3997 ;;		line 38 in file "C:\190604\AK7030-OTP\common.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;		None
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;		None
  4002 ;; Return value:  Size  Location     Type
  4003 ;;		None               void
  4004 ;; Registers used:
  4005 ;;		wreg, status,2
  4006 ;; Tracked objects:
  4007 ;;		On entry : 17F/20
  4008 ;;		On exit  : 17F/40
  4009 ;;		Unchanged: FFE80/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4011 ;;      Params:         0       0       0       0       0
  4012 ;;      Locals:         0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0
  4014 ;;      Totals:         0       0       0       0       0
  4015 ;;Total ram usage:        0 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    2
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_main
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024  047C                     _clock_config:	
  4025                           
  4026                           ;common.c: 40: CLKPR = 0x80;
  4027                           
  4028                           ; Regs used in _clock_config: [wreg+status,2]
  4029  047C  3080               	movlw	128
  4030  047D  1283               	bcf	3,5	;RP0=0, select bank2
  4031  047E  1703               	bsf	3,6	;RP1=1, select bank2
  4032  047F  0088               	movwf	8	;volatile
  4033                           
  4034                           ;common.c: 41: CLKPR = 0x00;
  4035  0480  0188               	clrf	8	;volatile
  4036  0481                     l1595:	
  4037                           ;common.c: 42: while(CLKPCE);
  4038                           
  4039  0481  1F88               	btfss	8,7
  4040  0482  0008               	return
  4041  0483  2C81               	goto	l1595
  4042  0484                     __end_of_clock_config:	
  4043                           
  4044                           	psect	text612
  4045  03AC                     __ptext612:	
  4046 ;; =============== function _clearTwelveHoursTimer ends ============
  4047                           
  4048                           
  4049 ;; *************** function _ISR *****************
  4050 ;; Defined at:
  4051 ;;		line 288 in file "C:\190604\AK7030-OTP\common.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;		None               void
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 60/0
  4063 ;;		Unchanged: FFF9F/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0
  4067 ;;      Temps:          2       0       0       0       0
  4068 ;;      Totals:         2       0       0       0       0
  4069 ;;Total ram usage:        2 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    1
  4072 ;; This function calls:
  4073 ;;		i1_setAD_ConvertFlag
  4074 ;;		_adc_get
  4075 ;; This function is called by:
  4076 ;;		Interrupt level 1
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079  03AC                     _ISR:	
  4080                           
  4081                           ;common.c: 289: static unsigned char ucTimer1sCnt = 0;
  4082                           ;common.c: 291: if(TMR1IF == 1)
  4083  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  4084  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  4085  03AE  1C0C               	btfss	12,0
  4086  03AF  2BCC               	goto	i1l3807
  4087  03B0  3064               	movlw	100
  4088                           
  4089                           ;common.c: 292: {
  4090                           ;common.c: 293: TMR1IF = 0 ;
  4091  03B1  100C               	bcf	12,0
  4092                           
  4093                           ;common.c: 294: timer.timer10msStopWatch++;
  4094  03B2  0AFA               	incf	_timer,f
  4095                           
  4096                           ;common.c: 295: ucTimer1sCnt++;
  4097  03B3  0AF8               	incf	ISR@ucTimer1sCnt,f
  4098                           
  4099                           ;common.c: 297: if(ucTimer1sCnt >= 100)
  4100  03B4  0278               	subwf	ISR@ucTimer1sCnt,w
  4101  03B5  1C03               	skipc
  4102  03B6  2BCC               	goto	i1l3807
  4103                           
  4104                           ;common.c: 298: {
  4105                           ;common.c: 299: ucTimer1sCnt = 0;
  4106  03B7  01F8               	clrf	ISR@ucTimer1sCnt
  4107                           
  4108                           ;common.c: 300: if(uiBigTimer > 0)
  4109  03B8  0877               	movf	_uiBigTimer+1,w
  4110  03B9  0476               	iorwf	_uiBigTimer,w
  4111  03BA  1903               	skipnz
  4112  03BB  2BC2               	goto	i1l1703
  4113                           
  4114                           ;common.c: 301: uiBigTimer--;
  4115  03BC  3001               	movlw	1
  4116  03BD  02F6               	subwf	_uiBigTimer,f
  4117  03BE  3000               	movlw	0
  4118  03BF  1C03               	skipc
  4119  03C0  03F7               	decf	_uiBigTimer+1,f
  4120  03C1  02F7               	subwf	_uiBigTimer+1,f
  4121  03C2                     i1l1703:	
  4122                           
  4123                           ;common.c: 303: if(uiSmallTimer)
  4124  03C2  0839               	movf	_uiSmallTimer+1,w
  4125  03C3  0438               	iorwf	_uiSmallTimer,w
  4126  03C4  1903               	skipnz
  4127  03C5  2BCC               	goto	i1l3807
  4128                           
  4129                           ;common.c: 304: uiSmallTimer--;
  4130  03C6  3001               	movlw	1
  4131  03C7  02B8               	subwf	_uiSmallTimer,f
  4132  03C8  3000               	movlw	0
  4133  03C9  1C03               	skipc
  4134  03CA  03B9               	decf	_uiSmallTimer+1,f
  4135  03CB  02B9               	subwf	_uiSmallTimer+1,f
  4136  03CC                     i1l3807:	
  4137                           
  4138                           ;common.c: 305: }
  4139                           ;common.c: 306: }
  4140                           ;common.c: 308: if(ADIF)
  4141  03CC  1D0D               	btfss	13,2
  4142  03CD  2BF5               	goto	i1l1710
  4143  03CE  3001               	movlw	1
  4144                           
  4145                           ;common.c: 309: {
  4146                           ;common.c: 310: ADIF=0;
  4147  03CF  110D               	bcf	13,2
  4148                           
  4149                           ;common.c: 311: setAD_ConvertFlag(1);
  4150  03D0  2407  118A         	fcall	i1_setAD_ConvertFlag
  4151                           
  4152                           ;common.c: 312: adc_original_value = adc_get();
  4153  03D2  23FC  118A         	fcall	_adc_get
  4154  03D4  0871               	movf	?_adc_get+1,w
  4155  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  4156  03D6  00B3               	movwf	_adc_original_value+1
  4157  03D7  0870               	movf	?_adc_get,w
  4158  03D8  00B2               	movwf	_adc_original_value
  4159                           
  4160                           ;common.c: 313: if(sampleChannelSelect == 4)
  4161  03D9  085A               	movf	_sampleChannelSelect,w
  4162  03DA  3A04               	xorlw	4
  4163  03DB  1D03               	skipz
  4164  03DC  2BE5               	goto	i1l3819
  4165                           
  4166                           ;common.c: 314: adc_original_CH4_value = adc_get();
  4167  03DD  23FC  118A         	fcall	_adc_get
  4168  03DF  0871               	movf	?_adc_get+1,w
  4169  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  4170  03E1  00B1               	movwf	_adc_original_CH4_value+1
  4171  03E2  0870               	movf	?_adc_get,w
  4172  03E3  00B0               	movwf	_adc_original_CH4_value
  4173  03E4  2BF5               	goto	i1l1710
  4174  03E5                     i1l3819:	
  4175                           
  4176                           ;common.c: 315: else if(sampleChannelSelect == 1)
  4177  03E5  0B5A               	decfsz	_sampleChannelSelect,w
  4178  03E6  2BEF               	goto	i1l3823
  4179                           
  4180                           ;common.c: 316: adc_original_CH1_value = adc_get();
  4181  03E7  23FC  118A         	fcall	_adc_get
  4182  03E9  0871               	movf	?_adc_get+1,w
  4183  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  4184  03EB  00AF               	movwf	_adc_original_CH1_value+1
  4185  03EC  0870               	movf	?_adc_get,w
  4186  03ED  00AE               	movwf	_adc_original_CH1_value
  4187  03EE  2BF5               	goto	i1l1710
  4188  03EF                     i1l3823:	
  4189                           
  4190                           ;common.c: 317: else
  4191                           ;common.c: 318: adc_original_CH14_value = adc_get();
  4192  03EF  23FC               	fcall	_adc_get
  4193  03F0  0871               	movf	?_adc_get+1,w
  4194  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4195  03F2  00AD               	movwf	_adc_original_CH14_value+1
  4196  03F3  0870               	movf	?_adc_get,w
  4197  03F4  00AC               	movwf	_adc_original_CH14_value
  4198  03F5                     i1l1710:	
  4199  03F5  0875               	movf	??_ISR+1,w
  4200  03F6  008A               	movwf	10
  4201  03F7  0E74               	swapf	??_ISR^(0+-128),w
  4202  03F8  0083               	movwf	3
  4203  03F9  0EFE               	swapf	126,f
  4204  03FA  0E7E               	swapf	126,w
  4205  03FB  0009               	retfie
  4206  03FC                     __end_of_ISR:	
  4207  03FC                     __ptext614:	
  4208 ;; =============== function i1_setAD_ConvertFlag ends ============
  4209                           
  4210                           
  4211 ;; *************** function _adc_get *****************
  4212 ;; Defined at:
  4213 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  val             2    2[COMMON] unsigned int 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  2    0[COMMON] unsigned int 
  4220 ;; Registers used:
  4221 ;;		wreg
  4222 ;; Tracked objects:
  4223 ;;		On entry : 60/0
  4224 ;;		On exit  : 60/20
  4225 ;;		Unchanged: FFF9F/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4227 ;;      Params:         2       0       0       0       0
  4228 ;;      Locals:         2       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0
  4230 ;;      Totals:         4       0       0       0       0
  4231 ;;Total ram usage:        4 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_ISR
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239  03FC                     _adc_get:	
  4240                           
  4241                           ;periph.c: 106: unsigned int val;
  4242                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4243                           
  4244                           ; Regs used in _adc_get: [wreg]
  4245  03FC  081E               	movf	30,w	;volatile
  4246  03FD  00F3               	movwf	adc_get@val+1
  4247  03FE  01F2               	clrf	adc_get@val
  4248  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  4249  0400  081E               	movf	30,w	;volatile
  4250  0401  04F2               	iorwf	adc_get@val,f
  4251                           
  4252                           ;periph.c: 108: return val;
  4253  0402  0873               	movf	adc_get@val+1,w
  4254  0403  00F1               	movwf	?_adc_get+1
  4255  0404  0872               	movf	adc_get@val,w
  4256  0405  00F0               	movwf	?_adc_get
  4257  0406  0008               	return
  4258  0407                     __end_of_adc_get:	
  4259  0407                     __ptext613:	
  4260 ;; =============== function _ISR ends ============
  4261                           
  4262                           
  4263 ;; *************** function i1_setAD_ConvertFlag *****************
  4264 ;; Defined at:
  4265 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  setAD_Conver    1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;		None               void
  4272 ;; Registers used:
  4273 ;;		wreg
  4274 ;; Tracked objects:
  4275 ;;		On entry : 60/0
  4276 ;;		On exit  : 60/0
  4277 ;;		Unchanged: FFF9F/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         0       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0
  4282 ;;      Totals:         1       0       0       0       0
  4283 ;;Total ram usage:        1 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_ISR
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291  0407                     i1_setAD_ConvertFlag:	
  4292                           
  4293                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4294                           ;i1setAD_ConvertFlag@flag stored from wreg
  4295  0407  00F0               	movwf	i1setAD_ConvertFlag@flag
  4296                           
  4297                           ;common.c: 73: adc_convert_flag = flag;
  4298  0408  00F9               	movwf	_adc_convert_flag
  4299  0409  0008               	return
  4300  040A                     __end_ofi1_setAD_ConvertFlag:	
  4301                           
  4302                           	psect	intentry
  4303  0004                     __pintentry:	
  4304                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4305                           
  4306  0004                     interrupt_function:	
  4307  007E                     saved_w	set	btemp
  4308  0004  00FE               	movwf	btemp
  4309  0005  0E03               	swapf	3,w
  4310  0006  00F4               	movwf	??_ISR
  4311  0007  080A               	movf	10,w
  4312  0008  00F5               	movwf	??_ISR+1
  4313  0009  118A  2BAC         	ljmp	_ISR
  4314                           
  4315                           	psect	text615
  4316  0000                     __ptext615:	
  4317 ;; =============== function _adc_get ends ============
  4318                           
  4319  007E                     btemp	set	126	;btemp
  4320  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jun 13 11:11:54 2019

                       ??_clock_config 0055                                      pc 0002  
                                   _GO 00F9                                     fsr 0004  
                  ?_getAdOriginalValue 0055               ?_timer1_interrupt_config 0070  
                                  l703 0064                                    l712 007D  
                                  l902 028E                                    l831 0199  
                                  l807 0165                                    l680 0000  
                                  l752 00EF                                    l737 00ED  
                                  l852 01CC                                    l780 012B  
                                  l677 0000                                    l880 0248  
                                  _PA0 0028                                    _PA1 0029  
                                  _GIE 005F                                    _PB0 0030  
                                  _PA2 002A                                    _PB1 0031  
                                  _PA3 002B                                    _PB2 0032  
                                  _PA6 002E                                    _PA7 002F  
                                  _PB6 0036                                    _ISR 03AC  
                                  u885 0344                                    u895 0357  
                                  fsr0 0004                                    indf 0000  
               ??_startThreeHoursTimer 0055                                   S4611 042F  
                                 S4613 043D                                   S4615 044B  
                                 ?_ISR 0070                     __size_of_AD_Sample 0063  
               ?_getAdOriginalCh1Value 0055                                   l1601 0000  
                                 l4001 00DF                                   l1610 0000  
                                 l1604 0000                                   l2341 0000  
                                 l1613 0000                                   l4013 00F7  
                                 l4005 00EB                                   l1622 0000  
                                 l1607 0000                                   l4103 0143  
                                 l4007 00F0                                   l2344 0000  
                                 l1616 0000                                   l2361 0000  
                                 l4201 01A7                                   l4113 0149  
                                 l4017 00F9                                   l4009 00F2  
                                 l2355 0000                                   l2347 0000  
                                 l1619 0000                                   l1635 034F  
                                 l4211 01AD                                   l4123 0152  
                                 l4019 00FB                                   l1661 0000  
                                 l4221 01B4                                   l4141 016E  
                                 l4133 0159                                   l4029 0101  
                                 l1670 0000                                   l4311 0266  
                                 l4231 01BB                                   l4135 0167  
                                 l4071 012C                                   l4063 011D  
                                 l4039 0107                                   l1664 0000  
                                 l1673 0000                                   l4313 0000  
                                 l4305 0259                                   l4233 01D0  
                                 l4145 0170                                   l4137 0169  
                                 l4081 0135                                   l4073 012E  
                                 l4049 010D                                   l1658 0000  
                                 l1667 0000                                   l1595 0481  
                                 l4331 0000                                   l4315 0000  
                                 l4323 0270                                   l4243 01D9  
                                 l4235 01D2                                   l4147 0172  
                                 l4083 0137                                   l4059 0117  
                                 l3701 0000                                   l4341 0299  
                                 l4333 0282                                   l4317 0000  
                                 l4309 0265                                   l4245 01DB  
                                 l4157 0178                                   l4093 013D  
                                 l4077 0133                                   l4069 011F  
                                 l1598 0000                                   l3703 0000  
                                 l3711 039F                                   l4351 0000  
                                 l4327 027C                                   l4319 0000  
                                 l4271 0207                                   l4255 01E1  
                                 l4239 01D7                                   l4191 019E  
                                 l4167 017E                                   l1696 0000  
                                 l3705 0000                                   l3713 0000  
                                 l4353 02AE                                   l4345 02A5  
                                 l4329 027D                                   l4281 0227  
                                 l4265 01E8                                   l4177 0186  
                                 l3707 0000                                   l3731 0000  
                                 l4371 0000                                   l4363 0000  
                                 l4347 02A6                                   l4339 0286  
                                 l4275 0000                                   l4195 01A3  
                                 l4187 018D                                   l3709 0000  
                                 l3725 0000                                   l4381 0000  
                                 l4373 0000                                   l4365 0000  
                                 l4357 02BA                                   l4285 022D  
                                 l4269 01F6                                   l4189 019C  
                                 l4293 0237                                   l3901 0000  
                                 l3671 041C                                   l3727 0000  
                                 l3735 0000                                   l3751 0000  
                                 l3831 0411                                   l4383 0000  
                                 l4375 0000                                   l4367 0000  
                                 l4359 02BB                                   l4295 0000  
                                 l4287 0000                                   l4279 0220  
                                 l4199 01A5                                   l3911 0000  
                                 l3903 0000                                   l3673 0000  
                                 l3681 0000                                   l3737 0000  
                                 l3841 033D                                   l3833 0000  
                                 l4385 0000                                   l4377 0000  
                                 l4369 0000                                   l4297 0000  
                                 l4289 0000                                   l4393 02E0  
                                 l3913 0000                                   l3905 0000  
                                 l3667 0000                                   l3675 0000  
                                 l3691 0000                                   l3683 0000  
                                 l3755 0000                                   l4379 0000  
                                 l4299 0251                                   l3931 005D  
                                 l3923 0000                                   l3915 0000  
                                 l3907 0000                                   l3669 0000  
                                 l3677 0000                                   l3685 0000  
                                 l3693 0000                                   l3749 0000  
                                 l3781 0000                                   l3853 0000  
                                 l3837 0000                                   l4389 02D5  
                                 l3941 0071                                   l3925 0050  
                                 l3917 0042                                   l3909 0000  
                                 l3679 0000                                   l3687 0000  
                                 l3695 0000                                   l3767 0000  
                                 l3863 0375                                   l3847 0362  
                                 l3951 0000                                   l3943 0072  
                                 l3935 0062                                   l3919 0000  
                                 l3689 0000                                   l3697 0000  
                                 l3769 0000                                   l3785 0000  
                                 l3873 0378                                   l3857 036E  
                                 l3849 0000                                   l3881 0000  
                                 l3961 0000                                   l3953 0080  
                                 l3937 0065                                   l3929 005C  
                                 l3699 0000                                   l3787 0000  
                                 l3875 0000                                   l3867 0377  
                                 l3883 0000                                   l3971 00A0  
                                 l3963 0000                                   l3947 0077  
                                 l3877 0000                                   l3893 030F  
                                 l3981 00AB                                   l3973 0000  
                                 l3965 0093                                   l3957 008C  
                                 l3949 0079                                   l3879 0000  
                                 l3895 0000                                   l3887 0000  
                                 l3983 00B1                                   l3975 0000  
                                 l3959 008D                                   _ADIE 046A  
                                 _ADIF 006A                                   l3897 0315  
                                 l3889 0000                                   l3993 00C6  
                                 l3985 00B4                                   l3977 00A6  
                                 l3969 009F                                   l3987 00B7  
                                 l3979 0000                                   l3997 00D3  
                                 l3989 00BA                                   _ADON 00F8  
                                 _PEIE 005E                   ??_getAdOriginalValue 0057  
                                 _main 000D                                   btemp 007E  
              _clearTwentySecondsTimer 041C                                   start 000B  
              ?_getAdOriginalCh14Value 0055                      main@ucTimerDelay1 004B  
                    main@ucTimerDelay2 004C                      main@ucTimerDelay3 004D  
                    main@ucTimerDelay4 004E                                  ??_ISR 0074  
           __end_of_isPermitSampleTime 04B3                    _sampleChannelSelect 005A  
               ??_getAdOriginaCh4Value 0057                                  ?_main 0070  
                                _DACR0 0088                                  _CLKPR 0108  
                                _T1CON 0010                        __end_of_adc_get 0407  
                                _PAOD7 0C3F                                  _PBOD6 0C46  
                                _TMR1H 000F                                  _TMR1L 000E  
                setAD_ConvertFlag@flag 0055                                  _timer 007A  
                                pclath 000A                                  status 0003  
                                wtemp0 007E         __end_of_getAdOriginalCh14Value 04AE  
        __size_of_startTwelveHourTimer 0005                   __end_of_clrSampeTime 04C1  
                __end_of_clearAllTimer 0416                           __end_of_main 02FE  
               __size_of_adc_test_init 0015                      __end_of_AD_Sample 0385  
                               ??_main 005A                   _clearPinPortAndTimer 040A  
                               _ADCON0 001F                                 _ADCON1 009F  
                 __end_of_clock_config 0484                                 _DACCON 0087  
                               _ADRESH 001E                                 _ADRESL 009E  
                               _CLKPCE 0847                                 i1l1610 0000  
                               i1l1710 03F5                                 i1l1703 03C2  
                               i1l2364 0000                                 i1l3801 0000  
                               i1l3811 0000                                 i1l3821 0000  
                               i1l3813 0000                                 i1l3823 03EF  
                               i1l3815 0000                                 i1l3807 03CC  
                               i1l3825 0000                                 i1l3819 03E5  
                               i1l3829 0000                                 i1l3791 0000  
                               i1l3795 0000                                 i1l3797 0000  
                     __end_of_dac_init 04B8              ??_clearTwentySecondsTimer 0055  
                               _TMR1IE 0460                                 _TMR1IF 0060  
                    _getAD_ConvertFlag 031B                      _setAD_ConvertFlag 031D  
                               _TRISA0 0428                                 _TRISA1 0429  
                               _TRISB0 0430                                 _TRISA2 042A  
                               _TRISB1 0431                                 _TRISA3 042B  
                               _TRISB2 0432                                 _TRISB3 0433  
                               _TRISB4 0434                                 _TRISA6 042E  
                               _TRISB5 0435                                 _TRISA7 042F  
                               _TRISB7 0437                          main@ucTimer1s 0048  
                   ?_getAD_ConvertFlag 0070                     ?_setAD_ConvertFlag 0070  
                     __end_of_op1_init 0462                       __end_of_op2_init 047C  
          ??_isFinishedThreeHoursTimer 0055          __size_of_clearThreeHoursTimer 0003  
                            ??_adc_get 0072                    ??_getAD_ConvertFlag 0055  
                  ??_setAD_ConvertFlag 0055                                 clrloop 046D  
                ?_clearPinPortAndTimer 0070                                 saved_w 007E  
              ??_clearTwelveHoursTimer 0055            ?_process_AD_Converter_Value 0070  
                        _adc_test_init 038A       __size_of_startTwentySecondsTimer 0004  
            __end_of_getAD_ConvertFlag 031D              __end_of_setAD_ConvertFlag 0322  
                   __size_of_adc_start 0003                         __pcstackCOMMON 0070  
                         __pidataBANK0 0000        __end_of_clearTwentySecondsTimer 041F  
                  main@ucTimerRightP5s 0050              _isFinishedThreeHoursTimer 048B  
              ??_getAdOriginalCh1Value 0057                _adc_original_CH14_value 002C  
                __end_of_timer1_config 046C                         ?_adc_test_init 0055  
     __size_of_timer1_interrupt_config 0003                  __size_of_clrSampeTime 0002  
                           __pbssBANK0 0020           __size_ofi1_setAD_ConvertFlag 0003  
                           adc_get@val 0072                             __pmaintext 000D  
                           __pintentry 0004                    main@enumInteralStep 003F  
                            ?_dac_init 0070                 ??_clearPinPortAndTimer 0055  
                __size_of_clock_config 0008                                _OP1CON0 001B  
                              _OP1CON1 001C                                _OP1CON2 001D  
                              _OP2CON0 009B                                _OP2CON1 009C  
                              _OP2CON2 009D                           _clrSampeTime 04BF  
                    __end_of_adc_start 03A2                   _uiTwentySecondsTimer 003A  
                            ?_op1_init 0070                              ?_op2_init 0070  
                   _isPermitSampleTime 04AE                 _buffer_Sample_AD_Value 0020  
                   _adc_original_value 0032          __size_of_startThreeHoursTimer 0007  
           __size_of_getAD_ConvertFlag 0002             __size_of_setAD_ConvertFlag 0005  
          __size_of_getAdOriginalValue 0005                         main@ucTimerP3s 004F  
                  ?_isPermitSampleTime 0070                             _uiBigTimer 0076  
                         _clock_config 047C                                _adc_get 03FC  
                  _multiFilterMaxValue 0034   __end_of_isFinishedTwentySecondsTimer 0495  
__size_of_isFinishedTwentySecondsTimer 0005           _isFinishedTwentySecondsTimer 0490  
                  _multiFilterMinValue 0036                   ??_isPermitSampleTime 0055  
         __end_of_startTwelveHourTimer 04A4                             ??_dac_init 0055  
                            _AD_Sample 0322                           __size_of_ISR 0050  
        __size_of_getAdOriginaCh4Value 0005                        ??_adc_test_init 0056  
                           ??_op1_init 0055                             ??_op2_init 0055  
              _startTwentySecondsTimer 04B8                   end_of_initialization 042C  
                     main@ucLoaderStep 0043                             ?_AD_Sample 0070  
        ?_isFinishedTwentySecondsTimer 0070                   main@enumMainLoopStep 0040  
                   main@ucChannel4Type 0042           ??_isFinishedTwelveHoursTimer 0055  
                     _adc_convert_flag 0079                 __size_of_clearAllTimer 0005  
         __end_of_clearThreeHoursTimer 041C                 main@ucTimerADC1ZeroP5s 0049  
       __size_of_clearTwelveHoursTimer 0003                _timer1_interrupt_config 04BC  
        __end_of_clearTwelveHoursTimer 0419     __size_of_isFinishedThreeHoursTimer 0005  
                       AD_Sample@index 0059                       main@ucTimerX1P5s 0051  
                     main@ucTimerX2P5s 0052                 main@ucTimerZeroPoint3s 0053  
               main@ucTimerZeroPoint5s 0054                       main@ucTimerDelay 004A  
                      main@ucADC4_Step 0041    __size_of_isFinishedTwelveHoursTimer 0005  
                  i1_setAD_ConvertFlag 0407              ??_startTwentySecondsTimer 0055  
                  start_initialization 041F                            __end_of_ISR 03FC  
             ?_clearTwentySecondsTimer 0070         __size_of_getAdOriginalCh1Value 0005  
        __end_of_getAdOriginalCh1Value 04A9               ??_getAdOriginalCh14Value 0057  
                 ?i1_setAD_ConvertFlag 0070                   _startTwelveHourTimer 049F  
    __end_of_isFinishedThreeHoursTimer 0490                     main@enumBranchStep 003E  
                        _clearAllTimer 0411                            __pdataBANK0 005A  
                          ??_AD_Sample 0057              ??_timer1_interrupt_config 0055  
                          __pbssCOMMON 0076                      __size_of_dac_init 0005  
                        __pcstackBANK0 0055         ??_isFinishedTwentySecondsTimer 0055  
                            _adc_start 039F                      __size_of_op1_init 000B  
                    __size_of_op2_init 0008                  ??i1_setAD_ConvertFlag 0070  
                ?_startTwelveHourTimer 0070        __end_of_startTwentySecondsTimer 04BC  
                       ?_clearAllTimer 0070                 __size_of_timer1_config 000A  
                 _clearThreeHoursTimer 0419           __end_of_startThreeHoursTimer 048B  
                            __ptext600 04AE                              __ptext601 039F  
                            __ptext610 0419                              __ptext602 0474  
                            __ptext611 0416                              __ptext603 0457  
                            __ptext612 03AC                              __ptext604 04B3  
                            __ptext613 0407                              __ptext605 038A  
                            __ptext614 03FC                              __ptext606 04BC  
                            __ptext615 0000                              __ptext607 0462  
                            __ptext608 047C                              __ptext609 041C  
                            __ptext590 048B                              __ptext591 0484  
                            __ptext583 02FE                              __ptext592 0490  
                            __ptext584 040A                              __ptext593 0495  
                            __ptext585 0322                              __ptext594 04B8  
                            __ptext586 0411                              __ptext595 049A  
                            __ptext587 0385                              __ptext596 049F  
                            __ptext588 031D                              __ptext597 04A4  
                            __ptext589 031B                              __ptext598 04A9  
                            __ptext599 04BF                               ?_adc_get 0070  
               _adc_original_CH1_value 002E                 _adc_original_CH4_value 0030  
                            __pswtext1 042F                              __pswtext2 043D  
                            __pswtext3 044B     __end_of_isFinishedTwelveHoursTimer 049F  
           _isFinishedTwelveHoursTimer 049A                        ISR@ucTimer1sCnt 0078  
        __size_of_clearPinPortAndTimer 0007             __end_of_getAdOriginalValue 038A  
                           ?_adc_start 0070        __size_of_getAdOriginalCh14Value 0005  
                    interrupt_function 0004           __end_of_getAdOriginaCh4Value 049A  
      __end_of_timer1_interrupt_config 04BF                  ?_clearThreeHoursTimer 0070  
                 adc_test_init@channel 0057            __size_of_isPermitSampleTime 0005  
                         _uiSmallTimer 0038                  __end_of_adc_test_init 039F  
                        _timer1_config 0462           ??_process_AD_Converter_Value 005A  
               ??_startTwelveHourTimer 0055                        ??_clearAllTimer 0055  
               _getAdOriginalCh14Value 04A9                       __size_of_adc_get 000B  
  __size_of_process_AD_Converter_Value 001D                               _dac_init 04B3  
                     main@cTimer1s_805 003D                         ?_timer1_config 0070  
                             _op1_init 0457                               _op2_init 0474  
                          ??_adc_start 0055                   _startThreeHoursTimer 0484  
                _clearTwelveHoursTimer 0416                          __size_of_main 02F1  
                             clear_ram 046C                 ??_clearThreeHoursTimer 0055  
     __size_of_clearTwentySecondsTimer 0003                          ?_clrSampeTime 0070  
                 _getAdOriginaCh4Value 0495                            _sampleTimes 003C  
                ?_startThreeHoursTimer 0070                               intlevel1 0000  
                _getAdOriginalCh1Value 04A4             ?_isFinishedThreeHoursTimer 0070  
                    main@ucLoaderStep1 0044                      main@ucLoaderStep2 0045  
                    main@ucLoaderStep3 0046                      main@ucLoaderStep4 0047  
                        ?_clock_config 0070               ?_startTwentySecondsTimer 0070  
              i1setAD_ConvertFlag@flag 0070                         ??_clrSampeTime 0055  
          ?_isFinishedTwelveHoursTimer 0070                  ?_getAdOriginaCh4Value 0055  
                      ??_timer1_config 0055            __end_ofi1_setAD_ConvertFlag 040A  
   __end_of_process_AD_Converter_Value 031B             _process_AD_Converter_Value 02FE  
               ?_clearTwelveHoursTimer 0070                       adc_test_init@ref 0055  
         __end_of_clearPinPortAndTimer 0411                     _getAdOriginalValue 0385  
