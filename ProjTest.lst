

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jul 18 11:12:19 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	swtext4,local,class=CONST,delta=2
    20                           	psect	text844,local,class=CODE,delta=2
    21                           	psect	text845,local,class=CODE,delta=2
    22                           	psect	text848,local,class=CODE,delta=2
    23                           	psect	text854,local,class=CODE,delta=2
    24                           	psect	text855,local,class=CODE,delta=2
    25                           	psect	text856,local,class=CODE,delta=2
    26                           	psect	text857,local,class=CODE,delta=2
    27                           	psect	text858,local,class=CODE,delta=2
    28                           	psect	text859,local,class=CODE,delta=2
    29                           	psect	text860,local,class=CODE,delta=2
    30                           	psect	text861,local,class=CODE,delta=2
    31                           	psect	text863,local,class=CODE,delta=2
    32                           	psect	text864,local,class=CODE,delta=2
    33                           	psect	text865,local,class=CODE,delta=2
    34                           	psect	text867,local,class=CODE,delta=2
    35                           	psect	text868,local,class=CODE,delta=2
    36                           	psect	text869,local,class=CODE,delta=2
    37                           	psect	text870,local,class=CODE,delta=2
    38                           	psect	text871,local,class=CODE,delta=2
    39                           	psect	text872,local,class=CODE,delta=2
    40                           	psect	text873,local,class=CODE,delta=2
    41                           	psect	text874,local,class=CODE,delta=2
    42                           	psect	text875,local,class=CODE,delta=2
    43                           	psect	text876,local,class=CODE,delta=2
    44                           	psect	text877,local,class=CODE,delta=2
    45                           	psect	text881,local,class=CODE,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text885,local,class=CODE,delta=2
    48                           	psect	pa_nodes,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  000A                     	;#
    51                           
    52                           	psect	config
    53  2000  2FFF               	dw	12287	;#
    54  2001  3FDE               	dw	16350	;#
    55  2002  3FF8               	dw	16376	;#
    56                           
    57                           	psect	idataBANK0
    58  0000                     __pidataBANK0:	
    59  001F                     _ADCON0	set	31
    60  001E                     _ADRESH	set	30
    61  001B                     _OP1CON0	set	27
    62  001C                     _OP1CON1	set	28
    63  001D                     _OP1CON2	set	29
    64  0010                     _T1CON	set	16
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0028                     _PA0	set	40
    72  0029                     _PA1	set	41
    73  002A                     _PA2	set	42
    74  002B                     _PA3	set	43
    75  002E                     _PA6	set	46
    76  0030                     _PB0	set	48
    77  0031                     _PB1	set	49
    78  0036                     _PB6	set	54
    79  0037                     _PB7	set	55
    80  005E                     _PEIE	set	94
    81  0060                     _TMR1IF	set	96
    82  009F                     _ADCON1	set	159
    83  009E                     _ADRESL	set	158
    84  0087                     _DACCON	set	135
    85  0088                     _DACR0	set	136
    86  009B                     _OP2CON0	set	155
    87  009C                     _OP2CON1	set	156
    88  009D                     _OP2CON2	set	157
    89  046A                     _ADIE	set	1130
    90  0460                     _TMR1IE	set	1120
    91  0428                     _TRISA0	set	1064
    92  0429                     _TRISA1	set	1065
    93  042A                     _TRISA2	set	1066
    94  042B                     _TRISA3	set	1067
    95  042E                     _TRISA6	set	1070
    96  042F                     _TRISA7	set	1071
    97  0430                     _TRISB0	set	1072
    98  0431                     _TRISB1	set	1073
    99  0432                     _TRISB2	set	1074
   100  0433                     _TRISB3	set	1075
   101  0434                     _TRISB4	set	1076
   102  0435                     _TRISB5	set	1077
   103  0436                     _TRISB6	set	1078
   104  0437                     _TRISB7	set	1079
   105  0108                     _CLKPR	set	264
   106  0847                     _CLKPCE	set	2119
   107  0C46                     _PBOD6	set	3142
   108  0C47                     _PBOD7	set	3143
   109                           
   110                           	psect	cinit
   111  068E                     start_initialization:	
   112  068E  3048               	movlw	low __pbssBANK0
   113                           
   114                           ; Clear objects allocated to COMMON
   115  068F  01FD               	clrf	__pbssCOMMON& (0+127)
   116                           
   117                           ; Clear objects allocated to BANK0
   118  0690  1383               	bcf	3,7	;select IRP bank0
   119  0691  0084               	movwf	4
   120  0692  306E               	movlw	low (__pbssBANK0+38)
   121  0693  118A  272E  118A   	fcall	clear_ram
   122                           
   123                           ; Clear objects allocated to BANK1
   124  0696  30A0               	movlw	low __pbssBANK1
   125  0697  0084               	movwf	4
   126  0698  30DE               	movlw	low (__pbssBANK1+62)
   127  0699  118A  272E  118A   	fcall	clear_ram
   128  069C  3090               	movlw	low __pbssBANK3
   129                           
   130                           ; Clear objects allocated to BANK3
   131  069D  1783               	bsf	3,7	;select IRP bank2
   132  069E  0084               	movwf	4
   133  069F  30A8               	movlw	low (__pbssBANK3+24)
   134  06A0  118A  272E         	fcall	clear_ram
   135                           
   136                           ;initializer for _sampleChannelSelect
   137  06A2  300E               	movlw	14
   138  06A3  00EE               	movwf	__pdataBANK0& (0+127)
   139  06A4                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142  06A4  0183               	clrf	3
   143  06A5  118A  2813         	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMMON
   146  007D                     __pbssCOMMON:	
   147  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   148  007D                     	ds	1
   149                           
   150                           	psect	bssBANK0
   151  0048                     __pbssBANK0:	
   152  0048                     _sampleTimes:	
   153  0048                     	ds	1
   154  0049                     main@bCheckTweHour:	
   155  0049                     	ds	1
   156  004A                     main@enumBranchStep:	
   157  004A                     	ds	1
   158  004B                     main@enumMainLoopStep:	
   159  004B                     	ds	1
   160  004C                     main@ucADC4_Step:	
   161  004C                     	ds	1
   162  004D                     main@ucChannel4Type:	
   163  004D                     	ds	1
   164  004E                     main@ucCheckTimerP2sLess:	
   165  004E                     	ds	1
   166  004F                     main@ucCheckTimerP2sMore:	
   167  004F                     	ds	1
   168  0050                     main@ucDelayPrefix4TimerP5s:	
   169  0050                     	ds	1
   170  0051                     main@ucDelayPrefix6TimerP2s:	
   171  0051                     	ds	1
   172  0052                     main@ucFourthSuffix1TimerP3s:	
   173  0052                     	ds	1
   174  0053                     main@ucLoaderStep:	
   175  0053                     	ds	1
   176  0054                     main@ucLoaderStep1:	
   177  0054                     	ds	1
   178  0055                     main@ucLoaderStep2:	
   179  0055                     	ds	1
   180  0056                     main@ucLoaderStep3:	
   181  0056                     	ds	1
   182  0057                     main@ucLoaderStep4:	
   183  0057                     	ds	1
   184  0058                     main@ucTimer20s:	
   185  0058                     	ds	1
   186  0059                     main@ucTimerADC1ZeroP5s:	
   187  0059                     	ds	1
   188  005A                     main@ucTimerDelay:	
   189  005A                     	ds	1
   190  005B                     main@ucTimerDelay1:	
   191  005B                     	ds	1
   192  005C                     main@ucTimerDelay2:	
   193  005C                     	ds	1
   194  005D                     main@ucTimerDelay3:	
   195  005D                     	ds	1
   196  005E                     main@ucTimerDelay4:	
   197  005E                     	ds	1
   198  005F                     main@ucTimerDelayP2sLess:	
   199  005F                     	ds	1
   200  0060                     main@ucTimerDelayP2sMore:	
   201  0060                     	ds	1
   202  0061                     main@ucTimerForDACR0_CNT1:	
   203  0061                     	ds	1
   204  0062                     main@ucTimerForDACR0_CNT1_f:	
   205  0062                     	ds	1
   206  0063                     main@ucTimerForDACR0_CNT2:	
   207  0063                     	ds	1
   208  0064                     main@ucTimerForDACR0_CNT2_f:	
   209  0064                     	ds	1
   210  0065                     main@ucTimerLessADC1ZeroP5s:	
   211  0065                     	ds	1
   212  0066                     main@ucTimerLessX1P5s:	
   213  0066                     	ds	1
   214  0067                     main@ucTimerP5s:	
   215  0067                     	ds	1
   216  0068                     main@ucTimerRightP5s:	
   217  0068                     	ds	1
   218  0069                     main@ucTimerX1P5s:	
   219  0069                     	ds	1
   220  006A                     main@ucTimerZeroPoint3s:	
   221  006A                     	ds	1
   222  006B                     main@ucTimerZeroPoint5s:	
   223  006B                     	ds	1
   224  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   225  006C                     	ds	1
   226  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   227  006D                     	ds	1
   228                           
   229                           	psect	dataBANK0
   230  006E                     __pdataBANK0:	
   231  006E                     _sampleChannelSelect:	
   232  006E                     	ds	1
   233                           
   234                           	psect	bssBANK1
   235  00A0                     __pbssBANK1:	
   236  00A0                     _uiBigTimer:	
   237  00A0                     	ds	2
   238  00A2                     _uiSmallTimer:	
   239  00A2                     	ds	2
   240  00A4                     _uiTwentySecondsTimer:	
   241  00A4                     	ds	2
   242  00A6                     ISR@ucTimer1sCnt:	
   243  00A6                     	ds	1
   244  00A7                     _adc_convert_flag:	
   245  00A7                     	ds	1
   246  00A8                     _timer:	
   247  00A8                     	ds	1
   248  00A9                     main@enumInteralStep:	
   249  00A9                     	ds	1
   250  00AA                     main@ucTimer1s:	
   251  00AA                     	ds	1
   252  00AB                     main@ucTimerLessX2P5s:	
   253  00AB                     	ds	1
   254  00AC                     main@ucTimerP3s:	
   255  00AC                     	ds	1
   256  00AD                     main@ucTimerX2P5s:	
   257  00AD                     	ds	1
   258  00AE                     _uiSampleChannelFirst:	
   259  00AE                     	ds	24
   260  00C6                     _uiSampleChannelFourth:	
   261  00C6                     	ds	24
   262                           
   263                           	psect	bssBANK3
   264  0190                     __pbssBANK3:	
   265  0190                     _uiSampleChannelFourteenth:	
   266  0190                     	ds	24
   267                           
   268                           	psect	clrtext
   269  072E                     clear_ram:	
   270                           ;	Called with FSR containing the base address, and
   271                           ;	W with the last address+1
   272                           
   273  072E  0064               	clrwdt	;clear the watchdog before getting into this loop
   274  072F                     clrloop:	
   275  072F  0180               	clrf	0	;clear RAM location pointed to by FSR
   276  0730  0A84               	incf	4,f	;increment pointer
   277  0731  0604               	xorwf	4,w	;XOR with final address
   278  0732  1903               	btfsc	3,2	;have we reached the end yet?
   279  0733  3400               	retlw	0	;all done for this memory range, return
   280  0734  0604               	xorwf	4,w	;XOR again to restore value
   281  0735  2F2F               	goto	clrloop	;do the next byte
   282                           
   283                           	psect	cstackCOMMON
   284  0070                     __pcstackCOMMON:	
   285  0070                     ?_clearTwelveHoursTimer:	
   286  0070                     ?_clearThreeHoursTimer:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_clearTwentySecondsTimer:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_clock_config:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_timer1_config:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_timer1_interrupt_config:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_dac_init:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_op1_init:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_op2_init:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_adc_start:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_process_AD_Converter_Value:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_clrSampeTime:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_startTwentySecondsTimer:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_AD_Sample:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_clearAllTimer:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_clearPinPortAndTimer:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_initPin:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_setPB0:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_setPB1:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_setPA0:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_setPA1:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_setPA2:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_setPA3:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_setPA6:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_main:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_setAD_ConvertFlag:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_ISR:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?i1_setAD_ConvertFlag:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ??i1_setAD_ConvertFlag:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_isPermitSampleTime:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?_isFinishedTwelveHoursTimer:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_isFinishedTwentySecondsTimer:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_isFinishedThreeHoursTimer:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_getAD_ConvertFlag:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_adc_get:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     i1setAD_ConvertFlag@flag:	
   389                           ; 2 bytes @ 0x0
   390                           
   391                           
   392                           ; 1 bytes @ 0x0
   393  0070                     	ds	2
   394  0072                     ??_adc_get:	
   395  0072                     adc_get@val:	
   396                           ; 0 bytes @ 0x2
   397                           
   398                           
   399                           ; 2 bytes @ 0x2
   400  0072                     	ds	2
   401  0074                     ?_vPutSampleDataIntoTable:	
   402  0074                     vPutSampleDataIntoTable@uiSampleData:	
   403                           ; 0 bytes @ 0x4
   404                           
   405                           
   406                           ; 2 bytes @ 0x4
   407  0074                     	ds	2
   408  0076                     vPutSampleDataIntoTable@channel:	
   409                           
   410                           ; 1 bytes @ 0x6
   411  0076                     	ds	1
   412  0077                     ??_vPutSampleDataIntoTable:	
   413  0077                     vPutSampleDataIntoTable@i:	
   414                           ; 0 bytes @ 0x7
   415                           
   416                           
   417                           ; 2 bytes @ 0x7
   418  0077                     	ds	2
   419  0079                     ??_ISR:	
   420                           
   421                           ; 0 bytes @ 0x9
   422  0079                     	ds	4
   423                           
   424                           	psect	cstackBANK0
   425  0020                     __pcstackBANK0:	
   426  0020                     ??_clearTwelveHoursTimer:	
   427  0020                     ??_clearThreeHoursTimer:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ??_clearTwentySecondsTimer:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ??_clock_config:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     ??_timer1_config:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0020                     ??_timer1_interrupt_config:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0020                     ?_adc_test_init:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0020                     ??_dac_init:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0020                     ??_op1_init:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     ??_op2_init:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0020                     ??_adc_start:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0020                     ??_isPermitSampleTime:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0020                     ??_clrSampeTime:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0020                     ?_startTwelveHourTimer:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0020                     ??_isFinishedTwelveHoursTimer:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0020                     ??_startTwentySecondsTimer:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0020                     ??_isFinishedTwentySecondsTimer:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0020                     ?_startThreeHoursTimer:	
   476                           ; 0 bytes @ 0x0
   477                           
   478  0020                     ??_isFinishedThreeHoursTimer:	
   479                           ; 0 bytes @ 0x0
   480                           
   481  0020                     ??_AD_Sample:	
   482                           ; 0 bytes @ 0x0
   483                           
   484  0020                     ??_clearAllTimer:	
   485                           ; 0 bytes @ 0x0
   486                           
   487  0020                     ??_clearPinPortAndTimer:	
   488                           ; 0 bytes @ 0x0
   489                           
   490  0020                     ??_initPin:	
   491                           ; 0 bytes @ 0x0
   492                           
   493  0020                     ??_setPB0:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0020                     ??_setPB1:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0020                     ??_setPA0:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0020                     ??_setPA1:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0020                     ??_setPA2:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0020                     ??_setPA3:	
   509                           ; 0 bytes @ 0x0
   510                           
   511  0020                     ??_setPA6:	
   512                           ; 0 bytes @ 0x0
   513                           
   514  0020                     ??_getAD_ConvertFlag:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0020                     ??_setAD_ConvertFlag:	
   518                           ; 0 bytes @ 0x0
   519                           
   520  0020                     ?_Filter:	
   521                           ; 0 bytes @ 0x0
   522                           
   523  0020                     setPB0@bValue:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0020                     setPB1@bValue:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0020                     setPA0@bValue:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0020                     setPA1@bValue:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0020                     setPA2@bValue:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0020                     setPA3@bValue:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0020                     setPA6@bValue:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0020                     setAD_ConvertFlag@flag:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0020                     adc_test_init@ref:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0020                     Filter@tmpValue:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0020                     startTwelveHourTimer@uiSetTime:	
   554                           ; 2 bytes @ 0x0
   555                           
   556  0020                     startThreeHoursTimer@uiSetTime:	
   557                           ; 2 bytes @ 0x0
   558                           
   559                           
   560                           ; 2 bytes @ 0x0
   561  0020                     	ds	1
   562  0021                     ??_adc_test_init:	
   563                           
   564                           ; 0 bytes @ 0x1
   565  0021                     	ds	1
   566  0022                     ??_startTwelveHourTimer:	
   567  0022                     ??_startThreeHoursTimer:	
   568                           ; 0 bytes @ 0x2
   569                           
   570  0022                     ??_Filter:	
   571                           ; 0 bytes @ 0x2
   572                           
   573  0022                     adc_test_init@channel:	
   574                           ; 0 bytes @ 0x2
   575                           
   576                           
   577                           ; 1 bytes @ 0x2
   578  0022                     	ds	1
   579  0023                     ??_process_AD_Converter_Value:	
   580                           
   581                           ; 0 bytes @ 0x3
   582  0023                     	ds	3
   583  0026                     Filter@filter_buf:	
   584                           
   585                           ; 24 bytes @ 0x6
   586  0026                     	ds	24
   587  003E                     Filter@filter_temp:	
   588                           
   589                           ; 2 bytes @ 0x1E
   590  003E                     	ds	2
   591  0040                     Filter@filter_sum:	
   592                           
   593                           ; 2 bytes @ 0x20
   594  0040                     	ds	2
   595  0042                     Filter@cir:	
   596                           
   597                           ; 2 bytes @ 0x22
   598  0042                     	ds	2
   599  0044                     Filter@j:	
   600                           
   601                           ; 1 bytes @ 0x24
   602  0044                     	ds	1
   603  0045                     Filter@i:	
   604                           
   605                           ; 1 bytes @ 0x25
   606  0045                     	ds	1
   607  0046                     ?_getAdOriginalCh14Value:	
   608  0046                     ?_getAdOriginalCh1Value:	
   609                           ; 2 bytes @ 0x26
   610                           
   611  0046                     ?_getAdOriginaCh4Value:	
   612                           ; 2 bytes @ 0x26
   613                           
   614                           
   615                           ; 2 bytes @ 0x26
   616  0046                     	ds	2
   617  0048                     ??_getAdOriginalCh14Value:	
   618  0048                     ??_getAdOriginalCh1Value:	
   619                           ; 0 bytes @ 0x28
   620                           
   621  0048                     ??_getAdOriginaCh4Value:	
   622                           ; 0 bytes @ 0x28
   623                           
   624  0048                     ??_main:	
   625                           ; 0 bytes @ 0x28
   626                           
   627                           
   628                           	psect	maintext
   629  0013                     __pmaintext:	
   630                           ; 0 bytes @ 0x28
   631 ;;Data sizes: Strings 0, constant 0, data 1, bss 125, persistent 0 stack 0
   632 ;;Auto spaces:   Size  Autos    Used
   633 ;; COMMON          14     13      14
   634 ;; BANK0           80     40      79
   635 ;; BANK1           80      0      62
   636 ;; BANK3           96      0      24
   637 ;; BANK2           96      0       0
   638 ;;
   639 ;; Pointer list with targets:
   640 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   641 ;;
   642 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   643 ;;
   644 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   645 ;;
   646 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   647 ;;
   648 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   649 ;;
   650 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   651 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   652 ;;
   653 ;;
   654 ;; Critical Paths under _main in COMMON
   655 ;;
   656 ;;   None.
   657 ;;
   658 ;; Critical Paths under _ISR in COMMON
   659 ;;
   660 ;;   _ISR->_vPutSampleDataIntoTable
   661 ;;   _vPutSampleDataIntoTable->_adc_get
   662 ;;
   663 ;; Critical Paths under _main in BANK0
   664 ;;
   665 ;;   _main->_getAdOriginalCh14Value
   666 ;;   _main->_getAdOriginalCh1Value
   667 ;;   _main->_getAdOriginaCh4Value
   668 ;;   _getAdOriginaCh4Value->_Filter
   669 ;;   _getAdOriginalCh1Value->_Filter
   670 ;;   _getAdOriginalCh14Value->_Filter
   671 ;;   _process_AD_Converter_Value->_adc_test_init
   672 ;;
   673 ;; Critical Paths under _ISR in BANK0
   674 ;;
   675 ;;   None.
   676 ;;
   677 ;; Critical Paths under _main in BANK1
   678 ;;
   679 ;;   None.
   680 ;;
   681 ;; Critical Paths under _ISR in BANK1
   682 ;;
   683 ;;   None.
   684 ;;
   685 ;; Critical Paths under _main in BANK3
   686 ;;
   687 ;;   None.
   688 ;;
   689 ;; Critical Paths under _ISR in BANK3
   690 ;;
   691 ;;   None.
   692 ;;
   693 ;; Critical Paths under _main in BANK2
   694 ;;
   695 ;;   None.
   696 ;;
   697 ;; Critical Paths under _ISR in BANK2
   698 ;;
   699 ;;   None.
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   702 ;;
   703 ;;
   704 ;;Call Graph Tables:
   705 ;;
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (0) _main                                                 0     0      0    2168
   710 ;;                            _initPin
   711 ;;                       _clock_config
   712 ;;                      _timer1_config
   713 ;;            _timer1_interrupt_config
   714 ;;                      _adc_test_init
   715 ;;                           _dac_init
   716 ;;                           _op1_init
   717 ;;                           _op2_init
   718 ;;                          _adc_start
   719 ;;         _process_AD_Converter_Value
   720 ;;                 _isPermitSampleTime
   721 ;;                       _clrSampeTime
   722 ;;             _getAdOriginalCh14Value
   723 ;;               _clearPinPortAndTimer
   724 ;;                             _setPA6
   725 ;;              _getAdOriginalCh1Value
   726 ;;               _startTwelveHourTimer
   727 ;;         _isFinishedTwelveHoursTimer
   728 ;;               _getAdOriginaCh4Value
   729 ;;                             _setPA2
   730 ;;                             _setPA3
   731 ;;                             _setPA0
   732 ;;                             _setPA1
   733 ;;                             _setPB0
   734 ;;            _startTwentySecondsTimer
   735 ;;       _isFinishedTwentySecondsTimer
   736 ;;            _clearTwentySecondsTimer
   737 ;;               _startThreeHoursTimer
   738 ;;          _isFinishedThreeHoursTimer
   739 ;;               _clearThreeHoursTimer
   740 ;;                             _setPB1
   741 ;;                      _clearAllTimer
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   744 ;;                      _clearAllTimer
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   747 ;;                                             38 BANK0      2     0      2
   748 ;;                             _Filter
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   751 ;;                                             38 BANK0      2     0      2
   752 ;;                             _Filter
   753 ;; ---------------------------------------------------------------------------------
   754 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   755 ;;                                             38 BANK0      2     0      2
   756 ;;                             _Filter
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   759 ;;                  _getAD_ConvertFlag
   760 ;;                  _setAD_ConvertFlag
   761 ;;                          _AD_Sample
   762 ;;                      _adc_test_init
   763 ;;                          _adc_start
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (1) _clearAllTimer                                        0     0      0       0
   766 ;;              _clearTwelveHoursTimer
   767 ;;               _clearThreeHoursTimer
   768 ;;            _clearTwentySecondsTimer
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (2) _AD_Sample                                            0     0      0       0
   771 ;; ---------------------------------------------------------------------------------
   772 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   773 ;;                                              0 BANK0      1     1      0
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   776 ;; ---------------------------------------------------------------------------------
   777 ;; (2) _Filter                                              38    36      2     620
   778 ;;                                              0 BANK0     38    36      2
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   783 ;;                                              0 BANK0      2     0      2
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   786 ;; ---------------------------------------------------------------------------------
   787 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   792 ;;                                              0 BANK0      2     0      2
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _clrSampeTime                                         0     0      0       0
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (1) _isPermitSampleTime                                   0     0      0       0
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (2) _adc_start                                            0     0      0       0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (1) _op2_init                                             0     0      0       0
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (1) _op1_init                                             0     0      0       0
   803 ;; ---------------------------------------------------------------------------------
   804 ;; (1) _dac_init                                             0     0      0       0
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (2) _adc_test_init                                        3     2      1      44
   807 ;;                                              0 BANK0      3     2      1
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _timer1_interrupt_config                              0     0      0       0
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (1) _timer1_config                                        0     0      0       0
   812 ;; ---------------------------------------------------------------------------------
   813 ;; (1) _clock_config                                         0     0      0       0
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (1) _setPA6                                               1     1      0      22
   816 ;;                                              0 BANK0      1     1      0
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (1) _setPA3                                               1     1      0      22
   819 ;;                                              0 BANK0      1     1      0
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (1) _setPA2                                               1     1      0      22
   822 ;;                                              0 BANK0      1     1      0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (1) _setPA1                                               1     1      0      22
   825 ;;                                              0 BANK0      1     1      0
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _setPA0                                               1     1      0      22
   828 ;;                                              0 BANK0      1     1      0
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (1) _setPB1                                               1     1      0      22
   831 ;;                                              0 BANK0      1     1      0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (1) _setPB0                                               1     1      0      22
   834 ;;                                              0 BANK0      1     1      0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (1) _initPin                                              0     0      0       0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; Estimated maximum stack depth 2
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (4) _ISR                                                  4     4      0     407
   849 ;;                                              9 COMMON     4     4      0
   850 ;;                i1_setAD_ConvertFlag
   851 ;;                            _adc_get
   852 ;;            _vPutSampleDataIntoTable
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   855 ;;                                              0 COMMON     1     1      0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (5) _adc_get                                              4     2      2      24
   858 ;;                                              0 COMMON     4     2      2
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   861 ;;                                              4 COMMON     5     2      3
   862 ;;                            _adc_get (ARG)
   863 ;; ---------------------------------------------------------------------------------
   864 ;; Estimated maximum stack depth 5
   865 ;; ---------------------------------------------------------------------------------
   866 ;; Call Graph Graphs:
   867 ;; _main (ROOT)
   868 ;;   _initPin
   869 ;;   _clock_config
   870 ;;   _timer1_config
   871 ;;   _timer1_interrupt_config
   872 ;;   _adc_test_init
   873 ;;   _dac_init
   874 ;;   _op1_init
   875 ;;   _op2_init
   876 ;;   _adc_start
   877 ;;   _process_AD_Converter_Value
   878 ;;     _getAD_ConvertFlag
   879 ;;     _setAD_ConvertFlag
   880 ;;     _AD_Sample
   881 ;;     _adc_test_init
   882 ;;     _adc_start
   883 ;;   _isPermitSampleTime
   884 ;;   _clrSampeTime
   885 ;;   _getAdOriginalCh14Value
   886 ;;     _Filter
   887 ;;   _clearPinPortAndTimer
   888 ;;     _clearAllTimer
   889 ;;       _clearTwelveHoursTimer
   890 ;;       _clearThreeHoursTimer
   891 ;;       _clearTwentySecondsTimer
   892 ;;   _setPA6
   893 ;;   _getAdOriginalCh1Value
   894 ;;     _Filter
   895 ;;   _startTwelveHourTimer
   896 ;;   _isFinishedTwelveHoursTimer
   897 ;;   _getAdOriginaCh4Value
   898 ;;     _Filter
   899 ;;   _setPA2
   900 ;;   _setPA3
   901 ;;   _setPA0
   902 ;;   _setPA1
   903 ;;   _setPB0
   904 ;;   _startTwentySecondsTimer
   905 ;;   _isFinishedTwentySecondsTimer
   906 ;;   _clearTwentySecondsTimer
   907 ;;   _startThreeHoursTimer
   908 ;;   _isFinishedThreeHoursTimer
   909 ;;   _clearThreeHoursTimer
   910 ;;   _setPB1
   911 ;;   _clearAllTimer
   912 ;;     _clearTwelveHoursTimer
   913 ;;     _clearThreeHoursTimer
   914 ;;     _clearTwentySecondsTimer
   915 ;;
   916 ;; _ISR (ROOT)
   917 ;;   i1_setAD_ConvertFlag
   918 ;;   _adc_get
   919 ;;   _vPutSampleDataIntoTable
   920 ;;     _adc_get (ARG)
   921 ;;
   922 ;; Address spaces:
   923 ;;Name               Size   Autos  Total    Cost      Usage
   924 ;;BANK3               60      0      18      10       25.0%
   925 ;;BITBANK3            60      0       0       9        0.0%
   926 ;;SFR3                 0      0       0       4        0.0%
   927 ;;BITSFR3              0      0       0       4        0.0%
   928 ;;BANK2               60      0       0      12        0.0%
   929 ;;BITBANK2            60      0       0      11        0.0%
   930 ;;SFR2                 0      0       0       5        0.0%
   931 ;;BITSFR2              0      0       0       5        0.0%
   932 ;;SFR1                 0      0       0       2        0.0%
   933 ;;BITSFR1              0      0       0       2        0.0%
   934 ;;BANK1               50      0      3E       8       77.5%
   935 ;;BITBANK1            50      0       0       7        0.0%
   936 ;;CODE                 0      0       0       0        0.0%
   937 ;;DATA                 0      0      BA       6        0.0%
   938 ;;ABS                  0      0      B3       3        0.0%
   939 ;;NULL                 0      0       0       0        0.0%
   940 ;;STACK                0      0       7       2        0.0%
   941 ;;BANK0               50     28      4F       5       98.8%
   942 ;;BITBANK0            50      0       0       4        0.0%
   943 ;;SFR0                 0      0       0       1        0.0%
   944 ;;BITSFR0              0      0       0       1        0.0%
   945 ;;COMMON               E      D       E       1      100.0%
   946 ;;BITCOMMON            E      0       0       0        0.0%
   947                           
   948                           
   949 ;; *************** function _main *****************
   950 ;; Defined at:
   951 ;;		line 458 in file "D:\develop\190625\AK7030-OTP\main.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;		None               void
   958 ;; Registers used:
   959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 17F/0
   962 ;;		On exit  : 60/0
   963 ;;		Unchanged: FFE00/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0
   968 ;;      Totals:         0       0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels required when called:    5
   971 ;; This function calls:
   972 ;;		_initPin
   973 ;;		_clock_config
   974 ;;		_timer1_config
   975 ;;		_timer1_interrupt_config
   976 ;;		_adc_test_init
   977 ;;		_dac_init
   978 ;;		_op1_init
   979 ;;		_op2_init
   980 ;;		_adc_start
   981 ;;		_process_AD_Converter_Value
   982 ;;		_isPermitSampleTime
   983 ;;		_clrSampeTime
   984 ;;		_getAdOriginalCh14Value
   985 ;;		_clearPinPortAndTimer
   986 ;;		_setPA6
   987 ;;		_getAdOriginalCh1Value
   988 ;;		_startTwelveHourTimer
   989 ;;		_isFinishedTwelveHoursTimer
   990 ;;		_getAdOriginaCh4Value
   991 ;;		_setPA2
   992 ;;		_setPA3
   993 ;;		_setPA0
   994 ;;		_setPA1
   995 ;;		_setPB0
   996 ;;		_startTwentySecondsTimer
   997 ;;		_isFinishedTwentySecondsTimer
   998 ;;		_clearTwentySecondsTimer
   999 ;;		_startThreeHoursTimer
  1000 ;;		_isFinishedThreeHoursTimer
  1001 ;;		_clearThreeHoursTimer
  1002 ;;		_setPB1
  1003 ;;		_clearAllTimer
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008  0013                     _main:	
  1009                           
  1010                           ;main.c: 464: enum setp_Adc4
  1011                           ;main.c: 465: {
  1012                           ;main.c: 466: ADC4_STEP_INIT = 0,
  1013                           ;main.c: 467: ADC4_STEP_FIRST,
  1014                           ;main.c: 468: ADC4_STEP_SECOND,
  1015                           ;main.c: 469: ADC4_STEP_THIRD,
  1016                           ;main.c: 470: ADC4_STEP_FOURTH_PREFIX1,
  1017                           ;main.c: 471: ADC4_STEP_FOURTH_PREFIX2,
  1018                           ;main.c: 472: ADC4_STEP_FOURTH_PREFIX3,
  1019                           ;main.c: 473: ADC4_STEP_FOURTH_PREFIX4,
  1020                           ;main.c: 474: ADC4_STEP_FOURTH_PREFIX5,
  1021                           ;main.c: 475: ADC4_STEP_FOURTH_PREFIX6,
  1022                           ;main.c: 476: ADC4_STEP_FOURTH,
  1023                           ;main.c: 477: ADC4_STEP_FOURTH_SUFFIX1,
  1024                           ;main.c: 478: ADC4_STEP_FOURTH_SUFFIX2,
  1025                           
  1026                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1027  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0014  1005               	bcf	5,0
  1029                           
  1030                           ;main.c: 499: TRISA1 = 0;
  1031  0015  1085               	bcf	5,1
  1032                           
  1033                           ;main.c: 500: TRISA2 = 0;
  1034  0016  1105               	bcf	5,2
  1035                           
  1036                           ;main.c: 501: TRISA3 = 0;
  1037  0017  1185               	bcf	5,3
  1038                           
  1039                           ;main.c: 502: TRISB0 = 0;
  1040  0018  1006               	bcf	6,0
  1041                           
  1042                           ;main.c: 503: TRISB1 = 0;
  1043  0019  1086               	bcf	6,1
  1044                           
  1045                           ;main.c: 504: TRISA6 = 0;
  1046  001A  1305               	bcf	5,6
  1047                           
  1048                           ;main.c: 506: TRISB7 = 0;
  1049  001B  1386               	bcf	6,7
  1050                           
  1051                           ;main.c: 507: TRISB6 = 0;
  1052  001C  1306               	bcf	6,6
  1053                           
  1054                           ;main.c: 510: initPin();
  1055  001D  118A  26A7  118A   	fcall	_initPin
  1056                           
  1057                           ;main.c: 513: TRISB2 = 1;
  1058  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1059  0021  1506               	bsf	6,2
  1060                           
  1061                           ;main.c: 516: TRISA7 = 1;
  1062  0022  1785               	bsf	5,7
  1063                           
  1064                           ;main.c: 518: TRISB4 = 1;
  1065  0023  1606               	bsf	6,4
  1066                           
  1067                           ;main.c: 520: clock_config();
  1068  0024  118A  2736  118A   	fcall	_clock_config
  1069                           
  1070                           ;main.c: 521: timer1_config();
  1071  0027  118A  2709  118A   	fcall	_timer1_config
  1072                           
  1073                           ;main.c: 522: timer1_interrupt_config();
  1074  002A  118A  278A  118A   	fcall	_timer1_interrupt_config
  1075                           
  1076                           ;main.c: 524: adc_test_init(14,3);
  1077  002D  3003               	movlw	3
  1078  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1079  002F  00A0               	movwf	?_adc_test_init
  1080  0030  300E               	movlw	14
  1081  0031  118A  263E  118A   	fcall	_adc_test_init
  1082                           
  1083                           ;main.c: 526: dac_init();
  1084  0034  118A  2785  118A   	fcall	_dac_init
  1085                           
  1086                           ;main.c: 527: op1_init();
  1087  0037  118A  26FE  118A   	fcall	_op1_init
  1088                           
  1089                           ;main.c: 528: op2_init();
  1090  003A  118A  2766  118A   	fcall	_op2_init
  1091                           
  1092                           ;main.c: 531: adc_start();
  1093  003D  118A  2653  118A   	fcall	_adc_start
  1094  0040                     l4486:	
  1095  0040  0064               	clrwdt	;#
  1096                           
  1097                           ;main.c: 574: process_AD_Converter_Value();
  1098  0041  118A  25F9  118A   	fcall	_process_AD_Converter_Value
  1099                           
  1100                           ;main.c: 576: if( isPermitSampleTime() )
  1101  0044  118A  277F  118A   	fcall	_isPermitSampleTime
  1102  0047  3A00               	xorlw	0
  1103  0048  1903               	skipnz
  1104  0049  2840               	goto	l4486
  1105                           
  1106                           ;main.c: 577: {
  1107                           ;main.c: 580: clrSampeTime();
  1108  004A  118A  278D  118A   	fcall	_clrSampeTime
  1109                           
  1110                           ;main.c: 595: switch(enumMainLoopStep)
  1111  004D  2C31               	goto	l5112
  1112  004E                     l4494:	
  1113                           
  1114                           ;main.c: 598: {
  1115                           ;main.c: 603: static unsigned char ucTimerZeroPoint5s = 0;
  1116                           ;main.c: 604: if(getAdOriginalCh14Value() > 1950)
  1117  004E  118A  2541  118A   	fcall	_getAdOriginalCh14Value
  1118  0051  3007               	movlw	7
  1119  0052  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1120  0053  309F               	movlw	159
  1121  0054  1903               	skipnz
  1122  0055  0246               	subwf	?_getAdOriginalCh14Value,w
  1123  0056  1C03               	skipc
  1124  0057  285A               	goto	l4498
  1125                           
  1126                           ;main.c: 605: {
  1127                           ;main.c: 606: ucTimerZeroPoint5s++;
  1128  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1129                           
  1130                           ;main.c: 607: }
  1131  0059  285B               	goto	l4500
  1132  005A                     l4498:	
  1133                           
  1134                           ;main.c: 608: else
  1135                           ;main.c: 609: ucTimerZeroPoint5s = 0;
  1136  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1137  005B                     l4500:	
  1138                           
  1139                           ;main.c: 611: if(ucTimerZeroPoint5s >= 5)
  1140  005B  3005               	movlw	5
  1141  005C  026B               	subwf	main@ucTimerZeroPoint5s,w
  1142  005D  1C03               	skipc
  1143  005E  2840               	goto	l4486
  1144                           
  1145                           ;main.c: 612: {
  1146                           ;main.c: 613: ucTimerZeroPoint5s = 0;
  1147  005F  01EB               	clrf	main@ucTimerZeroPoint5s
  1148  0060                     l4504:	
  1149                           
  1150                           ;main.c: 614: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1151  0060  01CB               	clrf	main@enumMainLoopStep
  1152  0061  0ACB               	incf	main@enumMainLoopStep,f
  1153  0062                     l752:	
  1154                           
  1155                           ;main.c: 615: }
  1156                           ;main.c: 616: break;
  1157  0062  2840               	goto	l4486
  1158  0063                     l4506:	
  1159                           
  1160                           ;main.c: 620: {
  1161                           ;main.c: 625: static unsigned char ucTimerZeroPoint3s = 0;
  1162                           ;main.c: 628: if(getAdOriginalCh14Value() > 1950)
  1163  0063  118A  2541  118A   	fcall	_getAdOriginalCh14Value
  1164  0066  3007               	movlw	7
  1165  0067  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1166  0068  309F               	movlw	159
  1167  0069  1903               	skipnz
  1168  006A  0246               	subwf	?_getAdOriginalCh14Value,w
  1169  006B  1C03               	skipc
  1170  006C  2871               	goto	l4512
  1171                           
  1172                           ;main.c: 629: {
  1173                           ;main.c: 631: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1174  006D  3002               	movlw	2
  1175  006E  00CB               	movwf	main@enumMainLoopStep
  1176                           
  1177                           ;main.c: 633: ucTimerZeroPoint3s = 0;
  1178  006F  01EA               	clrf	main@ucTimerZeroPoint3s
  1179                           
  1180                           ;main.c: 635: }
  1181  0070  2840               	goto	l4486
  1182  0071                     l4512:	
  1183  0071  3003               	movlw	3
  1184                           
  1185                           ;main.c: 636: else
  1186                           ;main.c: 637: {
  1187                           ;main.c: 638: ucTimerZeroPoint3s++;
  1188  0072  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1189                           
  1190                           ;main.c: 640: if(ucTimerZeroPoint3s >= 3)
  1191  0073  026A               	subwf	main@ucTimerZeroPoint3s,w
  1192  0074  1C03               	skipc
  1193  0075  2840               	goto	l4486
  1194                           
  1195                           ;main.c: 641: {
  1196                           ;main.c: 642: ucTimerZeroPoint3s = 0;
  1197  0076  01EA               	clrf	main@ucTimerZeroPoint3s
  1198                           
  1199                           ;main.c: 644: clearPinPortAndTimer();
  1200  0077  118A  2656  118A   	fcall	_clearPinPortAndTimer
  1201  007A  2840               	goto	l4486
  1202  007B                     l4520:	
  1203                           
  1204                           ;main.c: 652: {
  1205                           ;main.c: 657: static unsigned char ucTimerP5s = 0;
  1206                           ;main.c: 660: setPA6(1);
  1207  007B  3001               	movlw	1
  1208  007C  118A  271C  118A   	fcall	_setPA6
  1209                           
  1210                           ;main.c: 662: if(ucTimerP5s < 5)
  1211  007F  3005               	movlw	5
  1212  0080  0267               	subwf	main@ucTimerP5s,w
  1213  0081  1803               	skipnc
  1214  0082  2885               	goto	l4526
  1215                           
  1216                           ;main.c: 663: ucTimerP5s++;
  1217  0083  0AE7               	incf	main@ucTimerP5s,f
  1218  0084  2840               	goto	l4486
  1219  0085                     l4526:	
  1220  0085  3003               	movlw	3
  1221                           
  1222                           ;main.c: 664: else
  1223                           ;main.c: 665: {
  1224                           ;main.c: 666: ucTimerP5s = 0;
  1225  0086  01E7               	clrf	main@ucTimerP5s
  1226                           
  1227                           ;main.c: 668: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1228  0087  2B93               	goto	L15
  1229  0088                     l4530:	
  1230                           
  1231                           ;main.c: 675: {
  1232                           ;main.c: 680: static unsigned char ucTimerADC1ZeroP5s = 0;
  1233                           ;main.c: 682: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1234                           ;main.c: 684: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1235                           ;main.c: 686: static unsigned char ucTimerRightP5s = 0;
  1236                           ;main.c: 688: if(getAdOriginalCh1Value() < 115)
  1237  0088  118A  2537  118A   	fcall	_getAdOriginalCh1Value
  1238  008B  3000               	movlw	0
  1239  008C  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1240  008D  3073               	movlw	115
  1241  008E  1903               	skipnz
  1242  008F  0246               	subwf	?_getAdOriginalCh1Value,w
  1243  0090  1803               	skipnc
  1244  0091  2895               	goto	l4536
  1245                           
  1246                           ;main.c: 689: {
  1247                           ;main.c: 690: ucTimerADC1ZeroP5s = 0;
  1248  0092  01D9               	clrf	main@ucTimerADC1ZeroP5s
  1249                           
  1250                           ;main.c: 692: ucTimerLessADC1ZeroP5s++;
  1251  0093  0AE5               	incf	main@ucTimerLessADC1ZeroP5s,f
  1252                           
  1253                           ;main.c: 693: }
  1254  0094  2897               	goto	l4540
  1255  0095                     l4536:	
  1256                           
  1257                           ;main.c: 694: else
  1258                           ;main.c: 695: {
  1259                           ;main.c: 696: ucTimerADC1ZeroP5s++;
  1260  0095  0AD9               	incf	main@ucTimerADC1ZeroP5s,f
  1261                           
  1262                           ;main.c: 698: ucTimerLessADC1ZeroP5s = 0;
  1263  0096  01E5               	clrf	main@ucTimerLessADC1ZeroP5s
  1264  0097                     l4540:	
  1265                           
  1266                           ;main.c: 699: }
  1267                           ;main.c: 701: if(ucTimerADC1ZeroP5s >= 3)
  1268  0097  3003               	movlw	3
  1269  0098  0259               	subwf	main@ucTimerADC1ZeroP5s,w
  1270  0099  1C03               	skipc
  1271  009A  289E               	goto	l4546
  1272  009B  3004               	movlw	4
  1273                           
  1274                           ;main.c: 702: {
  1275                           ;main.c: 703: ucTimerADC1ZeroP5s = 0;
  1276  009C  01D9               	clrf	main@ucTimerADC1ZeroP5s
  1277                           
  1278                           ;main.c: 704: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1279  009D  28B6               	goto	L2
  1280  009E                     l4546:	
  1281                           ;main.c: 705: }
  1282                           
  1283                           
  1284                           ;main.c: 706: else if( ucTimerLessADC1ZeroP5s >= 3)
  1285  009E  3003               	movlw	3
  1286  009F  0265               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1287  00A0  1C03               	skipc
  1288  00A1  28B7               	goto	l4560
  1289                           
  1290                           ;main.c: 707: {
  1291                           ;main.c: 709: if(getAdOriginalCh1Value() < 105)
  1292  00A2  118A  2537  118A   	fcall	_getAdOriginalCh1Value
  1293  00A5  3000               	movlw	0
  1294  00A6  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1295  00A7  3069               	movlw	105
  1296  00A8  1903               	skipnz
  1297  00A9  0246               	subwf	?_getAdOriginalCh1Value,w
  1298  00AA  1803               	skipnc
  1299  00AB  28AE               	goto	l4552
  1300                           
  1301                           ;main.c: 710: {
  1302                           ;main.c: 711: ucTimerRightP5s++;
  1303  00AC  0AE8               	incf	main@ucTimerRightP5s,f
  1304                           
  1305                           ;main.c: 712: }
  1306  00AD  28AF               	goto	l4554
  1307  00AE                     l4552:	
  1308                           
  1309                           ;main.c: 713: else
  1310                           ;main.c: 714: {
  1311                           ;main.c: 715: ucTimerRightP5s = 0;
  1312  00AE  01E8               	clrf	main@ucTimerRightP5s
  1313  00AF                     l4554:	
  1314                           
  1315                           ;main.c: 716: }
  1316                           ;main.c: 718: if(ucTimerRightP5s >= 3)
  1317  00AF  3003               	movlw	3
  1318  00B0  0268               	subwf	main@ucTimerRightP5s,w
  1319  00B1  1C03               	skipc
  1320  00B2  28B7               	goto	l4560
  1321  00B3  3008               	movlw	8
  1322                           
  1323                           ;main.c: 719: {
  1324                           ;main.c: 720: ucTimerLessADC1ZeroP5s = 0;
  1325  00B4  01E5               	clrf	main@ucTimerLessADC1ZeroP5s
  1326                           
  1327                           ;main.c: 721: ucTimerRightP5s = 0;
  1328  00B5  01E8               	clrf	main@ucTimerRightP5s
  1329  00B6                     L2:	
  1330                           ;main.c: 722: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1331                           
  1332  00B6  00CB               	movwf	main@enumMainLoopStep
  1333  00B7                     l4560:	
  1334                           ;main.c: 729: else
  1335                           ;main.c: 730: {
  1336                           ;main.c: 731: ;
  1337                           
  1338                           ;main.c: 723: }
  1339                           
  1340                           
  1341                           ;main.c: 732: }
  1342                           ;main.c: 734: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1343  00B7  084B               	movf	main@enumMainLoopStep,w
  1344  00B8  3A08               	xorlw	8
  1345  00B9  1903               	skipnz
  1346  00BA  28BF               	goto	l4564
  1347  00BB  084B               	movf	main@enumMainLoopStep,w
  1348  00BC  3A04               	xorlw	4
  1349  00BD  1D03               	skipz
  1350  00BE  2840               	goto	l4486
  1351  00BF                     l4564:	
  1352                           
  1353                           ;main.c: 735: {
  1354                           ;main.c: 736: ucTimerRightP5s = 0;
  1355  00BF  01E8               	clrf	main@ucTimerRightP5s
  1356                           
  1357                           ;main.c: 737: ucTimerADC1ZeroP5s = 0;
  1358  00C0  01D9               	clrf	main@ucTimerADC1ZeroP5s
  1359                           
  1360                           ;main.c: 738: ucTimerLessADC1ZeroP5s = 0;
  1361  00C1  01E5               	clrf	main@ucTimerLessADC1ZeroP5s
  1362  00C2  2840               	goto	l4486
  1363  00C3                     l4566:	
  1364                           
  1365                           ;main.c: 746: {
  1366                           ;main.c: 752: startTwelveHourTimer(36000);
  1367  00C3  30A0               	movlw	160
  1368  00C4  00A0               	movwf	?_startTwelveHourTimer
  1369  00C5  308C               	movlw	140
  1370  00C6  00A1               	movwf	?_startTwelveHourTimer+1
  1371  00C7  118A  26E4  118A   	fcall	_startTwelveHourTimer
  1372                           
  1373                           ;main.c: 753: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1374  00CA  3005               	movlw	5
  1375  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1376  00CC  00CB               	movwf	main@enumMainLoopStep
  1377                           
  1378                           ;main.c: 755: bCheckTweHour = 0;
  1379  00CD  01C9               	clrf	main@bCheckTweHour
  1380                           
  1381                           ;main.c: 757: break;
  1382  00CE  2840               	goto	l4486
  1383  00CF                     l4572:	
  1384                           
  1385                           ;main.c: 761: {
  1386                           ;main.c: 765: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1387  00CF  118A  2779  118A   	fcall	_isFinishedTwelveHoursTimer
  1388  00D2  3A00               	xorlw	0
  1389  00D3  1903               	skipnz
  1390  00D4  2B2B               	goto	l4994
  1391  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1392  00D6  08C9               	movf	main@bCheckTweHour,f
  1393  00D7  1D03               	skipz
  1394  00D8  2B2B               	goto	l4994
  1395                           
  1396                           ;main.c: 766: {
  1397                           ;main.c: 767: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1398  00D9  3009               	movlw	9
  1399  00DA  00CB               	movwf	main@enumMainLoopStep
  1400                           
  1401                           ;main.c: 768: bCheckTweHour = 1;
  1402  00DB  01C9               	clrf	main@bCheckTweHour
  1403  00DC  0AC9               	incf	main@bCheckTweHour,f
  1404                           
  1405                           ;main.c: 769: }
  1406  00DD  2840               	goto	l4486
  1407  00DE                     l794:	
  1408                           ;main.c: 775: {
  1409                           ;main.c: 776: case ADC4_STEP_INIT:
  1410                           
  1411                           
  1412                           ;main.c: 777: {
  1413                           ;main.c: 782: ucADC4_Step = ADC4_STEP_FIRST;
  1414  00DE  01CC               	clrf	main@ucADC4_Step
  1415  00DF  0ACC               	incf	main@ucADC4_Step,f
  1416                           
  1417                           ;main.c: 783: break;
  1418  00E0  2840               	goto	l4486
  1419  00E1                     l4580:	
  1420                           
  1421                           ;main.c: 787: {
  1422                           ;main.c: 791: if(getAdOriginaCh4Value() < 1931)
  1423  00E1  118A  252E  118A   	fcall	_getAdOriginaCh4Value
  1424  00E4  3007               	movlw	7
  1425  00E5  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1426  00E6  308B               	movlw	139
  1427  00E7  1903               	skipnz
  1428  00E8  0246               	subwf	?_getAdOriginaCh4Value,w
  1429  00E9  1803               	skipnc
  1430  00EA  28ED               	goto	l4584
  1431                           
  1432                           ;main.c: 792: ucChannel4Type = LESS_THAN_1911;
  1433  00EB  01CD               	clrf	main@ucChannel4Type
  1434  00EC  2914               	goto	l798
  1435  00ED                     l4584:	
  1436                           
  1437                           ;main.c: 793: else if(getAdOriginaCh4Value() < 2047)
  1438  00ED  118A  252E  118A   	fcall	_getAdOriginaCh4Value
  1439  00F0  3007               	movlw	7
  1440  00F1  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1441  00F2  30FF               	movlw	255
  1442  00F3  1903               	skipnz
  1443  00F4  0246               	subwf	?_getAdOriginaCh4Value,w
  1444  00F5  1803               	skipnc
  1445  00F6  28FA               	goto	l4588
  1446                           
  1447                           ;main.c: 794: ucChannel4Type = BETWEEN_1911_AND_2067;
  1448  00F7  01CD               	clrf	main@ucChannel4Type
  1449  00F8  0ACD               	incf	main@ucChannel4Type,f
  1450  00F9  2914               	goto	l798
  1451  00FA                     l4588:	
  1452                           
  1453                           ;main.c: 795: else if(getAdOriginaCh4Value() < 2164)
  1454  00FA  118A  252E  118A   	fcall	_getAdOriginaCh4Value
  1455  00FD  3008               	movlw	8
  1456  00FE  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1457  00FF  3074               	movlw	116
  1458  0100  1903               	skipnz
  1459  0101  0246               	subwf	?_getAdOriginaCh4Value,w
  1460  0102  1803               	skipnc
  1461  0103  2906               	goto	l4592
  1462                           
  1463                           ;main.c: 796: ucChannel4Type = BETWEEN_2067_AND_2204;
  1464  0104  3002               	movlw	2
  1465  0105  2913               	goto	L3
  1466  0106                     l4592:	
  1467                           
  1468                           ;main.c: 797: else if(getAdOriginaCh4Value() < 2281)
  1469  0106  118A  252E  118A   	fcall	_getAdOriginaCh4Value
  1470  0109  3008               	movlw	8
  1471  010A  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1472  010B  30E9               	movlw	233
  1473  010C  1903               	skipnz
  1474  010D  0246               	subwf	?_getAdOriginaCh4Value,w
  1475  010E  1803               	skipnc
  1476  010F  2912               	goto	l4596
  1477                           
  1478                           ;main.c: 798: ucChannel4Type = BETWEEN_2204_AND_2340;
  1479  0110  3003               	movlw	3
  1480  0111  2913               	goto	L3
  1481  0112                     l4596:	
  1482                           
  1483                           ;main.c: 799: else
  1484                           ;main.c: 800: ucChannel4Type = MORE_THAN_2340;
  1485  0112  3004               	movlw	4
  1486  0113                     L3:	
  1487  0113  00CD               	movwf	main@ucChannel4Type
  1488  0114                     l798:	
  1489                           
  1490                           ;main.c: 802: ucADC4_Step = ADC4_STEP_SECOND;
  1491  0114  3002               	movlw	2
  1492  0115  2B1F               	goto	L14
  1493  0116                     l813:	
  1494                           ;main.c: 820: {
  1495                           ;main.c: 821: case 0:
  1496                           
  1497                           ;main.c: 803: break;
  1498                           
  1499                           
  1500                           ;main.c: 822: {
  1501                           ;main.c: 825: PB0 = 1;
  1502  0116  1406               	bsf	6,0
  1503  0117                     l4598:	
  1504                           
  1505                           ;main.c: 829: ucLoaderStep++;
  1506  0117  0AD3               	incf	main@ucLoaderStep,f
  1507                           
  1508                           ;main.c: 830: break;
  1509  0118  2840               	goto	l4486
  1510  0119                     l4600:	
  1511                           
  1512                           ;main.c: 834: {
  1513                           ;main.c: 835: if(ucTimerDelay >= 5)
  1514  0119  3005               	movlw	5
  1515  011A  025A               	subwf	main@ucTimerDelay,w
  1516  011B  1C03               	skipc
  1517  011C  2920               	goto	l4608
  1518                           
  1519                           ;main.c: 836: {
  1520                           ;main.c: 838: PA0 = 1;
  1521  011D  1405               	bsf	5,0
  1522  011E                     l4604:	
  1523                           
  1524                           ;main.c: 842: ucTimerDelay = 0;
  1525  011E  01DA               	clrf	main@ucTimerDelay
  1526  011F  2917               	goto	l4598
  1527  0120                     l4608:	
  1528                           
  1529                           ;main.c: 845: else
  1530                           ;main.c: 846: ucTimerDelay++;
  1531  0120  0ADA               	incf	main@ucTimerDelay,f
  1532  0121  2840               	goto	l4486
  1533  0122                     l4610:	
  1534                           
  1535                           ;main.c: 851: {
  1536                           ;main.c: 852: if(ucTimerDelay >= 5)
  1537  0122  3005               	movlw	5
  1538  0123  025A               	subwf	main@ucTimerDelay,w
  1539  0124  1C03               	skipc
  1540  0125  2920               	goto	l4608
  1541                           
  1542                           ;main.c: 853: {
  1543                           ;main.c: 855: PA1= 1;
  1544  0126  1485               	bsf	5,1
  1545  0127  291E               	goto	l4604
  1546  0128                     l4620:	
  1547                           
  1548                           ;main.c: 869: {
  1549                           ;main.c: 870: if(ucTimerDelay >= 5)
  1550  0128  3005               	movlw	5
  1551  0129  025A               	subwf	main@ucTimerDelay,w
  1552  012A  1C03               	skipc
  1553  012B  2920               	goto	l4608
  1554                           
  1555                           ;main.c: 871: {
  1556                           ;main.c: 873: PA2= 1;
  1557  012C  1505               	bsf	5,2
  1558  012D  291E               	goto	l4604
  1559  012E                     l4630:	
  1560                           
  1561                           ;main.c: 887: {
  1562                           ;main.c: 888: if(ucTimerDelay >= 5)
  1563  012E  3005               	movlw	5
  1564  012F  025A               	subwf	main@ucTimerDelay,w
  1565  0130  1C03               	skipc
  1566  0131  2920               	goto	l4608
  1567                           
  1568                           ;main.c: 889: {
  1569                           ;main.c: 891: PA3 = 1;
  1570  0132  1585               	bsf	5,3
  1571  0133  291E               	goto	l4604
  1572  0134                     l4640:	
  1573                           
  1574                           ;main.c: 904: {
  1575                           ;main.c: 905: if(ucTimerDelay >= 5)
  1576  0134  3005               	movlw	5
  1577  0135  025A               	subwf	main@ucTimerDelay,w
  1578  0136  1C03               	skipc
  1579  0137  2920               	goto	l4608
  1580                           
  1581                           ;main.c: 906: {
  1582                           ;main.c: 908: PB0 = 0;
  1583  0138  1006               	bcf	6,0
  1584                           
  1585                           ;main.c: 909: PA0 = 0;
  1586  0139  1005               	bcf	5,0
  1587                           
  1588                           ;main.c: 910: PA1 = 0;
  1589  013A  1085               	bcf	5,1
  1590                           
  1591                           ;main.c: 911: PA2 = 0;
  1592  013B  1105               	bcf	5,2
  1593                           
  1594                           ;main.c: 912: PA3 = 0;
  1595  013C  1185               	bcf	5,3
  1596  013D  291E               	goto	l4604
  1597  013E                     l4650:	
  1598                           
  1599                           ;main.c: 929: {
  1600                           ;main.c: 930: if(ucTimerDelay >= 1)
  1601  013E  085A               	movf	main@ucTimerDelay,w
  1602  013F  1903               	btfsc	3,2
  1603  0140  2920               	goto	l4608
  1604                           
  1605                           ;main.c: 931: {
  1606                           ;main.c: 932: ucTimerDelay = 0;
  1607  0141  01DA               	clrf	main@ucTimerDelay
  1608                           
  1609                           ;main.c: 934: ucLoaderStep = 0;
  1610  0142  01D3               	clrf	main@ucLoaderStep
  1611  0143                     l4654:	
  1612                           
  1613                           ;main.c: 935: ucADC4_Step = ADC4_STEP_THIRD;
  1614  0143  3003               	movlw	3
  1615  0144  2B1F               	goto	L14
  1616  0145                     l4660:	
  1617                           ;main.c: 936: }
  1618                           
  1619  0145  0853               	movf	main@ucLoaderStep,w
  1620                           
  1621                           ; Switch size 1, requested type "space"
  1622                           ; Number of cases is 7, Range of values is 0 to 6
  1623                           ; switch strategies available:
  1624                           ; Name         Instructions Cycles
  1625                           ; direct_byte           21     7 (fixed)
  1626                           ; simple_byte           22    12 (average)
  1627                           ; jumptable            260     6 (fixed)
  1628                           ; rangetable            11     6 (fixed)
  1629                           ; spacedrange           20     9 (fixed)
  1630                           ; locatedrange           7     3 (fixed)
  1631                           ;	Chosen strategy is direct_byte
  1632  0146  0084               	movwf	4
  1633  0147  3007               	movlw	7
  1634  0148  0204               	subwf	4,w
  1635  0149  1803               	skipnc
  1636  014A  2840               	goto	l4486
  1637  014B  3006               	movlw	high S5402
  1638  014C  008A               	movwf	10
  1639  014D  1003               	clrc
  1640  014E  0D04               	rlf	4,w
  1641  014F  3EBA               	addlw	low S5402
  1642  0150  0082               	movwf	2
  1643  0151                     l841:	
  1644                           ;main.c: 955: {
  1645                           ;main.c: 956: case 0:
  1646                           
  1647                           
  1648                           ;main.c: 957: {
  1649                           ;main.c: 959: PB0 = 1;
  1650  0151  1406               	bsf	6,0
  1651  0152                     l4662:	
  1652                           
  1653                           ;main.c: 963: ucLoaderStep1++;
  1654  0152  0AD4               	incf	main@ucLoaderStep1,f
  1655                           
  1656                           ;main.c: 964: break;
  1657  0153  2840               	goto	l4486
  1658  0154                     l4664:	
  1659                           
  1660                           ;main.c: 968: {
  1661                           ;main.c: 969: if(ucTimerDelay1 >= 5)
  1662  0154  3005               	movlw	5
  1663  0155  025B               	subwf	main@ucTimerDelay1,w
  1664  0156  1C03               	skipc
  1665  0157  295B               	goto	l4672
  1666                           
  1667                           ;main.c: 970: {
  1668                           ;main.c: 972: PA0 = 1;
  1669  0158  1405               	bsf	5,0
  1670  0159                     l4668:	
  1671                           
  1672                           ;main.c: 976: ucTimerDelay1 = 0;
  1673  0159  01DB               	clrf	main@ucTimerDelay1
  1674  015A  2952               	goto	l4662
  1675  015B                     l4672:	
  1676                           
  1677                           ;main.c: 979: else
  1678                           ;main.c: 980: ucTimerDelay1++;
  1679  015B  0ADB               	incf	main@ucTimerDelay1,f
  1680  015C  2840               	goto	l4486
  1681  015D                     l4674:	
  1682                           
  1683                           ;main.c: 985: {
  1684                           ;main.c: 986: if(ucTimerDelay1 >= 5)
  1685  015D  3005               	movlw	5
  1686  015E  025B               	subwf	main@ucTimerDelay1,w
  1687  015F  1C03               	skipc
  1688  0160  295B               	goto	l4672
  1689                           
  1690                           ;main.c: 987: {
  1691                           ;main.c: 989: PA1= 1;
  1692  0161  1485               	bsf	5,1
  1693  0162  2959               	goto	l4668
  1694  0163                     l4684:	
  1695                           
  1696                           ;main.c: 1002: {
  1697                           ;main.c: 1003: if(ucTimerDelay1 >= 5)
  1698  0163  3005               	movlw	5
  1699  0164  025B               	subwf	main@ucTimerDelay1,w
  1700  0165  1C03               	skipc
  1701  0166  295B               	goto	l4672
  1702                           
  1703                           ;main.c: 1004: {
  1704                           ;main.c: 1006: setPA2(1);
  1705  0167  3001               	movlw	1
  1706  0168  118A  2746  118A   	fcall	_setPA2
  1707  016B  2959               	goto	l4668
  1708  016C                     l4694:	
  1709                           
  1710                           ;main.c: 1016: {
  1711                           ;main.c: 1017: if(ucTimerDelay1 >= 5)
  1712  016C  3005               	movlw	5
  1713  016D  025B               	subwf	main@ucTimerDelay1,w
  1714  016E  1C03               	skipc
  1715  016F  295B               	goto	l4672
  1716                           
  1717                           ;main.c: 1018: {
  1718                           ;main.c: 1020: setPA3(1);
  1719  0170  3001               	movlw	1
  1720  0171  118A  273E  118A   	fcall	_setPA3
  1721  0174  2959               	goto	l4668
  1722  0175                     l4704:	
  1723                           
  1724                           ;main.c: 1030: {
  1725                           ;main.c: 1031: if(ucTimerDelay1 >= 5)
  1726  0175  3005               	movlw	5
  1727  0176  025B               	subwf	main@ucTimerDelay1,w
  1728  0177  1C03               	skipc
  1729  0178  295B               	goto	l4672
  1730                           
  1731                           ;main.c: 1032: {
  1732                           ;main.c: 1034: setPA0(0);
  1733  0179  3000               	movlw	0
  1734  017A  118A  2756  118A   	fcall	_setPA0
  1735                           
  1736                           ;main.c: 1036: setPA1(0);
  1737  017D  3000               	movlw	0
  1738  017E  118A  274E  118A   	fcall	_setPA1
  1739                           
  1740                           ;main.c: 1038: setPA2(0);
  1741  0181  3000               	movlw	0
  1742  0182  118A  2746  118A   	fcall	_setPA2
  1743                           
  1744                           ;main.c: 1040: setPA3(0);
  1745  0185  3000               	movlw	0
  1746  0186  118A  273E  118A   	fcall	_setPA3
  1747  0189  2959               	goto	l4668
  1748  018A                     l4714:	
  1749                           
  1750                           ;main.c: 1050: {
  1751                           ;main.c: 1051: if(ucTimerDelay1 >= 1)
  1752  018A  085B               	movf	main@ucTimerDelay1,w
  1753  018B  1903               	btfsc	3,2
  1754  018C  295B               	goto	l4672
  1755                           
  1756                           ;main.c: 1052: {
  1757                           ;main.c: 1053: ucTimerDelay1 = 0;
  1758  018D  01DB               	clrf	main@ucTimerDelay1
  1759                           
  1760                           ;main.c: 1055: ucLoaderStep1 = 0;
  1761  018E  01D4               	clrf	main@ucLoaderStep1
  1762  018F  2943               	goto	l4654
  1763  0190                     l4724:	
  1764  0190  0854               	movf	main@ucLoaderStep1,w
  1765                           
  1766                           ; Switch size 1, requested type "space"
  1767                           ; Number of cases is 7, Range of values is 0 to 6
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; direct_byte           21     7 (fixed)
  1771                           ; simple_byte           22    12 (average)
  1772                           ; jumptable            260     6 (fixed)
  1773                           ; rangetable            11     6 (fixed)
  1774                           ; spacedrange           20     9 (fixed)
  1775                           ; locatedrange           7     3 (fixed)
  1776                           ;	Chosen strategy is direct_byte
  1777  0191  0084               	movwf	4
  1778  0192  3007               	movlw	7
  1779  0193  0204               	subwf	4,w
  1780  0194  1803               	skipnc
  1781  0195  2840               	goto	l4486
  1782  0196  3006               	movlw	high S5404
  1783  0197  008A               	movwf	10
  1784  0198  1003               	clrc
  1785  0199  0D04               	rlf	4,w
  1786  019A  3EC8               	addlw	low S5404
  1787  019B  0082               	movwf	2
  1788  019C                     l4726:	
  1789                           
  1790                           ;main.c: 1079: {
  1791                           ;main.c: 1081: setPB0(1);
  1792  019C  3001               	movlw	1
  1793  019D  118A  2725  118A   	fcall	_setPB0
  1794                           
  1795                           ;main.c: 1083: setPA0(1);
  1796  01A0  3001               	movlw	1
  1797  01A1  118A  2756  118A   	fcall	_setPA0
  1798  01A4                     l4728:	
  1799                           
  1800                           ;main.c: 1084: ucLoaderStep2++;
  1801  01A4  0AD5               	incf	main@ucLoaderStep2,f
  1802                           
  1803                           ;main.c: 1085: break;
  1804  01A5  2840               	goto	l4486
  1805  01A6                     l4730:	
  1806                           
  1807                           ;main.c: 1089: {
  1808                           ;main.c: 1090: if(ucTimerDelay2 >= 5)
  1809  01A6  3005               	movlw	5
  1810  01A7  025C               	subwf	main@ucTimerDelay2,w
  1811  01A8  1C03               	skipc
  1812  01A9  29B0               	goto	l4738
  1813                           
  1814                           ;main.c: 1091: {
  1815                           ;main.c: 1093: setPA1(1);
  1816  01AA  3001               	movlw	1
  1817  01AB  118A  274E  118A   	fcall	_setPA1
  1818  01AE                     l4734:	
  1819                           
  1820                           ;main.c: 1094: ucTimerDelay2 = 0;
  1821  01AE  01DC               	clrf	main@ucTimerDelay2
  1822  01AF  29A4               	goto	l4728
  1823  01B0                     l4738:	
  1824                           
  1825                           ;main.c: 1097: else
  1826                           ;main.c: 1098: ucTimerDelay2++;
  1827  01B0  0ADC               	incf	main@ucTimerDelay2,f
  1828  01B1  2840               	goto	l4486
  1829  01B2                     l4740:	
  1830                           
  1831                           ;main.c: 1103: {
  1832                           ;main.c: 1104: if(ucTimerDelay2 >= 5)
  1833  01B2  3005               	movlw	5
  1834  01B3  025C               	subwf	main@ucTimerDelay2,w
  1835  01B4  1C03               	skipc
  1836  01B5  29B0               	goto	l4738
  1837                           
  1838                           ;main.c: 1105: {
  1839                           ;main.c: 1107: setPA2(1);
  1840  01B6  3001               	movlw	1
  1841  01B7  118A  2746  118A   	fcall	_setPA2
  1842  01BA  29AE               	goto	l4734
  1843  01BB                     l4750:	
  1844                           
  1845                           ;main.c: 1117: {
  1846                           ;main.c: 1118: if(ucTimerDelay2 >= 5)
  1847  01BB  3005               	movlw	5
  1848  01BC  025C               	subwf	main@ucTimerDelay2,w
  1849  01BD  1C03               	skipc
  1850  01BE  29B0               	goto	l4738
  1851                           
  1852                           ;main.c: 1119: {
  1853                           ;main.c: 1121: setPA3(1);
  1854  01BF  3001               	movlw	1
  1855  01C0  118A  273E  118A   	fcall	_setPA3
  1856  01C3  29AE               	goto	l4734
  1857  01C4                     l4760:	
  1858                           
  1859                           ;main.c: 1131: {
  1860                           ;main.c: 1132: if(ucTimerDelay2 >= 5)
  1861  01C4  3005               	movlw	5
  1862  01C5  025C               	subwf	main@ucTimerDelay2,w
  1863  01C6  1C03               	skipc
  1864  01C7  29B0               	goto	l4738
  1865                           
  1866                           ;main.c: 1133: {
  1867                           ;main.c: 1136: setPA1(0);
  1868  01C8  3000               	movlw	0
  1869  01C9  118A  274E  118A   	fcall	_setPA1
  1870                           
  1871                           ;main.c: 1138: setPA2(0);
  1872  01CC  3000               	movlw	0
  1873  01CD  118A  2746  118A   	fcall	_setPA2
  1874                           
  1875                           ;main.c: 1140: setPA3(0);
  1876  01D0  3000               	movlw	0
  1877  01D1  118A  273E  118A   	fcall	_setPA3
  1878  01D4  29AE               	goto	l4734
  1879  01D5                     l4770:	
  1880                           
  1881                           ;main.c: 1150: {
  1882                           ;main.c: 1151: if(ucTimerDelay2 >= 1)
  1883  01D5  085C               	movf	main@ucTimerDelay2,w
  1884  01D6  1903               	btfsc	3,2
  1885  01D7  29B0               	goto	l4738
  1886                           
  1887                           ;main.c: 1152: {
  1888                           ;main.c: 1153: ucTimerDelay2 = 0;
  1889  01D8  01DC               	clrf	main@ucTimerDelay2
  1890                           
  1891                           ;main.c: 1155: ucLoaderStep2 = 0;
  1892  01D9  01D5               	clrf	main@ucLoaderStep2
  1893  01DA  2943               	goto	l4654
  1894  01DB                     l4780:	
  1895  01DB  0855               	movf	main@ucLoaderStep2,w
  1896                           
  1897                           ; Switch size 1, requested type "space"
  1898                           ; Number of cases is 6, Range of values is 0 to 5
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; direct_byte           19     7 (fixed)
  1902                           ; simple_byte           19    10 (average)
  1903                           ; jumptable            260     6 (fixed)
  1904                           ; rangetable            10     6 (fixed)
  1905                           ; spacedrange           18     9 (fixed)
  1906                           ; locatedrange           6     3 (fixed)
  1907                           ;	Chosen strategy is direct_byte
  1908  01DC  0084               	movwf	4
  1909  01DD  3006               	movlw	6
  1910  01DE  0204               	subwf	4,w
  1911  01DF  1803               	skipnc
  1912  01E0  2840               	goto	l4486
  1913  01E1  3006               	movlw	high S5406
  1914  01E2  008A               	movwf	10
  1915  01E3  1003               	clrc
  1916  01E4  0D04               	rlf	4,w
  1917  01E5  3EF2               	addlw	low S5406
  1918  01E6  0082               	movwf	2
  1919  01E7                     l4782:	
  1920                           
  1921                           ;main.c: 1179: {
  1922                           ;main.c: 1181: setPB0(1);
  1923  01E7  3001               	movlw	1
  1924  01E8  118A  2725  118A   	fcall	_setPB0
  1925                           
  1926                           ;main.c: 1183: setPA0(1);
  1927  01EB  3001               	movlw	1
  1928  01EC  118A  2756  118A   	fcall	_setPA0
  1929                           
  1930                           ;main.c: 1185: setPA1(1);
  1931  01EF  3001               	movlw	1
  1932  01F0  118A  274E  118A   	fcall	_setPA1
  1933  01F3                     l4784:	
  1934                           
  1935                           ;main.c: 1186: ucLoaderStep3++;
  1936  01F3  0AD6               	incf	main@ucLoaderStep3,f
  1937                           
  1938                           ;main.c: 1187: break;
  1939  01F4  2840               	goto	l4486
  1940  01F5                     l4786:	
  1941                           
  1942                           ;main.c: 1191: {
  1943                           ;main.c: 1192: if(ucTimerDelay3 >= 5)
  1944  01F5  3005               	movlw	5
  1945  01F6  025D               	subwf	main@ucTimerDelay3,w
  1946  01F7  1C03               	skipc
  1947  01F8  29FF               	goto	l4794
  1948                           
  1949                           ;main.c: 1193: {
  1950                           ;main.c: 1195: setPA2(1);
  1951  01F9  3001               	movlw	1
  1952  01FA  118A  2746  118A   	fcall	_setPA2
  1953  01FD                     l4790:	
  1954                           
  1955                           ;main.c: 1196: ucTimerDelay3 = 0;
  1956  01FD  01DD               	clrf	main@ucTimerDelay3
  1957  01FE  29F3               	goto	l4784
  1958  01FF                     l4794:	
  1959                           
  1960                           ;main.c: 1199: else
  1961                           ;main.c: 1200: ucTimerDelay3++;
  1962  01FF  0ADD               	incf	main@ucTimerDelay3,f
  1963  0200  2840               	goto	l4486
  1964  0201                     l4796:	
  1965                           
  1966                           ;main.c: 1205: {
  1967                           ;main.c: 1206: if(ucTimerDelay3 >= 5)
  1968  0201  3005               	movlw	5
  1969  0202  025D               	subwf	main@ucTimerDelay3,w
  1970  0203  1C03               	skipc
  1971  0204  29FF               	goto	l4794
  1972                           
  1973                           ;main.c: 1207: {
  1974                           ;main.c: 1209: setPA3(1);
  1975  0205  3001               	movlw	1
  1976  0206  118A  273E  118A   	fcall	_setPA3
  1977  0209  29FD               	goto	l4790
  1978  020A                     l4806:	
  1979                           
  1980                           ;main.c: 1220: {
  1981                           ;main.c: 1221: if(ucTimerDelay3 >= 5)
  1982  020A  3005               	movlw	5
  1983  020B  025D               	subwf	main@ucTimerDelay3,w
  1984  020C  1C03               	skipc
  1985  020D  29FF               	goto	l4794
  1986                           
  1987                           ;main.c: 1222: {
  1988                           ;main.c: 1225: setPA2(0);
  1989  020E  3000               	movlw	0
  1990  020F  118A  2746  118A   	fcall	_setPA2
  1991                           
  1992                           ;main.c: 1227: setPA3(0);
  1993  0212  3000               	movlw	0
  1994  0213  118A  273E  118A   	fcall	_setPA3
  1995  0216  29FD               	goto	l4790
  1996  0217                     l4816:	
  1997                           
  1998                           ;main.c: 1237: {
  1999                           ;main.c: 1238: if(ucTimerDelay3 >= 1)
  2000  0217  085D               	movf	main@ucTimerDelay3,w
  2001  0218  1903               	btfsc	3,2
  2002  0219  29FF               	goto	l4794
  2003                           
  2004                           ;main.c: 1239: {
  2005                           ;main.c: 1240: ucTimerDelay3 = 0;
  2006  021A  01DD               	clrf	main@ucTimerDelay3
  2007                           
  2008                           ;main.c: 1242: ucLoaderStep3 = 0;
  2009  021B  01D6               	clrf	main@ucLoaderStep3
  2010  021C  2943               	goto	l4654
  2011  021D                     l4826:	
  2012  021D  0856               	movf	main@ucLoaderStep3,w
  2013                           
  2014                           ; Switch size 1, requested type "space"
  2015                           ; Number of cases is 5, Range of values is 0 to 4
  2016                           ; switch strategies available:
  2017                           ; Name         Instructions Cycles
  2018                           ; simple_byte           16     9 (average)
  2019                           ; direct_byte           17     7 (fixed)
  2020                           ; jumptable            260     6 (fixed)
  2021                           ; rangetable             9     6 (fixed)
  2022                           ; spacedrange           16     9 (fixed)
  2023                           ; locatedrange           5     3 (fixed)
  2024                           ;	Chosen strategy is simple_byte
  2025  021E  3A00               	xorlw	0	; case 0
  2026  021F  1903               	skipnz
  2027  0220  29E7               	goto	l4782
  2028  0221  3A01               	xorlw	1	; case 1
  2029  0222  1903               	skipnz
  2030  0223  29F5               	goto	l4786
  2031  0224  3A03               	xorlw	3	; case 2
  2032  0225  1903               	skipnz
  2033  0226  2A01               	goto	l4796
  2034  0227  3A01               	xorlw	1	; case 3
  2035  0228  1903               	skipnz
  2036  0229  2A0A               	goto	l4806
  2037  022A  3A07               	xorlw	7	; case 4
  2038  022B  1903               	skipnz
  2039  022C  2A17               	goto	l4816
  2040  022D  2862               	goto	l752
  2041  022E                     l4828:	
  2042                           
  2043                           ;main.c: 1266: {
  2044                           ;main.c: 1268: setPB0(1);
  2045  022E  3001               	movlw	1
  2046  022F  118A  2725  118A   	fcall	_setPB0
  2047                           
  2048                           ;main.c: 1270: setPA0(1);
  2049  0232  3001               	movlw	1
  2050  0233  118A  2756  118A   	fcall	_setPA0
  2051                           
  2052                           ;main.c: 1272: setPA1(1);
  2053  0236  3001               	movlw	1
  2054  0237  118A  274E  118A   	fcall	_setPA1
  2055                           
  2056                           ;main.c: 1274: setPA2(1);
  2057  023A  3001               	movlw	1
  2058  023B  118A  2746  118A   	fcall	_setPA2
  2059  023E                     l4830:	
  2060                           
  2061                           ;main.c: 1275: ucLoaderStep4++;
  2062  023E  0AD7               	incf	main@ucLoaderStep4,f
  2063                           
  2064                           ;main.c: 1276: break;
  2065  023F  2840               	goto	l4486
  2066  0240                     l4832:	
  2067                           
  2068                           ;main.c: 1280: {
  2069                           ;main.c: 1281: if(ucTimerDelay4 >= 5)
  2070  0240  3005               	movlw	5
  2071  0241  025E               	subwf	main@ucTimerDelay4,w
  2072  0242  1C03               	skipc
  2073  0243  2A4A               	goto	l4840
  2074                           
  2075                           ;main.c: 1282: {
  2076                           ;main.c: 1284: setPA3(1);
  2077  0244  3001               	movlw	1
  2078  0245                     L6:	
  2079  0245  118A  273E  118A   	fcall	_setPA3
  2080                           
  2081                           ;main.c: 1285: ucTimerDelay4 = 0;
  2082  0248  01DE               	clrf	main@ucTimerDelay4
  2083  0249  2A3E               	goto	l4830
  2084  024A                     l4840:	
  2085                           
  2086                           ;main.c: 1288: else
  2087                           ;main.c: 1289: ucTimerDelay4++;
  2088  024A  0ADE               	incf	main@ucTimerDelay4,f
  2089  024B  2840               	goto	l4486
  2090  024C                     l4842:	
  2091                           
  2092                           ;main.c: 1294: {
  2093                           ;main.c: 1295: if(ucTimerDelay4 >= 5)
  2094  024C  3005               	movlw	5
  2095  024D  025E               	subwf	main@ucTimerDelay4,w
  2096  024E  1C03               	skipc
  2097  024F  2A4A               	goto	l4840
  2098                           
  2099                           ;main.c: 1296: {
  2100                           ;main.c: 1298: setPA3(0);
  2101  0250  3000               	movlw	0
  2102  0251  2A45               	goto	L6
  2103  0252                     l4852:	
  2104                           
  2105                           ;main.c: 1308: {
  2106                           ;main.c: 1309: if(ucTimerDelay4 >= 1)
  2107  0252  085E               	movf	main@ucTimerDelay4,w
  2108  0253  1903               	btfsc	3,2
  2109  0254  2A4A               	goto	l4840
  2110                           
  2111                           ;main.c: 1310: {
  2112                           ;main.c: 1311: ucTimerDelay4 = 0;
  2113  0255  01DE               	clrf	main@ucTimerDelay4
  2114                           
  2115                           ;main.c: 1313: ucLoaderStep4 = 0;
  2116  0256  01D7               	clrf	main@ucLoaderStep4
  2117  0257  2943               	goto	l4654
  2118  0258                     l4862:	
  2119  0258  0857               	movf	main@ucLoaderStep4,w
  2120                           
  2121                           ; Switch size 1, requested type "space"
  2122                           ; Number of cases is 4, Range of values is 0 to 3
  2123                           ; switch strategies available:
  2124                           ; Name         Instructions Cycles
  2125                           ; simple_byte           13     7 (average)
  2126                           ; direct_byte           15     7 (fixed)
  2127                           ; jumptable            260     6 (fixed)
  2128                           ; rangetable             8     6 (fixed)
  2129                           ; spacedrange           14     9 (fixed)
  2130                           ; locatedrange           4     3 (fixed)
  2131                           ;	Chosen strategy is simple_byte
  2132  0259  3A00               	xorlw	0	; case 0
  2133  025A  1903               	skipnz
  2134  025B  2A2E               	goto	l4828
  2135  025C  3A01               	xorlw	1	; case 1
  2136  025D  1903               	skipnz
  2137  025E  2A40               	goto	l4832
  2138  025F  3A03               	xorlw	3	; case 2
  2139  0260  1903               	skipnz
  2140  0261  2A4C               	goto	l4842
  2141  0262  3A01               	xorlw	1	; case 3
  2142  0263  1903               	skipnz
  2143  0264  2A52               	goto	l4852
  2144  0265  2862               	goto	l752
  2145  0266                     l4866:	
  2146  0266  084D               	movf	main@ucChannel4Type,w
  2147                           
  2148                           ; Switch size 1, requested type "space"
  2149                           ; Number of cases is 5, Range of values is 0 to 4
  2150                           ; switch strategies available:
  2151                           ; Name         Instructions Cycles
  2152                           ; simple_byte           16     9 (average)
  2153                           ; direct_byte           17     7 (fixed)
  2154                           ; jumptable            260     6 (fixed)
  2155                           ; rangetable             9     6 (fixed)
  2156                           ; spacedrange           16     9 (fixed)
  2157                           ; locatedrange           5     3 (fixed)
  2158                           ;	Chosen strategy is simple_byte
  2159  0267  3A00               	xorlw	0	; case 0
  2160  0268  1903               	skipnz
  2161  0269  2945               	goto	l4660
  2162  026A  3A01               	xorlw	1	; case 1
  2163  026B  1903               	skipnz
  2164  026C  2990               	goto	l4724
  2165  026D  3A03               	xorlw	3	; case 2
  2166  026E  1903               	skipnz
  2167  026F  29DB               	goto	l4780
  2168  0270  3A01               	xorlw	1	; case 3
  2169  0271  1903               	skipnz
  2170  0272  2A1D               	goto	l4826
  2171  0273  3A07               	xorlw	7	; case 4
  2172  0274  1903               	skipnz
  2173  0275  2A58               	goto	l4862
  2174  0276  2862               	goto	l752
  2175  0277                     l4868:	
  2176                           
  2177                           ;main.c: 1337: {
  2178                           ;main.c: 1341: static unsigned char ucTimerDelayP2sLess = 0;
  2179                           ;main.c: 1343: static unsigned char ucTimerDelayP2sMore = 0;
  2180                           ;main.c: 1345: if( getAdOriginalCh1Value() <= 200 )
  2181  0277  118A  2537  118A   	fcall	_getAdOriginalCh1Value
  2182  027A  3000               	movlw	0
  2183  027B  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2184  027C  30C9               	movlw	201
  2185  027D  1903               	skipnz
  2186  027E  0246               	subwf	?_getAdOriginalCh1Value,w
  2187  027F  1803               	skipnc
  2188  0280  2A84               	goto	l4874
  2189                           
  2190                           ;main.c: 1346: {
  2191                           ;main.c: 1347: ucTimerDelayP2sLess++;
  2192  0281  0ADF               	incf	main@ucTimerDelayP2sLess,f
  2193                           
  2194                           ;main.c: 1348: ucTimerDelayP2sMore = 0;
  2195  0282  01E0               	clrf	main@ucTimerDelayP2sMore
  2196                           
  2197                           ;main.c: 1349: }
  2198  0283  2A86               	goto	l4878
  2199  0284                     l4874:	
  2200                           
  2201                           ;main.c: 1350: else
  2202                           ;main.c: 1351: {
  2203                           ;main.c: 1352: ucTimerDelayP2sMore++;
  2204  0284  0AE0               	incf	main@ucTimerDelayP2sMore,f
  2205                           
  2206                           ;main.c: 1353: ucTimerDelayP2sLess = 0;
  2207  0285  01DF               	clrf	main@ucTimerDelayP2sLess
  2208  0286                     l4878:	
  2209                           
  2210                           ;main.c: 1354: }
  2211                           ;main.c: 1356: if( ucTimerDelayP2sLess >= 2)
  2212  0286  3002               	movlw	2
  2213  0287  025F               	subwf	main@ucTimerDelayP2sLess,w
  2214  0288  1C03               	skipc
  2215  0289  2A92               	goto	l4886
  2216                           
  2217                           ;main.c: 1357: {
  2218                           ;main.c: 1358: ucTimerDelayP2sLess = 0;
  2219  028A  01DF               	clrf	main@ucTimerDelayP2sLess
  2220                           
  2221                           ;main.c: 1359: ucTimerDelayP2sMore = 0;
  2222  028B  01E0               	clrf	main@ucTimerDelayP2sMore
  2223                           
  2224                           ;main.c: 1361: startTwentySecondsTimer();
  2225  028C  118A  2713  118A   	fcall	_startTwentySecondsTimer
  2226                           
  2227                           ;main.c: 1363: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX1;
  2228  028F  3004               	movlw	4
  2229  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0291  00CC               	movwf	main@ucADC4_Step
  2231  0292                     l4886:	
  2232                           
  2233                           ;main.c: 1364: }
  2234                           ;main.c: 1366: if(ucTimerDelayP2sMore >= 2)
  2235  0292  3002               	movlw	2
  2236  0293  0260               	subwf	main@ucTimerDelayP2sMore,w
  2237  0294  1C03               	skipc
  2238  0295  2840               	goto	l4486
  2239                           
  2240                           ;main.c: 1367: {
  2241                           ;main.c: 1368: ucTimerDelayP2sMore = 0;
  2242  0296  01E0               	clrf	main@ucTimerDelayP2sMore
  2243                           
  2244                           ;main.c: 1369: ucTimerDelayP2sLess = 0;
  2245  0297  01DF               	clrf	main@ucTimerDelayP2sLess
  2246  0298                     l4890:	
  2247                           
  2248                           ;main.c: 1370: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX2;
  2249  0298  3005               	movlw	5
  2250  0299  2AA1               	goto	L16
  2251  029A                     l4892:	
  2252                           
  2253                           ;main.c: 1378: {
  2254                           ;main.c: 1382: if( !isFinishedTwentySecondsTimer() )
  2255  029A  118A  2773  118A   	fcall	_isFinishedTwentySecondsTimer
  2256  029D  3800               	iorlw	0
  2257  029E  1903               	btfsc	3,2
  2258  029F  2A98               	goto	l4890
  2259                           
  2260                           ;main.c: 1384: else
  2261                           ;main.c: 1385: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX3;
  2262  02A0  3006               	movlw	6
  2263  02A1                     L16:	
  2264  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2265  02A2  2B1F               	goto	L14
  2266  02A3                     l4898:	
  2267                           
  2268                           ;main.c: 1392: {
  2269                           ;main.c: 1396: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2270                           ;main.c: 1398: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f =
      +                           0;
  2271                           ;main.c: 1400: if((getAdOriginalCh14Value() > 2800))
  2272  02A3  118A  2541  118A   	fcall	_getAdOriginalCh14Value
  2273  02A6  300A               	movlw	10
  2274  02A7  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2275  02A8  30F1               	movlw	241
  2276  02A9  1903               	skipnz
  2277  02AA  0246               	subwf	?_getAdOriginalCh14Value,w
  2278  02AB  1C03               	skipc
  2279  02AC  2AB0               	goto	l4904
  2280                           
  2281                           ;main.c: 1401: {
  2282                           ;main.c: 1402: ucTimerForDACR0_CNT1++;
  2283  02AD  0AE1               	incf	main@ucTimerForDACR0_CNT1,f
  2284                           
  2285                           ;main.c: 1403: ucTimerForDACR0_CNT2 = 0;
  2286  02AE  01E3               	clrf	main@ucTimerForDACR0_CNT2
  2287                           
  2288                           ;main.c: 1404: }
  2289  02AF  2AB2               	goto	l4908
  2290  02B0                     l4904:	
  2291                           
  2292                           ;main.c: 1405: else
  2293                           ;main.c: 1406: {
  2294                           ;main.c: 1407: ucTimerForDACR0_CNT2++;
  2295  02B0  0AE3               	incf	main@ucTimerForDACR0_CNT2,f
  2296                           
  2297                           ;main.c: 1408: ucTimerForDACR0_CNT1 = 0;
  2298  02B1  01E1               	clrf	main@ucTimerForDACR0_CNT1
  2299  02B2                     l4908:	
  2300                           
  2301                           ;main.c: 1409: }
  2302                           ;main.c: 1411: if(ucTimerForDACR0_CNT1 >= 2)
  2303  02B2  3002               	movlw	2
  2304  02B3  0261               	subwf	main@ucTimerForDACR0_CNT1,w
  2305  02B4  1C03               	skipc
  2306  02B5  2AB8               	goto	l4912
  2307                           
  2308                           ;main.c: 1412: ucTimerForDACR0_CNT1_f = 1;
  2309  02B6  01E2               	clrf	main@ucTimerForDACR0_CNT1_f
  2310  02B7  0AE2               	incf	main@ucTimerForDACR0_CNT1_f,f
  2311  02B8                     l4912:	
  2312                           
  2313                           ;main.c: 1414: if(ucTimerForDACR0_CNT2 >= 2)
  2314  02B8  3002               	movlw	2
  2315  02B9  0263               	subwf	main@ucTimerForDACR0_CNT2,w
  2316  02BA  1C03               	skipc
  2317  02BB  2ABE               	goto	l4916
  2318                           
  2319                           ;main.c: 1415: ucTimerForDACR0_CNT2_f = 1;
  2320  02BC  01E4               	clrf	main@ucTimerForDACR0_CNT2_f
  2321  02BD  0AE4               	incf	main@ucTimerForDACR0_CNT2_f,f
  2322  02BE                     l4916:	
  2323                           
  2324                           ;main.c: 1417: if(ucTimerForDACR0_CNT1_f)
  2325  02BE  0862               	movf	main@ucTimerForDACR0_CNT1_f,w
  2326  02BF  1903               	btfsc	3,2
  2327  02C0  2AC3               	goto	l4920
  2328                           
  2329                           ;main.c: 1418: {
  2330                           ;main.c: 1420: DACR0=0x0F;
  2331  02C1  300F               	movlw	15
  2332  02C2  2AC7               	goto	L9
  2333  02C3                     l4920:	
  2334                           ;main.c: 1425: }
  2335                           
  2336                           ;main.c: 1424: ucADC4_Step = ADC4_STEP_FOURTH;
  2337                           
  2338                           
  2339                           ;main.c: 1426: else if(ucTimerForDACR0_CNT2_f)
  2340  02C3  0864               	movf	main@ucTimerForDACR0_CNT2_f,w
  2341  02C4  1903               	btfsc	3,2
  2342  02C5  2ACC               	goto	l4924
  2343                           
  2344                           ;main.c: 1427: {
  2345                           ;main.c: 1429: DACR0=0x09;
  2346  02C6  3009               	movlw	9
  2347  02C7                     L9:	
  2348  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2349  02C8  0088               	movwf	8	;volatile
  2350                           
  2351                           ;main.c: 1433: ucADC4_Step = ADC4_STEP_FOURTH;
  2352  02C9  300A               	movlw	10
  2353  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2354  02CB  00CC               	movwf	main@ucADC4_Step
  2355  02CC                     l4924:	
  2356                           ;main.c: 1434: }
  2357                           
  2358                           
  2359                           ;main.c: 1438: }
  2360                           ;main.c: 1440: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2361  02CC  084C               	movf	main@ucADC4_Step,w
  2362  02CD  3A0A               	xorlw	10
  2363  02CE  1D03               	skipz
  2364  02CF  2840               	goto	l4486
  2365                           
  2366                           ;main.c: 1441: {
  2367                           ;main.c: 1442: ucTimerForDACR0_CNT1 = 0;
  2368  02D0  01E1               	clrf	main@ucTimerForDACR0_CNT1
  2369                           
  2370                           ;main.c: 1443: ucTimerForDACR0_CNT2 = 0;
  2371  02D1  01E3               	clrf	main@ucTimerForDACR0_CNT2
  2372                           
  2373                           ;main.c: 1444: ucTimerForDACR0_CNT1_f = 0;
  2374  02D2  01E2               	clrf	main@ucTimerForDACR0_CNT1_f
  2375                           
  2376                           ;main.c: 1445: ucTimerForDACR0_CNT2_f = 0;
  2377  02D3  01E4               	clrf	main@ucTimerForDACR0_CNT2_f
  2378  02D4  2840               	goto	l4486
  2379  02D5                     l4928:	
  2380                           
  2381                           ;main.c: 1453: {
  2382                           ;main.c: 1457: clearTwentySecondsTimer();
  2383  02D5  118A  2670  118A   	fcall	_clearTwentySecondsTimer
  2384                           
  2385                           ;main.c: 1459: setPA6(0);
  2386  02D8  3000               	movlw	0
  2387  02D9  118A  271C  118A   	fcall	_setPA6
  2388                           
  2389                           ;main.c: 1461: PBOD6 = 0;
  2390  02DC  1683               	bsf	3,5	;RP0=1, select bank3
  2391  02DD  1703               	bsf	3,6	;RP1=1, select bank3
  2392  02DE  1308               	bcf	8,6
  2393                           
  2394                           ;main.c: 1462: PB6 = 1;
  2395  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2396  02E0  3007               	movlw	7
  2397  02E1  2AEF               	goto	L18
  2398  02E2                     l4936:	
  2399                           ;main.c: 1468: break;
  2400                           
  2401                           ;main.c: 1467: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX4;
  2402                           
  2403  02E2  3005               	movlw	5
  2404                           
  2405                           ;main.c: 1474: {
  2406                           ;main.c: 1479: static unsigned char ucDelayPrefix4TimerP5s;
  2407                           ;main.c: 1481: ucDelayPrefix4TimerP5s++;
  2408  02E3  0AD0               	incf	main@ucDelayPrefix4TimerP5s,f
  2409                           
  2410                           ;main.c: 1483: if( ucDelayPrefix4TimerP5s >= 5)
  2411  02E4  0250               	subwf	main@ucDelayPrefix4TimerP5s,w
  2412  02E5  1C03               	skipc
  2413  02E6  2840               	goto	l4486
  2414  02E7  3008               	movlw	8
  2415                           
  2416                           ;main.c: 1484: {
  2417                           ;main.c: 1485: ucDelayPrefix4TimerP5s = 0;
  2418  02E8  01D0               	clrf	main@ucDelayPrefix4TimerP5s
  2419                           
  2420                           ;main.c: 1487: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX5;
  2421  02E9  2B1F               	goto	L14
  2422  02EA                     l961:	
  2423                           ;main.c: 1490: }
  2424                           ;main.c: 1492: case ADC4_STEP_FOURTH_PREFIX5:
  2425                           
  2426                           
  2427                           ;main.c: 1493: {
  2428                           ;main.c: 1499: PBOD6 = 1;
  2429  02EA  1683               	bsf	3,5	;RP0=1, select bank3
  2430  02EB  1703               	bsf	3,6	;RP1=1, select bank3
  2431  02EC  1708               	bsf	8,6
  2432                           
  2433                           ;main.c: 1500: PB6 = 1;
  2434  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2435  02EE  3009               	movlw	9
  2436  02EF                     L18:	
  2437  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2438  02F0  1706               	bsf	6,6
  2439                           
  2440                           ;main.c: 1505: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX6;
  2441  02F1  2B1F               	goto	L14
  2442  02F2                     l4946:	
  2443                           ;main.c: 1507: break;
  2444                           
  2445  02F2  3002               	movlw	2
  2446                           
  2447                           ;main.c: 1512: {
  2448                           ;main.c: 1513: static unsigned char ucDelayPrefix6TimerP2s;
  2449                           ;main.c: 1515: ucDelayPrefix6TimerP2s++;
  2450  02F3  0AD1               	incf	main@ucDelayPrefix6TimerP2s,f
  2451                           
  2452                           ;main.c: 1517: if( ucDelayPrefix6TimerP2s >= 2)
  2453  02F4  0251               	subwf	main@ucDelayPrefix6TimerP2s,w
  2454  02F5  1C03               	skipc
  2455  02F6  2840               	goto	l4486
  2456                           
  2457                           ;main.c: 1518: {
  2458                           ;main.c: 1519: ucDelayPrefix6TimerP2s = 0;
  2459  02F7  01D1               	clrf	main@ucDelayPrefix6TimerP2s
  2460  02F8  2B29               	goto	L13
  2461  02F9                     l4954:	
  2462                           ;main.c: 1521: ucADC4_Step = ADC4_STEP_INIT;
  2463                           
  2464                           
  2465                           ;main.c: 1530: {
  2466                           ;main.c: 1534: static unsigned char ucCheckTimerP2sLess = 0;
  2467                           ;main.c: 1536: static unsigned char ucCheckTimerP2sMore = 0;
  2468                           ;main.c: 1538: if( getAdOriginalCh1Value() < 105)
  2469  02F9  118A  2537  118A   	fcall	_getAdOriginalCh1Value
  2470  02FC  3000               	movlw	0
  2471  02FD  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2472  02FE  3069               	movlw	105
  2473  02FF  1903               	skipnz
  2474  0300  0246               	subwf	?_getAdOriginalCh1Value,w
  2475  0301  1803               	skipnc
  2476  0302  2B06               	goto	l4960
  2477                           
  2478                           ;main.c: 1539: {
  2479                           ;main.c: 1540: ucCheckTimerP2sLess++;
  2480  0303  0ACE               	incf	main@ucCheckTimerP2sLess,f
  2481                           
  2482                           ;main.c: 1541: ucCheckTimerP2sMore = 0;
  2483  0304  01CF               	clrf	main@ucCheckTimerP2sMore
  2484                           
  2485                           ;main.c: 1542: }
  2486  0305  2B08               	goto	l4964
  2487  0306                     l4960:	
  2488                           
  2489                           ;main.c: 1543: else
  2490                           ;main.c: 1544: {
  2491                           ;main.c: 1545: ucCheckTimerP2sMore++;
  2492  0306  0ACF               	incf	main@ucCheckTimerP2sMore,f
  2493                           
  2494                           ;main.c: 1546: ucCheckTimerP2sLess = 0;
  2495  0307  01CE               	clrf	main@ucCheckTimerP2sLess
  2496  0308                     l4964:	
  2497                           
  2498                           ;main.c: 1547: }
  2499                           ;main.c: 1549: if( ucCheckTimerP2sMore > 2)
  2500  0308  3003               	movlw	3
  2501  0309  024F               	subwf	main@ucCheckTimerP2sMore,w
  2502  030A  3003               	movlw	3
  2503  030B  1C03               	skipc
  2504  030C  2B11               	goto	L17
  2505                           
  2506                           ;main.c: 1550: {
  2507                           ;main.c: 1551: ucCheckTimerP2sMore = 0;
  2508  030D  01CF               	clrf	main@ucCheckTimerP2sMore
  2509                           
  2510                           ;main.c: 1552: ucCheckTimerP2sLess = 0;
  2511  030E  01CE               	clrf	main@ucCheckTimerP2sLess
  2512                           
  2513                           ;main.c: 1554: ucADC4_Step = ADC4_STEP_INIT;
  2514  030F  01CC               	clrf	main@ucADC4_Step
  2515                           
  2516                           ;main.c: 1556: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  2517  0310  00CB               	movwf	main@enumMainLoopStep
  2518  0311                     L17:	
  2519                           ;main.c: 1557: }
  2520                           ;main.c: 1559: if( ucCheckTimerP2sLess > 2)
  2521                           
  2522  0311  024E               	subwf	main@ucCheckTimerP2sLess,w
  2523  0312  1C03               	skipc
  2524  0313  2840               	goto	l4486
  2525  0314  300B               	movlw	11
  2526                           
  2527                           ;main.c: 1560: {
  2528                           ;main.c: 1561: ucCheckTimerP2sMore = 0;
  2529  0315  01CF               	clrf	main@ucCheckTimerP2sMore
  2530                           
  2531                           ;main.c: 1562: ucCheckTimerP2sLess = 0;
  2532  0316  01CE               	clrf	main@ucCheckTimerP2sLess
  2533                           
  2534                           ;main.c: 1564: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX1;
  2535  0317  2B1F               	goto	L14
  2536  0318                     l4976:	
  2537  0318  3004               	movlw	4
  2538                           
  2539                           ;main.c: 1573: {
  2540                           ;main.c: 1577: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2541                           ;main.c: 1579: ucFourthSuffix1TimerP3s++;
  2542  0319  0AD2               	incf	main@ucFourthSuffix1TimerP3s,f
  2543                           
  2544                           ;main.c: 1581: if( ucFourthSuffix1TimerP3s > 3)
  2545  031A  0252               	subwf	main@ucFourthSuffix1TimerP3s,w
  2546  031B  1C03               	skipc
  2547  031C  2840               	goto	l4486
  2548  031D  300C               	movlw	12
  2549                           
  2550                           ;main.c: 1582: {
  2551                           ;main.c: 1583: ucFourthSuffix1TimerP3s = 0;
  2552  031E  01D2               	clrf	main@ucFourthSuffix1TimerP3s
  2553  031F                     L14:	
  2554                           ;main.c: 1584: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2555                           
  2556  031F  00CC               	movwf	main@ucADC4_Step
  2557  0320  2840               	goto	l4486
  2558  0321                     l4984:	
  2559                           
  2560                           ;main.c: 1591: {
  2561                           ;main.c: 1596: setPA6(0);
  2562  0321  3000               	movlw	0
  2563  0322  118A  271C  118A   	fcall	_setPA6
  2564                           
  2565                           ;main.c: 1598: clearPinPortAndTimer();
  2566  0325  118A  2656  118A   	fcall	_clearPinPortAndTimer
  2567                           
  2568                           ;main.c: 1599: ucADC4_Step = ADC4_STEP_INIT;
  2569  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0329                     L13:	
  2571  0329  01CC               	clrf	main@ucADC4_Step
  2572  032A  2860               	goto	l4504
  2573  032B                     l4994:	
  2574  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2575  032C  084C               	movf	main@ucADC4_Step,w
  2576                           
  2577                           ; Switch size 1, requested type "space"
  2578                           ; Number of cases is 13, Range of values is 0 to 12
  2579                           ; switch strategies available:
  2580                           ; Name         Instructions Cycles
  2581                           ; direct_byte           33     7 (fixed)
  2582                           ; simple_byte           40    21 (average)
  2583                           ; jumptable            260     6 (fixed)
  2584                           ; rangetable            17     6 (fixed)
  2585                           ; spacedrange           32     9 (fixed)
  2586                           ; locatedrange          13     3 (fixed)
  2587                           ;	Chosen strategy is direct_byte
  2588  032D  0084               	movwf	4
  2589  032E  300D               	movlw	13
  2590  032F  0204               	subwf	4,w
  2591  0330  1803               	skipnc
  2592  0331  2840               	goto	l4486
  2593  0332  3006               	movlw	high S5408
  2594  0333  008A               	movwf	10
  2595  0334  1003               	clrc
  2596  0335  0D04               	rlf	4,w
  2597  0336  3E74               	addlw	low S5408
  2598  0337  0082               	movwf	2
  2599  0338                     l985:	
  2600                           ;main.c: 1628: {
  2601                           ;main.c: 1629: case HOUR_3_BRANCH_STEP_FIRST:
  2602                           
  2603                           
  2604                           ;main.c: 1630: {
  2605                           ;main.c: 1632: PB7 = 1;
  2606  0338  1786               	bsf	6,7
  2607                           
  2608                           ;main.c: 1633: PBOD7 = 1;
  2609  0339  1683               	bsf	3,5	;RP0=1, select bank3
  2610  033A  3030               	movlw	48
  2611  033B  1703               	bsf	3,6	;RP1=1, select bank3
  2612  033C  1788               	bsf	8,7
  2613                           
  2614                           ;main.c: 1638: startThreeHoursTimer(10800);
  2615  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2616  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2617  033F  00A0               	movwf	?_startThreeHoursTimer
  2618  0340  302A               	movlw	42
  2619  0341  00A1               	movwf	?_startThreeHoursTimer+1
  2620  0342  118A  26D6  118A   	fcall	_startThreeHoursTimer
  2621                           
  2622                           ;main.c: 1641: setPB0(1);
  2623  0345  3001               	movlw	1
  2624  0346  118A  2725  118A   	fcall	_setPB0
  2625                           
  2626                           ;main.c: 1643: setPA0(1);
  2627  0349  3001               	movlw	1
  2628  034A  118A  2756  118A   	fcall	_setPA0
  2629                           
  2630                           ;main.c: 1645: setPA1(1);
  2631  034D  3001               	movlw	1
  2632  034E  118A  274E  118A   	fcall	_setPA1
  2633                           
  2634                           ;main.c: 1647: setPA2(1);
  2635  0351  3001               	movlw	1
  2636  0352  118A  2746  118A   	fcall	_setPA2
  2637                           
  2638                           ;main.c: 1649: setPA3(1);
  2639  0355  3001               	movlw	1
  2640  0356  118A  273E  118A   	fcall	_setPA3
  2641                           
  2642                           ;main.c: 1651: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2643  0359  01CA               	clrf	main@enumBranchStep
  2644  035A  0ACA               	incf	main@enumBranchStep,f
  2645                           
  2646                           ;main.c: 1652: break;
  2647  035B  2840               	goto	l4486
  2648  035C                     l5000:	
  2649                           
  2650                           ;main.c: 1656: {
  2651                           ;main.c: 1660: static unsigned char ucTimer20s = 0;
  2652                           ;main.c: 1662: if(ucTimer20s < 200)
  2653  035C  30C8               	movlw	200
  2654  035D  0258               	subwf	main@ucTimer20s,w
  2655  035E  1803               	skipnc
  2656  035F  2B62               	goto	l5004
  2657                           
  2658                           ;main.c: 1663: {
  2659                           ;main.c: 1664: ucTimer20s++;
  2660  0360  0AD8               	incf	main@ucTimer20s,f
  2661                           
  2662                           ;main.c: 1666: }
  2663  0361  2840               	goto	l4486
  2664  0362                     l5004:	
  2665  0362  3002               	movlw	2
  2666                           
  2667                           ;main.c: 1667: else
  2668                           ;main.c: 1668: {
  2669                           ;main.c: 1670: ucTimer20s = 0;
  2670  0363  01D8               	clrf	main@ucTimer20s
  2671                           
  2672                           ;main.c: 1672: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2673  0364  00CA               	movwf	main@enumBranchStep
  2674                           
  2675                           ;main.c: 1675: setPA6(0);
  2676  0365  3000               	movlw	0
  2677  0366  118A  271C  118A   	fcall	_setPA6
  2678  0369  2840               	goto	l4486
  2679  036A                     l5010:	
  2680                           
  2681                           ;main.c: 1681: {
  2682                           ;main.c: 1685: if(isFinishedThreeHoursTimer())
  2683  036A  118A  276D  118A   	fcall	_isFinishedThreeHoursTimer
  2684  036D  3A00               	xorlw	0
  2685  036E  1903               	skipnz
  2686  036F  2B73               	goto	l5016
  2687                           
  2688                           ;main.c: 1686: {
  2689                           ;main.c: 1687: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2690  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0371  3009               	movlw	9
  2692  0372  2B92               	goto	L19
  2693  0373                     l5016:	
  2694                           ;main.c: 1689: }
  2695                           
  2696                           ;main.c: 1688: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  2697                           
  2698                           
  2699                           ;main.c: 1690: else
  2700                           ;main.c: 1691: {
  2701                           ;main.c: 1692: static unsigned char ucTimerX1P5s = 0;
  2702                           ;main.c: 1694: static unsigned char ucTimerLessX1P5s = 0;
  2703                           ;main.c: 1696: if(getAdOriginalCh1Value() < 115)
  2704  0373  118A  2537  118A   	fcall	_getAdOriginalCh1Value
  2705  0376  3000               	movlw	0
  2706  0377  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2707  0378  3073               	movlw	115
  2708  0379  1903               	skipnz
  2709  037A  0246               	subwf	?_getAdOriginalCh1Value,w
  2710  037B  1803               	skipnc
  2711  037C  2B80               	goto	l5022
  2712                           
  2713                           ;main.c: 1697: {
  2714                           ;main.c: 1698: ucTimerX1P5s = 0;
  2715  037D  01E9               	clrf	main@ucTimerX1P5s
  2716                           
  2717                           ;main.c: 1699: ucTimerLessX1P5s++;
  2718  037E  0AE6               	incf	main@ucTimerLessX1P5s,f
  2719                           
  2720                           ;main.c: 1700: }
  2721  037F  2B82               	goto	l5026
  2722  0380                     l5022:	
  2723                           
  2724                           ;main.c: 1701: else
  2725                           ;main.c: 1702: {
  2726                           ;main.c: 1703: ucTimerX1P5s++;
  2727  0380  0AE9               	incf	main@ucTimerX1P5s,f
  2728                           
  2729                           ;main.c: 1704: ucTimerLessX1P5s = 0;
  2730  0381  01E6               	clrf	main@ucTimerLessX1P5s
  2731  0382                     l5026:	
  2732                           
  2733                           ;main.c: 1705: }
  2734                           ;main.c: 1707: if(ucTimerX1P5s >= 5)
  2735  0382  3005               	movlw	5
  2736  0383  0269               	subwf	main@ucTimerX1P5s,w
  2737  0384  1C03               	skipc
  2738  0385  2B95               	goto	l5040
  2739                           
  2740                           ;main.c: 1708: {
  2741                           ;main.c: 1709: ucTimerX1P5s = 0;
  2742  0386  01E9               	clrf	main@ucTimerX1P5s
  2743                           
  2744                           ;main.c: 1713: PBOD7 = 0;
  2745  0387  1683               	bsf	3,5	;RP0=1, select bank3
  2746  0388  1703               	bsf	3,6	;RP1=1, select bank3
  2747  0389  1388               	bcf	8,7
  2748                           
  2749                           ;main.c: 1714: PB7 = 0;
  2750  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2751  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2752  038C  1386               	bcf	6,7
  2753                           
  2754                           ;main.c: 1719: clearThreeHoursTimer();
  2755  038D  118A  266C  118A   	fcall	_clearThreeHoursTimer
  2756                           
  2757                           ;main.c: 1721: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2758  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0391  3002               	movlw	2
  2760  0392                     L19:	
  2761  0392  01CA               	clrf	main@enumBranchStep
  2762  0393                     L15:	
  2763                           ;main.c: 1723: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2764                           
  2765  0393  00CB               	movwf	main@enumMainLoopStep
  2766                           
  2767                           ;main.c: 1724: }
  2768  0394  2840               	goto	l4486
  2769  0395                     l5040:	
  2770                           
  2771                           ;main.c: 1725: else if(ucTimerLessX1P5s >= 5)
  2772  0395  3005               	movlw	5
  2773  0396  0266               	subwf	main@ucTimerLessX1P5s,w
  2774  0397  1C03               	skipc
  2775  0398  2840               	goto	l4486
  2776                           
  2777                           ;main.c: 1726: {
  2778                           ;main.c: 1727: static unsigned char ucTimerX2P5s = 0;
  2779                           ;main.c: 1729: static unsigned char ucTimerLessX2P5s = 0;
  2780                           ;main.c: 1731: if(getAdOriginalCh14Value() >= 1950)
  2781  0399  118A  2541  118A   	fcall	_getAdOriginalCh14Value
  2782  039C  3007               	movlw	7
  2783  039D  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2784  039E  309E               	movlw	158
  2785  039F  1903               	skipnz
  2786  03A0  0246               	subwf	?_getAdOriginalCh14Value,w
  2787  03A1  1C03               	skipc
  2788  03A2  2BA7               	goto	l5048
  2789                           
  2790                           ;main.c: 1732: {
  2791                           ;main.c: 1733: ucTimerX2P5s++;
  2792  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2793  03A4  0AAD               	incf	main@ucTimerX2P5s^(0+128),f
  2794                           
  2795                           ;main.c: 1734: ucTimerLessX2P5s = 0;
  2796  03A5  01AB               	clrf	main@ucTimerLessX2P5s^(0+128)
  2797                           
  2798                           ;main.c: 1735: }
  2799  03A6  2BAA               	goto	l5052
  2800  03A7                     l5048:	
  2801                           
  2802                           ;main.c: 1736: else
  2803                           ;main.c: 1737: {
  2804                           ;main.c: 1738: ucTimerX2P5s = 0;
  2805  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2806  03A8  01AD               	clrf	main@ucTimerX2P5s^(0+128)
  2807                           
  2808                           ;main.c: 1739: ucTimerLessX2P5s++;
  2809  03A9  0AAB               	incf	main@ucTimerLessX2P5s^(0+128),f
  2810  03AA                     l5052:	
  2811                           
  2812                           ;main.c: 1740: }
  2813                           ;main.c: 1742: if(ucTimerX2P5s >= 5)
  2814  03AA  3005               	movlw	5
  2815  03AB  022D               	subwf	main@ucTimerX2P5s^(0+128),w
  2816  03AC  1C03               	skipc
  2817  03AD  2BB0               	goto	l5056
  2818                           
  2819                           ;main.c: 1743: {
  2820                           ;main.c: 1744: ucTimerX2P5s = 0;
  2821  03AE  01AD               	clrf	main@ucTimerX2P5s^(0+128)
  2822                           
  2823                           ;main.c: 1745: }
  2824  03AF  2840               	goto	l4486
  2825  03B0                     l5056:	
  2826                           
  2827                           ;main.c: 1746: else if(ucTimerLessX2P5s >= 5)
  2828  03B0  3005               	movlw	5
  2829  03B1  022B               	subwf	main@ucTimerLessX2P5s^(0+128),w
  2830  03B2  1C03               	skipc
  2831  03B3  2840               	goto	l4486
  2832                           
  2833                           ;main.c: 1747: {
  2834                           ;main.c: 1748: clearPinPortAndTimer();
  2835  03B4  118A  2656  118A   	fcall	_clearPinPortAndTimer
  2836                           
  2837                           ;main.c: 1749: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2838  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2839  03B8  01CB               	clrf	main@enumMainLoopStep
  2840  03B9  0ACB               	incf	main@enumMainLoopStep,f
  2841                           
  2842                           ;main.c: 1750: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2843  03BA  01CA               	clrf	main@enumBranchStep
  2844                           
  2845                           ;main.c: 1751: }
  2846  03BB  2840               	goto	l4486
  2847  03BC                     l5066:	
  2848  03BC  084A               	movf	main@enumBranchStep,w
  2849                           
  2850                           ; Switch size 1, requested type "space"
  2851                           ; Number of cases is 3, Range of values is 0 to 2
  2852                           ; switch strategies available:
  2853                           ; Name         Instructions Cycles
  2854                           ; simple_byte           10     6 (average)
  2855                           ; direct_byte           13     7 (fixed)
  2856                           ; jumptable            260     6 (fixed)
  2857                           ; rangetable             7     6 (fixed)
  2858                           ; spacedrange           12     9 (fixed)
  2859                           ; locatedrange           3     3 (fixed)
  2860                           ;	Chosen strategy is simple_byte
  2861  03BD  3A00               	xorlw	0	; case 0
  2862  03BE  1903               	skipnz
  2863  03BF  2B38               	goto	l985
  2864  03C0  3A01               	xorlw	1	; case 1
  2865  03C1  1903               	skipnz
  2866  03C2  2B5C               	goto	l5000
  2867  03C3  3A03               	xorlw	3	; case 2
  2868  03C4  1903               	skipnz
  2869  03C5  2B6A               	goto	l5010
  2870  03C6  2862               	goto	l752
  2871  03C7                     l5068:	
  2872                           
  2873                           ;main.c: 1792: {
  2874                           ;main.c: 1797: setPB0(0);
  2875  03C7  3000               	movlw	0
  2876  03C8  118A  2725  118A   	fcall	_setPB0
  2877                           
  2878                           ;main.c: 1799: setPB1(0);
  2879  03CB  3000               	movlw	0
  2880  03CC  118A  275E  118A   	fcall	_setPB1
  2881                           
  2882                           ;main.c: 1801: setPA0(0);
  2883  03CF  3000               	movlw	0
  2884  03D0  118A  2756  118A   	fcall	_setPA0
  2885                           
  2886                           ;main.c: 1803: setPA1(0);
  2887  03D3  3000               	movlw	0
  2888  03D4  118A  274E  118A   	fcall	_setPA1
  2889                           
  2890                           ;main.c: 1805: setPA2(0);
  2891  03D7  3000               	movlw	0
  2892  03D8  118A  2746  118A   	fcall	_setPA2
  2893                           
  2894                           ;main.c: 1807: setPA3(0);
  2895  03DB  3000               	movlw	0
  2896  03DC  118A  273E  118A   	fcall	_setPA3
  2897                           
  2898                           ;main.c: 1810: PBOD6 = 0;
  2899  03DF  1683               	bsf	3,5	;RP0=1, select bank3
  2900  03E0  1703               	bsf	3,6	;RP1=1, select bank3
  2901  03E1  1308               	bcf	8,6
  2902                           
  2903                           ;main.c: 1811: PB6 = 1;
  2904  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2905  03E3  3000               	movlw	0
  2906  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2907  03E5  1706               	bsf	6,6
  2908                           
  2909                           ;main.c: 1817: setPA6(0);
  2910  03E6  118A  271C  118A   	fcall	_setPA6
  2911                           
  2912                           ;main.c: 1819: enumInteralStep = INTERNAL_SECOND_STEP;
  2913  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2914  03EA  01A9               	clrf	main@enumInteralStep^(0+128)
  2915  03EB  0AA9               	incf	main@enumInteralStep^(0+128),f
  2916                           
  2917                           ;main.c: 1820: break;
  2918  03EC  2840               	goto	l4486
  2919  03ED                     l5076:	
  2920                           
  2921                           ;main.c: 1824: {
  2922                           ;main.c: 1828: static unsigned char ucTimer1s = 0;
  2923                           ;main.c: 1830: if(getAdOriginalCh14Value() <= 1000)
  2924  03ED  118A  2541  118A   	fcall	_getAdOriginalCh14Value
  2925  03F0  3003               	movlw	3
  2926  03F1  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2927  03F2  30E9               	movlw	233
  2928  03F3  1903               	skipnz
  2929  03F4  0246               	subwf	?_getAdOriginalCh14Value,w
  2930  03F5  1803               	skipnc
  2931  03F6  2BFA               	goto	l5080
  2932                           
  2933                           ;main.c: 1831: {
  2934                           ;main.c: 1832: ucTimer1s++;
  2935  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2936  03F8  0AAA               	incf	main@ucTimer1s^(0+128),f
  2937                           
  2938                           ;main.c: 1833: }
  2939  03F9  2BFC               	goto	l5082
  2940  03FA                     l5080:	
  2941                           
  2942                           ;main.c: 1834: else
  2943                           ;main.c: 1835: ucTimer1s = 0;
  2944  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2945  03FB  01AA               	clrf	main@ucTimer1s^(0+128)
  2946  03FC                     l5082:	
  2947                           
  2948                           ;main.c: 1837: if(ucTimer1s >= 10)
  2949  03FC  300A               	movlw	10
  2950  03FD  022A               	subwf	main@ucTimer1s^(0+128),w
  2951  03FE  1C03               	skipc
  2952  03FF  2840               	goto	l4486
  2953                           
  2954                           ;main.c: 1838: {
  2955                           ;main.c: 1839: enumInteralStep = INTERNAL_THIRD_STEP;
  2956  0400  3002               	movlw	2
  2957  0401  00A9               	movwf	main@enumInteralStep^(0+128)
  2958                           
  2959                           ;main.c: 1840: ucTimer1s = 0;
  2960  0402  01AA               	clrf	main@ucTimer1s^(0+128)
  2961  0403  2840               	goto	l4486
  2962  0404                     l5088:	
  2963                           
  2964                           ;main.c: 1846: {
  2965                           ;main.c: 1850: static unsigned char ucTimerP3s = 0;
  2966                           ;main.c: 1852: if(getAdOriginalCh14Value() >= 1950)
  2967  0404  118A  2541  118A   	fcall	_getAdOriginalCh14Value
  2968  0407  3007               	movlw	7
  2969  0408  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2970  0409  309E               	movlw	158
  2971  040A  1903               	skipnz
  2972  040B  0246               	subwf	?_getAdOriginalCh14Value,w
  2973  040C  1C03               	skipc
  2974  040D  2C11               	goto	l5092
  2975                           
  2976                           ;main.c: 1853: {
  2977                           ;main.c: 1854: ucTimerP3s++;
  2978  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2979  040F  0AAC               	incf	main@ucTimerP3s^(0+128),f
  2980                           
  2981                           ;main.c: 1855: }
  2982  0410  2C13               	goto	l5094
  2983  0411                     l5092:	
  2984                           
  2985                           ;main.c: 1856: else
  2986                           ;main.c: 1857: ucTimerP3s = 0;
  2987  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2988  0412  01AC               	clrf	main@ucTimerP3s^(0+128)
  2989  0413                     l5094:	
  2990                           
  2991                           ;main.c: 1859: if(ucTimerP3s >= 3)
  2992  0413  3003               	movlw	3
  2993  0414  022C               	subwf	main@ucTimerP3s^(0+128),w
  2994  0415  1C03               	skipc
  2995  0416  2840               	goto	l4486
  2996                           
  2997                           ;main.c: 1860: {
  2998                           ;main.c: 1861: enumInteralStep = INTERNAL_FIRST_STEP;
  2999  0417  01A9               	clrf	main@enumInteralStep^(0+128)
  3000                           
  3001                           ;main.c: 1862: ucTimerP3s = 0;
  3002  0418  01AC               	clrf	main@ucTimerP3s^(0+128)
  3003                           
  3004                           ;main.c: 1864: clearAllTimer();
  3005  0419  118A  2663  118A   	fcall	_clearAllTimer
  3006                           
  3007                           ;main.c: 1866: DACR0=0x0F;
  3008  041C  300F               	movlw	15
  3009  041D  0088               	movwf	8	;volatile
  3010                           
  3011                           ;main.c: 1870: initPin();
  3012  041E  118A  26A7  118A   	fcall	_initPin
  3013                           
  3014                           ;main.c: 1873: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3015  0421  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0422  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0423  01CB               	clrf	main@enumMainLoopStep
  3018  0424                     l1035:	
  3019  0424  2C24               	goto	l1035
  3020  0425                     l5108:	
  3021  0425  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0426  0829               	movf	main@enumInteralStep^(0+128),w
  3023                           
  3024                           ; Switch size 1, requested type "space"
  3025                           ; Number of cases is 3, Range of values is 0 to 2
  3026                           ; switch strategies available:
  3027                           ; Name         Instructions Cycles
  3028                           ; simple_byte           10     6 (average)
  3029                           ; direct_byte           13     7 (fixed)
  3030                           ; jumptable            260     6 (fixed)
  3031                           ; rangetable             7     6 (fixed)
  3032                           ; spacedrange           12     9 (fixed)
  3033                           ; locatedrange           3     3 (fixed)
  3034                           ;	Chosen strategy is simple_byte
  3035  0427  3A00               	xorlw	0	; case 0
  3036  0428  1903               	skipnz
  3037  0429  2BC7               	goto	l5068
  3038  042A  3A01               	xorlw	1	; case 1
  3039  042B  1903               	skipnz
  3040  042C  2BED               	goto	l5076
  3041  042D  3A03               	xorlw	3	; case 2
  3042  042E  1903               	skipnz
  3043  042F  2C04               	goto	l5088
  3044  0430  2862               	goto	l752
  3045  0431                     l5112:	
  3046  0431  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0432  084B               	movf	main@enumMainLoopStep,w
  3048                           
  3049                           ; Switch size 1, requested type "space"
  3050                           ; Number of cases is 8, Range of values is 0 to 9
  3051                           ; switch strategies available:
  3052                           ; Name         Instructions Cycles
  3053                           ; simple_byte           25    13 (average)
  3054                           ; direct_byte           27     7 (fixed)
  3055                           ; jumptable            260     6 (fixed)
  3056                           ; rangetable            14     6 (fixed)
  3057                           ; spacedrange           26     9 (fixed)
  3058                           ; locatedrange          10     3 (fixed)
  3059                           ;	Chosen strategy is simple_byte
  3060  0433  3A00               	xorlw	0	; case 0
  3061  0434  1903               	skipnz
  3062  0435  284E               	goto	l4494
  3063  0436  3A01               	xorlw	1	; case 1
  3064  0437  1903               	skipnz
  3065  0438  2863               	goto	l4506
  3066  0439  3A03               	xorlw	3	; case 2
  3067  043A  1903               	skipnz
  3068  043B  287B               	goto	l4520
  3069  043C  3A01               	xorlw	1	; case 3
  3070  043D  1903               	skipnz
  3071  043E  2888               	goto	l4530
  3072  043F  3A07               	xorlw	7	; case 4
  3073  0440  1903               	skipnz
  3074  0441  28C3               	goto	l4566
  3075  0442  3A01               	xorlw	1	; case 5
  3076  0443  1903               	skipnz
  3077  0444  28CF               	goto	l4572
  3078  0445  3A0D               	xorlw	13	; case 8
  3079  0446  1903               	skipnz
  3080  0447  2BBC               	goto	l5066
  3081  0448  3A01               	xorlw	1	; case 9
  3082  0449  1903               	skipnz
  3083  044A  2C25               	goto	l5108
  3084  044B  2862               	goto	l752
  3085  044C  118A  2811         	ljmp	start
  3086  044E                     __end_of_main:	
  3087                           
  3088                           	psect	swtext1
  3089  06BA                     __pswtext1:	
  3090  06BA                     S5402:	
  3091  06BA  118A  2916         	ljmp	l813
  3092  06BC  118A  2919         	ljmp	l4600
  3093  06BE  118A  2922         	ljmp	l4610
  3094  06C0  118A  2928         	ljmp	l4620
  3095  06C2  118A  292E         	ljmp	l4630
  3096  06C4  118A  2934         	ljmp	l4640
  3097  06C6  118A  293E         	ljmp	l4650
  3098                           
  3099                           	psect	swtext2
  3100  06C8                     __pswtext2:	
  3101  06C8                     S5404:	
  3102  06C8  118A  2951         	ljmp	l841
  3103  06CA  118A  2954         	ljmp	l4664
  3104  06CC  118A  295D         	ljmp	l4674
  3105  06CE  118A  2963         	ljmp	l4684
  3106  06D0  118A  296C         	ljmp	l4694
  3107  06D2  118A  2975         	ljmp	l4704
  3108  06D4  118A  298A         	ljmp	l4714
  3109                           
  3110                           	psect	swtext3
  3111  06F2                     __pswtext3:	
  3112  06F2                     S5406:	
  3113  06F2  118A  299C         	ljmp	l4726
  3114  06F4  118A  29A6         	ljmp	l4730
  3115  06F6  118A  29B2         	ljmp	l4740
  3116  06F8  118A  29BB         	ljmp	l4750
  3117  06FA  118A  29C4         	ljmp	l4760
  3118  06FC  118A  29D5         	ljmp	l4770
  3119                           
  3120                           	psect	swtext4
  3121  0674                     __pswtext4:	
  3122  0674                     S5408:	
  3123  0674  118A  28DE         	ljmp	l794
  3124  0676  118A  28E1         	ljmp	l4580
  3125  0678  118A  2A66         	ljmp	l4866
  3126  067A  118A  2A77         	ljmp	l4868
  3127  067C  118A  2A9A         	ljmp	l4892
  3128  067E  118A  2AA3         	ljmp	l4898
  3129  0680  118A  2AD5         	ljmp	l4928
  3130  0682  118A  2AE2         	ljmp	l4936
  3131  0684  118A  2AEA         	ljmp	l961
  3132  0686  118A  2AF2         	ljmp	l4946
  3133  0688  118A  2AF9         	ljmp	l4954
  3134  068A  118A  2B18         	ljmp	l4976
  3135  068C  118A  2B21         	ljmp	l4984
  3136                           
  3137                           	psect	text844
  3138  0656                     __ptext844:	
  3139 ;; =============== function _main ends ============
  3140                           
  3141                           
  3142 ;; *************** function _clearPinPortAndTimer *****************
  3143 ;; Defined at:
  3144 ;;		line 104 in file "D:\develop\190625\AK7030-OTP\main.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;		None               void
  3151 ;; Registers used:
  3152 ;;		status,2, status,0, pclath, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 40/0
  3155 ;;		On exit  : 60/20
  3156 ;;		Unchanged: FFF9F/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3158 ;;      Params:         0       0       0       0       0
  3159 ;;      Locals:         0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0
  3161 ;;      Totals:         0       0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    4
  3165 ;; This function calls:
  3166 ;;		_clearAllTimer
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171  0656                     _clearPinPortAndTimer:	
  3172                           
  3173                           ;main.c: 106: PB0 = 0;
  3174                           
  3175                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3176  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0657  1006               	bcf	6,0
  3178                           
  3179                           ;main.c: 107: PA0 = 0;
  3180  0658  1005               	bcf	5,0
  3181                           
  3182                           ;main.c: 108: PA1 = 0;
  3183  0659  1085               	bcf	5,1
  3184                           
  3185                           ;main.c: 109: PA2 = 0;
  3186  065A  1105               	bcf	5,2
  3187                           
  3188                           ;main.c: 110: PA3 = 0;
  3189  065B  1185               	bcf	5,3
  3190                           
  3191                           ;main.c: 113: PBOD7 = 0;
  3192  065C  1683               	bsf	3,5	;RP0=1, select bank3
  3193  065D  1703               	bsf	3,6	;RP1=1, select bank3
  3194  065E  1388               	bcf	8,7
  3195                           
  3196                           ;main.c: 114: PB7 = 0;
  3197  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0661  1386               	bcf	6,7
  3200                           
  3201                           ;main.c: 115: clearAllTimer();
  3202  0662  2E63               	ljmp	l4430
  3203  0663                     __end_of_clearPinPortAndTimer:	
  3204  0663                     __ptext849:	
  3205 ;; =============== function _process_AD_Converter_Value ends ============
  3206                           
  3207                           
  3208 ;; *************** function _clearAllTimer *****************
  3209 ;; Defined at:
  3210 ;;		line 95 in file "D:\develop\190625\AK7030-OTP\main.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;		None               void
  3217 ;; Registers used:
  3218 ;;		status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 40/20
  3221 ;;		On exit  : 60/20
  3222 ;;		Unchanged: FFF9F/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0
  3227 ;;      Totals:         0       0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    3
  3231 ;; This function calls:
  3232 ;;		_clearTwelveHoursTimer
  3233 ;;		_clearThreeHoursTimer
  3234 ;;		_clearTwentySecondsTimer
  3235 ;; This function is called by:
  3236 ;;		_clearPinPortAndTimer
  3237 ;;		_main
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240  0663                     _clearAllTimer:	
  3241  0663                     l4430:	
  3242                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3243                           
  3244                           
  3245                           ;main.c: 96: clearTwelveHoursTimer();
  3246  0663  2668  118A         	fcall	_clearTwelveHoursTimer
  3247                           
  3248                           ;main.c: 97: clearThreeHoursTimer();
  3249  0665  266C  118A         	fcall	_clearThreeHoursTimer
  3250                           
  3251                           ;main.c: 98: clearTwentySecondsTimer();
  3252  0667  2E70               	ljmp	l4134
  3253  0668                     __end_of_clearAllTimer:	
  3254  0668                     __ptext880:	
  3255 ;; =============== function _clearThreeHoursTimer ends ============
  3256                           
  3257                           
  3258 ;; *************** function _clearTwelveHoursTimer *****************
  3259 ;; Defined at:
  3260 ;;		line 365 in file "D:\develop\190625\AK7030-OTP\common.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;		None               void
  3267 ;; Registers used:
  3268 ;;		status,2
  3269 ;; Tracked objects:
  3270 ;;		On entry : 40/20
  3271 ;;		On exit  : 60/20
  3272 ;;		Unchanged: FFF9F/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    2
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_clearAllTimer
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287  0668                     _clearTwelveHoursTimer:	
  3288                           
  3289                           ;common.c: 366: uiBigTimer = 0;
  3290                           
  3291                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3292  0668  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0669  01A0               	clrf	_uiBigTimer^(0+128)
  3294  066A  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  3295  066B  0008               	return
  3296  066C                     __end_of_clearTwelveHoursTimer:	
  3297  066C                     __ptext879:	
  3298 ;; =============== function _clearTwentySecondsTimer ends ============
  3299                           
  3300                           
  3301 ;; *************** function _clearThreeHoursTimer *****************
  3302 ;; Defined at:
  3303 ;;		line 371 in file "D:\develop\190625\AK7030-OTP\common.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;		None               void
  3310 ;; Registers used:
  3311 ;;		status,2
  3312 ;; Tracked objects:
  3313 ;;		On entry : 40/0
  3314 ;;		On exit  : 60/20
  3315 ;;		Unchanged: FFF9F/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0
  3320 ;;      Totals:         0       0       0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    2
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_clearAllTimer
  3328 ;;		_main
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331  066C                     _clearThreeHoursTimer:	
  3332                           
  3333                           ;common.c: 372: uiSmallTimer = 0;
  3334                           
  3335                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3336  066C  1683               	bsf	3,5	;RP0=1, select bank1
  3337  066D  01A2               	clrf	_uiSmallTimer^(0+128)
  3338  066E  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  3339  066F  0008               	return
  3340  0670                     __end_of_clearThreeHoursTimer:	
  3341  0670                     __ptext878:	
  3342 ;; =============== function _initPin ends ============
  3343                           
  3344                           
  3345 ;; *************** function _clearTwentySecondsTimer *****************
  3346 ;; Defined at:
  3347 ;;		line 376 in file "D:\develop\190625\AK7030-OTP\common.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 40/0
  3358 ;;		On exit  : 60/20
  3359 ;;		Unchanged: FFF9F/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_clearAllTimer
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375  0670                     _clearTwentySecondsTimer:	
  3376  0670                     l4134:	
  3377                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3378                           
  3379                           
  3380                           ;common.c: 377: uiTwentySecondsTimer = 0;
  3381  0670  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0671  01A4               	clrf	_uiTwentySecondsTimer^(0+128)
  3383  0672  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3384  0673  0008               	return
  3385  0674                     __end_of_clearTwentySecondsTimer:	
  3386                           
  3387                           	psect	text845
  3388  052E                     __ptext845:	
  3389 ;; =============== function _clearPinPortAndTimer ends ============
  3390                           
  3391                           
  3392 ;; *************** function _getAdOriginaCh4Value *****************
  3393 ;; Defined at:
  3394 ;;		line 229 in file "D:\develop\190625\AK7030-OTP\common.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2   38[BANK0 ] unsigned int 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 60/0
  3405 ;;		On exit  : 160/0
  3406 ;;		Unchanged: FFE00/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       2       0       0       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0
  3411 ;;      Totals:         0       2       0       0       0
  3412 ;;Total ram usage:        2 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    3
  3415 ;; This function calls:
  3416 ;;		_Filter
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421  052E                     _getAdOriginaCh4Value:	
  3422                           
  3423                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  3424                           
  3425                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3426  052E  30C6               	movlw	_uiSampleChannelFourth& (0+255)
  3427  052F  00A0               	movwf	?_Filter
  3428  0530  01A1               	clrf	?_Filter+1
  3429  0531  254C               	fcall	_Filter
  3430  0532  0821               	movf	?_Filter+1,w
  3431  0533  00C7               	movwf	?_getAdOriginaCh4Value+1
  3432  0534  0820               	movf	?_Filter,w
  3433  0535  00C6               	movwf	?_getAdOriginaCh4Value
  3434  0536  0008               	return
  3435  0537                     __end_of_getAdOriginaCh4Value:	
  3436  0537                     __ptext846:	
  3437 ;; =============== function _getAdOriginaCh4Value ends ============
  3438                           
  3439                           
  3440 ;; *************** function _getAdOriginalCh1Value *****************
  3441 ;; Defined at:
  3442 ;;		line 217 in file "D:\develop\190625\AK7030-OTP\common.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2   38[BANK0 ] unsigned int 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 40/0
  3453 ;;		On exit  : 160/0
  3454 ;;		Unchanged: FFE00/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       2       0       0       0
  3457 ;;      Locals:         0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         0       2       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    3
  3463 ;; This function calls:
  3464 ;;		_Filter
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469  0537                     _getAdOriginalCh1Value:	
  3470                           
  3471                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  3472                           
  3473                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3474  0537  30AE               	movlw	_uiSampleChannelFirst& (0+255)
  3475  0538  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0539  00A0               	movwf	?_Filter
  3477  053A  01A1               	clrf	?_Filter+1
  3478  053B  254C               	fcall	_Filter
  3479  053C  0821               	movf	?_Filter+1,w
  3480  053D  00C7               	movwf	?_getAdOriginalCh1Value+1
  3481  053E  0820               	movf	?_Filter,w
  3482  053F  00C6               	movwf	?_getAdOriginalCh1Value
  3483  0540  0008               	return
  3484  0541                     __end_of_getAdOriginalCh1Value:	
  3485  0541                     __ptext847:	
  3486 ;; =============== function _getAdOriginalCh1Value ends ============
  3487                           
  3488                           
  3489 ;; *************** function _getAdOriginalCh14Value *****************
  3490 ;; Defined at:
  3491 ;;		line 240 in file "D:\develop\190625\AK7030-OTP\common.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  2   38[BANK0 ] unsigned int 
  3498 ;; Registers used:
  3499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 40/0
  3502 ;;		On exit  : 160/0
  3503 ;;		Unchanged: FFE00/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       2       0       0       0
  3506 ;;      Locals:         0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0
  3508 ;;      Totals:         0       2       0       0       0
  3509 ;;Total ram usage:        2 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    3
  3512 ;; This function calls:
  3513 ;;		_Filter
  3514 ;; This function is called by:
  3515 ;;		_main
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518  0541                     _getAdOriginalCh14Value:	
  3519                           
  3520                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  3521                           
  3522                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3523  0541  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  3524  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0543  00A0               	movwf	?_Filter
  3526  0544  3001               	movlw	1
  3527  0545  00A1               	movwf	?_Filter+1
  3528  0546  254C               	fcall	_Filter
  3529  0547  0821               	movf	?_Filter+1,w
  3530  0548  00C7               	movwf	?_getAdOriginalCh14Value+1
  3531  0549  0820               	movf	?_Filter,w
  3532  054A  00C6               	movwf	?_getAdOriginalCh14Value
  3533  054B  0008               	return
  3534  054C                     __end_of_getAdOriginalCh14Value:	
  3535  054C                     __ptext853:	
  3536 ;; =============== function _getAD_ConvertFlag ends ============
  3537                           
  3538                           
  3539 ;; *************** function _Filter *****************
  3540 ;; Defined at:
  3541 ;;		line 51 in file "D:\develop\190625\AK7030-OTP\common.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3544 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  cir             2   34[BANK0 ] int 
  3547 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3548 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3549 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3550 ;;  i               1   37[BANK0 ] unsigned char 
  3551 ;;  j               1   36[BANK0 ] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    0[BANK0 ] unsigned int 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3556 ;; Tracked objects:
  3557 ;;		On entry : 60/0
  3558 ;;		On exit  : 160/0
  3559 ;;		Unchanged: FFE00/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       2       0       0       0
  3562 ;;      Locals:         0      32       0       0       0
  3563 ;;      Temps:          0       4       0       0       0
  3564 ;;      Totals:         0      38       0       0       0
  3565 ;;Total ram usage:       38 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_getAdOriginalCh1Value
  3572 ;;		_getAdOriginaCh4Value
  3573 ;;		_getAdOriginalCh14Value
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576  054C                     _Filter:	
  3577                           
  3578                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3579  054C  01C4               	clrf	Filter@j
  3580                           
  3581                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  3582  054D  01BE               	clrf	Filter@filter_temp
  3583  054E  01BF               	clrf	Filter@filter_temp+1
  3584  054F  01C0               	clrf	Filter@filter_sum
  3585  0550  01C1               	clrf	Filter@filter_sum+1
  3586                           
  3587                           ;common.c: 57: unsigned int filter_buf[12];
  3588                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  3589  0551  01C2               	clrf	Filter@cir
  3590  0552  01C3               	clrf	Filter@cir+1
  3591  0553                     l4270:	
  3592                           
  3593                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  3594  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0555  0820               	movf	Filter@tmpValue,w
  3597  0556  0084               	movwf	4
  3598  0557  1783               	bsf	3,7
  3599  0558  1C21               	btfss	Filter@tmpValue+1,0
  3600  0559  1383               	bcf	3,7
  3601  055A  0800               	movf	0,w
  3602  055B  25ED  118A         	fcall	PL5	;call to abstracted procedure
  3603  055D  0D42               	rlf	Filter@cir,w
  3604  055E  3E26               	addlw	Filter@filter_buf& (0+255)
  3605  055F  0084               	movwf	4
  3606  0560  0822               	movf	??_Filter,w
  3607  0561  1383               	bcf	3,7	;select IRP bank0
  3608  0562  0080               	movwf	0
  3609  0563  0A84               	incf	4,f
  3610  0564  0823               	movf	??_Filter+1,w
  3611  0565  0080               	movwf	0
  3612  0566  3002               	movlw	2
  3613  0567  07A0               	addwf	Filter@tmpValue,f
  3614  0568  1803               	skipnc
  3615  0569  0AA1               	incf	Filter@tmpValue+1,f
  3616  056A  0AC2               	incf	Filter@cir,f
  3617  056B  1903               	skipnz
  3618  056C  0AC3               	incf	Filter@cir+1,f
  3619  056D  0843               	movf	Filter@cir+1,w
  3620  056E  3A80               	xorlw	128
  3621  056F  00FF               	movwf	127
  3622  0570  3080               	movlw	128
  3623  0571  027F               	subwf	127,w
  3624  0572  1D03               	skipz
  3625  0573  2D76               	goto	u1305
  3626  0574  300C               	movlw	12
  3627  0575  0242               	subwf	Filter@cir,w
  3628  0576                     u1305:	
  3629  0576  1C03               	skipc
  3630  0577  2D53               	goto	l4270
  3631                           
  3632                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3633  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0579  1303               	bcf	3,6	;RP1=0, select bank0
  3635  057A  01C4               	clrf	Filter@j
  3636  057B                     l4284:	
  3637                           
  3638                           ;common.c: 64: {
  3639                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3640  057B  01C5               	clrf	Filter@i
  3641  057C                     l4292:	
  3642  057C  01A3               	clrf	??_Filter+1
  3643  057D  0844               	movf	Filter@j,w
  3644  057E  3C0B               	sublw	11
  3645  057F  00A2               	movwf	??_Filter
  3646  0580  1C03               	skipc
  3647  0581  03A3               	decf	??_Filter+1,f
  3648  0582  0823               	movf	??_Filter+1,w
  3649  0583  3A80               	xorlw	128
  3650  0584  3C80               	sublw	128
  3651  0585  1D03               	skipz
  3652  0586  2D89               	goto	u1325
  3653  0587  0822               	movf	??_Filter,w
  3654  0588  0245               	subwf	Filter@i,w
  3655  0589                     u1325:	
  3656  0589  1803               	btfsc	3,0
  3657  058A  2DBE               	goto	l4294
  3658                           
  3659                           ;common.c: 66: {
  3660                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3661  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3662  058C  1303               	bcf	3,6	;RP1=0, select bank0
  3663  058D  1003               	clrc
  3664  058E  25E3  118A         	fcall	PL3	;call to abstracted procedure
  3665  0590  25F3  118A         	fcall	PL6	;call to abstracted procedure
  3666  0592  0800               	movf	0,w
  3667  0593  00A4               	movwf	??_Filter+2
  3668  0594  0A84               	incf	4,f
  3669  0595  0800               	movf	0,w
  3670  0596  00A5               	movwf	??_Filter+3
  3671  0597  0823               	movf	??_Filter+1,w
  3672  0598  0225               	subwf	??_Filter+3,w
  3673  0599  1D03               	skipz
  3674  059A  2D9D               	goto	u1315
  3675  059B  0822               	movf	??_Filter,w
  3676  059C  0224               	subwf	??_Filter+2,w
  3677  059D                     u1315:	
  3678  059D  1803               	skipnc
  3679  059E  2DBC               	goto	l4290
  3680                           
  3681                           ;common.c: 68: {
  3682                           ;common.c: 70: filter_temp = filter_buf[i];
  3683  059F  1003               	clrc
  3684  05A0  0D45               	rlf	Filter@i,w
  3685  05A1  3E26               	addlw	Filter@filter_buf& (0+255)
  3686  05A2  0084               	movwf	4
  3687  05A3  0800               	movf	0,w
  3688  05A4  00BE               	movwf	Filter@filter_temp
  3689  05A5  0A84               	incf	4,f
  3690  05A6  0800               	movf	0,w
  3691  05A7  00BF               	movwf	Filter@filter_temp+1
  3692                           
  3693                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3694  05A8  25F3  118A         	fcall	PL6	;call to abstracted procedure
  3695  05AA  0800               	movf	0,w
  3696  05AB  25ED  118A         	fcall	PL5	;call to abstracted procedure
  3697  05AD  0D45               	rlf	Filter@i,w
  3698  05AE  3E26               	addlw	Filter@filter_buf& (0+255)
  3699  05AF  0084               	movwf	4
  3700  05B0  0822               	movf	??_Filter,w
  3701  05B1  0080               	movwf	0
  3702  05B2  0A84               	incf	4,f
  3703  05B3  0823               	movf	??_Filter+1,w
  3704  05B4  0080               	movwf	0
  3705                           
  3706                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3707  05B5  25F3  118A         	fcall	PL6	;call to abstracted procedure
  3708  05B7  083E               	movf	Filter@filter_temp,w
  3709  05B8  0080               	movwf	0
  3710  05B9  0A84               	incf	4,f
  3711  05BA  083F               	movf	Filter@filter_temp+1,w
  3712  05BB  0080               	movwf	0
  3713  05BC                     l4290:	
  3714  05BC  0AC5               	incf	Filter@i,f
  3715  05BD  2D7C               	goto	l4292
  3716  05BE                     l4294:	
  3717  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3718  05BF  300B               	movlw	11
  3719  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3720  05C1  0AC4               	incf	Filter@j,f
  3721  05C2  0244               	subwf	Filter@j,w
  3722  05C3  1C03               	skipc
  3723  05C4  2D7B               	goto	l4284
  3724                           
  3725                           ;common.c: 75: }
  3726                           ;common.c: 76: }
  3727                           ;common.c: 77: }
  3728                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3729  05C5  3002               	movlw	2
  3730  05C6  00C5               	movwf	Filter@i
  3731                           
  3732                           ;common.c: 80: {
  3733                           ;common.c: 81: filter_sum += filter_buf[i];
  3734  05C7  1003               	clrc
  3735  05C8                     L21:	
  3736  05C8  25E3  118A         	fcall	PL3	;call to abstracted procedure
  3737  05CA  0822               	movf	??_Filter,w
  3738  05CB  07C0               	addwf	Filter@filter_sum,f
  3739  05CC  1803               	skipnc
  3740  05CD  0AC1               	incf	Filter@filter_sum+1,f
  3741  05CE  0823               	movf	??_Filter+1,w
  3742  05CF  07C1               	addwf	Filter@filter_sum+1,f
  3743  05D0  300A               	movlw	10
  3744  05D1  0AC5               	incf	Filter@i,f
  3745  05D2  0245               	subwf	Filter@i,w
  3746  05D3  1C03               	skipc
  3747  05D4  2DC8               	goto	L21
  3748                           
  3749                           ;common.c: 82: }
  3750                           ;common.c: 84: return (filter_sum >> 3);
  3751  05D5  0841               	movf	Filter@filter_sum+1,w
  3752  05D6  00A1               	movwf	?_Filter+1
  3753  05D7  0840               	movf	Filter@filter_sum,w
  3754  05D8  00A0               	movwf	?_Filter
  3755  05D9  1003               	clrc
  3756  05DA  0CA1               	rrf	?_Filter+1,f
  3757  05DB  0CA0               	rrf	?_Filter,f
  3758  05DC  1003               	clrc
  3759  05DD  0CA1               	rrf	?_Filter+1,f
  3760  05DE  0CA0               	rrf	?_Filter,f
  3761  05DF  1003               	clrc
  3762  05E0  0CA1               	rrf	?_Filter+1,f
  3763  05E1  0CA0               	rrf	?_Filter,f
  3764  05E2  0008               	return
  3765  05E3                     __end_of_Filter:	
  3766  05E3                     PL3:	
  3767  05E3  0D45               	rlf	Filter@i,w
  3768  05E4  3E26               	addlw	Filter@filter_buf& (0+255)
  3769  05E5  0084               	movwf	4
  3770  05E6  1383               	bcf	3,7	;select IRP bank0
  3771  05E7  0800               	movf	0,w
  3772  05E8  00A2               	movwf	??_Filter
  3773  05E9  0A84               	incf	4,f
  3774  05EA  0800               	movf	0,w
  3775  05EB  00A3               	movwf	??_Filter+1
  3776  05EC  0008               	return
  3777  05ED                     PL5:	
  3778  05ED  00A2               	movwf	??_Filter
  3779  05EE  0A84               	incf	4,f
  3780  05EF  0800               	movf	0,w
  3781  05F0  00A3               	movwf	??_Filter+1
  3782  05F1  1003               	clrc
  3783  05F2  0008               	return
  3784  05F3                     PL6:	
  3785  05F3  1003               	clrc
  3786  05F4  0D45               	rlf	Filter@i,w
  3787  05F5  3E02               	addlw	2
  3788  05F6  3E26               	addlw	Filter@filter_buf& (0+255)
  3789  05F7  0084               	movwf	4
  3790  05F8  0008               	return
  3791                           
  3792                           	psect	text848
  3793  05F9                     __ptext848:	
  3794 ;; =============== function _getAdOriginalCh14Value ends ============
  3795                           
  3796                           
  3797 ;; *************** function _process_AD_Converter_Value *****************
  3798 ;; Defined at:
  3799 ;;		line 251 in file "D:\develop\190625\AK7030-OTP\common.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;		None               void
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 40/0
  3811 ;;		Unchanged: FFF9F/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3813 ;;      Params:         0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0
  3816 ;;      Totals:         0       0       0       0       0
  3817 ;;Total ram usage:        0 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    3
  3820 ;; This function calls:
  3821 ;;		_getAD_ConvertFlag
  3822 ;;		_setAD_ConvertFlag
  3823 ;;		_AD_Sample
  3824 ;;		_adc_test_init
  3825 ;;		_adc_start
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830  05F9                     _process_AD_Converter_Value:	
  3831                           
  3832                           ;common.c: 252: if(getAD_ConvertFlag())
  3833                           
  3834                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3835  05F9  2617  118A         	fcall	_getAD_ConvertFlag
  3836  05FB  3A00               	xorlw	0
  3837  05FC  1903               	skipnz
  3838  05FD  0008               	return
  3839                           
  3840                           ;common.c: 253: {
  3841                           ;common.c: 254: setAD_ConvertFlag(0);
  3842  05FE  3000               	movlw	0
  3843  05FF  261B  118A         	fcall	_setAD_ConvertFlag
  3844                           
  3845                           ;common.c: 255: AD_Sample();
  3846  0601  2620  118A         	fcall	_AD_Sample
  3847                           
  3848                           ;common.c: 256: if(5 == sampleChannelSelect)
  3849  0603  086E               	movf	_sampleChannelSelect,w
  3850  0604  3A05               	xorlw	5
  3851  0605  1D03               	skipz
  3852  0606  2E0B               	goto	l4440
  3853                           
  3854                           ;common.c: 257: adc_test_init(5,3);
  3855  0607  3003               	movlw	3
  3856  0608  00A0               	movwf	?_adc_test_init
  3857  0609  3005               	movlw	5
  3858  060A  2E14               	goto	L20
  3859  060B                     l4440:	
  3860                           
  3861                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3862  060B  0B6E               	decfsz	_sampleChannelSelect,w
  3863  060C  2E11               	goto	l4444
  3864                           
  3865                           ;common.c: 259: adc_test_init(1,3);
  3866  060D  3003               	movlw	3
  3867  060E  00A0               	movwf	?_adc_test_init
  3868  060F  3001               	movlw	1
  3869  0610  2E14               	goto	L20
  3870  0611                     l4444:	
  3871                           
  3872                           ;common.c: 260: else
  3873                           ;common.c: 261: adc_test_init(14,3);
  3874  0611  3003               	movlw	3
  3875  0612  00A0               	movwf	?_adc_test_init
  3876  0613  300E               	movlw	14
  3877  0614                     L20:	
  3878  0614  263E  118A         	fcall	_adc_test_init
  3879                           
  3880                           ;common.c: 263: adc_start();
  3881  0616  2E53               	ljmp	l4200
  3882  0617                     __end_of_process_AD_Converter_Value:	
  3883  0617                     __ptext852:	
  3884 ;; =============== function _setAD_ConvertFlag ends ============
  3885                           
  3886                           
  3887 ;; *************** function _getAD_ConvertFlag *****************
  3888 ;; Defined at:
  3889 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\common.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 60/20
  3901 ;;		Unchanged: FFF9F/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0
  3906 ;;      Totals:         0       0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    2
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_process_AD_Converter_Value
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916  0617                     _getAD_ConvertFlag:	
  3917                           
  3918                           ;common.c: 201: return adc_convert_flag;
  3919                           
  3920                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3921  0617  1683               	bsf	3,5	;RP0=1, select bank1
  3922  0618  1303               	bcf	3,6	;RP1=0, select bank1
  3923  0619  0827               	movf	_adc_convert_flag^(0+128),w
  3924  061A  0008               	return
  3925  061B                     __end_of_getAD_ConvertFlag:	
  3926  061B                     __ptext851:	
  3927 ;; =============== function _AD_Sample ends ============
  3928                           
  3929                           
  3930 ;; *************** function _setAD_ConvertFlag *****************
  3931 ;; Defined at:
  3932 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  flag            1    wreg     unsigned char 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  flag            1    0[BANK0 ] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;		None               void
  3939 ;; Registers used:
  3940 ;;		wreg
  3941 ;; Tracked objects:
  3942 ;;		On entry : 60/20
  3943 ;;		On exit  : 60/20
  3944 ;;		Unchanged: FFF9F/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         0       0       0       0       0
  3947 ;;      Locals:         0       1       0       0       0
  3948 ;;      Temps:          0       0       0       0       0
  3949 ;;      Totals:         0       1       0       0       0
  3950 ;;Total ram usage:        1 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    2
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_process_AD_Converter_Value
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959  061B                     _setAD_ConvertFlag:	
  3960                           
  3961                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3962                           ;setAD_ConvertFlag@flag stored from wreg
  3963  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3964  061C  00A0               	movwf	setAD_ConvertFlag@flag
  3965                           
  3966                           ;common.c: 207: adc_convert_flag = flag;
  3967  061D  1683               	bsf	3,5	;RP0=1, select bank1
  3968  061E  00A7               	movwf	_adc_convert_flag^(0+128)
  3969  061F  0008               	return
  3970  0620                     __end_of_setAD_ConvertFlag:	
  3971  0620                     __ptext850:	
  3972 ;; =============== function _clearAllTimer ends ============
  3973                           
  3974                           
  3975 ;; *************** function _AD_Sample *****************
  3976 ;; Defined at:
  3977 ;;		line 277 in file "D:\develop\190625\AK7030-OTP\common.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 60/20
  3988 ;;		On exit  : 60/0
  3989 ;;		Unchanged: FFF9F/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    2
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_process_AD_Converter_Value
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004  0620                     _AD_Sample:	
  4005                           
  4006                           ;common.c: 278: if(sampleTimes < 12)
  4007                           
  4008                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  4009  0620  300C               	movlw	12
  4010  0621  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0622  0248               	subwf	_sampleTimes,w
  4012  0623  1803               	skipnc
  4013  0624  0008               	return
  4014  0625  300C               	movlw	12
  4015                           
  4016                           ;common.c: 279: {
  4017                           ;common.c: 300: sampleTimes++;
  4018  0626  0AC8               	incf	_sampleTimes,f
  4019                           
  4020                           ;common.c: 302: if(sampleTimes >= 12)
  4021  0627  0248               	subwf	_sampleTimes,w
  4022  0628  1C03               	skipc
  4023  0629  0008               	return
  4024                           
  4025                           ;common.c: 303: {
  4026                           ;common.c: 304: sampleTimes = 0;
  4027  062A  01C8               	clrf	_sampleTimes
  4028                           
  4029                           ;common.c: 306: if(sampleChannelSelect == 14)
  4030  062B  086E               	movf	_sampleChannelSelect,w
  4031  062C  3A0E               	xorlw	14
  4032  062D  1D03               	skipz
  4033  062E  2E32               	goto	l4380
  4034                           
  4035                           ;common.c: 307: {
  4036                           ;common.c: 310: sampleChannelSelect = 1;
  4037  062F  01EE               	clrf	_sampleChannelSelect
  4038  0630  0AEE               	incf	_sampleChannelSelect,f
  4039                           
  4040                           ;common.c: 311: }
  4041  0631  0008               	return
  4042  0632                     l4380:	
  4043                           
  4044                           ;common.c: 312: else if(sampleChannelSelect == 5)
  4045  0632  086E               	movf	_sampleChannelSelect,w
  4046  0633  3A05               	xorlw	5
  4047  0634  1D03               	skipz
  4048  0635  2E39               	goto	l4384
  4049  0636                     l4382:	
  4050                           
  4051                           ;common.c: 313: {
  4052                           ;common.c: 315: sampleChannelSelect = 14;
  4053  0636  300E               	movlw	14
  4054  0637  00EE               	movwf	_sampleChannelSelect
  4055                           
  4056                           ;common.c: 316: }
  4057  0638  0008               	return
  4058  0639                     l4384:	
  4059                           
  4060                           ;common.c: 317: else if(sampleChannelSelect == 1)
  4061  0639  0B6E               	decfsz	_sampleChannelSelect,w
  4062  063A  2E36               	goto	l4382
  4063                           
  4064                           ;common.c: 318: {
  4065                           ;common.c: 320: sampleChannelSelect = 5;
  4066  063B  3005               	movlw	5
  4067  063C  00EE               	movwf	_sampleChannelSelect
  4068                           
  4069                           ;common.c: 321: }
  4070  063D  0008               	return
  4071  063E                     __end_of_AD_Sample:	
  4072  063E                     __ptext866:	
  4073 ;; =============== function _dac_init ends ============
  4074                           
  4075                           
  4076 ;; *************** function _adc_test_init *****************
  4077 ;; Defined at:
  4078 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  channel         1    wreg     unsigned char 
  4081 ;;  ref             1    0[BANK0 ] unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  channel         1    2[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 60/0
  4090 ;;		On exit  : 60/20
  4091 ;;		Unchanged: FFF9F/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       1       0       0       0
  4094 ;;      Locals:         0       1       0       0       0
  4095 ;;      Temps:          0       1       0       0       0
  4096 ;;      Totals:         0       3       0       0       0
  4097 ;;Total ram usage:        3 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    2
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;;		_process_AD_Converter_Value
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107  063E                     _adc_test_init:	
  4108                           
  4109                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  4110                           ;adc_test_init@channel stored from wreg
  4111  063E  00A2               	movwf	adc_test_init@channel
  4112                           
  4113                           ;periph.c: 86: ADCON0 = 0x00;
  4114  063F  019F               	clrf	31	;volatile
  4115                           
  4116                           ;periph.c: 87: ADCON0|=channel<<2;
  4117  0640  00A1               	movwf	??_adc_test_init
  4118  0641  1003               	clrc
  4119  0642  0DA1               	rlf	??_adc_test_init,f
  4120  0643  1003               	clrc
  4121  0644  0D21               	rlf	??_adc_test_init,w
  4122  0645  049F               	iorwf	31,f	;volatile
  4123                           
  4124                           ;periph.c: 88: ADCON1|=ref<<6;
  4125  0646  0820               	movf	adc_test_init@ref,w
  4126  0647  00A1               	movwf	??_adc_test_init
  4127  0648  0CA1               	rrf	??_adc_test_init,f
  4128  0649  0CA1               	rrf	??_adc_test_init,f
  4129  064A  0C21               	rrf	??_adc_test_init,w
  4130  064B  39C0               	andlw	192
  4131  064C  1683               	bsf	3,5	;RP0=1, select bank1
  4132  064D  049F               	iorwf	31,f	;volatile
  4133                           
  4134                           ;periph.c: 89: ADON=1;
  4135  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4136  064F  141F               	bsf	31,0
  4137                           
  4138                           ;periph.c: 90: ADIE=1;
  4139  0650  1683               	bsf	3,5	;RP0=1, select bank1
  4140  0651  150D               	bsf	13,2
  4141  0652  0008               	return
  4142  0653                     __end_of_adc_test_init:	
  4143  0653                     __ptext862:	
  4144 ;; =============== function _isPermitSampleTime ends ============
  4145                           
  4146                           
  4147 ;; *************** function _adc_start *****************
  4148 ;; Defined at:
  4149 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;		None               void
  4156 ;; Registers used:
  4157 ;;		None
  4158 ;; Tracked objects:
  4159 ;;		On entry : 60/20
  4160 ;;		On exit  : 60/0
  4161 ;;		Unchanged: FFF9F/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0
  4166 ;;      Totals:         0       0       0       0       0
  4167 ;;Total ram usage:        0 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    2
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_main
  4174 ;;		_process_AD_Converter_Value
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177  0653                     _adc_start:	
  4178  0653                     l4200:	
  4179                           ; Regs used in _adc_start: []
  4180                           
  4181                           
  4182                           ;periph.c: 101: GO=1;
  4183  0653  1283               	bcf	3,5	;RP0=0, select bank0
  4184  0654  149F               	bsf	31,1
  4185  0655  0008               	return
  4186  0656                     __end_of_adc_start:	
  4187                           
  4188                           	psect	text854
  4189  076D                     __ptext854:	
  4190 ;; =============== function _Filter ends ============
  4191                           
  4192                           
  4193 ;; *************** function _isFinishedThreeHoursTimer *****************
  4194 ;; Defined at:
  4195 ;;		line 417 in file "D:\develop\190625\AK7030-OTP\common.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      unsigned char 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 60/0
  4206 ;;		On exit  : 60/20
  4207 ;;		Unchanged: FFF9F/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4209 ;;      Params:         0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0
  4212 ;;      Totals:         0       0       0       0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    2
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222  076D                     _isFinishedThreeHoursTimer:	
  4223                           
  4224                           ;common.c: 418: if(uiSmallTimer == 0)
  4225                           
  4226                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  4227  076D  1683               	bsf	3,5	;RP0=1, select bank1
  4228  076E  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4229  076F  0422               	iorwf	_uiSmallTimer^(0+128),w
  4230  0770  1903               	btfsc	3,2
  4231                           
  4232                           ;common.c: 419: return 1;
  4233  0771  3401               	retlw	1
  4234                           
  4235                           ;common.c: 420: else
  4236                           ;common.c: 421: return 0;
  4237  0772  3400               	retlw	0
  4238  0773                     __end_of_isFinishedThreeHoursTimer:	
  4239                           
  4240                           	psect	text855
  4241  06D6                     __ptext855:	
  4242 ;; =============== function _isFinishedThreeHoursTimer ends ============
  4243                           
  4244                           
  4245 ;; *************** function _startThreeHoursTimer *****************
  4246 ;; Defined at:
  4247 ;;		line 382 in file "D:\develop\190625\AK7030-OTP\common.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;		None               void
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0
  4256 ;; Tracked objects:
  4257 ;;		On entry : 60/0
  4258 ;;		On exit  : 60/20
  4259 ;;		Unchanged: FFF9F/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4261 ;;      Params:         0       2       0       0       0
  4262 ;;      Locals:         0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0
  4264 ;;      Totals:         0       2       0       0       0
  4265 ;;Total ram usage:        2 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    2
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_main
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274  06D6                     _startThreeHoursTimer:	
  4275                           
  4276                           ;common.c: 383: if(0 == uiSmallTimer)
  4277                           
  4278                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  4279  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  4280  06D7  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4281  06D8  0422               	iorwf	_uiSmallTimer^(0+128),w
  4282  06D9  1D03               	skipz
  4283  06DA  0008               	return
  4284                           
  4285                           ;common.c: 384: uiSmallTimer = uiSetTime;
  4286  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  4287  06DC  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  4288  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  4289  06DE  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  4290  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  4291  06E0  0820               	movf	startThreeHoursTimer@uiSetTime,w
  4292  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  4293  06E2  00A2               	movwf	_uiSmallTimer^(0+128)
  4294  06E3  0008               	return
  4295  06E4                     __end_of_startThreeHoursTimer:	
  4296                           
  4297                           	psect	text856
  4298  0773                     __ptext856:	
  4299 ;; =============== function _startThreeHoursTimer ends ============
  4300                           
  4301                           
  4302 ;; *************** function _isFinishedTwentySecondsTimer *****************
  4303 ;; Defined at:
  4304 ;;		line 400 in file "D:\develop\190625\AK7030-OTP\common.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      unsigned char 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 60/0
  4315 ;;		On exit  : 60/20
  4316 ;;		Unchanged: FFF9F/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    2
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331  0773                     _isFinishedTwentySecondsTimer:	
  4332                           
  4333                           ;common.c: 401: if(0 == uiTwentySecondsTimer)
  4334                           
  4335                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4336  0773  1683               	bsf	3,5	;RP0=1, select bank1
  4337  0774  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4338  0775  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4339  0776  1903               	btfsc	3,2
  4340                           
  4341                           ;common.c: 402: return 1;
  4342  0777  3401               	retlw	1
  4343                           
  4344                           ;common.c: 403: else
  4345                           ;common.c: 404: return 0;
  4346  0778  3400               	retlw	0
  4347  0779                     __end_of_isFinishedTwentySecondsTimer:	
  4348                           
  4349                           	psect	text857
  4350  0713                     __ptext857:	
  4351 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4352                           
  4353                           
  4354 ;; *************** function _startTwentySecondsTimer *****************
  4355 ;; Defined at:
  4356 ;;		line 393 in file "D:\develop\190625\AK7030-OTP\common.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;		None               void
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 160/0
  4367 ;;		On exit  : 160/20
  4368 ;;		Unchanged: FFE9F/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    2
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383  0713                     _startTwentySecondsTimer:	
  4384                           
  4385                           ;common.c: 394: if( 0 == uiTwentySecondsTimer)
  4386                           
  4387                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  4388  0713  1683               	bsf	3,5	;RP0=1, select bank1
  4389  0714  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4390  0715  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4391  0716  1D03               	skipz
  4392  0717  0008               	return
  4393                           
  4394                           ;common.c: 395: uiTwentySecondsTimer = 20;
  4395  0718  3014               	movlw	20
  4396  0719  00A4               	movwf	_uiTwentySecondsTimer^(0+128)
  4397  071A  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4398  071B  0008               	return
  4399  071C                     __end_of_startTwentySecondsTimer:	
  4400                           
  4401                           	psect	text858
  4402  0779                     __ptext858:	
  4403 ;; =============== function _startTwentySecondsTimer ends ============
  4404                           
  4405                           
  4406 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4407 ;; Defined at:
  4408 ;;		line 409 in file "D:\develop\190625\AK7030-OTP\common.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      unsigned char 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 60/0
  4419 ;;		On exit  : 60/20
  4420 ;;		Unchanged: FFF9F/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0
  4425 ;;      Totals:         0       0       0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    2
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435  0779                     _isFinishedTwelveHoursTimer:	
  4436                           
  4437                           ;common.c: 410: if(uiBigTimer == 0)
  4438                           
  4439                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4440  0779  1683               	bsf	3,5	;RP0=1, select bank1
  4441  077A  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4442  077B  0420               	iorwf	_uiBigTimer^(0+128),w
  4443  077C  1903               	btfsc	3,2
  4444                           
  4445                           ;common.c: 411: return 1;
  4446  077D  3401               	retlw	1
  4447                           
  4448                           ;common.c: 412: else
  4449                           ;common.c: 413: return 0;
  4450  077E  3400               	retlw	0
  4451  077F                     __end_of_isFinishedTwelveHoursTimer:	
  4452                           
  4453                           	psect	text859
  4454  06E4                     __ptext859:	
  4455 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4456                           
  4457                           
  4458 ;; *************** function _startTwelveHourTimer *****************
  4459 ;; Defined at:
  4460 ;;		line 354 in file "D:\develop\190625\AK7030-OTP\common.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;		None               void
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 60/0
  4471 ;;		On exit  : 60/20
  4472 ;;		Unchanged: FFF9F/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4474 ;;      Params:         0       2       0       0       0
  4475 ;;      Locals:         0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0
  4477 ;;      Totals:         0       2       0       0       0
  4478 ;;Total ram usage:        2 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    2
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487  06E4                     _startTwelveHourTimer:	
  4488                           
  4489                           ;common.c: 355: if(0 == uiBigTimer)
  4490                           
  4491                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4492  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  4493  06E5  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4494  06E6  0420               	iorwf	_uiBigTimer^(0+128),w
  4495  06E7  1D03               	skipz
  4496  06E8  0008               	return
  4497                           
  4498                           ;common.c: 356: uiBigTimer = uiSetTime;
  4499  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  4500  06EA  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4501  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  4502  06EC  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4503  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  4504  06EE  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4505  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  4506  06F0  00A0               	movwf	_uiBigTimer^(0+128)
  4507  06F1  0008               	return
  4508  06F2                     __end_of_startTwelveHourTimer:	
  4509                           
  4510                           	psect	text860
  4511  078D                     __ptext860:	
  4512 ;; =============== function _startTwelveHourTimer ends ============
  4513                           
  4514                           
  4515 ;; *************** function _clrSampeTime *****************
  4516 ;; Defined at:
  4517 ;;		line 435 in file "D:\develop\190625\AK7030-OTP\common.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;		None               void
  4524 ;; Registers used:
  4525 ;;		status,2
  4526 ;; Tracked objects:
  4527 ;;		On entry : 60/20
  4528 ;;		On exit  : 60/20
  4529 ;;		Unchanged: FFF9F/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0
  4534 ;;      Totals:         0       0       0       0       0
  4535 ;;Total ram usage:        0 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    2
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_main
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544  078D                     _clrSampeTime:	
  4545                           
  4546                           ;common.c: 436: timer.timer10msStopWatch = 0;
  4547                           
  4548                           ; Regs used in _clrSampeTime: [status,2]
  4549  078D  01A8               	clrf	_timer^(0+128)
  4550  078E  0008               	return
  4551  078F                     __end_of_clrSampeTime:	
  4552                           
  4553                           	psect	text861
  4554  077F                     __ptext861:	
  4555 ;; =============== function _clrSampeTime ends ============
  4556                           
  4557                           
  4558 ;; *************** function _isPermitSampleTime *****************
  4559 ;; Defined at:
  4560 ;;		line 425 in file "D:\develop\190625\AK7030-OTP\common.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      unsigned char 
  4567 ;; Registers used:
  4568 ;;		wreg
  4569 ;; Tracked objects:
  4570 ;;		On entry : 40/0
  4571 ;;		On exit  : 60/20
  4572 ;;		Unchanged: FFF9F/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    2
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587  077F                     _isPermitSampleTime:	
  4588                           
  4589                           ;common.c: 426: if(timer.timer10msStopWatch >= 10)
  4590                           
  4591                           ; Regs used in _isPermitSampleTime: [wreg]
  4592  077F  300A               	movlw	10
  4593  0780  1683               	bsf	3,5	;RP0=1, select bank1
  4594  0781  0228               	subwf	_timer^(0+128),w
  4595  0782  1803               	btfsc	3,0
  4596                           
  4597                           ;common.c: 427: {
  4598                           ;common.c: 428: return 1;
  4599  0783  3401               	retlw	1
  4600                           
  4601                           ;common.c: 430: else
  4602                           ;common.c: 431: return 0;
  4603  0784  3400               	retlw	0
  4604  0785                     __end_of_isPermitSampleTime:	
  4605                           
  4606                           	psect	text863
  4607  0766                     __ptext863:	
  4608 ;; =============== function _adc_start ends ============
  4609                           
  4610                           
  4611 ;; *************** function _op2_init *****************
  4612 ;; Defined at:
  4613 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;		None               void
  4620 ;; Registers used:
  4621 ;;		wreg
  4622 ;; Tracked objects:
  4623 ;;		On entry : 17F/20
  4624 ;;		On exit  : 17F/20
  4625 ;;		Unchanged: FFE80/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    2
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_main
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640  0766                     _op2_init:	
  4641                           
  4642                           ;periph.c: 52: OP2CON1=0x14;
  4643                           
  4644                           ; Regs used in _op2_init: [wreg]
  4645  0766  3014               	movlw	20
  4646  0767  009C               	movwf	28	;volatile
  4647                           
  4648                           ;periph.c: 54: OP2CON2=0x10;
  4649  0768  3010               	movlw	16
  4650  0769  009D               	movwf	29	;volatile
  4651                           
  4652                           ;periph.c: 55: OP2CON0=0x80;
  4653  076A  3080               	movlw	128
  4654  076B  009B               	movwf	27	;volatile
  4655  076C  0008               	return
  4656  076D                     __end_of_op2_init:	
  4657                           
  4658                           	psect	text864
  4659  06FE                     __ptext864:	
  4660 ;; =============== function _op2_init ends ============
  4661                           
  4662                           
  4663 ;; *************** function _op1_init *****************
  4664 ;; Defined at:
  4665 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;		None               void
  4672 ;; Registers used:
  4673 ;;		wreg
  4674 ;; Tracked objects:
  4675 ;;		On entry : 17F/20
  4676 ;;		On exit  : 17F/20
  4677 ;;		Unchanged: FFE80/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4679 ;;      Params:         0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    2
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692  06FE                     _op1_init:	
  4693                           
  4694                           ;periph.c: 33: OP1CON1=0x02;
  4695                           
  4696                           ; Regs used in _op1_init: [wreg]
  4697  06FE  3002               	movlw	2
  4698  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0700  009C               	movwf	28	;volatile
  4700                           
  4701                           ;periph.c: 34: OP1CON2=0xA0;
  4702  0701  30A0               	movlw	160
  4703  0702  009D               	movwf	29	;volatile
  4704                           
  4705                           ;periph.c: 35: OP1CON0=0x80;
  4706  0703  3080               	movlw	128
  4707  0704  009B               	movwf	27	;volatile
  4708                           
  4709                           ;periph.c: 38: TRISB3=1;
  4710  0705  1683               	bsf	3,5	;RP0=1, select bank1
  4711  0706  1586               	bsf	6,3
  4712                           
  4713                           ;periph.c: 40: TRISB5=0;
  4714  0707  1286               	bcf	6,5
  4715  0708  0008               	return
  4716  0709                     __end_of_op1_init:	
  4717                           
  4718                           	psect	text865
  4719  0785                     __ptext865:	
  4720 ;; =============== function _op1_init ends ============
  4721                           
  4722                           
  4723 ;; *************** function _dac_init *****************
  4724 ;; Defined at:
  4725 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;		None               void
  4732 ;; Registers used:
  4733 ;;		wreg
  4734 ;; Tracked objects:
  4735 ;;		On entry : 17F/20
  4736 ;;		On exit  : 17F/20
  4737 ;;		Unchanged: FFE80/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0
  4742 ;;      Totals:         0       0       0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    2
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_main
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752  0785                     _dac_init:	
  4753                           
  4754                           ;periph.c: 15: DACCON|=1;
  4755                           
  4756                           ; Regs used in _dac_init: [wreg]
  4757  0785  1407               	bsf	7,0	;volatile
  4758                           
  4759                           ;periph.c: 17: DACR0=0x0F;
  4760  0786  300F               	movlw	15
  4761  0787  0088               	movwf	8	;volatile
  4762                           
  4763                           ;periph.c: 18: DACCON|=(1)<<2;
  4764  0788  1507               	bsf	7,2	;volatile
  4765  0789  0008               	return
  4766  078A                     __end_of_dac_init:	
  4767                           
  4768                           	psect	text867
  4769  078A                     __ptext867:	
  4770 ;; =============== function _adc_test_init ends ============
  4771                           
  4772                           
  4773 ;; *************** function _timer1_interrupt_config *****************
  4774 ;; Defined at:
  4775 ;;		line 192 in file "D:\develop\190625\AK7030-OTP\common.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;		None               void
  4782 ;; Registers used:
  4783 ;;		None
  4784 ;; Tracked objects:
  4785 ;;		On entry : 17F/20
  4786 ;;		On exit  : 17F/20
  4787 ;;		Unchanged: FFE80/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4789 ;;      Params:         0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0
  4792 ;;      Totals:         0       0       0       0       0
  4793 ;;Total ram usage:        0 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    2
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_main
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802  078A                     _timer1_interrupt_config:	
  4803                           
  4804                           ;common.c: 193: GIE = 1;
  4805                           
  4806                           ; Regs used in _timer1_interrupt_config: []
  4807  078A  178B               	bsf	11,7
  4808                           
  4809                           ;common.c: 194: PEIE = 1;
  4810  078B  170B               	bsf	11,6
  4811  078C  0008               	return
  4812  078D                     __end_of_timer1_interrupt_config:	
  4813                           
  4814                           	psect	text868
  4815  0709                     __ptext868:	
  4816 ;; =============== function _timer1_interrupt_config ends ============
  4817                           
  4818                           
  4819 ;; *************** function _timer1_config *****************
  4820 ;; Defined at:
  4821 ;;		line 180 in file "D:\develop\190625\AK7030-OTP\common.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;		None               void
  4828 ;; Registers used:
  4829 ;;		wreg
  4830 ;; Tracked objects:
  4831 ;;		On entry : 17F/40
  4832 ;;		On exit  : 17F/20
  4833 ;;		Unchanged: FFE80/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4835 ;;      Params:         0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0
  4838 ;;      Totals:         0       0       0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    2
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848  0709                     _timer1_config:	
  4849                           
  4850                           ;common.c: 182: TMR1H=0xCF;
  4851                           
  4852                           ; Regs used in _timer1_config: [wreg]
  4853  0709  30CF               	movlw	207
  4854  070A  1303               	bcf	3,6	;RP1=0, select bank0
  4855  070B  008F               	movwf	15	;volatile
  4856                           
  4857                           ;common.c: 183: TMR1L=0x2C;
  4858  070C  302C               	movlw	44
  4859  070D  008E               	movwf	14	;volatile
  4860                           
  4861                           ;common.c: 184: T1CON=0xE1;
  4862  070E  30E1               	movlw	225
  4863  070F  0090               	movwf	16	;volatile
  4864                           
  4865                           ;common.c: 185: TMR1IE=1;
  4866  0710  1683               	bsf	3,5	;RP0=1, select bank1
  4867  0711  140C               	bsf	12,0
  4868  0712  0008               	return
  4869  0713                     __end_of_timer1_config:	
  4870                           
  4871                           	psect	text869
  4872  0736                     __ptext869:	
  4873 ;; =============== function _timer1_config ends ============
  4874                           
  4875                           
  4876 ;; *************** function _clock_config *****************
  4877 ;; Defined at:
  4878 ;;		line 172 in file "D:\develop\190625\AK7030-OTP\common.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;		None
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;		None               void
  4885 ;; Registers used:
  4886 ;;		wreg, status,2
  4887 ;; Tracked objects:
  4888 ;;		On entry : 17F/20
  4889 ;;		On exit  : 17F/40
  4890 ;;		Unchanged: FFE80/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4892 ;;      Params:         0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0
  4895 ;;      Totals:         0       0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    2
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_main
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905  0736                     _clock_config:	
  4906                           
  4907                           ;common.c: 174: CLKPR = 0x80;
  4908                           
  4909                           ; Regs used in _clock_config: [wreg+status,2]
  4910  0736  3080               	movlw	128
  4911  0737  1283               	bcf	3,5	;RP0=0, select bank2
  4912  0738  1703               	bsf	3,6	;RP1=1, select bank2
  4913  0739  0088               	movwf	8	;volatile
  4914                           
  4915                           ;common.c: 175: CLKPR = 0x00;
  4916  073A  0188               	clrf	8	;volatile
  4917  073B                     l1738:	
  4918                           ;common.c: 176: while(CLKPCE);
  4919                           
  4920  073B  1F88               	btfss	8,7
  4921  073C  0008               	return
  4922  073D  2F3B               	goto	l1738
  4923  073E                     __end_of_clock_config:	
  4924                           
  4925                           	psect	text870
  4926  071C                     __ptext870:	
  4927 ;; =============== function _clock_config ends ============
  4928                           
  4929                           
  4930 ;; *************** function _setPA6 *****************
  4931 ;; Defined at:
  4932 ;;		line 281 in file "D:\develop\190625\AK7030-OTP\main.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  bValue          1    wreg     unsigned char 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  bValue          1    0[BANK0 ] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;		None               void
  4939 ;; Registers used:
  4940 ;;		wreg
  4941 ;; Tracked objects:
  4942 ;;		On entry : 40/0
  4943 ;;		On exit  : 60/0
  4944 ;;		Unchanged: FFF9F/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         0       0       0       0       0
  4947 ;;      Locals:         0       1       0       0       0
  4948 ;;      Temps:          0       0       0       0       0
  4949 ;;      Totals:         0       1       0       0       0
  4950 ;;Total ram usage:        1 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    2
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959  071C                     _setPA6:	
  4960                           
  4961                           ; Regs used in _setPA6: [wreg]
  4962                           ;setPA6@bValue stored from wreg
  4963  071C  1283               	bcf	3,5	;RP0=0, select bank0
  4964  071D  00A0               	movwf	setPA6@bValue
  4965                           
  4966                           ;main.c: 282: if( bValue )
  4967  071E  0820               	movf	setPA6@bValue,w
  4968  071F  1903               	btfsc	3,2
  4969  0720  2F23               	goto	l723
  4970                           
  4971                           ;main.c: 284: PA6 = 1;
  4972  0721  1705               	bsf	5,6
  4973  0722  0008               	return
  4974  0723                     l723:	
  4975                           
  4976                           ;main.c: 288: else
  4977                           ;main.c: 290: PA6= 0;
  4978  0723  1305               	bcf	5,6
  4979  0724  0008               	return
  4980  0725                     __end_of_setPA6:	
  4981                           
  4982                           	psect	text871
  4983  073E                     __ptext871:	
  4984 ;; =============== function _setPA6 ends ============
  4985                           
  4986                           
  4987 ;; *************** function _setPA3 *****************
  4988 ;; Defined at:
  4989 ;;		line 235 in file "D:\develop\190625\AK7030-OTP\main.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  bValue          1    wreg     unsigned char 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  bValue          1    0[BANK0 ] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;		None               void
  4996 ;; Registers used:
  4997 ;;		wreg
  4998 ;; Tracked objects:
  4999 ;;		On entry : 60/0
  5000 ;;		On exit  : 60/0
  5001 ;;		Unchanged: FFF9F/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5003 ;;      Params:         0       0       0       0       0
  5004 ;;      Locals:         0       1       0       0       0
  5005 ;;      Temps:          0       0       0       0       0
  5006 ;;      Totals:         0       1       0       0       0
  5007 ;;Total ram usage:        1 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    2
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016  073E                     _setPA3:	
  5017                           
  5018                           ; Regs used in _setPA3: [wreg]
  5019                           ;setPA3@bValue stored from wreg
  5020  073E  00A0               	movwf	setPA3@bValue
  5021                           
  5022                           ;main.c: 236: if( bValue )
  5023  073F  0820               	movf	setPA3@bValue,w
  5024  0740  1903               	btfsc	3,2
  5025  0741  2F44               	goto	l713
  5026                           
  5027                           ;main.c: 238: PA3 = 1;
  5028  0742  1585               	bsf	5,3
  5029  0743  0008               	return
  5030  0744                     l713:	
  5031                           
  5032                           ;main.c: 242: else
  5033                           ;main.c: 244: PA3 = 0;
  5034  0744  1185               	bcf	5,3
  5035  0745  0008               	return
  5036  0746                     __end_of_setPA3:	
  5037                           
  5038                           	psect	text872
  5039  0746                     __ptext872:	
  5040 ;; =============== function _setPA3 ends ============
  5041                           
  5042                           
  5043 ;; *************** function _setPA2 *****************
  5044 ;; Defined at:
  5045 ;;		line 218 in file "D:\develop\190625\AK7030-OTP\main.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  bValue          1    wreg     unsigned char 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  bValue          1    0[BANK0 ] unsigned char 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;		None               void
  5052 ;; Registers used:
  5053 ;;		wreg
  5054 ;; Tracked objects:
  5055 ;;		On entry : 60/0
  5056 ;;		On exit  : 60/0
  5057 ;;		Unchanged: FFF9F/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5059 ;;      Params:         0       0       0       0       0
  5060 ;;      Locals:         0       1       0       0       0
  5061 ;;      Temps:          0       0       0       0       0
  5062 ;;      Totals:         0       1       0       0       0
  5063 ;;Total ram usage:        1 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    2
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_main
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072  0746                     _setPA2:	
  5073                           
  5074                           ; Regs used in _setPA2: [wreg]
  5075                           ;setPA2@bValue stored from wreg
  5076  0746  00A0               	movwf	setPA2@bValue
  5077                           
  5078                           ;main.c: 219: if( bValue )
  5079  0747  0820               	movf	setPA2@bValue,w
  5080  0748  1903               	btfsc	3,2
  5081  0749  2F4C               	goto	l708
  5082                           
  5083                           ;main.c: 221: PA2 = 1;
  5084  074A  1505               	bsf	5,2
  5085  074B  0008               	return
  5086  074C                     l708:	
  5087                           
  5088                           ;main.c: 225: else
  5089                           ;main.c: 227: PA2 = 0;
  5090  074C  1105               	bcf	5,2
  5091  074D  0008               	return
  5092  074E                     __end_of_setPA2:	
  5093                           
  5094                           	psect	text873
  5095  074E                     __ptext873:	
  5096 ;; =============== function _setPA2 ends ============
  5097                           
  5098                           
  5099 ;; *************** function _setPA1 *****************
  5100 ;; Defined at:
  5101 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\main.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  bValue          1    wreg     unsigned char 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  bValue          1    0[BANK0 ] unsigned char 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg
  5110 ;; Tracked objects:
  5111 ;;		On entry : 60/0
  5112 ;;		On exit  : 60/0
  5113 ;;		Unchanged: FFF9F/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5115 ;;      Params:         0       0       0       0       0
  5116 ;;      Locals:         0       1       0       0       0
  5117 ;;      Temps:          0       0       0       0       0
  5118 ;;      Totals:         0       1       0       0       0
  5119 ;;Total ram usage:        1 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    2
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_main
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128  074E                     _setPA1:	
  5129                           
  5130                           ; Regs used in _setPA1: [wreg]
  5131                           ;setPA1@bValue stored from wreg
  5132  074E  00A0               	movwf	setPA1@bValue
  5133                           
  5134                           ;main.c: 201: if( bValue )
  5135  074F  0820               	movf	setPA1@bValue,w
  5136  0750  1903               	btfsc	3,2
  5137  0751  2F54               	goto	l703
  5138                           
  5139                           ;main.c: 203: PA1 = 1;
  5140  0752  1485               	bsf	5,1
  5141  0753  0008               	return
  5142  0754                     l703:	
  5143                           
  5144                           ;main.c: 207: else
  5145                           ;main.c: 209: PA1 = 0;
  5146  0754  1085               	bcf	5,1
  5147  0755  0008               	return
  5148  0756                     __end_of_setPA1:	
  5149                           
  5150                           	psect	text874
  5151  0756                     __ptext874:	
  5152 ;; =============== function _setPA1 ends ============
  5153                           
  5154                           
  5155 ;; *************** function _setPA0 *****************
  5156 ;; Defined at:
  5157 ;;		line 183 in file "D:\develop\190625\AK7030-OTP\main.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  bValue          1    wreg     unsigned char 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  bValue          1    0[BANK0 ] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;		None               void
  5164 ;; Registers used:
  5165 ;;		wreg
  5166 ;; Tracked objects:
  5167 ;;		On entry : 60/0
  5168 ;;		On exit  : 60/0
  5169 ;;		Unchanged: FFF9F/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5171 ;;      Params:         0       0       0       0       0
  5172 ;;      Locals:         0       1       0       0       0
  5173 ;;      Temps:          0       0       0       0       0
  5174 ;;      Totals:         0       1       0       0       0
  5175 ;;Total ram usage:        1 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    2
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_main
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184  0756                     _setPA0:	
  5185                           
  5186                           ; Regs used in _setPA0: [wreg]
  5187                           ;setPA0@bValue stored from wreg
  5188  0756  00A0               	movwf	setPA0@bValue
  5189                           
  5190                           ;main.c: 184: if( bValue )
  5191  0757  0820               	movf	setPA0@bValue,w
  5192  0758  1903               	btfsc	3,2
  5193  0759  2F5C               	goto	l698
  5194                           
  5195                           ;main.c: 186: PA0 = 1;
  5196  075A  1405               	bsf	5,0
  5197  075B  0008               	return
  5198  075C                     l698:	
  5199                           
  5200                           ;main.c: 190: else
  5201                           ;main.c: 192: PA0 = 0;
  5202  075C  1005               	bcf	5,0
  5203  075D  0008               	return
  5204  075E                     __end_of_setPA0:	
  5205                           
  5206                           	psect	text875
  5207  075E                     __ptext875:	
  5208 ;; =============== function _setPA0 ends ============
  5209                           
  5210                           
  5211 ;; *************** function _setPB1 *****************
  5212 ;; Defined at:
  5213 ;;		line 166 in file "D:\develop\190625\AK7030-OTP\main.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  bValue          1    wreg     unsigned char 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  bValue          1    0[BANK0 ] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;		None               void
  5220 ;; Registers used:
  5221 ;;		wreg
  5222 ;; Tracked objects:
  5223 ;;		On entry : 60/0
  5224 ;;		On exit  : 60/0
  5225 ;;		Unchanged: FFF9F/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5227 ;;      Params:         0       0       0       0       0
  5228 ;;      Locals:         0       1       0       0       0
  5229 ;;      Temps:          0       0       0       0       0
  5230 ;;      Totals:         0       1       0       0       0
  5231 ;;Total ram usage:        1 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    2
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_main
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240  075E                     _setPB1:	
  5241                           
  5242                           ; Regs used in _setPB1: [wreg]
  5243                           ;setPB1@bValue stored from wreg
  5244  075E  00A0               	movwf	setPB1@bValue
  5245                           
  5246                           ;main.c: 167: if( bValue )
  5247  075F  0820               	movf	setPB1@bValue,w
  5248  0760  1903               	btfsc	3,2
  5249  0761  2F64               	goto	l693
  5250                           
  5251                           ;main.c: 169: PB1 = 1;
  5252  0762  1486               	bsf	6,1
  5253  0763  0008               	return
  5254  0764                     l693:	
  5255                           
  5256                           ;main.c: 173: else
  5257                           ;main.c: 175: PB0 = 1;
  5258  0764  1406               	bsf	6,0
  5259  0765  0008               	return
  5260  0766                     __end_of_setPB1:	
  5261                           
  5262                           	psect	text876
  5263  0725                     __ptext876:	
  5264 ;; =============== function _setPB1 ends ============
  5265                           
  5266                           
  5267 ;; *************** function _setPB0 *****************
  5268 ;; Defined at:
  5269 ;;		line 149 in file "D:\develop\190625\AK7030-OTP\main.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  bValue          1    wreg     unsigned char 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  bValue          1    0[BANK0 ] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;		None               void
  5276 ;; Registers used:
  5277 ;;		wreg
  5278 ;; Tracked objects:
  5279 ;;		On entry : 40/0
  5280 ;;		On exit  : 60/0
  5281 ;;		Unchanged: FFF9F/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5283 ;;      Params:         0       0       0       0       0
  5284 ;;      Locals:         0       1       0       0       0
  5285 ;;      Temps:          0       0       0       0       0
  5286 ;;      Totals:         0       1       0       0       0
  5287 ;;Total ram usage:        1 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    2
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296  0725                     _setPB0:	
  5297                           
  5298                           ; Regs used in _setPB0: [wreg]
  5299                           ;setPB0@bValue stored from wreg
  5300  0725  1283               	bcf	3,5	;RP0=0, select bank0
  5301  0726  00A0               	movwf	setPB0@bValue
  5302                           
  5303                           ;main.c: 150: if( bValue )
  5304  0727  0820               	movf	setPB0@bValue,w
  5305  0728  1903               	btfsc	3,2
  5306  0729  2F2C               	goto	l688
  5307                           
  5308                           ;main.c: 152: PB0 = 1;
  5309  072A  1406               	bsf	6,0
  5310  072B  0008               	return
  5311  072C                     l688:	
  5312                           
  5313                           ;main.c: 156: else
  5314                           ;main.c: 158: PB0 = 0;
  5315  072C  1006               	bcf	6,0
  5316  072D  0008               	return
  5317  072E                     __end_of_setPB0:	
  5318                           
  5319                           	psect	text877
  5320  06A7                     __ptext877:	
  5321 ;; =============== function _setPB0 ends ============
  5322                           
  5323                           
  5324 ;; *************** function _initPin *****************
  5325 ;; Defined at:
  5326 ;;		line 123 in file "D:\develop\190625\AK7030-OTP\main.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;		None               void
  5333 ;; Registers used:
  5334 ;;		None
  5335 ;; Tracked objects:
  5336 ;;		On entry : 160/20
  5337 ;;		On exit  : 160/60
  5338 ;;		Unchanged: FFE9F/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0
  5343 ;;      Totals:         0       0       0       0       0
  5344 ;;Total ram usage:        0 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    2
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_main
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353  06A7                     _initPin:	
  5354                           
  5355                           ;main.c: 125: PB6 = 1;
  5356                           
  5357                           ; Regs used in _initPin: []
  5358  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  5359  06A8  1706               	bsf	6,6
  5360                           
  5361                           ;main.c: 126: PBOD6 = 1;
  5362  06A9  1683               	bsf	3,5	;RP0=1, select bank3
  5363  06AA  1703               	bsf	3,6	;RP1=1, select bank3
  5364  06AB  1708               	bsf	8,6
  5365                           
  5366                           ;main.c: 130: PA0 = 0;
  5367  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  5368  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  5369  06AE  1005               	bcf	5,0
  5370                           
  5371                           ;main.c: 131: PA1 = 0;
  5372  06AF  1085               	bcf	5,1
  5373                           
  5374                           ;main.c: 132: PA2 = 0;
  5375  06B0  1105               	bcf	5,2
  5376                           
  5377                           ;main.c: 133: PA3 = 0;
  5378  06B1  1185               	bcf	5,3
  5379                           
  5380                           ;main.c: 134: PB0 = 0;
  5381  06B2  1006               	bcf	6,0
  5382                           
  5383                           ;main.c: 135: PB1 = 1;
  5384  06B3  1486               	bsf	6,1
  5385                           
  5386                           ;main.c: 136: PA6 = 0;
  5387  06B4  1305               	bcf	5,6
  5388                           
  5389                           ;main.c: 138: PB7 = 0;
  5390  06B5  1386               	bcf	6,7
  5391                           
  5392                           ;main.c: 139: PBOD7 = 0;
  5393  06B6  1683               	bsf	3,5	;RP0=1, select bank3
  5394  06B7  1703               	bsf	3,6	;RP1=1, select bank3
  5395  06B8  1388               	bcf	8,7
  5396  06B9  0008               	return
  5397  06BA                     __end_of_initPin:	
  5398                           
  5399                           	psect	text881
  5400  044E                     __ptext881:	
  5401 ;; =============== function _clearTwelveHoursTimer ends ============
  5402                           
  5403                           
  5404 ;; *************** function _ISR *****************
  5405 ;; Defined at:
  5406 ;;		line 440 in file "D:\develop\190625\AK7030-OTP\common.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;		None               void
  5413 ;; Registers used:
  5414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 60/0
  5418 ;;		Unchanged: FFE00/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5420 ;;      Params:         0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0
  5422 ;;      Temps:          4       0       0       0       0
  5423 ;;      Totals:         4       0       0       0       0
  5424 ;;Total ram usage:        4 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    1
  5427 ;; This function calls:
  5428 ;;		i1_setAD_ConvertFlag
  5429 ;;		_adc_get
  5430 ;;		_vPutSampleDataIntoTable
  5431 ;; This function is called by:
  5432 ;;		Interrupt level 1
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435  044E                     _ISR:	
  5436                           
  5437                           ;common.c: 441: static unsigned char ucTimer1sCnt = 0;
  5438                           ;common.c: 443: if(TMR1IF == 1)
  5439  044E  1C0C               	btfss	12,0
  5440  044F  2C77               	goto	i1l4408
  5441                           
  5442                           ;common.c: 444: {
  5443                           ;common.c: 445: TMR1IF = 0 ;
  5444  0450  100C               	bcf	12,0
  5445                           
  5446                           ;common.c: 446: timer.timer10msStopWatch++;
  5447  0451  1683               	bsf	3,5	;RP0=1, select bank1
  5448  0452  3064               	movlw	100
  5449  0453  0AA8               	incf	_timer^(0+128),f
  5450                           
  5451                           ;common.c: 447: ucTimer1sCnt++;
  5452  0454  0AA6               	incf	ISR@ucTimer1sCnt^(0+128),f
  5453                           
  5454                           ;common.c: 449: if(ucTimer1sCnt >= 100)
  5455  0455  0226               	subwf	ISR@ucTimer1sCnt^(0+128),w
  5456  0456  1C03               	skipc
  5457  0457  2C77               	goto	i1l4408
  5458                           
  5459                           ;common.c: 450: {
  5460                           ;common.c: 451: ucTimer1sCnt = 0;
  5461  0458  01A6               	clrf	ISR@ucTimer1sCnt^(0+128)
  5462                           
  5463                           ;common.c: 452: if(uiBigTimer > 0)
  5464  0459  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5465  045A  0420               	iorwf	_uiBigTimer^(0+128),w
  5466  045B  1903               	skipnz
  5467  045C  2C63               	goto	i1l1835
  5468                           
  5469                           ;common.c: 453: uiBigTimer--;
  5470  045D  3001               	movlw	1
  5471  045E  02A0               	subwf	_uiBigTimer^(0+128),f
  5472  045F  3000               	movlw	0
  5473  0460  1C03               	skipc
  5474  0461  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  5475  0462  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  5476  0463                     i1l1835:	
  5477                           
  5478                           ;common.c: 455: if(uiSmallTimer)
  5479  0463  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5480  0464  0422               	iorwf	_uiSmallTimer^(0+128),w
  5481  0465  1903               	skipnz
  5482  0466  2C6D               	goto	i1l1836
  5483                           
  5484                           ;common.c: 456: uiSmallTimer--;
  5485  0467  3001               	movlw	1
  5486  0468  02A2               	subwf	_uiSmallTimer^(0+128),f
  5487  0469  3000               	movlw	0
  5488  046A  1C03               	skipc
  5489  046B  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  5490  046C  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  5491  046D                     i1l1836:	
  5492                           
  5493                           ;common.c: 458: if(uiTwentySecondsTimer)
  5494  046D  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5495  046E  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5496  046F  1903               	skipnz
  5497  0470  2C77               	goto	i1l4408
  5498                           
  5499                           ;common.c: 459: uiTwentySecondsTimer--;
  5500  0471  3001               	movlw	1
  5501  0472  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  5502  0473  3000               	movlw	0
  5503  0474  1C03               	skipc
  5504  0475  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  5505  0476  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  5506  0477                     i1l4408:	
  5507                           
  5508                           ;common.c: 460: }
  5509                           ;common.c: 461: }
  5510                           ;common.c: 463: if(ADIF)
  5511  0477  1283               	bcf	3,5	;RP0=0, select bank0
  5512  0478  1D0D               	btfss	13,2
  5513  0479  2C9F               	goto	i1l1843
  5514  047A  3001               	movlw	1
  5515                           
  5516                           ;common.c: 464: {
  5517                           ;common.c: 465: ADIF=0;
  5518  047B  110D               	bcf	13,2
  5519                           
  5520                           ;common.c: 466: setAD_ConvertFlag(1);
  5521  047C  251A  118A         	fcall	i1_setAD_ConvertFlag
  5522                           
  5523                           ;common.c: 468: if(sampleChannelSelect == 5)
  5524  047E  1283               	bcf	3,5	;RP0=0, select bank0
  5525  047F  086E               	movf	_sampleChannelSelect,w
  5526  0480  3A05               	xorlw	5
  5527  0481  1D03               	skipz
  5528  0482  2C8B               	goto	i1l4418
  5529                           
  5530                           ;common.c: 469: {
  5531                           ;common.c: 472: vPutSampleDataIntoTable(adc_get(),5);
  5532  0483  24AC  118A         	fcall	_adc_get
  5533  0485  0871               	movf	?_adc_get+1,w
  5534  0486  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5535  0487  0870               	movf	?_adc_get,w
  5536  0488  00F4               	movwf	?_vPutSampleDataIntoTable
  5537  0489  3005               	movlw	5
  5538  048A  2C9D               	goto	L22
  5539  048B                     i1l4418:	
  5540                           ;common.c: 476: }
  5541                           
  5542                           
  5543                           ;common.c: 477: else if(sampleChannelSelect == 1)
  5544  048B  0B6E               	decfsz	_sampleChannelSelect,w
  5545  048C  2C96               	goto	i1l4422
  5546                           
  5547                           ;common.c: 478: {
  5548                           ;common.c: 480: vPutSampleDataIntoTable(adc_get(),1);
  5549  048D  24AC  118A         	fcall	_adc_get
  5550  048F  0871               	movf	?_adc_get+1,w
  5551  0490  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5552  0491  0870               	movf	?_adc_get,w
  5553  0492  00F4               	movwf	?_vPutSampleDataIntoTable
  5554  0493  01F6               	clrf	?_vPutSampleDataIntoTable+2
  5555  0494  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  5556  0495  2C9E               	goto	L23
  5557  0496                     i1l4422:	
  5558                           ;common.c: 485: }
  5559                           
  5560                           
  5561                           ;common.c: 486: else
  5562                           ;common.c: 487: {
  5563                           ;common.c: 491: vPutSampleDataIntoTable(adc_get(),14);
  5564  0496  24AC  118A         	fcall	_adc_get
  5565  0498  0871               	movf	?_adc_get+1,w
  5566  0499  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5567  049A  0870               	movf	?_adc_get,w
  5568  049B  00F4               	movwf	?_vPutSampleDataIntoTable
  5569  049C  300E               	movlw	14
  5570  049D                     L22:	
  5571  049D  00F6               	movwf	?_vPutSampleDataIntoTable+2
  5572  049E                     L23:	
  5573  049E  24B7               	fcall	_vPutSampleDataIntoTable
  5574  049F                     i1l1843:	
  5575  049F  087C               	movf	??_ISR+3,w
  5576  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  5577  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  5578  04A2  00FF               	movwf	127
  5579  04A3  087B               	movf	??_ISR+2,w
  5580  04A4  008A               	movwf	10
  5581  04A5  087A               	movf	??_ISR+1,w
  5582  04A6  0084               	movwf	4
  5583  04A7  0E79               	swapf	??_ISR^(0+-128),w
  5584  04A8  0083               	movwf	3
  5585  04A9  0EFE               	swapf	126,f
  5586  04AA  0E7E               	swapf	126,w
  5587  04AB  0009               	retfie
  5588  04AC                     __end_of_ISR:	
  5589  04AC                     __ptext883:	
  5590 ;; =============== function i1_setAD_ConvertFlag ends ============
  5591                           
  5592                           
  5593 ;; *************** function _adc_get *****************
  5594 ;; Defined at:
  5595 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  val             2    2[COMMON] unsigned int 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  2    0[COMMON] unsigned int 
  5602 ;; Registers used:
  5603 ;;		wreg
  5604 ;; Tracked objects:
  5605 ;;		On entry : 60/0
  5606 ;;		On exit  : 60/20
  5607 ;;		Unchanged: FFF9F/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5609 ;;      Params:         2       0       0       0       0
  5610 ;;      Locals:         2       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0
  5612 ;;      Totals:         4       0       0       0       0
  5613 ;;Total ram usage:        4 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_ISR
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621  04AC                     _adc_get:	
  5622                           
  5623                           ;periph.c: 106: unsigned int val;
  5624                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  5625                           
  5626                           ; Regs used in _adc_get: [wreg]
  5627  04AC  081E               	movf	30,w	;volatile
  5628  04AD  00F3               	movwf	adc_get@val+1
  5629  04AE  01F2               	clrf	adc_get@val
  5630  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  5631  04B0  081E               	movf	30,w	;volatile
  5632  04B1  04F2               	iorwf	adc_get@val,f
  5633                           
  5634                           ;periph.c: 108: return val;
  5635  04B2  0873               	movf	adc_get@val+1,w
  5636  04B3  00F1               	movwf	?_adc_get+1
  5637  04B4  0872               	movf	adc_get@val,w
  5638  04B5  00F0               	movwf	?_adc_get
  5639  04B6  0008               	return
  5640  04B7                     __end_of_adc_get:	
  5641  04B7                     __ptext884:	
  5642 ;; =============== function _adc_get ends ============
  5643                           
  5644                           
  5645 ;; *************** function _vPutSampleDataIntoTable *****************
  5646 ;; Defined at:
  5647 ;;		line 97 in file "D:\develop\190625\AK7030-OTP\common.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  uiSampleData    2    4[COMMON] unsigned int 
  5650 ;;  channel         1    6[COMMON] unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  i               2    7[COMMON] int 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;		None               void
  5655 ;; Registers used:
  5656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5657 ;; Tracked objects:
  5658 ;;		On entry : 60/20
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: FFE00/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5662 ;;      Params:         3       0       0       0       0
  5663 ;;      Locals:         2       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0
  5665 ;;      Totals:         5       0       0       0       0
  5666 ;;Total ram usage:        5 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_ISR
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674  04B7                     _vPutSampleDataIntoTable:	
  5675                           
  5676                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  5677                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  5678                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  5679                           ;common.c: 105: if(channel == 1)
  5680                           
  5681                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  5682  04B7  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  5683  04B8  2CC9               	goto	i1l4326
  5684                           
  5685                           ;common.c: 106: {
  5686                           ;common.c: 107: if(ucChannelFirstLength < 12)
  5687  04B9  300C               	movlw	12
  5688  04BA  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5689  04BB  1803               	skipnc
  5690  04BC  2CC3               	goto	i1l4322
  5691                           
  5692                           ;common.c: 108: {
  5693                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5694  04BD  1003               	clrc
  5695  04BE  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5696  04BF  3EAE               	addlw	_uiSampleChannelFirst& (0+255)
  5697  04C0  251E               	fcall	PL2	;call to abstracted procedure
  5698                           
  5699                           ;common.c: 111: ucChannelFirstLength++;
  5700  04C1  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  5701                           
  5702                           ;common.c: 112: }
  5703  04C2  0008               	return
  5704  04C3                     i1l4322:	
  5705                           
  5706                           ;common.c: 113: else
  5707                           ;common.c: 114: {
  5708                           ;common.c: 115: ucChannelFirstLength = 0;
  5709  04C3  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5710                           
  5711                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5712  04C4  1003               	clrc
  5713  04C5  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5714  04C6  3EAE               	addlw	_uiSampleChannelFirst& (0+255)
  5715  04C7  251E               	fcall	PL2	;call to abstracted procedure
  5716  04C8  0008               	return
  5717  04C9                     i1l4326:	
  5718                           
  5719                           ;common.c: 120: else if(channel == 5)
  5720  04C9  0876               	movf	vPutSampleDataIntoTable@channel,w
  5721  04CA  3A05               	xorlw	5
  5722  04CB  1D03               	skipz
  5723  04CC  2CDE               	goto	i1l4338
  5724                           
  5725                           ;common.c: 121: {
  5726                           ;common.c: 122: if(ucChannelFourthLength < 12)
  5727  04CD  300C               	movlw	12
  5728  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  5729  04CF  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5730  04D0  1803               	skipnc
  5731  04D1  2CD8               	goto	i1l4334
  5732                           
  5733                           ;common.c: 123: {
  5734                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5735  04D2  1003               	clrc
  5736  04D3  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5737  04D4  3EC6               	addlw	_uiSampleChannelFourth& (0+255)
  5738  04D5  251E               	fcall	PL2	;call to abstracted procedure
  5739                           
  5740                           ;common.c: 126: ucChannelFourthLength++;
  5741  04D6  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5742                           
  5743                           ;common.c: 127: }
  5744  04D7  0008               	return
  5745  04D8                     i1l4334:	
  5746                           
  5747                           ;common.c: 128: else
  5748                           ;common.c: 129: {
  5749                           ;common.c: 130: ucChannelFourthLength = 0;
  5750  04D8  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5751                           
  5752                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5753  04D9  1003               	clrc
  5754  04DA  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5755  04DB  3EC6               	addlw	_uiSampleChannelFourth& (0+255)
  5756  04DC  251E               	fcall	PL2	;call to abstracted procedure
  5757  04DD  0008               	return
  5758  04DE                     i1l4338:	
  5759                           
  5760                           ;common.c: 135: else if(channel == 14)
  5761  04DE  0876               	movf	vPutSampleDataIntoTable@channel,w
  5762  04DF  3A0E               	xorlw	14
  5763  04E0  1D03               	skipz
  5764  04E1  2CF9               	goto	i1l4350
  5765                           
  5766                           ;common.c: 136: {
  5767                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  5768  04E2  300C               	movlw	12
  5769  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  5770  04E4  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5771  04E5  1803               	skipnc
  5772  04E6  2CF3               	goto	i1l4346
  5773                           
  5774                           ;common.c: 138: {
  5775                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  5776  04E7  1003               	clrc
  5777  04E8  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5778  04E9  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  5779  04EA  0084               	movwf	4
  5780  04EB  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5781  04EC  1783               	bsf	3,7	;select IRP bank3
  5782  04ED  0080               	movwf	0
  5783  04EE  0A84               	incf	4,f
  5784  04EF  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5785  04F0  0080               	movwf	0
  5786                           
  5787                           ;common.c: 141: ucChannelFourteenthLength++;
  5788  04F1  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  5789                           
  5790                           ;common.c: 142: }
  5791  04F2  0008               	return
  5792  04F3                     i1l4346:	
  5793                           
  5794                           ;common.c: 143: else
  5795                           ;common.c: 144: {
  5796                           ;common.c: 145: ucChannelFourteenthLength = 0;
  5797  04F3  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5798                           
  5799                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  5800  04F4  1003               	clrc
  5801  04F5  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5802  04F6  3EC6               	addlw	_uiSampleChannelFourth& (0+255)
  5803  04F7  251E               	fcall	PL2	;call to abstracted procedure
  5804  04F8  0008               	return
  5805  04F9                     i1l4350:	
  5806                           
  5807                           ;common.c: 150: else
  5808                           ;common.c: 151: {
  5809                           ;common.c: 152: ucChannelFirstLength = 0;
  5810  04F9  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5811                           
  5812                           ;common.c: 154: ucChannelFourthLength = 0;
  5813  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  5814  04FB  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5815                           
  5816                           ;common.c: 156: ucChannelFourteenthLength = 0;
  5817  04FC  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5818                           
  5819                           ;common.c: 158: for(int i = 0;i < 12; i++)
  5820  04FD  01F7               	clrf	vPutSampleDataIntoTable@i
  5821  04FE  01F8               	clrf	vPutSampleDataIntoTable@i+1
  5822  04FF                     i1l4356:	
  5823                           
  5824                           ;common.c: 159: {
  5825                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  5826  04FF  1003               	clrc
  5827  0500  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5828  0501  3EAE               	addlw	_uiSampleChannelFirst& (0+255)
  5829  0502  0084               	movwf	4
  5830  0503  1383               	bcf	3,7	;select IRP bank1
  5831  0504  0180               	clrf	0
  5832                           
  5833                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  5834  0505  2526  118A         	fcall	PL4	;call to abstracted procedure
  5835                           
  5836                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  5837  0507  2526  118A         	fcall	PL4	;call to abstracted procedure
  5838  0509  0A84               	incf	4,f
  5839  050A  0180               	clrf	0
  5840  050B  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5841  050C  1903               	skipnz
  5842  050D  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5843  050E  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5844  050F  3A80               	xorlw	128
  5845  0510  00FF               	movwf	127
  5846  0511  3080               	movlw	128
  5847  0512  027F               	subwf	127,w
  5848  0513  1D03               	skipz
  5849  0514  2D17               	goto	u141_25
  5850  0515  300C               	movlw	12
  5851  0516  0277               	subwf	vPutSampleDataIntoTable@i,w
  5852  0517                     u141_25:	
  5853  0517  1803               	btfsc	3,0
  5854  0518  0008               	return
  5855  0519  2CFF               	goto	i1l4356
  5856  051A                     __end_of_vPutSampleDataIntoTable:	
  5857  051A                     __ptext882:	
  5858 ;; =============== function _ISR ends ============
  5859                           
  5860                           
  5861 ;; *************** function i1_setAD_ConvertFlag *****************
  5862 ;; Defined at:
  5863 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  setAD_Conver    1    wreg     unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;		None               void
  5870 ;; Registers used:
  5871 ;;		wreg
  5872 ;; Tracked objects:
  5873 ;;		On entry : 60/0
  5874 ;;		On exit  : 60/20
  5875 ;;		Unchanged: FFF9F/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5877 ;;      Params:         0       0       0       0       0
  5878 ;;      Locals:         1       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0
  5880 ;;      Totals:         1       0       0       0       0
  5881 ;;Total ram usage:        1 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_ISR
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889  051A                     i1_setAD_ConvertFlag:	
  5890                           
  5891                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5892                           ;i1setAD_ConvertFlag@flag stored from wreg
  5893  051A  00F0               	movwf	i1setAD_ConvertFlag@flag
  5894                           
  5895                           ;common.c: 207: adc_convert_flag = flag;
  5896  051B  1683               	bsf	3,5	;RP0=1, select bank1
  5897  051C  00A7               	movwf	_adc_convert_flag^(0+128)
  5898  051D  0008               	return
  5899  051E                     __end_ofi1_setAD_ConvertFlag:	
  5900  051E                     PL2:	
  5901  051E  0084               	movwf	4
  5902  051F  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5903  0520  1383               	bcf	3,7	;select IRP bank1
  5904  0521  0080               	movwf	0
  5905  0522  0A84               	incf	4,f
  5906  0523  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5907  0524  0080               	movwf	0
  5908  0525  0008               	return
  5909  0526                     PL4:	
  5910  0526  0A84               	incf	4,f
  5911  0527  0180               	clrf	0
  5912  0528  1003               	clrc
  5913  0529  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5914  052A  3EC6               	addlw	_uiSampleChannelFourth& (0+255)
  5915  052B  0084               	movwf	4
  5916  052C  0180               	clrf	0
  5917  052D  0008               	return
  5918                           
  5919                           	psect	intentry
  5920  0004                     __pintentry:	
  5921                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5922                           
  5923  0004                     interrupt_function:	
  5924  007E                     saved_w	set	btemp
  5925  0004  00FE               	movwf	btemp
  5926  0005  0E03               	swapf	3,w
  5927  0006  00F9               	movwf	??_ISR
  5928  0007  0804               	movf	4,w
  5929  0008  00FA               	movwf	??_ISR+1
  5930  0009  080A               	movf	10,w
  5931  000A  00FB               	movwf	??_ISR+2
  5932  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5933  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5934  000D  087F               	movf	btemp+1,w
  5935  000E  00FC               	movwf	??_ISR+3
  5936  000F  118A  2C4E         	ljmp	_ISR
  5937                           
  5938                           	psect	text885
  5939  0000                     __ptext885:	
  5940 ;; =============== function _vPutSampleDataIntoTable ends ============
  5941                           
  5942  007E                     btemp	set	126	;btemp
  5943  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jul 18 11:12:19 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l703 0754  
                                             l713 0744                                               l723 0723  
                                             l708 074C                                               l813 0116  
                                             l752 0062                                               l841 0151  
                                             l682 0000                                               l685 0000  
                                             l693 0764                                               l679 0000  
                                             l688 072C                                               l961 02EA  
                                             l698 075C                                               l794 00DE  
                                             l798 0114                                               l985 0338  
                                             _PA0 0028                                               _PA1 0029  
                                             _GIE 005F                                               _PB0 0030  
                                             _PA2 002A                                               _PB1 0031  
                                             _PA3 002B                                               _PA6 002E  
                                             _PB6 0036                                               _PB7 0037  
                                             _ISR 044E                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S5402 06BA                                              S5404 06C8  
                                            S5406 06F2                                              S5408 0674  
                                            ?_ISR 0070                                __size_of_AD_Sample 001E  
                          ?_getAdOriginalCh1Value 0046                                              l1035 0424  
                                            l4200 0653                                              l1712 0000  
                                            l5000 035C                                              l4130 0000  
                                            l4202 0000                                              l5010 036A  
                                            l4132 0000                                              l4140 0000  
                                            l4220 0000                                              l5100 0000  
                                            l5020 0000                                              l5004 0362  
                                            l1741 0000                                              l4134 0670  
                                            l4142 0000                                              l4150 0000  
                                            l4214 0000                                              l4310 0000  
                                            l1750 0000                                              l5102 0000  
                                            l5030 0000                                              l5022 0380  
                                            l5014 0000                                              l5006 0000  
                                            l4136 0000                                              l4144 0000  
                                            l4152 0000                                              l4160 0000  
                                            l1744 0000                                              l4216 0000  
                                            l4232 0000                                              l4304 0000  
                                            l5104 0000                                              l5032 0000  
                                            l5040 0395                                              l5024 0000  
                                            l5016 0373                                              l5008 0000  
                                            l5112 0431                                              l1753 0000  
                                            l4138 0000                                              l4146 0000  
                                            l4154 0000                                              l4162 0000  
                                            l1738 073B                                              l4170 0000  
                                            l2490 0000                                              l2482 0000  
                                            l4306 0000                                              l1762 0000  
                                            l5050 0000                                              l5034 0000  
                                            l5026 0382                                              l1747 0000  
                                            l4148 0000                                              l4156 0000  
                                            l4164 0000                                              l4172 0000  
                                            l4180 0000                                              l2476 0000  
                                            l1828 0000                                              l4236 0000  
                                            l4252 0000                                              l1756 0000  
                                            l5108 0425                                              l5060 0000  
                                            l5052 03AA                                              l5036 0000  
                                            l4500 005B                                              l4158 0000  
                                            l4166 0000                                              l4174 0000  
                                            l4182 0000                                              l4190 0000  
                                            l4270 0553                                              l4430 0663  
                                            l5070 0000                                              l5062 0000  
                                            l5046 0000                                              l5038 0000  
                                            l4510 0000                                              l1791 0000  
                                            l2479 0000                                              l1759 0000  
                                            l4168 0000                                              l4184 0000  
                                            l4176 0000                                              l4192 0000  
                                            l2496 0000                                              l4248 0000  
                                            l4272 0000                                              l4264 0000  
                                            l4440 060B                                              l4432 0000  
                                            l5080 03FA                                              l5072 0000  
                                            l5056 03B0                                              l5048 03A7  
                                            l4600 0119                                              l4520 007B  
                                            l4512 0071                                              l4504 0060  
                                            l1794 0000                                              l4178 0000  
                                            l4186 0000                                              l4194 0000  
                                            l4290 05BC                                              l4274 0000  
                                            l4362 0000                                              l4442 0000  
                                            l5082 03FC                                              l5074 0000  
                                            l5066 03BC                                              l4610 0122  
                                            l4530 0088                                              l4522 0000  
                                            l4514 0000                                              l4506 0063  
                                            l4188 0000                                              l4196 0000  
                                            l4292 057C                                              l4284 057B  
                                            l4276 0000                                              l4380 0632  
                                            l4372 0000                                              l4444 0611  
                                            l4436 0000                                              l4452 0000  
                                            l4460 0000                                              l5092 0411  
                                            l5076 03ED                                              l5068 03C7  
                                            l4620 0128                                              l4604 011E  
                                            l4540 0097                                              l1797 0000  
                                            l4198 0000                                              l4294 05BE  
                                            l4366 0000                                              l4382 0636  
                                            l4462 0000                                              l5094 0413  
                                            l5086 0000                                              l4630 012E  
                                            l4534 0000                                              l4526 0085  
                                            l4518 0000                                              l4470 0000  
                                            l4296 0000                                              l4384 0639  
                                            l4376 0000                                              l4368 0000  
                                            l4448 0000                                              l4456 0000  
                                            l5088 0404                                              l4704 0175  
                                            l4640 0134                                              l4608 0120  
                                            l4552 00AE                                              l4560 00B7  
                                            l4544 0000                                              l4536 0095  
                                            l4528 0000                                              l4480 0000  
                                            l4472 0000                                              l4464 0000  
                                            l4386 0000                                              l5098 0000  
                                            l4730 01A6                                              l4714 018A  
                                            l4650 013E                                              l4570 0000  
                                            l4554 00AF                                              l4546 009E  
                                            l4538 0000                                              l4490 0000  
                                            l4482 0000                                              l4474 0000  
                                            l4466 0000                                              l4740 01B2  
                                            l4724 0190                                              l4716 0000  
                                            l4660 0145                                              l4652 0000  
                                            l4580 00E1                                              l4572 00CF  
                                            l4564 00BF                                              l4484 0000  
                                            l4476 0000                                              l4468 0000  
                                            l4902 0000                                              l4830 023E  
                                            l4806 020A                                              l4750 01BB  
                                            l4734 01AE                                              l4726 019C  
                                            l4662 0152                                              l4654 0143  
                                            l4566 00C3                                              l4558 0000  
                                            l4494 004E                                              l4486 0040  
                                            l4478 0000                                              l4920 02C3  
                                            l4912 02B8                                              l4904 02B0  
                                            l4840 024A                                              l4832 0240  
                                            l4816 0217                                              l4760 01C4  
                                            l4728 01A4                                              l4672 015B  
                                            l4664 0154                                              l4592 0106  
                                            l4584 00ED                                              l4568 0000  
                                            l4488 0000                                              l4930 0000  
                                            l4922 0000                                              l4906 0000  
                                            l4842 024C                                              l4826 021D  
                                            l4818 0000                                              l4770 01D5  
                                            l4738 01B0                                              l4674 015D  
                                            l4578 0000                                              l4498 005A  
                                            l4932 0000                                              l4924 02CC  
                                            l4916 02BE                                              l4908 02B2  
                                            l4852 0252                                              l4828 022E  
                                            l4780 01DB                                              l4772 0000  
                                            l4684 0163                                              l4668 0159  
                                            l4596 0112                                              l4588 00FA  
                                            l4942 0000                                              l4934 0000  
                                            l4918 0000                                              l4862 0258  
                                            l4854 0000                                              l4790 01FD  
                                            l4782 01E7                                              l4694 016C  
                                            l4598 0117                                              _ADIE 046A  
                                            l4960 0306                                              l4944 0000  
                                            l4936 02E2                                              l4928 02D5  
                                            l4872 0000                                              l4784 01F3  
                                            _ADIF 006A                                              l4962 0000  
                                            l4954 02F9                                              l4946 02F2  
                                            l4938 0000                                              l4890 0298  
                                            l4882 0000                                              l4874 0284  
                                            l4866 0266                                              l4794 01FF  
                                            l4786 01F5                                              l4964 0308  
                                            l4948 0000                                              l4892 029A  
                                            l4884 0000                                              l4876 0000  
                                            l4868 0277                                              l4796 0201  
                                            l4982 0000                                              l4974 0000  
                                            l4958 0000                                              l4886 0292  
                                            l4878 0286                                              l4984 0321  
                                            l4976 0318                                              l4968 0000  
                                            l4986 0000                                              l4978 0000  
                                            l4898 02A3                                              l4994 032B  
                                            l4996 0000                                              l4988 0000  
                                            l4998 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1305 0576  
                                            u1315 059D                                              u1325 0589  
                                            _PEIE 005E                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 0670  
                                            start 0011                           ?_getAdOriginalCh14Value 0046  
                               main@ucTimerDelay1 005B                                 main@ucTimerDelay2 005C  
                               main@ucTimerDelay3 005D                                 main@ucTimerDelay4 005E  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0785  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0048  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 04B7                                             _PBOD6 0C46  
                                           _PBOD7 0C47                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 04B7                                   __end_of_initPin 06BA  
                                           _timer 00A8                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 054C                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 078F                             __end_of_clearAllTimer 0668  
                                    __end_of_main 044E                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 063E                                            ??_main 0048  
                            _clearPinPortAndTimer 0656                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 073E  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l4320 0000                                            i1l4400 0000  
                                          i1l1753 0000                                            i1l4322 04C3  
                                          i1l4314 0000                                            i1l1843 049F  
                                          i1l1835 0463                                            i1l4332 0000  
                                          i1l4324 0000                                            i1l4316 0000  
                                          i1l4420 0000                                            i1l4412 0000  
                                          i1l1836 046D                                            i1l4350 04F9  
                                          i1l4334 04D8                                            i1l4326 04C9  
                                          i1l4422 0496                                            i1l4414 0000  
                                          i1l4360 0000                                            i1l4344 0000  
                                          i1l4336 0000                                            i1l4424 0000  
                                          i1l4408 0477                                            i1l4346 04F3  
                                          i1l4338 04DE                                            i1l4418 048B  
                                          i1l2499 0000                                            i1l4356 04FF  
                                          i1l4348 0000                                            i1l4428 0000  
                                          i1l4358 0000                                            i1l4390 0000  
                                          i1l4394 0000                                            i1l4396 0000  
                                          u141_25 0517                                  __end_of_dac_init 078A  
                       ??_clearTwentySecondsTimer 0020                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 0617  
                               _setAD_ConvertFlag 061B                                            _TRISA0 0428  
                                          _TRISA1 0429                                            _TRISB0 0430  
                                          _TRISA2 042A                                            _TRISB1 0431  
                                          _TRISA3 042B                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISA6 042E                                            _TRISB5 0435  
                                          _TRISA7 042F                                            _TRISB6 0436  
                                          _TRISB7 0437                                     main@ucTimer1s 00AA  
                              ?_getAD_ConvertFlag 0070                                            _Filter 054C  
                              ?_setAD_ConvertFlag 0070                                  __end_of_op1_init 0709  
                                __end_of_op2_init 076D                       ??_isFinishedThreeHoursTimer 0020  
                   __size_of_clearThreeHoursTimer 0004                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          _setPA0 0756                                            _setPA1 074E  
                                          _setPB0 0725                                            _setPA2 0746  
                                          _setPB1 075E                                            _setPA3 073E  
                                          _setPA6 071C                                            clrloop 072F  
                                Filter@filter_buf 0026                                  Filter@filter_sum 0040  
                                       ??_initPin 0020                           main@ucTimerDelayP2sLess 005F  
                         main@ucTimerDelayP2sMore 0060                         ??_vPutSampleDataIntoTable 0077  
                           ?_clearPinPortAndTimer 0070                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 063E                  __size_of_startTwentySecondsTimer 0009  
                       __end_of_getAD_ConvertFlag 061B                         __end_of_setAD_ConvertFlag 0620  
                              __size_of_adc_start 0003                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                   __end_of_clearTwentySecondsTimer 0674  
                            _uiSampleChannelFirst 00AE                    vPutSampleDataIntoTable@channel 0076  
                             main@ucTimerRightP5s 0068                         _isFinishedThreeHoursTimer 076D  
                         ??_getAdOriginalCh1Value 0048                             __end_of_timer1_config 0713  
                                  ?_adc_test_init 0020       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0048                                        __pbssBANK1 00A0  
                                      __pbssBANK3 0190                      __size_ofi1_setAD_ConvertFlag 0004  
                                      adc_get@val 0072                   __end_of_vPutSampleDataIntoTable 051A  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                      __pintentry 0004                               main@enumInteralStep 00A9  
                                         ?_setPA0 0070                                           ?_setPA1 0070  
                                         ?_setPA2 0070                                           ?_setPB0 0070  
                                         ?_setPA3 0070                                           ?_setPB1 0070  
                                         ?_setPA6 0070                                         ?_dac_init 0070  
                          ??_clearPinPortAndTimer 0020                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                           _OP2CON0 009B  
                                         _OP2CON1 009C                                           _OP2CON2 009D  
                                    _clrSampeTime 078D                                 __end_of_adc_start 0656  
                            _uiTwentySecondsTimer 00A4                                         ?_op1_init 0070  
                                       ?_op2_init 0070                                _isPermitSampleTime 077F  
                                         Filter@i 0045                                           Filter@j 0044  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0005                                    main@ucTimer20s 0058  
                                  main@ucTimerP3s 00AC                                    main@ucTimerP5s 0067  
                             ?_isPermitSampleTime 0070                                      setPA0@bValue 0020  
                                    setPA1@bValue 0020                                   __size_of_Filter 0097  
                                    setPA2@bValue 0020                                      setPB0@bValue 0020  
                                      _uiBigTimer 00A0                                      setPA3@bValue 0020  
                                    setPB1@bValue 0020                                      setPA6@bValue 0020  
                                    _clock_config 0736                                           _adc_get 04AC  
                                 __size_of_setPA0 0008                                   __size_of_setPA1 0008  
                                 __size_of_setPB0 0009                                   __size_of_setPA2 0008  
                                 __size_of_setPB1 0008                                   __size_of_setPA3 0008  
                                 __size_of_setPA6 0009              __end_of_isFinishedTwentySecondsTimer 0779  
           __size_of_isFinishedTwentySecondsTimer 0006                      _isFinishedTwentySecondsTimer 0773  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 06F2  
                                      ??_dac_init 0020                                         _AD_Sample 0620  
                                    __size_of_ISR 005E                                           _initPin 06A7  
                   __size_of_getAdOriginaCh4Value 0009                                   ??_adc_test_init 0021  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                         _startTwentySecondsTimer 0713                              end_of_initialization 06A4  
                               Filter@filter_temp 003E                                  main@ucLoaderStep 0053  
                                      ?_AD_Sample 0070                     ?_isFinishedTwentySecondsTimer 0070  
                            main@enumMainLoopStep 004B                                main@ucChannel4Type 004D  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0042  
                                _adc_convert_flag 00A7                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 0670                            main@ucTimerADC1ZeroP5s 0059  
                  __size_of_clearTwelveHoursTimer 0004                           _timer1_interrupt_config 078A  
                   __end_of_clearTwelveHoursTimer 066C                          main@ucTimerForDACR0_CNT1 0061  
                        main@ucTimerForDACR0_CNT2 0063                __size_of_isFinishedThreeHoursTimer 0006  
                                main@ucTimerX1P5s 0069                                  main@ucTimerX2P5s 00AD  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 005A                                    __end_of_Filter 05E3  
                                 main@ucADC4_Step 004C               __size_of_isFinishedTwelveHoursTimer 0006  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 051A  
                                  __end_of_setPA0 075E                                    __end_of_setPA1 0756  
                                  __end_of_setPB0 072E                                    __end_of_setPA2 074E  
                                  __end_of_setPB1 0766                                    __end_of_setPA3 0746  
                                  __end_of_setPA6 0725                         ??_startTwentySecondsTimer 0020  
                             start_initialization 068E                                       __end_of_ISR 04AC  
                            main@ucTimerLessX1P5s 0066                              main@ucTimerLessX2P5s 00AB  
                           _uiSampleChannelFourth 00C6                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 000A                     __end_of_getAdOriginalCh1Value 0541  
                        ??_getAdOriginalCh14Value 0048                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 06E4                 __end_of_isFinishedThreeHoursTimer 0773  
                              main@enumBranchStep 004A                                          ??_Filter 0022  
                                   _clearAllTimer 0663                                       __pdataBANK0 006E  
                                        ??_setPA0 0020                                          ??_setPA1 0020  
                                        ??_setPA2 0020                                          ??_setPB0 0020  
                                        ??_setPA3 0020                                          ??_setPB1 0020  
                                        ??_setPA6 0020                          ?_vPutSampleDataIntoTable 0074  
                      main@ucDelayPrefix4TimerP5s 0050                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                        main@ucDelayPrefix6TimerP2s 0051  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 0653                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0007                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 071C  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 066C                      __end_of_startThreeHoursTimer 06E4  
                                       __ptext850 0620                                         __ptext851 061B  
                                       __ptext860 078D                                         __ptext852 0617  
                                       __ptext844 0656                                         __ptext861 077F  
                                       __ptext853 054C                                         __ptext845 052E  
                                       __ptext870 071C                                         __ptext862 0653  
                                       __ptext854 076D                                         __ptext846 0537  
                                       __ptext871 073E                                         __ptext863 0766  
                                       __ptext855 06D6                                         __ptext847 0541  
                                       __ptext880 0668                                         __ptext872 0746  
                                       __ptext864 06FE                                         __ptext856 0773  
                                       __ptext848 05F9                                         __ptext881 044E  
                                       __ptext873 074E                                         __ptext865 0785  
                                       __ptext857 0713                                         __ptext849 0663  
                                       __ptext882 051A                                         __ptext874 0756  
                                       __ptext866 063E                                         __ptext858 0779  
                                       __ptext883 04AC                                         __ptext875 075E  
                                       __ptext867 078A                                         __ptext859 06E4  
                                       __ptext884 04B7                                         __ptext876 0725  
                                       __ptext868 0709                                         __ptext885 0000  
                                       __ptext877 06A7                                         __ptext869 0736  
                                       __ptext878 0670                                         __ptext879 066C  
                                        ?_adc_get 0070                                         __pswtext1 06BA  
                                       __pswtext2 06C8                                         __pswtext3 06F2  
                                       __pswtext4 0674                __end_of_isFinishedTwelveHoursTimer 077F  
                      _isFinishedTwelveHoursTimer 0779                                   ISR@ucTimer1sCnt 00A6  
                                        ?_initPin 0070                     __size_of_clearPinPortAndTimer 000D  
                       _uiSampleChannelFourteenth 0190                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 000B                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 0537                   __end_of_timer1_interrupt_config 078D  
                      main@ucTimerLessADC1ZeroP5s 0065                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 006D                       __size_of_isPermitSampleTime 0006  
                                    _uiSmallTimer 00A2                             __end_of_adc_test_init 0653  
                                   _timer1_config 0709                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                                   ??_clearAllTimer 0020  
                     main@ucFourthSuffix1TimerP3s 0052                            _getAdOriginalCh14Value 0541  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 0785  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                      main@ucTimerForDACR0_CNT1_f 0062                        main@ucTimerForDACR0_CNT2_f 0064  
                                __size_of_initPin 0013                                    Filter@tmpValue 0020  
                                  ?_timer1_config 0070                                          _op1_init 06FE  
                                        _op2_init 0766                                       ??_adc_start 0020  
                            _startThreeHoursTimer 06D6                             _clearTwelveHoursTimer 0668  
                                   __size_of_main 043B                                          clear_ram 072E  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0004  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 052E  
                                     _sampleTimes 0048                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 0063                                          intlevel1 0000  
                           _getAdOriginalCh1Value 0537                        ?_isFinishedThreeHoursTimer 0070  
                               main@ucLoaderStep1 0054                                 main@ucLoaderStep2 0055  
                               main@ucLoaderStep3 0056                                 main@ucLoaderStep4 0057  
                                   ?_clock_config 0070                          ?_startTwentySecondsTimer 0070  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                           ?_getAdOriginaCh4Value 0046                                   ??_timer1_config 0020  
                               main@bCheckTweHour 0049                       __end_ofi1_setAD_ConvertFlag 051E  
              __end_of_process_AD_Converter_Value 0617                        _process_AD_Converter_Value 05F9  
                          ?_clearTwelveHoursTimer 0070                           main@ucCheckTimerP2sLess 004E  
                         main@ucCheckTimerP2sMore 004F                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 0663  
