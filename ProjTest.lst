

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Jun 18 09:03:19 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	text583,local,class=CODE,delta=2
    18                           	psect	text584,local,class=CODE,delta=2
    19                           	psect	text590,local,class=CODE,delta=2
    20                           	psect	text591,local,class=CODE,delta=2
    21                           	psect	text592,local,class=CODE,delta=2
    22                           	psect	text593,local,class=CODE,delta=2
    23                           	psect	text594,local,class=CODE,delta=2
    24                           	psect	text595,local,class=CODE,delta=2
    25                           	psect	text596,local,class=CODE,delta=2
    26                           	psect	text597,local,class=CODE,delta=2
    27                           	psect	text598,local,class=CODE,delta=2
    28                           	psect	text599,local,class=CODE,delta=2
    29                           	psect	text600,local,class=CODE,delta=2
    30                           	psect	text602,local,class=CODE,delta=2
    31                           	psect	text603,local,class=CODE,delta=2
    32                           	psect	text604,local,class=CODE,delta=2
    33                           	psect	text606,local,class=CODE,delta=2
    34                           	psect	text607,local,class=CODE,delta=2
    35                           	psect	text608,local,class=CODE,delta=2
    36                           	psect	text612,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text615,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  005E                     _PEIE	set	94
    72  0060                     _TMR1IF	set	96
    73  009F                     _ADCON1	set	159
    74  009E                     _ADRESL	set	158
    75  0087                     _DACCON	set	135
    76  0088                     _DACR0	set	136
    77  009B                     _OP2CON0	set	155
    78  009C                     _OP2CON1	set	156
    79  009D                     _OP2CON2	set	157
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0433                     _TRISB3	set	1075
    92  0434                     _TRISB4	set	1076
    93  0435                     _TRISB5	set	1077
    94  0436                     _TRISB6	set	1078
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  0441                     start_initialization:	
   103  0441  3020               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0442  01F6               	clrf	__pbssCOMMON& (0+127)
   107  0443  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   108  0444  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   109  0445  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   110  0446  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   111                           
   112                           ; Clear objects allocated to BANK0
   113  0447  1383               	bcf	3,7	;select IRP bank0
   114  0448  0084               	movwf	4
   115  0449  3056               	movlw	low (__pbssBANK0+54)
   116  044A  118A  248E         	fcall	clear_ram
   117                           
   118                           ;initializer for _sampleChannelSelect
   119  044C  300E               	movlw	14
   120  044D  00DB               	movwf	__pdataBANK0& (0+127)
   121  044E                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  044E  0183               	clrf	3
   125  044F  118A  280D         	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMMON
   128  0076                     __pbssCOMMON:	
   129  0076                     _uiBigTimer:	
   130  0076                     	ds	2
   131  0078                     ISR@ucTimer1sCnt:	
   132  0078                     	ds	1
   133  0079                     _adc_convert_flag:	
   134  0079                     	ds	1
   135  007A                     _timer:	
   136  007A                     	ds	1
   137                           
   138                           	psect	bssBANK0
   139  0020                     __pbssBANK0:	
   140  0020                     _buffer_Sample_AD_Value:	
   141  0020                     	ds	12
   142  002C                     _adc_original_CH14_value:	
   143  002C                     	ds	2
   144  002E                     _adc_original_CH1_value:	
   145  002E                     	ds	2
   146  0030                     _adc_original_CH4_value:	
   147  0030                     	ds	2
   148  0032                     _adc_original_value:	
   149  0032                     	ds	2
   150  0034                     _multiFilterMaxValue:	
   151  0034                     	ds	2
   152  0036                     _multiFilterMinValue:	
   153  0036                     	ds	2
   154  0038                     _uiSmallTimer:	
   155  0038                     	ds	2
   156  003A                     _uiTwentySecondsTimer:	
   157  003A                     	ds	2
   158  003C                     _sampleTimes:	
   159  003C                     	ds	1
   160  003D                     main@cTimer1s_806:	
   161  003D                     	ds	1
   162  003E                     main@enumBranchStep:	
   163  003E                     	ds	1
   164  003F                     main@enumInteralStep:	
   165  003F                     	ds	1
   166  0040                     main@enumMainLoopStep:	
   167  0040                     	ds	1
   168  0041                     main@ucADC4_Step:	
   169  0041                     	ds	1
   170  0042                     main@ucChannel4Type:	
   171  0042                     	ds	1
   172  0043                     main@ucLoaderStep:	
   173  0043                     	ds	1
   174  0044                     main@ucLoaderStep1:	
   175  0044                     	ds	1
   176  0045                     main@ucLoaderStep2:	
   177  0045                     	ds	1
   178  0046                     main@ucLoaderStep3:	
   179  0046                     	ds	1
   180  0047                     main@ucLoaderStep4:	
   181  0047                     	ds	1
   182  0048                     main@ucTimer1s:	
   183  0048                     	ds	1
   184  0049                     main@ucTimer20s:	
   185  0049                     	ds	1
   186  004A                     main@ucTimerADC1ZeroP5s:	
   187  004A                     	ds	1
   188  004B                     main@ucTimerDelay:	
   189  004B                     	ds	1
   190  004C                     main@ucTimerDelay1:	
   191  004C                     	ds	1
   192  004D                     main@ucTimerDelay2:	
   193  004D                     	ds	1
   194  004E                     main@ucTimerDelay3:	
   195  004E                     	ds	1
   196  004F                     main@ucTimerDelay4:	
   197  004F                     	ds	1
   198  0050                     main@ucTimerP3s:	
   199  0050                     	ds	1
   200  0051                     main@ucTimerRightP5s:	
   201  0051                     	ds	1
   202  0052                     main@ucTimerX1P5s:	
   203  0052                     	ds	1
   204  0053                     main@ucTimerX2P5s:	
   205  0053                     	ds	1
   206  0054                     main@ucTimerZeroPoint3s:	
   207  0054                     	ds	1
   208  0055                     main@ucTimerZeroPoint5s:	
   209  0055                     	ds	1
   210                           
   211                           	psect	dataBANK0
   212  005B                     __pdataBANK0:	
   213  005B                     _sampleChannelSelect:	
   214  005B                     	ds	1
   215                           
   216                           	psect	clrtext
   217  048E                     clear_ram:	
   218                           ;	Called with FSR containing the base address, and
   219                           ;	W with the last address+1
   220                           
   221  048E  0064               	clrwdt	;clear the watchdog before getting into this loop
   222  048F                     clrloop:	
   223  048F  0180               	clrf	0	;clear RAM location pointed to by FSR
   224  0490  0A84               	incf	4,f	;increment pointer
   225  0491  0604               	xorwf	4,w	;XOR with final address
   226  0492  1903               	btfsc	3,2	;have we reached the end yet?
   227  0493  3400               	retlw	0	;all done for this memory range, return
   228  0494  0604               	xorwf	4,w	;XOR again to restore value
   229  0495  2C8F               	goto	clrloop	;do the next byte
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:	
   233  0070                     ?_clearTwelveHoursTimer:	
   234  0070                     ?_clearThreeHoursTimer:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_clearTwentySecondsTimer:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_clock_config:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_timer1_config:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_timer1_interrupt_config:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_dac_init:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_op1_init:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_op2_init:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_adc_start:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_clrSampeTime:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_process_AD_Converter_Value:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_startTwelveHourTimer:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_startTwentySecondsTimer:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_startThreeHoursTimer:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_AD_Sample:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_clearAllTimer:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_clearPinPortAndTimer:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_setAD_ConvertFlag:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_ISR:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?i1_setAD_ConvertFlag:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ??i1_setAD_ConvertFlag:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_isPermitSampleTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_isFinishedTwelveHoursTimer:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_isFinishedTwentySecondsTimer:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_isFinishedThreeHoursTimer:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_getAD_ConvertFlag:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_adc_get:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     i1setAD_ConvertFlag@flag:	
   319                           ; 2 bytes @ 0x0
   320                           
   321                           
   322                           ; 1 bytes @ 0x0
   323  0070                     	ds	2
   324  0072                     ??_adc_get:	
   325  0072                     adc_get@val:	
   326                           ; 0 bytes @ 0x2
   327                           
   328                           
   329                           ; 2 bytes @ 0x2
   330  0072                     	ds	2
   331  0074                     ??_ISR:	
   332                           
   333                           ; 0 bytes @ 0x4
   334  0074                     	ds	2
   335                           
   336                           	psect	cstackBANK0
   337  0056                     __pcstackBANK0:	
   338  0056                     ??_clearTwelveHoursTimer:	
   339  0056                     ??_clearThreeHoursTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0056                     ??_clearTwentySecondsTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0056                     ??_clock_config:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0056                     ??_timer1_config:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0056                     ??_timer1_interrupt_config:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0056                     ?_adc_test_init:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0056                     ??_dac_init:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0056                     ??_op1_init:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0056                     ??_op2_init:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0056                     ??_adc_start:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0056                     ??_isPermitSampleTime:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0056                     ??_clrSampeTime:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0056                     ??_startTwelveHourTimer:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0056                     ??_isFinishedTwelveHoursTimer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0056                     ??_startTwentySecondsTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0056                     ??_isFinishedTwentySecondsTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0056                     ??_startThreeHoursTimer:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0056                     ??_isFinishedThreeHoursTimer:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0056                     ??_clearAllTimer:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0056                     ??_clearPinPortAndTimer:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0056                     ??_getAD_ConvertFlag:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0056                     ??_setAD_ConvertFlag:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0056                     ?_getAdOriginalCh14Value:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0056                     ?_getAdOriginalCh1Value:	
   409                           ; 2 bytes @ 0x0
   410                           
   411  0056                     ?_getAdOriginaCh4Value:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0056                     ?_getAdOriginalValue:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0056                     setAD_ConvertFlag@flag:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0056                     adc_test_init@ref:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0056                     	ds	1
   426  0057                     ??_adc_test_init:	
   427                           
   428                           ; 0 bytes @ 0x1
   429  0057                     	ds	1
   430  0058                     ??_getAdOriginalCh14Value:	
   431  0058                     ??_getAdOriginalCh1Value:	
   432                           ; 0 bytes @ 0x2
   433                           
   434  0058                     ??_getAdOriginaCh4Value:	
   435                           ; 0 bytes @ 0x2
   436                           
   437  0058                     ??_AD_Sample:	
   438                           ; 0 bytes @ 0x2
   439                           
   440  0058                     ??_getAdOriginalValue:	
   441                           ; 0 bytes @ 0x2
   442                           
   443  0058                     adc_test_init@channel:	
   444                           ; 0 bytes @ 0x2
   445                           
   446                           
   447                           ; 1 bytes @ 0x2
   448  0058                     	ds	2
   449  005A                     AD_Sample@index:	
   450                           
   451                           ; 1 bytes @ 0x4
   452  005A                     	ds	1
   453  005B                     ??_process_AD_Converter_Value:	
   454  005B                     ??_main:	
   455                           ; 0 bytes @ 0x5
   456                           
   457                           
   458                           	psect	maintext
   459  000D                     __pmaintext:	
   460                           ; 0 bytes @ 0x5
   461 ;;Data sizes: Strings 0, constant 0, data 1, bss 59, persistent 0 stack 0
   462 ;;Auto spaces:   Size  Autos    Used
   463 ;; COMMON          14      6      11
   464 ;; BANK0           80      5      60
   465 ;; BANK1           80      0       0
   466 ;; BANK3           96      0       0
   467 ;; BANK2           96      0       0
   468 ;;
   469 ;; Pointer list with targets:
   470 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   471 ;;
   472 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   473 ;;
   474 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   475 ;;
   476 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   477 ;;
   478 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   479 ;;
   480 ;;
   481 ;; Critical Paths under _main in COMMON
   482 ;;
   483 ;;   None.
   484 ;;
   485 ;; Critical Paths under _ISR in COMMON
   486 ;;
   487 ;;   _ISR->_adc_get
   488 ;;
   489 ;; Critical Paths under _main in BANK0
   490 ;;
   491 ;;   _process_AD_Converter_Value->_AD_Sample
   492 ;;   _AD_Sample->_getAdOriginalValue
   493 ;;
   494 ;; Critical Paths under _ISR in BANK0
   495 ;;
   496 ;;   None.
   497 ;;
   498 ;; Critical Paths under _main in BANK1
   499 ;;
   500 ;;   None.
   501 ;;
   502 ;; Critical Paths under _ISR in BANK1
   503 ;;
   504 ;;   None.
   505 ;;
   506 ;; Critical Paths under _main in BANK3
   507 ;;
   508 ;;   None.
   509 ;;
   510 ;; Critical Paths under _ISR in BANK3
   511 ;;
   512 ;;   None.
   513 ;;
   514 ;; Critical Paths under _main in BANK2
   515 ;;
   516 ;;   None.
   517 ;;
   518 ;; Critical Paths under _ISR in BANK2
   519 ;;
   520 ;;   None.
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   523 ;;
   524 ;;
   525 ;;Call Graph Tables:
   526 ;;
   527 ;; ---------------------------------------------------------------------------------
   528 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (0) _main                                                 0     0      0     178
   531 ;;                       _clock_config
   532 ;;                      _timer1_config
   533 ;;            _timer1_interrupt_config
   534 ;;                      _adc_test_init
   535 ;;                           _dac_init
   536 ;;                           _op1_init
   537 ;;                           _op2_init
   538 ;;                          _adc_start
   539 ;;                 _isPermitSampleTime
   540 ;;                       _clrSampeTime
   541 ;;         _process_AD_Converter_Value
   542 ;;             _getAdOriginalCh14Value
   543 ;;               _clearPinPortAndTimer
   544 ;;              _getAdOriginalCh1Value
   545 ;;               _startTwelveHourTimer
   546 ;;         _isFinishedTwelveHoursTimer
   547 ;;            _startTwentySecondsTimer
   548 ;;               _getAdOriginaCh4Value
   549 ;;       _isFinishedTwentySecondsTimer
   550 ;;               _startThreeHoursTimer
   551 ;;          _isFinishedThreeHoursTimer
   552 ;;               _clearThreeHoursTimer
   553 ;;                      _clearAllTimer
   554 ;; ---------------------------------------------------------------------------------
   555 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   556 ;;                  _getAD_ConvertFlag
   557 ;;                  _setAD_ConvertFlag
   558 ;;                          _AD_Sample
   559 ;;                      _adc_test_init
   560 ;;                          _adc_start
   561 ;; ---------------------------------------------------------------------------------
   562 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   563 ;;                      _clearAllTimer
   564 ;; ---------------------------------------------------------------------------------
   565 ;; (2) _AD_Sample                                            3     3      0      68
   566 ;;                                              2 BANK0      3     3      0
   567 ;;                 _getAdOriginalValue
   568 ;; ---------------------------------------------------------------------------------
   569 ;; (1) _clearAllTimer                                        0     0      0       0
   570 ;;              _clearTwelveHoursTimer
   571 ;;               _clearThreeHoursTimer
   572 ;;            _clearTwentySecondsTimer
   573 ;; ---------------------------------------------------------------------------------
   574 ;; (3) _getAdOriginalValue                                   2     0      2       0
   575 ;;                                              0 BANK0      2     0      2
   576 ;; ---------------------------------------------------------------------------------
   577 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   578 ;;                                              0 BANK0      1     1      0
   579 ;; ---------------------------------------------------------------------------------
   580 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   581 ;; ---------------------------------------------------------------------------------
   582 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _startThreeHoursTimer                                 0     0      0       0
   585 ;; ---------------------------------------------------------------------------------
   586 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (1) _getAdOriginaCh4Value                                 2     0      2       0
   589 ;;                                              0 BANK0      2     0      2
   590 ;; ---------------------------------------------------------------------------------
   591 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (1) _startTwelveHourTimer                                 0     0      0       0
   596 ;; ---------------------------------------------------------------------------------
   597 ;; (1) _getAdOriginalCh1Value                                2     0      2       0
   598 ;;                                              0 BANK0      2     0      2
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (1) _getAdOriginalCh14Value                               2     0      2       0
   601 ;;                                              0 BANK0      2     0      2
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (1) _clrSampeTime                                         0     0      0       0
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (1) _isPermitSampleTime                                   0     0      0       0
   606 ;; ---------------------------------------------------------------------------------
   607 ;; (2) _adc_start                                            0     0      0       0
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (1) _op2_init                                             0     0      0       0
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (1) _op1_init                                             0     0      0       0
   612 ;; ---------------------------------------------------------------------------------
   613 ;; (1) _dac_init                                             0     0      0       0
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (2) _adc_test_init                                        3     2      1      44
   616 ;;                                              0 BANK0      3     2      1
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _timer1_interrupt_config                              0     0      0       0
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _timer1_config                                        0     0      0       0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (1) _clock_config                                         0     0      0       0
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   629 ;; ---------------------------------------------------------------------------------
   630 ;; Estimated maximum stack depth 3
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (4) _ISR                                                  2     2      0      97
   635 ;;                                              4 COMMON     2     2      0
   636 ;;                i1_setAD_ConvertFlag
   637 ;;                            _adc_get
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   640 ;;                                              0 COMMON     1     1      0
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (5) _adc_get                                              4     2      2      24
   643 ;;                                              0 COMMON     4     2      2
   644 ;; ---------------------------------------------------------------------------------
   645 ;; Estimated maximum stack depth 5
   646 ;; ---------------------------------------------------------------------------------
   647 ;; Call Graph Graphs:
   648 ;; _main (ROOT)
   649 ;;   _clock_config
   650 ;;   _timer1_config
   651 ;;   _timer1_interrupt_config
   652 ;;   _adc_test_init
   653 ;;   _dac_init
   654 ;;   _op1_init
   655 ;;   _op2_init
   656 ;;   _adc_start
   657 ;;   _isPermitSampleTime
   658 ;;   _clrSampeTime
   659 ;;   _process_AD_Converter_Value
   660 ;;     _getAD_ConvertFlag
   661 ;;     _setAD_ConvertFlag
   662 ;;     _AD_Sample
   663 ;;       _getAdOriginalValue
   664 ;;     _adc_test_init
   665 ;;     _adc_start
   666 ;;   _getAdOriginalCh14Value
   667 ;;   _clearPinPortAndTimer
   668 ;;     _clearAllTimer
   669 ;;       _clearTwelveHoursTimer
   670 ;;       _clearThreeHoursTimer
   671 ;;       _clearTwentySecondsTimer
   672 ;;   _getAdOriginalCh1Value
   673 ;;   _startTwelveHourTimer
   674 ;;   _isFinishedTwelveHoursTimer
   675 ;;   _startTwentySecondsTimer
   676 ;;   _getAdOriginaCh4Value
   677 ;;   _isFinishedTwentySecondsTimer
   678 ;;   _startThreeHoursTimer
   679 ;;   _isFinishedThreeHoursTimer
   680 ;;   _clearThreeHoursTimer
   681 ;;   _clearAllTimer
   682 ;;     _clearTwelveHoursTimer
   683 ;;     _clearThreeHoursTimer
   684 ;;     _clearTwentySecondsTimer
   685 ;;
   686 ;; _ISR (ROOT)
   687 ;;   i1_setAD_ConvertFlag
   688 ;;   _adc_get
   689 ;;
   690 ;; Address spaces:
   691 ;;Name               Size   Autos  Total    Cost      Usage
   692 ;;BANK3               60      0       0      10        0.0%
   693 ;;BITBANK3            60      0       0       9        0.0%
   694 ;;SFR3                 0      0       0       4        0.0%
   695 ;;BITSFR3              0      0       0       4        0.0%
   696 ;;BANK2               60      0       0      12        0.0%
   697 ;;BITBANK2            60      0       0      11        0.0%
   698 ;;SFR2                 0      0       0       5        0.0%
   699 ;;BITSFR2              0      0       0       5        0.0%
   700 ;;SFR1                 0      0       0       2        0.0%
   701 ;;BITSFR1              0      0       0       2        0.0%
   702 ;;BANK1               50      0       0       8        0.0%
   703 ;;BITBANK1            50      0       0       7        0.0%
   704 ;;CODE                 0      0       0       0        0.0%
   705 ;;DATA                 0      0      4E       6        0.0%
   706 ;;ABS                  0      0      47       3        0.0%
   707 ;;NULL                 0      0       0       0        0.0%
   708 ;;STACK                0      0       7       2        0.0%
   709 ;;BANK0               50      5      3C       5       75.0%
   710 ;;BITBANK0            50      0       0       4        0.0%
   711 ;;SFR0                 0      0       0       1        0.0%
   712 ;;BITSFR0              0      0       0       1        0.0%
   713 ;;COMMON               E      6       B       1       78.6%
   714 ;;BITCOMMON            E      0       0       0        0.0%
   715                           
   716                           
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 17F/0
   730 ;;		On exit  : 60/0
   731 ;;		Unchanged: FFE00/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels required when called:    5
   739 ;; This function calls:
   740 ;;		_clock_config
   741 ;;		_timer1_config
   742 ;;		_timer1_interrupt_config
   743 ;;		_adc_test_init
   744 ;;		_dac_init
   745 ;;		_op1_init
   746 ;;		_op2_init
   747 ;;		_adc_start
   748 ;;		_isPermitSampleTime
   749 ;;		_clrSampeTime
   750 ;;		_process_AD_Converter_Value
   751 ;;		_getAdOriginalCh14Value
   752 ;;		_clearPinPortAndTimer
   753 ;;		_getAdOriginalCh1Value
   754 ;;		_startTwelveHourTimer
   755 ;;		_isFinishedTwelveHoursTimer
   756 ;;		_startTwentySecondsTimer
   757 ;;		_getAdOriginaCh4Value
   758 ;;		_isFinishedTwentySecondsTimer
   759 ;;		_startThreeHoursTimer
   760 ;;		_isFinishedThreeHoursTimer
   761 ;;		_clearThreeHoursTimer
   762 ;;		_clearAllTimer
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767  000D                     _main:	
   768                           
   769                           ;main.c: 106: enum setp_Adc4
   770                           ;main.c: 107: {
   771                           ;main.c: 108: ADC4_STEP_INIT = 0,
   772                           ;main.c: 109: ADC4_STEP_FIRST,
   773                           ;main.c: 110: ADC4_STEP_SECOND,
   774                           ;main.c: 111: ADC4_STEP_THIRD,
   775                           ;main.c: 112: ADC4_STEP_FOURTH,
   776                           ;main.c: 113: ADC4_STEP_FIFTH,
   777                           ;main.c: 114: ADC4_STEP_SIXTH,
   778                           ;main.c: 115: };
   779                           ;main.c: 118: static unsigned char ucWaitTime1S = 0;
   780                           ;main.c: 120: static unsigned char ucWaitTimeO3s = 0;
   781                           ;main.c: 122: static unsigned char ucSmallTimerActionFlag = 0;
   782                           ;main.c: 124: static unsigned char ucSetSmallActionFlag = 0;
   783                           
   784                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   785  000D  1683               	bsf	3,5	;RP0=1, select bank1
   786  000E  1005               	bcf	5,0
   787                           
   788                           ;main.c: 127: TRISA1 = 0;
   789  000F  1085               	bcf	5,1
   790                           
   791                           ;main.c: 128: TRISA2 = 0;
   792  0010  1105               	bcf	5,2
   793                           
   794                           ;main.c: 129: TRISA3 = 0;
   795  0011  1185               	bcf	5,3
   796                           
   797                           ;main.c: 130: TRISB0 = 0;
   798  0012  1006               	bcf	6,0
   799                           
   800                           ;main.c: 131: TRISB1 = 0;
   801  0013  1086               	bcf	6,1
   802                           
   803                           ;main.c: 132: TRISA6 = 0;
   804  0014  1305               	bcf	5,6
   805                           
   806                           ;main.c: 133: TRISA7 = 0;
   807  0015  1385               	bcf	5,7
   808                           
   809                           ;main.c: 134: TRISB6 = 0;
   810  0016  1306               	bcf	6,6
   811                           
   812                           ;main.c: 136: PBOD6 = 1;
   813  0017  1703               	bsf	3,6	;RP1=1, select bank3
   814  0018  1708               	bsf	8,6
   815                           
   816                           ;main.c: 138: PA0 = 0;
   817  0019  1283               	bcf	3,5	;RP0=0, select bank0
   818  001A  1303               	bcf	3,6	;RP1=0, select bank0
   819  001B  1005               	bcf	5,0
   820                           
   821                           ;main.c: 139: PA1 = 0;
   822  001C  1085               	bcf	5,1
   823                           
   824                           ;main.c: 140: PA2 = 0;
   825  001D  1105               	bcf	5,2
   826                           
   827                           ;main.c: 141: PA3 = 0;
   828  001E  1185               	bcf	5,3
   829                           
   830                           ;main.c: 142: PB0 = 0;
   831  001F  1006               	bcf	6,0
   832                           
   833                           ;main.c: 143: PB1 = 1;
   834  0020  1486               	bsf	6,1
   835                           
   836                           ;main.c: 144: PA6 = 0;
   837  0021  1305               	bcf	5,6
   838                           
   839                           ;main.c: 145: PA7 = 0;
   840  0022  1385               	bcf	5,7
   841                           
   842                           ;main.c: 147: TRISB2 = 1;
   843  0023  1683               	bsf	3,5	;RP0=1, select bank1
   844  0024  1506               	bsf	6,2
   845                           
   846                           ;main.c: 149: TRISB7 = 1;
   847  0025  1786               	bsf	6,7
   848                           
   849                           ;main.c: 150: TRISB4 = 1;
   850  0026  1606               	bsf	6,4
   851                           
   852                           ;main.c: 152: clock_config();
   853  0027  118A  249E  118A   	fcall	_clock_config
   854                           
   855                           ;main.c: 153: timer1_config();
   856  002A  118A  2484  118A   	fcall	_timer1_config
   857                           
   858                           ;main.c: 154: timer1_interrupt_config();
   859  002D  118A  24DE  118A   	fcall	_timer1_interrupt_config
   860                           
   861                           ;main.c: 156: adc_test_init(14,3);
   862  0030  3003               	movlw	3
   863  0031  1283               	bcf	3,5	;RP0=0, select bank0
   864  0032  00D6               	movwf	?_adc_test_init
   865  0033  300E               	movlw	14
   866  0034  118A  23A2  118A   	fcall	_adc_test_init
   867                           
   868                           ;main.c: 158: dac_init();
   869  0037  118A  24D5  118A   	fcall	_dac_init
   870                           
   871                           ;main.c: 159: op1_init();
   872  003A  118A  2479  118A   	fcall	_op1_init
   873                           
   874                           ;main.c: 160: op2_init();
   875  003D  118A  2496  118A   	fcall	_op2_init
   876                           
   877                           ;main.c: 163: adc_start();
   878  0040  118A  23B7  118A   	fcall	_adc_start
   879  0043                     l3937:	
   880  0043  0064               	clrwdt	;#
   881                           
   882                           ;main.c: 198: if(isPermitSampleTime())
   883  0044  118A  24D0  118A   	fcall	_isPermitSampleTime
   884  0047  3A00               	xorlw	0
   885  0048  1903               	skipnz
   886  0049  2843               	goto	l3937
   887                           
   888                           ;main.c: 199: {
   889                           ;main.c: 200: clrSampeTime();
   890  004A  118A  24E1  118A   	fcall	_clrSampeTime
   891                           
   892                           ;main.c: 201: process_AD_Converter_Value();
   893  004D  118A  2316  118A   	fcall	_process_AD_Converter_Value
   894                           
   895                           ;main.c: 203: switch(enumMainLoopStep)
   896  0050  2AF8               	goto	l4423
   897  0051                     l3945:	
   898                           
   899                           ;main.c: 206: {
   900                           ;main.c: 207: static unsigned char ucTimerZeroPoint5s = 0;
   901                           ;main.c: 208: if(getAdOriginalCh14Value() > 1950)
   902  0051  118A  24CB  118A   	fcall	_getAdOriginalCh14Value
   903  0054  3007               	movlw	7
   904  0055  0257               	subwf	?_getAdOriginalCh14Value+1,w
   905  0056  309F               	movlw	159
   906  0057  1903               	skipnz
   907  0058  0256               	subwf	?_getAdOriginalCh14Value,w
   908  0059  1C03               	skipc
   909  005A  285D               	goto	l3949
   910                           
   911                           ;main.c: 209: {
   912                           ;main.c: 210: ucTimerZeroPoint5s++;
   913  005B  0AD5               	incf	main@ucTimerZeroPoint5s,f
   914                           
   915                           ;main.c: 211: }
   916  005C  285E               	goto	l3951
   917  005D                     l3949:	
   918                           
   919                           ;main.c: 212: else
   920                           ;main.c: 213: ucTimerZeroPoint5s = 0;
   921  005D  01D5               	clrf	main@ucTimerZeroPoint5s
   922  005E                     l3951:	
   923                           
   924                           ;main.c: 215: if(ucTimerZeroPoint5s >= 5)
   925  005E  3005               	movlw	5
   926  005F  0255               	subwf	main@ucTimerZeroPoint5s,w
   927  0060  1C03               	skipc
   928  0061  2843               	goto	l3937
   929                           
   930                           ;main.c: 216: {
   931                           ;main.c: 217: ucTimerZeroPoint5s = 0;
   932  0062  01D5               	clrf	main@ucTimerZeroPoint5s
   933  0063                     l3955:	
   934                           
   935                           ;main.c: 218: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   936  0063  01C0               	clrf	main@enumMainLoopStep
   937  0064  0AC0               	incf	main@enumMainLoopStep,f
   938  0065                     l703:	
   939                           
   940                           ;main.c: 219: }
   941                           ;main.c: 220: break;
   942  0065  2843               	goto	l3937
   943  0066                     l3957:	
   944                           
   945                           ;main.c: 224: {
   946                           ;main.c: 225: static unsigned char ucTimerZeroPoint3s = 0;
   947                           ;main.c: 227: if(ucTimerZeroPoint3s < 3)
   948  0066  3003               	movlw	3
   949  0067  0254               	subwf	main@ucTimerZeroPoint3s,w
   950  0068  1803               	skipnc
   951  0069  286C               	goto	l3961
   952                           
   953                           ;main.c: 228: {
   954                           ;main.c: 229: ucTimerZeroPoint3s++;
   955  006A  0AD4               	incf	main@ucTimerZeroPoint3s,f
   956                           
   957                           ;main.c: 230: }
   958  006B  2843               	goto	l3937
   959  006C                     l3961:	
   960                           
   961                           ;main.c: 231: else
   962                           ;main.c: 232: {
   963                           ;main.c: 233: ucTimerZeroPoint3s = 0;
   964  006C  01D4               	clrf	main@ucTimerZeroPoint3s
   965                           
   966                           ;main.c: 235: if(getAdOriginalCh14Value() > 1950)
   967  006D  118A  24CB  118A   	fcall	_getAdOriginalCh14Value
   968  0070  3007               	movlw	7
   969  0071  0257               	subwf	?_getAdOriginalCh14Value+1,w
   970  0072  309F               	movlw	159
   971  0073  1903               	skipnz
   972  0074  0256               	subwf	?_getAdOriginalCh14Value,w
   973  0075  1C03               	skipc
   974  0076  2879               	goto	l3967
   975  0077                     l3965:	
   976                           
   977                           ;main.c: 236: {
   978                           ;main.c: 238: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
   979  0077  3002               	movlw	2
   980  0078  28B2               	goto	L5
   981  0079                     l3967:	
   982                           ;main.c: 239: }
   983                           
   984                           
   985                           ;main.c: 240: else
   986                           ;main.c: 241: {
   987                           ;main.c: 242: clearPinPortAndTimer();
   988  0079  118A  242C  118A   	fcall	_clearPinPortAndTimer
   989  007C  2843               	goto	l3937
   990  007D                     l712:	
   991                           ;main.c: 246: }
   992                           ;main.c: 248: case MAIN_LOOP_STEP_SECOND:
   993                           
   994  007D  3003               	movlw	3
   995                           
   996                           ;main.c: 249: {
   997                           ;main.c: 251: PA6 = 1;
   998  007E  1705               	bsf	5,6
   999                           
  1000                           ;main.c: 252: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1001  007F  28B2               	goto	L5
  1002  0080                     l3971:	
  1003                           ;main.c: 254: break;
  1004                           
  1005                           
  1006                           ;main.c: 258: {
  1007                           ;main.c: 259: static unsigned char ucTimerADC1ZeroP5s = 0;
  1008                           ;main.c: 261: if(getAdOriginalCh1Value() < 130)
  1009  0080  118A  24C6  118A   	fcall	_getAdOriginalCh1Value
  1010  0083  3000               	movlw	0
  1011  0084  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1012  0085  3082               	movlw	130
  1013  0086  1903               	skipnz
  1014  0087  0256               	subwf	?_getAdOriginalCh1Value,w
  1015  0088  1803               	skipnc
  1016  0089  288C               	goto	l3975
  1017                           
  1018                           ;main.c: 262: {
  1019                           ;main.c: 263: ucTimerADC1ZeroP5s = 0;
  1020  008A  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1021                           
  1022                           ;main.c: 265: }
  1023  008B  288D               	goto	l3977
  1024  008C                     l3975:	
  1025                           
  1026                           ;main.c: 266: else
  1027                           ;main.c: 267: {
  1028                           ;main.c: 268: ucTimerADC1ZeroP5s++;
  1029  008C  0ACA               	incf	main@ucTimerADC1ZeroP5s,f
  1030  008D                     l3977:	
  1031                           
  1032                           ;main.c: 269: }
  1033                           ;main.c: 271: if(ucTimerADC1ZeroP5s >= 1)
  1034  008D  084A               	movf	main@ucTimerADC1ZeroP5s,w
  1035  008E  1903               	btfsc	3,2
  1036  008F  2893               	goto	l3983
  1037  0090  3004               	movlw	4
  1038                           
  1039                           ;main.c: 272: {
  1040                           ;main.c: 273: ucTimerADC1ZeroP5s = 0;
  1041  0091  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1042                           
  1043                           ;main.c: 274: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1044  0092  28B2               	goto	L5
  1045  0093                     l3983:	
  1046                           ;main.c: 275: }
  1047                           
  1048                           
  1049                           ;main.c: 276: else
  1050                           ;main.c: 277: {
  1051                           ;main.c: 278: static unsigned char ucTimerRightP5s = 0;
  1052                           ;main.c: 280: if(getAdOriginalCh1Value() < 117)
  1053  0093  118A  24C6  118A   	fcall	_getAdOriginalCh1Value
  1054  0096  3000               	movlw	0
  1055  0097  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1056  0098  3075               	movlw	117
  1057  0099  1903               	skipnz
  1058  009A  0256               	subwf	?_getAdOriginalCh1Value,w
  1059  009B  1803               	skipnc
  1060  009C  289F               	goto	l3987
  1061                           
  1062                           ;main.c: 281: {
  1063                           ;main.c: 282: ucTimerRightP5s++;
  1064  009D  0AD1               	incf	main@ucTimerRightP5s,f
  1065                           
  1066                           ;main.c: 283: }
  1067  009E  28A0               	goto	l3989
  1068  009F                     l3987:	
  1069                           
  1070                           ;main.c: 284: else
  1071                           ;main.c: 285: {
  1072                           ;main.c: 286: ucTimerRightP5s = 0;
  1073  009F  01D1               	clrf	main@ucTimerRightP5s
  1074  00A0                     l3989:	
  1075                           
  1076                           ;main.c: 287: }
  1077                           ;main.c: 289: if(ucTimerRightP5s >= 1)
  1078  00A0  0851               	movf	main@ucTimerRightP5s,w
  1079  00A1  1903               	btfsc	3,2
  1080  00A2  2843               	goto	l3937
  1081  00A3  3008               	movlw	8
  1082                           
  1083                           ;main.c: 290: {
  1084                           ;main.c: 291: ucTimerRightP5s = 0;
  1085  00A4  01D1               	clrf	main@ucTimerRightP5s
  1086                           
  1087                           ;main.c: 292: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1088  00A5  28B2               	goto	L5
  1089  00A6                     l3995:	
  1090                           ;main.c: 293: }
  1091                           
  1092                           
  1093                           ;main.c: 304: {
  1094                           ;main.c: 306: startTwelveHourTimer();
  1095  00A6  118A  24C1  118A   	fcall	_startTwelveHourTimer
  1096                           
  1097                           ;main.c: 307: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1098  00A9  3005               	movlw	5
  1099  00AA  28B2               	goto	L5
  1100  00AB                     l3999:	
  1101                           ;main.c: 309: break;
  1102                           
  1103                           
  1104                           ;main.c: 313: {
  1105                           ;main.c: 315: if(isFinishedTwelveHoursTimer())
  1106  00AB  118A  24BC  118A   	fcall	_isFinishedTwelveHoursTimer
  1107  00AE  3A00               	xorlw	0
  1108  00AF  1903               	skipnz
  1109  00B0  2A38               	goto	l4313
  1110  00B1                     l4001:	
  1111                           
  1112                           ;main.c: 316: {
  1113                           ;main.c: 317: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1114  00B1  3009               	movlw	9
  1115  00B2                     L5:	
  1116  00B2  00C0               	movwf	main@enumMainLoopStep
  1117                           
  1118                           ;main.c: 318: }
  1119  00B3  2843               	goto	l3937
  1120  00B4                     l4003:	
  1121                           
  1122                           ;main.c: 326: {
  1123                           ;main.c: 327: startTwentySecondsTimer();
  1124  00B4  118A  24DA  118A   	fcall	_startTwentySecondsTimer
  1125  00B7                     l4005:	
  1126                           
  1127                           ;main.c: 328: ucADC4_Step = ADC4_STEP_FIRST;
  1128  00B7  01C1               	clrf	main@ucADC4_Step
  1129  00B8  0AC1               	incf	main@ucADC4_Step,f
  1130                           
  1131                           ;main.c: 329: break;
  1132  00B9  2843               	goto	l3937
  1133  00BA                     l4007:	
  1134                           
  1135                           ;main.c: 333: {
  1136                           ;main.c: 334: if(getAdOriginaCh4Value() < 1911)
  1137  00BA  118A  24B7  118A   	fcall	_getAdOriginaCh4Value
  1138  00BD  3007               	movlw	7
  1139  00BE  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1140  00BF  3077               	movlw	119
  1141  00C0  1903               	skipnz
  1142  00C1  0256               	subwf	?_getAdOriginaCh4Value,w
  1143  00C2  1803               	skipnc
  1144  00C3  28C6               	goto	l4011
  1145                           
  1146                           ;main.c: 335: ucChannel4Type = LESS_THAN_1911;
  1147  00C4  01C2               	clrf	main@ucChannel4Type
  1148  00C5  28ED               	goto	l737
  1149  00C6                     l4011:	
  1150                           
  1151                           ;main.c: 336: else if(getAdOriginaCh4Value() < 2067)
  1152  00C6  118A  24B7  118A   	fcall	_getAdOriginaCh4Value
  1153  00C9  3008               	movlw	8
  1154  00CA  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1155  00CB  3013               	movlw	19
  1156  00CC  1903               	skipnz
  1157  00CD  0256               	subwf	?_getAdOriginaCh4Value,w
  1158  00CE  1803               	skipnc
  1159  00CF  28D3               	goto	l4015
  1160                           
  1161                           ;main.c: 337: ucChannel4Type = BETWEEN_1911_AND_2067;
  1162  00D0  01C2               	clrf	main@ucChannel4Type
  1163  00D1  0AC2               	incf	main@ucChannel4Type,f
  1164  00D2  28ED               	goto	l737
  1165  00D3                     l4015:	
  1166                           
  1167                           ;main.c: 338: else if(getAdOriginaCh4Value() < 2204)
  1168  00D3  118A  24B7  118A   	fcall	_getAdOriginaCh4Value
  1169  00D6  3008               	movlw	8
  1170  00D7  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1171  00D8  309C               	movlw	156
  1172  00D9  1903               	skipnz
  1173  00DA  0256               	subwf	?_getAdOriginaCh4Value,w
  1174  00DB  1803               	skipnc
  1175  00DC  28DF               	goto	l4019
  1176                           
  1177                           ;main.c: 339: ucChannel4Type = BETWEEN_2067_AND_2204;
  1178  00DD  3002               	movlw	2
  1179  00DE  28EC               	goto	L6
  1180  00DF                     l4019:	
  1181                           
  1182                           ;main.c: 340: else if(getAdOriginaCh4Value() < 2340)
  1183  00DF  118A  24B7  118A   	fcall	_getAdOriginaCh4Value
  1184  00E2  3009               	movlw	9
  1185  00E3  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1186  00E4  3024               	movlw	36
  1187  00E5  1903               	skipnz
  1188  00E6  0256               	subwf	?_getAdOriginaCh4Value,w
  1189  00E7  1803               	skipnc
  1190  00E8  28EB               	goto	l4023
  1191                           
  1192                           ;main.c: 341: ucChannel4Type = BETWEEN_2204_AND_2340;
  1193  00E9  3003               	movlw	3
  1194  00EA  28EC               	goto	L6
  1195  00EB                     l4023:	
  1196                           
  1197                           ;main.c: 342: else
  1198                           ;main.c: 343: ucChannel4Type = MORE_THAN_2340;
  1199  00EB  3004               	movlw	4
  1200  00EC                     L6:	
  1201  00EC  00C2               	movwf	main@ucChannel4Type
  1202  00ED                     l737:	
  1203                           
  1204                           ;main.c: 345: ucADC4_Step = ADC4_STEP_SECOND;
  1205  00ED  3002               	movlw	2
  1206  00EE  2A25               	goto	L8
  1207  00EF                     l752:	
  1208                           ;main.c: 360: {
  1209                           ;main.c: 361: case 0:
  1210                           
  1211                           ;main.c: 346: break;
  1212                           
  1213                           
  1214                           ;main.c: 362: {
  1215                           ;main.c: 363: PB0 = 1;
  1216  00EF  1406               	bsf	6,0
  1217  00F0                     l4025:	
  1218                           
  1219                           ;main.c: 364: ucLoaderStep++;
  1220  00F0  0AC3               	incf	main@ucLoaderStep,f
  1221                           
  1222                           ;main.c: 365: break;
  1223  00F1  2843               	goto	l3937
  1224  00F2                     l4027:	
  1225                           
  1226                           ;main.c: 369: {
  1227                           ;main.c: 370: if(ucTimerDelay >= 5)
  1228  00F2  3005               	movlw	5
  1229  00F3  024B               	subwf	main@ucTimerDelay,w
  1230  00F4  1C03               	skipc
  1231  00F5  28F9               	goto	l4035
  1232                           
  1233                           ;main.c: 371: {
  1234                           ;main.c: 372: PA0 = 1;
  1235  00F6  1405               	bsf	5,0
  1236  00F7                     l4031:	
  1237                           
  1238                           ;main.c: 373: ucTimerDelay = 0;
  1239  00F7  01CB               	clrf	main@ucTimerDelay
  1240  00F8  28F0               	goto	l4025
  1241  00F9                     l4035:	
  1242                           
  1243                           ;main.c: 376: else
  1244                           ;main.c: 377: ucTimerDelay++;
  1245  00F9  0ACB               	incf	main@ucTimerDelay,f
  1246  00FA  2843               	goto	l3937
  1247  00FB                     l4037:	
  1248                           
  1249                           ;main.c: 382: {
  1250                           ;main.c: 383: if(ucTimerDelay >= 5)
  1251  00FB  3005               	movlw	5
  1252  00FC  024B               	subwf	main@ucTimerDelay,w
  1253  00FD  1C03               	skipc
  1254  00FE  28F9               	goto	l4035
  1255                           
  1256                           ;main.c: 384: {
  1257                           ;main.c: 385: PA1= 1;
  1258  00FF  1485               	bsf	5,1
  1259  0100  28F7               	goto	l4031
  1260  0101                     l4047:	
  1261                           
  1262                           ;main.c: 396: {
  1263                           ;main.c: 397: if(ucTimerDelay >= 5)
  1264  0101  3005               	movlw	5
  1265  0102  024B               	subwf	main@ucTimerDelay,w
  1266  0103  1C03               	skipc
  1267  0104  28F9               	goto	l4035
  1268                           
  1269                           ;main.c: 398: {
  1270                           ;main.c: 399: PA2= 1;
  1271  0105  1505               	bsf	5,2
  1272  0106  28F7               	goto	l4031
  1273  0107                     l4057:	
  1274                           
  1275                           ;main.c: 409: {
  1276                           ;main.c: 410: if(ucTimerDelay >= 5)
  1277  0107  3005               	movlw	5
  1278  0108  024B               	subwf	main@ucTimerDelay,w
  1279  0109  1C03               	skipc
  1280  010A  28F9               	goto	l4035
  1281                           
  1282                           ;main.c: 411: {
  1283                           ;main.c: 412: PA3 = 1;
  1284  010B  1585               	bsf	5,3
  1285  010C  28F7               	goto	l4031
  1286  010D                     l4067:	
  1287                           
  1288                           ;main.c: 422: {
  1289                           ;main.c: 423: if(ucTimerDelay >= 5)
  1290  010D  3005               	movlw	5
  1291  010E  024B               	subwf	main@ucTimerDelay,w
  1292  010F  1C03               	skipc
  1293  0110  28F9               	goto	l4035
  1294                           
  1295                           ;main.c: 424: {
  1296                           ;main.c: 425: PB0 = 0;
  1297  0111  1006               	bcf	6,0
  1298                           
  1299                           ;main.c: 426: PA0 = 0;
  1300  0112  1005               	bcf	5,0
  1301                           
  1302                           ;main.c: 427: PA1 = 0;
  1303  0113  1085               	bcf	5,1
  1304                           
  1305                           ;main.c: 428: PA2 = 0;
  1306  0114  1105               	bcf	5,2
  1307                           
  1308                           ;main.c: 429: PA3 = 0;
  1309  0115  1185               	bcf	5,3
  1310  0116  28F7               	goto	l4031
  1311  0117                     l4077:	
  1312                           
  1313                           ;main.c: 439: {
  1314                           ;main.c: 440: if(ucTimerDelay >= 2)
  1315  0117  3002               	movlw	2
  1316  0118  024B               	subwf	main@ucTimerDelay,w
  1317  0119  1C03               	skipc
  1318  011A  28F9               	goto	l4035
  1319                           
  1320                           ;main.c: 441: {
  1321                           ;main.c: 442: ucTimerDelay = 0;
  1322  011B  01CB               	clrf	main@ucTimerDelay
  1323                           
  1324                           ;main.c: 444: ucLoaderStep = 0;
  1325  011C  01C3               	clrf	main@ucLoaderStep
  1326  011D                     l4081:	
  1327                           
  1328                           ;main.c: 445: ucADC4_Step = ADC4_STEP_THIRD;
  1329  011D  3003               	movlw	3
  1330  011E  2A25               	goto	L8
  1331  011F                     l4087:	
  1332                           ;main.c: 446: }
  1333                           
  1334  011F  0843               	movf	main@ucLoaderStep,w
  1335                           
  1336                           ; Switch size 1, requested type "space"
  1337                           ; Number of cases is 7, Range of values is 0 to 6
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; direct_byte           21     7 (fixed)
  1341                           ; simple_byte           22    12 (average)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ; rangetable            11     6 (fixed)
  1344                           ; spacedrange           20     9 (fixed)
  1345                           ; locatedrange           7     3 (fixed)
  1346                           ;	Chosen strategy is direct_byte
  1347  0120  0084               	movwf	4
  1348  0121  3007               	movlw	7
  1349  0122  0204               	subwf	4,w
  1350  0123  1803               	skipnc
  1351  0124  2843               	goto	l3937
  1352  0125  3004               	movlw	high S4641
  1353  0126  008A               	movwf	10
  1354  0127  1003               	clrc
  1355  0128  0D04               	rlf	4,w
  1356  0129  3E51               	addlw	low S4641
  1357  012A  0082               	movwf	2
  1358  012B                     l780:	
  1359                           ;main.c: 465: {
  1360                           ;main.c: 466: case 0:
  1361                           
  1362                           
  1363                           ;main.c: 467: {
  1364                           ;main.c: 468: PB0 = 1;
  1365  012B  1406               	bsf	6,0
  1366  012C                     l4089:	
  1367                           
  1368                           ;main.c: 469: ucLoaderStep1++;
  1369  012C  0AC4               	incf	main@ucLoaderStep1,f
  1370                           
  1371                           ;main.c: 470: break;
  1372  012D  2843               	goto	l3937
  1373  012E                     l4091:	
  1374                           
  1375                           ;main.c: 474: {
  1376                           ;main.c: 475: if(ucTimerDelay1 >= 5)
  1377  012E  3005               	movlw	5
  1378  012F  024C               	subwf	main@ucTimerDelay1,w
  1379  0130  1C03               	skipc
  1380  0131  2935               	goto	l4099
  1381                           
  1382                           ;main.c: 476: {
  1383                           ;main.c: 477: PA0 = 1;
  1384  0132  1405               	bsf	5,0
  1385  0133                     l4095:	
  1386                           
  1387                           ;main.c: 478: ucTimerDelay1 = 0;
  1388  0133  01CC               	clrf	main@ucTimerDelay1
  1389  0134  292C               	goto	l4089
  1390  0135                     l4099:	
  1391                           
  1392                           ;main.c: 481: else
  1393                           ;main.c: 482: ucTimerDelay1++;
  1394  0135  0ACC               	incf	main@ucTimerDelay1,f
  1395  0136  2843               	goto	l3937
  1396  0137                     l4101:	
  1397                           
  1398                           ;main.c: 487: {
  1399                           ;main.c: 488: if(ucTimerDelay1 >= 5)
  1400  0137  3005               	movlw	5
  1401  0138  024C               	subwf	main@ucTimerDelay1,w
  1402  0139  1C03               	skipc
  1403  013A  2935               	goto	l4099
  1404                           
  1405                           ;main.c: 489: {
  1406                           ;main.c: 490: PA1= 1;
  1407  013B  1485               	bsf	5,1
  1408  013C  2933               	goto	l4095
  1409  013D                     l4111:	
  1410                           
  1411                           ;main.c: 500: {
  1412                           ;main.c: 501: if(ucTimerDelay1 >= 5)
  1413  013D  3005               	movlw	5
  1414  013E  024C               	subwf	main@ucTimerDelay1,w
  1415  013F  1C03               	skipc
  1416  0140  2935               	goto	l4099
  1417                           
  1418                           ;main.c: 502: {
  1419                           ;main.c: 503: PA2 = 1;
  1420  0141  1505               	bsf	5,2
  1421  0142  2933               	goto	l4095
  1422  0143                     l4121:	
  1423                           
  1424                           ;main.c: 513: {
  1425                           ;main.c: 514: if(ucTimerDelay1 >= 5)
  1426  0143  3005               	movlw	5
  1427  0144  024C               	subwf	main@ucTimerDelay1,w
  1428  0145  1C03               	skipc
  1429  0146  2935               	goto	l4099
  1430                           
  1431                           ;main.c: 515: {
  1432                           ;main.c: 516: PA3 = 1;
  1433  0147  1585               	bsf	5,3
  1434  0148  2933               	goto	l4095
  1435  0149                     l4131:	
  1436                           
  1437                           ;main.c: 526: {
  1438                           ;main.c: 527: if(ucTimerDelay1 >= 5)
  1439  0149  3005               	movlw	5
  1440  014A  024C               	subwf	main@ucTimerDelay1,w
  1441  014B  1C03               	skipc
  1442  014C  2935               	goto	l4099
  1443                           
  1444                           ;main.c: 528: {
  1445                           ;main.c: 529: PA0 = 0;
  1446  014D  1005               	bcf	5,0
  1447                           
  1448                           ;main.c: 530: PA1 = 0;
  1449  014E  1085               	bcf	5,1
  1450                           
  1451                           ;main.c: 531: PA2 = 0;
  1452  014F  1105               	bcf	5,2
  1453                           
  1454                           ;main.c: 532: PA3 = 0;
  1455  0150  1185               	bcf	5,3
  1456  0151  2933               	goto	l4095
  1457  0152                     l4141:	
  1458                           
  1459                           ;main.c: 542: {
  1460                           ;main.c: 543: if(ucTimerDelay1 >= 2)
  1461  0152  3002               	movlw	2
  1462  0153  024C               	subwf	main@ucTimerDelay1,w
  1463  0154  1C03               	skipc
  1464  0155  2935               	goto	l4099
  1465                           
  1466                           ;main.c: 544: {
  1467                           ;main.c: 545: ucTimerDelay1 = 0;
  1468  0156  01CC               	clrf	main@ucTimerDelay1
  1469                           
  1470                           ;main.c: 547: ucLoaderStep1 = 0;
  1471  0157  01C4               	clrf	main@ucLoaderStep1
  1472  0158  291D               	goto	l4081
  1473  0159                     l4151:	
  1474  0159  0844               	movf	main@ucLoaderStep1,w
  1475                           
  1476                           ; Switch size 1, requested type "space"
  1477                           ; Number of cases is 7, Range of values is 0 to 6
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; direct_byte           21     7 (fixed)
  1481                           ; simple_byte           22    12 (average)
  1482                           ; jumptable            260     6 (fixed)
  1483                           ; rangetable            11     6 (fixed)
  1484                           ; spacedrange           20     9 (fixed)
  1485                           ; locatedrange           7     3 (fixed)
  1486                           ;	Chosen strategy is direct_byte
  1487  015A  0084               	movwf	4
  1488  015B  3007               	movlw	7
  1489  015C  0204               	subwf	4,w
  1490  015D  1803               	skipnc
  1491  015E  2843               	goto	l3937
  1492  015F  3004               	movlw	high S4643
  1493  0160  008A               	movwf	10
  1494  0161  1003               	clrc
  1495  0162  0D04               	rlf	4,w
  1496  0163  3E5F               	addlw	low S4643
  1497  0164  0082               	movwf	2
  1498  0165                     l807:	
  1499                           ;main.c: 569: {
  1500                           ;main.c: 570: case 0:
  1501                           
  1502                           
  1503                           ;main.c: 571: {
  1504                           ;main.c: 572: PB0 = 1;
  1505  0165  1406               	bsf	6,0
  1506                           
  1507                           ;main.c: 573: PA0 = 1;
  1508  0166  1405               	bsf	5,0
  1509  0167                     l4153:	
  1510                           
  1511                           ;main.c: 574: ucLoaderStep2++;
  1512  0167  0AC5               	incf	main@ucLoaderStep2,f
  1513                           
  1514                           ;main.c: 575: break;
  1515  0168  2843               	goto	l3937
  1516  0169                     l4155:	
  1517                           
  1518                           ;main.c: 579: {
  1519                           ;main.c: 580: if(ucTimerDelay2 >= 5)
  1520  0169  3005               	movlw	5
  1521  016A  024D               	subwf	main@ucTimerDelay2,w
  1522  016B  1C03               	skipc
  1523  016C  2970               	goto	l4163
  1524                           
  1525                           ;main.c: 581: {
  1526                           ;main.c: 582: PA1 = 1;
  1527  016D  1485               	bsf	5,1
  1528  016E                     l4159:	
  1529                           
  1530                           ;main.c: 583: ucTimerDelay2 = 0;
  1531  016E  01CD               	clrf	main@ucTimerDelay2
  1532  016F  2967               	goto	l4153
  1533  0170                     l4163:	
  1534                           
  1535                           ;main.c: 586: else
  1536                           ;main.c: 587: ucTimerDelay2++;
  1537  0170  0ACD               	incf	main@ucTimerDelay2,f
  1538  0171  2843               	goto	l3937
  1539  0172                     l4165:	
  1540                           
  1541                           ;main.c: 592: {
  1542                           ;main.c: 593: if(ucTimerDelay2 >= 5)
  1543  0172  3005               	movlw	5
  1544  0173  024D               	subwf	main@ucTimerDelay2,w
  1545  0174  1C03               	skipc
  1546  0175  2970               	goto	l4163
  1547                           
  1548                           ;main.c: 594: {
  1549                           ;main.c: 595: PA2 = 1;
  1550  0176  1505               	bsf	5,2
  1551  0177  296E               	goto	l4159
  1552  0178                     l4175:	
  1553                           
  1554                           ;main.c: 605: {
  1555                           ;main.c: 606: if(ucTimerDelay2 >= 5)
  1556  0178  3005               	movlw	5
  1557  0179  024D               	subwf	main@ucTimerDelay2,w
  1558  017A  1C03               	skipc
  1559  017B  2970               	goto	l4163
  1560                           
  1561                           ;main.c: 607: {
  1562                           ;main.c: 608: PA3 = 1;
  1563  017C  1585               	bsf	5,3
  1564  017D  296E               	goto	l4159
  1565  017E                     l4185:	
  1566                           
  1567                           ;main.c: 618: {
  1568                           ;main.c: 619: if(ucTimerDelay2 >= 5)
  1569  017E  3005               	movlw	5
  1570  017F  024D               	subwf	main@ucTimerDelay2,w
  1571  0180  1C03               	skipc
  1572  0181  2970               	goto	l4163
  1573                           
  1574                           ;main.c: 620: {
  1575                           ;main.c: 622: PA1 = 0;
  1576  0182  1085               	bcf	5,1
  1577                           
  1578                           ;main.c: 623: PA2 = 0;
  1579  0183  1105               	bcf	5,2
  1580                           
  1581                           ;main.c: 624: PA3 = 0;
  1582  0184  1185               	bcf	5,3
  1583  0185  296E               	goto	l4159
  1584  0186                     l4195:	
  1585                           
  1586                           ;main.c: 634: {
  1587                           ;main.c: 635: if(ucTimerDelay2 >= 2)
  1588  0186  3002               	movlw	2
  1589  0187  024D               	subwf	main@ucTimerDelay2,w
  1590  0188  1C03               	skipc
  1591  0189  2970               	goto	l4163
  1592                           
  1593                           ;main.c: 636: {
  1594                           ;main.c: 637: ucTimerDelay2 = 0;
  1595  018A  01CD               	clrf	main@ucTimerDelay2
  1596                           
  1597                           ;main.c: 639: ucLoaderStep2 = 0;
  1598  018B  01C5               	clrf	main@ucLoaderStep2
  1599  018C  291D               	goto	l4081
  1600  018D                     l4205:	
  1601  018D  0845               	movf	main@ucLoaderStep2,w
  1602                           
  1603                           ; Switch size 1, requested type "space"
  1604                           ; Number of cases is 6, Range of values is 0 to 5
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; direct_byte           19     7 (fixed)
  1608                           ; simple_byte           19    10 (average)
  1609                           ; jumptable            260     6 (fixed)
  1610                           ; rangetable            10     6 (fixed)
  1611                           ; spacedrange           18     9 (fixed)
  1612                           ; locatedrange           6     3 (fixed)
  1613                           ;	Chosen strategy is direct_byte
  1614  018E  0084               	movwf	4
  1615  018F  3006               	movlw	6
  1616  0190  0204               	subwf	4,w
  1617  0191  1803               	skipnc
  1618  0192  2843               	goto	l3937
  1619  0193  3004               	movlw	high S4645
  1620  0194  008A               	movwf	10
  1621  0195  1003               	clrc
  1622  0196  0D04               	rlf	4,w
  1623  0197  3E6D               	addlw	low S4645
  1624  0198  0082               	movwf	2
  1625  0199                     l831:	
  1626                           ;main.c: 661: {
  1627                           ;main.c: 662: case 0:
  1628                           
  1629                           
  1630                           ;main.c: 663: {
  1631                           ;main.c: 664: PB0 = 1;
  1632  0199  1406               	bsf	6,0
  1633                           
  1634                           ;main.c: 665: PA0 = 1;
  1635  019A  1405               	bsf	5,0
  1636                           
  1637                           ;main.c: 666: PA1 = 1;
  1638  019B  1485               	bsf	5,1
  1639  019C                     l4207:	
  1640                           
  1641                           ;main.c: 667: ucLoaderStep3++;
  1642  019C  0AC6               	incf	main@ucLoaderStep3,f
  1643                           
  1644                           ;main.c: 668: break;
  1645  019D  2843               	goto	l3937
  1646  019E                     l4209:	
  1647                           
  1648                           ;main.c: 672: {
  1649                           ;main.c: 673: if(ucTimerDelay3 >= 5)
  1650  019E  3005               	movlw	5
  1651  019F  024E               	subwf	main@ucTimerDelay3,w
  1652  01A0  1C03               	skipc
  1653  01A1  29A5               	goto	l4217
  1654                           
  1655                           ;main.c: 674: {
  1656                           ;main.c: 675: PA2 = 1;
  1657  01A2  1505               	bsf	5,2
  1658  01A3                     l4213:	
  1659                           
  1660                           ;main.c: 676: ucTimerDelay3 = 0;
  1661  01A3  01CE               	clrf	main@ucTimerDelay3
  1662  01A4  299C               	goto	l4207
  1663  01A5                     l4217:	
  1664                           
  1665                           ;main.c: 679: else
  1666                           ;main.c: 680: ucTimerDelay3++;
  1667  01A5  0ACE               	incf	main@ucTimerDelay3,f
  1668  01A6  2843               	goto	l3937
  1669  01A7                     l4219:	
  1670                           
  1671                           ;main.c: 685: {
  1672                           ;main.c: 686: if(ucTimerDelay3 >= 5)
  1673  01A7  3005               	movlw	5
  1674  01A8  024E               	subwf	main@ucTimerDelay3,w
  1675  01A9  1C03               	skipc
  1676  01AA  29A5               	goto	l4217
  1677                           
  1678                           ;main.c: 687: {
  1679                           ;main.c: 688: PA3 = 1;
  1680  01AB  1585               	bsf	5,3
  1681  01AC  29A3               	goto	l4213
  1682  01AD                     l4229:	
  1683                           
  1684                           ;main.c: 699: {
  1685                           ;main.c: 700: if(ucTimerDelay3 >= 5)
  1686  01AD  3005               	movlw	5
  1687  01AE  024E               	subwf	main@ucTimerDelay3,w
  1688  01AF  1C03               	skipc
  1689  01B0  29A5               	goto	l4217
  1690                           
  1691                           ;main.c: 701: {
  1692                           ;main.c: 703: PA2 = 0;
  1693  01B1  1105               	bcf	5,2
  1694                           
  1695                           ;main.c: 704: PA3 = 0;
  1696  01B2  1185               	bcf	5,3
  1697  01B3  29A3               	goto	l4213
  1698  01B4                     l4239:	
  1699                           
  1700                           ;main.c: 714: {
  1701                           ;main.c: 715: if(ucTimerDelay3 >= 2)
  1702  01B4  3002               	movlw	2
  1703  01B5  024E               	subwf	main@ucTimerDelay3,w
  1704  01B6  1C03               	skipc
  1705  01B7  29A5               	goto	l4217
  1706                           
  1707                           ;main.c: 716: {
  1708                           ;main.c: 717: ucTimerDelay3 = 0;
  1709  01B8  01CE               	clrf	main@ucTimerDelay3
  1710                           
  1711                           ;main.c: 719: ucLoaderStep3 = 0;
  1712  01B9  01C6               	clrf	main@ucLoaderStep3
  1713  01BA  291D               	goto	l4081
  1714  01BB                     l4249:	
  1715  01BB  0846               	movf	main@ucLoaderStep3,w
  1716                           
  1717                           ; Switch size 1, requested type "space"
  1718                           ; Number of cases is 5, Range of values is 0 to 4
  1719                           ; switch strategies available:
  1720                           ; Name         Instructions Cycles
  1721                           ; simple_byte           16     9 (average)
  1722                           ; direct_byte           17     7 (fixed)
  1723                           ; jumptable            260     6 (fixed)
  1724                           ; rangetable             9     6 (fixed)
  1725                           ; spacedrange           16     9 (fixed)
  1726                           ; locatedrange           5     3 (fixed)
  1727                           ;	Chosen strategy is simple_byte
  1728  01BC  3A00               	xorlw	0	; case 0
  1729  01BD  1903               	skipnz
  1730  01BE  2999               	goto	l831
  1731  01BF  3A01               	xorlw	1	; case 1
  1732  01C0  1903               	skipnz
  1733  01C1  299E               	goto	l4209
  1734  01C2  3A03               	xorlw	3	; case 2
  1735  01C3  1903               	skipnz
  1736  01C4  29A7               	goto	l4219
  1737  01C5  3A01               	xorlw	1	; case 3
  1738  01C6  1903               	skipnz
  1739  01C7  29AD               	goto	l4229
  1740  01C8  3A07               	xorlw	7	; case 4
  1741  01C9  1903               	skipnz
  1742  01CA  29B4               	goto	l4239
  1743  01CB  2865               	goto	l703
  1744  01CC                     l852:	
  1745                           ;main.c: 741: {
  1746                           ;main.c: 742: case 0:
  1747                           
  1748                           
  1749                           ;main.c: 743: {
  1750                           ;main.c: 744: PB0 = 1;
  1751  01CC  1406               	bsf	6,0
  1752                           
  1753                           ;main.c: 745: PA0 = 1;
  1754  01CD  1405               	bsf	5,0
  1755                           
  1756                           ;main.c: 746: PA1 = 1;
  1757  01CE  1485               	bsf	5,1
  1758                           
  1759                           ;main.c: 747: PA2 = 1;
  1760  01CF  1505               	bsf	5,2
  1761  01D0                     l4251:	
  1762                           
  1763                           ;main.c: 748: ucLoaderStep4++;
  1764  01D0  0AC7               	incf	main@ucLoaderStep4,f
  1765                           
  1766                           ;main.c: 749: break;
  1767  01D1  2843               	goto	l3937
  1768  01D2                     l4253:	
  1769                           
  1770                           ;main.c: 753: {
  1771                           ;main.c: 754: if(ucTimerDelay4 >= 5)
  1772  01D2  3005               	movlw	5
  1773  01D3  024F               	subwf	main@ucTimerDelay4,w
  1774  01D4  1C03               	skipc
  1775  01D5  29D9               	goto	l4261
  1776                           
  1777                           ;main.c: 755: {
  1778                           ;main.c: 756: PA3 = 1;
  1779  01D6  1585               	bsf	5,3
  1780  01D7                     l4257:	
  1781                           
  1782                           ;main.c: 757: ucTimerDelay4 = 0;
  1783  01D7  01CF               	clrf	main@ucTimerDelay4
  1784  01D8  29D0               	goto	l4251
  1785  01D9                     l4261:	
  1786                           
  1787                           ;main.c: 760: else
  1788                           ;main.c: 761: ucTimerDelay4++;
  1789  01D9  0ACF               	incf	main@ucTimerDelay4,f
  1790  01DA  2843               	goto	l3937
  1791  01DB                     l4263:	
  1792                           
  1793                           ;main.c: 766: {
  1794                           ;main.c: 767: if(ucTimerDelay4 >= 5)
  1795  01DB  3005               	movlw	5
  1796  01DC  024F               	subwf	main@ucTimerDelay4,w
  1797  01DD  1C03               	skipc
  1798  01DE  29D9               	goto	l4261
  1799                           
  1800                           ;main.c: 768: {
  1801                           ;main.c: 769: PA3 = 0;
  1802  01DF  1185               	bcf	5,3
  1803  01E0  29D7               	goto	l4257
  1804  01E1                     l4273:	
  1805                           
  1806                           ;main.c: 779: {
  1807                           ;main.c: 780: if(ucTimerDelay4 >= 2)
  1808  01E1  3002               	movlw	2
  1809  01E2  024F               	subwf	main@ucTimerDelay4,w
  1810  01E3  1C03               	skipc
  1811  01E4  29D9               	goto	l4261
  1812                           
  1813                           ;main.c: 781: {
  1814                           ;main.c: 782: ucTimerDelay4 = 0;
  1815  01E5  01CF               	clrf	main@ucTimerDelay4
  1816                           
  1817                           ;main.c: 784: ucLoaderStep4 = 0;
  1818  01E6  01C7               	clrf	main@ucLoaderStep4
  1819  01E7  291D               	goto	l4081
  1820  01E8                     l4283:	
  1821  01E8  0847               	movf	main@ucLoaderStep4,w
  1822                           
  1823                           ; Switch size 1, requested type "space"
  1824                           ; Number of cases is 4, Range of values is 0 to 3
  1825                           ; switch strategies available:
  1826                           ; Name         Instructions Cycles
  1827                           ; simple_byte           13     7 (average)
  1828                           ; direct_byte           15     7 (fixed)
  1829                           ; jumptable            260     6 (fixed)
  1830                           ; rangetable             8     6 (fixed)
  1831                           ; spacedrange           14     9 (fixed)
  1832                           ; locatedrange           4     3 (fixed)
  1833                           ;	Chosen strategy is simple_byte
  1834  01E9  3A00               	xorlw	0	; case 0
  1835  01EA  1903               	skipnz
  1836  01EB  29CC               	goto	l852
  1837  01EC  3A01               	xorlw	1	; case 1
  1838  01ED  1903               	skipnz
  1839  01EE  29D2               	goto	l4253
  1840  01EF  3A03               	xorlw	3	; case 2
  1841  01F0  1903               	skipnz
  1842  01F1  29DB               	goto	l4263
  1843  01F2  3A01               	xorlw	1	; case 3
  1844  01F3  1903               	skipnz
  1845  01F4  29E1               	goto	l4273
  1846  01F5  2865               	goto	l703
  1847  01F6                     l4287:	
  1848  01F6  0842               	movf	main@ucChannel4Type,w
  1849                           
  1850                           ; Switch size 1, requested type "space"
  1851                           ; Number of cases is 5, Range of values is 0 to 4
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           16     9 (average)
  1855                           ; direct_byte           17     7 (fixed)
  1856                           ; jumptable            260     6 (fixed)
  1857                           ; rangetable             9     6 (fixed)
  1858                           ; spacedrange           16     9 (fixed)
  1859                           ; locatedrange           5     3 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861  01F7  3A00               	xorlw	0	; case 0
  1862  01F8  1903               	skipnz
  1863  01F9  291F               	goto	l4087
  1864  01FA  3A01               	xorlw	1	; case 1
  1865  01FB  1903               	skipnz
  1866  01FC  2959               	goto	l4151
  1867  01FD  3A03               	xorlw	3	; case 2
  1868  01FE  1903               	skipnz
  1869  01FF  298D               	goto	l4205
  1870  0200  3A01               	xorlw	1	; case 3
  1871  0201  1903               	skipnz
  1872  0202  29BB               	goto	l4249
  1873  0203  3A07               	xorlw	7	; case 4
  1874  0204  1903               	skipnz
  1875  0205  29E8               	goto	l4283
  1876  0206  2865               	goto	l703
  1877  0207                     l4289:	
  1878                           
  1879                           ;main.c: 808: {
  1880                           ;main.c: 809: if(isFinishedTwentySecondsTimer())
  1881  0207  118A  24B2  118A   	fcall	_isFinishedTwentySecondsTimer
  1882  020A  3A00               	xorlw	0
  1883  020B  1903               	skipnz
  1884  020C  28B7               	goto	l4005
  1885                           
  1886                           ;main.c: 810: {
  1887                           ;main.c: 811: PBOD6 =0;
  1888  020D  1683               	bsf	3,5	;RP0=1, select bank3
  1889  020E  1703               	bsf	3,6	;RP1=1, select bank3
  1890  020F  1308               	bcf	8,6
  1891                           
  1892                           ;main.c: 812: PB6 = 1;
  1893  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0212  1706               	bsf	6,6
  1896                           
  1897                           ;main.c: 813: PA6 = 0;
  1898  0213  1305               	bcf	5,6
  1899                           
  1900                           ;main.c: 820: if((getAdOriginalCh14Value() > 3900))
  1901  0214  118A  24CB  118A   	fcall	_getAdOriginalCh14Value
  1902  0217  300F               	movlw	15
  1903  0218  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1904  0219  303D               	movlw	61
  1905  021A  1903               	skipnz
  1906  021B  0256               	subwf	?_getAdOriginalCh14Value,w
  1907  021C  1C03               	skipc
  1908  021D  2A20               	goto	l4297
  1909                           
  1910                           ;main.c: 821: DACR0=0x0F;
  1911  021E  300F               	movlw	15
  1912  021F  2A21               	goto	L9
  1913  0220                     l4297:	
  1914                           
  1915                           ;main.c: 822: else
  1916                           ;main.c: 823: DACR0=0x07;
  1917  0220  3007               	movlw	7
  1918  0221                     L9:	
  1919  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0222  0088               	movwf	8	;volatile
  1921                           
  1922                           ;main.c: 825: ucADC4_Step = ADC4_STEP_FOURTH;
  1923  0223  3004               	movlw	4
  1924  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0225                     L8:	
  1926  0225  00C1               	movwf	main@ucADC4_Step
  1927                           
  1928                           ;main.c: 826: }
  1929  0226  2843               	goto	l3937
  1930  0227                     l4299:	
  1931                           
  1932                           ;main.c: 834: {
  1933                           ;main.c: 835: static unsigned char ucTimer1s = 0;
  1934                           ;main.c: 836: if(ucTimer1s < 10)
  1935  0227  300A               	movlw	10
  1936  0228  0248               	subwf	main@ucTimer1s,w
  1937  0229  1803               	skipnc
  1938  022A  2A2E               	goto	l4305
  1939                           
  1940                           ;main.c: 837: {
  1941                           ;main.c: 838: ucTimer1s++;
  1942  022B  0AC8               	incf	main@ucTimer1s,f
  1943                           
  1944                           ;main.c: 839: PB6 = 1;
  1945  022C  1706               	bsf	6,6
  1946                           
  1947                           ;main.c: 840: }
  1948  022D  2843               	goto	l3937
  1949  022E                     l4305:	
  1950                           
  1951                           ;main.c: 841: else
  1952                           ;main.c: 842: {
  1953                           ;main.c: 843: ucTimer1s = 0;
  1954  022E  01C8               	clrf	main@ucTimer1s
  1955                           
  1956                           ;main.c: 844: PBOD6 = 1;
  1957  022F  1683               	bsf	3,5	;RP0=1, select bank3
  1958  0230  1703               	bsf	3,6	;RP1=1, select bank3
  1959  0231  1708               	bsf	8,6
  1960                           
  1961                           ;main.c: 845: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1962  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0234  01C0               	clrf	main@enumMainLoopStep
  1965  0235  0AC0               	incf	main@enumMainLoopStep,f
  1966                           
  1967                           ;main.c: 846: ucADC4_Step = ADC4_STEP_INIT;
  1968  0236  01C1               	clrf	main@ucADC4_Step
  1969  0237  2843               	goto	l3937
  1970  0238                     l4313:	
  1971  0238  0841               	movf	main@ucADC4_Step,w
  1972                           
  1973                           ; Switch size 1, requested type "space"
  1974                           ; Number of cases is 5, Range of values is 0 to 4
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte           16     9 (average)
  1978                           ; direct_byte           17     7 (fixed)
  1979                           ; jumptable            260     6 (fixed)
  1980                           ; rangetable             9     6 (fixed)
  1981                           ; spacedrange           16     9 (fixed)
  1982                           ; locatedrange           5     3 (fixed)
  1983                           ;	Chosen strategy is simple_byte
  1984  0239  3A00               	xorlw	0	; case 0
  1985  023A  1903               	skipnz
  1986  023B  28B4               	goto	l4003
  1987  023C  3A01               	xorlw	1	; case 1
  1988  023D  1903               	skipnz
  1989  023E  28BA               	goto	l4007
  1990  023F  3A03               	xorlw	3	; case 2
  1991  0240  1903               	skipnz
  1992  0241  29F6               	goto	l4287
  1993  0242  3A01               	xorlw	1	; case 3
  1994  0243  1903               	skipnz
  1995  0244  2A07               	goto	l4289
  1996  0245  3A07               	xorlw	7	; case 4
  1997  0246  1903               	skipnz
  1998  0247  2A27               	goto	l4299
  1999  0248  2865               	goto	l703
  2000  0249                     l880:	
  2001                           ;main.c: 872: {
  2002                           ;main.c: 873: case HOUR_3_BRANCH_STEP_FIRST:
  2003                           
  2004                           
  2005                           ;main.c: 874: {
  2006                           ;main.c: 875: PAOD7 = 1;
  2007  0249  1683               	bsf	3,5	;RP0=1, select bank3
  2008  024A  1703               	bsf	3,6	;RP1=1, select bank3
  2009  024B  1787               	bsf	7,7
  2010                           
  2011                           ;main.c: 876: startThreeHoursTimer();
  2012  024C  118A  24A6  118A   	fcall	_startThreeHoursTimer
  2013                           
  2014                           ;main.c: 878: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2015  024F  01BE               	clrf	main@enumBranchStep
  2016  0250  0ABE               	incf	main@enumBranchStep,f
  2017                           
  2018                           ;main.c: 879: break;
  2019  0251  2843               	goto	l3937
  2020  0252                     l882:	
  2021                           ;main.c: 880: }
  2022                           ;main.c: 882: case HOUR_3_BRANCH_STEP_SECOND:
  2023                           
  2024  0252  3014               	movlw	20
  2025                           
  2026                           ;main.c: 883: {
  2027                           ;main.c: 884: static unsigned char ucTimer20s = 0;
  2028                           ;main.c: 886: PB0 = 1;
  2029  0253  1406               	bsf	6,0
  2030                           
  2031                           ;main.c: 887: PA0 = 1;
  2032  0254  1405               	bsf	5,0
  2033                           
  2034                           ;main.c: 888: PA1 = 1;
  2035  0255  1485               	bsf	5,1
  2036                           
  2037                           ;main.c: 889: PA2 = 1;
  2038  0256  1505               	bsf	5,2
  2039                           
  2040                           ;main.c: 890: PA3 = 1;
  2041  0257  1585               	bsf	5,3
  2042                           
  2043                           ;main.c: 891: PA6 = 0;
  2044  0258  1305               	bcf	5,6
  2045                           
  2046                           ;main.c: 893: if(ucTimer20s < 20)
  2047  0259  0249               	subwf	main@ucTimer20s,w
  2048  025A  1803               	skipnc
  2049  025B  2A5E               	goto	l4323
  2050                           
  2051                           ;main.c: 894: ucTimer20s++;
  2052  025C  0AC9               	incf	main@ucTimer20s,f
  2053  025D  2A61               	goto	l4327
  2054  025E                     l4323:	
  2055  025E  3002               	movlw	2
  2056                           
  2057                           ;main.c: 895: else
  2058                           ;main.c: 896: {
  2059                           ;main.c: 897: ucTimer20s = 0;
  2060  025F  01C9               	clrf	main@ucTimer20s
  2061                           
  2062                           ;main.c: 898: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2063  0260  00BE               	movwf	main@enumBranchStep
  2064  0261                     l4327:	
  2065                           
  2066                           ;main.c: 903: {
  2067                           ;main.c: 904: if(isFinishedThreeHoursTimer())
  2068  0261  118A  24AD  118A   	fcall	_isFinishedThreeHoursTimer
  2069  0264  3A00               	xorlw	0
  2070  0265  1903               	skipnz
  2071  0266  2A69               	goto	l4333
  2072                           
  2073                           ;main.c: 905: {
  2074                           ;main.c: 906: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2075  0267  01BE               	clrf	main@enumBranchStep
  2076  0268  28B1               	goto	l4001
  2077  0269                     l4333:	
  2078                           
  2079                           ;main.c: 909: else
  2080                           ;main.c: 910: {
  2081                           ;main.c: 911: static unsigned char ucTimerX1P5s = 0;
  2082                           ;main.c: 913: if(getAdOriginalCh1Value() < 0x0082)
  2083  0269  118A  24C6  118A   	fcall	_getAdOriginalCh1Value
  2084  026C  3000               	movlw	0
  2085  026D  0257               	subwf	?_getAdOriginalCh1Value+1,w
  2086  026E  3082               	movlw	130
  2087  026F  1903               	skipnz
  2088  0270  0256               	subwf	?_getAdOriginalCh1Value,w
  2089  0271  1803               	skipnc
  2090  0272  2A75               	goto	l4337
  2091                           
  2092                           ;main.c: 914: {
  2093                           ;main.c: 915: ucTimerX1P5s = 0;
  2094  0273  01D2               	clrf	main@ucTimerX1P5s
  2095                           
  2096                           ;main.c: 916: }
  2097  0274  2A76               	goto	l4339
  2098  0275                     l4337:	
  2099                           
  2100                           ;main.c: 917: else
  2101                           ;main.c: 918: {
  2102                           ;main.c: 919: ucTimerX1P5s++;
  2103  0275  0AD2               	incf	main@ucTimerX1P5s,f
  2104  0276                     l4339:	
  2105                           
  2106                           ;main.c: 920: }
  2107                           ;main.c: 922: if(ucTimerX1P5s >= 1)
  2108  0276  0852               	movf	main@ucTimerX1P5s,w
  2109  0277  1903               	btfsc	3,2
  2110  0278  2A85               	goto	l4353
  2111                           
  2112                           ;main.c: 923: {
  2113                           ;main.c: 924: ucTimerX1P5s = 0;
  2114  0279  01D2               	clrf	main@ucTimerX1P5s
  2115                           
  2116                           ;main.c: 925: PAOD7 = 0;
  2117  027A  1683               	bsf	3,5	;RP0=1, select bank3
  2118  027B  1703               	bsf	3,6	;RP1=1, select bank3
  2119  027C  1387               	bcf	7,7
  2120                           
  2121                           ;main.c: 926: PA7 = 0;
  2122  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2123  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2124  027F  1385               	bcf	5,7
  2125                           
  2126                           ;main.c: 927: clearThreeHoursTimer();
  2127  0280  118A  243B  118A   	fcall	_clearThreeHoursTimer
  2128                           
  2129                           ;main.c: 929: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2130  0283  01BE               	clrf	main@enumBranchStep
  2131  0284  2877               	goto	l3965
  2132  0285                     l4353:	
  2133                           
  2134                           ;main.c: 933: else
  2135                           ;main.c: 934: {
  2136                           ;main.c: 935: static unsigned char ucTimerX2P5s = 0;
  2137                           ;main.c: 937: if(getAdOriginalCh14Value() >= 1950)
  2138  0285  118A  24CB  118A   	fcall	_getAdOriginalCh14Value
  2139  0288  3007               	movlw	7
  2140  0289  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2141  028A  309E               	movlw	158
  2142  028B  1903               	skipnz
  2143  028C  0256               	subwf	?_getAdOriginalCh14Value,w
  2144  028D  1C03               	skipc
  2145  028E  2A91               	goto	l4357
  2146                           
  2147                           ;main.c: 938: {
  2148                           ;main.c: 939: ucTimerX2P5s++;
  2149  028F  0AD3               	incf	main@ucTimerX2P5s,f
  2150                           
  2151                           ;main.c: 940: }
  2152  0290  2A92               	goto	l4359
  2153  0291                     l4357:	
  2154                           
  2155                           ;main.c: 941: else
  2156                           ;main.c: 942: {
  2157                           ;main.c: 943: ucTimerX2P5s = 0;
  2158  0291  01D3               	clrf	main@ucTimerX2P5s
  2159  0292                     l4359:	
  2160                           
  2161                           ;main.c: 944: }
  2162                           ;main.c: 946: if(ucTimerX2P5s >= 1)
  2163  0292  0853               	movf	main@ucTimerX2P5s,w
  2164  0293  1903               	btfsc	3,2
  2165  0294  2A97               	goto	l4363
  2166                           
  2167                           ;main.c: 947: {
  2168                           ;main.c: 948: ucTimerX2P5s = 0;
  2169  0295  01D3               	clrf	main@ucTimerX2P5s
  2170                           
  2171                           ;main.c: 949: }
  2172  0296  2843               	goto	l3937
  2173  0297                     l4363:	
  2174                           
  2175                           ;main.c: 950: else
  2176                           ;main.c: 951: {
  2177                           ;main.c: 952: clearPinPortAndTimer();
  2178  0297  118A  242C  118A   	fcall	_clearPinPortAndTimer
  2179  029A  2863               	goto	l3955
  2180  029B                     l4369:	
  2181  029B  083E               	movf	main@enumBranchStep,w
  2182                           
  2183                           ; Switch size 1, requested type "space"
  2184                           ; Number of cases is 3, Range of values is 0 to 2
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte           10     6 (average)
  2188                           ; direct_byte           13     7 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ; rangetable             7     6 (fixed)
  2191                           ; spacedrange           12     9 (fixed)
  2192                           ; locatedrange           3     3 (fixed)
  2193                           ;	Chosen strategy is simple_byte
  2194  029C  3A00               	xorlw	0	; case 0
  2195  029D  1903               	skipnz
  2196  029E  2A49               	goto	l880
  2197  029F  3A01               	xorlw	1	; case 1
  2198  02A0  1903               	skipnz
  2199  02A1  2A52               	goto	l882
  2200  02A2  3A03               	xorlw	3	; case 2
  2201  02A3  1903               	skipnz
  2202  02A4  2A61               	goto	l4327
  2203  02A5  2865               	goto	l703
  2204  02A6                     l907:	
  2205                           ;main.c: 982: {
  2206                           ;main.c: 983: case INTERNAL_FIRST_STEP:
  2207                           
  2208                           
  2209                           ;main.c: 984: {
  2210                           ;main.c: 985: PB0 = 0;
  2211  02A6  1006               	bcf	6,0
  2212                           
  2213                           ;main.c: 986: PB1 = 0;
  2214  02A7  1086               	bcf	6,1
  2215                           
  2216                           ;main.c: 987: PA0 = 0;
  2217  02A8  1005               	bcf	5,0
  2218                           
  2219                           ;main.c: 988: PA1 = 0;
  2220  02A9  1085               	bcf	5,1
  2221                           
  2222                           ;main.c: 989: PA2 = 0;
  2223  02AA  1105               	bcf	5,2
  2224                           
  2225                           ;main.c: 990: PA3 = 0;
  2226  02AB  1185               	bcf	5,3
  2227                           
  2228                           ;main.c: 991: PB6 = 1;
  2229  02AC  1706               	bsf	6,6
  2230                           
  2231                           ;main.c: 992: PA6 =0;
  2232  02AD  1305               	bcf	5,6
  2233                           
  2234                           ;main.c: 994: enumInteralStep = INTERNAL_SECOND_STEP;
  2235  02AE  01BF               	clrf	main@enumInteralStep
  2236  02AF  0ABF               	incf	main@enumInteralStep,f
  2237                           
  2238                           ;main.c: 995: break;
  2239  02B0  2843               	goto	l3937
  2240  02B1                     l4371:	
  2241                           
  2242                           ;main.c: 999: {
  2243                           ;main.c: 1000: static unsigned char ucTimer1s = 0;
  2244                           ;main.c: 1002: if(getAdOriginalCh14Value() <= 1000)
  2245  02B1  118A  24CB  118A   	fcall	_getAdOriginalCh14Value
  2246  02B4  3003               	movlw	3
  2247  02B5  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2248  02B6  30E9               	movlw	233
  2249  02B7  1903               	skipnz
  2250  02B8  0256               	subwf	?_getAdOriginalCh14Value,w
  2251  02B9  1803               	skipnc
  2252  02BA  2ABD               	goto	l4375
  2253                           
  2254                           ;main.c: 1003: {
  2255                           ;main.c: 1004: ucTimer1s++;
  2256  02BB  0ABD               	incf	main@cTimer1s_806,f
  2257                           
  2258                           ;main.c: 1005: }
  2259  02BC  2ABE               	goto	l4377
  2260  02BD                     l4375:	
  2261                           
  2262                           ;main.c: 1006: else
  2263                           ;main.c: 1007: ucTimer1s = 0;
  2264  02BD  01BD               	clrf	main@cTimer1s_806
  2265  02BE                     l4377:	
  2266                           
  2267                           ;main.c: 1009: if(ucTimer1s >= 10)
  2268  02BE  300A               	movlw	10
  2269  02BF  023D               	subwf	main@cTimer1s_806,w
  2270  02C0  1C03               	skipc
  2271  02C1  2843               	goto	l3937
  2272                           
  2273                           ;main.c: 1010: {
  2274                           ;main.c: 1011: enumInteralStep = INTERNAL_THIRD_STEP;
  2275  02C2  3002               	movlw	2
  2276  02C3  00BF               	movwf	main@enumInteralStep
  2277                           
  2278                           ;main.c: 1012: ucTimer1s = 0;
  2279  02C4  01BD               	clrf	main@cTimer1s_806
  2280  02C5  2843               	goto	l3937
  2281  02C6                     l4383:	
  2282                           
  2283                           ;main.c: 1018: {
  2284                           ;main.c: 1019: static unsigned char ucTimerP3s = 0;
  2285                           ;main.c: 1021: if(getAdOriginalCh14Value() >= 1950)
  2286  02C6  118A  24CB  118A   	fcall	_getAdOriginalCh14Value
  2287  02C9  3007               	movlw	7
  2288  02CA  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2289  02CB  309E               	movlw	158
  2290  02CC  1903               	skipnz
  2291  02CD  0256               	subwf	?_getAdOriginalCh14Value,w
  2292  02CE  1C03               	skipc
  2293  02CF  2AD2               	goto	l4387
  2294                           
  2295                           ;main.c: 1022: {
  2296                           ;main.c: 1023: ucTimerP3s++;
  2297  02D0  0AD0               	incf	main@ucTimerP3s,f
  2298                           
  2299                           ;main.c: 1024: }
  2300  02D1  2AD3               	goto	l4389
  2301  02D2                     l4387:	
  2302                           
  2303                           ;main.c: 1025: else
  2304                           ;main.c: 1026: ucTimerP3s = 0;
  2305  02D2  01D0               	clrf	main@ucTimerP3s
  2306  02D3                     l4389:	
  2307                           
  2308                           ;main.c: 1028: if(ucTimerP3s >= 3)
  2309  02D3  3003               	movlw	3
  2310  02D4  0250               	subwf	main@ucTimerP3s,w
  2311  02D5  1C03               	skipc
  2312  02D6  2843               	goto	l3937
  2313                           
  2314                           ;main.c: 1029: {
  2315                           ;main.c: 1030: enumInteralStep = INTERNAL_FIRST_STEP;
  2316  02D7  01BF               	clrf	main@enumInteralStep
  2317                           
  2318                           ;main.c: 1031: ucTimerP3s = 0;
  2319  02D8  01D0               	clrf	main@ucTimerP3s
  2320                           
  2321                           ;main.c: 1032: clearAllTimer();
  2322  02D9  118A  2433  118A   	fcall	_clearAllTimer
  2323                           
  2324                           ;main.c: 1034: DACR0=0x0F;
  2325  02DC  300F               	movlw	15
  2326  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2327  02DE  0088               	movwf	8	;volatile
  2328                           
  2329                           ;main.c: 1035: PBOD6 = 1;
  2330  02DF  1703               	bsf	3,6	;RP1=1, select bank3
  2331  02E0  1708               	bsf	8,6
  2332                           
  2333                           ;main.c: 1037: PA0 = 0;
  2334  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2335  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2336  02E3  1005               	bcf	5,0
  2337                           
  2338                           ;main.c: 1038: PA1 = 0;
  2339  02E4  1085               	bcf	5,1
  2340                           
  2341                           ;main.c: 1039: PA2 = 0;
  2342  02E5  1105               	bcf	5,2
  2343                           
  2344                           ;main.c: 1040: PA3 = 1;
  2345  02E6  1585               	bsf	5,3
  2346                           
  2347                           ;main.c: 1041: PB0 = 0;
  2348  02E7  1006               	bcf	6,0
  2349                           
  2350                           ;main.c: 1042: PB1 = 0;
  2351  02E8  1086               	bcf	6,1
  2352                           
  2353                           ;main.c: 1043: PA6 = 0;
  2354  02E9  1305               	bcf	5,6
  2355                           
  2356                           ;main.c: 1044: PA7 = 0;
  2357  02EA  1385               	bcf	5,7
  2358                           
  2359                           ;main.c: 1047: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2360  02EB  01C0               	clrf	main@enumMainLoopStep
  2361  02EC  2843               	goto	l3937
  2362  02ED                     l4419:	
  2363  02ED  083F               	movf	main@enumInteralStep,w
  2364                           
  2365                           ; Switch size 1, requested type "space"
  2366                           ; Number of cases is 3, Range of values is 0 to 2
  2367                           ; switch strategies available:
  2368                           ; Name         Instructions Cycles
  2369                           ; simple_byte           10     6 (average)
  2370                           ; direct_byte           13     7 (fixed)
  2371                           ; jumptable            260     6 (fixed)
  2372                           ; rangetable             7     6 (fixed)
  2373                           ; spacedrange           12     9 (fixed)
  2374                           ; locatedrange           3     3 (fixed)
  2375                           ;	Chosen strategy is simple_byte
  2376  02EE  3A00               	xorlw	0	; case 0
  2377  02EF  1903               	skipnz
  2378  02F0  2AA6               	goto	l907
  2379  02F1  3A01               	xorlw	1	; case 1
  2380  02F2  1903               	skipnz
  2381  02F3  2AB1               	goto	l4371
  2382  02F4  3A03               	xorlw	3	; case 2
  2383  02F5  1903               	skipnz
  2384  02F6  2AC6               	goto	l4383
  2385  02F7  2865               	goto	l703
  2386  02F8                     l4423:	
  2387  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2388  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2389  02FA  0840               	movf	main@enumMainLoopStep,w
  2390                           
  2391                           ; Switch size 1, requested type "space"
  2392                           ; Number of cases is 8, Range of values is 0 to 9
  2393                           ; switch strategies available:
  2394                           ; Name         Instructions Cycles
  2395                           ; simple_byte           25    13 (average)
  2396                           ; direct_byte           27     7 (fixed)
  2397                           ; jumptable            260     6 (fixed)
  2398                           ; rangetable            14     6 (fixed)
  2399                           ; spacedrange           26     9 (fixed)
  2400                           ; locatedrange          10     3 (fixed)
  2401                           ;	Chosen strategy is simple_byte
  2402  02FB  3A00               	xorlw	0	; case 0
  2403  02FC  1903               	skipnz
  2404  02FD  2851               	goto	l3945
  2405  02FE  3A01               	xorlw	1	; case 1
  2406  02FF  1903               	skipnz
  2407  0300  2866               	goto	l3957
  2408  0301  3A03               	xorlw	3	; case 2
  2409  0302  1903               	skipnz
  2410  0303  287D               	goto	l712
  2411  0304  3A01               	xorlw	1	; case 3
  2412  0305  1903               	skipnz
  2413  0306  2880               	goto	l3971
  2414  0307  3A07               	xorlw	7	; case 4
  2415  0308  1903               	skipnz
  2416  0309  28A6               	goto	l3995
  2417  030A  3A01               	xorlw	1	; case 5
  2418  030B  1903               	skipnz
  2419  030C  28AB               	goto	l3999
  2420  030D  3A0D               	xorlw	13	; case 8
  2421  030E  1903               	skipnz
  2422  030F  2A9B               	goto	l4369
  2423  0310  3A01               	xorlw	1	; case 9
  2424  0311  1903               	skipnz
  2425  0312  2AED               	goto	l4419
  2426  0313  2865               	goto	l703
  2427  0314  118A  280B         	ljmp	start
  2428  0316                     __end_of_main:	
  2429                           
  2430                           	psect	swtext1
  2431  0451                     __pswtext1:	
  2432  0451                     S4641:	
  2433  0451  118A  28EF         	ljmp	l752
  2434  0453  118A  28F2         	ljmp	l4027
  2435  0455  118A  28FB         	ljmp	l4037
  2436  0457  118A  2901         	ljmp	l4047
  2437  0459  118A  2907         	ljmp	l4057
  2438  045B  118A  290D         	ljmp	l4067
  2439  045D  118A  2917         	ljmp	l4077
  2440                           
  2441                           	psect	swtext2
  2442  045F                     __pswtext2:	
  2443  045F                     S4643:	
  2444  045F  118A  292B         	ljmp	l780
  2445  0461  118A  292E         	ljmp	l4091
  2446  0463  118A  2937         	ljmp	l4101
  2447  0465  118A  293D         	ljmp	l4111
  2448  0467  118A  2943         	ljmp	l4121
  2449  0469  118A  2949         	ljmp	l4131
  2450  046B  118A  2952         	ljmp	l4141
  2451                           
  2452                           	psect	swtext3
  2453  046D                     __pswtext3:	
  2454  046D                     S4645:	
  2455  046D  118A  2965         	ljmp	l807
  2456  046F  118A  2969         	ljmp	l4155
  2457  0471  118A  2972         	ljmp	l4165
  2458  0473  118A  2978         	ljmp	l4175
  2459  0475  118A  297E         	ljmp	l4185
  2460  0477  118A  2986         	ljmp	l4195
  2461                           
  2462                           	psect	text583
  2463  0316                     __ptext583:	
  2464 ;; =============== function _main ends ============
  2465                           
  2466                           
  2467 ;; *************** function _process_AD_Converter_Value *****************
  2468 ;; Defined at:
  2469 ;;		line 102 in file "C:\190604\AK7030-OTP\common.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: FFE9F/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    4
  2490 ;; This function calls:
  2491 ;;		_getAD_ConvertFlag
  2492 ;;		_setAD_ConvertFlag
  2493 ;;		_AD_Sample
  2494 ;;		_adc_test_init
  2495 ;;		_adc_start
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500  0316                     _process_AD_Converter_Value:	
  2501                           
  2502                           ;common.c: 67: return adc_convert_flag;
  2503                           
  2504                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2505                           
  2506                           ;common.c: 103: if(getAD_ConvertFlag())
  2507                           
  2508                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2509  0316  0879               	movf	_adc_convert_flag,w
  2510  0317  3A00               	xorlw	0
  2511  0318  1903               	skipnz
  2512  0319  0008               	return
  2513                           
  2514                           ;common.c: 104: {
  2515                           ;common.c: 105: setAD_ConvertFlag(0);
  2516  031A  3000               	movlw	0
  2517  031B  2335  118A         	fcall	_setAD_ConvertFlag
  2518                           
  2519                           ;common.c: 106: AD_Sample();
  2520  031D  233A  118A         	fcall	_AD_Sample
  2521                           
  2522                           ;common.c: 107: if(4 == sampleChannelSelect)
  2523  031F  085B               	movf	_sampleChannelSelect,w
  2524  0320  3A04               	xorlw	4
  2525  0321  1D03               	skipz
  2526  0322  2B27               	goto	l3913
  2527                           
  2528                           ;common.c: 108: adc_test_init(4,3);
  2529  0323  3003               	movlw	3
  2530  0324  00D6               	movwf	?_adc_test_init
  2531  0325  3004               	movlw	4
  2532  0326  2B30               	goto	L10
  2533  0327                     l3913:	
  2534                           
  2535                           ;common.c: 109: else if(1 == sampleChannelSelect)
  2536  0327  0B5B               	decfsz	_sampleChannelSelect,w
  2537  0328  2B2D               	goto	l3917
  2538                           
  2539                           ;common.c: 110: adc_test_init(1,3);
  2540  0329  3003               	movlw	3
  2541  032A  00D6               	movwf	?_adc_test_init
  2542  032B  3001               	movlw	1
  2543  032C  2B30               	goto	L10
  2544  032D                     l3917:	
  2545                           
  2546                           ;common.c: 111: else
  2547                           ;common.c: 112: adc_test_init(14,3);
  2548  032D  3003               	movlw	3
  2549  032E  00D6               	movwf	?_adc_test_init
  2550  032F  300E               	movlw	14
  2551  0330                     L10:	
  2552  0330  23A2  118A         	fcall	_adc_test_init
  2553                           
  2554                           ;common.c: 114: adc_start();
  2555  0332  2BB7               	ljmp	l3729
  2556  0333                     __end_of_process_AD_Converter_Value:	
  2557  0333                     __ptext589:	
  2558 ;; =============== function _setAD_ConvertFlag ends ============
  2559                           
  2560                           
  2561 ;; *************** function _getAD_ConvertFlag *****************
  2562 ;; Defined at:
  2563 ;;		line 66 in file "C:\190604\AK7030-OTP\common.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      unsigned char 
  2570 ;; Registers used:
  2571 ;;		wreg
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: FFFFF/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    2
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_process_AD_Converter_Value
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590  0333                     _getAD_ConvertFlag:	
  2591                           
  2592                           ;common.c: 67: return adc_convert_flag;
  2593                           
  2594                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2595  0333  0879               	movf	_adc_convert_flag,w
  2596  0334  0008               	return
  2597  0335                     __end_of_getAD_ConvertFlag:	
  2598  0335                     __ptext588:	
  2599 ;; =============== function _getAdOriginalValue ends ============
  2600                           
  2601                           
  2602 ;; *************** function _setAD_ConvertFlag *****************
  2603 ;; Defined at:
  2604 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  flag            1    wreg     unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  flag            1    0[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		wreg
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 60/0
  2616 ;;		Unchanged: FFF9F/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       0       0       0
  2619 ;;      Locals:         0       1       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         0       1       0       0       0
  2622 ;;Total ram usage:        1 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    2
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_process_AD_Converter_Value
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631  0335                     _setAD_ConvertFlag:	
  2632                           
  2633                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2634                           ;setAD_ConvertFlag@flag stored from wreg
  2635  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0337  00D6               	movwf	setAD_ConvertFlag@flag
  2638                           
  2639                           ;common.c: 73: adc_convert_flag = flag;
  2640  0338  00F9               	movwf	_adc_convert_flag
  2641  0339  0008               	return
  2642  033A                     __end_of_setAD_ConvertFlag:	
  2643  033A                     __ptext585:	
  2644 ;; =============== function _clearPinPortAndTimer ends ============
  2645                           
  2646                           
  2647 ;; *************** function _AD_Sample *****************
  2648 ;; Defined at:
  2649 ;;		line 128 in file "C:\190604\AK7030-OTP\common.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  index           1    4[BANK0 ] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;		None               void
  2656 ;; Registers used:
  2657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 60/0
  2660 ;;		On exit  : 60/0
  2661 ;;		Unchanged: FFE9F/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       0       0       0       0
  2664 ;;      Locals:         0       1       0       0       0
  2665 ;;      Temps:          0       2       0       0       0
  2666 ;;      Totals:         0       3       0       0       0
  2667 ;;Total ram usage:        3 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    3
  2670 ;; This function calls:
  2671 ;;		_getAdOriginalValue
  2672 ;; This function is called by:
  2673 ;;		_process_AD_Converter_Value
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676  033A                     _AD_Sample:	
  2677                           
  2678                           ;common.c: 129: if(sampleTimes < 6)
  2679                           
  2680                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2681  033A  3006               	movlw	6
  2682  033B  023C               	subwf	_sampleTimes,w
  2683  033C  1803               	skipnc
  2684  033D  0008               	return
  2685                           
  2686                           ;common.c: 130: {
  2687                           ;common.c: 132: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2688  033E  239D  118A         	fcall	_getAdOriginalValue
  2689  0340  1003               	clrc
  2690  0341  0D3C               	rlf	_sampleTimes,w
  2691  0342  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2692  0343  0084               	movwf	4
  2693  0344  0856               	movf	?_getAdOriginalValue,w
  2694  0345  1383               	bcf	3,7	;select IRP bank0
  2695  0346  0080               	movwf	0
  2696  0347  0A84               	incf	4,f
  2697  0348  0857               	movf	?_getAdOriginalValue+1,w
  2698  0349  0080               	movwf	0
  2699                           
  2700                           ;common.c: 134: if(sampleTimes == 0)
  2701  034A  08BC               	movf	_sampleTimes,f
  2702  034B  1D03               	skipz
  2703  034C  2B55               	goto	l3861
  2704                           
  2705                           ;common.c: 135: {
  2706                           ;common.c: 136: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2707  034D  0821               	movf	_buffer_Sample_AD_Value+1,w
  2708  034E  00B5               	movwf	_multiFilterMaxValue+1
  2709  034F  0820               	movf	_buffer_Sample_AD_Value,w
  2710  0350  00B4               	movwf	_multiFilterMaxValue
  2711                           
  2712                           ;common.c: 137: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2713  0351  0821               	movf	_buffer_Sample_AD_Value+1,w
  2714  0352  00B7               	movwf	_multiFilterMinValue+1
  2715  0353  0820               	movf	_buffer_Sample_AD_Value,w
  2716  0354  00B6               	movwf	_multiFilterMinValue
  2717  0355                     l3861:	
  2718                           
  2719                           ;common.c: 138: }
  2720                           ;common.c: 140: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2721  0355  23BA  118A         	fcall	PL2	;call to abstracted procedure
  2722  0357  0235               	subwf	_multiFilterMaxValue+1,w
  2723  0358  1D03               	skipz
  2724  0359  2B5C               	goto	u915
  2725  035A  0858               	movf	??_AD_Sample,w
  2726  035B  0234               	subwf	_multiFilterMaxValue,w
  2727  035C                     u915:	
  2728  035C  1803               	skipnc
  2729  035D  2B67               	goto	l1640
  2730                           
  2731                           ;common.c: 141: {
  2732                           ;common.c: 142: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2733  035E  1003               	clrc
  2734  035F  0D3C               	rlf	_sampleTimes,w
  2735  0360  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2736  0361  0084               	movwf	4
  2737  0362  0800               	movf	0,w
  2738  0363  00B4               	movwf	_multiFilterMaxValue
  2739  0364  0A84               	incf	4,f
  2740  0365  0800               	movf	0,w
  2741  0366  00B5               	movwf	_multiFilterMaxValue+1
  2742  0367                     l1640:	
  2743                           
  2744                           ;common.c: 143: }
  2745                           ;common.c: 144: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2746  0367  23BA  118A         	fcall	PL2	;call to abstracted procedure
  2747  0369  0837               	movf	_multiFilterMinValue+1,w
  2748  036A  0259               	subwf	??_AD_Sample+1,w
  2749  036B  1D03               	skipz
  2750  036C  2B6F               	goto	u925
  2751  036D  0836               	movf	_multiFilterMinValue,w
  2752  036E  0258               	subwf	??_AD_Sample,w
  2753  036F                     u925:	
  2754  036F  1803               	skipnc
  2755  0370  2B7A               	goto	l3867
  2756                           
  2757                           ;common.c: 145: {
  2758                           ;common.c: 146: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2759  0371  1003               	clrc
  2760  0372  0D3C               	rlf	_sampleTimes,w
  2761  0373  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2762  0374  0084               	movwf	4
  2763  0375  0800               	movf	0,w
  2764  0376  00B6               	movwf	_multiFilterMinValue
  2765  0377  0A84               	incf	4,f
  2766  0378  0800               	movf	0,w
  2767  0379  00B7               	movwf	_multiFilterMinValue+1
  2768  037A                     l3867:	
  2769  037A  3006               	movlw	6
  2770                           
  2771                           ;common.c: 151: sampleTimes++;
  2772  037B  0ABC               	incf	_sampleTimes,f
  2773                           
  2774                           ;common.c: 153: if(sampleTimes >= 6)
  2775  037C  023C               	subwf	_sampleTimes,w
  2776  037D  1C03               	skipc
  2777  037E  0008               	return
  2778                           
  2779                           ;common.c: 154: {
  2780                           ;common.c: 155: sampleTimes = 0;
  2781  037F  01BC               	clrf	_sampleTimes
  2782                           
  2783                           ;common.c: 158: {
  2784                           ;common.c: 160: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2785  0380  085B               	movf	_sampleChannelSelect,w
  2786  0381  3A0E               	xorlw	14
  2787  0382  1D03               	skipz
  2788  0383  2B86               	goto	l3877
  2789                           
  2790                           ;common.c: 161: sampleChannelSelect = 4;
  2791  0384  3004               	movlw	4
  2792  0385  2B8E               	goto	L11
  2793  0386                     l3877:	
  2794                           ;common.c: 162: }
  2795                           
  2796                           
  2797                           ;common.c: 164: {
  2798                           ;common.c: 165: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  2799  0386  085B               	movf	_sampleChannelSelect,w
  2800  0387  3A04               	xorlw	4
  2801  0388  1D03               	skipz
  2802  0389  2B8D               	goto	l3883
  2803                           
  2804                           ;common.c: 166: sampleChannelSelect = 1;
  2805  038A  01DB               	clrf	_sampleChannelSelect
  2806  038B  0ADB               	incf	_sampleChannelSelect,f
  2807                           
  2808                           ;common.c: 167: }
  2809  038C  2B8F               	goto	l3887
  2810  038D                     l3883:	
  2811                           
  2812                           ;common.c: 171: sampleChannelSelect = 14;
  2813  038D  300E               	movlw	14
  2814  038E                     L11:	
  2815  038E  00DB               	movwf	_sampleChannelSelect
  2816  038F                     l3887:	
  2817                           ;common.c: 172: }
  2818                           
  2819                           
  2820                           ;common.c: 177: }
  2821                           ;common.c: 179: for(unsigned char index = 0; index < 6;index++)
  2822  038F  01DA               	clrf	AD_Sample@index
  2823  0390                     l3893:	
  2824                           
  2825                           ;common.c: 180: buffer_Sample_AD_Value[index] = 0;
  2826  0390  1003               	clrc
  2827  0391  0D5A               	rlf	AD_Sample@index,w
  2828  0392  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2829  0393  0084               	movwf	4
  2830  0394  3006               	movlw	6
  2831  0395  0180               	clrf	0
  2832  0396  0A84               	incf	4,f
  2833  0397  0180               	clrf	0
  2834  0398  0ADA               	incf	AD_Sample@index,f
  2835  0399  025A               	subwf	AD_Sample@index,w
  2836  039A  1803               	btfsc	3,0
  2837  039B  0008               	return
  2838  039C  2B90               	goto	l3893
  2839  039D                     __end_of_AD_Sample:	
  2840  039D                     __ptext587:	
  2841 ;; =============== function _clearAllTimer ends ============
  2842                           
  2843                           
  2844 ;; *************** function _getAdOriginalValue *****************
  2845 ;; Defined at:
  2846 ;;		line 78 in file "C:\190604\AK7030-OTP\common.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  2    0[BANK0 ] unsigned int 
  2853 ;; Registers used:
  2854 ;;		wreg
  2855 ;; Tracked objects:
  2856 ;;		On entry : 60/0
  2857 ;;		On exit  : 60/0
  2858 ;;		Unchanged: FFF9F/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       2       0       0       0
  2861 ;;      Locals:         0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         0       2       0       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    2
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_AD_Sample
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873  039D                     _getAdOriginalValue:	
  2874                           
  2875                           ;common.c: 79: return adc_original_value;
  2876                           
  2877                           ; Regs used in _getAdOriginalValue: [wreg]
  2878  039D  0833               	movf	_adc_original_value+1,w
  2879  039E  00D7               	movwf	?_getAdOriginalValue+1
  2880  039F  0832               	movf	_adc_original_value,w
  2881  03A0  00D6               	movwf	?_getAdOriginalValue
  2882  03A1  0008               	return
  2883  03A2                     __end_of_getAdOriginalValue:	
  2884  03A2                     __ptext605:	
  2885 ;; =============== function _dac_init ends ============
  2886                           
  2887                           
  2888 ;; *************** function _adc_test_init *****************
  2889 ;; Defined at:
  2890 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  channel         1    wreg     unsigned char 
  2893 ;;  ref             1    0[BANK0 ] unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  channel         1    2[BANK0 ] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;		None               void
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 60/0
  2902 ;;		On exit  : 60/20
  2903 ;;		Unchanged: FFF9F/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2905 ;;      Params:         0       1       0       0       0
  2906 ;;      Locals:         0       1       0       0       0
  2907 ;;      Temps:          0       1       0       0       0
  2908 ;;      Totals:         0       3       0       0       0
  2909 ;;Total ram usage:        3 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    2
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;;		_process_AD_Converter_Value
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919  03A2                     _adc_test_init:	
  2920                           
  2921                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2922                           ;adc_test_init@channel stored from wreg
  2923  03A2  00D8               	movwf	adc_test_init@channel
  2924                           
  2925                           ;periph.c: 86: ADCON0 = 0x00;
  2926  03A3  019F               	clrf	31	;volatile
  2927                           
  2928                           ;periph.c: 87: ADCON0|=channel<<2;
  2929  03A4  00D7               	movwf	??_adc_test_init
  2930  03A5  1003               	clrc
  2931  03A6  0DD7               	rlf	??_adc_test_init,f
  2932  03A7  1003               	clrc
  2933  03A8  0D57               	rlf	??_adc_test_init,w
  2934  03A9  049F               	iorwf	31,f	;volatile
  2935                           
  2936                           ;periph.c: 88: ADCON1|=ref<<6;
  2937  03AA  0856               	movf	adc_test_init@ref,w
  2938  03AB  00D7               	movwf	??_adc_test_init
  2939  03AC  0CD7               	rrf	??_adc_test_init,f
  2940  03AD  0CD7               	rrf	??_adc_test_init,f
  2941  03AE  0C57               	rrf	??_adc_test_init,w
  2942  03AF  39C0               	andlw	192
  2943  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2944  03B1  049F               	iorwf	31,f	;volatile
  2945                           
  2946                           ;periph.c: 89: ADON=1;
  2947  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2948  03B3  141F               	bsf	31,0
  2949                           
  2950                           ;periph.c: 90: ADIE=1;
  2951  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2952  03B5  150D               	bsf	13,2
  2953  03B6  0008               	return
  2954  03B7                     __end_of_adc_test_init:	
  2955  03B7                     __ptext601:	
  2956 ;; =============== function _isPermitSampleTime ends ============
  2957                           
  2958                           
  2959 ;; *************** function _adc_start *****************
  2960 ;; Defined at:
  2961 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;		None               void
  2968 ;; Registers used:
  2969 ;;		None
  2970 ;; Tracked objects:
  2971 ;;		On entry : 60/20
  2972 ;;		On exit  : 60/0
  2973 ;;		Unchanged: FFF9F/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    2
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_main
  2986 ;;		_process_AD_Converter_Value
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989  03B7                     _adc_start:	
  2990  03B7                     l3729:	
  2991                           ; Regs used in _adc_start: []
  2992                           
  2993                           
  2994                           ;periph.c: 101: GO=1;
  2995  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2996  03B8  149F               	bsf	31,1
  2997  03B9  0008               	return
  2998  03BA                     __end_of_adc_start:	
  2999  03BA                     PL2:	
  3000  03BA  1003               	clrc
  3001  03BB  0D3C               	rlf	_sampleTimes,w
  3002  03BC  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  3003  03BD  0084               	movwf	4
  3004  03BE  0800               	movf	0,w
  3005  03BF  00D8               	movwf	??_AD_Sample
  3006  03C0  0A84               	incf	4,f
  3007  03C1  0800               	movf	0,w
  3008  03C2  00D9               	movwf	??_AD_Sample+1
  3009  03C3  0008               	return
  3010                           
  3011                           	psect	text584
  3012  042C                     __ptext584:	
  3013 ;; =============== function _process_AD_Converter_Value ends ============
  3014                           
  3015                           
  3016 ;; *************** function _clearPinPortAndTimer *****************
  3017 ;; Defined at:
  3018 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;		None               void
  3025 ;; Registers used:
  3026 ;;		status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 60/0
  3029 ;;		On exit  : 60/0
  3030 ;;		Unchanged: FFF9F/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    4
  3039 ;; This function calls:
  3040 ;;		_clearAllTimer
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045  042C                     _clearPinPortAndTimer:	
  3046                           
  3047                           ;main.c: 93: PB0 = 0;
  3048                           
  3049                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3050  042C  1006               	bcf	6,0
  3051                           
  3052                           ;main.c: 94: PA0 = 0;
  3053  042D  1005               	bcf	5,0
  3054                           
  3055                           ;main.c: 95: PA1 = 0;
  3056  042E  1085               	bcf	5,1
  3057                           
  3058                           ;main.c: 96: PA2 = 0;
  3059  042F  1105               	bcf	5,2
  3060                           
  3061                           ;main.c: 97: PA3 = 0;
  3062  0430  1185               	bcf	5,3
  3063                           
  3064                           ;main.c: 98: PA7 = 0;
  3065  0431  1385               	bcf	5,7
  3066                           
  3067                           ;main.c: 99: clearAllTimer();
  3068  0432  2C33               	ljmp	l3851
  3069  0433                     __end_of_clearPinPortAndTimer:	
  3070  0433                     __ptext586:	
  3071 ;; =============== function _AD_Sample ends ============
  3072                           
  3073                           
  3074 ;; *************** function _clearAllTimer *****************
  3075 ;; Defined at:
  3076 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;		None               void
  3083 ;; Registers used:
  3084 ;;		status,2, status,0, pclath, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 60/0
  3087 ;;		On exit  : 60/0
  3088 ;;		Unchanged: FFF9F/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0
  3093 ;;      Totals:         0       0       0       0       0
  3094 ;;Total ram usage:        0 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    3
  3097 ;; This function calls:
  3098 ;;		_clearTwelveHoursTimer
  3099 ;;		_clearThreeHoursTimer
  3100 ;;		_clearTwentySecondsTimer
  3101 ;; This function is called by:
  3102 ;;		_clearPinPortAndTimer
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106  0433                     _clearAllTimer:	
  3107  0433                     l3851:	
  3108                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3109                           
  3110                           
  3111                           ;main.c: 84: clearTwelveHoursTimer();
  3112  0433  2438  118A         	fcall	_clearTwelveHoursTimer
  3113                           
  3114                           ;main.c: 85: clearThreeHoursTimer();
  3115  0435  243B  118A         	fcall	_clearThreeHoursTimer
  3116                           
  3117                           ;main.c: 86: clearTwentySecondsTimer();
  3118  0437  2C3E               	ljmp	l3689
  3119  0438                     __end_of_clearAllTimer:	
  3120  0438                     __ptext611:	
  3121 ;; =============== function _clearThreeHoursTimer ends ============
  3122                           
  3123                           
  3124 ;; *************** function _clearTwelveHoursTimer *****************
  3125 ;; Defined at:
  3126 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;		None               void
  3133 ;; Registers used:
  3134 ;;		status,2
  3135 ;; Tracked objects:
  3136 ;;		On entry : 60/0
  3137 ;;		On exit  : 60/0
  3138 ;;		Unchanged: FFF9F/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    2
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_clearAllTimer
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153  0438                     _clearTwelveHoursTimer:	
  3154                           
  3155                           ;common.c: 216: uiBigTimer = 0;
  3156                           
  3157                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3158  0438  01F6               	clrf	_uiBigTimer
  3159  0439  01F7               	clrf	_uiBigTimer+1
  3160  043A  0008               	return
  3161  043B                     __end_of_clearTwelveHoursTimer:	
  3162  043B                     __ptext610:	
  3163 ;; =============== function _clearTwentySecondsTimer ends ============
  3164                           
  3165                           
  3166 ;; *************** function _clearThreeHoursTimer *****************
  3167 ;; Defined at:
  3168 ;;		line 221 in file "C:\190604\AK7030-OTP\common.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		status,2
  3177 ;; Tracked objects:
  3178 ;;		On entry : 60/0
  3179 ;;		On exit  : 60/0
  3180 ;;		Unchanged: FFF9F/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    2
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_clearAllTimer
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196  043B                     _clearThreeHoursTimer:	
  3197                           
  3198                           ;common.c: 222: uiSmallTimer = 0;
  3199                           
  3200                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3201  043B  01B8               	clrf	_uiSmallTimer
  3202  043C  01B9               	clrf	_uiSmallTimer+1
  3203  043D  0008               	return
  3204  043E                     __end_of_clearThreeHoursTimer:	
  3205  043E                     __ptext609:	
  3206 ;; =============== function _clock_config ends ============
  3207                           
  3208                           
  3209 ;; *************** function _clearTwentySecondsTimer *****************
  3210 ;; Defined at:
  3211 ;;		line 226 in file "C:\190604\AK7030-OTP\common.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		status,2
  3220 ;; Tracked objects:
  3221 ;;		On entry : 60/0
  3222 ;;		On exit  : 60/0
  3223 ;;		Unchanged: FFF9F/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    2
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_clearAllTimer
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238  043E                     _clearTwentySecondsTimer:	
  3239  043E                     l3689:	
  3240                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3241                           
  3242                           
  3243                           ;common.c: 227: uiTwentySecondsTimer = 0;
  3244  043E  01BA               	clrf	_uiTwentySecondsTimer
  3245  043F  01BB               	clrf	_uiTwentySecondsTimer+1
  3246  0440  0008               	return
  3247  0441                     __end_of_clearTwentySecondsTimer:	
  3248                           
  3249                           	psect	text590
  3250  04AD                     __ptext590:	
  3251 ;; =============== function _getAD_ConvertFlag ends ============
  3252                           
  3253                           
  3254 ;; *************** function _isFinishedThreeHoursTimer *****************
  3255 ;; Defined at:
  3256 ;;		line 265 in file "C:\190604\AK7030-OTP\common.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      unsigned char 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0
  3265 ;; Tracked objects:
  3266 ;;		On entry : 60/0
  3267 ;;		On exit  : 60/0
  3268 ;;		Unchanged: FFF9F/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3270 ;;      Params:         0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    2
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283  04AD                     _isFinishedThreeHoursTimer:	
  3284                           
  3285                           ;common.c: 266: if(uiSmallTimer == 0)
  3286                           
  3287                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3288  04AD  0839               	movf	_uiSmallTimer+1,w
  3289  04AE  0438               	iorwf	_uiSmallTimer,w
  3290  04AF  1903               	btfsc	3,2
  3291                           
  3292                           ;common.c: 267: return 1;
  3293  04B0  3401               	retlw	1
  3294                           
  3295                           ;common.c: 268: else
  3296                           ;common.c: 269: return 0;
  3297  04B1  3400               	retlw	0
  3298  04B2                     __end_of_isFinishedThreeHoursTimer:	
  3299                           
  3300                           	psect	text591
  3301  04A6                     __ptext591:	
  3302 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3303                           
  3304                           
  3305 ;; *************** function _startThreeHoursTimer *****************
  3306 ;; Defined at:
  3307 ;;		line 232 in file "C:\190604\AK7030-OTP\common.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;		None               void
  3314 ;; Registers used:
  3315 ;;		wreg
  3316 ;; Tracked objects:
  3317 ;;		On entry : 60/60
  3318 ;;		On exit  : 60/0
  3319 ;;		Unchanged: FFF9F/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0
  3324 ;;      Totals:         0       0       0       0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    2
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_main
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334  04A6                     _startThreeHoursTimer:	
  3335                           
  3336                           ;common.c: 233: uiSmallTimer = 10800;
  3337                           
  3338                           ; Regs used in _startThreeHoursTimer: [wreg]
  3339  04A6  3030               	movlw	48
  3340  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3341  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3342  04A9  00B8               	movwf	_uiSmallTimer
  3343  04AA  302A               	movlw	42
  3344  04AB  00B9               	movwf	_uiSmallTimer+1
  3345  04AC  0008               	return
  3346  04AD                     __end_of_startThreeHoursTimer:	
  3347                           
  3348                           	psect	text592
  3349  04B2                     __ptext592:	
  3350 ;; =============== function _startThreeHoursTimer ends ============
  3351                           
  3352                           
  3353 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3354 ;; Defined at:
  3355 ;;		line 248 in file "C:\190604\AK7030-OTP\common.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      unsigned char 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 60/0
  3366 ;;		On exit  : 60/0
  3367 ;;		Unchanged: FFF9F/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    2
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382  04B2                     _isFinishedTwentySecondsTimer:	
  3383                           
  3384                           ;common.c: 249: if(0 == uiTwentySecondsTimer)
  3385                           
  3386                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3387  04B2  083B               	movf	_uiTwentySecondsTimer+1,w
  3388  04B3  043A               	iorwf	_uiTwentySecondsTimer,w
  3389  04B4  1903               	btfsc	3,2
  3390                           
  3391                           ;common.c: 250: return 1;
  3392  04B5  3401               	retlw	1
  3393                           
  3394                           ;common.c: 251: else
  3395                           ;common.c: 252: return 0;
  3396  04B6  3400               	retlw	0
  3397  04B7                     __end_of_isFinishedTwentySecondsTimer:	
  3398                           
  3399                           	psect	text593
  3400  04B7                     __ptext593:	
  3401 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3402                           
  3403                           
  3404 ;; *************** function _getAdOriginaCh4Value *****************
  3405 ;; Defined at:
  3406 ;;		line 89 in file "C:\190604\AK7030-OTP\common.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  2    0[BANK0 ] unsigned int 
  3413 ;; Registers used:
  3414 ;;		wreg
  3415 ;; Tracked objects:
  3416 ;;		On entry : 60/0
  3417 ;;		On exit  : 60/0
  3418 ;;		Unchanged: FFF9F/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       2       0       0       0
  3421 ;;      Locals:         0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0
  3423 ;;      Totals:         0       2       0       0       0
  3424 ;;Total ram usage:        2 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    2
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433  04B7                     _getAdOriginaCh4Value:	
  3434                           
  3435                           ;common.c: 90: return adc_original_CH4_value;
  3436                           
  3437                           ; Regs used in _getAdOriginaCh4Value: [wreg]
  3438  04B7  0831               	movf	_adc_original_CH4_value+1,w
  3439  04B8  00D7               	movwf	?_getAdOriginaCh4Value+1
  3440  04B9  0830               	movf	_adc_original_CH4_value,w
  3441  04BA  00D6               	movwf	?_getAdOriginaCh4Value
  3442  04BB  0008               	return
  3443  04BC                     __end_of_getAdOriginaCh4Value:	
  3444                           
  3445                           	psect	text594
  3446  04DA                     __ptext594:	
  3447 ;; =============== function _getAdOriginaCh4Value ends ============
  3448                           
  3449                           
  3450 ;; *************** function _startTwentySecondsTimer *****************
  3451 ;; Defined at:
  3452 ;;		line 242 in file "C:\190604\AK7030-OTP\common.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;		None               void
  3459 ;; Registers used:
  3460 ;;		wreg
  3461 ;; Tracked objects:
  3462 ;;		On entry : 60/0
  3463 ;;		On exit  : 60/0
  3464 ;;		Unchanged: FFF9F/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3466 ;;      Params:         0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    2
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479  04DA                     _startTwentySecondsTimer:	
  3480                           
  3481                           ;common.c: 243: uiTwentySecondsTimer = 20;
  3482                           
  3483                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3484  04DA  3014               	movlw	20
  3485  04DB  00BA               	movwf	_uiTwentySecondsTimer
  3486  04DC  01BB               	clrf	_uiTwentySecondsTimer+1
  3487  04DD  0008               	return
  3488  04DE                     __end_of_startTwentySecondsTimer:	
  3489                           
  3490                           	psect	text595
  3491  04BC                     __ptext595:	
  3492 ;; =============== function _startTwentySecondsTimer ends ============
  3493                           
  3494                           
  3495 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3496 ;; Defined at:
  3497 ;;		line 257 in file "C:\190604\AK7030-OTP\common.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      unsigned char 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 60/0
  3508 ;;		On exit  : 60/0
  3509 ;;		Unchanged: FFF9F/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0
  3514 ;;      Totals:         0       0       0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    2
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524  04BC                     _isFinishedTwelveHoursTimer:	
  3525                           
  3526                           ;common.c: 258: if(uiBigTimer == 0)
  3527                           
  3528                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3529  04BC  0877               	movf	_uiBigTimer+1,w
  3530  04BD  0476               	iorwf	_uiBigTimer,w
  3531  04BE  1903               	btfsc	3,2
  3532                           
  3533                           ;common.c: 259: return 1;
  3534  04BF  3401               	retlw	1
  3535                           
  3536                           ;common.c: 260: else
  3537                           ;common.c: 261: return 0;
  3538  04C0  3400               	retlw	0
  3539  04C1                     __end_of_isFinishedTwelveHoursTimer:	
  3540                           
  3541                           	psect	text596
  3542  04C1                     __ptext596:	
  3543 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3544                           
  3545                           
  3546 ;; *************** function _startTwelveHourTimer *****************
  3547 ;; Defined at:
  3548 ;;		line 205 in file "C:\190604\AK7030-OTP\common.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;		None               void
  3555 ;; Registers used:
  3556 ;;		wreg
  3557 ;; Tracked objects:
  3558 ;;		On entry : 60/0
  3559 ;;		On exit  : 60/0
  3560 ;;		Unchanged: FFF9F/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    2
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575  04C1                     _startTwelveHourTimer:	
  3576                           
  3577                           ;common.c: 206: uiBigTimer = 43200;
  3578                           
  3579                           ; Regs used in _startTwelveHourTimer: [wreg]
  3580  04C1  30C0               	movlw	192
  3581  04C2  00F6               	movwf	_uiBigTimer
  3582  04C3  30A8               	movlw	168
  3583  04C4  00F7               	movwf	_uiBigTimer+1
  3584  04C5  0008               	return
  3585  04C6                     __end_of_startTwelveHourTimer:	
  3586                           
  3587                           	psect	text597
  3588  04C6                     __ptext597:	
  3589 ;; =============== function _startTwelveHourTimer ends ============
  3590                           
  3591                           
  3592 ;; *************** function _getAdOriginalCh1Value *****************
  3593 ;; Defined at:
  3594 ;;		line 83 in file "C:\190604\AK7030-OTP\common.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  2    0[BANK0 ] unsigned int 
  3601 ;; Registers used:
  3602 ;;		wreg
  3603 ;; Tracked objects:
  3604 ;;		On entry : 60/0
  3605 ;;		On exit  : 60/0
  3606 ;;		Unchanged: FFF9F/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       2       0       0       0
  3609 ;;      Locals:         0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0
  3611 ;;      Totals:         0       2       0       0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    2
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621  04C6                     _getAdOriginalCh1Value:	
  3622                           
  3623                           ;common.c: 84: return adc_original_CH1_value;
  3624                           
  3625                           ; Regs used in _getAdOriginalCh1Value: [wreg]
  3626  04C6  082F               	movf	_adc_original_CH1_value+1,w
  3627  04C7  00D7               	movwf	?_getAdOriginalCh1Value+1
  3628  04C8  082E               	movf	_adc_original_CH1_value,w
  3629  04C9  00D6               	movwf	?_getAdOriginalCh1Value
  3630  04CA  0008               	return
  3631  04CB                     __end_of_getAdOriginalCh1Value:	
  3632                           
  3633                           	psect	text598
  3634  04CB                     __ptext598:	
  3635 ;; =============== function _getAdOriginalCh1Value ends ============
  3636                           
  3637                           
  3638 ;; *************** function _getAdOriginalCh14Value *****************
  3639 ;; Defined at:
  3640 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  2    0[BANK0 ] unsigned int 
  3647 ;; Registers used:
  3648 ;;		wreg
  3649 ;; Tracked objects:
  3650 ;;		On entry : 60/0
  3651 ;;		On exit  : 60/0
  3652 ;;		Unchanged: FFF9F/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       2       0       0       0
  3655 ;;      Locals:         0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         0       2       0       0       0
  3658 ;;Total ram usage:        2 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667  04CB                     _getAdOriginalCh14Value:	
  3668                           
  3669                           ;common.c: 96: return adc_original_CH14_value;
  3670                           
  3671                           ; Regs used in _getAdOriginalCh14Value: [wreg]
  3672  04CB  082D               	movf	_adc_original_CH14_value+1,w
  3673  04CC  00D7               	movwf	?_getAdOriginalCh14Value+1
  3674  04CD  082C               	movf	_adc_original_CH14_value,w
  3675  04CE  00D6               	movwf	?_getAdOriginalCh14Value
  3676  04CF  0008               	return
  3677  04D0                     __end_of_getAdOriginalCh14Value:	
  3678                           
  3679                           	psect	text599
  3680  04E1                     __ptext599:	
  3681 ;; =============== function _getAdOriginalCh14Value ends ============
  3682                           
  3683                           
  3684 ;; *************** function _clrSampeTime *****************
  3685 ;; Defined at:
  3686 ;;		line 283 in file "C:\190604\AK7030-OTP\common.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;		None               void
  3693 ;; Registers used:
  3694 ;;		status,2
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: FFFFF/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713  04E1                     _clrSampeTime:	
  3714                           
  3715                           ;common.c: 284: timer.timer10msStopWatch = 0;
  3716                           
  3717                           ; Regs used in _clrSampeTime: [status,2]
  3718  04E1  01FA               	clrf	_timer
  3719  04E2  0008               	return
  3720  04E3                     __end_of_clrSampeTime:	
  3721                           
  3722                           	psect	text600
  3723  04D0                     __ptext600:	
  3724 ;; =============== function _clrSampeTime ends ============
  3725                           
  3726                           
  3727 ;; *************** function _isPermitSampleTime *****************
  3728 ;; Defined at:
  3729 ;;		line 273 in file "C:\190604\AK7030-OTP\common.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      unsigned char 
  3736 ;; Registers used:
  3737 ;;		wreg
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: FFFFF/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3743 ;;      Params:         0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0
  3746 ;;      Totals:         0       0       0       0       0
  3747 ;;Total ram usage:        0 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    2
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756  04D0                     _isPermitSampleTime:	
  3757                           
  3758                           ;common.c: 274: if(timer.timer10msStopWatch >= 10)
  3759                           
  3760                           ; Regs used in _isPermitSampleTime: [wreg]
  3761  04D0  300A               	movlw	10
  3762  04D1  027A               	subwf	_timer,w
  3763  04D2  1803               	btfsc	3,0
  3764                           
  3765                           ;common.c: 275: {
  3766                           ;common.c: 276: return 1;
  3767  04D3  3401               	retlw	1
  3768                           
  3769                           ;common.c: 278: else
  3770                           ;common.c: 279: return 0;
  3771  04D4  3400               	retlw	0
  3772  04D5                     __end_of_isPermitSampleTime:	
  3773                           
  3774                           	psect	text602
  3775  0496                     __ptext602:	
  3776 ;; =============== function _adc_start ends ============
  3777                           
  3778                           
  3779 ;; *************** function _op2_init *****************
  3780 ;; Defined at:
  3781 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;		None               void
  3788 ;; Registers used:
  3789 ;;		wreg
  3790 ;; Tracked objects:
  3791 ;;		On entry : 17F/20
  3792 ;;		On exit  : 17F/20
  3793 ;;		Unchanged: FFE80/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         0       0       0       0       0
  3796 ;;      Locals:         0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0
  3798 ;;      Totals:         0       0       0       0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    2
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808  0496                     _op2_init:	
  3809                           
  3810                           ;periph.c: 52: OP2CON1=0x10;
  3811                           
  3812                           ; Regs used in _op2_init: [wreg]
  3813  0496  3010               	movlw	16
  3814  0497  009C               	movwf	28	;volatile
  3815                           
  3816                           ;periph.c: 54: OP2CON2=0x10;
  3817  0498  009D               	movwf	29	;volatile
  3818                           
  3819                           ;periph.c: 55: OP2CON0=0x80;
  3820  0499  3080               	movlw	128
  3821  049A  009B               	movwf	27	;volatile
  3822                           
  3823                           ;periph.c: 58: TRISA7=0;
  3824  049B  1385               	bcf	5,7
  3825                           
  3826                           ;periph.c: 60: TRISB7 = 1;
  3827  049C  1786               	bsf	6,7
  3828  049D  0008               	return
  3829  049E                     __end_of_op2_init:	
  3830                           
  3831                           	psect	text603
  3832  0479                     __ptext603:	
  3833 ;; =============== function _op2_init ends ============
  3834                           
  3835                           
  3836 ;; *************** function _op1_init *****************
  3837 ;; Defined at:
  3838 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;		None               void
  3845 ;; Registers used:
  3846 ;;		wreg
  3847 ;; Tracked objects:
  3848 ;;		On entry : 17F/20
  3849 ;;		On exit  : 17F/20
  3850 ;;		Unchanged: FFE80/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         0       0       0       0       0
  3853 ;;      Locals:         0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0
  3855 ;;      Totals:         0       0       0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    2
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865  0479                     _op1_init:	
  3866                           
  3867                           ;periph.c: 33: OP1CON1=0x02;
  3868                           
  3869                           ; Regs used in _op1_init: [wreg]
  3870  0479  3002               	movlw	2
  3871  047A  1283               	bcf	3,5	;RP0=0, select bank0
  3872  047B  009C               	movwf	28	;volatile
  3873                           
  3874                           ;periph.c: 34: OP1CON2=0xA0;
  3875  047C  30A0               	movlw	160
  3876  047D  009D               	movwf	29	;volatile
  3877                           
  3878                           ;periph.c: 35: OP1CON0=0x80;
  3879  047E  3080               	movlw	128
  3880  047F  009B               	movwf	27	;volatile
  3881                           
  3882                           ;periph.c: 38: TRISB3=1;
  3883  0480  1683               	bsf	3,5	;RP0=1, select bank1
  3884  0481  1586               	bsf	6,3
  3885                           
  3886                           ;periph.c: 40: TRISB5=0;
  3887  0482  1286               	bcf	6,5
  3888  0483  0008               	return
  3889  0484                     __end_of_op1_init:	
  3890                           
  3891                           	psect	text604
  3892  04D5                     __ptext604:	
  3893 ;; =============== function _op1_init ends ============
  3894                           
  3895                           
  3896 ;; *************** function _dac_init *****************
  3897 ;; Defined at:
  3898 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg
  3907 ;; Tracked objects:
  3908 ;;		On entry : 17F/20
  3909 ;;		On exit  : 17F/20
  3910 ;;		Unchanged: FFE80/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    2
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925  04D5                     _dac_init:	
  3926                           
  3927                           ;periph.c: 15: DACCON|=1;
  3928                           
  3929                           ; Regs used in _dac_init: [wreg]
  3930  04D5  1407               	bsf	7,0	;volatile
  3931                           
  3932                           ;periph.c: 17: DACR0=0x0F;
  3933  04D6  300F               	movlw	15
  3934  04D7  0088               	movwf	8	;volatile
  3935                           
  3936                           ;periph.c: 18: DACCON|=(1)<<2;
  3937  04D8  1507               	bsf	7,2	;volatile
  3938  04D9  0008               	return
  3939  04DA                     __end_of_dac_init:	
  3940                           
  3941                           	psect	text606
  3942  04DE                     __ptext606:	
  3943 ;; =============== function _adc_test_init ends ============
  3944                           
  3945                           
  3946 ;; *************** function _timer1_interrupt_config *****************
  3947 ;; Defined at:
  3948 ;;		line 58 in file "C:\190604\AK7030-OTP\common.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;		None               void
  3955 ;; Registers used:
  3956 ;;		None
  3957 ;; Tracked objects:
  3958 ;;		On entry : 17F/20
  3959 ;;		On exit  : 17F/20
  3960 ;;		Unchanged: FFE80/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       0       0       0       0
  3963 ;;      Locals:         0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0
  3965 ;;      Totals:         0       0       0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    2
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_main
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975  04DE                     _timer1_interrupt_config:	
  3976                           
  3977                           ;common.c: 59: GIE = 1;
  3978                           
  3979                           ; Regs used in _timer1_interrupt_config: []
  3980  04DE  178B               	bsf	11,7
  3981                           
  3982                           ;common.c: 60: PEIE = 1;
  3983  04DF  170B               	bsf	11,6
  3984  04E0  0008               	return
  3985  04E1                     __end_of_timer1_interrupt_config:	
  3986                           
  3987                           	psect	text607
  3988  0484                     __ptext607:	
  3989 ;; =============== function _timer1_interrupt_config ends ============
  3990                           
  3991                           
  3992 ;; *************** function _timer1_config *****************
  3993 ;; Defined at:
  3994 ;;		line 46 in file "C:\190604\AK7030-OTP\common.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		wreg
  4003 ;; Tracked objects:
  4004 ;;		On entry : 17F/40
  4005 ;;		On exit  : 17F/20
  4006 ;;		Unchanged: FFE80/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0
  4011 ;;      Totals:         0       0       0       0       0
  4012 ;;Total ram usage:        0 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    2
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021  0484                     _timer1_config:	
  4022                           
  4023                           ;common.c: 48: TMR1H=0xCF;
  4024                           
  4025                           ; Regs used in _timer1_config: [wreg]
  4026  0484  30CF               	movlw	207
  4027  0485  1303               	bcf	3,6	;RP1=0, select bank0
  4028  0486  008F               	movwf	15	;volatile
  4029                           
  4030                           ;common.c: 49: TMR1L=0x2C;
  4031  0487  302C               	movlw	44
  4032  0488  008E               	movwf	14	;volatile
  4033                           
  4034                           ;common.c: 50: T1CON=0xE1;
  4035  0489  30E1               	movlw	225
  4036  048A  0090               	movwf	16	;volatile
  4037                           
  4038                           ;common.c: 51: TMR1IE=1;
  4039  048B  1683               	bsf	3,5	;RP0=1, select bank1
  4040  048C  140C               	bsf	12,0
  4041  048D  0008               	return
  4042  048E                     __end_of_timer1_config:	
  4043                           
  4044                           	psect	text608
  4045  049E                     __ptext608:	
  4046 ;; =============== function _timer1_config ends ============
  4047                           
  4048                           
  4049 ;; *************** function _clock_config *****************
  4050 ;; Defined at:
  4051 ;;		line 38 in file "C:\190604\AK7030-OTP\common.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;		None               void
  4058 ;; Registers used:
  4059 ;;		wreg, status,2
  4060 ;; Tracked objects:
  4061 ;;		On entry : 17F/20
  4062 ;;		On exit  : 17F/40
  4063 ;;		Unchanged: FFE80/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    2
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_main
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078  049E                     _clock_config:	
  4079                           
  4080                           ;common.c: 40: CLKPR = 0x80;
  4081                           
  4082                           ; Regs used in _clock_config: [wreg+status,2]
  4083  049E  3080               	movlw	128
  4084  049F  1283               	bcf	3,5	;RP0=0, select bank2
  4085  04A0  1703               	bsf	3,6	;RP1=1, select bank2
  4086  04A1  0088               	movwf	8	;volatile
  4087                           
  4088                           ;common.c: 41: CLKPR = 0x00;
  4089  04A2  0188               	clrf	8	;volatile
  4090  04A3                     l1600:	
  4091                           ;common.c: 42: while(CLKPCE);
  4092                           
  4093  04A3  1F88               	btfss	8,7
  4094  04A4  0008               	return
  4095  04A5  2CA3               	goto	l1600
  4096  04A6                     __end_of_clock_config:	
  4097                           
  4098                           	psect	text612
  4099  03C4                     __ptext612:	
  4100 ;; =============== function _clearTwelveHoursTimer ends ============
  4101                           
  4102                           
  4103 ;; *************** function _ISR *****************
  4104 ;; Defined at:
  4105 ;;		line 288 in file "C:\190604\AK7030-OTP\common.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;		None               void
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 60/0
  4117 ;;		Unchanged: FFF9F/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4119 ;;      Params:         0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0
  4121 ;;      Temps:          2       0       0       0       0
  4122 ;;      Totals:         2       0       0       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    1
  4126 ;; This function calls:
  4127 ;;		i1_setAD_ConvertFlag
  4128 ;;		_adc_get
  4129 ;; This function is called by:
  4130 ;;		Interrupt level 1
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133  03C4                     _ISR:	
  4134                           
  4135                           ;common.c: 289: static unsigned char ucTimer1sCnt = 0;
  4136                           ;common.c: 291: if(TMR1IF == 1)
  4137  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  4138  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  4139  03C6  1C0C               	btfss	12,0
  4140  03C7  2BEE               	goto	i1l3827
  4141  03C8  3064               	movlw	100
  4142                           
  4143                           ;common.c: 292: {
  4144                           ;common.c: 293: TMR1IF = 0 ;
  4145  03C9  100C               	bcf	12,0
  4146                           
  4147                           ;common.c: 294: timer.timer10msStopWatch++;
  4148  03CA  0AFA               	incf	_timer,f
  4149                           
  4150                           ;common.c: 295: ucTimer1sCnt++;
  4151  03CB  0AF8               	incf	ISR@ucTimer1sCnt,f
  4152                           
  4153                           ;common.c: 297: if(ucTimer1sCnt >= 100)
  4154  03CC  0278               	subwf	ISR@ucTimer1sCnt,w
  4155  03CD  1C03               	skipc
  4156  03CE  2BEE               	goto	i1l3827
  4157                           
  4158                           ;common.c: 298: {
  4159                           ;common.c: 299: ucTimer1sCnt = 0;
  4160  03CF  01F8               	clrf	ISR@ucTimer1sCnt
  4161                           
  4162                           ;common.c: 300: if(uiBigTimer > 0)
  4163  03D0  0877               	movf	_uiBigTimer+1,w
  4164  03D1  0476               	iorwf	_uiBigTimer,w
  4165  03D2  1903               	skipnz
  4166  03D3  2BDA               	goto	i1l1708
  4167                           
  4168                           ;common.c: 301: uiBigTimer--;
  4169  03D4  3001               	movlw	1
  4170  03D5  02F6               	subwf	_uiBigTimer,f
  4171  03D6  3000               	movlw	0
  4172  03D7  1C03               	skipc
  4173  03D8  03F7               	decf	_uiBigTimer+1,f
  4174  03D9  02F7               	subwf	_uiBigTimer+1,f
  4175  03DA                     i1l1708:	
  4176                           
  4177                           ;common.c: 303: if(uiSmallTimer)
  4178  03DA  0839               	movf	_uiSmallTimer+1,w
  4179  03DB  0438               	iorwf	_uiSmallTimer,w
  4180  03DC  1903               	skipnz
  4181  03DD  2BE4               	goto	i1l1709
  4182                           
  4183                           ;common.c: 304: uiSmallTimer--;
  4184  03DE  3001               	movlw	1
  4185  03DF  02B8               	subwf	_uiSmallTimer,f
  4186  03E0  3000               	movlw	0
  4187  03E1  1C03               	skipc
  4188  03E2  03B9               	decf	_uiSmallTimer+1,f
  4189  03E3  02B9               	subwf	_uiSmallTimer+1,f
  4190  03E4                     i1l1709:	
  4191                           
  4192                           ;common.c: 306: if(uiTwentySecondsTimer)
  4193  03E4  083B               	movf	_uiTwentySecondsTimer+1,w
  4194  03E5  043A               	iorwf	_uiTwentySecondsTimer,w
  4195  03E6  1903               	skipnz
  4196  03E7  2BEE               	goto	i1l3827
  4197                           
  4198                           ;common.c: 307: uiTwentySecondsTimer--;
  4199  03E8  3001               	movlw	1
  4200  03E9  02BA               	subwf	_uiTwentySecondsTimer,f
  4201  03EA  3000               	movlw	0
  4202  03EB  1C03               	skipc
  4203  03EC  03BB               	decf	_uiTwentySecondsTimer+1,f
  4204  03ED  02BB               	subwf	_uiTwentySecondsTimer+1,f
  4205  03EE                     i1l3827:	
  4206                           
  4207                           ;common.c: 308: }
  4208                           ;common.c: 309: }
  4209                           ;common.c: 311: if(ADIF)
  4210  03EE  1D0D               	btfss	13,2
  4211  03EF  2C17               	goto	i1l1716
  4212  03F0  3001               	movlw	1
  4213                           
  4214                           ;common.c: 312: {
  4215                           ;common.c: 313: ADIF=0;
  4216  03F1  110D               	bcf	13,2
  4217                           
  4218                           ;common.c: 314: setAD_ConvertFlag(1);
  4219  03F2  2429  118A         	fcall	i1_setAD_ConvertFlag
  4220                           
  4221                           ;common.c: 315: adc_original_value = adc_get();
  4222  03F4  241E  118A         	fcall	_adc_get
  4223  03F6  0871               	movf	?_adc_get+1,w
  4224  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  4225  03F8  00B3               	movwf	_adc_original_value+1
  4226  03F9  0870               	movf	?_adc_get,w
  4227  03FA  00B2               	movwf	_adc_original_value
  4228                           
  4229                           ;common.c: 316: if(sampleChannelSelect == 4)
  4230  03FB  085B               	movf	_sampleChannelSelect,w
  4231  03FC  3A04               	xorlw	4
  4232  03FD  1D03               	skipz
  4233  03FE  2C07               	goto	i1l3839
  4234                           
  4235                           ;common.c: 317: adc_original_CH4_value = adc_get();
  4236  03FF  241E  118A         	fcall	_adc_get
  4237  0401  0871               	movf	?_adc_get+1,w
  4238  0402  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0403  00B1               	movwf	_adc_original_CH4_value+1
  4240  0404  0870               	movf	?_adc_get,w
  4241  0405  00B0               	movwf	_adc_original_CH4_value
  4242  0406  2C17               	goto	i1l1716
  4243  0407                     i1l3839:	
  4244                           
  4245                           ;common.c: 318: else if(sampleChannelSelect == 1)
  4246  0407  0B5B               	decfsz	_sampleChannelSelect,w
  4247  0408  2C11               	goto	i1l3843
  4248                           
  4249                           ;common.c: 319: adc_original_CH1_value = adc_get();
  4250  0409  241E  118A         	fcall	_adc_get
  4251  040B  0871               	movf	?_adc_get+1,w
  4252  040C  1283               	bcf	3,5	;RP0=0, select bank0
  4253  040D  00AF               	movwf	_adc_original_CH1_value+1
  4254  040E  0870               	movf	?_adc_get,w
  4255  040F  00AE               	movwf	_adc_original_CH1_value
  4256  0410  2C17               	goto	i1l1716
  4257  0411                     i1l3843:	
  4258                           
  4259                           ;common.c: 320: else
  4260                           ;common.c: 321: adc_original_CH14_value = adc_get();
  4261  0411  241E               	fcall	_adc_get
  4262  0412  0871               	movf	?_adc_get+1,w
  4263  0413  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0414  00AD               	movwf	_adc_original_CH14_value+1
  4265  0415  0870               	movf	?_adc_get,w
  4266  0416  00AC               	movwf	_adc_original_CH14_value
  4267  0417                     i1l1716:	
  4268  0417  0875               	movf	??_ISR+1,w
  4269  0418  008A               	movwf	10
  4270  0419  0E74               	swapf	??_ISR^(0+-128),w
  4271  041A  0083               	movwf	3
  4272  041B  0EFE               	swapf	126,f
  4273  041C  0E7E               	swapf	126,w
  4274  041D  0009               	retfie
  4275  041E                     __end_of_ISR:	
  4276  041E                     __ptext614:	
  4277 ;; =============== function i1_setAD_ConvertFlag ends ============
  4278                           
  4279                           
  4280 ;; *************** function _adc_get *****************
  4281 ;; Defined at:
  4282 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  val             2    2[COMMON] unsigned int 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    0[COMMON] unsigned int 
  4289 ;; Registers used:
  4290 ;;		wreg
  4291 ;; Tracked objects:
  4292 ;;		On entry : 60/0
  4293 ;;		On exit  : 60/20
  4294 ;;		Unchanged: FFF9F/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         2       0       0       0       0
  4297 ;;      Locals:         2       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0
  4299 ;;      Totals:         4       0       0       0       0
  4300 ;;Total ram usage:        4 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_ISR
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308  041E                     _adc_get:	
  4309                           
  4310                           ;periph.c: 106: unsigned int val;
  4311                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4312                           
  4313                           ; Regs used in _adc_get: [wreg]
  4314  041E  081E               	movf	30,w	;volatile
  4315  041F  00F3               	movwf	adc_get@val+1
  4316  0420  01F2               	clrf	adc_get@val
  4317  0421  1683               	bsf	3,5	;RP0=1, select bank1
  4318  0422  081E               	movf	30,w	;volatile
  4319  0423  04F2               	iorwf	adc_get@val,f
  4320                           
  4321                           ;periph.c: 108: return val;
  4322  0424  0873               	movf	adc_get@val+1,w
  4323  0425  00F1               	movwf	?_adc_get+1
  4324  0426  0872               	movf	adc_get@val,w
  4325  0427  00F0               	movwf	?_adc_get
  4326  0428  0008               	return
  4327  0429                     __end_of_adc_get:	
  4328  0429                     __ptext613:	
  4329 ;; =============== function _ISR ends ============
  4330                           
  4331                           
  4332 ;; *************** function i1_setAD_ConvertFlag *****************
  4333 ;; Defined at:
  4334 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  setAD_Conver    1    wreg     unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;		None               void
  4341 ;; Registers used:
  4342 ;;		wreg
  4343 ;; Tracked objects:
  4344 ;;		On entry : 60/0
  4345 ;;		On exit  : 60/0
  4346 ;;		Unchanged: FFF9F/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         1       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0
  4351 ;;      Totals:         1       0       0       0       0
  4352 ;;Total ram usage:        1 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_ISR
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360  0429                     i1_setAD_ConvertFlag:	
  4361                           
  4362                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4363                           ;i1setAD_ConvertFlag@flag stored from wreg
  4364  0429  00F0               	movwf	i1setAD_ConvertFlag@flag
  4365                           
  4366                           ;common.c: 73: adc_convert_flag = flag;
  4367  042A  00F9               	movwf	_adc_convert_flag
  4368  042B  0008               	return
  4369  042C                     __end_ofi1_setAD_ConvertFlag:	
  4370                           
  4371                           	psect	intentry
  4372  0004                     __pintentry:	
  4373                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4374                           
  4375  0004                     interrupt_function:	
  4376  007E                     saved_w	set	btemp
  4377  0004  00FE               	movwf	btemp
  4378  0005  0E03               	swapf	3,w
  4379  0006  00F4               	movwf	??_ISR
  4380  0007  080A               	movf	10,w
  4381  0008  00F5               	movwf	??_ISR+1
  4382  0009  118A  2BC4         	ljmp	_ISR
  4383                           
  4384                           	psect	text615
  4385  0000                     __ptext615:	
  4386 ;; =============== function _adc_get ends ============
  4387                           
  4388  007E                     btemp	set	126	;btemp
  4389  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Jun 18 09:03:19 2019

                       ??_clock_config 0056                                      pc 0002  
                                   _GO 00F9                                     fsr 0004  
                  ?_getAdOriginalValue 0056               ?_timer1_interrupt_config 0070  
                                  l703 0065                                    l712 007D  
                                  l831 0199                                    l807 0165  
                                  l680 0000                                    l752 00EF  
                                  l737 00ED                                    l907 02A6  
                                  l852 01CC                                    l780 012B  
                                  l677 0000                                    l880 0249  
                                  l882 0252                                    _PA0 0028  
                                  _PA1 0029                                    _GIE 005F  
                                  _PB0 0030                                    _PA2 002A  
                                  _PB1 0031                                    _PA3 002B  
                                  _PA6 002E                                    _PA7 002F  
                                  _PB6 0036                                    _ISR 03C4  
                                  u915 035C                                    u925 036F  
                                  fsr0 0004                                    indf 0000  
               ??_startThreeHoursTimer 0056                                   S4641 0451  
                                 S4643 045F                                   S4645 046D  
                                 ?_ISR 0070                     __size_of_AD_Sample 0063  
               ?_getAdOriginalCh1Value 0056                                   l1600 04A3  
                                 l4001 00B1                                   l1603 0000  
                                 l4011 00C6                                   l4003 00B4  
                                 l1612 0000                                   l1701 0000  
                                 l1621 0000                                   l4101 0137  
                                 l4005 00B7                                   l1606 0000  
                                 l2350 0000                                   l1615 0000  
                                 l4111 013D                                   l4031 00F7  
                                 l4023 00EB                                   l4015 00D3  
                                 l4007 00BA                                   l1624 0000  
                                 l1640 0367                                   l1609 0000  
                                 l2361 0000                                   l2353 0000  
                                 l4121 0143                                   l4025 00F0  
                                 l1618 0000                                   l2347 0000  
                                 l1627 0000                                   l4131 0149  
                                 l4035 00F9                                   l4027 00F2  
                                 l4019 00DF                                   l4213 01A3  
                                 l4205 018D                                   l4141 0152  
                                 l4037 00FB                                   l2367 0000  
                                 l1663 0000                                   l4303 0000  
                                 l4207 019C                                   l4151 0159  
                                 l4047 0101                                   l1672 0000  
                                 l4401 0000                                   l4305 022E  
                                 l4217 01A5                                   l4209 019E  
                                 l4153 0167                                   l4081 011D  
                                 l4057 0107                                   l4313 0238  
                                 l1666 0000                                   l1675 0000  
                                 l4411 0000                                   l4403 0000  
                                 l4323 025E                                   l4315 0000  
                                 l4307 0000                                   l4251 01D0  
                                 l4219 01A7                                   l4163 0170  
                                 l4155 0169                                   l4091 012E  
                                 l4067 010D                                   l1669 0000  
                                 l3701 0000                                   l4413 0000  
                                 l4405 0000                                   l4341 0000  
                                 l4333 0269                                   l4325 0000  
                                 l4317 0000                                   l4309 0000  
                                 l4261 01D9                                   l4253 01D2  
                                 l4229 01AD                                   l4165 0172  
                                 l4077 0117                                   l1678 0000  
                                 l3703 0000                                   l3711 0000  
                                 l4415 0000                                   l4407 0000  
                                 l4343 0000                                   l4327 0261  
                                 l4319 0000                                   l4263 01DB  
                                 l4239 01B4                                   l4175 0178  
                                 l4159 016E                                   l4095 0133  
                                 l4087 011F                                   l4423 02F8  
                                 l3705 0000                                   l3713 0000  
                                 l3721 0000                                   l4409 0000  
                                 l4361 0000                                   l4345 0000  
                                 l4353 0285                                   l4337 0275  
                                 l4273 01E1                                   l4257 01D7  
                                 l4249 01BB                                   l4185 017E  
                                 l4089 012C                                   l3707 0000  
                                 l3715 0000                                   l3723 0000  
                                 l3731 0000                                   l3803 0000  
                                 l4419 02ED                                   l4371 02B1  
                                 l4363 0297                                   l4347 0000  
                                 l4339 0276                                   l4283 01E8  
                                 l4195 0186                                   l4099 0135  
                                 l3709 0000                                   l3717 0000  
                                 l3725 0000                                   l3805 0000  
                                 l3901 0000                                   l4381 0000  
                                 l4357 0291                                   l4349 0000  
                                 l4293 0000                                   l3719 0000  
                                 l3727 0000                                   l3743 0000  
                                 l3903 0000                                   l4383 02C6  
                                 l4375 02BD                                   l4359 0292  
                                 l4287 01F6                                   l3729 03B7  
                                 l3745 0000                                   l3753 0000  
                                 l3913 0327                                   l4393 0000  
                                 l4377 02BE                                   l4369 029B  
                                 l4297 0220                                   l4289 0207  
                                 l3921 0000                                   l3691 0000  
                                 l3755 0000                                   l3851 0433  
                                 l3915 0000                                   l3907 0000  
                                 l4395 0000                                   l4387 02D2  
                                 l4299 0227                                   l3931 0000  
                                 l3923 0000                                   l3685 0000  
                                 l3693 0000                                   l3749 0000  
                                 l3773 0000                                   l3861 0355  
                                 l3853 0000                                   l3917 032D  
                                 l3909 0000                                   l4397 0000  
                                 l4389 02D3                                   l3933 0000  
                                 l3925 0000                                   l3687 0000  
                                 l3695 0000                                   l3767 0000  
                                 l4399 0000                                   l3951 005E  
                                 l3943 0000                                   l3935 0000  
                                 l3927 0000                                   l3689 043E  
                                 l3697 0000                                   l3769 0000  
                                 l3785 0000                                   l3873 0000  
                                 l3857 0000                                   l3961 006C  
                                 l3945 0051                                   l3937 0043  
                                 l3929 0000                                   l3699 0000  
                                 l3787 0000                                   l3883 038D  
                                 l3867 037A                                   l3971 0080  
                                 l3963 0000                                   l3955 0063  
                                 l3939 0000                                   l3893 0390  
                                 l3877 0386                                   l3869 0000  
                                 l3981 0000                                   l3965 0077  
                                 l3957 0066                                   l3949 005D  
                                 l3799 0000                                   l3895 0000  
                                 l3887 038F                                   l3991 0000  
                                 l3983 0093                                   l3975 008C  
                                 l3967 0079                                   _ADIE 046A  
                                 _ADIF 006A                                   l3897 0000  
                                 l3993 0000                                   l3977 008D  
                                 l3969 0000                                   l3899 0000  
                                 l3995 00A6                                   l3987 009F  
                                 l3979 0000                                   l3997 0000  
                                 l3989 00A0                                   l3999 00AB  
                                 _ADON 00F8                                   _PEIE 005E  
                 ??_getAdOriginalValue 0058                                   _main 000D  
                                 btemp 007E                _clearTwentySecondsTimer 043E  
                                 start 000B                ?_getAdOriginalCh14Value 0056  
                    main@ucTimerDelay1 004C                      main@ucTimerDelay2 004D  
                    main@ucTimerDelay3 004E                      main@ucTimerDelay4 004F  
                                ??_ISR 0074             __end_of_isPermitSampleTime 04D5  
                  _sampleChannelSelect 005B                 ??_getAdOriginaCh4Value 0058  
                                ?_main 0070                                  _DACR0 0088  
                                _CLKPR 0108                                  _T1CON 0010  
                      __end_of_adc_get 0429                                  _PAOD7 0C3F  
                                _PBOD6 0C46                                  _TMR1H 000F  
                                _TMR1L 000E                  setAD_ConvertFlag@flag 0056  
                                _timer 007A                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
       __end_of_getAdOriginalCh14Value 04D0          __size_of_startTwelveHourTimer 0005  
                 __end_of_clrSampeTime 04E3                  __end_of_clearAllTimer 0438  
                         __end_of_main 0316                 __size_of_adc_test_init 0015  
                    __end_of_AD_Sample 039D                                 ??_main 005B  
                 _clearPinPortAndTimer 042C                                 _ADCON0 001F  
                               _ADCON1 009F                   __end_of_clock_config 04A6  
                               _DACCON 0087                                 _ADRESH 001E  
                               _ADRESL 009E                                 _CLKPCE 0847  
                               i1l1615 0000                                 i1l2370 0000  
                               i1l1716 0417                                 i1l1708 03DA  
                               i1l1709 03E4                                 i1l3813 0000  
                               i1l3831 0000                                 i1l3815 0000  
                               i1l3841 0000                                 i1l3833 0000  
                               i1l3809 0000                                 i1l3843 0411  
                               i1l3835 0000                                 i1l3819 0000  
                               i1l3827 03EE                                 i1l3845 0000  
                               i1l3839 0407                                 i1l3849 0000  
                     __end_of_dac_init 04DA              ??_clearTwentySecondsTimer 0056  
                               _TMR1IE 0460                                 _TMR1IF 0060  
                    _getAD_ConvertFlag 0333                      _setAD_ConvertFlag 0335  
                               _TRISA0 0428                                 _TRISA1 0429  
                               _TRISB0 0430                                 _TRISA2 042A  
                               _TRISB1 0431                                 _TRISA3 042B  
                               _TRISB2 0432                                 _TRISB3 0433  
                               _TRISB4 0434                                 _TRISA6 042E  
                               _TRISB5 0435                                 _TRISA7 042F  
                               _TRISB6 0436                                 _TRISB7 0437  
                        main@ucTimer1s 0048                     ?_getAD_ConvertFlag 0070  
                   ?_setAD_ConvertFlag 0070                       __end_of_op1_init 0484  
                     __end_of_op2_init 049E            ??_isFinishedThreeHoursTimer 0056  
        __size_of_clearThreeHoursTimer 0003                              ??_adc_get 0072  
                  ??_getAD_ConvertFlag 0056                    ??_setAD_ConvertFlag 0056  
                               clrloop 048F                  ?_clearPinPortAndTimer 0070  
                               saved_w 007E                ??_clearTwelveHoursTimer 0056  
          ?_process_AD_Converter_Value 0070                          _adc_test_init 03A2  
     __size_of_startTwentySecondsTimer 0004              __end_of_getAD_ConvertFlag 0335  
            __end_of_setAD_ConvertFlag 033A                     __size_of_adc_start 0003  
                       __pcstackCOMMON 0070                           __pidataBANK0 0000  
      __end_of_clearTwentySecondsTimer 0441                    main@ucTimerRightP5s 0051  
            _isFinishedThreeHoursTimer 04AD                ??_getAdOriginalCh1Value 0058  
              _adc_original_CH14_value 002C                  __end_of_timer1_config 048E  
                       ?_adc_test_init 0056       __size_of_timer1_interrupt_config 0003  
                __size_of_clrSampeTime 0002                             __pbssBANK0 0020  
         __size_ofi1_setAD_ConvertFlag 0003                             adc_get@val 0072  
                           __pmaintext 000D                             __pintentry 0004  
                  main@enumInteralStep 003F                              ?_dac_init 0070  
               ??_clearPinPortAndTimer 0056                  __size_of_clock_config 0008  
                              _OP1CON0 001B                                _OP1CON1 001C  
                              _OP1CON2 001D                                _OP2CON0 009B  
                              _OP2CON1 009C                                _OP2CON2 009D  
                         _clrSampeTime 04E1                      __end_of_adc_start 03BA  
                 _uiTwentySecondsTimer 003A                              ?_op1_init 0070  
                            ?_op2_init 0070                     _isPermitSampleTime 04D0  
               _buffer_Sample_AD_Value 0020                     _adc_original_value 0032  
        __size_of_startThreeHoursTimer 0007             __size_of_getAD_ConvertFlag 0002  
           __size_of_setAD_ConvertFlag 0005                         main@ucTimer20s 0049  
          __size_of_getAdOriginalValue 0005                         main@ucTimerP3s 0050  
                  ?_isPermitSampleTime 0070                             _uiBigTimer 0076  
                         _clock_config 049E                                _adc_get 041E  
                  _multiFilterMaxValue 0034   __end_of_isFinishedTwentySecondsTimer 04B7  
__size_of_isFinishedTwentySecondsTimer 0005           _isFinishedTwentySecondsTimer 04B2  
                  _multiFilterMinValue 0036                   ??_isPermitSampleTime 0056  
         __end_of_startTwelveHourTimer 04C6                             ??_dac_init 0056  
                            _AD_Sample 033A                           __size_of_ISR 005A  
        __size_of_getAdOriginaCh4Value 0005                        ??_adc_test_init 0057  
                           ??_op1_init 0056                             ??_op2_init 0056  
              _startTwentySecondsTimer 04DA                   end_of_initialization 044E  
                     main@ucLoaderStep 0043                             ?_AD_Sample 0070  
        ?_isFinishedTwentySecondsTimer 0070                   main@enumMainLoopStep 0040  
                   main@ucChannel4Type 0042           ??_isFinishedTwelveHoursTimer 0056  
                     _adc_convert_flag 0079                 __size_of_clearAllTimer 0005  
         __end_of_clearThreeHoursTimer 043E                 main@ucTimerADC1ZeroP5s 004A  
       __size_of_clearTwelveHoursTimer 0003                _timer1_interrupt_config 04DE  
        __end_of_clearTwelveHoursTimer 043B     __size_of_isFinishedThreeHoursTimer 0005  
                       AD_Sample@index 005A                       main@ucTimerX1P5s 0052  
                     main@ucTimerX2P5s 0053                 main@ucTimerZeroPoint3s 0054  
               main@ucTimerZeroPoint5s 0055                       main@ucTimerDelay 004B  
                      main@ucADC4_Step 0041    __size_of_isFinishedTwelveHoursTimer 0005  
                  i1_setAD_ConvertFlag 0429              ??_startTwentySecondsTimer 0056  
                  start_initialization 0441                            __end_of_ISR 041E  
             ?_clearTwentySecondsTimer 0070         __size_of_getAdOriginalCh1Value 0005  
        __end_of_getAdOriginalCh1Value 04CB               ??_getAdOriginalCh14Value 0058  
                 ?i1_setAD_ConvertFlag 0070                   _startTwelveHourTimer 04C1  
    __end_of_isFinishedThreeHoursTimer 04B2                     main@enumBranchStep 003E  
                        _clearAllTimer 0433                            __pdataBANK0 005B  
                          ??_AD_Sample 0058              ??_timer1_interrupt_config 0056  
                          __pbssCOMMON 0076                      __size_of_dac_init 0005  
                        __pcstackBANK0 0056         ??_isFinishedTwentySecondsTimer 0056  
                            _adc_start 03B7                      __size_of_op1_init 000B  
                    __size_of_op2_init 0008                  ??i1_setAD_ConvertFlag 0070  
                ?_startTwelveHourTimer 0070        __end_of_startTwentySecondsTimer 04DE  
                       ?_clearAllTimer 0070                 __size_of_timer1_config 000A  
                 _clearThreeHoursTimer 043B           __end_of_startThreeHoursTimer 04AD  
                            __ptext600 04D0                              __ptext601 03B7  
                            __ptext610 043B                              __ptext602 0496  
                            __ptext611 0438                              __ptext603 0479  
                            __ptext612 03C4                              __ptext604 04D5  
                            __ptext613 0429                              __ptext605 03A2  
                            __ptext614 041E                              __ptext606 04DE  
                            __ptext615 0000                              __ptext607 0484  
                            __ptext608 049E                              __ptext609 043E  
                            __ptext590 04AD                              __ptext591 04A6  
                            __ptext583 0316                              __ptext592 04B2  
                            __ptext584 042C                              __ptext593 04B7  
                            __ptext585 033A                              __ptext594 04DA  
                            __ptext586 0433                              __ptext595 04BC  
                            __ptext587 039D                              __ptext596 04C1  
                            __ptext588 0335                              __ptext597 04C6  
                            __ptext589 0333                              __ptext598 04CB  
                            __ptext599 04E1                               ?_adc_get 0070  
               _adc_original_CH1_value 002E                 _adc_original_CH4_value 0030  
                            __pswtext1 0451                              __pswtext2 045F  
                            __pswtext3 046D     __end_of_isFinishedTwelveHoursTimer 04C1  
           _isFinishedTwelveHoursTimer 04BC                        ISR@ucTimer1sCnt 0078  
        __size_of_clearPinPortAndTimer 0007             __end_of_getAdOriginalValue 03A2  
                           ?_adc_start 0070        __size_of_getAdOriginalCh14Value 0005  
                    interrupt_function 0004           __end_of_getAdOriginaCh4Value 04BC  
      __end_of_timer1_interrupt_config 04E1                  ?_clearThreeHoursTimer 0070  
                 adc_test_init@channel 0058            __size_of_isPermitSampleTime 0005  
                         _uiSmallTimer 0038                  __end_of_adc_test_init 03B7  
                        _timer1_config 0484           ??_process_AD_Converter_Value 005B  
               ??_startTwelveHourTimer 0056                        ??_clearAllTimer 0056  
               _getAdOriginalCh14Value 04CB                       __size_of_adc_get 000B  
  __size_of_process_AD_Converter_Value 001D                               _dac_init 04D5  
                     main@cTimer1s_806 003D                         ?_timer1_config 0070  
                             _op1_init 0479                               _op2_init 0496  
                          ??_adc_start 0056                   _startThreeHoursTimer 04A6  
                _clearTwelveHoursTimer 0438                          __size_of_main 0309  
                             clear_ram 048E                 ??_clearThreeHoursTimer 0056  
     __size_of_clearTwentySecondsTimer 0003                          ?_clrSampeTime 0070  
                 _getAdOriginaCh4Value 04B7                            _sampleTimes 003C  
                ?_startThreeHoursTimer 0070                               intlevel1 0000  
                _getAdOriginalCh1Value 04C6             ?_isFinishedThreeHoursTimer 0070  
                    main@ucLoaderStep1 0044                      main@ucLoaderStep2 0045  
                    main@ucLoaderStep3 0046                      main@ucLoaderStep4 0047  
                        ?_clock_config 0070               ?_startTwentySecondsTimer 0070  
              i1setAD_ConvertFlag@flag 0070                         ??_clrSampeTime 0056  
          ?_isFinishedTwelveHoursTimer 0070                  ?_getAdOriginaCh4Value 0056  
                      ??_timer1_config 0056            __end_ofi1_setAD_ConvertFlag 042C  
   __end_of_process_AD_Converter_Value 0333             _process_AD_Converter_Value 0316  
               ?_clearTwelveHoursTimer 0070                       adc_test_init@ref 0056  
         __end_of_clearPinPortAndTimer 0433                     _getAdOriginalValue 039D  
