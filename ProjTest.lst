

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Nov 12 06:20:15 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text1231,local,class=CODE,delta=2
    20                           	psect	text1232,local,class=CODE,delta=2
    21                           	psect	text1233,local,class=CODE,delta=2
    22                           	psect	text1234,local,class=CODE,delta=2
    23                           	psect	text1239,local,class=CODE,delta=2
    24                           	psect	text1240,local,class=CODE,delta=2
    25                           	psect	text1241,local,class=CODE,delta=2
    26                           	psect	text1242,local,class=CODE,delta=2
    27                           	psect	text1243,local,class=CODE,delta=2
    28                           	psect	text1244,local,class=CODE,delta=2
    29                           	psect	text1245,local,class=CODE,delta=2
    30                           	psect	text1246,local,class=CODE,delta=2
    31                           	psect	text1247,local,class=CODE,delta=2
    32                           	psect	text1248,local,class=CODE,delta=2
    33                           	psect	text1250,local,class=CODE,delta=2
    34                           	psect	text1252,local,class=CODE,delta=2
    35                           	psect	text1253,local,class=CODE,delta=2
    36                           	psect	text1254,local,class=CODE,delta=2
    37                           	psect	text1255,local,class=CODE,delta=2
    38                           	psect	text1256,local,class=CODE,delta=2
    39                           	psect	text1257,local,class=CODE,delta=2
    40                           	psect	text1265,local,class=CODE,delta=2
    41                           	psect	text1266,local,class=CODE,delta=2
    42                           	psect	text1267,local,class=CODE,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text1273,local,class=CODE,delta=2
    45                           	psect	pa_nodes,global,class=CODE,delta=2
    46                           	dabs	1,0x7E,2
    47  000A                     	;#
    48                           
    49                           	psect	config
    50  2000  0FFF               	dw	4095	;#
    51  2001  3FDE               	dw	16350	;#
    52  2002  3FF8               	dw	16376	;#
    53                           
    54                           	psect	idataBANK0
    55  0000                     __pidataBANK0:	
    56                           
    57                           	psect	idataBANK1
    58  0000                     __pidataBANK1:	
    59  001F                     _ADCON0	set	31
    60  001E                     _ADRESH	set	30
    61  0017                     _CCP1CON	set	23
    62  0015                     _CCPR1L	set	21
    63  0010                     _T1CON	set	16
    64  0012                     _T2CON	set	18
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0032                     _PB2	set	50
    72  0033                     _PB3	set	51
    73  0034                     _PB4	set	52
    74  0035                     _PB5	set	53
    75  005E                     _PEIE	set	94
    76  0060                     _TMR1IF	set	96
    77  009F                     _ADCON1	set	159
    78  009E                     _ADRESL	set	158
    79  0092                     _PR2	set	146
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90  0C42                     _PBOD2	set	3138
    91                           
    92                           	psect	cinit
    93  0522                     start_initialization:	
    94  0522  3048               	movlw	low __pbssBANK0
    95                           
    96                           ; Clear objects allocated to COMMON
    97  0523  01FB               	clrf	__pbssCOMMON& (0+127)
    98  0524  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
    99  0525  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  0526  1383               	bcf	3,7	;select IRP bank0
   103  0527  0084               	movwf	4
   104  0528  306E               	movlw	low (__pbssBANK0+38)
   105  0529  118A  25C4  118A   	fcall	clear_ram
   106                           
   107                           ; Clear objects allocated to BANK1
   108  052C  30C9               	movlw	low __pbssBANK1
   109  052D  0084               	movwf	4
   110  052E  30E2               	movlw	low (__pbssBANK1+25)
   111  052F  118A  25C4  118A   	fcall	clear_ram
   112  0532  3090               	movlw	low __pbssBANK3
   113                           
   114                           ; Clear objects allocated to BANK3
   115  0533  1783               	bsf	3,7	;select IRP bank2
   116  0534  0084               	movwf	4
   117  0535  30B8               	movlw	low (__pbssBANK3+40)
   118  0536  118A  25C4         	fcall	clear_ram
   119                           
   120                           ; Initialize objects allocated to BANK1
   121  0538  1683               	bsf	3,5	;RP0=1, select bank1
   122                           
   123                           ;initializer for _sampleChannelSelect
   124  0539  300C               	movlw	12
   125  053A  00E2               	movwf	__pdataBANK1& (0+127)
   126                           
   127                           ; Initialize objects allocated to BANK0
   128  053B  1283               	bcf	3,5	;RP0=0, select bank0
   129                           
   130                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   131  053C  304B               	movlw	75
   132  053D  00EE               	movwf	__pdataBANK0& (0+127)
   133  053E                     end_of_initialization:	
   134                           ;End of C runtime variable initialization code
   135                           
   136  053E  0183               	clrf	3
   137  053F  118A  2A1E         	ljmp	_main	;jump to C main() function
   138                           
   139                           	psect	bssCOMMON
   140  007B                     __pbssCOMMON:	
   141  007B                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   142  007B                     	ds	1
   143  007C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   144  007C                     	ds	1
   145  007D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   146  007D                     	ds	1
   147                           
   148                           	psect	bssBANK0
   149  0048                     __pbssBANK0:	
   150  0048                     vPutSampleDataIntoTable@uiCalWidthArray:	
   151  0048                     	ds	8
   152  0050                     _uiTwentySecondsTimer:	
   153  0050                     	ds	2
   154  0052                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   155  0052                     	ds	2
   156  0054                     ISR@ucTimer1sCnt:	
   157  0054                     	ds	1
   158  0055                     _adc_convert_flag:	
   159  0055                     	ds	1
   160  0056                     _sampleTimes:	
   161  0056                     	ds	1
   162  0057                     _timer:	
   163  0057                     	ds	1
   164  0058                     setPWM_Width@ucOldWidth:	
   165  0058                     	ds	1
   166  0059                     vPutSampleDataIntoTable@bInitArrayFlag:	
   167  0059                     	ds	1
   168  005A                     _uiSampleChannelFourth:	
   169  005A                     	ds	20
   170                           
   171                           	psect	dataBANK0
   172  006E                     __pdataBANK0:	
   173  006E                     vPutSampleDataIntoTable@uiInitWidth:	
   174  006E                     	ds	1
   175                           
   176                           	psect	bssBANK1
   177  00C9                     __pbssBANK1:	
   178  00C9                     _uiBigTimer:	
   179  00C9                     	ds	2
   180  00CB                     _uiOneHourTimer:	
   181  00CB                     	ds	2
   182  00CD                     _uiSmallTimer:	
   183  00CD                     	ds	2
   184  00CF                     _uiTwentyMinTimer:	
   185  00CF                     	ds	2
   186  00D1                     main@ucDelay1s:	
   187  00D1                     	ds	2
   188  00D3                     main@uiTimerOneP5s:	
   189  00D3                     	ds	2
   190  00D5                     main@uiTimerThreeP5s:	
   191  00D5                     	ds	2
   192  00D7                     main@uiTimerTwoP5s:	
   193  00D7                     	ds	2
   194  00D9                     _bBigTimerStartFlag:	
   195  00D9                     	ds	1
   196  00DA                     _bOneHourTimerStartFlag:	
   197  00DA                     	ds	1
   198  00DB                     _bSmallTimerStartFlag:	
   199  00DB                     	ds	1
   200  00DC                     _bTwentyMinStartFlag:	
   201  00DC                     	ds	1
   202  00DD                     main@cTimerP5s_791:	
   203  00DD                     	ds	1
   204  00DE                     main@cTimerP5s_797:	
   205  00DE                     	ds	1
   206  00DF                     main@ucStep:	
   207  00DF                     	ds	1
   208  00E0                     main@ucTimerP3s:	
   209  00E0                     	ds	1
   210  00E1                     main@ucTimerP5s:	
   211  00E1                     	ds	1
   212                           
   213                           	psect	dataBANK1
   214  00E2                     __pdataBANK1:	
   215  00E2                     _sampleChannelSelect:	
   216  00E2                     	ds	1
   217                           
   218                           	psect	bssBANK3
   219  0190                     __pbssBANK3:	
   220  0190                     _uiSampleChannelFirst:	
   221  0190                     	ds	20
   222  01A4                     _uiSampleChannelFourteenth:	
   223  01A4                     	ds	20
   224                           
   225                           	psect	clrtext
   226  05C4                     clear_ram:	
   227                           ;	Called with FSR containing the base address, and
   228                           ;	W with the last address+1
   229                           
   230  05C4  0064               	clrwdt	;clear the watchdog before getting into this loop
   231  05C5                     clrloop:	
   232  05C5  0180               	clrf	0	;clear RAM location pointed to by FSR
   233  05C6  0A84               	incf	4,f	;increment pointer
   234  05C7  0604               	xorwf	4,w	;XOR with final address
   235  05C8  1903               	btfsc	3,2	;have we reached the end yet?
   236  05C9  3400               	retlw	0	;all done for this memory range, return
   237  05CA  0604               	xorwf	4,w	;XOR again to restore value
   238  05CB  2DC5               	goto	clrloop	;do the next byte
   239                           
   240                           	psect	cstackBANK1
   241  00A0                     __pcstackBANK1:	
   242  00A0                     ??_clearTwelveHoursTimer:	
   243  00A0                     ??_clearThreeHoursTimer:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  00A0                     ??_clock_config:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  00A0                     ??_timer1_config:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  00A0                     ??_timer1_interrupt_config:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  00A0                     ?_adc_test_init:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  00A0                     ?_startTwentyMinTimer:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  00A0                     ??_adc_start:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  00A0                     ??_isPermitSampleTime:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  00A0                     ??_clrSampeTime:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  00A0                     ??_isFinishedTwentyMinTimer:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  00A0                     ??_clearTwentyMinTimer:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  00A0                     ?_startTwelveHourTimer:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  00A0                     ??_isFinishedTwelveHoursTimer:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  00A0                     ?_startThreeHoursTimer:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  00A0                     ??_isFinishedThreeHoursTimer:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  00A0                     ?_startOneHoursTimer:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  00A0                     ??_isFinishedOneHoursTimer:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  00A0                     ??_AD_Sample:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  00A0                     ??_initPB3:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  00A0                     ??_setPB3:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  00A0                     ??_initPB4:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  00A0                     ??_setPB4:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  00A0                     ??_initPB5:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  00A0                     ??_setPB5:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  00A0                     ??_initPB2_AsHighResistence:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  00A0                     ?_pwm_start:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  00A0                     ??_selectAdChannel:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  00A0                     ??_reset:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  00A0                     ??_getAD_ConvertFlag:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  00A0                     ??_setAD_ConvertFlag:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  00A0                     ?_Filter:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  00A0                     initPB3@bValue:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  00A0                     setPB3@bValue:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  00A0                     initPB4@bValue:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  00A0                     setPB4@bValue:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  00A0                     initPB5@bValue:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  00A0                     setPB5@bValue:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  00A0                     pwm_start@ucPulseFrequency:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  00A0                     setAD_ConvertFlag@flag:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  00A0                     adc_test_init@ref:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  00A0                     Filter@tmpValue:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  00A0                     startTwelveHourTimer@uiSetTime:	
   367                           ; 2 bytes @ 0x0
   368                           
   369  00A0                     startThreeHoursTimer@uiSetTime:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  00A0                     startOneHoursTimer@uiSetTime:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  00A0                     startTwentyMinTimer@uiSetValue:	
   376                           ; 2 bytes @ 0x0
   377                           
   378                           
   379                           ; 2 bytes @ 0x0
   380  00A0                     	ds	1
   381  00A1                     ??_adc_test_init:	
   382  00A1                     ??_pwm_start:	
   383                           ; 0 bytes @ 0x1
   384                           
   385  00A1                     ??_initPin:	
   386                           ; 0 bytes @ 0x1
   387                           
   388  00A1                     ??_setPinInitVaule:	
   389                           ; 0 bytes @ 0x1
   390                           
   391  00A1                     pwm_start@ucPulseWidth:	
   392                           ; 0 bytes @ 0x1
   393                           
   394                           
   395                           ; 1 bytes @ 0x1
   396  00A1                     	ds	1
   397  00A2                     ??_startTwentyMinTimer:	
   398  00A2                     ??_startTwelveHourTimer:	
   399                           ; 0 bytes @ 0x2
   400                           
   401  00A2                     ??_startThreeHoursTimer:	
   402                           ; 0 bytes @ 0x2
   403                           
   404  00A2                     ??_startOneHoursTimer:	
   405                           ; 0 bytes @ 0x2
   406                           
   407  00A2                     ??_Filter:	
   408                           ; 0 bytes @ 0x2
   409                           
   410  00A2                     adc_test_init@channel:	
   411                           ; 0 bytes @ 0x2
   412                           
   413                           
   414                           ; 1 bytes @ 0x2
   415  00A2                     	ds	1
   416  00A3                     ??_process_AD_Converter_Value:	
   417                           
   418                           ; 0 bytes @ 0x3
   419  00A3                     	ds	3
   420  00A6                     Filter@filter_buf:	
   421                           
   422                           ; 20 bytes @ 0x6
   423  00A6                     	ds	20
   424  00BA                     Filter@filter_temp:	
   425                           
   426                           ; 2 bytes @ 0x1A
   427  00BA                     	ds	2
   428  00BC                     Filter@filter_sum:	
   429                           
   430                           ; 2 bytes @ 0x1C
   431  00BC                     	ds	2
   432  00BE                     Filter@cir:	
   433                           
   434                           ; 2 bytes @ 0x1E
   435  00BE                     	ds	2
   436  00C0                     Filter@j:	
   437                           
   438                           ; 1 bytes @ 0x20
   439  00C0                     	ds	1
   440  00C1                     Filter@i:	
   441                           
   442                           ; 1 bytes @ 0x21
   443  00C1                     	ds	1
   444  00C2                     ?_getAdOriginalCh13Value:	
   445                           
   446                           ; 2 bytes @ 0x22
   447  00C2                     	ds	2
   448  00C4                     ??_getAdOriginalCh13Value:	
   449  00C4                     ??_main:	
   450                           ; 0 bytes @ 0x24
   451                           
   452                           
   453                           ; 0 bytes @ 0x24
   454  00C4                     	ds	1
   455  00C5                     main@ucChValue:	
   456                           
   457                           ; 2 bytes @ 0x25
   458  00C5                     	ds	2
   459  00C7                     main@uiCh13Value:	
   460                           
   461                           ; 2 bytes @ 0x27
   462  00C7                     	ds	2
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:	
   466  0070                     ?_clearTwelveHoursTimer:	
   467  0070                     ?_clearThreeHoursTimer:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?_clock_config:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_timer1_config:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ?_timer1_interrupt_config:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ?_adc_start:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0070                     ?_process_AD_Converter_Value:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ?_clrSampeTime:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0070                     ?_clearTwentyMinTimer:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_AD_Sample:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0070                     ?_initPB3:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0070                     ?_setPB3:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0070                     ?_initPB4:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0070                     ?_setPB4:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ?_initPB5:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_setPB5:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     ?_initPB2_AsHighResistence:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0070                     ?_initPin:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0070                     ?_setPinInitVaule:	
   519                           ; 0 bytes @ 0x0
   520                           
   521  0070                     ?_selectAdChannel:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0070                     ?_reset:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ?_setPWM_Width:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0070                     ??_setPWM_Width:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ?_setAD_ConvertFlag:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ?_ISR:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ?i1_setAD_ConvertFlag:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ??i1_setAD_ConvertFlag:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_isPermitSampleTime:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_isFinishedTwentyMinTimer:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_isFinishedTwelveHoursTimer:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_isFinishedThreeHoursTimer:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_isFinishedOneHoursTimer:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_getAD_ConvertFlag:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_adc_get:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_main:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ?i1_Filter:	
   570                           ; 2 bytes @ 0x0
   571                           
   572  0070                     setPWM_Width@ucWidth:	
   573                           ; 2 bytes @ 0x0
   574                           
   575  0070                     i1setAD_ConvertFlag@flag:	
   576                           ; 1 bytes @ 0x0
   577                           
   578                           
   579                           ; 1 bytes @ 0x0
   580  0070                     	ds	2
   581  0072                     ??_adc_get:	
   582  0072                     ??i1_Filter:	
   583                           ; 0 bytes @ 0x2
   584                           
   585  0072                     adc_get@val:	
   586                           ; 0 bytes @ 0x2
   587                           
   588                           
   589                           ; 2 bytes @ 0x2
   590  0072                     	ds	4
   591  0076                     ?_vPutSampleDataIntoTable:	
   592  0076                     vPutSampleDataIntoTable@uiSampleData:	
   593                           ; 0 bytes @ 0x6
   594                           
   595                           
   596                           ; 2 bytes @ 0x6
   597  0076                     	ds	2
   598  0078                     vPutSampleDataIntoTable@channel:	
   599                           
   600                           ; 1 bytes @ 0x8
   601  0078                     	ds	1
   602  0079                     ??_vPutSampleDataIntoTable:	
   603                           
   604                           ; 0 bytes @ 0x9
   605  0079                     	ds	2
   606                           
   607                           	psect	cstackBANK0
   608  0020                     __pcstackBANK0:	
   609  0020                     i1Filter@filter_buf:	
   610                           
   611                           ; 20 bytes @ 0x0
   612  0020                     	ds	20
   613  0034                     i1Filter@tmpValue:	
   614                           
   615                           ; 1 bytes @ 0x14
   616  0034                     	ds	1
   617  0035                     i1Filter@filter_temp:	
   618                           
   619                           ; 2 bytes @ 0x15
   620  0035                     	ds	2
   621  0037                     i1Filter@filter_sum:	
   622                           
   623                           ; 2 bytes @ 0x17
   624  0037                     	ds	2
   625  0039                     i1Filter@cir:	
   626                           
   627                           ; 2 bytes @ 0x19
   628  0039                     	ds	2
   629  003B                     i1Filter@j:	
   630                           
   631                           ; 1 bytes @ 0x1B
   632  003B                     	ds	1
   633  003C                     i1Filter@i:	
   634                           
   635                           ; 1 bytes @ 0x1C
   636  003C                     	ds	1
   637  003D                     vPutSampleDataIntoTable@uiSum:	
   638                           
   639                           ; 2 bytes @ 0x1D
   640  003D                     	ds	2
   641  003F                     vPutSampleDataIntoTable@uiCalWidth:	
   642                           
   643                           ; 2 bytes @ 0x1F
   644  003F                     	ds	2
   645  0041                     vPutSampleDataIntoTable@ucIndex:	
   646                           
   647                           ; 1 bytes @ 0x21
   648  0041                     	ds	1
   649  0042                     vPutSampleDataIntoTable@i:	
   650                           
   651                           ; 2 bytes @ 0x22
   652  0042                     	ds	2
   653  0044                     ??_ISR:	
   654                           
   655                           ; 0 bytes @ 0x24
   656  0044                     	ds	4
   657                           
   658                           	psect	maintext
   659  021E                     __pmaintext:	
   660 ;;Data sizes: Strings 0, constant 0, data 2, bss 106, persistent 0 stack 0
   661 ;;Auto spaces:   Size  Autos    Used
   662 ;; COMMON          14     11      14
   663 ;; BANK0           80     40      79
   664 ;; BANK1           80     41      67
   665 ;; BANK3           96      0      40
   666 ;; BANK2           96      0       0
   667 ;;
   668 ;; Pointer list with targets:
   669 ;; ?i1_Filter	unsigned int  size(1) Largest target is 0
   670 ;;
   671 ;; i1Filter@tmpValue	PTR int  size(1) Largest target is 20
   672 ;;		 -> uiSampleChannelFirst(BANK3[20]), 
   673 ;;
   674 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   675 ;;
   676 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   677 ;;
   678 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   679 ;;
   680 ;; Filter@tmpValue	PTR int  size(2) Largest target is 20
   681 ;;		 -> uiSampleChannelFourteenth(BANK3[20]), uiSampleChannelFourth(BANK0[20]), uiSampleChannelFirst(BANK3[20]), 
   682 ;;
   683 ;;
   684 ;; Critical Paths under _main in COMMON
   685 ;;
   686 ;;   None.
   687 ;;
   688 ;; Critical Paths under _ISR in COMMON
   689 ;;
   690 ;;   _ISR->_vPutSampleDataIntoTable
   691 ;;   _vPutSampleDataIntoTable->i1_Filter
   692 ;;
   693 ;; Critical Paths under _main in BANK0
   694 ;;
   695 ;;   None.
   696 ;;
   697 ;; Critical Paths under _ISR in BANK0
   698 ;;
   699 ;;   _ISR->_vPutSampleDataIntoTable
   700 ;;   _vPutSampleDataIntoTable->i1_Filter
   701 ;;
   702 ;; Critical Paths under _main in BANK1
   703 ;;
   704 ;;   _main->_getAdOriginalCh13Value
   705 ;;   _getAdOriginalCh13Value->_Filter
   706 ;;   _process_AD_Converter_Value->_adc_test_init
   707 ;;   _setPinInitVaule->_setPB3
   708 ;;   _setPinInitVaule->_setPB4
   709 ;;   _setPinInitVaule->_setPB5
   710 ;;   _initPin->_initPB3
   711 ;;   _initPin->_initPB4
   712 ;;   _initPin->_initPB5
   713 ;;
   714 ;; Critical Paths under _ISR in BANK1
   715 ;;
   716 ;;   None.
   717 ;;
   718 ;; Critical Paths under _main in BANK3
   719 ;;
   720 ;;   None.
   721 ;;
   722 ;; Critical Paths under _ISR in BANK3
   723 ;;
   724 ;;   None.
   725 ;;
   726 ;; Critical Paths under _main in BANK2
   727 ;;
   728 ;;   None.
   729 ;;
   730 ;; Critical Paths under _ISR in BANK2
   731 ;;
   732 ;;   None.
   733 ;;
   734 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   735 ;;
   736 ;;
   737 ;;Call Graph Tables:
   738 ;;
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (0) _main                                                 5     5      0    1334
   743 ;;                                             36 BANK1      5     5      0
   744 ;;                            _initPin
   745 ;;                    _setPinInitVaule
   746 ;;                    _selectAdChannel
   747 ;;                       _clock_config
   748 ;;                      _timer1_config
   749 ;;            _timer1_interrupt_config
   750 ;;                      _adc_test_init
   751 ;;                _startTwentyMinTimer
   752 ;;                          _pwm_start
   753 ;;                          _adc_start
   754 ;;         _process_AD_Converter_Value
   755 ;;                 _isPermitSampleTime
   756 ;;                       _clrSampeTime
   757 ;;           _isFinishedTwentyMinTimer
   758 ;;             _getAdOriginalCh13Value
   759 ;;                             _setPB3
   760 ;;                             _setPB4
   761 ;;                             _setPB5
   762 ;;                _clearTwentyMinTimer
   763 ;;               _startTwelveHourTimer
   764 ;;         _isFinishedTwelveHoursTimer
   765 ;;              _clearTwelveHoursTimer
   766 ;;               _startThreeHoursTimer
   767 ;;          _isFinishedThreeHoursTimer
   768 ;;               _clearThreeHoursTimer
   769 ;;                 _startOneHoursTimer
   770 ;;            _isFinishedOneHoursTimer
   771 ;;                              _reset
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   774 ;;                                             34 BANK1      2     0      2
   775 ;;                             _Filter
   776 ;; ---------------------------------------------------------------------------------
   777 ;; (1) _process_AD_Converter_Value                           0     0      0      75
   778 ;;                  _getAD_ConvertFlag
   779 ;;                  _setAD_ConvertFlag
   780 ;;                          _AD_Sample
   781 ;;                      _adc_test_init
   782 ;;                          _adc_start
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (1) _setPinInitVaule                                      0     0      0      93
   785 ;;                             _setPB3
   786 ;;                             _setPB4
   787 ;;                             _setPB5
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (1) _initPin                                              0     0      0      93
   790 ;;           _initPB2_AsHighResistence
   791 ;;                            _initPB3
   792 ;;                            _initPB4
   793 ;;                            _initPB5
   794 ;; ---------------------------------------------------------------------------------
   795 ;; (2) _AD_Sample                                            0     0      0       0
   796 ;; ---------------------------------------------------------------------------------
   797 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   798 ;;                                              0 BANK1      1     1      0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (2) _Filter                                              34    32      2     620
   803 ;;                                              0 BANK1     34    32      2
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (1) _startOneHoursTimer                                   2     0      2      31
   808 ;;                                              0 BANK1      2     0      2
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   813 ;;                                              0 BANK1      2     0      2
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   818 ;;                                              0 BANK1      2     0      2
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (1) _clrSampeTime                                         0     0      0       0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (1) _isPermitSampleTime                                   0     0      0       0
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (2) _adc_start                                            0     0      0       0
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   831 ;;                                              0 BANK1      2     0      2
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (2) _adc_test_init                                        3     2      1      44
   834 ;;                                              0 BANK1      3     2      1
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (1) _timer1_interrupt_config                              0     0      0       0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _timer1_config                                        0     0      0       0
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (1) _clock_config                                         0     0      0       0
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (1) _reset                                                0     0      0       0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _selectAdChannel                                      0     0      0       0
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (1) _pwm_start                                            2     1      1      62
   847 ;;                                              0 BANK1      2     1      1
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (1) _setPB5                                               1     1      0      31
   852 ;;                                              0 BANK1      1     1      0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (2) _initPB5                                              1     1      0      31
   855 ;;                                              0 BANK1      1     1      0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (1) _setPB4                                               1     1      0      31
   858 ;;                                              0 BANK1      1     1      0
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (2) _initPB4                                              1     1      0      31
   861 ;;                                              0 BANK1      1     1      0
   862 ;; ---------------------------------------------------------------------------------
   863 ;; (1) _setPB3                                               1     1      0      31
   864 ;;                                              0 BANK1      1     1      0
   865 ;; ---------------------------------------------------------------------------------
   866 ;; (2) _initPB3                                              1     1      0      31
   867 ;;                                              0 BANK1      1     1      0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; Estimated maximum stack depth 2
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   876 ;; ---------------------------------------------------------------------------------
   877 ;; (3) _ISR                                                  4     4      0    2635
   878 ;;                                             36 BANK0      4     4      0
   879 ;;                i1_setAD_ConvertFlag
   880 ;;                            _adc_get
   881 ;;            _vPutSampleDataIntoTable
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (4) _vPutSampleDataIntoTable                             12     9      3    2538
   884 ;;                                              6 COMMON     5     2      3
   885 ;;                                             29 BANK0      7     7      0
   886 ;;                           i1_Filter
   887 ;;                       _setPWM_Width
   888 ;;                            _adc_get (ARG)
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   891 ;;                                              0 COMMON     1     1      0
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (5) i1_Filter                                            35    33      2    2023
   894 ;;                                              0 COMMON     6     4      2
   895 ;;                                              0 BANK0     29    29      0
   896 ;; ---------------------------------------------------------------------------------
   897 ;; (4) _adc_get                                              4     2      2      24
   898 ;;                                              0 COMMON     4     2      2
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (5) _setPWM_Width                                         1     1      0      66
   901 ;;                                              0 COMMON     1     1      0
   902 ;; ---------------------------------------------------------------------------------
   903 ;; Estimated maximum stack depth 5
   904 ;; ---------------------------------------------------------------------------------
   905 ;; Call Graph Graphs:
   906 ;; _main (ROOT)
   907 ;;   _initPin
   908 ;;     _initPB2_AsHighResistence
   909 ;;     _initPB3
   910 ;;     _initPB4
   911 ;;     _initPB5
   912 ;;   _setPinInitVaule
   913 ;;     _setPB3
   914 ;;     _setPB4
   915 ;;     _setPB5
   916 ;;   _selectAdChannel
   917 ;;   _clock_config
   918 ;;   _timer1_config
   919 ;;   _timer1_interrupt_config
   920 ;;   _adc_test_init
   921 ;;   _startTwentyMinTimer
   922 ;;   _pwm_start
   923 ;;   _adc_start
   924 ;;   _process_AD_Converter_Value
   925 ;;     _getAD_ConvertFlag
   926 ;;     _setAD_ConvertFlag
   927 ;;     _AD_Sample
   928 ;;     _adc_test_init
   929 ;;     _adc_start
   930 ;;   _isPermitSampleTime
   931 ;;   _clrSampeTime
   932 ;;   _isFinishedTwentyMinTimer
   933 ;;   _getAdOriginalCh13Value
   934 ;;     _Filter
   935 ;;   _setPB3
   936 ;;   _setPB4
   937 ;;   _setPB5
   938 ;;   _clearTwentyMinTimer
   939 ;;   _startTwelveHourTimer
   940 ;;   _isFinishedTwelveHoursTimer
   941 ;;   _clearTwelveHoursTimer
   942 ;;   _startThreeHoursTimer
   943 ;;   _isFinishedThreeHoursTimer
   944 ;;   _clearThreeHoursTimer
   945 ;;   _startOneHoursTimer
   946 ;;   _isFinishedOneHoursTimer
   947 ;;   _reset
   948 ;;
   949 ;; _ISR (ROOT)
   950 ;;   i1_setAD_ConvertFlag
   951 ;;   _adc_get
   952 ;;   _vPutSampleDataIntoTable
   953 ;;     i1_Filter
   954 ;;     _setPWM_Width
   955 ;;     _adc_get (ARG)
   956 ;;
   957 ;; Address spaces:
   958 ;;Name               Size   Autos  Total    Cost      Usage
   959 ;;BANK3               60      0      28      10       41.7%
   960 ;;BITBANK3            60      0       0       9        0.0%
   961 ;;SFR3                 0      0       0       4        0.0%
   962 ;;BITSFR3              0      0       0       4        0.0%
   963 ;;BANK2               60      0       0      12        0.0%
   964 ;;BITBANK2            60      0       0      11        0.0%
   965 ;;SFR2                 0      0       0       5        0.0%
   966 ;;BITSFR2              0      0       0       5        0.0%
   967 ;;SFR1                 0      0       0       2        0.0%
   968 ;;BITSFR1              0      0       0       2        0.0%
   969 ;;BANK1               50     29      43       8       83.8%
   970 ;;BITBANK1            50      0       0       7        0.0%
   971 ;;CODE                 0      0       0       0        0.0%
   972 ;;DATA                 0      0      D0       6        0.0%
   973 ;;ABS                  0      0      C8       3        0.0%
   974 ;;NULL                 0      0       0       0        0.0%
   975 ;;STACK                0      0       8       2        0.0%
   976 ;;BANK0               50     28      4F       5       98.8%
   977 ;;BITBANK0            50      0       0       4        0.0%
   978 ;;SFR0                 0      0       0       1        0.0%
   979 ;;BITSFR0              0      0       0       1        0.0%
   980 ;;COMMON               E      B       E       1      100.0%
   981 ;;BITCOMMON            E      0       0       0        0.0%
   982                           
   983                           
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 593 in file "D:\develop\190625\AK7030-OTP\main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  ucChValue       2   37[BANK1 ] unsigned int 
   991 ;;  uiCh13Value     2   39[BANK1 ] unsigned int 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  2  748[COMMON] int 
   994 ;; Registers used:
   995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 17F/0
   998 ;;		On exit  : 60/20
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         0       0       4       0       0
  1003 ;;      Temps:          0       0       1       0       0
  1004 ;;      Totals:         0       0       5       0       0
  1005 ;;Total ram usage:        5 bytes
  1006 ;; Hardware stack levels required when called:    5
  1007 ;; This function calls:
  1008 ;;		_initPin
  1009 ;;		_setPinInitVaule
  1010 ;;		_selectAdChannel
  1011 ;;		_clock_config
  1012 ;;		_timer1_config
  1013 ;;		_timer1_interrupt_config
  1014 ;;		_adc_test_init
  1015 ;;		_startTwentyMinTimer
  1016 ;;		_pwm_start
  1017 ;;		_adc_start
  1018 ;;		_process_AD_Converter_Value
  1019 ;;		_isPermitSampleTime
  1020 ;;		_clrSampeTime
  1021 ;;		_isFinishedTwentyMinTimer
  1022 ;;		_getAdOriginalCh13Value
  1023 ;;		_setPB3
  1024 ;;		_setPB4
  1025 ;;		_setPB5
  1026 ;;		_clearTwentyMinTimer
  1027 ;;		_startTwelveHourTimer
  1028 ;;		_isFinishedTwelveHoursTimer
  1029 ;;		_clearTwelveHoursTimer
  1030 ;;		_startThreeHoursTimer
  1031 ;;		_isFinishedThreeHoursTimer
  1032 ;;		_clearThreeHoursTimer
  1033 ;;		_startOneHoursTimer
  1034 ;;		_isFinishedOneHoursTimer
  1035 ;;		_reset
  1036 ;; This function is called by:
  1037 ;;		Startup code after reset
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040  021E                     _main:	
  1041                           
  1042                           ;main.c: 594: enum systemStep {
  1043                           ;main.c: 595: INIT_STEP = 0,
  1044                           ;main.c: 596: START_UP_PWM_STEP,
  1045                           ;main.c: 597: CHECK_10_HOUR_TIMER_STEP,
  1046                           ;main.c: 598: STARTUP_3_HOUR_TIMER_STEP,
  1047                           ;main.c: 599: CHECK_3_HOUR_TIMER_STEP,
  1048                           ;main.c: 600: STARTUP_1_HOUR_TIMER_STEP,
  1049                           ;main.c: 601: CHECK_1_HOUR_TIMER_STEP,
  1050                           ;main.c: 602: READY_FOR_RESET_STEP = 99,
  1051                           ;main.c: 603: DELAY_ONE_SECOND_FOR_PWM,
  1052                           ;main.c: 604: MEET_RESET_CONDITION_STEP,
  1053                           ;main.c: 605: RESET_STEP,
  1054                           ;main.c: 606: };
  1055                           ;main.c: 608: static enum systemStep ucStep = INIT_STEP;
  1056                           
  1057                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1058  021E  118A  24FA  118A   	fcall	_initPin
  1059                           
  1060                           ;main.c: 622: setPinInitVaule();
  1061  0221  118A  24D1  118A   	fcall	_setPinInitVaule
  1062                           
  1063                           ;main.c: 623: selectAdChannel();
  1064  0224  118A  25E8  118A   	fcall	_selectAdChannel
  1065                           
  1066                           ;main.c: 625: clock_config();
  1067  0227  118A  25CC  118A   	fcall	_clock_config
  1068                           
  1069                           ;main.c: 626: timer1_config();
  1070  022A  118A  25BA  118A   	fcall	_timer1_config
  1071                           
  1072                           ;main.c: 627: timer1_interrupt_config();
  1073  022D  118A  25EC  118A   	fcall	_timer1_interrupt_config
  1074                           
  1075                           ;main.c: 629: adc_test_init(12,3);
  1076  0230  3003               	movlw	3
  1077  0231  00A0               	movwf	?_adc_test_init^(0+128)
  1078  0232  300C               	movlw	12
  1079  0233  118A  24B2  118A   	fcall	_adc_test_init
  1080                           
  1081                           ;main.c: 641: startTwentyMinTimer( 60 );
  1082  0236  303C               	movlw	60
  1083  0237  00A0               	movwf	?_startTwentyMinTimer^(0+128)
  1084  0238  01A1               	clrf	(?_startTwentyMinTimer+1)^(0+128)
  1085  0239  118A  2581  118A   	fcall	_startTwentyMinTimer
  1086                           
  1087                           ;main.c: 642: pwm_start(75,249);
  1088  023C  30F9               	movlw	249
  1089  023D  00A0               	movwf	?_pwm_start^(0+128)
  1090  023E  304B               	movlw	75
  1091  023F  118A  2541  118A   	fcall	_pwm_start
  1092                           
  1093                           ;main.c: 643: _delay(1000);
  1094  0242  30F9               	movlw	249
  1095  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1096  0244  00C4               	movwf	??_main^(0+128)
  1097  0245                     u2317:	
  1098  0245  0064               	clrwdt
  1099  0246  0BC4               	decfsz	??_main^(0+128),f
  1100  0247  2A45               	goto	u2317
  1101  0248  2A49               	nop2	;nop
  1102  0249  0064               	clrwdt
  1103                           
  1104                           ;main.c: 644: adc_start();
  1105  024A  118A  24CD  118A   	fcall	_adc_start
  1106  024D                     l4304:	
  1107  024D  0064               	clrwdt	;#
  1108                           
  1109                           ;main.c: 650: process_AD_Converter_Value();
  1110  024E  118A  247D  118A   	fcall	_process_AD_Converter_Value
  1111                           
  1112                           ;main.c: 655: if( isPermitSampleTime() )
  1113  0251  118A  25D9  118A   	fcall	_isPermitSampleTime
  1114  0254  3A00               	xorlw	0
  1115  0255  1903               	skipnz
  1116  0256  2A4D               	goto	l4304
  1117                           
  1118                           ;main.c: 656: {
  1119                           ;main.c: 659: clrSampeTime();
  1120  0257  118A  25EF  118A   	fcall	_clrSampeTime
  1121                           
  1122                           ;main.c: 668: switch(ucStep)
  1123  025A  2BA0               	goto	l4464
  1124  025B                     l4312:	
  1125                           
  1126                           ;main.c: 672: {
  1127                           ;main.c: 677: static unsigned char ucTimerP3s = 0;
  1128                           ;main.c: 679: if( isFinishedTwentyMinTimer() )
  1129  025B  118A  25A5  118A   	fcall	_isFinishedTwentyMinTimer
  1130  025E  3A00               	xorlw	0
  1131  025F  1903               	skipnz
  1132  0260  2A65               	goto	l4318
  1133                           
  1134                           ;main.c: 680: {
  1135                           ;main.c: 681: ucStep = READY_FOR_RESET_STEP;
  1136  0261  3063               	movlw	99
  1137  0262  00DF               	movwf	main@ucStep^(0+128)
  1138                           
  1139                           ;main.c: 682: ucTimerP3s = 0;
  1140  0263  01E0               	clrf	main@ucTimerP3s^(0+128)
  1141                           
  1142                           ;main.c: 683: }
  1143  0264  2A4D               	goto	l4304
  1144  0265                     l4318:	
  1145                           
  1146                           ;main.c: 684: else
  1147                           ;main.c: 685: {
  1148                           ;main.c: 686: if( getAdOriginalCh13Value() > 90 )
  1149  0265  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1150  0268  3000               	movlw	0
  1151  0269  0243               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1152  026A  305B               	movlw	91
  1153  026B  1903               	skipnz
  1154  026C  0242               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1155  026D  1C03               	skipc
  1156  026E  2A71               	goto	l4322
  1157                           
  1158                           ;main.c: 687: {
  1159                           ;main.c: 688: ucTimerP3s++;
  1160  026F  0AE0               	incf	main@ucTimerP3s^(0+128),f
  1161                           
  1162                           ;main.c: 689: }
  1163  0270  2A72               	goto	l4324
  1164  0271                     l4322:	
  1165                           
  1166                           ;main.c: 690: else
  1167                           ;main.c: 691: ucTimerP3s = 0;
  1168  0271  01E0               	clrf	main@ucTimerP3s^(0+128)
  1169  0272                     l4324:	
  1170                           
  1171                           ;main.c: 693: if( ucTimerP3s >= 3)
  1172  0272  3003               	movlw	3
  1173  0273  0260               	subwf	main@ucTimerP3s^(0+128),w
  1174  0274  1C03               	skipc
  1175  0275  2A4D               	goto	l4304
  1176                           
  1177                           ;main.c: 694: {
  1178                           ;main.c: 695: ucTimerP3s = 0;
  1179  0276  01E0               	clrf	main@ucTimerP3s^(0+128)
  1180                           
  1181                           ;main.c: 696: ucStep = START_UP_PWM_STEP;
  1182  0277  01DF               	clrf	main@ucStep^(0+128)
  1183  0278  0ADF               	incf	main@ucStep^(0+128),f
  1184  0279                     l758:	
  1185                           
  1186                           ;main.c: 697: }
  1187                           ;main.c: 699: }
  1188                           ;main.c: 703: break;
  1189  0279  2A4D               	goto	l4304
  1190  027A                     l4330:	
  1191                           
  1192                           ;main.c: 707: {
  1193                           ;main.c: 717: setPB3(0);
  1194  027A  3000               	movlw	0
  1195  027B  118A  24D9  118A   	fcall	_setPB3
  1196                           
  1197                           ;main.c: 718: setPB4(1);
  1198  027E  3001               	movlw	1
  1199  027F  118A  24E4  118A   	fcall	_setPB4
  1200                           
  1201                           ;main.c: 719: setPB5(0);
  1202  0282  3000               	movlw	0
  1203  0283  118A  24EF  118A   	fcall	_setPB5
  1204                           
  1205                           ;main.c: 720: clearTwentyMinTimer();
  1206  0286  118A  25D4  118A   	fcall	_clearTwentyMinTimer
  1207                           
  1208                           ;main.c: 721: startTwelveHourTimer( 240);
  1209  0289  30F0               	movlw	240
  1210  028A  00A0               	movwf	?_startTwelveHourTimer^(0+128)
  1211  028B  01A1               	clrf	(?_startTwelveHourTimer+1)^(0+128)
  1212  028C  118A  2573  118A   	fcall	_startTwelveHourTimer
  1213                           
  1214                           ;main.c: 722: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1215  028F  3002               	movlw	2
  1216  0290  2B9C               	goto	L8
  1217  0291                     l4338:	
  1218                           ;main.c: 723: break;
  1219                           
  1220                           
  1221                           ;main.c: 727: {
  1222                           ;main.c: 732: static unsigned char ucTimerP5s = 0;
  1223                           ;main.c: 734: if( isFinishedTwelveHoursTimer () )
  1224  0291  118A  259A  118A   	fcall	_isFinishedTwelveHoursTimer
  1225  0294  3A00               	xorlw	0
  1226  0295  1903               	skipnz
  1227  0296  2A99               	goto	l4342
  1228  0297                     l4340:	
  1229                           
  1230                           ;main.c: 735: ucStep = READY_FOR_RESET_STEP;
  1231  0297  3063               	movlw	99
  1232  0298  2B9C               	goto	L8
  1233  0299                     l4342:	
  1234                           
  1235                           ;main.c: 736: else
  1236                           ;main.c: 737: {
  1237                           ;main.c: 738: if( getAdOriginalCh13Value() < 200 )
  1238  0299  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1239  029C  3000               	movlw	0
  1240  029D  0243               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1241  029E  30C8               	movlw	200
  1242  029F  1903               	skipnz
  1243  02A0  0242               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1244  02A1  1803               	skipnc
  1245  02A2  2AA5               	goto	l4346
  1246                           
  1247                           ;main.c: 739: ucTimerP5s++;
  1248  02A3  0AE1               	incf	main@ucTimerP5s^(0+128),f
  1249  02A4  2AA6               	goto	l4348
  1250  02A5                     l4346:	
  1251                           
  1252                           ;main.c: 740: else
  1253                           ;main.c: 741: ucTimerP5s = 0;
  1254  02A5  01E1               	clrf	main@ucTimerP5s^(0+128)
  1255  02A6                     l4348:	
  1256                           
  1257                           ;main.c: 743: if( ucTimerP5s > 5)
  1258  02A6  3006               	movlw	6
  1259  02A7  0261               	subwf	main@ucTimerP5s^(0+128),w
  1260  02A8  1C03               	skipc
  1261  02A9  2A4D               	goto	l4304
  1262  02AA  3003               	movlw	3
  1263                           
  1264                           ;main.c: 744: {
  1265                           ;main.c: 745: ucTimerP5s = 0;
  1266  02AB  01E1               	clrf	main@ucTimerP5s^(0+128)
  1267                           
  1268                           ;main.c: 746: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1269  02AC  2B9C               	goto	L8
  1270  02AD                     l4354:	
  1271                           
  1272                           ;main.c: 754: {
  1273                           ;main.c: 755: clearTwelveHoursTimer();
  1274  02AD  118A  25E3  118A   	fcall	_clearTwelveHoursTimer
  1275                           
  1276                           ;main.c: 756: startThreeHoursTimer(180);
  1277  02B0  30B4               	movlw	180
  1278  02B1  00A0               	movwf	?_startThreeHoursTimer^(0+128)
  1279  02B2  01A1               	clrf	(?_startThreeHoursTimer+1)^(0+128)
  1280  02B3  118A  2565  118A   	fcall	_startThreeHoursTimer
  1281                           
  1282                           ;main.c: 757: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1283  02B6  3004               	movlw	4
  1284  02B7  2B9C               	goto	L8
  1285  02B8                     l4358:	
  1286                           ;main.c: 758: break;
  1287                           
  1288                           
  1289                           ;main.c: 762: {
  1290                           ;main.c: 763: static unsigned char ucTimerP5s = 0;
  1291                           ;main.c: 765: if( isFinishedThreeHoursTimer() )
  1292  02B8  118A  258F  118A   	fcall	_isFinishedThreeHoursTimer
  1293  02BB  3A00               	xorlw	0
  1294  02BC  1D03               	btfss	3,2
  1295  02BD  2A97               	goto	l4340
  1296                           
  1297                           ;main.c: 767: else
  1298                           ;main.c: 768: {
  1299                           ;main.c: 769: if( getAdOriginalCh13Value() < 85 )
  1300  02BE  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1301  02C1  3000               	movlw	0
  1302  02C2  0243               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1303  02C3  3055               	movlw	85
  1304  02C4  1903               	skipnz
  1305  02C5  0242               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1306  02C6  1803               	skipnc
  1307  02C7  2ACA               	goto	l4366
  1308                           
  1309                           ;main.c: 770: ucTimerP5s++;
  1310  02C8  0ADD               	incf	main@cTimerP5s_791^(0+128),f
  1311  02C9  2ACB               	goto	l4368
  1312  02CA                     l4366:	
  1313                           
  1314                           ;main.c: 771: else
  1315                           ;main.c: 772: ucTimerP5s = 0;
  1316  02CA  01DD               	clrf	main@cTimerP5s_791^(0+128)
  1317  02CB                     l4368:	
  1318                           
  1319                           ;main.c: 774: if( ucTimerP5s > 5)
  1320  02CB  3006               	movlw	6
  1321  02CC  025D               	subwf	main@cTimerP5s_791^(0+128),w
  1322  02CD  1C03               	skipc
  1323  02CE  2A4D               	goto	l4304
  1324  02CF  3005               	movlw	5
  1325                           
  1326                           ;main.c: 775: {
  1327                           ;main.c: 776: ucTimerP5s = 0;
  1328  02D0  01DD               	clrf	main@cTimerP5s_791^(0+128)
  1329                           
  1330                           ;main.c: 777: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1331  02D1  2B9C               	goto	L8
  1332  02D2                     l4374:	
  1333                           
  1334                           ;main.c: 784: {
  1335                           ;main.c: 785: clearThreeHoursTimer();
  1336  02D2  118A  25DE  118A   	fcall	_clearThreeHoursTimer
  1337                           
  1338                           ;main.c: 786: startOneHoursTimer( 120 );
  1339  02D5  3078               	movlw	120
  1340  02D6  00A0               	movwf	?_startOneHoursTimer^(0+128)
  1341  02D7  01A1               	clrf	(?_startOneHoursTimer+1)^(0+128)
  1342  02D8  118A  2557  118A   	fcall	_startOneHoursTimer
  1343                           
  1344                           ;main.c: 787: setPB3(1);
  1345  02DB  3001               	movlw	1
  1346  02DC  118A  24D9  118A   	fcall	_setPB3
  1347                           
  1348                           ;main.c: 788: setPB4(0);
  1349  02DF  3000               	movlw	0
  1350  02E0  118A  24E4  118A   	fcall	_setPB4
  1351                           
  1352                           ;main.c: 789: setPB5(1);
  1353  02E3  3001               	movlw	1
  1354  02E4  118A  24EF  118A   	fcall	_setPB5
  1355                           
  1356                           ;main.c: 790: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1357  02E7  3006               	movlw	6
  1358  02E8  2B75               	goto	L9
  1359  02E9                     l4386:	
  1360                           ;main.c: 791: break;
  1361                           
  1362                           
  1363                           ;main.c: 795: {
  1364                           ;main.c: 800: static unsigned int uiTimerOneP5s = 0;
  1365                           ;main.c: 801: static unsigned int uiTimerTwoP5s = 0;
  1366                           ;main.c: 802: static unsigned int uiTimerThreeP5s = 0;
  1367                           ;main.c: 804: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1368  02E9  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1369  02EC  0843               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1370  02ED  00C8               	movwf	(main@uiCh13Value+1)^(0+128)
  1371  02EE  0842               	movf	?_getAdOriginalCh13Value^(0+128),w
  1372  02EF  00C7               	movwf	main@uiCh13Value^(0+128)
  1373                           
  1374                           ;main.c: 807: if( isFinishedOneHoursTimer() )
  1375  02F0  118A  25B0  118A   	fcall	_isFinishedOneHoursTimer
  1376  02F3  3A00               	xorlw	0
  1377  02F4  1D03               	btfss	3,2
  1378  02F5  2A97               	goto	l4340
  1379                           
  1380                           ;main.c: 809: else
  1381                           ;main.c: 810: {
  1382                           ;main.c: 811: if( uiCh13Value > 100 )
  1383  02F6  3000               	movlw	0
  1384  02F7  0248               	subwf	(main@uiCh13Value+1)^(0+128),w
  1385  02F8  3065               	movlw	101
  1386  02F9  1903               	skipnz
  1387  02FA  0247               	subwf	main@uiCh13Value^(0+128),w
  1388  02FB  1C03               	skipc
  1389  02FC  2B0C               	goto	l4402
  1390                           
  1391                           ;main.c: 812: {
  1392                           ;main.c: 813: if( uiTimerOneP5s <= 5 )
  1393  02FD  3000               	movlw	0
  1394  02FE  0254               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1395  02FF  3006               	movlw	6
  1396  0300  1903               	skipnz
  1397  0301  0253               	subwf	main@uiTimerOneP5s^(0+128),w
  1398  0302  1803               	skipnc
  1399  0303  2B07               	goto	l4398
  1400                           
  1401                           ;main.c: 814: uiTimerOneP5s++;
  1402  0304  0AD3               	incf	main@uiTimerOneP5s^(0+128),f
  1403  0305  1903               	skipnz
  1404  0306  0AD4               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1405  0307                     l4398:	
  1406                           
  1407                           ;main.c: 815: uiTimerTwoP5s = 0;
  1408  0307  01D7               	clrf	main@uiTimerTwoP5s^(0+128)
  1409  0308  01D8               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1410                           
  1411                           ;main.c: 816: uiTimerThreeP5s = 0;
  1412  0309  01D5               	clrf	main@uiTimerThreeP5s^(0+128)
  1413  030A  01D6               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1414                           
  1415                           ;main.c: 817: }
  1416  030B  2B0E               	goto	l4404
  1417  030C                     l4402:	
  1418                           
  1419                           ;main.c: 818: else
  1420                           ;main.c: 819: {
  1421                           ;main.c: 820: uiTimerOneP5s = 0;
  1422  030C  01D3               	clrf	main@uiTimerOneP5s^(0+128)
  1423  030D  01D4               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1424  030E                     l4404:	
  1425                           
  1426                           ;main.c: 821: }
  1427                           ;main.c: 824: if(uiTimerOneP5s > 5)
  1428  030E  3000               	movlw	0
  1429  030F  0254               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1430  0310  3006               	movlw	6
  1431  0311  1903               	skipnz
  1432  0312  0253               	subwf	main@uiTimerOneP5s^(0+128),w
  1433                           
  1434                           ;main.c: 825: {
  1435                           ;main.c: 826: setPB3(0);
  1436  0313  3000               	movlw	0
  1437  0314  1C03               	skipc
  1438  0315  2B27               	goto	L10
  1439  0316  118A  24D9  118A   	fcall	_setPB3
  1440                           
  1441                           ;main.c: 827: setPB4(1);
  1442  0319  3001               	movlw	1
  1443  031A  118A  24E4  118A   	fcall	_setPB4
  1444                           
  1445                           ;main.c: 828: setPB5(0);
  1446  031D  3000               	movlw	0
  1447  031E  118A  24EF  118A   	fcall	_setPB5
  1448                           
  1449                           ;main.c: 830: uiTimerOneP5s = 0;
  1450  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0322  01D3               	clrf	main@uiTimerOneP5s^(0+128)
  1452  0323  01D4               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1453                           
  1454                           ;main.c: 831: uiTimerTwoP5s = 0;
  1455  0324  01D7               	clrf	main@uiTimerTwoP5s^(0+128)
  1456  0325  01D8               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1457                           
  1458                           ;main.c: 832: }
  1459  0326  2A4D               	goto	l4304
  1460  0327                     L10:	
  1461                           ;main.c: 833: else
  1462                           ;main.c: 834: {
  1463                           ;main.c: 835: if( uiCh13Value < 90 )
  1464                           
  1465  0327  0248               	subwf	(main@uiCh13Value+1)^(0+128),w
  1466  0328  305A               	movlw	90
  1467  0329  1903               	skipnz
  1468  032A  0247               	subwf	main@uiCh13Value^(0+128),w
  1469  032B  1803               	skipnc
  1470  032C  2B38               	goto	l4418
  1471                           
  1472                           ;main.c: 836: {
  1473                           ;main.c: 837: if( uiTimerTwoP5s <= 5)
  1474  032D  3000               	movlw	0
  1475  032E  0258               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1476  032F  3006               	movlw	6
  1477  0330  1903               	skipnz
  1478  0331  0257               	subwf	main@uiTimerTwoP5s^(0+128),w
  1479  0332  1803               	skipnc
  1480  0333  2B3C               	goto	l4420
  1481                           
  1482                           ;main.c: 838: uiTimerTwoP5s++;
  1483  0334  0AD7               	incf	main@uiTimerTwoP5s^(0+128),f
  1484  0335  1903               	skipnz
  1485  0336  0AD8               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1486  0337  2B3C               	goto	l4420
  1487  0338                     l4418:	
  1488                           
  1489                           ;main.c: 840: else
  1490                           ;main.c: 841: {
  1491                           ;main.c: 842: uiTimerTwoP5s = 0;
  1492  0338  01D7               	clrf	main@uiTimerTwoP5s^(0+128)
  1493  0339  01D8               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1494                           
  1495                           ;main.c: 843: uiTimerThreeP5s = 0;
  1496  033A  01D5               	clrf	main@uiTimerThreeP5s^(0+128)
  1497  033B  01D6               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1498  033C                     l4420:	
  1499                           
  1500                           ;main.c: 844: }
  1501                           ;main.c: 846: if(uiTimerTwoP5s > 5)
  1502  033C  3000               	movlw	0
  1503  033D  0258               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1504  033E  3006               	movlw	6
  1505  033F  1903               	skipnz
  1506  0340  0257               	subwf	main@uiTimerTwoP5s^(0+128),w
  1507  0341  1C03               	skipc
  1508  0342  2A4D               	goto	l4304
  1509                           
  1510                           ;main.c: 847: {
  1511                           ;main.c: 848: setPB3(1);
  1512  0343  3001               	movlw	1
  1513  0344  118A  24D9  118A   	fcall	_setPB3
  1514                           
  1515                           ;main.c: 849: setPB4(0);
  1516  0347  3000               	movlw	0
  1517  0348  118A  24E4  118A   	fcall	_setPB4
  1518                           
  1519                           ;main.c: 850: setPB5(1);
  1520  034B  3001               	movlw	1
  1521  034C  118A  24EF  118A   	fcall	_setPB5
  1522                           
  1523                           ;main.c: 852: if(uiCh13Value < 25)
  1524  034F  3000               	movlw	0
  1525  0350  1683               	bsf	3,5	;RP0=1, select bank1
  1526  0351  0248               	subwf	(main@uiCh13Value+1)^(0+128),w
  1527  0352  3019               	movlw	25
  1528  0353  1903               	skipnz
  1529  0354  0247               	subwf	main@uiCh13Value^(0+128),w
  1530  0355  1803               	skipnc
  1531  0356  2B5B               	goto	l4428
  1532                           
  1533                           ;main.c: 853: uiTimerThreeP5s++;
  1534  0357  0AD5               	incf	main@uiTimerThreeP5s^(0+128),f
  1535  0358  1903               	skipnz
  1536  0359  0AD6               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1537  035A  2B5D               	goto	l4430
  1538  035B                     l4428:	
  1539                           
  1540                           ;main.c: 854: else
  1541                           ;main.c: 855: uiTimerThreeP5s = 0;
  1542  035B  01D5               	clrf	main@uiTimerThreeP5s^(0+128)
  1543  035C  01D6               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1544  035D                     l4430:	
  1545                           
  1546                           ;main.c: 857: if(uiTimerThreeP5s > 5)
  1547  035D  3000               	movlw	0
  1548  035E  0256               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1549  035F  3006               	movlw	6
  1550  0360  1903               	skipnz
  1551  0361  0255               	subwf	main@uiTimerThreeP5s^(0+128),w
  1552  0362  1C03               	skipc
  1553  0363  2A4D               	goto	l4304
  1554  0364                     l4432:	
  1555                           
  1556                           ;main.c: 858: reset();
  1557  0364  118A  25F1  118A   	fcall	_reset
  1558  0367  2A4D               	goto	l4304
  1559  0368                     l4434:	
  1560                           
  1561                           ;main.c: 867: {
  1562                           ;main.c: 868: setPB3(0);
  1563  0368  3000               	movlw	0
  1564  0369  118A  24D9  118A   	fcall	_setPB3
  1565                           
  1566                           ;main.c: 869: setPB4(0);
  1567  036C  3000               	movlw	0
  1568  036D  118A  24E4  118A   	fcall	_setPB4
  1569                           
  1570                           ;main.c: 870: setPB5(1);
  1571  0370  3001               	movlw	1
  1572  0371  118A  24EF  118A   	fcall	_setPB5
  1573                           
  1574                           ;main.c: 874: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1575  0374  3064               	movlw	100
  1576  0375                     L9:	
  1577  0375  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0376  2B9C               	goto	L8
  1579  0377                     l4438:	
  1580                           ;main.c: 875: break;
  1581                           
  1582                           
  1583                           ;main.c: 879: {
  1584                           ;main.c: 880: static unsigned ucDelay1s = 0;
  1585                           ;main.c: 881: if(ucDelay1s < 10)
  1586  0377  3000               	movlw	0
  1587  0378  0252               	subwf	(main@ucDelay1s+1)^(0+128),w
  1588  0379  300A               	movlw	10
  1589  037A  1903               	skipnz
  1590  037B  0251               	subwf	main@ucDelay1s^(0+128),w
  1591  037C  1803               	skipnc
  1592  037D  2B82               	goto	l4442
  1593                           
  1594                           ;main.c: 882: ucDelay1s++;
  1595  037E  0AD1               	incf	main@ucDelay1s^(0+128),f
  1596  037F  1903               	skipnz
  1597  0380  0AD2               	incf	(main@ucDelay1s+1)^(0+128),f
  1598  0381  2A4D               	goto	l4304
  1599  0382                     l4442:	
  1600  0382  3065               	movlw	101
  1601                           
  1602                           ;main.c: 883: else
  1603                           ;main.c: 884: {
  1604                           ;main.c: 885: ucDelay1s = 0;
  1605  0383  01D1               	clrf	main@ucDelay1s^(0+128)
  1606  0384  01D2               	clrf	(main@ucDelay1s+1)^(0+128)
  1607                           
  1608                           ;main.c: 886: ucStep = MEET_RESET_CONDITION_STEP;
  1609  0385  2B9C               	goto	L8
  1610  0386                     l4446:	
  1611                           
  1612                           ;main.c: 896: {
  1613                           ;main.c: 897: static unsigned char ucTimerP5s = 0;
  1614                           ;main.c: 898: unsigned int ucChValue = getAdOriginalCh13Value();
  1615  0386  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1616  0389  0843               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1617  038A  00C6               	movwf	(main@ucChValue+1)^(0+128)
  1618  038B  0842               	movf	?_getAdOriginalCh13Value^(0+128),w
  1619  038C  00C5               	movwf	main@ucChValue^(0+128)
  1620                           
  1621                           ;main.c: 900: if( ucChValue > 50 )
  1622  038D  3000               	movlw	0
  1623  038E  0246               	subwf	(main@ucChValue+1)^(0+128),w
  1624  038F  3033               	movlw	51
  1625  0390  1903               	skipnz
  1626  0391  0245               	subwf	main@ucChValue^(0+128),w
  1627  0392  1C03               	skipc
  1628  0393  2B96               	goto	l4452
  1629                           
  1630                           ;main.c: 901: ucTimerP5s++;
  1631  0394  0ADE               	incf	main@cTimerP5s_797^(0+128),f
  1632  0395  2B97               	goto	l4454
  1633  0396                     l4452:	
  1634                           
  1635                           ;main.c: 902: else
  1636                           ;main.c: 903: ucTimerP5s = 0;
  1637  0396  01DE               	clrf	main@cTimerP5s_797^(0+128)
  1638  0397                     l4454:	
  1639                           
  1640                           ;main.c: 905: if(ucTimerP5s > 5)
  1641  0397  3006               	movlw	6
  1642  0398  025E               	subwf	main@cTimerP5s_797^(0+128),w
  1643  0399  1C03               	skipc
  1644  039A  2A4D               	goto	l4304
  1645                           
  1646                           ;main.c: 906: ucStep = RESET_STEP;
  1647  039B  3066               	movlw	102
  1648  039C                     L8:	
  1649  039C  00DF               	movwf	main@ucStep^(0+128)
  1650  039D  2A4D               	goto	l4304
  1651  039E                     l4458:	
  1652                           
  1653                           ;main.c: 911: {
  1654                           ;main.c: 912: ucStep = INIT_STEP;
  1655  039E  01DF               	clrf	main@ucStep^(0+128)
  1656  039F  2B64               	goto	l4432
  1657  03A0                     l4464:	
  1658  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1659  03A1  085F               	movf	main@ucStep^(0+128),w
  1660                           
  1661                           ; Switch size 1, requested type "space"
  1662                           ; Number of cases is 11, Range of values is 0 to 102
  1663                           ; switch strategies available:
  1664                           ; Name         Instructions Cycles
  1665                           ; simple_byte           34    18 (average)
  1666                           ; direct_byte          213     7 (fixed)
  1667                           ; jumptable            260     6 (fixed)
  1668                           ; rangetable           107     6 (fixed)
  1669                           ; spacedrange          212     9 (fixed)
  1670                           ; locatedrange         103     3 (fixed)
  1671                           ;	Chosen strategy is simple_byte
  1672  03A2  3A00               	xorlw	0	; case 0
  1673  03A3  1903               	skipnz
  1674  03A4  2A5B               	goto	l4312
  1675  03A5  3A01               	xorlw	1	; case 1
  1676  03A6  1903               	skipnz
  1677  03A7  2A7A               	goto	l4330
  1678  03A8  3A03               	xorlw	3	; case 2
  1679  03A9  1903               	skipnz
  1680  03AA  2A91               	goto	l4338
  1681  03AB  3A01               	xorlw	1	; case 3
  1682  03AC  1903               	skipnz
  1683  03AD  2AAD               	goto	l4354
  1684  03AE  3A07               	xorlw	7	; case 4
  1685  03AF  1903               	skipnz
  1686  03B0  2AB8               	goto	l4358
  1687  03B1  3A01               	xorlw	1	; case 5
  1688  03B2  1903               	skipnz
  1689  03B3  2AD2               	goto	l4374
  1690  03B4  3A03               	xorlw	3	; case 6
  1691  03B5  1903               	skipnz
  1692  03B6  2AE9               	goto	l4386
  1693  03B7  3A65               	xorlw	101	; case 99
  1694  03B8  1903               	skipnz
  1695  03B9  2B68               	goto	l4434
  1696  03BA  3A07               	xorlw	7	; case 100
  1697  03BB  1903               	skipnz
  1698  03BC  2B77               	goto	l4438
  1699  03BD  3A01               	xorlw	1	; case 101
  1700  03BE  1903               	skipnz
  1701  03BF  2B86               	goto	l4446
  1702  03C0  3A03               	xorlw	3	; case 102
  1703  03C1  1903               	skipnz
  1704  03C2  2B9E               	goto	l4458
  1705  03C3  2A79               	goto	l758
  1706  03C4  118A  2811         	ljmp	start
  1707  03C6                     __end_of_main:	
  1708                           
  1709                           	psect	text1231
  1710  03C6                     __ptext1231:	
  1711 ;; =============== function _main ends ============
  1712                           
  1713                           
  1714 ;; *************** function _getAdOriginalCh13Value *****************
  1715 ;; Defined at:
  1716 ;;		line 324 in file "D:\develop\190625\AK7030-OTP\common.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2   34[BANK1 ] unsigned int 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 40/20
  1727 ;;		On exit  : 160/20
  1728 ;;		Unchanged: FFE00/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       2       0       0
  1731 ;;      Locals:         0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0
  1733 ;;      Totals:         0       0       2       0       0
  1734 ;;Total ram usage:        2 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    4
  1737 ;; This function calls:
  1738 ;;		_Filter
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743  03C6                     _getAdOriginalCh13Value:	
  1744                           
  1745                           ;common.c: 326: return Filter(uiSampleChannelFourth);
  1746                           
  1747                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1748  03C6  305A               	movlw	_uiSampleChannelFourth& (0+255)
  1749  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1750  03C8  00A0               	movwf	?_Filter^(0+128)
  1751  03C9  01A1               	clrf	(?_Filter+1)^(0+128)
  1752  03CA  23D0               	fcall	_Filter
  1753  03CB  0821               	movf	(?_Filter+1)^(0+128),w
  1754  03CC  00C3               	movwf	(?_getAdOriginalCh13Value+1)^(0+128)
  1755  03CD  0820               	movf	?_Filter^(0+128),w
  1756  03CE  00C2               	movwf	?_getAdOriginalCh13Value^(0+128)
  1757  03CF  0008               	return
  1758  03D0                     __end_of_getAdOriginalCh13Value:	
  1759  03D0                     __ptext1238:	
  1760 ;; =============== function _getAD_ConvertFlag ends ============
  1761                           
  1762                           
  1763 ;; *************** function _Filter *****************
  1764 ;; Defined at:
  1765 ;;		line 64 in file "D:\develop\190625\AK7030-OTP\common.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  tmpValue        2    0[BANK1 ] PTR int 
  1768 ;;		 -> uiSampleChannelFourteenth(20), uiSampleChannelFourth(20), uiSampleChannelFirst(20), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  cir             2   30[BANK1 ] int 
  1771 ;;  filter_buf     20    6[BANK1 ] unsigned int [10]
  1772 ;;  filter_sum      2   28[BANK1 ] unsigned int 
  1773 ;;  filter_temp     2   26[BANK1 ] unsigned int 
  1774 ;;  i               1   33[BANK1 ] unsigned char 
  1775 ;;  j               1   32[BANK1 ] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2    0[BANK1 ] unsigned int 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1780 ;; Tracked objects:
  1781 ;;		On entry : 60/20
  1782 ;;		On exit  : 160/20
  1783 ;;		Unchanged: FFE00/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       0       2       0       0
  1786 ;;      Locals:         0       0      28       0       0
  1787 ;;      Temps:          0       0       4       0       0
  1788 ;;      Totals:         0       0      34       0       0
  1789 ;;Total ram usage:       34 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    3
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_getAdOriginalCh13Value
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798  03D0                     _Filter:	
  1799                           
  1800                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  1801  03D0  01C0               	clrf	Filter@j^(0+128)
  1802                           
  1803                           ;common.c: 68: unsigned int filter_temp = 0, filter_sum = 0;
  1804  03D1  01BA               	clrf	Filter@filter_temp^(0+128)
  1805  03D2  01BB               	clrf	(Filter@filter_temp+1)^(0+128)
  1806  03D3  01BC               	clrf	Filter@filter_sum^(0+128)
  1807  03D4  01BD               	clrf	(Filter@filter_sum+1)^(0+128)
  1808                           
  1809                           ;common.c: 70: unsigned int filter_buf[10];
  1810                           ;common.c: 72: for(int cir = 0;cir < 10; cir++)
  1811  03D5  01BE               	clrf	Filter@cir^(0+128)
  1812  03D6  01BF               	clrf	(Filter@cir+1)^(0+128)
  1813  03D7                     l3628:	
  1814                           
  1815                           ;common.c: 73: filter_buf[cir] = *tmpValue++;
  1816  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  1817  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  1818  03D9  0820               	movf	Filter@tmpValue^(0+128),w
  1819  03DA  0084               	movwf	4
  1820  03DB  1783               	bsf	3,7
  1821  03DC  1C21               	btfss	(Filter@tmpValue+1)^(0+128),0
  1822  03DD  1383               	bcf	3,7
  1823  03DE  0800               	movf	0,w
  1824  03DF  2477  118A         	fcall	PL10	;call to abstracted procedure
  1825  03E1  0D3E               	rlf	Filter@cir^(0+128),w
  1826  03E2  3EA6               	addlw	Filter@filter_buf& (0+255)
  1827  03E3  0084               	movwf	4
  1828  03E4  0822               	movf	??_Filter^(0+128),w
  1829  03E5  1383               	bcf	3,7	;select IRP bank1
  1830  03E6  0080               	movwf	0
  1831  03E7  0A84               	incf	4,f
  1832  03E8  0823               	movf	(??_Filter+1)^(0+128),w
  1833  03E9  0080               	movwf	0
  1834  03EA  3002               	movlw	2
  1835  03EB  07A0               	addwf	Filter@tmpValue^(0+128),f
  1836  03EC  1803               	skipnc
  1837  03ED  0AA1               	incf	(Filter@tmpValue+1)^(0+128),f
  1838  03EE  0ABE               	incf	Filter@cir^(0+128),f
  1839  03EF  1903               	skipnz
  1840  03F0  0ABF               	incf	(Filter@cir+1)^(0+128),f
  1841  03F1  083F               	movf	(Filter@cir+1)^(0+128),w
  1842  03F2  3A80               	xorlw	128
  1843  03F3  00FF               	movwf	127
  1844  03F4  3080               	movlw	128
  1845  03F5  027F               	subwf	127,w
  1846  03F6  1D03               	skipz
  1847  03F7  2BFA               	goto	u1185
  1848  03F8  300A               	movlw	10
  1849  03F9  023E               	subwf	Filter@cir^(0+128),w
  1850  03FA                     u1185:	
  1851  03FA  1C03               	skipc
  1852  03FB  2BD7               	goto	l3628
  1853                           
  1854                           ;common.c: 77: for(j = 0; j < 10 - 1; j++)
  1855  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1856  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  1857  03FE  01C0               	clrf	Filter@j^(0+128)
  1858                           
  1859                           ;common.c: 78: {
  1860                           ;common.c: 79: for(i = 0; i < 10 - 1 - j; i++)
  1861  03FF  01C1               	clrf	Filter@i^(0+128)
  1862  0400                     l3650:	
  1863  0400  01A3               	clrf	(??_Filter^(0+128)+1)
  1864  0401  0840               	movf	Filter@j^(0+128),w
  1865  0402  3C09               	sublw	9
  1866  0403  00A2               	movwf	??_Filter^(0+128)
  1867  0404  1C03               	skipc
  1868  0405  03A3               	decf	(??_Filter^(0+128)+1),f
  1869  0406  0823               	movf	(??_Filter+1)^(0+128),w
  1870  0407  3A80               	xorlw	128
  1871  0408  3C80               	sublw	128
  1872  0409  1D03               	skipz
  1873  040A  2C0D               	goto	u1205
  1874  040B  0822               	movf	??_Filter^(0+128),w
  1875  040C  0241               	subwf	Filter@i^(0+128),w
  1876  040D                     u1205:	
  1877  040D  1803               	btfsc	3,0
  1878  040E  2C42               	goto	l3652
  1879                           
  1880                           ;common.c: 80: {
  1881                           ;common.c: 81: if(filter_buf[i] > filter_buf[i + 1])
  1882  040F  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0410  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0411  1003               	clrc
  1885  0412  2467  118A         	fcall	PL5	;call to abstracted procedure
  1886  0414  2471  118A         	fcall	PL8	;call to abstracted procedure
  1887  0416  0800               	movf	0,w
  1888  0417  00A4               	movwf	(??_Filter+2)^(0+128)
  1889  0418  0A84               	incf	4,f
  1890  0419  0800               	movf	0,w
  1891  041A  00A5               	movwf	((??_Filter+2)^(0+128)+1)
  1892  041B  0823               	movf	(??_Filter+1)^(0+128),w
  1893  041C  0225               	subwf	(??_Filter+3)^(0+128),w
  1894  041D  1D03               	skipz
  1895  041E  2C21               	goto	u1195
  1896  041F  0822               	movf	??_Filter^(0+128),w
  1897  0420  0224               	subwf	(??_Filter+2)^(0+128),w
  1898  0421                     u1195:	
  1899  0421  1803               	skipnc
  1900  0422  2C40               	goto	l3648
  1901                           
  1902                           ;common.c: 82: {
  1903                           ;common.c: 84: filter_temp = filter_buf[i];
  1904  0423  1003               	clrc
  1905  0424  0D41               	rlf	Filter@i^(0+128),w
  1906  0425  3EA6               	addlw	Filter@filter_buf& (0+255)
  1907  0426  0084               	movwf	4
  1908  0427  0800               	movf	0,w
  1909  0428  00BA               	movwf	Filter@filter_temp^(0+128)
  1910  0429  0A84               	incf	4,f
  1911  042A  0800               	movf	0,w
  1912  042B  00BB               	movwf	(Filter@filter_temp+1)^(0+128)
  1913                           
  1914                           ;common.c: 86: filter_buf[i] = filter_buf[i + 1];
  1915  042C  2471  118A         	fcall	PL8	;call to abstracted procedure
  1916  042E  0800               	movf	0,w
  1917  042F  2477  118A         	fcall	PL10	;call to abstracted procedure
  1918  0431  0D41               	rlf	Filter@i^(0+128),w
  1919  0432  3EA6               	addlw	Filter@filter_buf& (0+255)
  1920  0433  0084               	movwf	4
  1921  0434  0822               	movf	??_Filter^(0+128),w
  1922  0435  0080               	movwf	0
  1923  0436  0A84               	incf	4,f
  1924  0437  0823               	movf	(??_Filter+1)^(0+128),w
  1925  0438  0080               	movwf	0
  1926                           
  1927                           ;common.c: 88: filter_buf[i + 1] = filter_temp;
  1928  0439  2471  118A         	fcall	PL8	;call to abstracted procedure
  1929  043B  083A               	movf	Filter@filter_temp^(0+128),w
  1930  043C  0080               	movwf	0
  1931  043D  0A84               	incf	4,f
  1932  043E  083B               	movf	(Filter@filter_temp+1)^(0+128),w
  1933  043F  0080               	movwf	0
  1934  0440                     l3648:	
  1935  0440  0AC1               	incf	Filter@i^(0+128),f
  1936  0441  2C00               	goto	l3650
  1937  0442                     l3652:	
  1938  0442  1683               	bsf	3,5	;RP0=1, select bank1
  1939  0443  3009               	movlw	9
  1940  0444  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0445  0AC0               	incf	Filter@j^(0+128),f
  1942  0446  0240               	subwf	Filter@j^(0+128),w
  1943                           
  1944                           ;common.c: 89: }
  1945                           ;common.c: 90: }
  1946                           ;common.c: 91: }
  1947                           ;common.c: 93: for(i = 1; i < 10 - 1; i++)
  1948  0447  01C1               	clrf	Filter@i^(0+128)
  1949  0448  1C03               	skipc
  1950  0449  2C00               	goto	l3650
  1951  044A  0AC1               	incf	Filter@i^(0+128),f
  1952                           
  1953                           ;common.c: 94: {
  1954                           ;common.c: 95: filter_sum += filter_buf[i];
  1955  044B  1003               	clrc
  1956  044C                     L13:	
  1957  044C  2467  118A         	fcall	PL5	;call to abstracted procedure
  1958  044E  0822               	movf	??_Filter^(0+128),w
  1959  044F  07BC               	addwf	Filter@filter_sum^(0+128),f
  1960  0450  1803               	skipnc
  1961  0451  0ABD               	incf	(Filter@filter_sum+1)^(0+128),f
  1962  0452  0823               	movf	(??_Filter+1)^(0+128),w
  1963  0453  07BD               	addwf	(Filter@filter_sum+1)^(0+128),f
  1964  0454  3009               	movlw	9
  1965  0455  0AC1               	incf	Filter@i^(0+128),f
  1966  0456  0241               	subwf	Filter@i^(0+128),w
  1967  0457  1C03               	skipc
  1968  0458  2C4C               	goto	L13
  1969                           
  1970                           ;common.c: 96: }
  1971                           ;common.c: 98: return (filter_sum >> 3);
  1972  0459  083D               	movf	(Filter@filter_sum+1)^(0+128),w
  1973  045A  00A1               	movwf	(?_Filter+1)^(0+128)
  1974  045B  083C               	movf	Filter@filter_sum^(0+128),w
  1975  045C  00A0               	movwf	?_Filter^(0+128)
  1976  045D  1003               	clrc
  1977  045E  0CA1               	rrf	(?_Filter+1)^(0+128),f
  1978  045F  0CA0               	rrf	?_Filter^(0+128),f
  1979  0460  1003               	clrc
  1980  0461  0CA1               	rrf	(?_Filter+1)^(0+128),f
  1981  0462  0CA0               	rrf	?_Filter^(0+128),f
  1982  0463  1003               	clrc
  1983  0464  0CA1               	rrf	(?_Filter+1)^(0+128),f
  1984  0465  0CA0               	rrf	?_Filter^(0+128),f
  1985  0466  0008               	return
  1986  0467                     __end_of_Filter:	
  1987  0467                     PL5:	
  1988  0467  0D41               	rlf	Filter@i^(0+128),w
  1989  0468  3EA6               	addlw	Filter@filter_buf& (0+255)
  1990  0469  0084               	movwf	4
  1991  046A  1383               	bcf	3,7	;select IRP bank1
  1992  046B  0800               	movf	0,w
  1993  046C  00A2               	movwf	??_Filter^(0+128)
  1994  046D  0A84               	incf	4,f
  1995  046E  0800               	movf	0,w
  1996  046F  00A3               	movwf	(??_Filter^(0+128)+1)
  1997  0470  0008               	return
  1998  0471                     PL8:	
  1999  0471  1003               	clrc
  2000  0472  0D41               	rlf	Filter@i^(0+128),w
  2001  0473  3E02               	addlw	2
  2002  0474  3EA6               	addlw	Filter@filter_buf& (0+255)
  2003  0475  0084               	movwf	4
  2004  0476  0008               	return
  2005  0477                     PL10:	
  2006  0477  00A2               	movwf	??_Filter^(0+128)
  2007  0478  0A84               	incf	4,f
  2008  0479  0800               	movf	0,w
  2009  047A  00A3               	movwf	(??_Filter^(0+128)+1)
  2010  047B  1003               	clrc
  2011  047C  0008               	return
  2012                           
  2013                           	psect	text1232
  2014  047D                     __ptext1232:	
  2015 ;; =============== function _getAdOriginalCh13Value ends ============
  2016                           
  2017                           
  2018 ;; *************** function _process_AD_Converter_Value *****************
  2019 ;; Defined at:
  2020 ;;		line 346 in file "D:\develop\190625\AK7030-OTP\common.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;		None               void
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 60/0
  2032 ;;		Unchanged: FFF9F/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    4
  2041 ;; This function calls:
  2042 ;;		_getAD_ConvertFlag
  2043 ;;		_setAD_ConvertFlag
  2044 ;;		_AD_Sample
  2045 ;;		_adc_test_init
  2046 ;;		_adc_start
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051  047D                     _process_AD_Converter_Value:	
  2052                           
  2053                           ;common.c: 347: if(getAD_ConvertFlag())
  2054                           
  2055                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2056  047D  2494  118A         	fcall	_getAD_ConvertFlag
  2057  047F  3A00               	xorlw	0
  2058  0480  1903               	skipnz
  2059  0481  0008               	return
  2060                           
  2061                           ;common.c: 348: {
  2062                           ;common.c: 349: setAD_ConvertFlag(0);
  2063  0482  3000               	movlw	0
  2064  0483  2498  118A         	fcall	_setAD_ConvertFlag
  2065                           
  2066                           ;common.c: 350: AD_Sample();
  2067  0485  249D  118A         	fcall	_AD_Sample
  2068                           
  2069                           ;common.c: 351: if(12 == sampleChannelSelect)
  2070  0487  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0488  0862               	movf	_sampleChannelSelect^(0+128),w
  2072  0489  3A0C               	xorlw	12
  2073                           
  2074                           ;common.c: 352: adc_test_init(12,3);
  2075  048A  3003               	movlw	3
  2076  048B  00A0               	movwf	?_adc_test_init^(0+128)
  2077  048C  1D03               	skipz
  2078  048D  2C90               	goto	L12
  2079  048E  300C               	movlw	12
  2080  048F  2C91               	goto	L11
  2081  0490                     L12:	
  2082                           ;common.c: 353: else
  2083                           ;common.c: 354: adc_test_init(13,3);
  2084                           
  2085  0490  300D               	movlw	13
  2086  0491                     L11:	
  2087  0491  24B2  118A         	fcall	_adc_test_init
  2088                           
  2089                           ;common.c: 355: adc_start();
  2090  0493  2CCD               	ljmp	l4140
  2091  0494                     __end_of_process_AD_Converter_Value:	
  2092  0494                     __ptext1237:	
  2093 ;; =============== function _setAD_ConvertFlag ends ============
  2094                           
  2095                           
  2096 ;; *************** function _getAD_ConvertFlag *****************
  2097 ;; Defined at:
  2098 ;;		line 295 in file "D:\develop\190625\AK7030-OTP\common.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      unsigned char 
  2105 ;; Registers used:
  2106 ;;		wreg
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 60/0
  2110 ;;		Unchanged: FFF9F/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    3
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_process_AD_Converter_Value
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125  0494                     _getAD_ConvertFlag:	
  2126                           
  2127                           ;common.c: 296: return adc_convert_flag;
  2128                           
  2129                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2130  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0496  0855               	movf	_adc_convert_flag,w
  2133  0497  0008               	return
  2134  0498                     __end_of_getAD_ConvertFlag:	
  2135  0498                     __ptext1236:	
  2136 ;; =============== function _AD_Sample ends ============
  2137                           
  2138                           
  2139 ;; *************** function _setAD_ConvertFlag *****************
  2140 ;; Defined at:
  2141 ;;		line 301 in file "D:\develop\190625\AK7030-OTP\common.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  flag            1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  flag            1    0[BANK1 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;		None               void
  2148 ;; Registers used:
  2149 ;;		wreg
  2150 ;; Tracked objects:
  2151 ;;		On entry : 60/0
  2152 ;;		On exit  : 60/0
  2153 ;;		Unchanged: FFF9F/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       0       0       0       0
  2156 ;;      Locals:         0       0       1       0       0
  2157 ;;      Temps:          0       0       0       0       0
  2158 ;;      Totals:         0       0       1       0       0
  2159 ;;Total ram usage:        1 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    3
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_process_AD_Converter_Value
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168  0498                     _setAD_ConvertFlag:	
  2169                           
  2170                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2171                           ;setAD_ConvertFlag@flag stored from wreg
  2172  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0499  00A0               	movwf	setAD_ConvertFlag@flag^(0+128)
  2174                           
  2175                           ;common.c: 302: adc_convert_flag = flag;
  2176  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2177  049B  00D5               	movwf	_adc_convert_flag
  2178  049C  0008               	return
  2179  049D                     __end_of_setAD_ConvertFlag:	
  2180  049D                     __ptext1235:	
  2181 ;; =============== function _initPin ends ============
  2182                           
  2183                           
  2184 ;; *************** function _AD_Sample *****************
  2185 ;; Defined at:
  2186 ;;		line 369 in file "D:\develop\190625\AK7030-OTP\common.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;		None               void
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 60/0
  2197 ;;		On exit  : 40/0
  2198 ;;		Unchanged: FFF9F/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    3
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_process_AD_Converter_Value
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213  049D                     _AD_Sample:	
  2214                           
  2215                           ;common.c: 370: if(sampleTimes < 10)
  2216                           
  2217                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2218  049D  300A               	movlw	10
  2219  049E  0256               	subwf	_sampleTimes,w
  2220  049F  1803               	skipnc
  2221  04A0  0008               	return
  2222  04A1  300A               	movlw	10
  2223                           
  2224                           ;common.c: 371: {
  2225                           ;common.c: 372: sampleTimes++;
  2226  04A2  0AD6               	incf	_sampleTimes,f
  2227                           
  2228                           ;common.c: 374: if(sampleTimes >= 10)
  2229  04A3  0256               	subwf	_sampleTimes,w
  2230  04A4  1C03               	skipc
  2231  04A5  0008               	return
  2232                           
  2233                           ;common.c: 375: {
  2234                           ;common.c: 376: sampleTimes = 0;
  2235  04A6  01D6               	clrf	_sampleTimes
  2236                           
  2237                           ;common.c: 378: if(sampleChannelSelect == 12)
  2238  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2239  04A8  0862               	movf	_sampleChannelSelect^(0+128),w
  2240  04A9  3A0C               	xorlw	12
  2241  04AA  1D03               	skipz
  2242  04AB  2CAF               	goto	l4264
  2243                           
  2244                           ;common.c: 379: {
  2245                           ;common.c: 380: sampleChannelSelect = 13;
  2246  04AC  300D               	movlw	13
  2247  04AD  00E2               	movwf	_sampleChannelSelect^(0+128)
  2248                           
  2249                           ;common.c: 381: }
  2250  04AE  0008               	return
  2251  04AF                     l4264:	
  2252                           
  2253                           ;common.c: 383: else
  2254                           ;common.c: 384: {
  2255                           ;common.c: 385: sampleChannelSelect = 12;
  2256  04AF  300C               	movlw	12
  2257  04B0  00E2               	movwf	_sampleChannelSelect^(0+128)
  2258  04B1  0008               	return
  2259  04B2                     __end_of_AD_Sample:	
  2260  04B2                     __ptext1251:	
  2261 ;; =============== function _startTwentyMinTimer ends ============
  2262                           
  2263                           
  2264 ;; *************** function _adc_test_init *****************
  2265 ;; Defined at:
  2266 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  channel         1    wreg     unsigned char 
  2269 ;;  ref             1    0[BANK1 ] unsigned char 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  channel         1    2[BANK1 ] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 60/20
  2278 ;;		On exit  : 60/20
  2279 ;;		Unchanged: FFF9F/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       0       1       0       0
  2282 ;;      Locals:         0       0       1       0       0
  2283 ;;      Temps:          0       0       1       0       0
  2284 ;;      Totals:         0       0       3       0       0
  2285 ;;Total ram usage:        3 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    3
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;;		_process_AD_Converter_Value
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295  04B2                     _adc_test_init:	
  2296                           
  2297                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2298                           ;adc_test_init@channel stored from wreg
  2299  04B2  00A2               	movwf	adc_test_init@channel^(0+128)
  2300                           
  2301                           ;periph.c: 86: ADCON0 = 0x00;
  2302  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2303  04B4  019F               	clrf	31	;volatile
  2304                           
  2305                           ;periph.c: 87: ADCON0|=channel<<2;
  2306  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  2307  04B6  0822               	movf	adc_test_init@channel^(0+128),w
  2308  04B7  00A1               	movwf	??_adc_test_init^(0+128)
  2309  04B8  1003               	clrc
  2310  04B9  0DA1               	rlf	??_adc_test_init^(0+128),f
  2311  04BA  1003               	clrc
  2312  04BB  0D21               	rlf	??_adc_test_init^(0+128),w
  2313  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2314  04BD  049F               	iorwf	31,f	;volatile
  2315                           
  2316                           ;periph.c: 88: ADCON1 = 0x35;
  2317  04BE  3035               	movlw	53
  2318  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  2319  04C0  009F               	movwf	31	;volatile
  2320                           
  2321                           ;periph.c: 89: ADCON1|=ref<<6;
  2322  04C1  0820               	movf	adc_test_init@ref^(0+128),w
  2323  04C2  00A1               	movwf	??_adc_test_init^(0+128)
  2324  04C3  0CA1               	rrf	??_adc_test_init^(0+128),f
  2325  04C4  0CA1               	rrf	??_adc_test_init^(0+128),f
  2326  04C5  0C21               	rrf	??_adc_test_init^(0+128),w
  2327  04C6  39C0               	andlw	192
  2328  04C7  049F               	iorwf	31,f	;volatile
  2329                           
  2330                           ;periph.c: 90: ADON=1;
  2331  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2332  04C9  141F               	bsf	31,0
  2333                           
  2334                           ;periph.c: 91: ADIE=1;
  2335  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2336  04CB  150D               	bsf	13,2
  2337  04CC  0008               	return
  2338  04CD                     __end_of_adc_test_init:	
  2339  04CD                     __ptext1249:	
  2340 ;; =============== function _isPermitSampleTime ends ============
  2341                           
  2342                           
  2343 ;; *************** function _adc_start *****************
  2344 ;; Defined at:
  2345 ;;		line 101 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;		None               void
  2352 ;; Registers used:
  2353 ;;		None
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 60/0
  2357 ;;		Unchanged: FFF9F/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0
  2362 ;;      Totals:         0       0       0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    3
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;;		_process_AD_Converter_Value
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373  04CD                     _adc_start:	
  2374  04CD                     l4140:	
  2375                           ; Regs used in _adc_start: []
  2376                           
  2377                           
  2378                           ;periph.c: 102: GO=1;
  2379  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2380  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2381  04CF  149F               	bsf	31,1
  2382  04D0  0008               	return
  2383  04D1                     __end_of_adc_start:	
  2384                           
  2385                           	psect	text1233
  2386  04D1                     __ptext1233:	
  2387 ;; =============== function _process_AD_Converter_Value ends ============
  2388                           
  2389                           
  2390 ;; *************** function _setPinInitVaule *****************
  2391 ;; Defined at:
  2392 ;;		line 287 in file "D:\develop\190625\AK7030-OTP\main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;		None               void
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 17F/20
  2403 ;;		On exit  : 17F/0
  2404 ;;		Unchanged: FFE80/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0
  2409 ;;      Totals:         0       0       0       0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    4
  2413 ;; This function calls:
  2414 ;;		_setPB3
  2415 ;;		_setPB4
  2416 ;;		_setPB5
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421  04D1                     _setPinInitVaule:	
  2422                           
  2423                           ;main.c: 289: setPB3(1);
  2424                           
  2425                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2426  04D1  3001               	movlw	1
  2427  04D2  24D9  118A         	fcall	_setPB3
  2428                           
  2429                           ;main.c: 290: setPB4(0);
  2430  04D4  3000               	movlw	0
  2431  04D5  24E4  118A         	fcall	_setPB4
  2432                           
  2433                           ;main.c: 291: setPB5(1);
  2434  04D7  3001               	movlw	1
  2435  04D8  2CEF               	ljmp	_setPB5
  2436  04D9                     __end_of_setPinInitVaule:	
  2437  04D9                     __ptext1263:	
  2438 ;; =============== function _initPB4 ends ============
  2439                           
  2440                           
  2441 ;; *************** function _setPB3 *****************
  2442 ;; Defined at:
  2443 ;;		line 148 in file "D:\develop\190625\AK7030-OTP\main.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  bValue          1    wreg     unsigned char 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  bValue          1    0[BANK1 ] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;		None               void
  2450 ;; Registers used:
  2451 ;;		wreg
  2452 ;; Tracked objects:
  2453 ;;		On entry : 40/20
  2454 ;;		On exit  : 60/0
  2455 ;;		Unchanged: FFF9F/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         0       0       0       0       0
  2458 ;;      Locals:         0       0       1       0       0
  2459 ;;      Temps:          0       0       0       0       0
  2460 ;;      Totals:         0       0       1       0       0
  2461 ;;Total ram usage:        1 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    3
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_setPinInitVaule
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471  04D9                     _setPB3:	
  2472                           
  2473                           ; Regs used in _setPB3: [wreg]
  2474                           ;setPB3@bValue stored from wreg
  2475  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2476  04DA  00A0               	movwf	setPB3@bValue^(0+128)
  2477                           
  2478                           ;main.c: 149: if( bValue )
  2479  04DB  0820               	movf	setPB3@bValue^(0+128),w
  2480  04DC  1903               	btfsc	3,2
  2481  04DD  2CE1               	goto	l687
  2482                           
  2483                           ;main.c: 151: PB3 = 1;
  2484  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2485  04DF  1586               	bsf	6,3
  2486  04E0  0008               	return
  2487  04E1                     l687:	
  2488                           
  2489                           ;main.c: 155: else
  2490                           ;main.c: 157: PB3= 0;
  2491  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2492  04E2  1186               	bcf	6,3
  2493  04E3  0008               	return
  2494  04E4                     __end_of_setPB3:	
  2495  04E4                     __ptext1261:	
  2496 ;; =============== function _initPB5 ends ============
  2497                           
  2498                           
  2499 ;; *************** function _setPB4 *****************
  2500 ;; Defined at:
  2501 ;;		line 183 in file "D:\develop\190625\AK7030-OTP\main.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  bValue          1    wreg     unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  bValue          1    0[BANK1 ] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg
  2510 ;; Tracked objects:
  2511 ;;		On entry : 60/0
  2512 ;;		On exit  : 60/0
  2513 ;;		Unchanged: FFF9F/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         0       0       1       0       0
  2517 ;;      Temps:          0       0       0       0       0
  2518 ;;      Totals:         0       0       1       0       0
  2519 ;;Total ram usage:        1 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    3
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_setPinInitVaule
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529  04E4                     _setPB4:	
  2530                           
  2531                           ; Regs used in _setPB4: [wreg]
  2532                           ;setPB4@bValue stored from wreg
  2533  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  2534  04E5  00A0               	movwf	setPB4@bValue^(0+128)
  2535                           
  2536                           ;main.c: 184: if( bValue )
  2537  04E6  0820               	movf	setPB4@bValue^(0+128),w
  2538  04E7  1903               	btfsc	3,2
  2539  04E8  2CEC               	goto	l697
  2540                           
  2541                           ;main.c: 186: PB4 = 1;
  2542  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2543  04EA  1606               	bsf	6,4
  2544  04EB  0008               	return
  2545  04EC                     l697:	
  2546                           
  2547                           ;main.c: 190: else
  2548                           ;main.c: 192: PB4= 0;
  2549  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2550  04ED  1206               	bcf	6,4
  2551  04EE  0008               	return
  2552  04EF                     __end_of_setPB4:	
  2553  04EF                     __ptext1259:	
  2554 ;; =============== function _initPB2_AsHighResistence ends ============
  2555                           
  2556                           
  2557 ;; *************** function _setPB5 *****************
  2558 ;; Defined at:
  2559 ;;		line 217 in file "D:\develop\190625\AK7030-OTP\main.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  bValue          1    wreg     unsigned char 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  bValue          1    0[BANK1 ] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		wreg
  2568 ;; Tracked objects:
  2569 ;;		On entry : 60/0
  2570 ;;		On exit  : 60/0
  2571 ;;		Unchanged: FFF9F/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0       0       0       0       0
  2574 ;;      Locals:         0       0       1       0       0
  2575 ;;      Temps:          0       0       0       0       0
  2576 ;;      Totals:         0       0       1       0       0
  2577 ;;Total ram usage:        1 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    3
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_setPinInitVaule
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587  04EF                     _setPB5:	
  2588                           
  2589                           ; Regs used in _setPB5: [wreg]
  2590                           ;setPB5@bValue stored from wreg
  2591  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2592  04F0  00A0               	movwf	setPB5@bValue^(0+128)
  2593                           
  2594                           ;main.c: 218: if( bValue )
  2595  04F1  0820               	movf	setPB5@bValue^(0+128),w
  2596  04F2  1903               	btfsc	3,2
  2597  04F3  2CF7               	goto	l707
  2598                           
  2599                           ;main.c: 220: PB5 = 1;
  2600  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2601  04F5  1686               	bsf	6,5
  2602  04F6  0008               	return
  2603  04F7                     l707:	
  2604                           
  2605                           ;main.c: 224: else
  2606                           ;main.c: 226: PB5= 0;
  2607  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2608  04F8  1286               	bcf	6,5
  2609  04F9  0008               	return
  2610  04FA                     __end_of_setPB5:	
  2611                           
  2612                           	psect	text1234
  2613  04FA                     __ptext1234:	
  2614 ;; =============== function _setPinInitVaule ends ============
  2615                           
  2616                           
  2617 ;; *************** function _initPin *****************
  2618 ;; Defined at:
  2619 ;;		line 271 in file "D:\develop\190625\AK7030-OTP\main.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 17F/0
  2630 ;;		On exit  : 17F/20
  2631 ;;		Unchanged: FFE80/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    4
  2640 ;; This function calls:
  2641 ;;		_initPB2_AsHighResistence
  2642 ;;		_initPB3
  2643 ;;		_initPB4
  2644 ;;		_initPB5
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649  04FA                     _initPin:	
  2650                           
  2651                           ;main.c: 273: initPB2_AsHighResistence();
  2652                           
  2653                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2654  04FA  250D  118A         	fcall	_initPB2_AsHighResistence
  2655                           
  2656                           ;main.c: 275: initPB3(0);
  2657  04FC  3000               	movlw	0
  2658  04FD  2504  118A         	fcall	_initPB3
  2659                           
  2660                           ;main.c: 277: initPB4(0);
  2661  04FF  3000               	movlw	0
  2662  0500  2512  118A         	fcall	_initPB4
  2663                           
  2664                           ;main.c: 279: initPB5(0);
  2665  0502  3000               	movlw	0
  2666  0503  2D1A               	ljmp	_initPB5
  2667  0504                     __end_of_initPin:	
  2668  0504                     __ptext1264:	
  2669 ;; =============== function _setPB3 ends ============
  2670                           
  2671                           
  2672 ;; *************** function _initPB3 *****************
  2673 ;; Defined at:
  2674 ;;		line 131 in file "D:\develop\190625\AK7030-OTP\main.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  bValue          1    wreg     unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  bValue          1    0[BANK1 ] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg
  2683 ;; Tracked objects:
  2684 ;;		On entry : 17F/60
  2685 ;;		On exit  : 17F/20
  2686 ;;		Unchanged: FFE80/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         0       0       1       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         0       0       1       0       0
  2692 ;;Total ram usage:        1 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    3
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_initPin
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701  0504                     _initPB3:	
  2702                           
  2703                           ; Regs used in _initPB3: [wreg]
  2704                           ;initPB3@bValue stored from wreg
  2705  0504  1303               	bcf	3,6	;RP1=0, select bank1
  2706  0505  00A0               	movwf	initPB3@bValue^(0+128)
  2707                           
  2708                           ;main.c: 132: if( bValue )
  2709  0506  0820               	movf	initPB3@bValue^(0+128),w
  2710  0507  1903               	btfsc	3,2
  2711  0508  2D0B               	goto	l682
  2712                           
  2713                           ;main.c: 134: TRISB3 = 1;
  2714  0509  1586               	bsf	6,3
  2715  050A  0008               	return
  2716  050B                     l682:	
  2717                           
  2718                           ;main.c: 138: else
  2719                           ;main.c: 140: TRISB3 = 0;
  2720  050B  1186               	bcf	6,3
  2721  050C  0008               	return
  2722  050D                     __end_of_initPB3:	
  2723  050D                     __ptext1258:	
  2724 ;; =============== function _pwm_start ends ============
  2725                           
  2726                           
  2727 ;; *************** function _initPB2_AsHighResistence *****************
  2728 ;; Defined at:
  2729 ;;		line 234 in file "D:\develop\190625\AK7030-OTP\main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;		None               void
  2736 ;; Registers used:
  2737 ;;		None
  2738 ;; Tracked objects:
  2739 ;;		On entry : 17F/0
  2740 ;;		On exit  : 17F/60
  2741 ;;		Unchanged: FFE80/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    3
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_initPin
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756  050D                     _initPB2_AsHighResistence:	
  2757                           
  2758                           ;main.c: 236: PB2 = 1;
  2759                           
  2760                           ; Regs used in _initPB2_AsHighResistence: []
  2761  050D  1506               	bsf	6,2
  2762                           
  2763                           ;main.c: 237: PBOD2 = 1;
  2764  050E  1683               	bsf	3,5	;RP0=1, select bank3
  2765  050F  1703               	bsf	3,6	;RP1=1, select bank3
  2766  0510  1508               	bsf	8,2
  2767  0511  0008               	return
  2768  0512                     __end_of_initPB2_AsHighResistence:	
  2769  0512                     __ptext1262:	
  2770 ;; =============== function _setPB4 ends ============
  2771                           
  2772                           
  2773 ;; *************** function _initPB4 *****************
  2774 ;; Defined at:
  2775 ;;		line 166 in file "D:\develop\190625\AK7030-OTP\main.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  bValue          1    wreg     unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  bValue          1    0[BANK1 ] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;		None               void
  2782 ;; Registers used:
  2783 ;;		wreg
  2784 ;; Tracked objects:
  2785 ;;		On entry : 17F/20
  2786 ;;		On exit  : 17F/20
  2787 ;;		Unchanged: FFE80/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         0       0       0       0       0
  2790 ;;      Locals:         0       0       1       0       0
  2791 ;;      Temps:          0       0       0       0       0
  2792 ;;      Totals:         0       0       1       0       0
  2793 ;;Total ram usage:        1 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    3
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_initPin
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802  0512                     _initPB4:	
  2803                           
  2804                           ; Regs used in _initPB4: [wreg]
  2805                           ;initPB4@bValue stored from wreg
  2806  0512  00A0               	movwf	initPB4@bValue^(0+128)
  2807                           
  2808                           ;main.c: 167: if( bValue )
  2809  0513  0820               	movf	initPB4@bValue^(0+128),w
  2810  0514  1903               	btfsc	3,2
  2811  0515  2D18               	goto	l692
  2812                           
  2813                           ;main.c: 169: TRISB4 = 1;
  2814  0516  1606               	bsf	6,4
  2815  0517  0008               	return
  2816  0518                     l692:	
  2817                           
  2818                           ;main.c: 173: else
  2819                           ;main.c: 175: TRISB4= 0;
  2820  0518  1206               	bcf	6,4
  2821  0519  0008               	return
  2822  051A                     __end_of_initPB4:	
  2823  051A                     __ptext1260:	
  2824 ;; =============== function _setPB5 ends ============
  2825                           
  2826                           
  2827 ;; *************** function _initPB5 *****************
  2828 ;; Defined at:
  2829 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\main.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  bValue          1    wreg     unsigned char 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  bValue          1    0[BANK1 ] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		wreg
  2838 ;; Tracked objects:
  2839 ;;		On entry : 17F/20
  2840 ;;		On exit  : 17F/20
  2841 ;;		Unchanged: FFE80/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       0       1       0       0
  2845 ;;      Temps:          0       0       0       0       0
  2846 ;;      Totals:         0       0       1       0       0
  2847 ;;Total ram usage:        1 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    3
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_initPin
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856  051A                     _initPB5:	
  2857                           
  2858                           ; Regs used in _initPB5: [wreg]
  2859                           ;initPB5@bValue stored from wreg
  2860  051A  00A0               	movwf	initPB5@bValue^(0+128)
  2861                           
  2862                           ;main.c: 201: if( bValue )
  2863  051B  0820               	movf	initPB5@bValue^(0+128),w
  2864  051C  1903               	btfsc	3,2
  2865  051D  2D20               	goto	l702
  2866                           
  2867                           ;main.c: 203: TRISB5 = 1;
  2868  051E  1686               	bsf	6,5
  2869  051F  0008               	return
  2870  0520                     l702:	
  2871                           
  2872                           ;main.c: 207: else
  2873                           ;main.c: 209: TRISB5= 0;
  2874  0520  1286               	bcf	6,5
  2875  0521  0008               	return
  2876  0522                     __end_of_initPB5:	
  2877                           
  2878                           	psect	text1239
  2879  05B0                     __ptext1239:	
  2880 ;; =============== function _Filter ends ============
  2881                           
  2882                           
  2883 ;; *************** function _isFinishedOneHoursTimer *****************
  2884 ;; Defined at:
  2885 ;;		line 542 in file "D:\develop\190625\AK7030-OTP\common.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      unsigned char 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0
  2894 ;; Tracked objects:
  2895 ;;		On entry : 160/20
  2896 ;;		On exit  : 160/20
  2897 ;;		Unchanged: FFE9F/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2899 ;;      Params:         0       0       0       0       0
  2900 ;;      Locals:         0       0       0       0       0
  2901 ;;      Temps:          0       0       0       0       0
  2902 ;;      Totals:         0       0       0       0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    3
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912  05B0                     _isFinishedOneHoursTimer:	
  2913                           
  2914                           ;common.c: 543: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2915                           
  2916                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2917  05B0  084C               	movf	(_uiOneHourTimer+1)^(0+128),w
  2918  05B1  044B               	iorwf	_uiOneHourTimer^(0+128),w
  2919  05B2  1D03               	skipz
  2920  05B3  3400               	retlw	0
  2921  05B4  085A               	movf	_bOneHourTimerStartFlag^(0+128),w
  2922  05B5  1903               	btfsc	3,2
  2923  05B6  3400               	retlw	0
  2924  05B7  3001               	movlw	1
  2925                           
  2926                           ;common.c: 544: {
  2927                           ;common.c: 545: bOneHourTimerStartFlag = 0;
  2928  05B8  01DA               	clrf	_bOneHourTimerStartFlag^(0+128)
  2929                           
  2930                           ;common.c: 546: return 1;
  2931  05B9  0008               	return
  2932  05BA                     __end_of_isFinishedOneHoursTimer:	
  2933                           ;common.c: 548: else
  2934                           ;common.c: 549: return 0;
  2935                           
  2936                           
  2937                           	psect	text1240
  2938  0557                     __ptext1240:	
  2939 ;; =============== function _isFinishedOneHoursTimer ends ============
  2940                           
  2941                           
  2942 ;; *************** function _startOneHoursTimer *****************
  2943 ;; Defined at:
  2944 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\common.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;		None               void
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0
  2953 ;; Tracked objects:
  2954 ;;		On entry : 60/20
  2955 ;;		On exit  : 60/20
  2956 ;;		Unchanged: FFF9F/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       2       0       0
  2959 ;;      Locals:         0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0
  2961 ;;      Totals:         0       0       2       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    3
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971  0557                     _startOneHoursTimer:	
  2972                           
  2973                           ;common.c: 460: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  2974                           
  2975                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  2976  0557  084C               	movf	(_uiOneHourTimer+1)^(0+128),w
  2977  0558  044B               	iorwf	_uiOneHourTimer^(0+128),w
  2978  0559  1D03               	skipz
  2979  055A  0008               	return
  2980  055B  08DA               	movf	_bOneHourTimerStartFlag^(0+128),f
  2981  055C  1D03               	skipz
  2982  055D  0008               	return
  2983                           
  2984                           ;common.c: 461: {
  2985                           ;common.c: 462: uiOneHourTimer = uiSetTime;
  2986  055E  0821               	movf	(startOneHoursTimer@uiSetTime+1)^(0+128),w
  2987  055F  00CC               	movwf	(_uiOneHourTimer+1)^(0+128)
  2988  0560  0820               	movf	startOneHoursTimer@uiSetTime^(0+128),w
  2989  0561  00CB               	movwf	_uiOneHourTimer^(0+128)
  2990                           
  2991                           ;common.c: 463: bOneHourTimerStartFlag = 1;
  2992  0562  01DA               	clrf	_bOneHourTimerStartFlag^(0+128)
  2993  0563  0ADA               	incf	_bOneHourTimerStartFlag^(0+128),f
  2994  0564  0008               	return
  2995  0565                     __end_of_startOneHoursTimer:	
  2996                           
  2997                           	psect	text1241
  2998  058F                     __ptext1241:	
  2999 ;; =============== function _startOneHoursTimer ends ============
  3000                           
  3001                           
  3002 ;; *************** function _isFinishedThreeHoursTimer *****************
  3003 ;; Defined at:
  3004 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\common.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      unsigned char 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 40/20
  3015 ;;		On exit  : 60/20
  3016 ;;		Unchanged: FFF9F/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0
  3021 ;;      Totals:         0       0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    3
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031  058F                     _isFinishedThreeHoursTimer:	
  3032                           
  3033                           ;common.c: 530: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3034                           
  3035                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3036  058F  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0590  084E               	movf	(_uiSmallTimer+1)^(0+128),w
  3038  0591  044D               	iorwf	_uiSmallTimer^(0+128),w
  3039  0592  1D03               	skipz
  3040  0593  3400               	retlw	0
  3041  0594  085B               	movf	_bSmallTimerStartFlag^(0+128),w
  3042  0595  1903               	btfsc	3,2
  3043  0596  3400               	retlw	0
  3044  0597  3001               	movlw	1
  3045                           
  3046                           ;common.c: 531: {
  3047                           ;common.c: 532: bSmallTimerStartFlag = 0;
  3048  0598  01DB               	clrf	_bSmallTimerStartFlag^(0+128)
  3049                           
  3050                           ;common.c: 533: return 1;
  3051  0599  0008               	return
  3052  059A                     __end_of_isFinishedThreeHoursTimer:	
  3053                           ;common.c: 535: else
  3054                           ;common.c: 536: return 0;
  3055                           
  3056                           
  3057                           	psect	text1242
  3058  0565                     __ptext1242:	
  3059 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3060                           
  3061                           
  3062 ;; *************** function _startThreeHoursTimer *****************
  3063 ;; Defined at:
  3064 ;;		line 446 in file "D:\develop\190625\AK7030-OTP\common.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;		None               void
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 60/20
  3075 ;;		On exit  : 60/20
  3076 ;;		Unchanged: FFF9F/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       0       2       0       0
  3079 ;;      Locals:         0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         0       0       2       0       0
  3082 ;;Total ram usage:        2 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    3
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091  0565                     _startThreeHoursTimer:	
  3092                           
  3093                           ;common.c: 447: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3094                           
  3095                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3096  0565  084E               	movf	(_uiSmallTimer+1)^(0+128),w
  3097  0566  044D               	iorwf	_uiSmallTimer^(0+128),w
  3098  0567  1D03               	skipz
  3099  0568  0008               	return
  3100  0569  08DB               	movf	_bSmallTimerStartFlag^(0+128),f
  3101  056A  1D03               	skipz
  3102  056B  0008               	return
  3103                           
  3104                           ;common.c: 448: {
  3105                           ;common.c: 449: uiSmallTimer = uiSetTime;
  3106  056C  0821               	movf	(startThreeHoursTimer@uiSetTime+1)^(0+128),w
  3107  056D  00CE               	movwf	(_uiSmallTimer+1)^(0+128)
  3108  056E  0820               	movf	startThreeHoursTimer@uiSetTime^(0+128),w
  3109  056F  00CD               	movwf	_uiSmallTimer^(0+128)
  3110                           
  3111                           ;common.c: 450: bSmallTimerStartFlag = 1;
  3112  0570  01DB               	clrf	_bSmallTimerStartFlag^(0+128)
  3113  0571  0ADB               	incf	_bSmallTimerStartFlag^(0+128),f
  3114  0572  0008               	return
  3115  0573                     __end_of_startThreeHoursTimer:	
  3116                           
  3117                           	psect	text1243
  3118  059A                     __ptext1243:	
  3119 ;; =============== function _startThreeHoursTimer ends ============
  3120                           
  3121                           
  3122 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3123 ;; Defined at:
  3124 ;;		line 518 in file "D:\develop\190625\AK7030-OTP\common.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      unsigned char 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 40/20
  3135 ;;		On exit  : 60/20
  3136 ;;		Unchanged: FFF9F/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    3
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151  059A                     _isFinishedTwelveHoursTimer:	
  3152                           
  3153                           ;common.c: 519: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3154                           
  3155                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3156  059A  1683               	bsf	3,5	;RP0=1, select bank1
  3157  059B  084A               	movf	(_uiBigTimer+1)^(0+128),w
  3158  059C  0449               	iorwf	_uiBigTimer^(0+128),w
  3159  059D  1D03               	skipz
  3160  059E  3400               	retlw	0
  3161  059F  0859               	movf	_bBigTimerStartFlag^(0+128),w
  3162  05A0  1903               	btfsc	3,2
  3163  05A1  3400               	retlw	0
  3164  05A2  3001               	movlw	1
  3165                           
  3166                           ;common.c: 520: {
  3167                           ;common.c: 521: bBigTimerStartFlag = 0;
  3168  05A3  01D9               	clrf	_bBigTimerStartFlag^(0+128)
  3169                           
  3170                           ;common.c: 522: return 1;
  3171  05A4  0008               	return
  3172  05A5                     __end_of_isFinishedTwelveHoursTimer:	
  3173                           ;common.c: 524: else
  3174                           ;common.c: 525: return 0;
  3175                           
  3176                           
  3177                           	psect	text1244
  3178  0573                     __ptext1244:	
  3179 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3180                           
  3181                           
  3182 ;; *************** function _startTwelveHourTimer *****************
  3183 ;; Defined at:
  3184 ;;		line 398 in file "D:\develop\190625\AK7030-OTP\common.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 60/20
  3195 ;;		On exit  : 60/20
  3196 ;;		Unchanged: FFF9F/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3198 ;;      Params:         0       0       2       0       0
  3199 ;;      Locals:         0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0
  3201 ;;      Totals:         0       0       2       0       0
  3202 ;;Total ram usage:        2 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    3
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211  0573                     _startTwelveHourTimer:	
  3212                           
  3213                           ;common.c: 399: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3214                           
  3215                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3216  0573  084A               	movf	(_uiBigTimer+1)^(0+128),w
  3217  0574  0449               	iorwf	_uiBigTimer^(0+128),w
  3218  0575  1D03               	skipz
  3219  0576  0008               	return
  3220  0577  08D9               	movf	_bBigTimerStartFlag^(0+128),f
  3221  0578  1D03               	skipz
  3222  0579  0008               	return
  3223                           
  3224                           ;common.c: 400: {
  3225                           ;common.c: 401: uiBigTimer = uiSetTime;
  3226  057A  0821               	movf	(startTwelveHourTimer@uiSetTime+1)^(0+128),w
  3227  057B  00CA               	movwf	(_uiBigTimer+1)^(0+128)
  3228  057C  0820               	movf	startTwelveHourTimer@uiSetTime^(0+128),w
  3229  057D  00C9               	movwf	_uiBigTimer^(0+128)
  3230                           
  3231                           ;common.c: 402: bBigTimerStartFlag = 1;
  3232  057E  01D9               	clrf	_bBigTimerStartFlag^(0+128)
  3233  057F  0AD9               	incf	_bBigTimerStartFlag^(0+128),f
  3234  0580  0008               	return
  3235  0581                     __end_of_startTwelveHourTimer:	
  3236                           
  3237                           	psect	text1245
  3238  05D4                     __ptext1245:	
  3239 ;; =============== function _startTwelveHourTimer ends ============
  3240                           
  3241                           
  3242 ;; *************** function _clearTwentyMinTimer *****************
  3243 ;; Defined at:
  3244 ;;		line 439 in file "D:\develop\190625\AK7030-OTP\common.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		status,2
  3253 ;; Tracked objects:
  3254 ;;		On entry : 60/0
  3255 ;;		On exit  : 60/20
  3256 ;;		Unchanged: FFF9F/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    3
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271  05D4                     _clearTwentyMinTimer:	
  3272                           
  3273                           ;common.c: 440: uiTwentyMinTimer = 0;
  3274                           
  3275                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3276  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3277  05D5  01CF               	clrf	_uiTwentyMinTimer^(0+128)
  3278  05D6  01D0               	clrf	(_uiTwentyMinTimer+1)^(0+128)
  3279                           
  3280                           ;common.c: 441: bTwentyMinStartFlag = 0;
  3281  05D7  01DC               	clrf	_bTwentyMinStartFlag^(0+128)
  3282  05D8  0008               	return
  3283  05D9                     __end_of_clearTwentyMinTimer:	
  3284                           
  3285                           	psect	text1246
  3286  05A5                     __ptext1246:	
  3287 ;; =============== function _clearTwentyMinTimer ends ============
  3288                           
  3289                           
  3290 ;; *************** function _isFinishedTwentyMinTimer *****************
  3291 ;; Defined at:
  3292 ;;		line 494 in file "D:\develop\190625\AK7030-OTP\common.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      unsigned char 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 40/20
  3303 ;;		On exit  : 60/20
  3304 ;;		Unchanged: FFF9F/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    3
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319  05A5                     _isFinishedTwentyMinTimer:	
  3320                           
  3321                           ;common.c: 495: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3322                           
  3323                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3324  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  3325  05A6  0850               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3326  05A7  044F               	iorwf	_uiTwentyMinTimer^(0+128),w
  3327  05A8  1D03               	skipz
  3328  05A9  3400               	retlw	0
  3329  05AA  085C               	movf	_bTwentyMinStartFlag^(0+128),w
  3330  05AB  1903               	btfsc	3,2
  3331  05AC  3400               	retlw	0
  3332  05AD  3001               	movlw	1
  3333                           
  3334                           ;common.c: 496: {
  3335                           ;common.c: 497: bTwentyMinStartFlag = 0;
  3336  05AE  01DC               	clrf	_bTwentyMinStartFlag^(0+128)
  3337                           
  3338                           ;common.c: 498: return 1;
  3339  05AF  0008               	return
  3340  05B0                     __end_of_isFinishedTwentyMinTimer:	
  3341                           ;common.c: 500: else
  3342                           ;common.c: 501: return 0;
  3343                           
  3344                           
  3345                           	psect	text1247
  3346  05EF                     __ptext1247:	
  3347 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3348                           
  3349                           
  3350 ;; *************** function _clrSampeTime *****************
  3351 ;; Defined at:
  3352 ;;		line 564 in file "D:\develop\190625\AK7030-OTP\common.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;		None               void
  3359 ;; Registers used:
  3360 ;;		status,2
  3361 ;; Tracked objects:
  3362 ;;		On entry : 60/0
  3363 ;;		On exit  : 60/0
  3364 ;;		Unchanged: FFF9F/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0
  3369 ;;      Totals:         0       0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    3
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379  05EF                     _clrSampeTime:	
  3380                           
  3381                           ;common.c: 565: timer.timer10msStopWatch = 0;
  3382                           
  3383                           ; Regs used in _clrSampeTime: [status,2]
  3384  05EF  01D7               	clrf	_timer
  3385  05F0  0008               	return
  3386  05F1                     __end_of_clrSampeTime:	
  3387                           
  3388                           	psect	text1248
  3389  05D9                     __ptext1248:	
  3390 ;; =============== function _clrSampeTime ends ============
  3391                           
  3392                           
  3393 ;; *************** function _isPermitSampleTime *****************
  3394 ;; Defined at:
  3395 ;;		line 554 in file "D:\develop\190625\AK7030-OTP\common.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      unsigned char 
  3402 ;; Registers used:
  3403 ;;		wreg
  3404 ;; Tracked objects:
  3405 ;;		On entry : 60/0
  3406 ;;		On exit  : 60/0
  3407 ;;		Unchanged: FFF9F/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    3
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422  05D9                     _isPermitSampleTime:	
  3423                           
  3424                           ;common.c: 555: if(timer.timer10msStopWatch >= 10)
  3425                           
  3426                           ; Regs used in _isPermitSampleTime: [wreg]
  3427  05D9  300A               	movlw	10
  3428  05DA  0257               	subwf	_timer,w
  3429  05DB  1803               	btfsc	3,0
  3430                           
  3431                           ;common.c: 556: {
  3432                           ;common.c: 557: return 1;
  3433  05DC  3401               	retlw	1
  3434                           
  3435                           ;common.c: 559: else
  3436                           ;common.c: 560: return 0;
  3437  05DD  3400               	retlw	0
  3438  05DE                     __end_of_isPermitSampleTime:	
  3439                           
  3440                           	psect	text1250
  3441  0581                     __ptext1250:	
  3442 ;; =============== function _adc_start ends ============
  3443                           
  3444                           
  3445 ;; *************** function _startTwentyMinTimer *****************
  3446 ;; Defined at:
  3447 ;;		line 484 in file "D:\develop\190625\AK7030-OTP\common.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  uiSetValue      2    0[BANK1 ] unsigned int 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;		None               void
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 17F/20
  3458 ;;		On exit  : 17F/20
  3459 ;;		Unchanged: FFE80/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         0       0       2       0       0
  3462 ;;      Locals:         0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0
  3464 ;;      Totals:         0       0       2       0       0
  3465 ;;Total ram usage:        2 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    3
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474  0581                     _startTwentyMinTimer:	
  3475                           
  3476                           ;common.c: 485: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3477                           
  3478                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3479  0581  0850               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3480  0582  044F               	iorwf	_uiTwentyMinTimer^(0+128),w
  3481  0583  1D03               	skipz
  3482  0584  0008               	return
  3483  0585  08DC               	movf	_bTwentyMinStartFlag^(0+128),f
  3484  0586  1D03               	skipz
  3485  0587  0008               	return
  3486                           
  3487                           ;common.c: 486: {
  3488                           ;common.c: 487: uiTwentyMinTimer = uiSetValue;
  3489  0588  0821               	movf	(startTwentyMinTimer@uiSetValue+1)^(0+128),w
  3490  0589  00D0               	movwf	(_uiTwentyMinTimer+1)^(0+128)
  3491  058A  0820               	movf	startTwentyMinTimer@uiSetValue^(0+128),w
  3492  058B  00CF               	movwf	_uiTwentyMinTimer^(0+128)
  3493                           
  3494                           ;common.c: 488: bTwentyMinStartFlag = 1;
  3495  058C  01DC               	clrf	_bTwentyMinStartFlag^(0+128)
  3496  058D  0ADC               	incf	_bTwentyMinStartFlag^(0+128),f
  3497  058E  0008               	return
  3498  058F                     __end_of_startTwentyMinTimer:	
  3499                           
  3500                           	psect	text1252
  3501  05EC                     __ptext1252:	
  3502 ;; =============== function _adc_test_init ends ============
  3503                           
  3504                           
  3505 ;; *************** function _timer1_interrupt_config *****************
  3506 ;; Defined at:
  3507 ;;		line 287 in file "D:\develop\190625\AK7030-OTP\common.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;		None               void
  3514 ;; Registers used:
  3515 ;;		None
  3516 ;; Tracked objects:
  3517 ;;		On entry : 17F/20
  3518 ;;		On exit  : 17F/20
  3519 ;;		Unchanged: FFE80/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    3
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534  05EC                     _timer1_interrupt_config:	
  3535                           
  3536                           ;common.c: 288: GIE = 1;
  3537                           
  3538                           ; Regs used in _timer1_interrupt_config: []
  3539  05EC  178B               	bsf	11,7
  3540                           
  3541                           ;common.c: 289: PEIE = 1;
  3542  05ED  170B               	bsf	11,6
  3543  05EE  0008               	return
  3544  05EF                     __end_of_timer1_interrupt_config:	
  3545                           
  3546                           	psect	text1253
  3547  05BA                     __ptext1253:	
  3548 ;; =============== function _timer1_interrupt_config ends ============
  3549                           
  3550                           
  3551 ;; *************** function _timer1_config *****************
  3552 ;; Defined at:
  3553 ;;		line 275 in file "D:\develop\190625\AK7030-OTP\common.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;		None               void
  3560 ;; Registers used:
  3561 ;;		wreg
  3562 ;; Tracked objects:
  3563 ;;		On entry : 17F/40
  3564 ;;		On exit  : 17F/20
  3565 ;;		Unchanged: FFE80/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    3
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580  05BA                     _timer1_config:	
  3581                           
  3582                           ;common.c: 277: TMR1H=0xCF;
  3583                           
  3584                           ; Regs used in _timer1_config: [wreg]
  3585  05BA  30CF               	movlw	207
  3586  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3587  05BC  008F               	movwf	15	;volatile
  3588                           
  3589                           ;common.c: 278: TMR1L=0x2C;
  3590  05BD  302C               	movlw	44
  3591  05BE  008E               	movwf	14	;volatile
  3592                           
  3593                           ;common.c: 279: T1CON=0xE1;
  3594  05BF  30E1               	movlw	225
  3595  05C0  0090               	movwf	16	;volatile
  3596                           
  3597                           ;common.c: 280: TMR1IE=1;
  3598  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  3599  05C2  140C               	bsf	12,0
  3600  05C3  0008               	return
  3601  05C4                     __end_of_timer1_config:	
  3602                           
  3603                           	psect	text1254
  3604  05CC                     __ptext1254:	
  3605 ;; =============== function _timer1_config ends ============
  3606                           
  3607                           
  3608 ;; *************** function _clock_config *****************
  3609 ;; Defined at:
  3610 ;;		line 267 in file "D:\develop\190625\AK7030-OTP\common.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		wreg, status,2
  3619 ;; Tracked objects:
  3620 ;;		On entry : 17F/20
  3621 ;;		On exit  : 17F/40
  3622 ;;		Unchanged: FFE80/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    3
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637  05CC                     _clock_config:	
  3638                           
  3639                           ;common.c: 269: CLKPR = 0x80;
  3640                           
  3641                           ; Regs used in _clock_config: [wreg+status,2]
  3642  05CC  3080               	movlw	128
  3643  05CD  1283               	bcf	3,5	;RP0=0, select bank2
  3644  05CE  1703               	bsf	3,6	;RP1=1, select bank2
  3645  05CF  0088               	movwf	8	;volatile
  3646                           
  3647                           ;common.c: 270: CLKPR = 0x00;
  3648  05D0  0188               	clrf	8	;volatile
  3649  05D1                     l1558:	
  3650                           ;common.c: 271: while(CLKPCE);
  3651                           
  3652  05D1  1F88               	btfss	8,7
  3653  05D2  0008               	return
  3654  05D3  2DD1               	goto	l1558
  3655  05D4                     __end_of_clock_config:	
  3656                           
  3657                           	psect	text1255
  3658  05F1                     __ptext1255:	
  3659 ;; =============== function _clock_config ends ============
  3660                           
  3661                           
  3662 ;; *************** function _reset *****************
  3663 ;; Defined at:
  3664 ;;		line 309 in file "D:\develop\190625\AK7030-OTP\main.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;		None               void
  3671 ;; Registers used:
  3672 ;;		None
  3673 ;; Tracked objects:
  3674 ;;		On entry : 40/20
  3675 ;;		On exit  : 60/20
  3676 ;;		Unchanged: FFFFFF9F/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0
  3681 ;;      Totals:         0       0       0       0       0
  3682 ;;Total ram usage:        0 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    3
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691  05F1                     _reset:	
  3692  05F1                     l727:	
  3693                           ; Regs used in _reset: []
  3694                           ;main.c: 311: while(1);
  3695                           
  3696  05F1  2DF1               	goto	l727
  3697                           
  3698                           	psect	text1256
  3699  05E8                     __ptext1256:	
  3700  05E8                     __end_of_reset:	
  3701                           
  3702 ;; =============== function _reset ends ============
  3703 ;; *************** function _selectAdChannel *****************
  3704 ;; Defined at:
  3705 ;;		line 298 in file "D:\develop\190625\AK7030-OTP\main.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;		None               void
  3712 ;; Registers used:
  3713 ;;		None
  3714 ;; Tracked objects:
  3715 ;;		On entry : 17F/0
  3716 ;;		On exit  : 17F/20
  3717 ;;		Unchanged: FFE80/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3719 ;;      Params:         0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    3
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732  05E8                     _selectAdChannel:	
  3733                           
  3734                           ;main.c: 300: TRISB0 = 1;
  3735                           
  3736                           ; Regs used in _selectAdChannel: []
  3737  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3738  05E9  1406               	bsf	6,0
  3739                           
  3740                           ;main.c: 301: TRISB1 = 1;
  3741  05EA  1486               	bsf	6,1
  3742  05EB  0008               	return
  3743  05EC                     __end_of_selectAdChannel:	
  3744                           
  3745                           	psect	text1257
  3746  0541                     __ptext1257:	
  3747 ;; =============== function _selectAdChannel ends ============
  3748                           
  3749                           
  3750 ;; *************** function _pwm_start *****************
  3751 ;; Defined at:
  3752 ;;		line 246 in file "D:\develop\190625\AK7030-OTP\main.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  ucPulseWidth    1    wreg     unsigned char 
  3755 ;;  ucPulseFrequ    1    0[BANK1 ] unsigned char 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  ucPulseWidth    1    1[BANK1 ] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;		None               void
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 17F/20
  3764 ;;		On exit  : 17F/0
  3765 ;;		Unchanged: FFE80/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         0       0       1       0       0
  3768 ;;      Locals:         0       0       1       0       0
  3769 ;;      Temps:          0       0       0       0       0
  3770 ;;      Totals:         0       0       2       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    3
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_main
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780  0541                     _pwm_start:	
  3781                           
  3782                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3783                           ;pwm_start@ucPulseWidth stored from wreg
  3784  0541  00A1               	movwf	pwm_start@ucPulseWidth^(0+128)
  3785                           
  3786                           ;main.c: 248: CCP1CON&= 0xf0;
  3787  0542  30F0               	movlw	240
  3788  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0544  0597               	andwf	23,f	;volatile
  3790                           
  3791                           ;main.c: 250: T2CON=0x04;
  3792  0545  3004               	movlw	4
  3793  0546  0092               	movwf	18	;volatile
  3794                           
  3795                           ;main.c: 251: PR2 = ucPulseFrequency;
  3796  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3797  0548  0820               	movf	pwm_start@ucPulseFrequency^(0+128),w
  3798  0549  0092               	movwf	18	;volatile
  3799                           
  3800                           ;main.c: 252: CCPR1L = ucPulseWidth;
  3801  054A  0821               	movf	pwm_start@ucPulseWidth^(0+128),w
  3802  054B  1283               	bcf	3,5	;RP0=0, select bank0
  3803  054C  0095               	movwf	21	;volatile
  3804                           
  3805                           ;main.c: 253: CCP1CON=0x00;
  3806  054D  0197               	clrf	23	;volatile
  3807                           
  3808                           ;main.c: 255: TRISB2=0;
  3809  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3810  054F  300C               	movlw	12
  3811  0550  1106               	bcf	6,2
  3812                           
  3813                           ;main.c: 256: PBOD2 = 0;
  3814  0551  1703               	bsf	3,6	;RP1=1, select bank3
  3815  0552  1108               	bcf	8,2
  3816                           
  3817                           ;main.c: 258: CCP1CON|= 0x0c;
  3818  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0555  0497               	iorwf	23,f	;volatile
  3821  0556  0008               	return
  3822  0557                     __end_of_pwm_start:	
  3823                           
  3824                           	psect	text1265
  3825  05DE                     __ptext1265:	
  3826 ;; =============== function _initPB3 ends ============
  3827                           
  3828                           
  3829 ;; *************** function _clearThreeHoursTimer *****************
  3830 ;; Defined at:
  3831 ;;		line 419 in file "D:\develop\190625\AK7030-OTP\common.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;		None               void
  3838 ;; Registers used:
  3839 ;;		status,2
  3840 ;; Tracked objects:
  3841 ;;		On entry : 40/20
  3842 ;;		On exit  : 60/20
  3843 ;;		Unchanged: FFF9F/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         0       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0
  3848 ;;      Totals:         0       0       0       0       0
  3849 ;;Total ram usage:        0 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    3
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858  05DE                     _clearThreeHoursTimer:	
  3859                           
  3860                           ;common.c: 420: uiSmallTimer = 0;
  3861                           
  3862                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3863  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  3864  05DF  01CD               	clrf	_uiSmallTimer^(0+128)
  3865  05E0  01CE               	clrf	(_uiSmallTimer+1)^(0+128)
  3866                           
  3867                           ;common.c: 421: bSmallTimerStartFlag = 0;
  3868  05E1  01DB               	clrf	_bSmallTimerStartFlag^(0+128)
  3869  05E2  0008               	return
  3870  05E3                     __end_of_clearThreeHoursTimer:	
  3871                           
  3872                           	psect	text1266
  3873  05E3                     __ptext1266:	
  3874 ;; =============== function _clearThreeHoursTimer ends ============
  3875                           
  3876                           
  3877 ;; *************** function _clearTwelveHoursTimer *****************
  3878 ;; Defined at:
  3879 ;;		line 412 in file "D:\develop\190625\AK7030-OTP\common.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;		None               void
  3886 ;; Registers used:
  3887 ;;		status,2
  3888 ;; Tracked objects:
  3889 ;;		On entry : 40/20
  3890 ;;		On exit  : 60/20
  3891 ;;		Unchanged: FFF9F/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3893 ;;      Params:         0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0
  3896 ;;      Totals:         0       0       0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    3
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906  05E3                     _clearTwelveHoursTimer:	
  3907                           
  3908                           ;common.c: 413: uiBigTimer = 0;
  3909                           
  3910                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3911  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3912  05E4  01C9               	clrf	_uiBigTimer^(0+128)
  3913  05E5  01CA               	clrf	(_uiBigTimer+1)^(0+128)
  3914                           
  3915                           ;common.c: 414: bBigTimerStartFlag = 0;
  3916  05E6  01D9               	clrf	_bBigTimerStartFlag^(0+128)
  3917  05E7  0008               	return
  3918  05E8                     __end_of_clearTwelveHoursTimer:	
  3919                           
  3920                           	psect	text1267
  3921  0013                     __ptext1267:	
  3922 ;; =============== function _clearTwelveHoursTimer ends ============
  3923                           
  3924                           
  3925 ;; *************** function _ISR *****************
  3926 ;; Defined at:
  3927 ;;		line 613 in file "D:\develop\190625\AK7030-OTP\common.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;		None               void
  3934 ;; Registers used:
  3935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 60/0
  3939 ;;		Unchanged: FFE00/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3941 ;;      Params:         0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0
  3943 ;;      Temps:          0       4       0       0       0
  3944 ;;      Totals:         0       4       0       0       0
  3945 ;;Total ram usage:        4 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    2
  3948 ;; This function calls:
  3949 ;;		i1_setAD_ConvertFlag
  3950 ;;		_adc_get
  3951 ;;		_vPutSampleDataIntoTable
  3952 ;; This function is called by:
  3953 ;;		Interrupt level 1
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956  0013                     _ISR:	
  3957                           
  3958                           ;common.c: 614: static unsigned char ucTimer1sCnt = 0;
  3959                           ;common.c: 617: if(TMR1IF == 1)
  3960  0013  1C0C               	btfss	12,0
  3961  0014  2852               	goto	i1l3806
  3962  0015  3064               	movlw	100
  3963                           
  3964                           ;common.c: 618: {
  3965                           ;common.c: 619: TMR1IF = 0 ;
  3966  0016  100C               	bcf	12,0
  3967                           
  3968                           ;common.c: 620: timer.timer10msStopWatch++;
  3969  0017  0AD7               	incf	_timer,f
  3970                           
  3971                           ;common.c: 621: ucTimer1sCnt++;
  3972  0018  0AD4               	incf	ISR@ucTimer1sCnt,f
  3973                           
  3974                           ;common.c: 625: if(ucTimer1sCnt >= 100)
  3975  0019  0254               	subwf	ISR@ucTimer1sCnt,w
  3976  001A  1C03               	skipc
  3977  001B  2852               	goto	i1l3806
  3978                           
  3979                           ;common.c: 626: {
  3980                           ;common.c: 627: ucTimer1sCnt = 0;
  3981  001C  01D4               	clrf	ISR@ucTimer1sCnt
  3982                           
  3983                           ;common.c: 628: if(uiBigTimer > 0)
  3984  001D  1683               	bsf	3,5	;RP0=1, select bank1
  3985  001E  084A               	movf	(_uiBigTimer+1)^(0+128),w
  3986  001F  0449               	iorwf	_uiBigTimer^(0+128),w
  3987  0020  1903               	skipnz
  3988  0021  2828               	goto	i1l1689
  3989                           
  3990                           ;common.c: 629: uiBigTimer--;
  3991  0022  3001               	movlw	1
  3992  0023  02C9               	subwf	_uiBigTimer^(0+128),f
  3993  0024  3000               	movlw	0
  3994  0025  1C03               	skipc
  3995  0026  03CA               	decf	(_uiBigTimer+1)^(0+128),f
  3996  0027  02CA               	subwf	(_uiBigTimer+1)^(0+128),f
  3997  0028                     i1l1689:	
  3998                           
  3999                           ;common.c: 631: if(uiSmallTimer)
  4000  0028  084E               	movf	(_uiSmallTimer+1)^(0+128),w
  4001  0029  044D               	iorwf	_uiSmallTimer^(0+128),w
  4002  002A  1903               	skipnz
  4003  002B  2832               	goto	i1l1690
  4004                           
  4005                           ;common.c: 632: uiSmallTimer--;
  4006  002C  3001               	movlw	1
  4007  002D  02CD               	subwf	_uiSmallTimer^(0+128),f
  4008  002E  3000               	movlw	0
  4009  002F  1C03               	skipc
  4010  0030  03CE               	decf	(_uiSmallTimer+1)^(0+128),f
  4011  0031  02CE               	subwf	(_uiSmallTimer+1)^(0+128),f
  4012  0032                     i1l1690:	
  4013                           
  4014                           ;common.c: 634: if(uiTwentySecondsTimer)
  4015  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0033  0851               	movf	_uiTwentySecondsTimer+1,w
  4017  0034  0450               	iorwf	_uiTwentySecondsTimer,w
  4018  0035  1903               	skipnz
  4019  0036  283D               	goto	i1l1691
  4020                           
  4021                           ;common.c: 635: uiTwentySecondsTimer--;
  4022  0037  3001               	movlw	1
  4023  0038  02D0               	subwf	_uiTwentySecondsTimer,f
  4024  0039  3000               	movlw	0
  4025  003A  1C03               	skipc
  4026  003B  03D1               	decf	_uiTwentySecondsTimer+1,f
  4027  003C  02D1               	subwf	_uiTwentySecondsTimer+1,f
  4028  003D                     i1l1691:	
  4029                           
  4030                           ;common.c: 637: if(uiTwentyMinTimer)
  4031  003D  1683               	bsf	3,5	;RP0=1, select bank1
  4032  003E  0850               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  4033  003F  044F               	iorwf	_uiTwentyMinTimer^(0+128),w
  4034  0040  1903               	skipnz
  4035  0041  2848               	goto	i1l1692
  4036                           
  4037                           ;common.c: 638: uiTwentyMinTimer--;
  4038  0042  3001               	movlw	1
  4039  0043  02CF               	subwf	_uiTwentyMinTimer^(0+128),f
  4040  0044  3000               	movlw	0
  4041  0045  1C03               	skipc
  4042  0046  03D0               	decf	(_uiTwentyMinTimer+1)^(0+128),f
  4043  0047  02D0               	subwf	(_uiTwentyMinTimer+1)^(0+128),f
  4044  0048                     i1l1692:	
  4045                           
  4046                           ;common.c: 640: if( uiOneHourTimer )
  4047  0048  084C               	movf	(_uiOneHourTimer+1)^(0+128),w
  4048  0049  044B               	iorwf	_uiOneHourTimer^(0+128),w
  4049  004A  1903               	skipnz
  4050  004B  2852               	goto	i1l3806
  4051                           
  4052                           ;common.c: 641: uiOneHourTimer--;
  4053  004C  3001               	movlw	1
  4054  004D  02CB               	subwf	_uiOneHourTimer^(0+128),f
  4055  004E  3000               	movlw	0
  4056  004F  1C03               	skipc
  4057  0050  03CC               	decf	(_uiOneHourTimer+1)^(0+128),f
  4058  0051  02CC               	subwf	(_uiOneHourTimer+1)^(0+128),f
  4059  0052                     i1l3806:	
  4060                           
  4061                           ;common.c: 642: }
  4062                           ;common.c: 643: }
  4063                           ;common.c: 645: if(ADIF)
  4064  0052  1283               	bcf	3,5	;RP0=0, select bank0
  4065  0053  1D0D               	btfss	13,2
  4066  0054  286F               	goto	i1l1697
  4067  0055  3001               	movlw	1
  4068                           
  4069                           ;common.c: 646: {
  4070                           ;common.c: 648: ADIF=0;
  4071  0056  110D               	bcf	13,2
  4072                           
  4073                           ;common.c: 649: setAD_ConvertFlag(1);
  4074  0057  2088  118A         	fcall	i1_setAD_ConvertFlag
  4075                           
  4076                           ;common.c: 651: if(sampleChannelSelect == 12)
  4077  0059  1683               	bsf	3,5	;RP0=1, select bank1
  4078  005A  0862               	movf	_sampleChannelSelect^(0+128),w
  4079  005B  3A0C               	xorlw	12
  4080  005C  1D03               	skipz
  4081  005D  2866               	goto	i1l3816
  4082                           
  4083                           ;common.c: 652: {
  4084                           ;common.c: 655: vPutSampleDataIntoTable(adc_get(),12);
  4085  005E  207C  118A         	fcall	_adc_get
  4086  0060  0871               	movf	?_adc_get+1,w
  4087  0061  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4088  0062  0870               	movf	?_adc_get,w
  4089  0063  00F6               	movwf	?_vPutSampleDataIntoTable
  4090  0064  300C               	movlw	12
  4091  0065  286D               	goto	L14
  4092  0066                     i1l3816:	
  4093                           ;common.c: 659: }
  4094                           
  4095                           
  4096                           ;common.c: 660: else
  4097                           ;common.c: 661: {
  4098                           ;common.c: 665: vPutSampleDataIntoTable(adc_get(),13);
  4099  0066  207C  118A         	fcall	_adc_get
  4100  0068  0871               	movf	?_adc_get+1,w
  4101  0069  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4102  006A  0870               	movf	?_adc_get,w
  4103  006B  00F6               	movwf	?_vPutSampleDataIntoTable
  4104  006C  300D               	movlw	13
  4105  006D                     L14:	
  4106  006D  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4107  006E  208B               	fcall	_vPutSampleDataIntoTable
  4108  006F                     i1l1697:	
  4109  006F  1283               	bcf	3,5	;RP0=0, select bank0
  4110  0070  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0071  0847               	movf	??_ISR+3,w
  4112  0072  00FF               	movwf	127
  4113  0073  0846               	movf	??_ISR+2,w
  4114  0074  008A               	movwf	10
  4115  0075  0845               	movf	??_ISR+1,w
  4116  0076  0084               	movwf	4
  4117  0077  0E44               	swapf	??_ISR^0,w
  4118  0078  0083               	movwf	3
  4119  0079  0EFE               	swapf	126,f
  4120  007A  0E7E               	swapf	126,w
  4121  007B  0009               	retfie
  4122  007C                     __end_of_ISR:	
  4123  007C                     __ptext1271:	
  4124 ;; =============== function i1_Filter ends ============
  4125                           
  4126                           
  4127 ;; *************** function _adc_get *****************
  4128 ;; Defined at:
  4129 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  val             2    2[COMMON] unsigned int 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  2    0[COMMON] unsigned int 
  4136 ;; Registers used:
  4137 ;;		wreg
  4138 ;; Tracked objects:
  4139 ;;		On entry : 60/20
  4140 ;;		On exit  : 60/20
  4141 ;;		Unchanged: FFF9F/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4143 ;;      Params:         2       0       0       0       0
  4144 ;;      Locals:         2       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0
  4146 ;;      Totals:         4       0       0       0       0
  4147 ;;Total ram usage:        4 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_ISR
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155  007C                     _adc_get:	
  4156                           
  4157                           ;periph.c: 107: unsigned int val;
  4158                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4159                           
  4160                           ; Regs used in _adc_get: [wreg]
  4161  007C  1283               	bcf	3,5	;RP0=0, select bank0
  4162  007D  081E               	movf	30,w	;volatile
  4163  007E  00F3               	movwf	adc_get@val+1
  4164  007F  01F2               	clrf	adc_get@val
  4165  0080  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0081  081E               	movf	30,w	;volatile
  4167  0082  04F2               	iorwf	adc_get@val,f
  4168                           
  4169                           ;periph.c: 109: return val;
  4170  0083  0873               	movf	adc_get@val+1,w
  4171  0084  00F1               	movwf	?_adc_get+1
  4172  0085  0872               	movf	adc_get@val,w
  4173  0086  00F0               	movwf	?_adc_get
  4174  0087  0008               	return
  4175  0088                     __end_of_adc_get:	
  4176  0088                     __ptext1269:	
  4177 ;; =============== function _vPutSampleDataIntoTable ends ============
  4178                           
  4179                           
  4180 ;; *************** function i1_setAD_ConvertFlag *****************
  4181 ;; Defined at:
  4182 ;;		line 301 in file "D:\develop\190625\AK7030-OTP\common.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  setAD_Conver    1    wreg     unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;		None               void
  4189 ;; Registers used:
  4190 ;;		wreg
  4191 ;; Tracked objects:
  4192 ;;		On entry : 60/0
  4193 ;;		On exit  : 60/0
  4194 ;;		Unchanged: FFF9F/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       0       0       0       0
  4197 ;;      Locals:         1       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0
  4199 ;;      Totals:         1       0       0       0       0
  4200 ;;Total ram usage:        1 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_ISR
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208  0088                     i1_setAD_ConvertFlag:	
  4209                           
  4210                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4211                           ;i1setAD_ConvertFlag@flag stored from wreg
  4212  0088  00F0               	movwf	i1setAD_ConvertFlag@flag
  4213                           
  4214                           ;common.c: 302: adc_convert_flag = flag;
  4215  0089  00D5               	movwf	_adc_convert_flag
  4216  008A  0008               	return
  4217  008B                     __end_ofi1_setAD_ConvertFlag:	
  4218  008B                     __ptext1268:	
  4219 ;; =============== function _ISR ends ============
  4220                           
  4221                           
  4222 ;; *************** function _vPutSampleDataIntoTable *****************
  4223 ;; Defined at:
  4224 ;;		line 111 in file "D:\develop\190625\AK7030-OTP\common.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4227 ;;  channel         1    8[COMMON] unsigned char 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  ucIndex         1   33[BANK0 ] unsigned char 
  4230 ;;  uiCalWidth      2   31[BANK0 ] unsigned int 
  4231 ;;  uiSum           2   29[BANK0 ] unsigned int 
  4232 ;;  i               2   34[BANK0 ] int 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;		None               void
  4235 ;; Registers used:
  4236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 60/20
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: FFE00/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4242 ;;      Params:         3       0       0       0       0
  4243 ;;      Locals:         0       7       0       0       0
  4244 ;;      Temps:          2       0       0       0       0
  4245 ;;      Totals:         5       7       0       0       0
  4246 ;;Total ram usage:       12 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    1
  4249 ;; This function calls:
  4250 ;;		i1_Filter
  4251 ;;		_setPWM_Width
  4252 ;; This function is called by:
  4253 ;;		_ISR
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256  008B                     _vPutSampleDataIntoTable:	
  4257                           
  4258                           ;common.c: 113: static unsigned char ucChannelFirstLength = 0;
  4259                           ;common.c: 115: static unsigned char ucChannelFourthLength = 0;
  4260                           ;common.c: 117: static unsigned char ucChannelFourteenthLength = 0;
  4261                           ;common.c: 119: if(channel == 12)
  4262                           
  4263                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4264  008B  0878               	movf	vPutSampleDataIntoTable@channel,w
  4265  008C  3A0C               	xorlw	12
  4266  008D  1D03               	skipz
  4267  008E  2904               	goto	i1l3728
  4268                           
  4269                           ;common.c: 120: {
  4270                           ;common.c: 121: if(ucChannelFirstLength < 10)
  4271  008F  300A               	movlw	10
  4272  0090  027B               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4273  0091  1803               	skipnc
  4274  0092  28FE               	goto	i1l3724
  4275                           
  4276                           ;common.c: 122: {
  4277                           ;common.c: 123: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4278  0093  1003               	clrc
  4279  0094  0D7B               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4280  0095  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4281  0096  21F8  118A         	fcall	PL3	;call to abstracted procedure
  4282                           
  4283                           ;common.c: 125: ucChannelFirstLength++;
  4284  0098  0AFB               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4285                           
  4286                           ;common.c: 127: if( 10 == ucChannelFirstLength )
  4287  0099  087B               	movf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4288  009A  3A0A               	xorlw	10
  4289  009B  1D03               	skipz
  4290  009C  0008               	return
  4291                           
  4292                           ;common.c: 128: {
  4293                           ;common.c: 131: static unsigned char bInitArrayFlag = 0;
  4294                           ;common.c: 133: static unsigned int uiCalWidthArray[4],uiCalWidthCnt = 0;
  4295                           ;common.c: 135: static unsigned char uiInitWidth = 75;
  4296                           ;common.c: 137: uiCalWidthArray[uiCalWidthCnt++] = Filter(uiSampleChannelFirst);
  4297  009D  3090               	movlw	_uiSampleChannelFirst& (0+255)
  4298  009E  214D  118A         	fcall	i1_Filter
  4299  00A0  1003               	clrc
  4300  00A1  0D52               	rlf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4301  00A2  3E48               	addlw	vPutSampleDataIntoTable@uiCalWidthArray& (0+255)
  4302  00A3  0084               	movwf	4
  4303  00A4  0870               	movf	?i1_Filter,w
  4304  00A5  0080               	movwf	0
  4305  00A6  0A84               	incf	4,f
  4306  00A7  0871               	movf	?i1_Filter+1,w
  4307  00A8  0080               	movwf	0
  4308  00A9  0AD2               	incf	vPutSampleDataIntoTable@uiCalWidthCnt,f
  4309  00AA  1903               	skipnz
  4310  00AB  0AD3               	incf	vPutSampleDataIntoTable@uiCalWidthCnt+1,f
  4311                           
  4312                           ;common.c: 139: if(( 4 == uiCalWidthCnt ) || (1 == bInitArrayFlag))
  4313  00AC  0852               	movf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4314  00AD  3A04               	xorlw	4
  4315  00AE  0453               	iorwf	vPutSampleDataIntoTable@uiCalWidthCnt+1,w
  4316  00AF  1903               	skipnz
  4317  00B0  28B3               	goto	i1l1532
  4318  00B1  0B59               	decfsz	vPutSampleDataIntoTable@bInitArrayFlag,w
  4319  00B2  0008               	return
  4320  00B3                     i1l1532:	
  4321                           
  4322                           ;common.c: 140: {
  4323                           ;common.c: 141: bInitArrayFlag = 1;
  4324  00B3  01D9               	clrf	vPutSampleDataIntoTable@bInitArrayFlag
  4325  00B4  0AD9               	incf	vPutSampleDataIntoTable@bInitArrayFlag,f
  4326                           
  4327                           ;common.c: 143: if(uiCalWidthCnt >= uiCalWidthCnt)
  4328  00B5  0853               	movf	vPutSampleDataIntoTable@uiCalWidthCnt+1,w
  4329  00B6  0253               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt+1,w
  4330  00B7  1D03               	skipz
  4331  00B8  28BB               	goto	u128_25
  4332  00B9  0852               	movf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4333  00BA  0252               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4334  00BB                     u128_25:	
  4335  00BB  1C03               	skipc
  4336  00BC  28BF               	goto	i1l1533
  4337                           
  4338                           ;common.c: 144: uiCalWidthCnt = 0;
  4339  00BD  01D2               	clrf	vPutSampleDataIntoTable@uiCalWidthCnt
  4340  00BE  01D3               	clrf	vPutSampleDataIntoTable@uiCalWidthCnt+1
  4341  00BF                     i1l1533:	
  4342  00BF  01BD               	clrf	vPutSampleDataIntoTable@uiSum
  4343  00C0  01BE               	clrf	vPutSampleDataIntoTable@uiSum+1
  4344                           
  4345                           ;common.c: 148: for(unsigned char ucIndex = 0; ucIndex < 4;ucIndex++)
  4346  00C1  01C1               	clrf	vPutSampleDataIntoTable@ucIndex
  4347                           
  4348                           ;common.c: 149: {
  4349                           ;common.c: 150: uiSum += uiCalWidthArray[ucIndex];
  4350  00C2  1003               	clrc
  4351  00C3                     L15:	
  4352  00C3  0D41               	rlf	vPutSampleDataIntoTable@ucIndex,w
  4353  00C4  3E48               	addlw	vPutSampleDataIntoTable@uiCalWidthArray& (0+255)
  4354  00C5  0084               	movwf	4
  4355  00C6  0800               	movf	0,w
  4356  00C7  00F9               	movwf	??_vPutSampleDataIntoTable
  4357  00C8  0A84               	incf	4,f
  4358  00C9  0800               	movf	0,w
  4359  00CA  00FA               	movwf	??_vPutSampleDataIntoTable+1
  4360  00CB  0879               	movf	??_vPutSampleDataIntoTable,w
  4361  00CC  07BD               	addwf	vPutSampleDataIntoTable@uiSum,f
  4362  00CD  1803               	skipnc
  4363  00CE  0ABE               	incf	vPutSampleDataIntoTable@uiSum+1,f
  4364  00CF  087A               	movf	??_vPutSampleDataIntoTable+1,w
  4365  00D0  07BE               	addwf	vPutSampleDataIntoTable@uiSum+1,f
  4366  00D1  3004               	movlw	4
  4367  00D2  0AC1               	incf	vPutSampleDataIntoTable@ucIndex,f
  4368  00D3  0241               	subwf	vPutSampleDataIntoTable@ucIndex,w
  4369  00D4  1C03               	skipc
  4370  00D5  28C3               	goto	L15
  4371                           
  4372                           ;common.c: 152: }
  4373                           ;common.c: 154: uiCalWidth = uiSum >> 2;
  4374  00D6  083E               	movf	vPutSampleDataIntoTable@uiSum+1,w
  4375  00D7  00C0               	movwf	vPutSampleDataIntoTable@uiCalWidth+1
  4376  00D8  083D               	movf	vPutSampleDataIntoTable@uiSum,w
  4377  00D9  00BF               	movwf	vPutSampleDataIntoTable@uiCalWidth
  4378  00DA  3001               	movlw	1
  4379  00DB  1003               	clrc
  4380  00DC  0CC0               	rrf	vPutSampleDataIntoTable@uiCalWidth+1,f
  4381  00DD  0CBF               	rrf	vPutSampleDataIntoTable@uiCalWidth,f
  4382  00DE  1003               	clrc
  4383  00DF  0CC0               	rrf	vPutSampleDataIntoTable@uiCalWidth+1,f
  4384  00E0  0CBF               	rrf	vPutSampleDataIntoTable@uiCalWidth,f
  4385                           
  4386                           ;common.c: 156: if(uiCalWidth > (312))
  4387  00E1  0240               	subwf	vPutSampleDataIntoTable@uiCalWidth+1,w
  4388  00E2  3039               	movlw	57
  4389  00E3  1903               	skipnz
  4390  00E4  023F               	subwf	vPutSampleDataIntoTable@uiCalWidth,w
  4391  00E5  1C03               	skipc
  4392  00E6  28E9               	goto	i1l3712
  4393                           
  4394                           ;common.c: 157: {
  4395                           ;common.c: 160: uiInitWidth++;
  4396  00E7  0AEE               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4397                           
  4398                           ;common.c: 161: }
  4399  00E8  28F0               	goto	i1l3716
  4400  00E9                     i1l3712:	
  4401                           
  4402                           ;common.c: 162: else if(uiCalWidth < (312))
  4403  00E9  3001               	movlw	1
  4404  00EA  0240               	subwf	vPutSampleDataIntoTable@uiCalWidth+1,w
  4405  00EB  3038               	movlw	56
  4406  00EC  1903               	skipnz
  4407  00ED  023F               	subwf	vPutSampleDataIntoTable@uiCalWidth,w
  4408  00EE  1C03               	btfss	3,0
  4409                           
  4410                           ;common.c: 163: {
  4411                           ;common.c: 166: uiInitWidth--;
  4412  00EF  03EE               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4413  00F0                     i1l3716:	
  4414                           ;common.c: 167: }
  4415                           
  4416                           
  4417                           ;common.c: 171: if(uiInitWidth > 249)
  4418  00F0  30FA               	movlw	250
  4419  00F1  026E               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4420  00F2  1C03               	skipc
  4421  00F3  28F6               	goto	i1l1540
  4422                           
  4423                           ;common.c: 172: uiInitWidth = 249;
  4424  00F4  30F9               	movlw	249
  4425  00F5  00EE               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4426  00F6                     i1l1540:	
  4427                           
  4428                           ;common.c: 174: if(uiInitWidth < 75)
  4429  00F6  304B               	movlw	75
  4430  00F7  026E               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4431  00F8  1803               	skipnc
  4432  00F9  28FC               	goto	i1l3722
  4433                           
  4434                           ;common.c: 175: uiInitWidth = 75;
  4435  00FA  304B               	movlw	75
  4436  00FB  00EE               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4437  00FC                     i1l3722:	
  4438                           
  4439                           ;common.c: 179: setPWM_Width(uiInitWidth);
  4440  00FC  086E               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4441  00FD  29E6               	ljmp	_setPWM_Width
  4442  00FE                     i1l3724:	
  4443                           
  4444                           ;common.c: 208: else
  4445                           ;common.c: 209: {
  4446                           ;common.c: 210: ucChannelFirstLength = 0;
  4447  00FE  01FB               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4448                           
  4449                           ;common.c: 212: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4450  00FF  1003               	clrc
  4451  0100  0D7B               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4452  0101  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4453  0102  21F8               	fcall	PL3	;call to abstracted procedure
  4454                           
  4455                           ;common.c: 213: }
  4456                           ;common.c: 214: }
  4457  0103  0008               	return
  4458  0104                     i1l3728:	
  4459                           
  4460                           ;common.c: 215: else if(channel == 13)
  4461  0104  0878               	movf	vPutSampleDataIntoTable@channel,w
  4462  0105  3A0D               	xorlw	13
  4463  0106  1D03               	skipz
  4464  0107  2916               	goto	i1l3740
  4465                           
  4466                           ;common.c: 216: {
  4467                           ;common.c: 217: if(ucChannelFourthLength < 10)
  4468  0108  300A               	movlw	10
  4469  0109  027D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4470  010A  1803               	skipnc
  4471  010B  2911               	goto	i1l3736
  4472                           
  4473                           ;common.c: 218: {
  4474                           ;common.c: 219: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4475  010C  1003               	clrc
  4476  010D  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4477  010E  21EF               	fcall	PL2	;call to abstracted procedure
  4478                           
  4479                           ;common.c: 221: ucChannelFourthLength++;
  4480  010F  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4481                           
  4482                           ;common.c: 222: }
  4483  0110  0008               	return
  4484  0111                     i1l3736:	
  4485                           
  4486                           ;common.c: 223: else
  4487                           ;common.c: 224: {
  4488                           ;common.c: 225: ucChannelFourthLength = 0;
  4489  0111  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4490                           
  4491                           ;common.c: 227: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4492  0112  1003               	clrc
  4493  0113  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4494  0114  21EF               	fcall	PL2	;call to abstracted procedure
  4495  0115  0008               	return
  4496  0116                     i1l3740:	
  4497                           
  4498                           ;common.c: 230: else if(channel == 14)
  4499  0116  0878               	movf	vPutSampleDataIntoTable@channel,w
  4500  0117  3A0E               	xorlw	14
  4501  0118  1D03               	skipz
  4502  0119  2929               	goto	i1l3752
  4503                           
  4504                           ;common.c: 231: {
  4505                           ;common.c: 232: if(ucChannelFourteenthLength < 10)
  4506  011A  300A               	movlw	10
  4507  011B  027C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4508  011C  1803               	skipnc
  4509  011D  2924               	goto	i1l3748
  4510                           
  4511                           ;common.c: 233: {
  4512                           ;common.c: 234: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4513  011E  1003               	clrc
  4514  011F  0D7C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4515  0120  3EA4               	addlw	_uiSampleChannelFourteenth& (0+255)
  4516  0121  21F8               	fcall	PL3	;call to abstracted procedure
  4517                           
  4518                           ;common.c: 236: ucChannelFourteenthLength++;
  4519  0122  0AFC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4520                           
  4521                           ;common.c: 237: }
  4522  0123  0008               	return
  4523  0124                     i1l3748:	
  4524                           
  4525                           ;common.c: 238: else
  4526                           ;common.c: 239: {
  4527                           ;common.c: 240: ucChannelFourteenthLength = 0;
  4528  0124  01FC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4529                           
  4530                           ;common.c: 242: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4531  0125  1003               	clrc
  4532  0126  0D7C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4533  0127  21EF               	fcall	PL2	;call to abstracted procedure
  4534  0128  0008               	return
  4535  0129                     i1l3752:	
  4536                           
  4537                           ;common.c: 245: else
  4538                           ;common.c: 246: {
  4539                           ;common.c: 247: ucChannelFirstLength = 0;
  4540  0129  01FB               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4541                           
  4542                           ;common.c: 249: ucChannelFourthLength = 0;
  4543  012A  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4544                           
  4545                           ;common.c: 251: ucChannelFourteenthLength = 0;
  4546  012B  01FC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4547                           
  4548                           ;common.c: 253: for(int i = 0;i < 10; i++)
  4549  012C  1283               	bcf	3,5	;RP0=0, select bank0
  4550  012D  01C2               	clrf	vPutSampleDataIntoTable@i
  4551  012E  01C3               	clrf	vPutSampleDataIntoTable@i+1
  4552  012F                     i1l3758:	
  4553                           
  4554                           ;common.c: 254: {
  4555                           ;common.c: 255: uiSampleChannelFirst[i] = 0;
  4556  012F  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0130  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0131  1003               	clrc
  4559  0132  0D42               	rlf	vPutSampleDataIntoTable@i,w
  4560  0133  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4561  0134  0084               	movwf	4
  4562  0135  1783               	bsf	3,7	;select IRP bank3
  4563                           
  4564                           ;common.c: 257: uiSampleChannelFourth[i] = 0;
  4565  0136  220A  118A         	fcall	PL6	;call to abstracted procedure
  4566  0138  1383               	bcf	3,7	;select IRP bank0
  4567                           
  4568                           ;common.c: 259: uiSampleChannelFourth[i] = 0;
  4569  0139  220A  118A         	fcall	PL6	;call to abstracted procedure
  4570  013B  0180               	clrf	0
  4571  013C  0A84               	incf	4,f
  4572  013D  0180               	clrf	0
  4573  013E  0AC2               	incf	vPutSampleDataIntoTable@i,f
  4574  013F  1903               	skipnz
  4575  0140  0AC3               	incf	vPutSampleDataIntoTable@i+1,f
  4576  0141  0843               	movf	vPutSampleDataIntoTable@i+1,w
  4577  0142  3A80               	xorlw	128
  4578  0143  00FF               	movwf	127
  4579  0144  3080               	movlw	128
  4580  0145  027F               	subwf	127,w
  4581  0146  1D03               	skipz
  4582  0147  294A               	goto	u138_25
  4583  0148  300A               	movlw	10
  4584  0149  0242               	subwf	vPutSampleDataIntoTable@i,w
  4585  014A                     u138_25:	
  4586  014A  1803               	btfsc	3,0
  4587  014B  0008               	return
  4588  014C  292F               	goto	i1l3758
  4589  014D                     __end_of_vPutSampleDataIntoTable:	
  4590  014D                     __ptext1270:	
  4591 ;; =============== function i1_setAD_ConvertFlag ends ============
  4592                           
  4593                           
  4594 ;; *************** function i1_Filter *****************
  4595 ;; Defined at:
  4596 ;;		line 64 in file "D:\develop\190625\AK7030-OTP\common.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  Filter          1    wreg     PTR int 
  4599 ;;		 -> uiSampleChannelFirst(20), 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  Filter          1   20[BANK0 ] PTR int 
  4602 ;;		 -> uiSampleChannelFirst(20), 
  4603 ;;  Filter         20    0[BANK0 ] unsigned int [10]
  4604 ;;  Filter          2   25[BANK0 ] int 
  4605 ;;  Filter          2   23[BANK0 ] unsigned int 
  4606 ;;  Filter          2   21[BANK0 ] unsigned int 
  4607 ;;  Filter          1   28[BANK0 ] unsigned char 
  4608 ;;  Filter          1   27[BANK0 ] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2    0[COMMON] unsigned int 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4613 ;; Tracked objects:
  4614 ;;		On entry : 160/120
  4615 ;;		On exit  : 160/0
  4616 ;;		Unchanged: FFE00/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         2       0       0       0       0
  4619 ;;      Locals:         0      29       0       0       0
  4620 ;;      Temps:          4       0       0       0       0
  4621 ;;      Totals:         6      29       0       0       0
  4622 ;;Total ram usage:       35 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_vPutSampleDataIntoTable
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630  014D                     i1_Filter:	
  4631                           
  4632                           ; Regs used in i1_Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4633                           ;i1Filter@tmpValue stored from wreg
  4634  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4635  014E  00B4               	movwf	i1Filter@tmpValue
  4636  014F  01BB               	clrf	i1Filter@j
  4637                           
  4638                           ;common.c: 68: unsigned int filter_temp = 0, filter_sum = 0;
  4639  0150  01B5               	clrf	i1Filter@filter_temp
  4640  0151  01B6               	clrf	i1Filter@filter_temp+1
  4641  0152  01B7               	clrf	i1Filter@filter_sum
  4642  0153  01B8               	clrf	i1Filter@filter_sum+1
  4643                           
  4644                           ;common.c: 70: unsigned int filter_buf[10];
  4645                           ;common.c: 72: for(int cir = 0;cir < 10; cir++)
  4646  0154  01B9               	clrf	i1Filter@cir
  4647  0155  01BA               	clrf	i1Filter@cir+1
  4648  0156                     i1l3828:	
  4649                           
  4650                           ;common.c: 73: filter_buf[cir] = *tmpValue++;
  4651  0156  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0157  1303               	bcf	3,6	;RP1=0, select bank0
  4653  0158  0834               	movf	i1Filter@tmpValue,w
  4654  0159  0084               	movwf	4
  4655  015A  1783               	bsf	3,7
  4656  015B  1C35               	btfss	i1Filter@tmpValue+1,0
  4657  015C  1383               	bcf	3,7
  4658  015D  0800               	movf	0,w
  4659  015E  2218  118A         	fcall	PL9	;call to abstracted procedure
  4660  0160  0D39               	rlf	i1Filter@cir,w
  4661  0161  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4662  0162  0084               	movwf	4
  4663  0163  0872               	movf	??i1_Filter,w
  4664  0164  1383               	bcf	3,7	;select IRP bank0
  4665  0165  0080               	movwf	0
  4666  0166  0A84               	incf	4,f
  4667  0167  0873               	movf	??i1_Filter+1,w
  4668  0168  0080               	movwf	0
  4669  0169  3002               	movlw	2
  4670  016A  07B4               	addwf	i1Filter@tmpValue,f
  4671  016B  1803               	skipnc
  4672  016C  0AB5               	incf	i1Filter@tmpValue+1,f
  4673  016D  0AB9               	incf	i1Filter@cir,f
  4674  016E  1903               	skipnz
  4675  016F  0ABA               	incf	i1Filter@cir+1,f
  4676  0170  083A               	movf	i1Filter@cir+1,w
  4677  0171  3A80               	xorlw	128
  4678  0172  00FF               	movwf	127
  4679  0173  3080               	movlw	128
  4680  0174  027F               	subwf	127,w
  4681  0175  1D03               	skipz
  4682  0176  2979               	goto	u151_25
  4683  0177  300A               	movlw	10
  4684  0178  0239               	subwf	i1Filter@cir,w
  4685  0179                     u151_25:	
  4686  0179  1C03               	skipc
  4687  017A  2956               	goto	i1l3828
  4688                           
  4689                           ;common.c: 77: for(j = 0; j < 10 - 1; j++)
  4690  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4691  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4692  017D  01BB               	clrf	i1Filter@j
  4693                           
  4694                           ;common.c: 78: {
  4695                           ;common.c: 79: for(i = 0; i < 10 - 1 - j; i++)
  4696  017E  01BC               	clrf	i1Filter@i
  4697  017F                     i1l3850:	
  4698  017F  01F3               	clrf	??i1_Filter+1
  4699  0180  083B               	movf	i1Filter@j,w
  4700  0181  3C09               	sublw	9
  4701  0182  00F2               	movwf	??i1_Filter
  4702  0183  1C03               	skipc
  4703  0184  03F3               	decf	??i1_Filter+1,f
  4704  0185  0873               	movf	??i1_Filter+1,w
  4705  0186  3A80               	xorlw	128
  4706  0187  3C80               	sublw	128
  4707  0188  1D03               	skipz
  4708  0189  298C               	goto	u153_25
  4709  018A  0872               	movf	??i1_Filter,w
  4710  018B  023C               	subwf	i1Filter@i,w
  4711  018C                     u153_25:	
  4712  018C  1803               	btfsc	3,0
  4713  018D  29C1               	goto	i1l3852
  4714                           
  4715                           ;common.c: 80: {
  4716                           ;common.c: 81: if(filter_buf[i] > filter_buf[i + 1])
  4717  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4718  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4719  0190  1003               	clrc
  4720  0191  2200  118A         	fcall	PL4	;call to abstracted procedure
  4721  0193  2212  118A         	fcall	PL7	;call to abstracted procedure
  4722  0195  0800               	movf	0,w
  4723  0196  00F4               	movwf	??i1_Filter+2
  4724  0197  0A84               	incf	4,f
  4725  0198  0800               	movf	0,w
  4726  0199  00F5               	movwf	??i1_Filter+3
  4727  019A  0873               	movf	??i1_Filter+1,w
  4728  019B  0275               	subwf	??i1_Filter+3,w
  4729  019C  1D03               	skipz
  4730  019D  29A0               	goto	u152_25
  4731  019E  0872               	movf	??i1_Filter,w
  4732  019F  0274               	subwf	??i1_Filter+2,w
  4733  01A0                     u152_25:	
  4734  01A0  1803               	skipnc
  4735  01A1  29BF               	goto	i1l3848
  4736                           
  4737                           ;common.c: 82: {
  4738                           ;common.c: 84: filter_temp = filter_buf[i];
  4739  01A2  1003               	clrc
  4740  01A3  0D3C               	rlf	i1Filter@i,w
  4741  01A4  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4742  01A5  0084               	movwf	4
  4743  01A6  0800               	movf	0,w
  4744  01A7  00B5               	movwf	i1Filter@filter_temp
  4745  01A8  0A84               	incf	4,f
  4746  01A9  0800               	movf	0,w
  4747  01AA  00B6               	movwf	i1Filter@filter_temp+1
  4748                           
  4749                           ;common.c: 86: filter_buf[i] = filter_buf[i + 1];
  4750  01AB  2212  118A         	fcall	PL7	;call to abstracted procedure
  4751  01AD  0800               	movf	0,w
  4752  01AE  2218  118A         	fcall	PL9	;call to abstracted procedure
  4753  01B0  0D3C               	rlf	i1Filter@i,w
  4754  01B1  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4755  01B2  0084               	movwf	4
  4756  01B3  0872               	movf	??i1_Filter,w
  4757  01B4  0080               	movwf	0
  4758  01B5  0A84               	incf	4,f
  4759  01B6  0873               	movf	??i1_Filter+1,w
  4760  01B7  0080               	movwf	0
  4761                           
  4762                           ;common.c: 88: filter_buf[i + 1] = filter_temp;
  4763  01B8  2212  118A         	fcall	PL7	;call to abstracted procedure
  4764  01BA  0835               	movf	i1Filter@filter_temp,w
  4765  01BB  0080               	movwf	0
  4766  01BC  0A84               	incf	4,f
  4767  01BD  0836               	movf	i1Filter@filter_temp+1,w
  4768  01BE  0080               	movwf	0
  4769  01BF                     i1l3848:	
  4770  01BF  0ABC               	incf	i1Filter@i,f
  4771  01C0  297F               	goto	i1l3850
  4772  01C1                     i1l3852:	
  4773  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  4774  01C2  3009               	movlw	9
  4775  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  4776  01C4  0ABB               	incf	i1Filter@j,f
  4777  01C5  023B               	subwf	i1Filter@j,w
  4778                           
  4779                           ;common.c: 89: }
  4780                           ;common.c: 90: }
  4781                           ;common.c: 91: }
  4782                           ;common.c: 93: for(i = 1; i < 10 - 1; i++)
  4783  01C6  01BC               	clrf	i1Filter@i
  4784  01C7  1C03               	skipc
  4785  01C8  297F               	goto	i1l3850
  4786  01C9  0ABC               	incf	i1Filter@i,f
  4787                           
  4788                           ;common.c: 94: {
  4789                           ;common.c: 95: filter_sum += filter_buf[i];
  4790  01CA  1003               	clrc
  4791  01CB                     L16:	
  4792  01CB  2200  118A         	fcall	PL4	;call to abstracted procedure
  4793  01CD  0872               	movf	??i1_Filter,w
  4794  01CE  07B7               	addwf	i1Filter@filter_sum,f
  4795  01CF  1803               	skipnc
  4796  01D0  0AB8               	incf	i1Filter@filter_sum+1,f
  4797  01D1  0873               	movf	??i1_Filter+1,w
  4798  01D2  07B8               	addwf	i1Filter@filter_sum+1,f
  4799  01D3  3009               	movlw	9
  4800  01D4  0ABC               	incf	i1Filter@i,f
  4801  01D5  023C               	subwf	i1Filter@i,w
  4802  01D6  1C03               	skipc
  4803  01D7  29CB               	goto	L16
  4804                           
  4805                           ;common.c: 96: }
  4806                           ;common.c: 98: return (filter_sum >> 3);
  4807  01D8  0838               	movf	i1Filter@filter_sum+1,w
  4808  01D9  00F1               	movwf	?i1_Filter+1
  4809  01DA  0837               	movf	i1Filter@filter_sum,w
  4810  01DB  00F0               	movwf	?i1_Filter
  4811  01DC  1003               	clrc
  4812  01DD  0CF1               	rrf	?i1_Filter+1,f
  4813  01DE  0CF0               	rrf	?i1_Filter,f
  4814  01DF  1003               	clrc
  4815  01E0  0CF1               	rrf	?i1_Filter+1,f
  4816  01E1  0CF0               	rrf	?i1_Filter,f
  4817  01E2  1003               	clrc
  4818  01E3  0CF1               	rrf	?i1_Filter+1,f
  4819  01E4  0CF0               	rrf	?i1_Filter,f
  4820  01E5  0008               	return
  4821  01E6                     __end_ofi1_Filter:	
  4822  01E6                     __ptext1272:	
  4823 ;; =============== function _adc_get ends ============
  4824                           
  4825                           
  4826 ;; *************** function _setPWM_Width *****************
  4827 ;; Defined at:
  4828 ;;		line 54 in file "D:\develop\190625\AK7030-OTP\common.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  ucWidth         1    wreg     unsigned char 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  ucWidth         1    0[COMMON] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;		None               void
  4835 ;; Registers used:
  4836 ;;		wreg
  4837 ;; Tracked objects:
  4838 ;;		On entry : 160/0
  4839 ;;		On exit  : 160/0
  4840 ;;		Unchanged: FFE9F/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       0       0       0       0
  4843 ;;      Locals:         1       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0
  4845 ;;      Totals:         1       0       0       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_vPutSampleDataIntoTable
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854  01E6                     _setPWM_Width:	
  4855                           
  4856                           ; Regs used in _setPWM_Width: [wreg]
  4857                           ;setPWM_Width@ucWidth stored from wreg
  4858  01E6  00F0               	movwf	setPWM_Width@ucWidth
  4859                           
  4860                           ;common.c: 55: static unsigned char ucOldWidth = 0;
  4861                           ;common.c: 56: if( ucOldWidth != ucWidth)
  4862  01E7  0658               	xorwf	setPWM_Width@ucOldWidth,w
  4863  01E8  1903               	skipnz
  4864  01E9  0008               	return
  4865                           
  4866                           ;common.c: 57: {
  4867                           ;common.c: 58: CCPR1L = ucWidth;
  4868  01EA  0870               	movf	setPWM_Width@ucWidth,w
  4869  01EB  0095               	movwf	21	;volatile
  4870                           
  4871                           ;common.c: 59: ucOldWidth = ucWidth;
  4872  01EC  0870               	movf	setPWM_Width@ucWidth,w
  4873  01ED  00D8               	movwf	setPWM_Width@ucOldWidth
  4874  01EE  0008               	return
  4875  01EF                     __end_of_setPWM_Width:	
  4876  01EF                     PL2:	
  4877  01EF  3E5A               	addlw	_uiSampleChannelFourth& (0+255)
  4878  01F0  0084               	movwf	4
  4879  01F1  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4880  01F2  1383               	bcf	3,7	;select IRP bank0
  4881  01F3  0080               	movwf	0
  4882  01F4  0A84               	incf	4,f
  4883  01F5  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4884  01F6  0080               	movwf	0
  4885  01F7  0008               	return
  4886  01F8                     PL3:	
  4887  01F8  0084               	movwf	4
  4888  01F9  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4889  01FA  1783               	bsf	3,7	;select IRP bank3
  4890  01FB  0080               	movwf	0
  4891  01FC  0A84               	incf	4,f
  4892  01FD  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4893  01FE  0080               	movwf	0
  4894  01FF  0008               	return
  4895  0200                     PL4:	
  4896  0200  0D3C               	rlf	i1Filter@i,w
  4897  0201  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4898  0202  0084               	movwf	4
  4899  0203  1383               	bcf	3,7	;select IRP bank0
  4900  0204  0800               	movf	0,w
  4901  0205  00F2               	movwf	??i1_Filter
  4902  0206  0A84               	incf	4,f
  4903  0207  0800               	movf	0,w
  4904  0208  00F3               	movwf	??i1_Filter+1
  4905  0209  0008               	return
  4906  020A                     PL6:	
  4907  020A  0180               	clrf	0
  4908  020B  0A84               	incf	4,f
  4909  020C  0180               	clrf	0
  4910  020D  1003               	clrc
  4911  020E  0D42               	rlf	vPutSampleDataIntoTable@i,w
  4912  020F  3E5A               	addlw	_uiSampleChannelFourth& (0+255)
  4913  0210  0084               	movwf	4
  4914  0211  0008               	return
  4915  0212                     PL7:	
  4916  0212  1003               	clrc
  4917  0213  0D3C               	rlf	i1Filter@i,w
  4918  0214  3E02               	addlw	2
  4919  0215  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4920  0216  0084               	movwf	4
  4921  0217  0008               	return
  4922  0218                     PL9:	
  4923  0218  00F2               	movwf	??i1_Filter
  4924  0219  0A84               	incf	4,f
  4925  021A  0800               	movf	0,w
  4926  021B  00F3               	movwf	??i1_Filter+1
  4927  021C  1003               	clrc
  4928  021D  0008               	return
  4929                           
  4930                           	psect	intentry
  4931  0004                     __pintentry:	
  4932                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4933                           
  4934  0004                     interrupt_function:	
  4935  007E                     saved_w	set	btemp
  4936  0004  00FE               	movwf	btemp
  4937  0005  0E03               	swapf	3,w
  4938  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4939  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4940  0008  00C4               	movwf	??_ISR
  4941  0009  0804               	movf	4,w
  4942  000A  00C5               	movwf	??_ISR+1
  4943  000B  080A               	movf	10,w
  4944  000C  00C6               	movwf	??_ISR+2
  4945  000D  087F               	movf	btemp+1,w
  4946  000E  00C7               	movwf	??_ISR+3
  4947  000F  118A  2813         	ljmp	_ISR
  4948                           
  4949                           	psect	text1273
  4950  0000                     __ptext1273:	
  4951 ;; =============== function _setPWM_Width ends ============
  4952                           
  4953  007E                     btemp	set	126	;btemp
  4954  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Nov 12 06:20:15 2019

                                  ??_clock_config 00A0                               ?_startOneHoursTimer 00A0  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l702 0520  
                                             l712 0000                                               l721 0000  
                                             l707 04F7                                               l715 0000  
                                             l724 0000                                               l718 0000  
                                             l727 05F1                                               l682 050B  
                                             l692 0518                                               l758 0279  
                                             l687 04E1                                               l697 04EC  
                                             _GIE 005F                                               _PB2 0032  
                                             _PB3 0033                                               _PB4 0034  
                                             _PB5 0035                                               _PR2 0092  
                                             _ISR 0013                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 00A2  
                                            ?_ISR 0070                              ??_startOneHoursTimer 00A2  
                              __size_of_AD_Sample 0015                                              l1510 0000  
                                            l4100 0000                                              l1605 0000  
                                            l4102 0000                                              l4110 0000  
                                            l2350 0000                                              l1608 0000  
                                            l4112 0000                                              l4104 0000  
                                            l4120 0000                                              l2344 0000  
                                            l1561 0000                                              l1617 0000  
                                            l4114 0000                                              l4106 0000  
                                            l4122 0000                                              l4130 0000  
                                            l4210 0000                                              l1570 0000  
                                            l4116 0000                                              l4108 0000  
                                            l4124 0000                                              l1564 0000  
                                            l3500 0000                                              l4132 0000  
                                            l4140 04CD                                              l4204 0000  
                                            l4212 0000                                              l4300 0000  
                                            l1573 0000                                              l4118 0000  
                                            l1558 05D1                                              l4126 0000  
                                            l3502 0000                                              l4142 0000  
                                            l4206 0000                                              l4222 0000  
                                            l4230 0000                                              l4302 0000  
                                            l1567 0000                                              l4080 0000  
                                            l4128 0000                                              l4160 0000  
                                            l4400 0000                                              l4312 025B  
                                            l4304 024D                                              l4074 0000  
                                            l4082 0000                                              l4090 0000  
                                            l4138 0000                                              l1666 0000  
                                            l4154 0000                                              l4162 0000  
                                            l4234 0000                                              l4250 0000  
                                            l4410 0000                                              l4402 030C  
                                            l4330 027A                                              l4322 0271  
                                            l4306 0000                                              l1579 0000  
                                            l4076 0000                                              l4084 0000  
                                            l4092 0000                                              l4156 0000  
                                            l4172 0000                                              l4180 0000  
                                            l4228 0000                                              l4236 0000  
                                            l4260 0000                                              l4252 0000  
                                            l4420 033C                                              l4404 030E  
                                            l4340 0297                                              l4332 0000  
                                            l4324 0272                                              l4316 0000  
                                            l4308 0000                                              l4078 0000  
                                            l4086 0000                                              l4094 0000  
                                            l4174 0000                                              l4182 0000  
                                            l3630 0000                                              l3622 0000  
                                            l4246 0000                                              l4270 0000  
                                            l4430 035D                                              l4342 0299  
                                            l4334 0000                                              l4318 0265  
                                            l4088 0000                                              l4096 0000  
                                            l3632 0000                                              l4264 04AF  
                                            l4256 0000                                              l4272 0000  
                                            l4280 0000                                              l4432 0364  
                                            l4424 0000                                              l4408 0000  
                                            l4352 0000                                              l4336 0000  
                                            l4328 0000                                              l4098 0000  
                                            l4186 0000                                              l3650 0400  
                                            l3634 0000                                              l4266 0000  
                                            l4274 0000                                              l4442 0382  
                                            l4434 0368                                              l4418 0338  
                                            l4354 02AD                                              l4346 02A5  
                                            l4338 0291                                              l3492 0000  
                                            l4188 0000                                              l3652 0442  
                                            l3628 03D7                                              l4268 0000  
                                            l4276 0000                                              l4452 0396  
                                            l4444 0000                                              l4436 0000  
                                            l4428 035B                                              l4380 0000  
                                            l4372 0000                                              l4356 0000  
                                            l4348 02A6                                              l4292 0000  
                                            l3494 0000                                              l4198 0000  
                                            l3662 0000                                              l3654 0000  
                                            l4454 0397                                              l4446 0386  
                                            l4438 0377                                              l4382 0000  
                                            l4374 02D2                                              l4366 02CA  
                                            l4358 02B8                                              l4294 0000  
                                            l3496 0000                                              l3664 0000  
                                            l3648 0440                                              l4288 0000  
                                            l4448 0000                                              l4384 0000  
                                            l4376 0000                                              l4368 02CB  
                                            l4464 03A0                                              l4296 0000  
                                            l3498 0000                                              l4458 039E  
                                            l4386 02E9                                              l4378 0000  
                                            l4298 0000                                              l3668 0000  
                                            l4388 0000                                              l4398 0307  
                                            _ADIE 046A                                              _ADIF 006A  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 00A0  
                                            u1205 040D                                              u1185 03FA  
                                            u1195 0421                                              u2317 0245  
                                            _PEIE 005E                                              _main 021E  
                                            btemp 007E                                              start 0011  
                         ?_getAdOriginalCh13Value 00C2                        ??_isFinishedTwentyMinTimer 00A0  
                                           ??_ISR 0044                                 ??_setPinInitVaule 00A1  
                      __end_of_isPermitSampleTime 05DE                               _sampleChannelSelect 00E2  
                                           ?_main 0070                                             _CLKPR 0108  
                                           _T1CON 0010                                             _T2CON 0012  
                                 __end_of_adc_get 0088                                             _PBOD2 0C42  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 00A0                                 ??_selectAdChannel 00A0  
                                __end_ofi1_Filter 01E6                                   __end_of_initPB3 050D  
                                 __end_of_initPB4 051A                                   __end_of_initPB5 0522  
                         _vPutSampleDataIntoTable 008B                                   __end_of_initPin 0504  
                                           _reset 05F1                                             _timer 0057  
                                           pclath 000A                               main@uiTimerThreeP5s 00D5  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03D0                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 05F1                                  i1Filter@tmpValue 0034  
                                    __end_of_main 03C6                            __size_of_adc_test_init 001B  
                               __end_of_AD_Sample 04B2                                            ??_main 00C4  
                             setPWM_Width@ucWidth 0070                                     main@ucChValue 00C5  
                                   main@ucDelay1s 00D1                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 05D4  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l1510 0000  
                                          i1l1540 00F6                                            i1l1532 00B3  
                                          i1l1533 00BF                                            i1l2353 0000  
                                          i1l1573 0000                                            i1l1690 0032  
                                          i1l1691 003D                                            i1l3700 0000  
                                          i1l1692 0048                                            i1l3702 0000  
                                          i1l3712 00E9                                            i1l1697 006F  
                                          i1l1689 0028                                            i1l3618 0000  
                                          i1l3722 00FC                                            i1l3706 0000  
                                          i1l3810 0000                                            i1l3740 0116  
                                          i1l3716 00F0                                            i1l3708 0000  
                                          i1l3724 00FE                                            i1l3812 0000  
                                          i1l3830 0000                                            i1l3822 0000  
                                          i1l3750 0000                                            i1l3734 0000  
                                          i1l3726 0000                                            i1l3806 0052  
                                          i1l3832 0000                                            i1l3760 0000  
                                          i1l3752 0129                                            i1l3736 0111  
                                          i1l3680 0000                                            i1l3728 0104  
                                          i1l3672 0000                                            i1l3816 0066  
                                          i1l3818 0000                                            i1l3850 017F  
                                          i1l3834 0000                                            i1l3762 0000  
                                          i1l3746 0000                                            i1l3738 0000  
                                          i1l3690 0000                                            i1l3852 01C1  
                                          i1l3828 0156                                            i1l3748 0124  
                                          i1l3684 0000                                            i1l3862 0000  
                                          i1l3854 0000                                            i1l3758 012F  
                                          i1l3686 0000                                            i1l3678 0000  
                                          i1l3790 0000                                            i1l3864 0000  
                                          i1l3848 01BF                                            i1l3872 0000  
                                          i1l3784 0000                                            i1l3794 0000  
                                          i1l3868 0000                                            i1l3788 0000  
                                          u151_25 0179                                            u152_25 01A0  
                                          u128_25 00BB                                            u153_25 018C  
                                          u138_25 014A                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 0494  
                               _setAD_ConvertFlag 0498                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 03D0                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 00A0                     __size_of_clearThreeHoursTimer 0005  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 00A0  
                          setPWM_Width@ucOldWidth 0058                               ??_setAD_ConvertFlag 00A0  
                                          _setPB3 04D9                                            _setPB4 04E4  
                                          _setPB5 04EF                       __end_of_clearTwentyMinTimer 05D9  
                                          clrloop 05C5                                  Filter@filter_buf 00A6  
                                       ??_initPB3 00A0                                         ??_initPB4 00A0  
                                       ??_initPB5 00A0                                  Filter@filter_sum 00BC  
                                       ??_initPin 00A1                         ??_vPutSampleDataIntoTable 0079  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 00A0  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 04B2  
                       __end_of_getAD_ConvertFlag 0498                         __end_of_setAD_ConvertFlag 049D  
                                   ?_setPWM_Width 0070                                __size_of_adc_start 0004  
                        _initPB2_AsHighResistence 050D                  __size_of_isFinishedOneHoursTimer 000A  
                __end_of_isFinishedTwentyMinTimer 05B0                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                      __pidataBANK1 0000  
                               main@uiTimerOneP5s 00D3                                         ?i1_Filter 0070  
                                   __end_of_reset 05E8                                 main@uiTimerTwoP5s 00D7  
                            _uiSampleChannelFirst 0190                    vPutSampleDataIntoTable@channel 0078  
                       _isFinishedThreeHoursTimer 058F                             __end_of_timer1_config 05C4  
                                  ?_adc_test_init 00A0                    vPutSampleDataIntoTable@ucIndex 0041  
                     __end_of_startTwentyMinTimer 058F       vPutSampleDataIntoTable@ucChannelFirstLength 007B  
                                         ??_reset 00A0                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0048  
                                      __pbssBANK1 00C9                                        __pbssBANK3 0190  
                                  ??_setPWM_Width 0070                      __size_ofi1_setAD_ConvertFlag 0003  
                                 _setPinInitVaule 04D1                                        adc_get@val 0072  
                                _uiTwentyMinTimer 00CF                   __end_of_vPutSampleDataIntoTable 014D  
                                         ?_Filter 00A0                                        __pmaintext 021E  
                                 _selectAdChannel 05E8                                        ??i1_Filter 0072  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                      __ptext1231 03C6                                        __ptext1240 0557  
                                      __ptext1232 047D                                        __ptext1241 058F  
                                      __ptext1233 04D1                                        __ptext1250 0581  
                                      __ptext1242 0565                                        __ptext1234 04FA  
                                      __ptext1251 04B2                                        __ptext1243 059A  
                                      __ptext1235 049D                                        __ptext1260 051A  
                                      __ptext1252 05EC                                        __ptext1244 0573  
                                      __ptext1236 0498                                        __ptext1261 04E4  
                                      __ptext1253 05BA                                        __ptext1245 05D4  
                                      __ptext1237 0494                                        __ptext1270 014D  
                                      __ptext1262 0512                                        __ptext1254 05CC  
                                      __ptext1246 05A5                                        __ptext1238 03D0  
                                         ?_setPB3 0070                                        __ptext1271 007C  
                                      __ptext1263 04D9                                        __ptext1255 05F1  
                                      __ptext1247 05EF                                        __ptext1239 05B0  
                                         ?_setPB4 0070                                        __ptext1272 01E6  
                                      __ptext1264 0504                                        __ptext1256 05E8  
                                      __ptext1248 05D9                                           ?_setPB5 0070  
                                      __ptext1273 0000                                        __ptext1265 05DE  
                                      __ptext1257 0541                                        __ptext1249 04CD  
                                      __ptext1266 05E3                                        __ptext1258 050D  
                                      __ptext1267 0013                                        __ptext1259 04EF  
                                      __ptext1268 008B                                        __ptext1269 0088  
                           __size_of_clock_config 0008                                      _clrSampeTime 05EF  
                               __end_of_adc_start 04D1                              _uiTwentySecondsTimer 0050  
                              _isPermitSampleTime 05D9                                           Filter@i 00C1  
                                         Filter@j 00C0                                __size_of_pwm_start 0016  
                     __size_of_startOneHoursTimer 000E                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
           vPutSampleDataIntoTable@bInitArrayFlag 0059                                    main@ucTimerP3s 00E0  
                                  main@ucTimerP5s 00E1                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0097                                        _uiBigTimer 00C9  
                                    setPB3@bValue 00A0                                i1Filter@filter_buf 0020  
                                    setPB4@bValue 00A0                                i1Filter@filter_sum 0037  
                                    _clock_config 05CC                                      setPB5@bValue 00A0  
                                         _adc_get 007C                                   __size_of_setPB3 000B  
                                 __size_of_setPB4 000B                                   __size_of_setPB5 000B  
                            ??_isPermitSampleTime 00A0                      __end_of_startTwelveHourTimer 0581  
                                   initPB3@bValue 00A0                                     initPB4@bValue 00A0  
                                       _AD_Sample 049D                                           _initPB3 0504  
                                         _initPB4 0512                                           _initPB5 051A  
                                    __size_of_ISR 0069                                     initPB5@bValue 00A0  
                                         _initPin 04FA                              _bSmallTimerStartFlag 00DB  
                                 ??_adc_test_init 00A1                      vPutSampleDataIntoTable@uiSum 003D  
               __size_of_isFinishedTwentyMinTimer 000B                         ?_isFinishedTwentyMinTimer 0070  
                         __end_of_setPinInitVaule 04D9                              end_of_initialization 053E  
                               Filter@filter_temp 00BA                             pwm_start@ucPulseWidth 00A1  
                         __end_of_selectAdChannel 05EC                           _isFinishedOneHoursTimer 05B0  
                                       i1Filter@i 003C                                         i1Filter@j 003B  
                               __end_of_pwm_start 0557                              __end_of_setPWM_Width 01EF  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 00A0  
                                       Filter@cir 00BE                               _bTwentyMinStartFlag 00DC  
                                _adc_convert_flag 0055                      __end_of_clearThreeHoursTimer 05E3  
                  __size_of_clearTwelveHoursTimer 0005                           _timer1_interrupt_config 05EC  
                   __end_of_clearTwelveHoursTimer 05E8                        ??_initPB2_AsHighResistence 00A0  
              __size_of_isFinishedThreeHoursTimer 000B                                        main@ucStep 00DF  
                                  __end_of_Filter 0467                     startTwentyMinTimer@uiSetValue 00A0  
             __size_of_isFinishedTwelveHoursTimer 000B                          vPutSampleDataIntoTable@i 0042  
                               __size_ofi1_Filter 0099                               i1_setAD_ConvertFlag 0088  
                                  __end_of_setPB3 04E4                                    __end_of_setPB4 04EF  
                                  __end_of_setPB5 04FA                               start_initialization 0522  
                                     __end_of_ISR 007C                             _uiSampleChannelFourth 005A  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 00C4  
                    __size_of_clearTwentyMinTimer 0005                         ??_isFinishedOneHoursTimer 00A0  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 0573  
               __end_of_isFinishedThreeHoursTimer 059A                                  ?_selectAdChannel 0070  
                                        ??_Filter 00A2                 vPutSampleDataIntoTable@uiCalWidth 003F  
                                     __pdataBANK0 006E                                       __pdataBANK1 00E2  
                                        ??_setPB3 00A0                                          ??_setPB4 00A0  
                                        ??_setPB5 00A0                          ?_vPutSampleDataIntoTable 0076  
                                     ??_AD_Sample 00A0                         ??_timer1_interrupt_config 00A0  
                                     __pbssCOMMON 007B                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00A0                                         _adc_start 04CD  
          vPutSampleDataIntoTable@uiCalWidthArray 0048                             ??i1_setAD_ConvertFlag 0070  
                                 main@uiCh13Value 00C7                             ?_startTwelveHourTimer 00A0  
                    __size_of_startTwentyMinTimer 000E                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 05DE                             __size_of_setPWM_Width 0009  
                    __end_of_startThreeHoursTimer 0573                                 main@cTimerP5s_791 00DD  
                               main@cTimerP5s_797 00DE                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 05BA                __end_of_isFinishedTwelveHoursTimer 05A5  
                      _isFinishedTwelveHoursTimer 059A                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0054                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 0565                  __end_of_initPB2_AsHighResistence 0512  
                       _uiSampleChannelFourteenth 01A4                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh13Value 000A                                    __size_of_reset FFF7  
                               interrupt_function 0004                                      _setPWM_Width 01E6  
                 __end_of_timer1_interrupt_config 05EF                         pwm_start@ucPulseFrequency 00A0  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 00A2  
                                        i1_Filter 014D               vPutSampleDataIntoTable@uiSampleData 0076  
    vPutSampleDataIntoTable@ucChannelFourthLength 007D                       __size_of_isPermitSampleTime 0005  
                                       _pwm_start 0541                                      _uiSmallTimer 00CD  
            vPutSampleDataIntoTable@uiCalWidthCnt 0052                             __end_of_adc_test_init 04CD  
                                   _timer1_config 05BA                      ??_process_AD_Converter_Value 00A3  
                          ??_startTwelveHourTimer 00A2                            _getAdOriginalCh13Value 03C6  
                             _clearTwentyMinTimer 05D4                       startOneHoursTimer@uiSetTime 00A0  
                             i1Filter@filter_temp 0035                                  __size_of_adc_get 000C  
             __size_of_process_AD_Converter_Value 0017                                        ?_pwm_start 00A0  
                        _isFinishedTwentyMinTimer 05A5  vPutSampleDataIntoTable@ucChannelFourteenthLength 007C  
                                __size_of_initPB3 0009                                  __size_of_initPB4 0008  
                                __size_of_initPB5 0008                                  __size_of_initPin 000A  
                                  Filter@tmpValue 00A0                                    ?_timer1_config 0070  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 00A0  
                            _startThreeHoursTimer 0565                             _clearTwelveHoursTimer 05E3  
                                  _uiOneHourTimer 00CB                                     __size_of_main 01A8  
              vPutSampleDataIntoTable@uiInitWidth 006E                                          clear_ram 05C4  
                          ??_clearThreeHoursTimer 00A0                 __size_of_initPB2_AsHighResistence 0005  
                       ?_initPB2_AsHighResistence 0070                                       i1Filter@cir 0039  
                          _bOneHourTimerStartFlag 00DA                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0581                                       _sampleTimes 0056  
                           ??_clearTwentyMinTimer 00A0                             ?_startThreeHoursTimer 00A0  
                __size_of_vPutSampleDataIntoTable 00C2                                          intlevel1 0000  
                            ?_startTwentyMinTimer 00A0                          __size_of_setPinInitVaule 0008  
                      ?_isFinishedThreeHoursTimer 0070                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                     startThreeHoursTimer@uiSetTime 00A0  
                         i1setAD_ConvertFlag@flag 0070                                       ??_pwm_start 00A1  
                                  ??_clrSampeTime 00A0                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 00D9                                   ??_timer1_config 00A0  
                     __end_ofi1_setAD_ConvertFlag 008B                __end_of_process_AD_Converter_Value 0494  
                      _process_AD_Converter_Value 047D                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 00A0  
                           ??_startTwentyMinTimer 00A2                                _startOneHoursTimer 0557  
