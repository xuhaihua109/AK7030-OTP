

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jun 27 09:39:46 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	text755,local,class=CODE,delta=2
    20                           	psect	text756,local,class=CODE,delta=2
    21                           	psect	text759,local,class=CODE,delta=2
    22                           	psect	text765,local,class=CODE,delta=2
    23                           	psect	text766,local,class=CODE,delta=2
    24                           	psect	text767,local,class=CODE,delta=2
    25                           	psect	text768,local,class=CODE,delta=2
    26                           	psect	text769,local,class=CODE,delta=2
    27                           	psect	text770,local,class=CODE,delta=2
    28                           	psect	text771,local,class=CODE,delta=2
    29                           	psect	text772,local,class=CODE,delta=2
    30                           	psect	text774,local,class=CODE,delta=2
    31                           	psect	text775,local,class=CODE,delta=2
    32                           	psect	text776,local,class=CODE,delta=2
    33                           	psect	text778,local,class=CODE,delta=2
    34                           	psect	text779,local,class=CODE,delta=2
    35                           	psect	text780,local,class=CODE,delta=2
    36                           	psect	text781,local,class=CODE,delta=2
    37                           	psect	text785,local,class=CODE,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text789,local,class=CODE,delta=2
    40                           	psect	pa_nodes,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  000A                     	;#
    43                           
    44                           	psect	config
    45  2000  2FFF               	dw	12287	;#
    46  2001  3FDE               	dw	16350	;#
    47  2002  3FF8               	dw	16376	;#
    48                           
    49                           	psect	idataBANK0
    50  0000                     __pidataBANK0:	
    51  001F                     _ADCON0	set	31
    52  001E                     _ADRESH	set	30
    53  001B                     _OP1CON0	set	27
    54  001C                     _OP1CON1	set	28
    55  001D                     _OP1CON2	set	29
    56  0010                     _T1CON	set	16
    57  000F                     _TMR1H	set	15
    58  000E                     _TMR1L	set	14
    59  006A                     _ADIF	set	106
    60  00F8                     _ADON	set	248
    61  005F                     _GIE	set	95
    62  00F9                     _GO	set	249
    63  0028                     _PA0	set	40
    64  0029                     _PA1	set	41
    65  002A                     _PA2	set	42
    66  002B                     _PA3	set	43
    67  002E                     _PA6	set	46
    68  002F                     _PA7	set	47
    69  0030                     _PB0	set	48
    70  0031                     _PB1	set	49
    71  0036                     _PB6	set	54
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0436                     _TRISB6	set	1078
    96  0437                     _TRISB7	set	1079
    97  0108                     _CLKPR	set	264
    98  0847                     _CLKPCE	set	2119
    99  0C3F                     _PAOD7	set	3135
   100  0C46                     _PBOD6	set	3142
   101                           
   102                           	psect	cinit
   103  05B3                     start_initialization:	
   104  05B3  3048               	movlw	low __pbssBANK0
   105                           
   106                           ; Clear objects allocated to COMMON
   107  05B4  01FD               	clrf	__pbssCOMMON& (0+127)
   108                           
   109                           ; Clear objects allocated to BANK0
   110  05B5  1383               	bcf	3,7	;select IRP bank0
   111  05B6  0084               	movwf	4
   112  05B7  306E               	movlw	low (__pbssBANK0+38)
   113  05B8  118A  2638  118A   	fcall	clear_ram
   114                           
   115                           ; Clear objects allocated to BANK1
   116  05BB  30A0               	movlw	low __pbssBANK1
   117  05BC  0084               	movwf	4
   118  05BD  30DC               	movlw	low (__pbssBANK1+60)
   119  05BE  118A  2638  118A   	fcall	clear_ram
   120  05C1  3090               	movlw	low __pbssBANK3
   121                           
   122                           ; Clear objects allocated to BANK3
   123  05C2  1783               	bsf	3,7	;select IRP bank2
   124  05C3  0084               	movwf	4
   125  05C4  30A8               	movlw	low (__pbssBANK3+24)
   126  05C5  118A  2638         	fcall	clear_ram
   127                           
   128                           ;initializer for _sampleChannelSelect
   129  05C7  300E               	movlw	14
   130  05C8  00EE               	movwf	__pdataBANK0& (0+127)
   131  05C9                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  05C9  0183               	clrf	3
   135  05CA  118A  2813         	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  007D                     __pbssCOMMON:	
   139  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   140  007D                     	ds	1
   141                           
   142                           	psect	bssBANK0
   143  0048                     __pbssBANK0:	
   144  0048                     _sampleTimes:	
   145  0048                     	ds	1
   146  0049                     main@enumBranchStep:	
   147  0049                     	ds	1
   148  004A                     main@enumMainLoopStep:	
   149  004A                     	ds	1
   150  004B                     main@ucADC4_Step:	
   151  004B                     	ds	1
   152  004C                     main@ucChannel4Type:	
   153  004C                     	ds	1
   154  004D                     main@ucLoaderStep:	
   155  004D                     	ds	1
   156  004E                     main@ucLoaderStep1:	
   157  004E                     	ds	1
   158  004F                     main@ucLoaderStep2:	
   159  004F                     	ds	1
   160  0050                     main@ucLoaderStep3:	
   161  0050                     	ds	1
   162  0051                     main@ucLoaderStep4:	
   163  0051                     	ds	1
   164  0052                     main@ucTimer1s:	
   165  0052                     	ds	1
   166  0053                     main@ucTimer20s:	
   167  0053                     	ds	1
   168  0054                     main@ucTimerADC1ZeroP5s:	
   169  0054                     	ds	1
   170  0055                     main@ucTimerDelay:	
   171  0055                     	ds	1
   172  0056                     main@ucTimerDelay1:	
   173  0056                     	ds	1
   174  0057                     main@ucTimerDelay2:	
   175  0057                     	ds	1
   176  0058                     main@ucTimerDelay3:	
   177  0058                     	ds	1
   178  0059                     main@ucTimerDelay4:	
   179  0059                     	ds	1
   180  005A                     main@ucTimerDelayP5s:	
   181  005A                     	ds	1
   182  005B                     main@ucTimerForDACR0_CNT1:	
   183  005B                     	ds	1
   184  005C                     main@ucTimerForDACR0_CNT1_f:	
   185  005C                     	ds	1
   186  005D                     main@ucTimerForDACR0_CNT2:	
   187  005D                     	ds	1
   188  005E                     main@ucTimerForDACR0_CNT2_f:	
   189  005E                     	ds	1
   190  005F                     main@ucTimerLessADC1ZeroP5s:	
   191  005F                     	ds	1
   192  0060                     main@ucTimerLessX1P5s:	
   193  0060                     	ds	1
   194  0061                     main@ucTimerLessX2P5s:	
   195  0061                     	ds	1
   196  0062                     main@ucTimerP5s:	
   197  0062                     	ds	1
   198  0063                     main@ucTimerPA6DelayP1s:	
   199  0063                     	ds	1
   200  0064                     main@ucTimerPB6DelayP1s:	
   201  0064                     	ds	1
   202  0065                     main@ucTimerPowerLed:	
   203  0065                     	ds	1
   204  0066                     main@ucTimerRightP5s:	
   205  0066                     	ds	1
   206  0067                     main@ucTimerSeond1s:	
   207  0067                     	ds	1
   208  0068                     main@ucTimerX1P5s:	
   209  0068                     	ds	1
   210  0069                     main@ucTimerX2P5s:	
   211  0069                     	ds	1
   212  006A                     main@ucTimerZeroPoint3s:	
   213  006A                     	ds	1
   214  006B                     main@ucTimerZeroPoint5s:	
   215  006B                     	ds	1
   216  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   217  006C                     	ds	1
   218  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   219  006D                     	ds	1
   220                           
   221                           	psect	dataBANK0
   222  006E                     __pdataBANK0:	
   223  006E                     _sampleChannelSelect:	
   224  006E                     	ds	1
   225                           
   226                           	psect	bssBANK1
   227  00A0                     __pbssBANK1:	
   228  00A0                     _uiBigTimer:	
   229  00A0                     	ds	2
   230  00A2                     _uiSmallTimer:	
   231  00A2                     	ds	2
   232  00A4                     _uiTwentySecondsTimer:	
   233  00A4                     	ds	2
   234  00A6                     ISR@ucTimer1sCnt:	
   235  00A6                     	ds	1
   236  00A7                     _adc_convert_flag:	
   237  00A7                     	ds	1
   238  00A8                     _timer:	
   239  00A8                     	ds	1
   240  00A9                     main@cTimer1s_823:	
   241  00A9                     	ds	1
   242  00AA                     main@enumInteralStep:	
   243  00AA                     	ds	1
   244  00AB                     main@ucTimerP3s:	
   245  00AB                     	ds	1
   246  00AC                     _uiSampleChannelFirst:	
   247  00AC                     	ds	24
   248  00C4                     _uiSampleChannelFourth:	
   249  00C4                     	ds	24
   250                           
   251                           	psect	bssBANK3
   252  0190                     __pbssBANK3:	
   253  0190                     _uiSampleChannelFourteenth:	
   254  0190                     	ds	24
   255                           
   256                           	psect	clrtext
   257  0638                     clear_ram:	
   258                           ;	Called with FSR containing the base address, and
   259                           ;	W with the last address+1
   260                           
   261  0638  0064               	clrwdt	;clear the watchdog before getting into this loop
   262  0639                     clrloop:	
   263  0639  0180               	clrf	0	;clear RAM location pointed to by FSR
   264  063A  0A84               	incf	4,f	;increment pointer
   265  063B  0604               	xorwf	4,w	;XOR with final address
   266  063C  1903               	btfsc	3,2	;have we reached the end yet?
   267  063D  3400               	retlw	0	;all done for this memory range, return
   268  063E  0604               	xorwf	4,w	;XOR again to restore value
   269  063F  2E39               	goto	clrloop	;do the next byte
   270                           
   271                           	psect	cstackCOMMON
   272  0070                     __pcstackCOMMON:	
   273  0070                     ?_clearTwelveHoursTimer:	
   274  0070                     ?_clearThreeHoursTimer:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_clearTwentySecondsTimer:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_clock_config:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_timer1_config:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_timer1_interrupt_config:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_dac_init:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_op1_init:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_op2_init:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_adc_start:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_process_AD_Converter_Value:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_clrSampeTime:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_startTwentySecondsTimer:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_AD_Sample:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_clearAllTimer:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_clearPinPortAndTimer:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_initPin:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_main:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_setAD_ConvertFlag:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_ISR:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?i1_setAD_ConvertFlag:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ??i1_setAD_ConvertFlag:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_isPermitSampleTime:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_isFinishedTwelveHoursTimer:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_isFinishedTwentySecondsTimer:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_isFinishedThreeHoursTimer:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_getAD_ConvertFlag:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_adc_get:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     i1setAD_ConvertFlag@flag:	
   356                           ; 2 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0070                     	ds	2
   361  0072                     ??_adc_get:	
   362  0072                     adc_get@val:	
   363                           ; 0 bytes @ 0x2
   364                           
   365                           
   366                           ; 2 bytes @ 0x2
   367  0072                     	ds	2
   368  0074                     ?_vPutSampleDataIntoTable:	
   369  0074                     vPutSampleDataIntoTable@uiSampleData:	
   370                           ; 0 bytes @ 0x4
   371                           
   372                           
   373                           ; 2 bytes @ 0x4
   374  0074                     	ds	2
   375  0076                     vPutSampleDataIntoTable@channel:	
   376                           
   377                           ; 1 bytes @ 0x6
   378  0076                     	ds	1
   379  0077                     ??_vPutSampleDataIntoTable:	
   380  0077                     vPutSampleDataIntoTable@i:	
   381                           ; 0 bytes @ 0x7
   382                           
   383                           
   384                           ; 2 bytes @ 0x7
   385  0077                     	ds	2
   386  0079                     ??_ISR:	
   387                           
   388                           ; 0 bytes @ 0x9
   389  0079                     	ds	4
   390                           
   391                           	psect	cstackBANK0
   392  0020                     __pcstackBANK0:	
   393  0020                     ??_clearTwelveHoursTimer:	
   394  0020                     ??_clearThreeHoursTimer:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0020                     ??_clearTwentySecondsTimer:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0020                     ??_clock_config:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0020                     ??_timer1_config:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0020                     ??_timer1_interrupt_config:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0020                     ?_adc_test_init:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0020                     ??_dac_init:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0020                     ??_op1_init:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0020                     ??_op2_init:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ??_adc_start:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ??_isPermitSampleTime:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ??_clrSampeTime:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ?_startTwelveHourTimer:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ??_isFinishedTwelveHoursTimer:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     ??_startTwentySecondsTimer:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0020                     ??_isFinishedTwentySecondsTimer:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0020                     ?_startThreeHoursTimer:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0020                     ??_isFinishedThreeHoursTimer:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0020                     ??_AD_Sample:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     ??_clearAllTimer:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0020                     ??_clearPinPortAndTimer:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0020                     ??_initPin:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0020                     ??_getAD_ConvertFlag:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0020                     ??_setAD_ConvertFlag:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0020                     ?_Filter:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0020                     setAD_ConvertFlag@flag:	
   470                           ; 2 bytes @ 0x0
   471                           
   472  0020                     adc_test_init@ref:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0020                     Filter@tmpValue:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0020                     startTwelveHourTimer@uiSetTime:	
   479                           ; 2 bytes @ 0x0
   480                           
   481  0020                     startThreeHoursTimer@uiSetTime:	
   482                           ; 2 bytes @ 0x0
   483                           
   484                           
   485                           ; 2 bytes @ 0x0
   486  0020                     	ds	1
   487  0021                     ??_adc_test_init:	
   488                           
   489                           ; 0 bytes @ 0x1
   490  0021                     	ds	1
   491  0022                     ??_startTwelveHourTimer:	
   492  0022                     ??_startThreeHoursTimer:	
   493                           ; 0 bytes @ 0x2
   494                           
   495  0022                     ??_Filter:	
   496                           ; 0 bytes @ 0x2
   497                           
   498  0022                     adc_test_init@channel:	
   499                           ; 0 bytes @ 0x2
   500                           
   501                           
   502                           ; 1 bytes @ 0x2
   503  0022                     	ds	1
   504  0023                     ??_process_AD_Converter_Value:	
   505                           
   506                           ; 0 bytes @ 0x3
   507  0023                     	ds	3
   508  0026                     Filter@filter_buf:	
   509                           
   510                           ; 24 bytes @ 0x6
   511  0026                     	ds	24
   512  003E                     Filter@filter_temp:	
   513                           
   514                           ; 2 bytes @ 0x1E
   515  003E                     	ds	2
   516  0040                     Filter@filter_sum:	
   517                           
   518                           ; 2 bytes @ 0x20
   519  0040                     	ds	2
   520  0042                     Filter@cir:	
   521                           
   522                           ; 2 bytes @ 0x22
   523  0042                     	ds	2
   524  0044                     Filter@j:	
   525                           
   526                           ; 1 bytes @ 0x24
   527  0044                     	ds	1
   528  0045                     Filter@i:	
   529                           
   530                           ; 1 bytes @ 0x25
   531  0045                     	ds	1
   532  0046                     ?_getAdOriginalCh14Value:	
   533  0046                     ?_getAdOriginalCh1Value:	
   534                           ; 2 bytes @ 0x26
   535                           
   536  0046                     ?_getAdOriginaCh4Value:	
   537                           ; 2 bytes @ 0x26
   538                           
   539                           
   540                           ; 2 bytes @ 0x26
   541  0046                     	ds	2
   542  0048                     ??_getAdOriginalCh14Value:	
   543  0048                     ??_getAdOriginalCh1Value:	
   544                           ; 0 bytes @ 0x28
   545                           
   546  0048                     ??_getAdOriginaCh4Value:	
   547                           ; 0 bytes @ 0x28
   548                           
   549  0048                     ??_main:	
   550                           ; 0 bytes @ 0x28
   551                           
   552                           
   553                           	psect	maintext
   554  0013                     __pmaintext:	
   555                           ; 0 bytes @ 0x28
   556 ;;Data sizes: Strings 0, constant 0, data 1, bss 123, persistent 0 stack 0
   557 ;;Auto spaces:   Size  Autos    Used
   558 ;; COMMON          14     13      14
   559 ;; BANK0           80     40      79
   560 ;; BANK1           80      0      60
   561 ;; BANK3           96      0      24
   562 ;; BANK2           96      0       0
   563 ;;
   564 ;; Pointer list with targets:
   565 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   566 ;;
   567 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   568 ;;
   569 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   570 ;;
   571 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   572 ;;
   573 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   574 ;;
   575 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   576 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   577 ;;
   578 ;;
   579 ;; Critical Paths under _main in COMMON
   580 ;;
   581 ;;   None.
   582 ;;
   583 ;; Critical Paths under _ISR in COMMON
   584 ;;
   585 ;;   _ISR->_vPutSampleDataIntoTable
   586 ;;   _vPutSampleDataIntoTable->_adc_get
   587 ;;
   588 ;; Critical Paths under _main in BANK0
   589 ;;
   590 ;;   _main->_getAdOriginalCh14Value
   591 ;;   _main->_getAdOriginalCh1Value
   592 ;;   _main->_getAdOriginaCh4Value
   593 ;;   _getAdOriginaCh4Value->_Filter
   594 ;;   _getAdOriginalCh1Value->_Filter
   595 ;;   _getAdOriginalCh14Value->_Filter
   596 ;;   _process_AD_Converter_Value->_adc_test_init
   597 ;;
   598 ;; Critical Paths under _ISR in BANK0
   599 ;;
   600 ;;   None.
   601 ;;
   602 ;; Critical Paths under _main in BANK1
   603 ;;
   604 ;;   None.
   605 ;;
   606 ;; Critical Paths under _ISR in BANK1
   607 ;;
   608 ;;   None.
   609 ;;
   610 ;; Critical Paths under _main in BANK3
   611 ;;
   612 ;;   None.
   613 ;;
   614 ;; Critical Paths under _ISR in BANK3
   615 ;;
   616 ;;   None.
   617 ;;
   618 ;; Critical Paths under _main in BANK2
   619 ;;
   620 ;;   None.
   621 ;;
   622 ;; Critical Paths under _ISR in BANK2
   623 ;;
   624 ;;   None.
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   627 ;;
   628 ;;
   629 ;;Call Graph Tables:
   630 ;;
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (0) _main                                                 0     0      0    2014
   635 ;;                            _initPin
   636 ;;                       _clock_config
   637 ;;                      _timer1_config
   638 ;;            _timer1_interrupt_config
   639 ;;                      _adc_test_init
   640 ;;                           _dac_init
   641 ;;                           _op1_init
   642 ;;                           _op2_init
   643 ;;                          _adc_start
   644 ;;         _process_AD_Converter_Value
   645 ;;                 _isPermitSampleTime
   646 ;;                       _clrSampeTime
   647 ;;             _getAdOriginalCh14Value
   648 ;;               _clearPinPortAndTimer
   649 ;;              _getAdOriginalCh1Value
   650 ;;               _startTwelveHourTimer
   651 ;;         _isFinishedTwelveHoursTimer
   652 ;;            _startTwentySecondsTimer
   653 ;;               _getAdOriginaCh4Value
   654 ;;       _isFinishedTwentySecondsTimer
   655 ;;               _startThreeHoursTimer
   656 ;;          _isFinishedThreeHoursTimer
   657 ;;               _clearThreeHoursTimer
   658 ;;                      _clearAllTimer
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   661 ;;                      _clearAllTimer
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   664 ;;                                             38 BANK0      2     0      2
   665 ;;                             _Filter
   666 ;; ---------------------------------------------------------------------------------
   667 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   668 ;;                                             38 BANK0      2     0      2
   669 ;;                             _Filter
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   672 ;;                                             38 BANK0      2     0      2
   673 ;;                             _Filter
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   676 ;;                  _getAD_ConvertFlag
   677 ;;                  _setAD_ConvertFlag
   678 ;;                          _AD_Sample
   679 ;;                      _adc_test_init
   680 ;;                          _adc_start
   681 ;; ---------------------------------------------------------------------------------
   682 ;; (1) _clearAllTimer                                        0     0      0       0
   683 ;;              _clearTwelveHoursTimer
   684 ;;               _clearThreeHoursTimer
   685 ;;            _clearTwentySecondsTimer
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (2) _AD_Sample                                            0     0      0       0
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   690 ;;                                              0 BANK0      1     1      0
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (2) _Filter                                              38    36      2     620
   695 ;;                                              0 BANK0     38    36      2
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   700 ;;                                              0 BANK0      2     0      2
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   709 ;;                                              0 BANK0      2     0      2
   710 ;; ---------------------------------------------------------------------------------
   711 ;; (1) _clrSampeTime                                         0     0      0       0
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (1) _isPermitSampleTime                                   0     0      0       0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (2) _adc_start                                            0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _op2_init                                             0     0      0       0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _op1_init                                             0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _dac_init                                             0     0      0       0
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (2) _adc_test_init                                        3     2      1      44
   724 ;;                                              0 BANK0      3     2      1
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _timer1_interrupt_config                              0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _timer1_config                                        0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _clock_config                                         0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _initPin                                              0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; Estimated maximum stack depth 2
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (4) _ISR                                                  4     4      0     407
   745 ;;                                              9 COMMON     4     4      0
   746 ;;                i1_setAD_ConvertFlag
   747 ;;                            _adc_get
   748 ;;            _vPutSampleDataIntoTable
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   751 ;;                                              0 COMMON     1     1      0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (5) _adc_get                                              4     2      2      24
   754 ;;                                              0 COMMON     4     2      2
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   757 ;;                                              4 COMMON     5     2      3
   758 ;;                            _adc_get (ARG)
   759 ;; ---------------------------------------------------------------------------------
   760 ;; Estimated maximum stack depth 5
   761 ;; ---------------------------------------------------------------------------------
   762 ;; Call Graph Graphs:
   763 ;; _main (ROOT)
   764 ;;   _initPin
   765 ;;   _clock_config
   766 ;;   _timer1_config
   767 ;;   _timer1_interrupt_config
   768 ;;   _adc_test_init
   769 ;;   _dac_init
   770 ;;   _op1_init
   771 ;;   _op2_init
   772 ;;   _adc_start
   773 ;;   _process_AD_Converter_Value
   774 ;;     _getAD_ConvertFlag
   775 ;;     _setAD_ConvertFlag
   776 ;;     _AD_Sample
   777 ;;     _adc_test_init
   778 ;;     _adc_start
   779 ;;   _isPermitSampleTime
   780 ;;   _clrSampeTime
   781 ;;   _getAdOriginalCh14Value
   782 ;;     _Filter
   783 ;;   _clearPinPortAndTimer
   784 ;;     _clearAllTimer
   785 ;;       _clearTwelveHoursTimer
   786 ;;       _clearThreeHoursTimer
   787 ;;       _clearTwentySecondsTimer
   788 ;;   _getAdOriginalCh1Value
   789 ;;     _Filter
   790 ;;   _startTwelveHourTimer
   791 ;;   _isFinishedTwelveHoursTimer
   792 ;;   _startTwentySecondsTimer
   793 ;;   _getAdOriginaCh4Value
   794 ;;     _Filter
   795 ;;   _isFinishedTwentySecondsTimer
   796 ;;   _startThreeHoursTimer
   797 ;;   _isFinishedThreeHoursTimer
   798 ;;   _clearThreeHoursTimer
   799 ;;   _clearAllTimer
   800 ;;     _clearTwelveHoursTimer
   801 ;;     _clearThreeHoursTimer
   802 ;;     _clearTwentySecondsTimer
   803 ;;
   804 ;; _ISR (ROOT)
   805 ;;   i1_setAD_ConvertFlag
   806 ;;   _adc_get
   807 ;;   _vPutSampleDataIntoTable
   808 ;;     _adc_get (ARG)
   809 ;;
   810 ;; Address spaces:
   811 ;;Name               Size   Autos  Total    Cost      Usage
   812 ;;BANK3               60      0      18      10       25.0%
   813 ;;BITBANK3            60      0       0       9        0.0%
   814 ;;SFR3                 0      0       0       4        0.0%
   815 ;;BITSFR3              0      0       0       4        0.0%
   816 ;;BANK2               60      0       0      12        0.0%
   817 ;;BITBANK2            60      0       0      11        0.0%
   818 ;;SFR2                 0      0       0       5        0.0%
   819 ;;BITSFR2              0      0       0       5        0.0%
   820 ;;SFR1                 0      0       0       2        0.0%
   821 ;;BITSFR1              0      0       0       2        0.0%
   822 ;;BANK1               50      0      3C       8       75.0%
   823 ;;BITBANK1            50      0       0       7        0.0%
   824 ;;CODE                 0      0       0       0        0.0%
   825 ;;DATA                 0      0      B8       6        0.0%
   826 ;;ABS                  0      0      B1       3        0.0%
   827 ;;NULL                 0      0       0       0        0.0%
   828 ;;STACK                0      0       7       2        0.0%
   829 ;;BANK0               50     28      4F       5       98.8%
   830 ;;BITBANK0            50      0       0       4        0.0%
   831 ;;SFR0                 0      0       0       1        0.0%
   832 ;;BITSFR0              0      0       0       1        0.0%
   833 ;;COMMON               E      D       E       1      100.0%
   834 ;;BITCOMMON            E      0       0       0        0.0%
   835                           
   836                           
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 129 in file "D:\develop\190625\AK7030-OTP\main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;		None               void
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 17F/0
   850 ;;		On exit  : 60/0
   851 ;;		Unchanged: FFE00/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels required when called:    5
   859 ;; This function calls:
   860 ;;		_initPin
   861 ;;		_clock_config
   862 ;;		_timer1_config
   863 ;;		_timer1_interrupt_config
   864 ;;		_adc_test_init
   865 ;;		_dac_init
   866 ;;		_op1_init
   867 ;;		_op2_init
   868 ;;		_adc_start
   869 ;;		_process_AD_Converter_Value
   870 ;;		_isPermitSampleTime
   871 ;;		_clrSampeTime
   872 ;;		_getAdOriginalCh14Value
   873 ;;		_clearPinPortAndTimer
   874 ;;		_getAdOriginalCh1Value
   875 ;;		_startTwelveHourTimer
   876 ;;		_isFinishedTwelveHoursTimer
   877 ;;		_startTwentySecondsTimer
   878 ;;		_getAdOriginaCh4Value
   879 ;;		_isFinishedTwentySecondsTimer
   880 ;;		_startThreeHoursTimer
   881 ;;		_isFinishedThreeHoursTimer
   882 ;;		_clearThreeHoursTimer
   883 ;;		_clearAllTimer
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888  0013                     _main:	
   889                           
   890                           ;main.c: 130: enum setp_Adc4
   891                           ;main.c: 131: {
   892                           ;main.c: 132: ADC4_STEP_INIT = 0,
   893                           ;main.c: 133: ADC4_STEP_FIRST,
   894                           ;main.c: 134: ADC4_STEP_SECOND,
   895                           ;main.c: 135: ADC4_STEP_THIRD,
   896                           ;main.c: 136: ADC4_STEP_FOURTH,
   897                           ;main.c: 137: ADC4_STEP_FIFTH,
   898                           ;main.c: 138: ADC4_STEP_SIXTH,
   899                           ;main.c: 139: };
   900                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   901                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   902                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   903                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   904                           
   905                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   906  0013  1683               	bsf	3,5	;RP0=1, select bank1
   907  0014  1005               	bcf	5,0
   908                           
   909                           ;main.c: 151: TRISA1 = 0;
   910  0015  1085               	bcf	5,1
   911                           
   912                           ;main.c: 152: TRISA2 = 0;
   913  0016  1105               	bcf	5,2
   914                           
   915                           ;main.c: 153: TRISA3 = 0;
   916  0017  1185               	bcf	5,3
   917                           
   918                           ;main.c: 154: TRISB0 = 0;
   919  0018  1006               	bcf	6,0
   920                           
   921                           ;main.c: 155: TRISB1 = 0;
   922  0019  1086               	bcf	6,1
   923                           
   924                           ;main.c: 156: TRISA6 = 0;
   925  001A  1305               	bcf	5,6
   926                           
   927                           ;main.c: 157: TRISA7 = 0;
   928  001B  1385               	bcf	5,7
   929                           
   930                           ;main.c: 158: TRISB6 = 0;
   931  001C  1306               	bcf	6,6
   932                           
   933                           ;main.c: 161: initPin();
   934  001D  118A  25CC  118A   	fcall	_initPin
   935                           
   936                           ;main.c: 164: TRISB2 = 1;
   937  0020  1303               	bcf	3,6	;RP1=0, select bank1
   938  0021  1506               	bsf	6,2
   939                           
   940                           ;main.c: 166: TRISB7 = 1;
   941  0022  1786               	bsf	6,7
   942                           
   943                           ;main.c: 167: TRISB4 = 1;
   944  0023  1606               	bsf	6,4
   945                           
   946                           ;main.c: 169: clock_config();
   947  0024  118A  2648  118A   	fcall	_clock_config
   948                           
   949                           ;main.c: 170: timer1_config();
   950  0027  118A  262E  118A   	fcall	_timer1_config
   951                           
   952                           ;main.c: 171: timer1_interrupt_config();
   953  002A  118A  2672  118A   	fcall	_timer1_interrupt_config
   954                           
   955                           ;main.c: 173: adc_test_init(14,3);
   956  002D  3003               	movlw	3
   957  002E  1283               	bcf	3,5	;RP0=0, select bank0
   958  002F  00A0               	movwf	?_adc_test_init
   959  0030  300E               	movlw	14
   960  0031  118A  257F  118A   	fcall	_adc_test_init
   961                           
   962                           ;main.c: 175: dac_init();
   963  0034  118A  266D  118A   	fcall	_dac_init
   964                           
   965                           ;main.c: 176: op1_init();
   966  0037  118A  2623  118A   	fcall	_op1_init
   967                           
   968                           ;main.c: 177: op2_init();
   969  003A  118A  2640  118A   	fcall	_op2_init
   970                           
   971                           ;main.c: 180: adc_start();
   972  003D  118A  2594  118A   	fcall	_adc_start
   973  0040                     l4241:	
   974  0040  0064               	clrwdt	;#
   975                           
   976                           ;main.c: 218: process_AD_Converter_Value();
   977  0041  118A  253A  118A   	fcall	_process_AD_Converter_Value
   978                           
   979                           ;main.c: 220: if(isPermitSampleTime())
   980  0044  118A  2662  118A   	fcall	_isPermitSampleTime
   981  0047  3A00               	xorlw	0
   982  0048  1903               	skipnz
   983  0049  2840               	goto	l4241
   984                           
   985                           ;main.c: 221: {
   986                           ;main.c: 222: clrSampeTime();
   987  004A  118A  2675  118A   	fcall	_clrSampeTime
   988                           
   989                           ;main.c: 224: if(ucTimerPowerLed < 30)
   990  004D  301E               	movlw	30
   991  004E  1283               	bcf	3,5	;RP0=0, select bank0
   992  004F  0265               	subwf	main@ucTimerPowerLed,w
   993  0050  1803               	skipnc
   994  0051  2854               	goto	l4253
   995                           
   996                           ;main.c: 225: {
   997                           ;main.c: 226: ucTimerPowerLed ++;
   998  0052  0AE5               	incf	main@ucTimerPowerLed,f
   999                           
  1000                           ;main.c: 227: }
  1001  0053  2B73               	goto	l4805
  1002  0054                     l4253:	
  1003                           
  1004                           ;main.c: 228: else
  1005                           ;main.c: 229: {
  1006                           ;main.c: 230: ucTimerPowerLed = 0;
  1007  0054  01E5               	clrf	main@ucTimerPowerLed
  1008                           
  1009                           ;main.c: 231: PB1 = 0;
  1010  0055  1086               	bcf	6,1
  1011  0056  2B73               	goto	l4805
  1012  0057                     l4257:	
  1013                           
  1014                           ;main.c: 238: {
  1015                           ;main.c: 239: static unsigned char ucTimerZeroPoint5s = 0;
  1016                           ;main.c: 240: if(getAdOriginalCh14Value() > 1950)
  1017  0057  118A  2482  118A   	fcall	_getAdOriginalCh14Value
  1018  005A  3007               	movlw	7
  1019  005B  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1020  005C  309F               	movlw	159
  1021  005D  1903               	skipnz
  1022  005E  0246               	subwf	?_getAdOriginalCh14Value,w
  1023  005F  1C03               	skipc
  1024  0060  2863               	goto	l4261
  1025                           
  1026                           ;main.c: 241: {
  1027                           ;main.c: 242: ucTimerZeroPoint5s++;
  1028  0061  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1029                           
  1030                           ;main.c: 243: }
  1031  0062  2864               	goto	l4263
  1032  0063                     l4261:	
  1033                           
  1034                           ;main.c: 244: else
  1035                           ;main.c: 245: ucTimerZeroPoint5s = 0;
  1036  0063  01EB               	clrf	main@ucTimerZeroPoint5s
  1037  0064                     l4263:	
  1038                           
  1039                           ;main.c: 247: if(ucTimerZeroPoint5s >= 5)
  1040  0064  3005               	movlw	5
  1041  0065  026B               	subwf	main@ucTimerZeroPoint5s,w
  1042  0066  1C03               	skipc
  1043  0067  2840               	goto	l4241
  1044                           
  1045                           ;main.c: 248: {
  1046                           ;main.c: 249: ucTimerZeroPoint5s = 0;
  1047  0068  01EB               	clrf	main@ucTimerZeroPoint5s
  1048  0069                     l4267:	
  1049                           
  1050                           ;main.c: 250: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1051  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1052  006A  01CA               	clrf	main@enumMainLoopStep
  1053  006B  0ACA               	incf	main@enumMainLoopStep,f
  1054  006C                     l710:	
  1055                           
  1056                           ;main.c: 251: }
  1057                           ;main.c: 252: break;
  1058  006C  2840               	goto	l4241
  1059  006D                     l4269:	
  1060                           
  1061                           ;main.c: 256: {
  1062                           ;main.c: 257: static unsigned char ucTimerZeroPoint3s = 0;
  1063                           ;main.c: 260: if(getAdOriginalCh14Value() > 1950)
  1064  006D  118A  2482  118A   	fcall	_getAdOriginalCh14Value
  1065  0070  3007               	movlw	7
  1066  0071  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1067  0072  309F               	movlw	159
  1068  0073  1903               	skipnz
  1069  0074  0246               	subwf	?_getAdOriginalCh14Value,w
  1070  0075  1C03               	skipc
  1071  0076  287B               	goto	l4275
  1072                           
  1073                           ;main.c: 261: {
  1074                           ;main.c: 263: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1075  0077  3002               	movlw	2
  1076  0078  00CA               	movwf	main@enumMainLoopStep
  1077                           
  1078                           ;main.c: 265: ucTimerZeroPoint3s = 0;
  1079  0079  01EA               	clrf	main@ucTimerZeroPoint3s
  1080                           
  1081                           ;main.c: 268: }
  1082  007A  2840               	goto	l4241
  1083  007B                     l4275:	
  1084  007B  3003               	movlw	3
  1085                           
  1086                           ;main.c: 269: else
  1087                           ;main.c: 270: {
  1088                           ;main.c: 271: ucTimerZeroPoint3s++;
  1089  007C  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1090                           
  1091                           ;main.c: 273: if(ucTimerZeroPoint3s >= 3)
  1092  007D  026A               	subwf	main@ucTimerZeroPoint3s,w
  1093  007E  1C03               	skipc
  1094  007F  2840               	goto	l4241
  1095                           
  1096                           ;main.c: 274: {
  1097                           ;main.c: 275: ucTimerZeroPoint3s = 0;
  1098  0080  01EA               	clrf	main@ucTimerZeroPoint3s
  1099                           
  1100                           ;main.c: 277: clearPinPortAndTimer();
  1101  0081  118A  2597  118A   	fcall	_clearPinPortAndTimer
  1102  0084  2840               	goto	l4241
  1103  0085                     l718:	
  1104                           ;main.c: 286: }
  1105                           ;main.c: 288: case MAIN_LOOP_STEP_SECOND:
  1106                           
  1107  0085  3005               	movlw	5
  1108                           
  1109                           ;main.c: 289: {
  1110                           ;main.c: 290: static unsigned char ucTimerP5s = 0;
  1111                           ;main.c: 292: PA6 = 1;
  1112  0086  1705               	bsf	5,6
  1113                           
  1114                           ;main.c: 294: if(ucTimerP5s < 5)
  1115  0087  0262               	subwf	main@ucTimerP5s,w
  1116  0088  1803               	skipnc
  1117  0089  288C               	goto	l4287
  1118                           
  1119                           ;main.c: 295: ucTimerP5s++;
  1120  008A  0AE2               	incf	main@ucTimerP5s,f
  1121  008B  2840               	goto	l4241
  1122  008C                     l4287:	
  1123  008C  3003               	movlw	3
  1124                           
  1125                           ;main.c: 296: else
  1126                           ;main.c: 297: {
  1127                           ;main.c: 298: ucTimerP5s = 0;
  1128  008D  01E2               	clrf	main@ucTimerP5s
  1129                           
  1130                           ;main.c: 300: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1131  008E  2AEF               	goto	L4
  1132  008F                     l4291:	
  1133                           
  1134                           ;main.c: 307: {
  1135                           ;main.c: 308: static unsigned char ucTimerADC1ZeroP5s = 0;
  1136                           ;main.c: 310: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1137                           ;main.c: 312: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1138                           ;main.c: 314: static unsigned char ucTimerRightP5s = 0;
  1139                           ;main.c: 316: if(getAdOriginalCh1Value() < 115)
  1140  008F  118A  2478  118A   	fcall	_getAdOriginalCh1Value
  1141  0092  3000               	movlw	0
  1142  0093  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1143  0094  3073               	movlw	115
  1144  0095  1903               	skipnz
  1145  0096  0246               	subwf	?_getAdOriginalCh1Value,w
  1146  0097  1803               	skipnc
  1147  0098  289C               	goto	l4297
  1148                           
  1149                           ;main.c: 317: {
  1150                           ;main.c: 318: ucTimerADC1ZeroP5s = 0;
  1151  0099  01D4               	clrf	main@ucTimerADC1ZeroP5s
  1152                           
  1153                           ;main.c: 320: ucTimerLessADC1ZeroP5s++;
  1154  009A  0ADF               	incf	main@ucTimerLessADC1ZeroP5s,f
  1155                           
  1156                           ;main.c: 321: }
  1157  009B  289E               	goto	l4301
  1158  009C                     l4297:	
  1159                           
  1160                           ;main.c: 322: else
  1161                           ;main.c: 323: {
  1162                           ;main.c: 324: ucTimerADC1ZeroP5s++;
  1163  009C  0AD4               	incf	main@ucTimerADC1ZeroP5s,f
  1164                           
  1165                           ;main.c: 326: ucTimerLessADC1ZeroP5s = 0;
  1166  009D  01DF               	clrf	main@ucTimerLessADC1ZeroP5s
  1167  009E                     l4301:	
  1168                           
  1169                           ;main.c: 327: }
  1170                           ;main.c: 329: if(ucTimerADC1ZeroP5s >= 5)
  1171  009E  3005               	movlw	5
  1172  009F  0254               	subwf	main@ucTimerADC1ZeroP5s,w
  1173  00A0  1C03               	skipc
  1174  00A1  28A5               	goto	l4307
  1175  00A2  3004               	movlw	4
  1176                           
  1177                           ;main.c: 330: {
  1178                           ;main.c: 331: ucTimerADC1ZeroP5s = 0;
  1179  00A3  01D4               	clrf	main@ucTimerADC1ZeroP5s
  1180                           
  1181                           ;main.c: 332: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1182  00A4  28BD               	goto	L2
  1183  00A5                     l4307:	
  1184                           ;main.c: 333: }
  1185                           
  1186                           
  1187                           ;main.c: 334: else if( ucTimerLessADC1ZeroP5s >= 5)
  1188  00A5  3005               	movlw	5
  1189  00A6  025F               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1190  00A7  1C03               	skipc
  1191  00A8  28BE               	goto	l4321
  1192                           
  1193                           ;main.c: 335: {
  1194                           ;main.c: 337: if(getAdOriginalCh1Value() < 105)
  1195  00A9  118A  2478  118A   	fcall	_getAdOriginalCh1Value
  1196  00AC  3000               	movlw	0
  1197  00AD  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1198  00AE  3069               	movlw	105
  1199  00AF  1903               	skipnz
  1200  00B0  0246               	subwf	?_getAdOriginalCh1Value,w
  1201  00B1  1803               	skipnc
  1202  00B2  28B5               	goto	l4313
  1203                           
  1204                           ;main.c: 338: {
  1205                           ;main.c: 339: ucTimerRightP5s++;
  1206  00B3  0AE6               	incf	main@ucTimerRightP5s,f
  1207                           
  1208                           ;main.c: 340: }
  1209  00B4  28B6               	goto	l4315
  1210  00B5                     l4313:	
  1211                           
  1212                           ;main.c: 341: else
  1213                           ;main.c: 342: {
  1214                           ;main.c: 343: ucTimerRightP5s = 0;
  1215  00B5  01E6               	clrf	main@ucTimerRightP5s
  1216  00B6                     l4315:	
  1217                           
  1218                           ;main.c: 344: }
  1219                           ;main.c: 346: if(ucTimerRightP5s >= 5)
  1220  00B6  3005               	movlw	5
  1221  00B7  0266               	subwf	main@ucTimerRightP5s,w
  1222  00B8  1C03               	skipc
  1223  00B9  28BE               	goto	l4321
  1224  00BA  3008               	movlw	8
  1225                           
  1226                           ;main.c: 347: {
  1227                           ;main.c: 348: ucTimerLessADC1ZeroP5s = 0;
  1228  00BB  01DF               	clrf	main@ucTimerLessADC1ZeroP5s
  1229                           
  1230                           ;main.c: 349: ucTimerRightP5s = 0;
  1231  00BC  01E6               	clrf	main@ucTimerRightP5s
  1232  00BD                     L2:	
  1233                           ;main.c: 350: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1234                           
  1235  00BD  00CA               	movwf	main@enumMainLoopStep
  1236  00BE                     l4321:	
  1237                           ;main.c: 357: else
  1238                           ;main.c: 358: {
  1239                           ;main.c: 359: ;
  1240                           
  1241                           ;main.c: 351: }
  1242                           
  1243                           
  1244                           ;main.c: 360: }
  1245                           ;main.c: 362: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1246  00BE  084A               	movf	main@enumMainLoopStep,w
  1247  00BF  3A08               	xorlw	8
  1248  00C0  1903               	skipnz
  1249  00C1  28C6               	goto	l4325
  1250  00C2  084A               	movf	main@enumMainLoopStep,w
  1251  00C3  3A04               	xorlw	4
  1252  00C4  1D03               	skipz
  1253  00C5  2840               	goto	l4241
  1254  00C6                     l4325:	
  1255                           
  1256                           ;main.c: 363: {
  1257                           ;main.c: 364: ucTimerRightP5s = 0;
  1258  00C6  01E6               	clrf	main@ucTimerRightP5s
  1259                           
  1260                           ;main.c: 365: ucTimerADC1ZeroP5s = 0;
  1261  00C7  01D4               	clrf	main@ucTimerADC1ZeroP5s
  1262                           
  1263                           ;main.c: 366: ucTimerLessADC1ZeroP5s = 0;
  1264  00C8  01DF               	clrf	main@ucTimerLessADC1ZeroP5s
  1265  00C9  2840               	goto	l4241
  1266  00CA                     l4327:	
  1267                           
  1268                           ;main.c: 374: {
  1269                           ;main.c: 376: startTwelveHourTimer(600);
  1270  00CA  3058               	movlw	88
  1271  00CB  00A0               	movwf	?_startTwelveHourTimer
  1272  00CC  3002               	movlw	2
  1273  00CD  00A1               	movwf	?_startTwelveHourTimer+1
  1274  00CE  118A  2609  118A   	fcall	_startTwelveHourTimer
  1275                           
  1276                           ;main.c: 377: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1277  00D1  3005               	movlw	5
  1278  00D2  28DA               	goto	L8
  1279  00D3                     l4331:	
  1280                           ;main.c: 379: break;
  1281                           
  1282                           
  1283                           ;main.c: 383: {
  1284                           ;main.c: 385: if(isFinishedTwelveHoursTimer())
  1285  00D3  118A  265C  118A   	fcall	_isFinishedTwelveHoursTimer
  1286  00D6  3A00               	xorlw	0
  1287  00D7  1903               	skipnz
  1288  00D8  2A94               	goto	l4687
  1289  00D9                     l4333:	
  1290                           
  1291                           ;main.c: 386: {
  1292                           ;main.c: 387: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1293  00D9  3009               	movlw	9
  1294  00DA                     L8:	
  1295  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1296  00DB  2AEF               	goto	L4
  1297  00DC                     l4335:	
  1298                           ;main.c: 388: }
  1299                           
  1300                           
  1301                           ;main.c: 396: {
  1302                           ;main.c: 397: startTwentySecondsTimer();
  1303  00DC  118A  2668  118A   	fcall	_startTwentySecondsTimer
  1304  00DF                     l4337:	
  1305                           
  1306                           ;main.c: 398: ucADC4_Step = ADC4_STEP_FIRST;
  1307  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1308  00E0  01CB               	clrf	main@ucADC4_Step
  1309  00E1  0ACB               	incf	main@ucADC4_Step,f
  1310                           
  1311                           ;main.c: 399: break;
  1312  00E2  2840               	goto	l4241
  1313  00E3                     l4339:	
  1314                           
  1315                           ;main.c: 403: {
  1316                           ;main.c: 404: if(getAdOriginaCh4Value() < 1911)
  1317  00E3  118A  246F  118A   	fcall	_getAdOriginaCh4Value
  1318  00E6  3007               	movlw	7
  1319  00E7  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1320  00E8  3077               	movlw	119
  1321  00E9  1903               	skipnz
  1322  00EA  0246               	subwf	?_getAdOriginaCh4Value,w
  1323  00EB  1803               	skipnc
  1324  00EC  28EF               	goto	l4343
  1325                           
  1326                           ;main.c: 405: ucChannel4Type = LESS_THAN_1911;
  1327  00ED  01CC               	clrf	main@ucChannel4Type
  1328  00EE  2916               	goto	l756
  1329  00EF                     l4343:	
  1330                           
  1331                           ;main.c: 406: else if(getAdOriginaCh4Value() < 2067)
  1332  00EF  118A  246F  118A   	fcall	_getAdOriginaCh4Value
  1333  00F2  3008               	movlw	8
  1334  00F3  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1335  00F4  3013               	movlw	19
  1336  00F5  1903               	skipnz
  1337  00F6  0246               	subwf	?_getAdOriginaCh4Value,w
  1338  00F7  1803               	skipnc
  1339  00F8  28FC               	goto	l4347
  1340                           
  1341                           ;main.c: 407: ucChannel4Type = BETWEEN_1911_AND_2067;
  1342  00F9  01CC               	clrf	main@ucChannel4Type
  1343  00FA  0ACC               	incf	main@ucChannel4Type,f
  1344  00FB  2916               	goto	l756
  1345  00FC                     l4347:	
  1346                           
  1347                           ;main.c: 408: else if(getAdOriginaCh4Value() < 2204)
  1348  00FC  118A  246F  118A   	fcall	_getAdOriginaCh4Value
  1349  00FF  3008               	movlw	8
  1350  0100  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1351  0101  309C               	movlw	156
  1352  0102  1903               	skipnz
  1353  0103  0246               	subwf	?_getAdOriginaCh4Value,w
  1354  0104  1803               	skipnc
  1355  0105  2908               	goto	l4351
  1356                           
  1357                           ;main.c: 409: ucChannel4Type = BETWEEN_2067_AND_2204;
  1358  0106  3002               	movlw	2
  1359  0107  2915               	goto	L5
  1360  0108                     l4351:	
  1361                           
  1362                           ;main.c: 410: else if(getAdOriginaCh4Value() < 2340)
  1363  0108  118A  246F  118A   	fcall	_getAdOriginaCh4Value
  1364  010B  3009               	movlw	9
  1365  010C  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1366  010D  3024               	movlw	36
  1367  010E  1903               	skipnz
  1368  010F  0246               	subwf	?_getAdOriginaCh4Value,w
  1369  0110  1803               	skipnc
  1370  0111  2914               	goto	l4355
  1371                           
  1372                           ;main.c: 411: ucChannel4Type = BETWEEN_2204_AND_2340;
  1373  0112  3003               	movlw	3
  1374  0113  2915               	goto	L5
  1375  0114                     l4355:	
  1376                           
  1377                           ;main.c: 412: else
  1378                           ;main.c: 413: ucChannel4Type = MORE_THAN_2340;
  1379  0114  3004               	movlw	4
  1380  0115                     L5:	
  1381  0115  00CC               	movwf	main@ucChannel4Type
  1382  0116                     l756:	
  1383                           
  1384                           ;main.c: 415: ucADC4_Step = ADC4_STEP_SECOND;
  1385  0116  3002               	movlw	2
  1386  0117  2947               	goto	L6
  1387  0118                     l771:	
  1388                           ;main.c: 430: {
  1389                           ;main.c: 431: case 0:
  1390                           
  1391                           ;main.c: 416: break;
  1392                           
  1393                           
  1394                           ;main.c: 432: {
  1395                           ;main.c: 433: PB0 = 1;
  1396  0118  1406               	bsf	6,0
  1397  0119                     l4357:	
  1398                           
  1399                           ;main.c: 434: ucLoaderStep++;
  1400  0119  0ACD               	incf	main@ucLoaderStep,f
  1401                           
  1402                           ;main.c: 435: break;
  1403  011A  2840               	goto	l4241
  1404  011B                     l4359:	
  1405                           
  1406                           ;main.c: 439: {
  1407                           ;main.c: 440: if(ucTimerDelay >= 5)
  1408  011B  3005               	movlw	5
  1409  011C  0255               	subwf	main@ucTimerDelay,w
  1410  011D  1C03               	skipc
  1411  011E  2922               	goto	l4367
  1412                           
  1413                           ;main.c: 441: {
  1414                           ;main.c: 442: PA0 = 1;
  1415  011F  1405               	bsf	5,0
  1416  0120                     l4363:	
  1417                           
  1418                           ;main.c: 443: ucTimerDelay = 0;
  1419  0120  01D5               	clrf	main@ucTimerDelay
  1420  0121  2919               	goto	l4357
  1421  0122                     l4367:	
  1422                           
  1423                           ;main.c: 446: else
  1424                           ;main.c: 447: ucTimerDelay++;
  1425  0122  0AD5               	incf	main@ucTimerDelay,f
  1426  0123  2840               	goto	l4241
  1427  0124                     l4369:	
  1428                           
  1429                           ;main.c: 452: {
  1430                           ;main.c: 453: if(ucTimerDelay >= 5)
  1431  0124  3005               	movlw	5
  1432  0125  0255               	subwf	main@ucTimerDelay,w
  1433  0126  1C03               	skipc
  1434  0127  2922               	goto	l4367
  1435                           
  1436                           ;main.c: 454: {
  1437                           ;main.c: 455: PA1= 1;
  1438  0128  1485               	bsf	5,1
  1439  0129  2920               	goto	l4363
  1440  012A                     l4379:	
  1441                           
  1442                           ;main.c: 466: {
  1443                           ;main.c: 467: if(ucTimerDelay >= 5)
  1444  012A  3005               	movlw	5
  1445  012B  0255               	subwf	main@ucTimerDelay,w
  1446  012C  1C03               	skipc
  1447  012D  2922               	goto	l4367
  1448                           
  1449                           ;main.c: 468: {
  1450                           ;main.c: 469: PA2= 1;
  1451  012E  1505               	bsf	5,2
  1452  012F  2920               	goto	l4363
  1453  0130                     l4389:	
  1454                           
  1455                           ;main.c: 479: {
  1456                           ;main.c: 480: if(ucTimerDelay >= 5)
  1457  0130  3005               	movlw	5
  1458  0131  0255               	subwf	main@ucTimerDelay,w
  1459  0132  1C03               	skipc
  1460  0133  2922               	goto	l4367
  1461                           
  1462                           ;main.c: 481: {
  1463                           ;main.c: 482: PA3 = 1;
  1464  0134  1585               	bsf	5,3
  1465  0135  2920               	goto	l4363
  1466  0136                     l4399:	
  1467                           
  1468                           ;main.c: 492: {
  1469                           ;main.c: 493: if(ucTimerDelay >= 5)
  1470  0136  3005               	movlw	5
  1471  0137  0255               	subwf	main@ucTimerDelay,w
  1472  0138  1C03               	skipc
  1473  0139  2922               	goto	l4367
  1474                           
  1475                           ;main.c: 494: {
  1476                           ;main.c: 495: PB0 = 0;
  1477  013A  1006               	bcf	6,0
  1478                           
  1479                           ;main.c: 496: PA0 = 0;
  1480  013B  1005               	bcf	5,0
  1481                           
  1482                           ;main.c: 497: PA1 = 0;
  1483  013C  1085               	bcf	5,1
  1484                           
  1485                           ;main.c: 498: PA2 = 0;
  1486  013D  1105               	bcf	5,2
  1487                           
  1488                           ;main.c: 499: PA3 = 0;
  1489  013E  1185               	bcf	5,3
  1490  013F  2920               	goto	l4363
  1491  0140                     l4409:	
  1492                           
  1493                           ;main.c: 509: {
  1494                           ;main.c: 510: if(ucTimerDelay >= 2)
  1495  0140  3002               	movlw	2
  1496  0141  0255               	subwf	main@ucTimerDelay,w
  1497  0142  1C03               	skipc
  1498  0143  2922               	goto	l4367
  1499                           
  1500                           ;main.c: 511: {
  1501                           ;main.c: 512: ucTimerDelay = 0;
  1502  0144  01D5               	clrf	main@ucTimerDelay
  1503                           
  1504                           ;main.c: 514: ucLoaderStep = 0;
  1505  0145  01CD               	clrf	main@ucLoaderStep
  1506  0146                     l4413:	
  1507                           
  1508                           ;main.c: 515: ucADC4_Step = ADC4_STEP_THIRD;
  1509  0146  3003               	movlw	3
  1510  0147                     L6:	
  1511  0147  00CB               	movwf	main@ucADC4_Step
  1512                           
  1513                           ;main.c: 516: }
  1514  0148  2840               	goto	l4241
  1515  0149                     l4419:	
  1516  0149  084D               	movf	main@ucLoaderStep,w
  1517                           
  1518                           ; Switch size 1, requested type "space"
  1519                           ; Number of cases is 7, Range of values is 0 to 6
  1520                           ; switch strategies available:
  1521                           ; Name         Instructions Cycles
  1522                           ; direct_byte           21     7 (fixed)
  1523                           ; simple_byte           22    12 (average)
  1524                           ; jumptable            260     6 (fixed)
  1525                           ; rangetable            11     6 (fixed)
  1526                           ; spacedrange           20     9 (fixed)
  1527                           ; locatedrange           7     3 (fixed)
  1528                           ;	Chosen strategy is direct_byte
  1529  014A  0084               	movwf	4
  1530  014B  3007               	movlw	7
  1531  014C  0204               	subwf	4,w
  1532  014D  1803               	skipnc
  1533  014E  2840               	goto	l4241
  1534  014F  3005               	movlw	high S5023
  1535  0150  008A               	movwf	10
  1536  0151  1003               	clrc
  1537  0152  0D04               	rlf	4,w
  1538  0153  3EDF               	addlw	low S5023
  1539  0154  0082               	movwf	2
  1540  0155                     l799:	
  1541                           ;main.c: 535: {
  1542                           ;main.c: 536: case 0:
  1543                           
  1544                           
  1545                           ;main.c: 537: {
  1546                           ;main.c: 538: PB0 = 1;
  1547  0155  1406               	bsf	6,0
  1548  0156                     l4421:	
  1549                           
  1550                           ;main.c: 539: ucLoaderStep1++;
  1551  0156  0ACE               	incf	main@ucLoaderStep1,f
  1552                           
  1553                           ;main.c: 540: break;
  1554  0157  2840               	goto	l4241
  1555  0158                     l4423:	
  1556                           
  1557                           ;main.c: 544: {
  1558                           ;main.c: 545: if(ucTimerDelay1 >= 5)
  1559  0158  3005               	movlw	5
  1560  0159  0256               	subwf	main@ucTimerDelay1,w
  1561  015A  1C03               	skipc
  1562  015B  295F               	goto	l4431
  1563                           
  1564                           ;main.c: 546: {
  1565                           ;main.c: 547: PA0 = 1;
  1566  015C  1405               	bsf	5,0
  1567  015D                     l4427:	
  1568                           
  1569                           ;main.c: 548: ucTimerDelay1 = 0;
  1570  015D  01D6               	clrf	main@ucTimerDelay1
  1571  015E  2956               	goto	l4421
  1572  015F                     l4431:	
  1573                           
  1574                           ;main.c: 551: else
  1575                           ;main.c: 552: ucTimerDelay1++;
  1576  015F  0AD6               	incf	main@ucTimerDelay1,f
  1577  0160  2840               	goto	l4241
  1578  0161                     l4433:	
  1579                           
  1580                           ;main.c: 557: {
  1581                           ;main.c: 558: if(ucTimerDelay1 >= 5)
  1582  0161  3005               	movlw	5
  1583  0162  0256               	subwf	main@ucTimerDelay1,w
  1584  0163  1C03               	skipc
  1585  0164  295F               	goto	l4431
  1586                           
  1587                           ;main.c: 559: {
  1588                           ;main.c: 560: PA1= 1;
  1589  0165  1485               	bsf	5,1
  1590  0166  295D               	goto	l4427
  1591  0167                     l4443:	
  1592                           
  1593                           ;main.c: 570: {
  1594                           ;main.c: 571: if(ucTimerDelay1 >= 5)
  1595  0167  3005               	movlw	5
  1596  0168  0256               	subwf	main@ucTimerDelay1,w
  1597  0169  1C03               	skipc
  1598  016A  295F               	goto	l4431
  1599                           
  1600                           ;main.c: 572: {
  1601                           ;main.c: 573: PA2 = 1;
  1602  016B  1505               	bsf	5,2
  1603  016C  295D               	goto	l4427
  1604  016D                     l4453:	
  1605                           
  1606                           ;main.c: 583: {
  1607                           ;main.c: 584: if(ucTimerDelay1 >= 5)
  1608  016D  3005               	movlw	5
  1609  016E  0256               	subwf	main@ucTimerDelay1,w
  1610  016F  1C03               	skipc
  1611  0170  295F               	goto	l4431
  1612                           
  1613                           ;main.c: 585: {
  1614                           ;main.c: 586: PA3 = 1;
  1615  0171  1585               	bsf	5,3
  1616  0172  295D               	goto	l4427
  1617  0173                     l4463:	
  1618                           
  1619                           ;main.c: 596: {
  1620                           ;main.c: 597: if(ucTimerDelay1 >= 5)
  1621  0173  3005               	movlw	5
  1622  0174  0256               	subwf	main@ucTimerDelay1,w
  1623  0175  1C03               	skipc
  1624  0176  295F               	goto	l4431
  1625                           
  1626                           ;main.c: 598: {
  1627                           ;main.c: 599: PA0 = 0;
  1628  0177  1005               	bcf	5,0
  1629                           
  1630                           ;main.c: 600: PA1 = 0;
  1631  0178  1085               	bcf	5,1
  1632                           
  1633                           ;main.c: 601: PA2 = 0;
  1634  0179  1105               	bcf	5,2
  1635                           
  1636                           ;main.c: 602: PA3 = 0;
  1637  017A  1185               	bcf	5,3
  1638  017B  295D               	goto	l4427
  1639  017C                     l4473:	
  1640                           
  1641                           ;main.c: 612: {
  1642                           ;main.c: 613: if(ucTimerDelay1 >= 2)
  1643  017C  3002               	movlw	2
  1644  017D  0256               	subwf	main@ucTimerDelay1,w
  1645  017E  1C03               	skipc
  1646  017F  295F               	goto	l4431
  1647                           
  1648                           ;main.c: 614: {
  1649                           ;main.c: 615: ucTimerDelay1 = 0;
  1650  0180  01D6               	clrf	main@ucTimerDelay1
  1651                           
  1652                           ;main.c: 617: ucLoaderStep1 = 0;
  1653  0181  01CE               	clrf	main@ucLoaderStep1
  1654  0182  2946               	goto	l4413
  1655  0183                     l4483:	
  1656  0183  084E               	movf	main@ucLoaderStep1,w
  1657                           
  1658                           ; Switch size 1, requested type "space"
  1659                           ; Number of cases is 7, Range of values is 0 to 6
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; direct_byte           21     7 (fixed)
  1663                           ; simple_byte           22    12 (average)
  1664                           ; jumptable            260     6 (fixed)
  1665                           ; rangetable            11     6 (fixed)
  1666                           ; spacedrange           20     9 (fixed)
  1667                           ; locatedrange           7     3 (fixed)
  1668                           ;	Chosen strategy is direct_byte
  1669  0184  0084               	movwf	4
  1670  0185  3007               	movlw	7
  1671  0186  0204               	subwf	4,w
  1672  0187  1803               	skipnc
  1673  0188  2840               	goto	l4241
  1674  0189  3005               	movlw	high S5025
  1675  018A  008A               	movwf	10
  1676  018B  1003               	clrc
  1677  018C  0D04               	rlf	4,w
  1678  018D  3EED               	addlw	low S5025
  1679  018E  0082               	movwf	2
  1680  018F                     l826:	
  1681                           ;main.c: 639: {
  1682                           ;main.c: 640: case 0:
  1683                           
  1684                           
  1685                           ;main.c: 641: {
  1686                           ;main.c: 642: PB0 = 1;
  1687  018F  1406               	bsf	6,0
  1688                           
  1689                           ;main.c: 643: PA0 = 1;
  1690  0190  1405               	bsf	5,0
  1691  0191                     l4485:	
  1692                           
  1693                           ;main.c: 644: ucLoaderStep2++;
  1694  0191  0ACF               	incf	main@ucLoaderStep2,f
  1695                           
  1696                           ;main.c: 645: break;
  1697  0192  2840               	goto	l4241
  1698  0193                     l4487:	
  1699                           
  1700                           ;main.c: 649: {
  1701                           ;main.c: 650: if(ucTimerDelay2 >= 5)
  1702  0193  3005               	movlw	5
  1703  0194  0257               	subwf	main@ucTimerDelay2,w
  1704  0195  1C03               	skipc
  1705  0196  299A               	goto	l4495
  1706                           
  1707                           ;main.c: 651: {
  1708                           ;main.c: 652: PA1 = 1;
  1709  0197  1485               	bsf	5,1
  1710  0198                     l4491:	
  1711                           
  1712                           ;main.c: 653: ucTimerDelay2 = 0;
  1713  0198  01D7               	clrf	main@ucTimerDelay2
  1714  0199  2991               	goto	l4485
  1715  019A                     l4495:	
  1716                           
  1717                           ;main.c: 656: else
  1718                           ;main.c: 657: ucTimerDelay2++;
  1719  019A  0AD7               	incf	main@ucTimerDelay2,f
  1720  019B  2840               	goto	l4241
  1721  019C                     l4497:	
  1722                           
  1723                           ;main.c: 662: {
  1724                           ;main.c: 663: if(ucTimerDelay2 >= 5)
  1725  019C  3005               	movlw	5
  1726  019D  0257               	subwf	main@ucTimerDelay2,w
  1727  019E  1C03               	skipc
  1728  019F  299A               	goto	l4495
  1729                           
  1730                           ;main.c: 664: {
  1731                           ;main.c: 665: PA2 = 1;
  1732  01A0  1505               	bsf	5,2
  1733  01A1  2998               	goto	l4491
  1734  01A2                     l4507:	
  1735                           
  1736                           ;main.c: 675: {
  1737                           ;main.c: 676: if(ucTimerDelay2 >= 5)
  1738  01A2  3005               	movlw	5
  1739  01A3  0257               	subwf	main@ucTimerDelay2,w
  1740  01A4  1C03               	skipc
  1741  01A5  299A               	goto	l4495
  1742                           
  1743                           ;main.c: 677: {
  1744                           ;main.c: 678: PA3 = 1;
  1745  01A6  1585               	bsf	5,3
  1746  01A7  2998               	goto	l4491
  1747  01A8                     l4517:	
  1748                           
  1749                           ;main.c: 688: {
  1750                           ;main.c: 689: if(ucTimerDelay2 >= 5)
  1751  01A8  3005               	movlw	5
  1752  01A9  0257               	subwf	main@ucTimerDelay2,w
  1753  01AA  1C03               	skipc
  1754  01AB  299A               	goto	l4495
  1755                           
  1756                           ;main.c: 690: {
  1757                           ;main.c: 692: PA1 = 0;
  1758  01AC  1085               	bcf	5,1
  1759                           
  1760                           ;main.c: 693: PA2 = 0;
  1761  01AD  1105               	bcf	5,2
  1762                           
  1763                           ;main.c: 694: PA3 = 0;
  1764  01AE  1185               	bcf	5,3
  1765  01AF  2998               	goto	l4491
  1766  01B0                     l4527:	
  1767                           
  1768                           ;main.c: 704: {
  1769                           ;main.c: 705: if(ucTimerDelay2 >= 2)
  1770  01B0  3002               	movlw	2
  1771  01B1  0257               	subwf	main@ucTimerDelay2,w
  1772  01B2  1C03               	skipc
  1773  01B3  299A               	goto	l4495
  1774                           
  1775                           ;main.c: 706: {
  1776                           ;main.c: 707: ucTimerDelay2 = 0;
  1777  01B4  01D7               	clrf	main@ucTimerDelay2
  1778                           
  1779                           ;main.c: 709: ucLoaderStep2 = 0;
  1780  01B5  01CF               	clrf	main@ucLoaderStep2
  1781  01B6  2946               	goto	l4413
  1782  01B7                     l4537:	
  1783  01B7  084F               	movf	main@ucLoaderStep2,w
  1784                           
  1785                           ; Switch size 1, requested type "space"
  1786                           ; Number of cases is 6, Range of values is 0 to 5
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; direct_byte           19     7 (fixed)
  1790                           ; simple_byte           19    10 (average)
  1791                           ; jumptable            260     6 (fixed)
  1792                           ; rangetable            10     6 (fixed)
  1793                           ; spacedrange           18     9 (fixed)
  1794                           ; locatedrange           6     3 (fixed)
  1795                           ;	Chosen strategy is direct_byte
  1796  01B8  0084               	movwf	4
  1797  01B9  3006               	movlw	6
  1798  01BA  0204               	subwf	4,w
  1799  01BB  1803               	skipnc
  1800  01BC  2840               	goto	l4241
  1801  01BD  3006               	movlw	high S5027
  1802  01BE  008A               	movwf	10
  1803  01BF  1003               	clrc
  1804  01C0  0D04               	rlf	4,w
  1805  01C1  3E17               	addlw	low S5027
  1806  01C2  0082               	movwf	2
  1807  01C3                     l850:	
  1808                           ;main.c: 731: {
  1809                           ;main.c: 732: case 0:
  1810                           
  1811                           
  1812                           ;main.c: 733: {
  1813                           ;main.c: 734: PB0 = 1;
  1814  01C3  1406               	bsf	6,0
  1815                           
  1816                           ;main.c: 735: PA0 = 1;
  1817  01C4  1405               	bsf	5,0
  1818                           
  1819                           ;main.c: 736: PA1 = 1;
  1820  01C5  1485               	bsf	5,1
  1821  01C6                     l4539:	
  1822                           
  1823                           ;main.c: 737: ucLoaderStep3++;
  1824  01C6  0AD0               	incf	main@ucLoaderStep3,f
  1825                           
  1826                           ;main.c: 738: break;
  1827  01C7  2840               	goto	l4241
  1828  01C8                     l4541:	
  1829                           
  1830                           ;main.c: 742: {
  1831                           ;main.c: 743: if(ucTimerDelay3 >= 5)
  1832  01C8  3005               	movlw	5
  1833  01C9  0258               	subwf	main@ucTimerDelay3,w
  1834  01CA  1C03               	skipc
  1835  01CB  29CF               	goto	l4549
  1836                           
  1837                           ;main.c: 744: {
  1838                           ;main.c: 745: PA2 = 1;
  1839  01CC  1505               	bsf	5,2
  1840  01CD                     l4545:	
  1841                           
  1842                           ;main.c: 746: ucTimerDelay3 = 0;
  1843  01CD  01D8               	clrf	main@ucTimerDelay3
  1844  01CE  29C6               	goto	l4539
  1845  01CF                     l4549:	
  1846                           
  1847                           ;main.c: 749: else
  1848                           ;main.c: 750: ucTimerDelay3++;
  1849  01CF  0AD8               	incf	main@ucTimerDelay3,f
  1850  01D0  2840               	goto	l4241
  1851  01D1                     l4551:	
  1852                           
  1853                           ;main.c: 755: {
  1854                           ;main.c: 756: if(ucTimerDelay3 >= 5)
  1855  01D1  3005               	movlw	5
  1856  01D2  0258               	subwf	main@ucTimerDelay3,w
  1857  01D3  1C03               	skipc
  1858  01D4  29CF               	goto	l4549
  1859                           
  1860                           ;main.c: 757: {
  1861                           ;main.c: 758: PA3 = 1;
  1862  01D5  1585               	bsf	5,3
  1863  01D6  29CD               	goto	l4545
  1864  01D7                     l4561:	
  1865                           
  1866                           ;main.c: 769: {
  1867                           ;main.c: 770: if(ucTimerDelay3 >= 5)
  1868  01D7  3005               	movlw	5
  1869  01D8  0258               	subwf	main@ucTimerDelay3,w
  1870  01D9  1C03               	skipc
  1871  01DA  29CF               	goto	l4549
  1872                           
  1873                           ;main.c: 771: {
  1874                           ;main.c: 773: PA2 = 0;
  1875  01DB  1105               	bcf	5,2
  1876                           
  1877                           ;main.c: 774: PA3 = 0;
  1878  01DC  1185               	bcf	5,3
  1879  01DD  29CD               	goto	l4545
  1880  01DE                     l4571:	
  1881                           
  1882                           ;main.c: 784: {
  1883                           ;main.c: 785: if(ucTimerDelay3 >= 2)
  1884  01DE  3002               	movlw	2
  1885  01DF  0258               	subwf	main@ucTimerDelay3,w
  1886  01E0  1C03               	skipc
  1887  01E1  29CF               	goto	l4549
  1888                           
  1889                           ;main.c: 786: {
  1890                           ;main.c: 787: ucTimerDelay3 = 0;
  1891  01E2  01D8               	clrf	main@ucTimerDelay3
  1892                           
  1893                           ;main.c: 789: ucLoaderStep3 = 0;
  1894  01E3  01D0               	clrf	main@ucLoaderStep3
  1895  01E4  2946               	goto	l4413
  1896  01E5                     l4581:	
  1897  01E5  0850               	movf	main@ucLoaderStep3,w
  1898                           
  1899                           ; Switch size 1, requested type "space"
  1900                           ; Number of cases is 5, Range of values is 0 to 4
  1901                           ; switch strategies available:
  1902                           ; Name         Instructions Cycles
  1903                           ; simple_byte           16     9 (average)
  1904                           ; direct_byte           17     7 (fixed)
  1905                           ; jumptable            260     6 (fixed)
  1906                           ; rangetable             9     6 (fixed)
  1907                           ; spacedrange           16     9 (fixed)
  1908                           ; locatedrange           5     3 (fixed)
  1909                           ;	Chosen strategy is simple_byte
  1910  01E6  3A00               	xorlw	0	; case 0
  1911  01E7  1903               	skipnz
  1912  01E8  29C3               	goto	l850
  1913  01E9  3A01               	xorlw	1	; case 1
  1914  01EA  1903               	skipnz
  1915  01EB  29C8               	goto	l4541
  1916  01EC  3A03               	xorlw	3	; case 2
  1917  01ED  1903               	skipnz
  1918  01EE  29D1               	goto	l4551
  1919  01EF  3A01               	xorlw	1	; case 3
  1920  01F0  1903               	skipnz
  1921  01F1  29D7               	goto	l4561
  1922  01F2  3A07               	xorlw	7	; case 4
  1923  01F3  1903               	skipnz
  1924  01F4  29DE               	goto	l4571
  1925  01F5  286C               	goto	l710
  1926  01F6                     l871:	
  1927                           ;main.c: 811: {
  1928                           ;main.c: 812: case 0:
  1929                           
  1930                           
  1931                           ;main.c: 813: {
  1932                           ;main.c: 814: PB0 = 1;
  1933  01F6  1406               	bsf	6,0
  1934                           
  1935                           ;main.c: 815: PA0 = 1;
  1936  01F7  1405               	bsf	5,0
  1937                           
  1938                           ;main.c: 816: PA1 = 1;
  1939  01F8  1485               	bsf	5,1
  1940                           
  1941                           ;main.c: 817: PA2 = 1;
  1942  01F9  1505               	bsf	5,2
  1943  01FA                     l4583:	
  1944                           
  1945                           ;main.c: 818: ucLoaderStep4++;
  1946  01FA  0AD1               	incf	main@ucLoaderStep4,f
  1947                           
  1948                           ;main.c: 819: break;
  1949  01FB  2840               	goto	l4241
  1950  01FC                     l4585:	
  1951                           
  1952                           ;main.c: 823: {
  1953                           ;main.c: 824: if(ucTimerDelay4 >= 5)
  1954  01FC  3005               	movlw	5
  1955  01FD  0259               	subwf	main@ucTimerDelay4,w
  1956  01FE  1C03               	skipc
  1957  01FF  2A03               	goto	l4593
  1958                           
  1959                           ;main.c: 825: {
  1960                           ;main.c: 826: PA3 = 1;
  1961  0200  1585               	bsf	5,3
  1962  0201                     l4589:	
  1963                           
  1964                           ;main.c: 827: ucTimerDelay4 = 0;
  1965  0201  01D9               	clrf	main@ucTimerDelay4
  1966  0202  29FA               	goto	l4583
  1967  0203                     l4593:	
  1968                           
  1969                           ;main.c: 830: else
  1970                           ;main.c: 831: ucTimerDelay4++;
  1971  0203  0AD9               	incf	main@ucTimerDelay4,f
  1972  0204  2840               	goto	l4241
  1973  0205                     l4595:	
  1974                           
  1975                           ;main.c: 836: {
  1976                           ;main.c: 837: if(ucTimerDelay4 >= 5)
  1977  0205  3005               	movlw	5
  1978  0206  0259               	subwf	main@ucTimerDelay4,w
  1979  0207  1C03               	skipc
  1980  0208  2A03               	goto	l4593
  1981                           
  1982                           ;main.c: 838: {
  1983                           ;main.c: 839: PA3 = 0;
  1984  0209  1185               	bcf	5,3
  1985  020A  2A01               	goto	l4589
  1986  020B                     l4605:	
  1987                           
  1988                           ;main.c: 849: {
  1989                           ;main.c: 850: if(ucTimerDelay4 >= 2)
  1990  020B  3002               	movlw	2
  1991  020C  0259               	subwf	main@ucTimerDelay4,w
  1992  020D  1C03               	skipc
  1993  020E  2A03               	goto	l4593
  1994                           
  1995                           ;main.c: 851: {
  1996                           ;main.c: 852: ucTimerDelay4 = 0;
  1997  020F  01D9               	clrf	main@ucTimerDelay4
  1998                           
  1999                           ;main.c: 854: ucLoaderStep4 = 0;
  2000  0210  01D1               	clrf	main@ucLoaderStep4
  2001  0211  2946               	goto	l4413
  2002  0212                     l4615:	
  2003  0212  0851               	movf	main@ucLoaderStep4,w
  2004                           
  2005                           ; Switch size 1, requested type "space"
  2006                           ; Number of cases is 4, Range of values is 0 to 3
  2007                           ; switch strategies available:
  2008                           ; Name         Instructions Cycles
  2009                           ; simple_byte           13     7 (average)
  2010                           ; direct_byte           15     7 (fixed)
  2011                           ; jumptable            260     6 (fixed)
  2012                           ; rangetable             8     6 (fixed)
  2013                           ; spacedrange           14     9 (fixed)
  2014                           ; locatedrange           4     3 (fixed)
  2015                           ;	Chosen strategy is simple_byte
  2016  0213  3A00               	xorlw	0	; case 0
  2017  0214  1903               	skipnz
  2018  0215  29F6               	goto	l871
  2019  0216  3A01               	xorlw	1	; case 1
  2020  0217  1903               	skipnz
  2021  0218  29FC               	goto	l4585
  2022  0219  3A03               	xorlw	3	; case 2
  2023  021A  1903               	skipnz
  2024  021B  2A05               	goto	l4595
  2025  021C  3A01               	xorlw	1	; case 3
  2026  021D  1903               	skipnz
  2027  021E  2A0B               	goto	l4605
  2028  021F  286C               	goto	l710
  2029  0220                     l4619:	
  2030  0220  084C               	movf	main@ucChannel4Type,w
  2031                           
  2032                           ; Switch size 1, requested type "space"
  2033                           ; Number of cases is 5, Range of values is 0 to 4
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte           16     9 (average)
  2037                           ; direct_byte           17     7 (fixed)
  2038                           ; jumptable            260     6 (fixed)
  2039                           ; rangetable             9     6 (fixed)
  2040                           ; spacedrange           16     9 (fixed)
  2041                           ; locatedrange           5     3 (fixed)
  2042                           ;	Chosen strategy is simple_byte
  2043  0221  3A00               	xorlw	0	; case 0
  2044  0222  1903               	skipnz
  2045  0223  2949               	goto	l4419
  2046  0224  3A01               	xorlw	1	; case 1
  2047  0225  1903               	skipnz
  2048  0226  2983               	goto	l4483
  2049  0227  3A03               	xorlw	3	; case 2
  2050  0228  1903               	skipnz
  2051  0229  29B7               	goto	l4537
  2052  022A  3A01               	xorlw	1	; case 3
  2053  022B  1903               	skipnz
  2054  022C  29E5               	goto	l4581
  2055  022D  3A07               	xorlw	7	; case 4
  2056  022E  1903               	skipnz
  2057  022F  2A12               	goto	l4615
  2058  0230  286C               	goto	l710
  2059  0231                     l4621:	
  2060                           
  2061                           ;main.c: 878: {
  2062                           ;main.c: 879: static unsigned char ucTimerDelayP5s = 0;
  2063                           ;main.c: 881: static unsigned char ucTimerPA6DelayP1s = 0;
  2064                           ;main.c: 883: static unsigned char ucTimerPB6DelayP1s = 0;
  2065                           ;main.c: 885: if(isFinishedTwentySecondsTimer())
  2066  0231  118A  2656  118A   	fcall	_isFinishedTwentySecondsTimer
  2067  0234  3A00               	xorlw	0
  2068  0235  1903               	skipnz
  2069  0236  28DF               	goto	l4337
  2070                           
  2071                           ;main.c: 886: {
  2072                           ;main.c: 887: if(ucTimerPA6DelayP1s < 1)
  2073  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0238  08E3               	movf	main@ucTimerPA6DelayP1s,f
  2075  0239  1D03               	skipz
  2076  023A  2A3E               	goto	l4629
  2077                           
  2078                           ;main.c: 888: {
  2079                           ;main.c: 889: PA6 = 0;
  2080  023B  1305               	bcf	5,6
  2081                           
  2082                           ;main.c: 890: ucTimerPA6DelayP1s++;
  2083  023C  0AE3               	incf	main@ucTimerPA6DelayP1s,f
  2084                           
  2085                           ;main.c: 891: }
  2086  023D  2840               	goto	l4241
  2087  023E                     l4629:	
  2088                           
  2089                           ;main.c: 892: else
  2090                           ;main.c: 893: {
  2091                           ;main.c: 894: if(ucTimerPB6DelayP1s < 1)
  2092  023E  08E4               	movf	main@ucTimerPB6DelayP1s,f
  2093  023F  1D03               	skipz
  2094  0240  2A49               	goto	l4635
  2095                           
  2096                           ;main.c: 895: {
  2097                           ;main.c: 896: PBOD6 =0;
  2098  0241  1683               	bsf	3,5	;RP0=1, select bank3
  2099  0242  1703               	bsf	3,6	;RP1=1, select bank3
  2100  0243  1308               	bcf	8,6
  2101                           
  2102                           ;main.c: 897: PB6 = 1;
  2103  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0246  1706               	bsf	6,6
  2106                           
  2107                           ;main.c: 898: ucTimerPB6DelayP1s++;
  2108  0247  0AE4               	incf	main@ucTimerPB6DelayP1s,f
  2109                           
  2110                           ;main.c: 899: }
  2111  0248  2840               	goto	l4241
  2112  0249                     l4635:	
  2113                           
  2114                           ;main.c: 900: else
  2115                           ;main.c: 901: {
  2116                           ;main.c: 902: if(ucTimerDelayP5s < 3)
  2117  0249  3003               	movlw	3
  2118  024A  025A               	subwf	main@ucTimerDelayP5s,w
  2119  024B  1803               	skipnc
  2120  024C  2A4F               	goto	l4639
  2121                           
  2122                           ;main.c: 903: {
  2123                           ;main.c: 904: ucTimerDelayP5s++;
  2124  024D  0ADA               	incf	main@ucTimerDelayP5s,f
  2125                           
  2126                           ;main.c: 905: }
  2127  024E  2840               	goto	l4241
  2128  024F                     l4639:	
  2129                           
  2130                           ;main.c: 906: else
  2131                           ;main.c: 907: {
  2132                           ;main.c: 909: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2133                           ;main.c: 911: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f = 
      +                          0;
  2134                           ;main.c: 913: if((getAdOriginalCh14Value() > 2800))
  2135  024F  118A  2482  118A   	fcall	_getAdOriginalCh14Value
  2136  0252  300A               	movlw	10
  2137  0253  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2138  0254  30F1               	movlw	241
  2139  0255  1903               	skipnz
  2140  0256  0246               	subwf	?_getAdOriginalCh14Value,w
  2141  0257  1C03               	skipc
  2142  0258  2A5C               	goto	l4645
  2143                           
  2144                           ;main.c: 914: {
  2145                           ;main.c: 915: ucTimerForDACR0_CNT1++;
  2146  0259  0ADB               	incf	main@ucTimerForDACR0_CNT1,f
  2147                           
  2148                           ;main.c: 916: ucTimerForDACR0_CNT2 = 0;
  2149  025A  01DD               	clrf	main@ucTimerForDACR0_CNT2
  2150                           
  2151                           ;main.c: 917: }
  2152  025B  2A5E               	goto	l4649
  2153  025C                     l4645:	
  2154                           
  2155                           ;main.c: 918: else
  2156                           ;main.c: 919: {
  2157                           ;main.c: 920: ucTimerForDACR0_CNT2 = 0;
  2158  025C  01DD               	clrf	main@ucTimerForDACR0_CNT2
  2159                           
  2160                           ;main.c: 921: ucTimerForDACR0_CNT1++;
  2161  025D  0ADB               	incf	main@ucTimerForDACR0_CNT1,f
  2162  025E                     l4649:	
  2163                           
  2164                           ;main.c: 922: }
  2165                           ;main.c: 924: if(ucTimerForDACR0_CNT1 >= 3)
  2166  025E  3003               	movlw	3
  2167  025F  025B               	subwf	main@ucTimerForDACR0_CNT1,w
  2168  0260  1C03               	skipc
  2169  0261  2A64               	goto	l4657
  2170                           
  2171                           ;main.c: 925: ucTimerForDACR0_CNT1_f = 1;
  2172  0262  01DC               	clrf	main@ucTimerForDACR0_CNT1_f
  2173  0263  0ADC               	incf	main@ucTimerForDACR0_CNT1_f,f
  2174  0264                     l4657:	
  2175                           
  2176                           ;main.c: 930: if(ucTimerForDACR0_CNT1_f)
  2177  0264  085C               	movf	main@ucTimerForDACR0_CNT1_f,w
  2178  0265  1903               	btfsc	3,2
  2179  0266  2A69               	goto	l4661
  2180                           
  2181                           ;main.c: 931: {
  2182                           ;main.c: 932: DACR0=0x0F;
  2183  0267  300F               	movlw	15
  2184  0268  2A6D               	goto	L7
  2185  0269                     l4661:	
  2186                           ;main.c: 934: }
  2187                           
  2188                           ;main.c: 933: ucADC4_Step = ADC4_STEP_FOURTH;
  2189                           
  2190                           
  2191                           ;main.c: 935: else if(ucTimerForDACR0_CNT2_f)
  2192  0269  085E               	movf	main@ucTimerForDACR0_CNT2_f,w
  2193  026A  1903               	btfsc	3,2
  2194  026B  2A72               	goto	l4665
  2195                           
  2196                           ;main.c: 936: {
  2197                           ;main.c: 937: DACR0=0x07;
  2198  026C  3007               	movlw	7
  2199  026D                     L7:	
  2200  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2201  026E  0088               	movwf	8	;volatile
  2202                           
  2203                           ;main.c: 938: ucADC4_Step = ADC4_STEP_FOURTH;
  2204  026F  3004               	movlw	4
  2205  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0271  00CB               	movwf	main@ucADC4_Step
  2207  0272                     l4665:	
  2208                           ;main.c: 939: }
  2209                           
  2210                           
  2211                           ;main.c: 943: }
  2212                           ;main.c: 945: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2213  0272  084B               	movf	main@ucADC4_Step,w
  2214  0273  3A04               	xorlw	4
  2215  0274  1D03               	skipz
  2216  0275  2840               	goto	l4241
  2217                           
  2218                           ;main.c: 946: {
  2219                           ;main.c: 947: ucTimerForDACR0_CNT1 = 0;
  2220  0276  01DB               	clrf	main@ucTimerForDACR0_CNT1
  2221                           
  2222                           ;main.c: 948: ucTimerForDACR0_CNT2 = 0;
  2223  0277  01DD               	clrf	main@ucTimerForDACR0_CNT2
  2224                           
  2225                           ;main.c: 949: ucTimerForDACR0_CNT1_f = 0;
  2226  0278  01DC               	clrf	main@ucTimerForDACR0_CNT1_f
  2227                           
  2228                           ;main.c: 950: ucTimerForDACR0_CNT2_f = 0;
  2229  0279  01DE               	clrf	main@ucTimerForDACR0_CNT2_f
  2230                           
  2231                           ;main.c: 952: ucTimerPB6DelayP1s = 0;
  2232  027A  01E4               	clrf	main@ucTimerPB6DelayP1s
  2233                           
  2234                           ;main.c: 953: ucTimerPA6DelayP1s = 0;
  2235  027B  01E3               	clrf	main@ucTimerPA6DelayP1s
  2236                           
  2237                           ;main.c: 955: ucTimerDelayP5s = 0;
  2238  027C  01DA               	clrf	main@ucTimerDelayP5s
  2239  027D  2840               	goto	l4241
  2240  027E                     l4669:	
  2241                           
  2242                           ;main.c: 968: {
  2243                           ;main.c: 969: static unsigned char ucTimer1s = 0;
  2244                           ;main.c: 971: static unsigned char ucTimerSeond1s = 0;
  2245                           ;main.c: 973: if(ucTimerSeond1s < 3)
  2246  027E  3003               	movlw	3
  2247  027F  0267               	subwf	main@ucTimerSeond1s,w
  2248  0280  1803               	skipnc
  2249  0281  2A84               	goto	l4673
  2250                           
  2251                           ;main.c: 974: {
  2252                           ;main.c: 975: ucTimerSeond1s++;
  2253  0282  0AE7               	incf	main@ucTimerSeond1s,f
  2254                           
  2255                           ;main.c: 976: }
  2256  0283  2840               	goto	l4241
  2257  0284                     l4673:	
  2258                           
  2259                           ;main.c: 977: else
  2260                           ;main.c: 978: {
  2261                           ;main.c: 979: if(ucTimer1s < 3)
  2262  0284  3003               	movlw	3
  2263  0285  0252               	subwf	main@ucTimer1s,w
  2264  0286  1803               	skipnc
  2265  0287  2A8E               	goto	l4681
  2266                           
  2267                           ;main.c: 980: {
  2268                           ;main.c: 981: ucTimer1s++;
  2269  0288  0AD2               	incf	main@ucTimer1s,f
  2270                           
  2271                           ;main.c: 982: PB6 = 1;
  2272  0289  1706               	bsf	6,6
  2273                           
  2274                           ;main.c: 983: PBOD6 = 1;
  2275  028A  1683               	bsf	3,5	;RP0=1, select bank3
  2276  028B  1703               	bsf	3,6	;RP1=1, select bank3
  2277  028C  1708               	bsf	8,6
  2278                           
  2279                           ;main.c: 984: }
  2280  028D  2840               	goto	l4241
  2281  028E                     l4681:	
  2282                           
  2283                           ;main.c: 985: else
  2284                           ;main.c: 986: {
  2285                           ;main.c: 987: ucTimer1s = 0;
  2286  028E  01D2               	clrf	main@ucTimer1s
  2287                           
  2288                           ;main.c: 989: ucTimerSeond1s = 0;
  2289  028F  01E7               	clrf	main@ucTimerSeond1s
  2290                           
  2291                           ;main.c: 991: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2292  0290  01CA               	clrf	main@enumMainLoopStep
  2293  0291  0ACA               	incf	main@enumMainLoopStep,f
  2294                           
  2295                           ;main.c: 993: ucADC4_Step = ADC4_STEP_INIT;
  2296  0292  01CB               	clrf	main@ucADC4_Step
  2297  0293  2840               	goto	l4241
  2298  0294                     l4687:	
  2299  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0295  084B               	movf	main@ucADC4_Step,w
  2301                           
  2302                           ; Switch size 1, requested type "space"
  2303                           ; Number of cases is 5, Range of values is 0 to 4
  2304                           ; switch strategies available:
  2305                           ; Name         Instructions Cycles
  2306                           ; simple_byte           16     9 (average)
  2307                           ; direct_byte           17     7 (fixed)
  2308                           ; jumptable            260     6 (fixed)
  2309                           ; rangetable             9     6 (fixed)
  2310                           ; spacedrange           16     9 (fixed)
  2311                           ; locatedrange           5     3 (fixed)
  2312                           ;	Chosen strategy is simple_byte
  2313  0296  3A00               	xorlw	0	; case 0
  2314  0297  1903               	skipnz
  2315  0298  28DC               	goto	l4335
  2316  0299  3A01               	xorlw	1	; case 1
  2317  029A  1903               	skipnz
  2318  029B  28E3               	goto	l4339
  2319  029C  3A03               	xorlw	3	; case 2
  2320  029D  1903               	skipnz
  2321  029E  2A20               	goto	l4619
  2322  029F  3A01               	xorlw	1	; case 3
  2323  02A0  1903               	skipnz
  2324  02A1  2A31               	goto	l4621
  2325  02A2  3A07               	xorlw	7	; case 4
  2326  02A3  1903               	skipnz
  2327  02A4  2A7E               	goto	l4669
  2328  02A5  286C               	goto	l710
  2329  02A6                     l930:	
  2330                           ;main.c: 1020: {
  2331                           ;main.c: 1021: case HOUR_3_BRANCH_STEP_FIRST:
  2332                           
  2333                           
  2334                           ;main.c: 1022: {
  2335                           ;main.c: 1023: PA7 = 1;
  2336  02A6  1785               	bsf	5,7
  2337                           
  2338                           ;main.c: 1024: PAOD7 = 1;
  2339  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  2340  02A8  303C               	movlw	60
  2341  02A9  1703               	bsf	3,6	;RP1=1, select bank3
  2342  02AA  1787               	bsf	7,7
  2343                           
  2344                           ;main.c: 1025: startThreeHoursTimer(60);
  2345  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2346  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2347  02AD  00A0               	movwf	?_startThreeHoursTimer
  2348  02AE  01A1               	clrf	?_startThreeHoursTimer+1
  2349  02AF  118A  25FB  118A   	fcall	_startThreeHoursTimer
  2350                           
  2351                           ;main.c: 1027: PB0 = 1;
  2352  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2353  02B3  1406               	bsf	6,0
  2354                           
  2355                           ;main.c: 1028: PA0 = 1;
  2356  02B4  1405               	bsf	5,0
  2357                           
  2358                           ;main.c: 1029: PA1 = 1;
  2359  02B5  1485               	bsf	5,1
  2360                           
  2361                           ;main.c: 1030: PA2 = 1;
  2362  02B6  1505               	bsf	5,2
  2363                           
  2364                           ;main.c: 1031: PA3 = 1;
  2365  02B7  1585               	bsf	5,3
  2366                           
  2367                           ;main.c: 1033: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2368  02B8  01C9               	clrf	main@enumBranchStep
  2369  02B9  0AC9               	incf	main@enumBranchStep,f
  2370                           
  2371                           ;main.c: 1034: break;
  2372  02BA  2840               	goto	l4241
  2373  02BB                     l4703:	
  2374                           
  2375                           ;main.c: 1038: {
  2376                           ;main.c: 1039: static unsigned char ucTimer20s = 0;
  2377                           ;main.c: 1041: if(ucTimer20s < 200)
  2378  02BB  30C8               	movlw	200
  2379  02BC  0253               	subwf	main@ucTimer20s,w
  2380  02BD  1803               	skipnc
  2381  02BE  2AC1               	goto	l4707
  2382                           
  2383                           ;main.c: 1042: {
  2384                           ;main.c: 1043: ucTimer20s++;
  2385  02BF  0AD3               	incf	main@ucTimer20s,f
  2386                           
  2387                           ;main.c: 1045: }
  2388  02C0  2840               	goto	l4241
  2389  02C1                     l4707:	
  2390  02C1  3002               	movlw	2
  2391                           
  2392                           ;main.c: 1046: else
  2393                           ;main.c: 1047: {
  2394                           ;main.c: 1049: ucTimer20s = 0;
  2395  02C2  01D3               	clrf	main@ucTimer20s
  2396                           
  2397                           ;main.c: 1051: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2398  02C3  00C9               	movwf	main@enumBranchStep
  2399                           
  2400                           ;main.c: 1053: PA6 = 0;
  2401  02C4  1305               	bcf	5,6
  2402  02C5  2840               	goto	l4241
  2403  02C6                     l4713:	
  2404                           
  2405                           ;main.c: 1059: {
  2406                           ;main.c: 1060: if(isFinishedThreeHoursTimer())
  2407  02C6  118A  2650  118A   	fcall	_isFinishedThreeHoursTimer
  2408  02C9  3A00               	xorlw	0
  2409  02CA  1903               	skipnz
  2410  02CB  2ACF               	goto	l4719
  2411                           
  2412                           ;main.c: 1061: {
  2413                           ;main.c: 1062: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2414  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2415  02CD  01C9               	clrf	main@enumBranchStep
  2416  02CE  28D9               	goto	l4333
  2417  02CF                     l4719:	
  2418                           
  2419                           ;main.c: 1065: else
  2420                           ;main.c: 1066: {
  2421                           ;main.c: 1067: static unsigned char ucTimerX1P5s = 0;
  2422                           ;main.c: 1069: static unsigned char ucTimerLessX1P5s = 0;
  2423                           ;main.c: 1071: if(getAdOriginalCh1Value() < 130)
  2424  02CF  118A  2478  118A   	fcall	_getAdOriginalCh1Value
  2425  02D2  3000               	movlw	0
  2426  02D3  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2427  02D4  3082               	movlw	130
  2428  02D5  1903               	skipnz
  2429  02D6  0246               	subwf	?_getAdOriginalCh1Value,w
  2430  02D7  1803               	skipnc
  2431  02D8  2ADC               	goto	l4725
  2432                           
  2433                           ;main.c: 1072: {
  2434                           ;main.c: 1073: ucTimerX1P5s = 0;
  2435  02D9  01E8               	clrf	main@ucTimerX1P5s
  2436                           
  2437                           ;main.c: 1074: ucTimerLessX1P5s++;
  2438  02DA  0AE0               	incf	main@ucTimerLessX1P5s,f
  2439                           
  2440                           ;main.c: 1075: }
  2441  02DB  2ADE               	goto	l4729
  2442  02DC                     l4725:	
  2443                           
  2444                           ;main.c: 1076: else
  2445                           ;main.c: 1077: {
  2446                           ;main.c: 1078: ucTimerX1P5s++;
  2447  02DC  0AE8               	incf	main@ucTimerX1P5s,f
  2448                           
  2449                           ;main.c: 1079: ucTimerLessX1P5s = 0;
  2450  02DD  01E0               	clrf	main@ucTimerLessX1P5s
  2451  02DE                     l4729:	
  2452                           
  2453                           ;main.c: 1080: }
  2454                           ;main.c: 1082: if(ucTimerX1P5s >= 5)
  2455  02DE  3005               	movlw	5
  2456  02DF  0268               	subwf	main@ucTimerX1P5s,w
  2457  02E0  1C03               	skipc
  2458  02E1  2AF1               	goto	l4743
  2459                           
  2460                           ;main.c: 1083: {
  2461                           ;main.c: 1084: ucTimerX1P5s = 0;
  2462  02E2  01E8               	clrf	main@ucTimerX1P5s
  2463                           
  2464                           ;main.c: 1085: PAOD7 = 0;
  2465  02E3  1683               	bsf	3,5	;RP0=1, select bank3
  2466  02E4  1703               	bsf	3,6	;RP1=1, select bank3
  2467  02E5  1387               	bcf	7,7
  2468                           
  2469                           ;main.c: 1086: PA7 = 0;
  2470  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2471  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2472  02E8  1385               	bcf	5,7
  2473                           
  2474                           ;main.c: 1087: clearThreeHoursTimer();
  2475  02E9  118A  25AC  118A   	fcall	_clearThreeHoursTimer
  2476                           
  2477                           ;main.c: 1089: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2478  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2479  02ED  3002               	movlw	2
  2480  02EE  01C9               	clrf	main@enumBranchStep
  2481  02EF                     L4:	
  2482                           ;main.c: 1091: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2483                           
  2484  02EF  00CA               	movwf	main@enumMainLoopStep
  2485                           
  2486                           ;main.c: 1092: }
  2487  02F0  2840               	goto	l4241
  2488  02F1                     l4743:	
  2489                           
  2490                           ;main.c: 1093: else if(ucTimerLessX1P5s >= 5)
  2491  02F1  3005               	movlw	5
  2492  02F2  0260               	subwf	main@ucTimerLessX1P5s,w
  2493  02F3  1C03               	skipc
  2494  02F4  2840               	goto	l4241
  2495                           
  2496                           ;main.c: 1094: {
  2497                           ;main.c: 1095: static unsigned char ucTimerX2P5s = 0;
  2498                           ;main.c: 1097: static unsigned char ucTimerLessX2P5s = 0;
  2499                           ;main.c: 1099: if(getAdOriginalCh14Value() >= 1950)
  2500  02F5  118A  2482  118A   	fcall	_getAdOriginalCh14Value
  2501  02F8  3007               	movlw	7
  2502  02F9  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2503  02FA  309E               	movlw	158
  2504  02FB  1903               	skipnz
  2505  02FC  0246               	subwf	?_getAdOriginalCh14Value,w
  2506  02FD  1C03               	skipc
  2507  02FE  2B02               	goto	l4751
  2508                           
  2509                           ;main.c: 1100: {
  2510                           ;main.c: 1101: ucTimerX2P5s++;
  2511  02FF  0AE9               	incf	main@ucTimerX2P5s,f
  2512                           
  2513                           ;main.c: 1102: ucTimerLessX2P5s = 0;
  2514  0300  01E1               	clrf	main@ucTimerLessX2P5s
  2515                           
  2516                           ;main.c: 1103: }
  2517  0301  2B04               	goto	l4755
  2518  0302                     l4751:	
  2519                           
  2520                           ;main.c: 1104: else
  2521                           ;main.c: 1105: {
  2522                           ;main.c: 1106: ucTimerX2P5s = 0;
  2523  0302  01E9               	clrf	main@ucTimerX2P5s
  2524                           
  2525                           ;main.c: 1107: ucTimerLessX2P5s++;
  2526  0303  0AE1               	incf	main@ucTimerLessX2P5s,f
  2527  0304                     l4755:	
  2528                           
  2529                           ;main.c: 1108: }
  2530                           ;main.c: 1110: if(ucTimerX2P5s >= 5)
  2531  0304  3005               	movlw	5
  2532  0305  0269               	subwf	main@ucTimerX2P5s,w
  2533  0306  1C03               	skipc
  2534  0307  2B0A               	goto	l4759
  2535                           
  2536                           ;main.c: 1111: {
  2537                           ;main.c: 1112: ucTimerX2P5s = 0;
  2538  0308  01E9               	clrf	main@ucTimerX2P5s
  2539                           
  2540                           ;main.c: 1113: }
  2541  0309  2840               	goto	l4241
  2542  030A                     l4759:	
  2543                           
  2544                           ;main.c: 1114: else if(ucTimerLessX2P5s >= 5)
  2545  030A  3005               	movlw	5
  2546  030B  0261               	subwf	main@ucTimerLessX2P5s,w
  2547  030C  1C03               	skipc
  2548  030D  2840               	goto	l4241
  2549                           
  2550                           ;main.c: 1115: {
  2551                           ;main.c: 1116: clearPinPortAndTimer();
  2552  030E  118A  2597  118A   	fcall	_clearPinPortAndTimer
  2553  0311  2869               	goto	l4267
  2554  0312                     l4767:	
  2555  0312  0849               	movf	main@enumBranchStep,w
  2556                           
  2557                           ; Switch size 1, requested type "space"
  2558                           ; Number of cases is 3, Range of values is 0 to 2
  2559                           ; switch strategies available:
  2560                           ; Name         Instructions Cycles
  2561                           ; simple_byte           10     6 (average)
  2562                           ; direct_byte           13     7 (fixed)
  2563                           ; jumptable            260     6 (fixed)
  2564                           ; rangetable             7     6 (fixed)
  2565                           ; spacedrange           12     9 (fixed)
  2566                           ; locatedrange           3     3 (fixed)
  2567                           ;	Chosen strategy is simple_byte
  2568  0313  3A00               	xorlw	0	; case 0
  2569  0314  1903               	skipnz
  2570  0315  2AA6               	goto	l930
  2571  0316  3A01               	xorlw	1	; case 1
  2572  0317  1903               	skipnz
  2573  0318  2ABB               	goto	l4703
  2574  0319  3A03               	xorlw	3	; case 2
  2575  031A  1903               	skipnz
  2576  031B  2AC6               	goto	l4713
  2577  031C  286C               	goto	l710
  2578  031D                     l965:	
  2579                           ;main.c: 1154: {
  2580                           ;main.c: 1155: case INTERNAL_FIRST_STEP:
  2581                           
  2582                           
  2583                           ;main.c: 1156: {
  2584                           ;main.c: 1157: PB0 = 0;
  2585  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2586  031E  1006               	bcf	6,0
  2587                           
  2588                           ;main.c: 1158: PB1 = 0;
  2589  031F  1086               	bcf	6,1
  2590                           
  2591                           ;main.c: 1159: PA0 = 0;
  2592  0320  1005               	bcf	5,0
  2593                           
  2594                           ;main.c: 1160: PA1 = 0;
  2595  0321  1085               	bcf	5,1
  2596                           
  2597                           ;main.c: 1161: PA2 = 0;
  2598  0322  1105               	bcf	5,2
  2599                           
  2600                           ;main.c: 1162: PA3 = 0;
  2601  0323  1185               	bcf	5,3
  2602                           
  2603                           ;main.c: 1163: PBOD6 = 0;
  2604  0324  1683               	bsf	3,5	;RP0=1, select bank3
  2605  0325  1703               	bsf	3,6	;RP1=1, select bank3
  2606  0326  1308               	bcf	8,6
  2607                           
  2608                           ;main.c: 1164: PB6 = 1;
  2609  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0329  1706               	bsf	6,6
  2612                           
  2613                           ;main.c: 1165: PA6 =0;
  2614  032A  1305               	bcf	5,6
  2615                           
  2616                           ;main.c: 1167: enumInteralStep = INTERNAL_SECOND_STEP;
  2617  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2618  032C  01AA               	clrf	main@enumInteralStep^(0+128)
  2619  032D  0AAA               	incf	main@enumInteralStep^(0+128),f
  2620                           
  2621                           ;main.c: 1168: break;
  2622  032E  2840               	goto	l4241
  2623  032F                     l4769:	
  2624                           
  2625                           ;main.c: 1172: {
  2626                           ;main.c: 1173: static unsigned char ucTimer1s = 0;
  2627                           ;main.c: 1175: if(getAdOriginalCh14Value() <= 1000)
  2628  032F  118A  2482  118A   	fcall	_getAdOriginalCh14Value
  2629  0332  3003               	movlw	3
  2630  0333  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2631  0334  30E9               	movlw	233
  2632  0335  1903               	skipnz
  2633  0336  0246               	subwf	?_getAdOriginalCh14Value,w
  2634  0337  1803               	skipnc
  2635  0338  2B3C               	goto	l4773
  2636                           
  2637                           ;main.c: 1176: {
  2638                           ;main.c: 1177: ucTimer1s++;
  2639  0339  1683               	bsf	3,5	;RP0=1, select bank1
  2640  033A  0AA9               	incf	main@cTimer1s_823^(0+128),f
  2641                           
  2642                           ;main.c: 1178: }
  2643  033B  2B3E               	goto	l4775
  2644  033C                     l4773:	
  2645                           
  2646                           ;main.c: 1179: else
  2647                           ;main.c: 1180: ucTimer1s = 0;
  2648  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2649  033D  01A9               	clrf	main@cTimer1s_823^(0+128)
  2650  033E                     l4775:	
  2651                           
  2652                           ;main.c: 1182: if(ucTimer1s >= 10)
  2653  033E  300A               	movlw	10
  2654  033F  0229               	subwf	main@cTimer1s_823^(0+128),w
  2655  0340  1C03               	skipc
  2656  0341  2840               	goto	l4241
  2657                           
  2658                           ;main.c: 1183: {
  2659                           ;main.c: 1184: enumInteralStep = INTERNAL_THIRD_STEP;
  2660  0342  3002               	movlw	2
  2661  0343  00AA               	movwf	main@enumInteralStep^(0+128)
  2662                           
  2663                           ;main.c: 1185: ucTimer1s = 0;
  2664  0344  01A9               	clrf	main@cTimer1s_823^(0+128)
  2665  0345  2840               	goto	l4241
  2666  0346                     l4781:	
  2667                           
  2668                           ;main.c: 1191: {
  2669                           ;main.c: 1192: static unsigned char ucTimerP3s = 0;
  2670                           ;main.c: 1194: if(getAdOriginalCh14Value() >= 1950)
  2671  0346  118A  2482  118A   	fcall	_getAdOriginalCh14Value
  2672  0349  3007               	movlw	7
  2673  034A  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2674  034B  309E               	movlw	158
  2675  034C  1903               	skipnz
  2676  034D  0246               	subwf	?_getAdOriginalCh14Value,w
  2677  034E  1C03               	skipc
  2678  034F  2B53               	goto	l4785
  2679                           
  2680                           ;main.c: 1195: {
  2681                           ;main.c: 1196: ucTimerP3s++;
  2682  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2683  0351  0AAB               	incf	main@ucTimerP3s^(0+128),f
  2684                           
  2685                           ;main.c: 1197: }
  2686  0352  2B55               	goto	l4787
  2687  0353                     l4785:	
  2688                           
  2689                           ;main.c: 1198: else
  2690                           ;main.c: 1199: ucTimerP3s = 0;
  2691  0353  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0354  01AB               	clrf	main@ucTimerP3s^(0+128)
  2693  0355                     l4787:	
  2694                           
  2695                           ;main.c: 1201: if(ucTimerP3s >= 3)
  2696  0355  3003               	movlw	3
  2697  0356  022B               	subwf	main@ucTimerP3s^(0+128),w
  2698  0357  1C03               	skipc
  2699  0358  2840               	goto	l4241
  2700                           
  2701                           ;main.c: 1202: {
  2702                           ;main.c: 1203: enumInteralStep = INTERNAL_FIRST_STEP;
  2703  0359  01AA               	clrf	main@enumInteralStep^(0+128)
  2704                           
  2705                           ;main.c: 1204: ucTimerP3s = 0;
  2706  035A  01AB               	clrf	main@ucTimerP3s^(0+128)
  2707                           
  2708                           ;main.c: 1205: clearAllTimer();
  2709  035B  118A  25A3  118A   	fcall	_clearAllTimer
  2710                           
  2711                           ;main.c: 1207: DACR0=0x0F;
  2712  035E  300F               	movlw	15
  2713  035F  0088               	movwf	8	;volatile
  2714                           
  2715                           ;main.c: 1208: initPin();
  2716  0360  118A  25CC  118A   	fcall	_initPin
  2717                           
  2718                           ;main.c: 1211: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2719  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2721  0365  01CA               	clrf	main@enumMainLoopStep
  2722  0366  2840               	goto	l4241
  2723  0367                     l4801:	
  2724  0367  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0368  082A               	movf	main@enumInteralStep^(0+128),w
  2726                           
  2727                           ; Switch size 1, requested type "space"
  2728                           ; Number of cases is 3, Range of values is 0 to 2
  2729                           ; switch strategies available:
  2730                           ; Name         Instructions Cycles
  2731                           ; simple_byte           10     6 (average)
  2732                           ; direct_byte           13     7 (fixed)
  2733                           ; jumptable            260     6 (fixed)
  2734                           ; rangetable             7     6 (fixed)
  2735                           ; spacedrange           12     9 (fixed)
  2736                           ; locatedrange           3     3 (fixed)
  2737                           ;	Chosen strategy is simple_byte
  2738  0369  3A00               	xorlw	0	; case 0
  2739  036A  1903               	skipnz
  2740  036B  2B1D               	goto	l965
  2741  036C  3A01               	xorlw	1	; case 1
  2742  036D  1903               	skipnz
  2743  036E  2B2F               	goto	l4769
  2744  036F  3A03               	xorlw	3	; case 2
  2745  0370  1903               	skipnz
  2746  0371  2B46               	goto	l4781
  2747  0372  286C               	goto	l710
  2748  0373                     l4805:	
  2749  0373  084A               	movf	main@enumMainLoopStep,w
  2750                           
  2751                           ; Switch size 1, requested type "space"
  2752                           ; Number of cases is 8, Range of values is 0 to 9
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte           25    13 (average)
  2756                           ; direct_byte           27     7 (fixed)
  2757                           ; jumptable            260     6 (fixed)
  2758                           ; rangetable            14     6 (fixed)
  2759                           ; spacedrange           26     9 (fixed)
  2760                           ; locatedrange          10     3 (fixed)
  2761                           ;	Chosen strategy is simple_byte
  2762  0374  3A00               	xorlw	0	; case 0
  2763  0375  1903               	skipnz
  2764  0376  2857               	goto	l4257
  2765  0377  3A01               	xorlw	1	; case 1
  2766  0378  1903               	skipnz
  2767  0379  286D               	goto	l4269
  2768  037A  3A03               	xorlw	3	; case 2
  2769  037B  1903               	skipnz
  2770  037C  2885               	goto	l718
  2771  037D  3A01               	xorlw	1	; case 3
  2772  037E  1903               	skipnz
  2773  037F  288F               	goto	l4291
  2774  0380  3A07               	xorlw	7	; case 4
  2775  0381  1903               	skipnz
  2776  0382  28CA               	goto	l4327
  2777  0383  3A01               	xorlw	1	; case 5
  2778  0384  1903               	skipnz
  2779  0385  28D3               	goto	l4331
  2780  0386  3A0D               	xorlw	13	; case 8
  2781  0387  1903               	skipnz
  2782  0388  2B12               	goto	l4767
  2783  0389  3A01               	xorlw	1	; case 9
  2784  038A  1903               	skipnz
  2785  038B  2B67               	goto	l4801
  2786  038C  286C               	goto	l710
  2787  038D  118A  2811         	ljmp	start
  2788  038F                     __end_of_main:	
  2789                           
  2790                           	psect	swtext1
  2791  05DF                     __pswtext1:	
  2792  05DF                     S5023:	
  2793  05DF  118A  2918         	ljmp	l771
  2794  05E1  118A  291B         	ljmp	l4359
  2795  05E3  118A  2924         	ljmp	l4369
  2796  05E5  118A  292A         	ljmp	l4379
  2797  05E7  118A  2930         	ljmp	l4389
  2798  05E9  118A  2936         	ljmp	l4399
  2799  05EB  118A  2940         	ljmp	l4409
  2800                           
  2801                           	psect	swtext2
  2802  05ED                     __pswtext2:	
  2803  05ED                     S5025:	
  2804  05ED  118A  2955         	ljmp	l799
  2805  05EF  118A  2958         	ljmp	l4423
  2806  05F1  118A  2961         	ljmp	l4433
  2807  05F3  118A  2967         	ljmp	l4443
  2808  05F5  118A  296D         	ljmp	l4453
  2809  05F7  118A  2973         	ljmp	l4463
  2810  05F9  118A  297C         	ljmp	l4473
  2811                           
  2812                           	psect	swtext3
  2813  0617                     __pswtext3:	
  2814  0617                     S5027:	
  2815  0617  118A  298F         	ljmp	l826
  2816  0619  118A  2993         	ljmp	l4487
  2817  061B  118A  299C         	ljmp	l4497
  2818  061D  118A  29A2         	ljmp	l4507
  2819  061F  118A  29A8         	ljmp	l4517
  2820  0621  118A  29B0         	ljmp	l4527
  2821                           
  2822                           	psect	text755
  2823  0597                     __ptext755:	
  2824 ;; =============== function _main ends ============
  2825                           
  2826                           
  2827 ;; *************** function _clearPinPortAndTimer *****************
  2828 ;; Defined at:
  2829 ;;		line 92 in file "D:\develop\190625\AK7030-OTP\main.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 160/0
  2840 ;;		On exit  : 160/20
  2841 ;;		Unchanged: FFE9F/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    4
  2850 ;; This function calls:
  2851 ;;		_clearAllTimer
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856  0597                     _clearPinPortAndTimer:	
  2857                           
  2858                           ;main.c: 93: PB0 = 0;
  2859                           
  2860                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  2861  0597  1006               	bcf	6,0
  2862                           
  2863                           ;main.c: 94: PA0 = 0;
  2864  0598  1005               	bcf	5,0
  2865                           
  2866                           ;main.c: 95: PA1 = 0;
  2867  0599  1085               	bcf	5,1
  2868                           
  2869                           ;main.c: 96: PA2 = 0;
  2870  059A  1105               	bcf	5,2
  2871                           
  2872                           ;main.c: 97: PA3 = 0;
  2873  059B  1185               	bcf	5,3
  2874                           
  2875                           ;main.c: 98: PAOD7 = 0;
  2876  059C  1683               	bsf	3,5	;RP0=1, select bank3
  2877  059D  1703               	bsf	3,6	;RP1=1, select bank3
  2878  059E  1387               	bcf	7,7
  2879                           
  2880                           ;main.c: 99: PA7 = 0;
  2881  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2882  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2883  05A1  1385               	bcf	5,7
  2884                           
  2885                           ;main.c: 100: clearAllTimer();
  2886  05A2  2DA3               	ljmp	l4185
  2887  05A3                     __end_of_clearPinPortAndTimer:	
  2888  05A3                     __ptext760:	
  2889 ;; =============== function _process_AD_Converter_Value ends ============
  2890                           
  2891                           
  2892 ;; *************** function _clearAllTimer *****************
  2893 ;; Defined at:
  2894 ;;		line 83 in file "D:\develop\190625\AK7030-OTP\main.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;		None               void
  2901 ;; Registers used:
  2902 ;;		status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 140/20
  2905 ;;		On exit  : 160/20
  2906 ;;		Unchanged: FFE9F/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0
  2911 ;;      Totals:         0       0       0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    3
  2915 ;; This function calls:
  2916 ;;		_clearTwelveHoursTimer
  2917 ;;		_clearThreeHoursTimer
  2918 ;;		_clearTwentySecondsTimer
  2919 ;; This function is called by:
  2920 ;;		_clearPinPortAndTimer
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924  05A3                     _clearAllTimer:	
  2925  05A3                     l4185:	
  2926                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  2927                           
  2928                           
  2929                           ;main.c: 84: clearTwelveHoursTimer();
  2930  05A3  25A8  118A         	fcall	_clearTwelveHoursTimer
  2931                           
  2932                           ;main.c: 85: clearThreeHoursTimer();
  2933  05A5  25AC  118A         	fcall	_clearThreeHoursTimer
  2934                           
  2935                           ;main.c: 86: clearTwentySecondsTimer();
  2936  05A7  2DB0               	ljmp	l3915
  2937  05A8                     __end_of_clearAllTimer:	
  2938  05A8                     __ptext784:	
  2939 ;; =============== function _clearThreeHoursTimer ends ============
  2940                           
  2941                           
  2942 ;; *************** function _clearTwelveHoursTimer *****************
  2943 ;; Defined at:
  2944 ;;		line 365 in file "D:\develop\190625\AK7030-OTP\common.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;		None               void
  2951 ;; Registers used:
  2952 ;;		status,2
  2953 ;; Tracked objects:
  2954 ;;		On entry : 140/20
  2955 ;;		On exit  : 160/20
  2956 ;;		Unchanged: FFE9F/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0
  2961 ;;      Totals:         0       0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    2
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_clearAllTimer
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971  05A8                     _clearTwelveHoursTimer:	
  2972                           
  2973                           ;common.c: 366: uiBigTimer = 0;
  2974                           
  2975                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2976  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2977  05A9  01A0               	clrf	_uiBigTimer^(0+128)
  2978  05AA  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  2979  05AB  0008               	return
  2980  05AC                     __end_of_clearTwelveHoursTimer:	
  2981  05AC                     __ptext783:	
  2982 ;; =============== function _clearTwentySecondsTimer ends ============
  2983                           
  2984                           
  2985 ;; *************** function _clearThreeHoursTimer *****************
  2986 ;; Defined at:
  2987 ;;		line 371 in file "D:\develop\190625\AK7030-OTP\common.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;		None               void
  2994 ;; Registers used:
  2995 ;;		status,2
  2996 ;; Tracked objects:
  2997 ;;		On entry : 140/0
  2998 ;;		On exit  : 160/20
  2999 ;;		Unchanged: FFE9F/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3001 ;;      Params:         0       0       0       0       0
  3002 ;;      Locals:         0       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0
  3004 ;;      Totals:         0       0       0       0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    2
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_clearAllTimer
  3012 ;;		_main
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015  05AC                     _clearThreeHoursTimer:	
  3016                           
  3017                           ;common.c: 372: uiSmallTimer = 0;
  3018                           
  3019                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3020  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  3021  05AD  01A2               	clrf	_uiSmallTimer^(0+128)
  3022  05AE  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  3023  05AF  0008               	return
  3024  05B0                     __end_of_clearThreeHoursTimer:	
  3025  05B0                     __ptext782:	
  3026 ;; =============== function _initPin ends ============
  3027                           
  3028                           
  3029 ;; *************** function _clearTwentySecondsTimer *****************
  3030 ;; Defined at:
  3031 ;;		line 376 in file "D:\develop\190625\AK7030-OTP\common.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;		None               void
  3038 ;; Registers used:
  3039 ;;		status,2
  3040 ;; Tracked objects:
  3041 ;;		On entry : 160/20
  3042 ;;		On exit  : 160/20
  3043 ;;		Unchanged: FFE9F/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3045 ;;      Params:         0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    2
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_clearAllTimer
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058  05B0                     _clearTwentySecondsTimer:	
  3059  05B0                     l3915:	
  3060                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3061                           
  3062                           
  3063                           ;common.c: 377: uiTwentySecondsTimer = 0;
  3064  05B0  01A4               	clrf	_uiTwentySecondsTimer^(0+128)
  3065  05B1  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3066  05B2  0008               	return
  3067  05B3                     __end_of_clearTwentySecondsTimer:	
  3068                           
  3069                           	psect	text756
  3070  046F                     __ptext756:	
  3071 ;; =============== function _clearPinPortAndTimer ends ============
  3072                           
  3073                           
  3074 ;; *************** function _getAdOriginaCh4Value *****************
  3075 ;; Defined at:
  3076 ;;		line 229 in file "D:\develop\190625\AK7030-OTP\common.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2   38[BANK0 ] unsigned int 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 60/0
  3087 ;;		On exit  : 160/0
  3088 ;;		Unchanged: FFE00/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       2       0       0       0
  3091 ;;      Locals:         0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0
  3093 ;;      Totals:         0       2       0       0       0
  3094 ;;Total ram usage:        2 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    3
  3097 ;; This function calls:
  3098 ;;		_Filter
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103  046F                     _getAdOriginaCh4Value:	
  3104                           
  3105                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  3106                           
  3107                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3108  046F  30C4               	movlw	_uiSampleChannelFourth& (0+255)
  3109  0470  00A0               	movwf	?_Filter
  3110  0471  01A1               	clrf	?_Filter+1
  3111  0472  248D               	fcall	_Filter
  3112  0473  0821               	movf	?_Filter+1,w
  3113  0474  00C7               	movwf	?_getAdOriginaCh4Value+1
  3114  0475  0820               	movf	?_Filter,w
  3115  0476  00C6               	movwf	?_getAdOriginaCh4Value
  3116  0477  0008               	return
  3117  0478                     __end_of_getAdOriginaCh4Value:	
  3118  0478                     __ptext757:	
  3119 ;; =============== function _getAdOriginaCh4Value ends ============
  3120                           
  3121                           
  3122 ;; *************** function _getAdOriginalCh1Value *****************
  3123 ;; Defined at:
  3124 ;;		line 217 in file "D:\develop\190625\AK7030-OTP\common.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  2   38[BANK0 ] unsigned int 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 40/0
  3135 ;;		On exit  : 160/0
  3136 ;;		Unchanged: FFE00/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       2       0       0       0
  3139 ;;      Locals:         0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0
  3141 ;;      Totals:         0       2       0       0       0
  3142 ;;Total ram usage:        2 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    3
  3145 ;; This function calls:
  3146 ;;		_Filter
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151  0478                     _getAdOriginalCh1Value:	
  3152                           
  3153                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  3154                           
  3155                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3156  0478  30AC               	movlw	_uiSampleChannelFirst& (0+255)
  3157  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3158  047A  00A0               	movwf	?_Filter
  3159  047B  01A1               	clrf	?_Filter+1
  3160  047C  248D               	fcall	_Filter
  3161  047D  0821               	movf	?_Filter+1,w
  3162  047E  00C7               	movwf	?_getAdOriginalCh1Value+1
  3163  047F  0820               	movf	?_Filter,w
  3164  0480  00C6               	movwf	?_getAdOriginalCh1Value
  3165  0481  0008               	return
  3166  0482                     __end_of_getAdOriginalCh1Value:	
  3167  0482                     __ptext758:	
  3168 ;; =============== function _getAdOriginalCh1Value ends ============
  3169                           
  3170                           
  3171 ;; *************** function _getAdOriginalCh14Value *****************
  3172 ;; Defined at:
  3173 ;;		line 240 in file "D:\develop\190625\AK7030-OTP\common.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  2   38[BANK0 ] unsigned int 
  3180 ;; Registers used:
  3181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 40/0
  3184 ;;		On exit  : 160/0
  3185 ;;		Unchanged: FFE00/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         0       2       0       0       0
  3188 ;;      Locals:         0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0
  3190 ;;      Totals:         0       2       0       0       0
  3191 ;;Total ram usage:        2 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    3
  3194 ;; This function calls:
  3195 ;;		_Filter
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200  0482                     _getAdOriginalCh14Value:	
  3201                           
  3202                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  3203                           
  3204                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3205  0482  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  3206  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0484  00A0               	movwf	?_Filter
  3208  0485  3001               	movlw	1
  3209  0486  00A1               	movwf	?_Filter+1
  3210  0487  248D               	fcall	_Filter
  3211  0488  0821               	movf	?_Filter+1,w
  3212  0489  00C7               	movwf	?_getAdOriginalCh14Value+1
  3213  048A  0820               	movf	?_Filter,w
  3214  048B  00C6               	movwf	?_getAdOriginalCh14Value
  3215  048C  0008               	return
  3216  048D                     __end_of_getAdOriginalCh14Value:	
  3217  048D                     __ptext764:	
  3218 ;; =============== function _getAD_ConvertFlag ends ============
  3219                           
  3220                           
  3221 ;; *************** function _Filter *****************
  3222 ;; Defined at:
  3223 ;;		line 51 in file "D:\develop\190625\AK7030-OTP\common.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3226 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  cir             2   34[BANK0 ] int 
  3229 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3230 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3231 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3232 ;;  i               1   37[BANK0 ] unsigned char 
  3233 ;;  j               1   36[BANK0 ] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2    0[BANK0 ] unsigned int 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3238 ;; Tracked objects:
  3239 ;;		On entry : 60/0
  3240 ;;		On exit  : 160/0
  3241 ;;		Unchanged: FFE00/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       2       0       0       0
  3244 ;;      Locals:         0      32       0       0       0
  3245 ;;      Temps:          0       4       0       0       0
  3246 ;;      Totals:         0      38       0       0       0
  3247 ;;Total ram usage:       38 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    2
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_getAdOriginalCh1Value
  3254 ;;		_getAdOriginaCh4Value
  3255 ;;		_getAdOriginalCh14Value
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258  048D                     _Filter:	
  3259                           
  3260                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3261  048D  01C4               	clrf	Filter@j
  3262                           
  3263                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  3264  048E  01BE               	clrf	Filter@filter_temp
  3265  048F  01BF               	clrf	Filter@filter_temp+1
  3266  0490  01C0               	clrf	Filter@filter_sum
  3267  0491  01C1               	clrf	Filter@filter_sum+1
  3268                           
  3269                           ;common.c: 57: unsigned int filter_buf[12];
  3270                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  3271  0492  01C2               	clrf	Filter@cir
  3272  0493  01C3               	clrf	Filter@cir+1
  3273  0494                     l4025:	
  3274                           
  3275                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  3276  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0496  0820               	movf	Filter@tmpValue,w
  3279  0497  0084               	movwf	4
  3280  0498  1783               	bsf	3,7
  3281  0499  1C21               	btfss	Filter@tmpValue+1,0
  3282  049A  1383               	bcf	3,7
  3283  049B  0800               	movf	0,w
  3284  049C  252E  118A         	fcall	PL5	;call to abstracted procedure
  3285  049E  0D42               	rlf	Filter@cir,w
  3286  049F  3E26               	addlw	Filter@filter_buf& (0+255)
  3287  04A0  0084               	movwf	4
  3288  04A1  0822               	movf	??_Filter,w
  3289  04A2  1383               	bcf	3,7	;select IRP bank0
  3290  04A3  0080               	movwf	0
  3291  04A4  0A84               	incf	4,f
  3292  04A5  0823               	movf	??_Filter+1,w
  3293  04A6  0080               	movwf	0
  3294  04A7  3002               	movlw	2
  3295  04A8  07A0               	addwf	Filter@tmpValue,f
  3296  04A9  1803               	skipnc
  3297  04AA  0AA1               	incf	Filter@tmpValue+1,f
  3298  04AB  0AC2               	incf	Filter@cir,f
  3299  04AC  1903               	skipnz
  3300  04AD  0AC3               	incf	Filter@cir+1,f
  3301  04AE  0843               	movf	Filter@cir+1,w
  3302  04AF  3A80               	xorlw	128
  3303  04B0  00FF               	movwf	127
  3304  04B1  3080               	movlw	128
  3305  04B2  027F               	subwf	127,w
  3306  04B3  1D03               	skipz
  3307  04B4  2CB7               	goto	u1095
  3308  04B5  300C               	movlw	12
  3309  04B6  0242               	subwf	Filter@cir,w
  3310  04B7                     u1095:	
  3311  04B7  1C03               	skipc
  3312  04B8  2C94               	goto	l4025
  3313                           
  3314                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3315  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3316  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3317  04BB  01C4               	clrf	Filter@j
  3318  04BC                     l4039:	
  3319                           
  3320                           ;common.c: 64: {
  3321                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3322  04BC  01C5               	clrf	Filter@i
  3323  04BD                     l4047:	
  3324  04BD  01A3               	clrf	??_Filter+1
  3325  04BE  0844               	movf	Filter@j,w
  3326  04BF  3C0B               	sublw	11
  3327  04C0  00A2               	movwf	??_Filter
  3328  04C1  1C03               	skipc
  3329  04C2  03A3               	decf	??_Filter+1,f
  3330  04C3  0823               	movf	??_Filter+1,w
  3331  04C4  3A80               	xorlw	128
  3332  04C5  3C80               	sublw	128
  3333  04C6  1D03               	skipz
  3334  04C7  2CCA               	goto	u1115
  3335  04C8  0822               	movf	??_Filter,w
  3336  04C9  0245               	subwf	Filter@i,w
  3337  04CA                     u1115:	
  3338  04CA  1803               	btfsc	3,0
  3339  04CB  2CFF               	goto	l4049
  3340                           
  3341                           ;common.c: 66: {
  3342                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3343  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3344  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3345  04CE  1003               	clrc
  3346  04CF  2524  118A         	fcall	PL3	;call to abstracted procedure
  3347  04D1  2534  118A         	fcall	PL6	;call to abstracted procedure
  3348  04D3  0800               	movf	0,w
  3349  04D4  00A4               	movwf	??_Filter+2
  3350  04D5  0A84               	incf	4,f
  3351  04D6  0800               	movf	0,w
  3352  04D7  00A5               	movwf	??_Filter+3
  3353  04D8  0823               	movf	??_Filter+1,w
  3354  04D9  0225               	subwf	??_Filter+3,w
  3355  04DA  1D03               	skipz
  3356  04DB  2CDE               	goto	u1105
  3357  04DC  0822               	movf	??_Filter,w
  3358  04DD  0224               	subwf	??_Filter+2,w
  3359  04DE                     u1105:	
  3360  04DE  1803               	skipnc
  3361  04DF  2CFD               	goto	l4045
  3362                           
  3363                           ;common.c: 68: {
  3364                           ;common.c: 70: filter_temp = filter_buf[i];
  3365  04E0  1003               	clrc
  3366  04E1  0D45               	rlf	Filter@i,w
  3367  04E2  3E26               	addlw	Filter@filter_buf& (0+255)
  3368  04E3  0084               	movwf	4
  3369  04E4  0800               	movf	0,w
  3370  04E5  00BE               	movwf	Filter@filter_temp
  3371  04E6  0A84               	incf	4,f
  3372  04E7  0800               	movf	0,w
  3373  04E8  00BF               	movwf	Filter@filter_temp+1
  3374                           
  3375                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3376  04E9  2534  118A         	fcall	PL6	;call to abstracted procedure
  3377  04EB  0800               	movf	0,w
  3378  04EC  252E  118A         	fcall	PL5	;call to abstracted procedure
  3379  04EE  0D45               	rlf	Filter@i,w
  3380  04EF  3E26               	addlw	Filter@filter_buf& (0+255)
  3381  04F0  0084               	movwf	4
  3382  04F1  0822               	movf	??_Filter,w
  3383  04F2  0080               	movwf	0
  3384  04F3  0A84               	incf	4,f
  3385  04F4  0823               	movf	??_Filter+1,w
  3386  04F5  0080               	movwf	0
  3387                           
  3388                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3389  04F6  2534  118A         	fcall	PL6	;call to abstracted procedure
  3390  04F8  083E               	movf	Filter@filter_temp,w
  3391  04F9  0080               	movwf	0
  3392  04FA  0A84               	incf	4,f
  3393  04FB  083F               	movf	Filter@filter_temp+1,w
  3394  04FC  0080               	movwf	0
  3395  04FD                     l4045:	
  3396  04FD  0AC5               	incf	Filter@i,f
  3397  04FE  2CBD               	goto	l4047
  3398  04FF                     l4049:	
  3399  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0500  300B               	movlw	11
  3401  0501  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0502  0AC4               	incf	Filter@j,f
  3403  0503  0244               	subwf	Filter@j,w
  3404  0504  1C03               	skipc
  3405  0505  2CBC               	goto	l4039
  3406                           
  3407                           ;common.c: 75: }
  3408                           ;common.c: 76: }
  3409                           ;common.c: 77: }
  3410                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3411  0506  3002               	movlw	2
  3412  0507  00C5               	movwf	Filter@i
  3413                           
  3414                           ;common.c: 80: {
  3415                           ;common.c: 81: filter_sum += filter_buf[i];
  3416  0508  1003               	clrc
  3417  0509                     L10:	
  3418  0509  2524  118A         	fcall	PL3	;call to abstracted procedure
  3419  050B  0822               	movf	??_Filter,w
  3420  050C  07C0               	addwf	Filter@filter_sum,f
  3421  050D  1803               	skipnc
  3422  050E  0AC1               	incf	Filter@filter_sum+1,f
  3423  050F  0823               	movf	??_Filter+1,w
  3424  0510  07C1               	addwf	Filter@filter_sum+1,f
  3425  0511  300A               	movlw	10
  3426  0512  0AC5               	incf	Filter@i,f
  3427  0513  0245               	subwf	Filter@i,w
  3428  0514  1C03               	skipc
  3429  0515  2D09               	goto	L10
  3430                           
  3431                           ;common.c: 82: }
  3432                           ;common.c: 84: return (filter_sum >> 3);
  3433  0516  0841               	movf	Filter@filter_sum+1,w
  3434  0517  00A1               	movwf	?_Filter+1
  3435  0518  0840               	movf	Filter@filter_sum,w
  3436  0519  00A0               	movwf	?_Filter
  3437  051A  1003               	clrc
  3438  051B  0CA1               	rrf	?_Filter+1,f
  3439  051C  0CA0               	rrf	?_Filter,f
  3440  051D  1003               	clrc
  3441  051E  0CA1               	rrf	?_Filter+1,f
  3442  051F  0CA0               	rrf	?_Filter,f
  3443  0520  1003               	clrc
  3444  0521  0CA1               	rrf	?_Filter+1,f
  3445  0522  0CA0               	rrf	?_Filter,f
  3446  0523  0008               	return
  3447  0524                     __end_of_Filter:	
  3448  0524                     PL3:	
  3449  0524  0D45               	rlf	Filter@i,w
  3450  0525  3E26               	addlw	Filter@filter_buf& (0+255)
  3451  0526  0084               	movwf	4
  3452  0527  1383               	bcf	3,7	;select IRP bank0
  3453  0528  0800               	movf	0,w
  3454  0529  00A2               	movwf	??_Filter
  3455  052A  0A84               	incf	4,f
  3456  052B  0800               	movf	0,w
  3457  052C  00A3               	movwf	??_Filter+1
  3458  052D  0008               	return
  3459  052E                     PL5:	
  3460  052E  00A2               	movwf	??_Filter
  3461  052F  0A84               	incf	4,f
  3462  0530  0800               	movf	0,w
  3463  0531  00A3               	movwf	??_Filter+1
  3464  0532  1003               	clrc
  3465  0533  0008               	return
  3466  0534                     PL6:	
  3467  0534  1003               	clrc
  3468  0535  0D45               	rlf	Filter@i,w
  3469  0536  3E02               	addlw	2
  3470  0537  3E26               	addlw	Filter@filter_buf& (0+255)
  3471  0538  0084               	movwf	4
  3472  0539  0008               	return
  3473                           
  3474                           	psect	text759
  3475  053A                     __ptext759:	
  3476 ;; =============== function _getAdOriginalCh14Value ends ============
  3477                           
  3478                           
  3479 ;; *************** function _process_AD_Converter_Value *****************
  3480 ;; Defined at:
  3481 ;;		line 251 in file "D:\develop\190625\AK7030-OTP\common.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;		None               void
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 40/0
  3493 ;;		Unchanged: FFF9F/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0
  3498 ;;      Totals:         0       0       0       0       0
  3499 ;;Total ram usage:        0 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    3
  3502 ;; This function calls:
  3503 ;;		_getAD_ConvertFlag
  3504 ;;		_setAD_ConvertFlag
  3505 ;;		_AD_Sample
  3506 ;;		_adc_test_init
  3507 ;;		_adc_start
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512  053A                     _process_AD_Converter_Value:	
  3513                           
  3514                           ;common.c: 252: if(getAD_ConvertFlag())
  3515                           
  3516                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3517  053A  2558  118A         	fcall	_getAD_ConvertFlag
  3518  053C  3A00               	xorlw	0
  3519  053D  1903               	skipnz
  3520  053E  0008               	return
  3521                           
  3522                           ;common.c: 253: {
  3523                           ;common.c: 254: setAD_ConvertFlag(0);
  3524  053F  3000               	movlw	0
  3525  0540  255C  118A         	fcall	_setAD_ConvertFlag
  3526                           
  3527                           ;common.c: 255: AD_Sample();
  3528  0542  2561  118A         	fcall	_AD_Sample
  3529                           
  3530                           ;common.c: 256: if(4 == sampleChannelSelect)
  3531  0544  086E               	movf	_sampleChannelSelect,w
  3532  0545  3A04               	xorlw	4
  3533  0546  1D03               	skipz
  3534  0547  2D4C               	goto	l4195
  3535                           
  3536                           ;common.c: 257: adc_test_init(4,3);
  3537  0548  3003               	movlw	3
  3538  0549  00A0               	movwf	?_adc_test_init
  3539  054A  3004               	movlw	4
  3540  054B  2D55               	goto	L9
  3541  054C                     l4195:	
  3542                           
  3543                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3544  054C  0B6E               	decfsz	_sampleChannelSelect,w
  3545  054D  2D52               	goto	l4199
  3546                           
  3547                           ;common.c: 259: adc_test_init(1,3);
  3548  054E  3003               	movlw	3
  3549  054F  00A0               	movwf	?_adc_test_init
  3550  0550  3001               	movlw	1
  3551  0551  2D55               	goto	L9
  3552  0552                     l4199:	
  3553                           
  3554                           ;common.c: 260: else
  3555                           ;common.c: 261: adc_test_init(14,3);
  3556  0552  3003               	movlw	3
  3557  0553  00A0               	movwf	?_adc_test_init
  3558  0554  300E               	movlw	14
  3559  0555                     L9:	
  3560  0555  257F  118A         	fcall	_adc_test_init
  3561                           
  3562                           ;common.c: 263: adc_start();
  3563  0557  2D94               	ljmp	l3957
  3564  0558                     __end_of_process_AD_Converter_Value:	
  3565  0558                     __ptext763:	
  3566 ;; =============== function _setAD_ConvertFlag ends ============
  3567                           
  3568                           
  3569 ;; *************** function _getAD_ConvertFlag *****************
  3570 ;; Defined at:
  3571 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\common.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      unsigned char 
  3578 ;; Registers used:
  3579 ;;		wreg
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 60/20
  3583 ;;		Unchanged: FFF9F/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3585 ;;      Params:         0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0
  3588 ;;      Totals:         0       0       0       0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    2
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_process_AD_Converter_Value
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598  0558                     _getAD_ConvertFlag:	
  3599                           
  3600                           ;common.c: 201: return adc_convert_flag;
  3601                           
  3602                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3603  0558  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0559  1303               	bcf	3,6	;RP1=0, select bank1
  3605  055A  0827               	movf	_adc_convert_flag^(0+128),w
  3606  055B  0008               	return
  3607  055C                     __end_of_getAD_ConvertFlag:	
  3608  055C                     __ptext762:	
  3609 ;; =============== function _AD_Sample ends ============
  3610                           
  3611                           
  3612 ;; *************** function _setAD_ConvertFlag *****************
  3613 ;; Defined at:
  3614 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  flag            1    wreg     unsigned char 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  flag            1    0[BANK0 ] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;		None               void
  3621 ;; Registers used:
  3622 ;;		wreg
  3623 ;; Tracked objects:
  3624 ;;		On entry : 60/20
  3625 ;;		On exit  : 60/20
  3626 ;;		Unchanged: FFF9F/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         0       0       0       0       0
  3629 ;;      Locals:         0       1       0       0       0
  3630 ;;      Temps:          0       0       0       0       0
  3631 ;;      Totals:         0       1       0       0       0
  3632 ;;Total ram usage:        1 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    2
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_process_AD_Converter_Value
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641  055C                     _setAD_ConvertFlag:	
  3642                           
  3643                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3644                           ;setAD_ConvertFlag@flag stored from wreg
  3645  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3646  055D  00A0               	movwf	setAD_ConvertFlag@flag
  3647                           
  3648                           ;common.c: 207: adc_convert_flag = flag;
  3649  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3650  055F  00A7               	movwf	_adc_convert_flag^(0+128)
  3651  0560  0008               	return
  3652  0561                     __end_of_setAD_ConvertFlag:	
  3653  0561                     __ptext761:	
  3654 ;; =============== function _clearAllTimer ends ============
  3655                           
  3656                           
  3657 ;; *************** function _AD_Sample *****************
  3658 ;; Defined at:
  3659 ;;		line 277 in file "D:\develop\190625\AK7030-OTP\common.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0
  3668 ;; Tracked objects:
  3669 ;;		On entry : 60/20
  3670 ;;		On exit  : 60/0
  3671 ;;		Unchanged: FFF9F/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0
  3676 ;;      Totals:         0       0       0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    2
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_process_AD_Converter_Value
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686  0561                     _AD_Sample:	
  3687                           
  3688                           ;common.c: 278: if(sampleTimes < 12)
  3689                           
  3690                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  3691  0561  300C               	movlw	12
  3692  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3693  0563  0248               	subwf	_sampleTimes,w
  3694  0564  1803               	skipnc
  3695  0565  0008               	return
  3696  0566  300C               	movlw	12
  3697                           
  3698                           ;common.c: 279: {
  3699                           ;common.c: 300: sampleTimes++;
  3700  0567  0AC8               	incf	_sampleTimes,f
  3701                           
  3702                           ;common.c: 302: if(sampleTimes >= 12)
  3703  0568  0248               	subwf	_sampleTimes,w
  3704  0569  1C03               	skipc
  3705  056A  0008               	return
  3706                           
  3707                           ;common.c: 303: {
  3708                           ;common.c: 304: sampleTimes = 0;
  3709  056B  01C8               	clrf	_sampleTimes
  3710                           
  3711                           ;common.c: 306: if(sampleChannelSelect == 14)
  3712  056C  086E               	movf	_sampleChannelSelect,w
  3713  056D  3A0E               	xorlw	14
  3714  056E  1D03               	skipz
  3715  056F  2D73               	goto	l4135
  3716                           
  3717                           ;common.c: 307: {
  3718                           ;common.c: 310: sampleChannelSelect = 1;
  3719  0570  01EE               	clrf	_sampleChannelSelect
  3720  0571  0AEE               	incf	_sampleChannelSelect,f
  3721                           
  3722                           ;common.c: 311: }
  3723  0572  0008               	return
  3724  0573                     l4135:	
  3725                           
  3726                           ;common.c: 312: else if(sampleChannelSelect == 4)
  3727  0573  086E               	movf	_sampleChannelSelect,w
  3728  0574  3A04               	xorlw	4
  3729  0575  1D03               	skipz
  3730  0576  2D7A               	goto	l4139
  3731  0577                     l4137:	
  3732                           
  3733                           ;common.c: 313: {
  3734                           ;common.c: 315: sampleChannelSelect = 14;
  3735  0577  300E               	movlw	14
  3736  0578  00EE               	movwf	_sampleChannelSelect
  3737                           
  3738                           ;common.c: 316: }
  3739  0579  0008               	return
  3740  057A                     l4139:	
  3741                           
  3742                           ;common.c: 317: else if(sampleChannelSelect == 1)
  3743  057A  0B6E               	decfsz	_sampleChannelSelect,w
  3744  057B  2D77               	goto	l4137
  3745                           
  3746                           ;common.c: 318: {
  3747                           ;common.c: 320: sampleChannelSelect = 4;
  3748  057C  3004               	movlw	4
  3749  057D  00EE               	movwf	_sampleChannelSelect
  3750                           
  3751                           ;common.c: 321: }
  3752  057E  0008               	return
  3753  057F                     __end_of_AD_Sample:	
  3754  057F                     __ptext777:	
  3755 ;; =============== function _dac_init ends ============
  3756                           
  3757                           
  3758 ;; *************** function _adc_test_init *****************
  3759 ;; Defined at:
  3760 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  channel         1    wreg     unsigned char 
  3763 ;;  ref             1    0[BANK0 ] unsigned char 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  channel         1    2[BANK0 ] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;		None               void
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 60/0
  3772 ;;		On exit  : 60/20
  3773 ;;		Unchanged: FFF9F/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3775 ;;      Params:         0       1       0       0       0
  3776 ;;      Locals:         0       1       0       0       0
  3777 ;;      Temps:          0       1       0       0       0
  3778 ;;      Totals:         0       3       0       0       0
  3779 ;;Total ram usage:        3 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    2
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;;		_process_AD_Converter_Value
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789  057F                     _adc_test_init:	
  3790                           
  3791                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3792                           ;adc_test_init@channel stored from wreg
  3793  057F  00A2               	movwf	adc_test_init@channel
  3794                           
  3795                           ;periph.c: 86: ADCON0 = 0x00;
  3796  0580  019F               	clrf	31	;volatile
  3797                           
  3798                           ;periph.c: 87: ADCON0|=channel<<2;
  3799  0581  00A1               	movwf	??_adc_test_init
  3800  0582  1003               	clrc
  3801  0583  0DA1               	rlf	??_adc_test_init,f
  3802  0584  1003               	clrc
  3803  0585  0D21               	rlf	??_adc_test_init,w
  3804  0586  049F               	iorwf	31,f	;volatile
  3805                           
  3806                           ;periph.c: 88: ADCON1|=ref<<6;
  3807  0587  0820               	movf	adc_test_init@ref,w
  3808  0588  00A1               	movwf	??_adc_test_init
  3809  0589  0CA1               	rrf	??_adc_test_init,f
  3810  058A  0CA1               	rrf	??_adc_test_init,f
  3811  058B  0C21               	rrf	??_adc_test_init,w
  3812  058C  39C0               	andlw	192
  3813  058D  1683               	bsf	3,5	;RP0=1, select bank1
  3814  058E  049F               	iorwf	31,f	;volatile
  3815                           
  3816                           ;periph.c: 89: ADON=1;
  3817  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0590  141F               	bsf	31,0
  3819                           
  3820                           ;periph.c: 90: ADIE=1;
  3821  0591  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0592  150D               	bsf	13,2
  3823  0593  0008               	return
  3824  0594                     __end_of_adc_test_init:	
  3825  0594                     __ptext773:	
  3826 ;; =============== function _isPermitSampleTime ends ============
  3827                           
  3828                           
  3829 ;; *************** function _adc_start *****************
  3830 ;; Defined at:
  3831 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;		None               void
  3838 ;; Registers used:
  3839 ;;		None
  3840 ;; Tracked objects:
  3841 ;;		On entry : 60/20
  3842 ;;		On exit  : 60/0
  3843 ;;		Unchanged: FFF9F/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         0       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0
  3848 ;;      Totals:         0       0       0       0       0
  3849 ;;Total ram usage:        0 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    2
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;;		_process_AD_Converter_Value
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859  0594                     _adc_start:	
  3860  0594                     l3957:	
  3861                           ; Regs used in _adc_start: []
  3862                           
  3863                           
  3864                           ;periph.c: 101: GO=1;
  3865  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3866  0595  149F               	bsf	31,1
  3867  0596  0008               	return
  3868  0597                     __end_of_adc_start:	
  3869                           
  3870                           	psect	text765
  3871  0650                     __ptext765:	
  3872 ;; =============== function _Filter ends ============
  3873                           
  3874                           
  3875 ;; *************** function _isFinishedThreeHoursTimer *****************
  3876 ;; Defined at:
  3877 ;;		line 416 in file "D:\develop\190625\AK7030-OTP\common.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      unsigned char 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 60/0
  3888 ;;		On exit  : 60/20
  3889 ;;		Unchanged: FFF9F/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    2
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904  0650                     _isFinishedThreeHoursTimer:	
  3905                           
  3906                           ;common.c: 417: if(uiSmallTimer == 0)
  3907                           
  3908                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3909  0650  1683               	bsf	3,5	;RP0=1, select bank1
  3910  0651  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  3911  0652  0422               	iorwf	_uiSmallTimer^(0+128),w
  3912  0653  1903               	btfsc	3,2
  3913                           
  3914                           ;common.c: 418: return 1;
  3915  0654  3401               	retlw	1
  3916                           
  3917                           ;common.c: 419: else
  3918                           ;common.c: 420: return 0;
  3919  0655  3400               	retlw	0
  3920  0656                     __end_of_isFinishedThreeHoursTimer:	
  3921                           
  3922                           	psect	text766
  3923  05FB                     __ptext766:	
  3924 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3925                           
  3926                           
  3927 ;; *************** function _startThreeHoursTimer *****************
  3928 ;; Defined at:
  3929 ;;		line 382 in file "D:\develop\190625\AK7030-OTP\common.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;		None               void
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 60/0
  3940 ;;		On exit  : 60/20
  3941 ;;		Unchanged: FFF9F/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3943 ;;      Params:         0       2       0       0       0
  3944 ;;      Locals:         0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0
  3946 ;;      Totals:         0       2       0       0       0
  3947 ;;Total ram usage:        2 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    2
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956  05FB                     _startThreeHoursTimer:	
  3957                           
  3958                           ;common.c: 383: if(0 == uiSmallTimer)
  3959                           
  3960                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3961  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3962  05FC  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  3963  05FD  0422               	iorwf	_uiSmallTimer^(0+128),w
  3964  05FE  1D03               	skipz
  3965  05FF  0008               	return
  3966                           
  3967                           ;common.c: 384: uiSmallTimer = uiSetTime;
  3968  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0601  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3970  0602  1683               	bsf	3,5	;RP0=1, select bank1
  3971  0603  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  3972  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3973  0605  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3974  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0607  00A2               	movwf	_uiSmallTimer^(0+128)
  3976  0608  0008               	return
  3977  0609                     __end_of_startThreeHoursTimer:	
  3978                           
  3979                           	psect	text767
  3980  0656                     __ptext767:	
  3981 ;; =============== function _startThreeHoursTimer ends ============
  3982                           
  3983                           
  3984 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3985 ;; Defined at:
  3986 ;;		line 399 in file "D:\develop\190625\AK7030-OTP\common.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      unsigned char 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0
  3995 ;; Tracked objects:
  3996 ;;		On entry : 60/0
  3997 ;;		On exit  : 60/20
  3998 ;;		Unchanged: FFF9F/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4000 ;;      Params:         0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    2
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013  0656                     _isFinishedTwentySecondsTimer:	
  4014                           
  4015                           ;common.c: 400: if(0 == uiTwentySecondsTimer)
  4016                           
  4017                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4018  0656  1683               	bsf	3,5	;RP0=1, select bank1
  4019  0657  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4020  0658  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4021  0659  1903               	btfsc	3,2
  4022                           
  4023                           ;common.c: 401: return 1;
  4024  065A  3401               	retlw	1
  4025                           
  4026                           ;common.c: 402: else
  4027                           ;common.c: 403: return 0;
  4028  065B  3400               	retlw	0
  4029  065C                     __end_of_isFinishedTwentySecondsTimer:	
  4030                           
  4031                           	psect	text768
  4032  0668                     __ptext768:	
  4033 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4034                           
  4035                           
  4036 ;; *************** function _startTwentySecondsTimer *****************
  4037 ;; Defined at:
  4038 ;;		line 393 in file "D:\develop\190625\AK7030-OTP\common.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;		None               void
  4045 ;; Registers used:
  4046 ;;		wreg
  4047 ;; Tracked objects:
  4048 ;;		On entry : 60/0
  4049 ;;		On exit  : 60/20
  4050 ;;		Unchanged: FFF9F/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0
  4055 ;;      Totals:         0       0       0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    2
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065  0668                     _startTwentySecondsTimer:	
  4066                           
  4067                           ;common.c: 394: uiTwentySecondsTimer = 20;
  4068                           
  4069                           ; Regs used in _startTwentySecondsTimer: [wreg]
  4070  0668  3014               	movlw	20
  4071  0669  1683               	bsf	3,5	;RP0=1, select bank1
  4072  066A  00A4               	movwf	_uiTwentySecondsTimer^(0+128)
  4073  066B  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4074  066C  0008               	return
  4075  066D                     __end_of_startTwentySecondsTimer:	
  4076                           
  4077                           	psect	text769
  4078  065C                     __ptext769:	
  4079 ;; =============== function _startTwentySecondsTimer ends ============
  4080                           
  4081                           
  4082 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4083 ;; Defined at:
  4084 ;;		line 408 in file "D:\develop\190625\AK7030-OTP\common.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      unsigned char 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 60/0
  4095 ;;		On exit  : 60/20
  4096 ;;		Unchanged: FFF9F/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    2
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111  065C                     _isFinishedTwelveHoursTimer:	
  4112                           
  4113                           ;common.c: 409: if(uiBigTimer == 0)
  4114                           
  4115                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4116  065C  1683               	bsf	3,5	;RP0=1, select bank1
  4117  065D  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4118  065E  0420               	iorwf	_uiBigTimer^(0+128),w
  4119  065F  1903               	btfsc	3,2
  4120                           
  4121                           ;common.c: 410: return 1;
  4122  0660  3401               	retlw	1
  4123                           
  4124                           ;common.c: 411: else
  4125                           ;common.c: 412: return 0;
  4126  0661  3400               	retlw	0
  4127  0662                     __end_of_isFinishedTwelveHoursTimer:	
  4128                           
  4129                           	psect	text770
  4130  0609                     __ptext770:	
  4131 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4132                           
  4133                           
  4134 ;; *************** function _startTwelveHourTimer *****************
  4135 ;; Defined at:
  4136 ;;		line 354 in file "D:\develop\190625\AK7030-OTP\common.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;		None               void
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 60/0
  4147 ;;		On exit  : 60/20
  4148 ;;		Unchanged: FFF9F/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         0       2       0       0       0
  4151 ;;      Locals:         0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0
  4153 ;;      Totals:         0       2       0       0       0
  4154 ;;Total ram usage:        2 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    2
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163  0609                     _startTwelveHourTimer:	
  4164                           
  4165                           ;common.c: 355: if(0 == uiBigTimer)
  4166                           
  4167                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4168  0609  1683               	bsf	3,5	;RP0=1, select bank1
  4169  060A  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4170  060B  0420               	iorwf	_uiBigTimer^(0+128),w
  4171  060C  1D03               	skipz
  4172  060D  0008               	return
  4173                           
  4174                           ;common.c: 356: uiBigTimer = uiSetTime;
  4175  060E  1283               	bcf	3,5	;RP0=0, select bank0
  4176  060F  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4177  0610  1683               	bsf	3,5	;RP0=1, select bank1
  4178  0611  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4179  0612  1283               	bcf	3,5	;RP0=0, select bank0
  4180  0613  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4181  0614  1683               	bsf	3,5	;RP0=1, select bank1
  4182  0615  00A0               	movwf	_uiBigTimer^(0+128)
  4183  0616  0008               	return
  4184  0617                     __end_of_startTwelveHourTimer:	
  4185                           
  4186                           	psect	text771
  4187  0675                     __ptext771:	
  4188 ;; =============== function _startTwelveHourTimer ends ============
  4189                           
  4190                           
  4191 ;; *************** function _clrSampeTime *****************
  4192 ;; Defined at:
  4193 ;;		line 434 in file "D:\develop\190625\AK7030-OTP\common.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		status,2
  4202 ;; Tracked objects:
  4203 ;;		On entry : 60/20
  4204 ;;		On exit  : 60/20
  4205 ;;		Unchanged: FFF9F/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4207 ;;      Params:         0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0
  4210 ;;      Totals:         0       0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    2
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_main
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220  0675                     _clrSampeTime:	
  4221                           
  4222                           ;common.c: 435: timer.timer10msStopWatch = 0;
  4223                           
  4224                           ; Regs used in _clrSampeTime: [status,2]
  4225  0675  01A8               	clrf	_timer^(0+128)
  4226  0676  0008               	return
  4227  0677                     __end_of_clrSampeTime:	
  4228                           
  4229                           	psect	text772
  4230  0662                     __ptext772:	
  4231 ;; =============== function _clrSampeTime ends ============
  4232                           
  4233                           
  4234 ;; *************** function _isPermitSampleTime *****************
  4235 ;; Defined at:
  4236 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      unsigned char 
  4243 ;; Registers used:
  4244 ;;		wreg
  4245 ;; Tracked objects:
  4246 ;;		On entry : 40/0
  4247 ;;		On exit  : 60/20
  4248 ;;		Unchanged: FFF9F/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0
  4253 ;;      Totals:         0       0       0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    2
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263  0662                     _isPermitSampleTime:	
  4264                           
  4265                           ;common.c: 425: if(timer.timer10msStopWatch >= 10)
  4266                           
  4267                           ; Regs used in _isPermitSampleTime: [wreg]
  4268  0662  300A               	movlw	10
  4269  0663  1683               	bsf	3,5	;RP0=1, select bank1
  4270  0664  0228               	subwf	_timer^(0+128),w
  4271  0665  1803               	btfsc	3,0
  4272                           
  4273                           ;common.c: 426: {
  4274                           ;common.c: 427: return 1;
  4275  0666  3401               	retlw	1
  4276                           
  4277                           ;common.c: 429: else
  4278                           ;common.c: 430: return 0;
  4279  0667  3400               	retlw	0
  4280  0668                     __end_of_isPermitSampleTime:	
  4281                           
  4282                           	psect	text774
  4283  0640                     __ptext774:	
  4284 ;; =============== function _adc_start ends ============
  4285                           
  4286                           
  4287 ;; *************** function _op2_init *****************
  4288 ;; Defined at:
  4289 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;		None               void
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 17F/20
  4300 ;;		On exit  : 17F/20
  4301 ;;		Unchanged: FFE80/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    2
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316  0640                     _op2_init:	
  4317                           
  4318                           ;periph.c: 52: OP2CON1=0x10;
  4319                           
  4320                           ; Regs used in _op2_init: [wreg]
  4321  0640  3010               	movlw	16
  4322  0641  009C               	movwf	28	;volatile
  4323                           
  4324                           ;periph.c: 54: OP2CON2=0x10;
  4325  0642  009D               	movwf	29	;volatile
  4326                           
  4327                           ;periph.c: 55: OP2CON0=0x80;
  4328  0643  3080               	movlw	128
  4329  0644  009B               	movwf	27	;volatile
  4330                           
  4331                           ;periph.c: 58: TRISA7=0;
  4332  0645  1385               	bcf	5,7
  4333                           
  4334                           ;periph.c: 60: TRISB7 = 1;
  4335  0646  1786               	bsf	6,7
  4336  0647  0008               	return
  4337  0648                     __end_of_op2_init:	
  4338                           
  4339                           	psect	text775
  4340  0623                     __ptext775:	
  4341 ;; =============== function _op2_init ends ============
  4342                           
  4343                           
  4344 ;; *************** function _op1_init *****************
  4345 ;; Defined at:
  4346 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;		None               void
  4353 ;; Registers used:
  4354 ;;		wreg
  4355 ;; Tracked objects:
  4356 ;;		On entry : 17F/20
  4357 ;;		On exit  : 17F/20
  4358 ;;		Unchanged: FFE80/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4360 ;;      Params:         0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0
  4363 ;;      Totals:         0       0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    2
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373  0623                     _op1_init:	
  4374                           
  4375                           ;periph.c: 33: OP1CON1=0x02;
  4376                           
  4377                           ; Regs used in _op1_init: [wreg]
  4378  0623  3002               	movlw	2
  4379  0624  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0625  009C               	movwf	28	;volatile
  4381                           
  4382                           ;periph.c: 34: OP1CON2=0xA0;
  4383  0626  30A0               	movlw	160
  4384  0627  009D               	movwf	29	;volatile
  4385                           
  4386                           ;periph.c: 35: OP1CON0=0x80;
  4387  0628  3080               	movlw	128
  4388  0629  009B               	movwf	27	;volatile
  4389                           
  4390                           ;periph.c: 38: TRISB3=1;
  4391  062A  1683               	bsf	3,5	;RP0=1, select bank1
  4392  062B  1586               	bsf	6,3
  4393                           
  4394                           ;periph.c: 40: TRISB5=0;
  4395  062C  1286               	bcf	6,5
  4396  062D  0008               	return
  4397  062E                     __end_of_op1_init:	
  4398                           
  4399                           	psect	text776
  4400  066D                     __ptext776:	
  4401 ;; =============== function _op1_init ends ============
  4402                           
  4403                           
  4404 ;; *************** function _dac_init *****************
  4405 ;; Defined at:
  4406 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;		None               void
  4413 ;; Registers used:
  4414 ;;		wreg
  4415 ;; Tracked objects:
  4416 ;;		On entry : 17F/20
  4417 ;;		On exit  : 17F/20
  4418 ;;		Unchanged: FFE80/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4420 ;;      Params:         0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0
  4423 ;;      Totals:         0       0       0       0       0
  4424 ;;Total ram usage:        0 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    2
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433  066D                     _dac_init:	
  4434                           
  4435                           ;periph.c: 15: DACCON|=1;
  4436                           
  4437                           ; Regs used in _dac_init: [wreg]
  4438  066D  1407               	bsf	7,0	;volatile
  4439                           
  4440                           ;periph.c: 17: DACR0=0x0F;
  4441  066E  300F               	movlw	15
  4442  066F  0088               	movwf	8	;volatile
  4443                           
  4444                           ;periph.c: 18: DACCON|=(1)<<2;
  4445  0670  1507               	bsf	7,2	;volatile
  4446  0671  0008               	return
  4447  0672                     __end_of_dac_init:	
  4448                           
  4449                           	psect	text778
  4450  0672                     __ptext778:	
  4451 ;; =============== function _adc_test_init ends ============
  4452                           
  4453                           
  4454 ;; *************** function _timer1_interrupt_config *****************
  4455 ;; Defined at:
  4456 ;;		line 192 in file "D:\develop\190625\AK7030-OTP\common.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;		None               void
  4463 ;; Registers used:
  4464 ;;		None
  4465 ;; Tracked objects:
  4466 ;;		On entry : 17F/20
  4467 ;;		On exit  : 17F/20
  4468 ;;		Unchanged: FFE80/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4470 ;;      Params:         0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    2
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_main
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483  0672                     _timer1_interrupt_config:	
  4484                           
  4485                           ;common.c: 193: GIE = 1;
  4486                           
  4487                           ; Regs used in _timer1_interrupt_config: []
  4488  0672  178B               	bsf	11,7
  4489                           
  4490                           ;common.c: 194: PEIE = 1;
  4491  0673  170B               	bsf	11,6
  4492  0674  0008               	return
  4493  0675                     __end_of_timer1_interrupt_config:	
  4494                           
  4495                           	psect	text779
  4496  062E                     __ptext779:	
  4497 ;; =============== function _timer1_interrupt_config ends ============
  4498                           
  4499                           
  4500 ;; *************** function _timer1_config *****************
  4501 ;; Defined at:
  4502 ;;		line 180 in file "D:\develop\190625\AK7030-OTP\common.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;		None
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;		None               void
  4509 ;; Registers used:
  4510 ;;		wreg
  4511 ;; Tracked objects:
  4512 ;;		On entry : 17F/40
  4513 ;;		On exit  : 17F/20
  4514 ;;		Unchanged: FFE80/0
  4515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4516 ;;      Params:         0       0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0
  4518 ;;      Temps:          0       0       0       0       0
  4519 ;;      Totals:         0       0       0       0       0
  4520 ;;Total ram usage:        0 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    2
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_main
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529  062E                     _timer1_config:	
  4530                           
  4531                           ;common.c: 182: TMR1H=0xCF;
  4532                           
  4533                           ; Regs used in _timer1_config: [wreg]
  4534  062E  30CF               	movlw	207
  4535  062F  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0630  008F               	movwf	15	;volatile
  4537                           
  4538                           ;common.c: 183: TMR1L=0x2C;
  4539  0631  302C               	movlw	44
  4540  0632  008E               	movwf	14	;volatile
  4541                           
  4542                           ;common.c: 184: T1CON=0xE1;
  4543  0633  30E1               	movlw	225
  4544  0634  0090               	movwf	16	;volatile
  4545                           
  4546                           ;common.c: 185: TMR1IE=1;
  4547  0635  1683               	bsf	3,5	;RP0=1, select bank1
  4548  0636  140C               	bsf	12,0
  4549  0637  0008               	return
  4550  0638                     __end_of_timer1_config:	
  4551                           
  4552                           	psect	text780
  4553  0648                     __ptext780:	
  4554 ;; =============== function _timer1_config ends ============
  4555                           
  4556                           
  4557 ;; *************** function _clock_config *****************
  4558 ;; Defined at:
  4559 ;;		line 172 in file "D:\develop\190625\AK7030-OTP\common.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;		None               void
  4566 ;; Registers used:
  4567 ;;		wreg, status,2
  4568 ;; Tracked objects:
  4569 ;;		On entry : 17F/20
  4570 ;;		On exit  : 17F/40
  4571 ;;		Unchanged: FFE80/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4573 ;;      Params:         0       0       0       0       0
  4574 ;;      Locals:         0       0       0       0       0
  4575 ;;      Temps:          0       0       0       0       0
  4576 ;;      Totals:         0       0       0       0       0
  4577 ;;Total ram usage:        0 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    2
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_main
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586  0648                     _clock_config:	
  4587                           
  4588                           ;common.c: 174: CLKPR = 0x80;
  4589                           
  4590                           ; Regs used in _clock_config: [wreg+status,2]
  4591  0648  3080               	movlw	128
  4592  0649  1283               	bcf	3,5	;RP0=0, select bank2
  4593  064A  1703               	bsf	3,6	;RP1=1, select bank2
  4594  064B  0088               	movwf	8	;volatile
  4595                           
  4596                           ;common.c: 175: CLKPR = 0x00;
  4597  064C  0188               	clrf	8	;volatile
  4598  064D                     l1678:	
  4599                           ;common.c: 176: while(CLKPCE);
  4600                           
  4601  064D  1F88               	btfss	8,7
  4602  064E  0008               	return
  4603  064F  2E4D               	goto	l1678
  4604  0650                     __end_of_clock_config:	
  4605                           
  4606                           	psect	text781
  4607  05CC                     __ptext781:	
  4608 ;; =============== function _clock_config ends ============
  4609                           
  4610                           
  4611 ;; *************** function _initPin *****************
  4612 ;; Defined at:
  4613 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\main.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;		None               void
  4620 ;; Registers used:
  4621 ;;		None
  4622 ;; Tracked objects:
  4623 ;;		On entry : 160/20
  4624 ;;		On exit  : 160/60
  4625 ;;		Unchanged: FFE9F/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    2
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_main
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640  05CC                     _initPin:	
  4641                           
  4642                           ;main.c: 106: PB6 = 1;
  4643                           
  4644                           ; Regs used in _initPin: []
  4645  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  4646  05CD  1706               	bsf	6,6
  4647                           
  4648                           ;main.c: 107: PBOD6 = 1;
  4649  05CE  1683               	bsf	3,5	;RP0=1, select bank3
  4650  05CF  1703               	bsf	3,6	;RP1=1, select bank3
  4651  05D0  1708               	bsf	8,6
  4652                           
  4653                           ;main.c: 111: PA0 = 0;
  4654  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  4655  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  4656  05D3  1005               	bcf	5,0
  4657                           
  4658                           ;main.c: 112: PA1 = 0;
  4659  05D4  1085               	bcf	5,1
  4660                           
  4661                           ;main.c: 113: PA2 = 0;
  4662  05D5  1105               	bcf	5,2
  4663                           
  4664                           ;main.c: 114: PA3 = 0;
  4665  05D6  1185               	bcf	5,3
  4666                           
  4667                           ;main.c: 115: PB0 = 0;
  4668  05D7  1006               	bcf	6,0
  4669                           
  4670                           ;main.c: 116: PB1 = 1;
  4671  05D8  1486               	bsf	6,1
  4672                           
  4673                           ;main.c: 117: PA6 = 0;
  4674  05D9  1305               	bcf	5,6
  4675                           
  4676                           ;main.c: 118: PA7 = 0;
  4677  05DA  1385               	bcf	5,7
  4678                           
  4679                           ;main.c: 119: PAOD7 = 0;
  4680  05DB  1683               	bsf	3,5	;RP0=1, select bank3
  4681  05DC  1703               	bsf	3,6	;RP1=1, select bank3
  4682  05DD  1387               	bcf	7,7
  4683  05DE  0008               	return
  4684  05DF                     __end_of_initPin:	
  4685                           
  4686                           	psect	text785
  4687  038F                     __ptext785:	
  4688 ;; =============== function _clearTwelveHoursTimer ends ============
  4689                           
  4690                           
  4691 ;; *************** function _ISR *****************
  4692 ;; Defined at:
  4693 ;;		line 439 in file "D:\develop\190625\AK7030-OTP\common.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;		None               void
  4700 ;; Registers used:
  4701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 60/0
  4705 ;;		Unchanged: FFE00/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4707 ;;      Params:         0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0
  4709 ;;      Temps:          4       0       0       0       0
  4710 ;;      Totals:         4       0       0       0       0
  4711 ;;Total ram usage:        4 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    1
  4714 ;; This function calls:
  4715 ;;		i1_setAD_ConvertFlag
  4716 ;;		_adc_get
  4717 ;;		_vPutSampleDataIntoTable
  4718 ;; This function is called by:
  4719 ;;		Interrupt level 1
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722  038F                     _ISR:	
  4723                           
  4724                           ;common.c: 440: static unsigned char ucTimer1sCnt = 0;
  4725                           ;common.c: 442: if(TMR1IF == 1)
  4726  038F  1C0C               	btfss	12,0
  4727  0390  2BB8               	goto	i1l4163
  4728                           
  4729                           ;common.c: 443: {
  4730                           ;common.c: 444: TMR1IF = 0 ;
  4731  0391  100C               	bcf	12,0
  4732                           
  4733                           ;common.c: 445: timer.timer10msStopWatch++;
  4734  0392  1683               	bsf	3,5	;RP0=1, select bank1
  4735  0393  3064               	movlw	100
  4736  0394  0AA8               	incf	_timer^(0+128),f
  4737                           
  4738                           ;common.c: 446: ucTimer1sCnt++;
  4739  0395  0AA6               	incf	ISR@ucTimer1sCnt^(0+128),f
  4740                           
  4741                           ;common.c: 448: if(ucTimer1sCnt >= 100)
  4742  0396  0226               	subwf	ISR@ucTimer1sCnt^(0+128),w
  4743  0397  1C03               	skipc
  4744  0398  2BB8               	goto	i1l4163
  4745                           
  4746                           ;common.c: 449: {
  4747                           ;common.c: 450: ucTimer1sCnt = 0;
  4748  0399  01A6               	clrf	ISR@ucTimer1sCnt^(0+128)
  4749                           
  4750                           ;common.c: 451: if(uiBigTimer > 0)
  4751  039A  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4752  039B  0420               	iorwf	_uiBigTimer^(0+128),w
  4753  039C  1903               	skipnz
  4754  039D  2BA4               	goto	i1l1774
  4755                           
  4756                           ;common.c: 452: uiBigTimer--;
  4757  039E  3001               	movlw	1
  4758  039F  02A0               	subwf	_uiBigTimer^(0+128),f
  4759  03A0  3000               	movlw	0
  4760  03A1  1C03               	skipc
  4761  03A2  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  4762  03A3  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  4763  03A4                     i1l1774:	
  4764                           
  4765                           ;common.c: 454: if(uiSmallTimer)
  4766  03A4  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4767  03A5  0422               	iorwf	_uiSmallTimer^(0+128),w
  4768  03A6  1903               	skipnz
  4769  03A7  2BAE               	goto	i1l1775
  4770                           
  4771                           ;common.c: 455: uiSmallTimer--;
  4772  03A8  3001               	movlw	1
  4773  03A9  02A2               	subwf	_uiSmallTimer^(0+128),f
  4774  03AA  3000               	movlw	0
  4775  03AB  1C03               	skipc
  4776  03AC  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  4777  03AD  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  4778  03AE                     i1l1775:	
  4779                           
  4780                           ;common.c: 457: if(uiTwentySecondsTimer)
  4781  03AE  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4782  03AF  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4783  03B0  1903               	skipnz
  4784  03B1  2BB8               	goto	i1l4163
  4785                           
  4786                           ;common.c: 458: uiTwentySecondsTimer--;
  4787  03B2  3001               	movlw	1
  4788  03B3  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  4789  03B4  3000               	movlw	0
  4790  03B5  1C03               	skipc
  4791  03B6  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4792  03B7  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4793  03B8                     i1l4163:	
  4794                           
  4795                           ;common.c: 459: }
  4796                           ;common.c: 460: }
  4797                           ;common.c: 462: if(ADIF)
  4798  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4799  03B9  1D0D               	btfss	13,2
  4800  03BA  2BE0               	goto	i1l1782
  4801  03BB  3001               	movlw	1
  4802                           
  4803                           ;common.c: 463: {
  4804                           ;common.c: 464: ADIF=0;
  4805  03BC  110D               	bcf	13,2
  4806                           
  4807                           ;common.c: 465: setAD_ConvertFlag(1);
  4808  03BD  245B  118A         	fcall	i1_setAD_ConvertFlag
  4809                           
  4810                           ;common.c: 467: if(sampleChannelSelect == 4)
  4811  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  4812  03C0  086E               	movf	_sampleChannelSelect,w
  4813  03C1  3A04               	xorlw	4
  4814  03C2  1D03               	skipz
  4815  03C3  2BCC               	goto	i1l4173
  4816                           
  4817                           ;common.c: 468: {
  4818                           ;common.c: 471: vPutSampleDataIntoTable(adc_get(),4);
  4819  03C4  23ED  118A         	fcall	_adc_get
  4820  03C6  0871               	movf	?_adc_get+1,w
  4821  03C7  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4822  03C8  0870               	movf	?_adc_get,w
  4823  03C9  00F4               	movwf	?_vPutSampleDataIntoTable
  4824  03CA  3004               	movlw	4
  4825  03CB  2BDE               	goto	L11
  4826  03CC                     i1l4173:	
  4827                           ;common.c: 475: }
  4828                           
  4829                           
  4830                           ;common.c: 476: else if(sampleChannelSelect == 1)
  4831  03CC  0B6E               	decfsz	_sampleChannelSelect,w
  4832  03CD  2BD7               	goto	i1l4177
  4833                           
  4834                           ;common.c: 477: {
  4835                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),1);
  4836  03CE  23ED  118A         	fcall	_adc_get
  4837  03D0  0871               	movf	?_adc_get+1,w
  4838  03D1  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4839  03D2  0870               	movf	?_adc_get,w
  4840  03D3  00F4               	movwf	?_vPutSampleDataIntoTable
  4841  03D4  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4842  03D5  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4843  03D6  2BDF               	goto	L12
  4844  03D7                     i1l4177:	
  4845                           ;common.c: 484: }
  4846                           
  4847                           
  4848                           ;common.c: 485: else
  4849                           ;common.c: 486: {
  4850                           ;common.c: 490: vPutSampleDataIntoTable(adc_get(),14);
  4851  03D7  23ED  118A         	fcall	_adc_get
  4852  03D9  0871               	movf	?_adc_get+1,w
  4853  03DA  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4854  03DB  0870               	movf	?_adc_get,w
  4855  03DC  00F4               	movwf	?_vPutSampleDataIntoTable
  4856  03DD  300E               	movlw	14
  4857  03DE                     L11:	
  4858  03DE  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4859  03DF                     L12:	
  4860  03DF  23F8               	fcall	_vPutSampleDataIntoTable
  4861  03E0                     i1l1782:	
  4862  03E0  087C               	movf	??_ISR+3,w
  4863  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  4864  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  4865  03E3  00FF               	movwf	127
  4866  03E4  087B               	movf	??_ISR+2,w
  4867  03E5  008A               	movwf	10
  4868  03E6  087A               	movf	??_ISR+1,w
  4869  03E7  0084               	movwf	4
  4870  03E8  0E79               	swapf	??_ISR^(0+-128),w
  4871  03E9  0083               	movwf	3
  4872  03EA  0EFE               	swapf	126,f
  4873  03EB  0E7E               	swapf	126,w
  4874  03EC  0009               	retfie
  4875  03ED                     __end_of_ISR:	
  4876  03ED                     __ptext787:	
  4877 ;; =============== function i1_setAD_ConvertFlag ends ============
  4878                           
  4879                           
  4880 ;; *************** function _adc_get *****************
  4881 ;; Defined at:
  4882 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  val             2    2[COMMON] unsigned int 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  2    0[COMMON] unsigned int 
  4889 ;; Registers used:
  4890 ;;		wreg
  4891 ;; Tracked objects:
  4892 ;;		On entry : 60/0
  4893 ;;		On exit  : 60/20
  4894 ;;		Unchanged: FFF9F/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4896 ;;      Params:         2       0       0       0       0
  4897 ;;      Locals:         2       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0
  4899 ;;      Totals:         4       0       0       0       0
  4900 ;;Total ram usage:        4 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_ISR
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908  03ED                     _adc_get:	
  4909                           
  4910                           ;periph.c: 106: unsigned int val;
  4911                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4912                           
  4913                           ; Regs used in _adc_get: [wreg]
  4914  03ED  081E               	movf	30,w	;volatile
  4915  03EE  00F3               	movwf	adc_get@val+1
  4916  03EF  01F2               	clrf	adc_get@val
  4917  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  4918  03F1  081E               	movf	30,w	;volatile
  4919  03F2  04F2               	iorwf	adc_get@val,f
  4920                           
  4921                           ;periph.c: 108: return val;
  4922  03F3  0873               	movf	adc_get@val+1,w
  4923  03F4  00F1               	movwf	?_adc_get+1
  4924  03F5  0872               	movf	adc_get@val,w
  4925  03F6  00F0               	movwf	?_adc_get
  4926  03F7  0008               	return
  4927  03F8                     __end_of_adc_get:	
  4928  03F8                     __ptext788:	
  4929 ;; =============== function _adc_get ends ============
  4930                           
  4931                           
  4932 ;; *************** function _vPutSampleDataIntoTable *****************
  4933 ;; Defined at:
  4934 ;;		line 97 in file "D:\develop\190625\AK7030-OTP\common.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4937 ;;  channel         1    6[COMMON] unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  i               2    7[COMMON] int 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4944 ;; Tracked objects:
  4945 ;;		On entry : 60/20
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: FFE00/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4949 ;;      Params:         3       0       0       0       0
  4950 ;;      Locals:         2       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0
  4952 ;;      Totals:         5       0       0       0       0
  4953 ;;Total ram usage:        5 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_ISR
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961  03F8                     _vPutSampleDataIntoTable:	
  4962                           
  4963                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  4964                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  4965                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  4966                           ;common.c: 105: if(channel == 1)
  4967                           
  4968                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4969  03F8  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4970  03F9  2C0A               	goto	i1l4081
  4971                           
  4972                           ;common.c: 106: {
  4973                           ;common.c: 107: if(ucChannelFirstLength < 12)
  4974  03FA  300C               	movlw	12
  4975  03FB  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4976  03FC  1803               	skipnc
  4977  03FD  2C04               	goto	i1l4077
  4978                           
  4979                           ;common.c: 108: {
  4980                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4981  03FE  1003               	clrc
  4982  03FF  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4983  0400  3EAC               	addlw	_uiSampleChannelFirst& (0+255)
  4984  0401  245F               	fcall	PL2	;call to abstracted procedure
  4985                           
  4986                           ;common.c: 111: ucChannelFirstLength++;
  4987  0402  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4988                           
  4989                           ;common.c: 112: }
  4990  0403  0008               	return
  4991  0404                     i1l4077:	
  4992                           
  4993                           ;common.c: 113: else
  4994                           ;common.c: 114: {
  4995                           ;common.c: 115: ucChannelFirstLength = 0;
  4996  0404  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4997                           
  4998                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4999  0405  1003               	clrc
  5000  0406  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5001  0407  3EAC               	addlw	_uiSampleChannelFirst& (0+255)
  5002  0408  245F               	fcall	PL2	;call to abstracted procedure
  5003  0409  0008               	return
  5004  040A                     i1l4081:	
  5005                           
  5006                           ;common.c: 120: else if(channel == 4)
  5007  040A  0876               	movf	vPutSampleDataIntoTable@channel,w
  5008  040B  3A04               	xorlw	4
  5009  040C  1D03               	skipz
  5010  040D  2C1F               	goto	i1l4093
  5011                           
  5012                           ;common.c: 121: {
  5013                           ;common.c: 122: if(ucChannelFourthLength < 12)
  5014  040E  300C               	movlw	12
  5015  040F  1283               	bcf	3,5	;RP0=0, select bank0
  5016  0410  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5017  0411  1803               	skipnc
  5018  0412  2C19               	goto	i1l4089
  5019                           
  5020                           ;common.c: 123: {
  5021                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5022  0413  1003               	clrc
  5023  0414  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5024  0415  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5025  0416  245F               	fcall	PL2	;call to abstracted procedure
  5026                           
  5027                           ;common.c: 126: ucChannelFourthLength++;
  5028  0417  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5029                           
  5030                           ;common.c: 127: }
  5031  0418  0008               	return
  5032  0419                     i1l4089:	
  5033                           
  5034                           ;common.c: 128: else
  5035                           ;common.c: 129: {
  5036                           ;common.c: 130: ucChannelFourthLength = 0;
  5037  0419  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5038                           
  5039                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5040  041A  1003               	clrc
  5041  041B  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5042  041C  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5043  041D  245F               	fcall	PL2	;call to abstracted procedure
  5044  041E  0008               	return
  5045  041F                     i1l4093:	
  5046                           
  5047                           ;common.c: 135: else if(channel == 14)
  5048  041F  0876               	movf	vPutSampleDataIntoTable@channel,w
  5049  0420  3A0E               	xorlw	14
  5050  0421  1D03               	skipz
  5051  0422  2C3A               	goto	i1l4105
  5052                           
  5053                           ;common.c: 136: {
  5054                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  5055  0423  300C               	movlw	12
  5056  0424  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0425  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5058  0426  1803               	skipnc
  5059  0427  2C34               	goto	i1l4101
  5060                           
  5061                           ;common.c: 138: {
  5062                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  5063  0428  1003               	clrc
  5064  0429  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5065  042A  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  5066  042B  0084               	movwf	4
  5067  042C  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5068  042D  1783               	bsf	3,7	;select IRP bank3
  5069  042E  0080               	movwf	0
  5070  042F  0A84               	incf	4,f
  5071  0430  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5072  0431  0080               	movwf	0
  5073                           
  5074                           ;common.c: 141: ucChannelFourteenthLength++;
  5075  0432  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  5076                           
  5077                           ;common.c: 142: }
  5078  0433  0008               	return
  5079  0434                     i1l4101:	
  5080                           
  5081                           ;common.c: 143: else
  5082                           ;common.c: 144: {
  5083                           ;common.c: 145: ucChannelFourteenthLength = 0;
  5084  0434  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5085                           
  5086                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  5087  0435  1003               	clrc
  5088  0436  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5089  0437  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5090  0438  245F               	fcall	PL2	;call to abstracted procedure
  5091  0439  0008               	return
  5092  043A                     i1l4105:	
  5093                           
  5094                           ;common.c: 150: else
  5095                           ;common.c: 151: {
  5096                           ;common.c: 152: ucChannelFirstLength = 0;
  5097  043A  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5098                           
  5099                           ;common.c: 154: ucChannelFourthLength = 0;
  5100  043B  1283               	bcf	3,5	;RP0=0, select bank0
  5101  043C  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5102                           
  5103                           ;common.c: 156: ucChannelFourteenthLength = 0;
  5104  043D  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5105                           
  5106                           ;common.c: 158: for(int i = 0;i < 12; i++)
  5107  043E  01F7               	clrf	vPutSampleDataIntoTable@i
  5108  043F  01F8               	clrf	vPutSampleDataIntoTable@i+1
  5109  0440                     i1l4111:	
  5110                           
  5111                           ;common.c: 159: {
  5112                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  5113  0440  1003               	clrc
  5114  0441  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5115  0442  3EAC               	addlw	_uiSampleChannelFirst& (0+255)
  5116  0443  0084               	movwf	4
  5117  0444  1383               	bcf	3,7	;select IRP bank1
  5118  0445  0180               	clrf	0
  5119                           
  5120                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  5121  0446  2467  118A         	fcall	PL4	;call to abstracted procedure
  5122                           
  5123                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  5124  0448  2467  118A         	fcall	PL4	;call to abstracted procedure
  5125  044A  0A84               	incf	4,f
  5126  044B  0180               	clrf	0
  5127  044C  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5128  044D  1903               	skipnz
  5129  044E  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5130  044F  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5131  0450  3A80               	xorlw	128
  5132  0451  00FF               	movwf	127
  5133  0452  3080               	movlw	128
  5134  0453  027F               	subwf	127,w
  5135  0454  1D03               	skipz
  5136  0455  2C58               	goto	u120_25
  5137  0456  300C               	movlw	12
  5138  0457  0277               	subwf	vPutSampleDataIntoTable@i,w
  5139  0458                     u120_25:	
  5140  0458  1803               	btfsc	3,0
  5141  0459  0008               	return
  5142  045A  2C40               	goto	i1l4111
  5143  045B                     __end_of_vPutSampleDataIntoTable:	
  5144  045B                     __ptext786:	
  5145 ;; =============== function _ISR ends ============
  5146                           
  5147                           
  5148 ;; *************** function i1_setAD_ConvertFlag *****************
  5149 ;; Defined at:
  5150 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  setAD_Conver    1    wreg     unsigned char 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;		None               void
  5157 ;; Registers used:
  5158 ;;		wreg
  5159 ;; Tracked objects:
  5160 ;;		On entry : 60/0
  5161 ;;		On exit  : 60/20
  5162 ;;		Unchanged: FFF9F/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5164 ;;      Params:         0       0       0       0       0
  5165 ;;      Locals:         1       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0
  5167 ;;      Totals:         1       0       0       0       0
  5168 ;;Total ram usage:        1 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_ISR
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176  045B                     i1_setAD_ConvertFlag:	
  5177                           
  5178                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5179                           ;i1setAD_ConvertFlag@flag stored from wreg
  5180  045B  00F0               	movwf	i1setAD_ConvertFlag@flag
  5181                           
  5182                           ;common.c: 207: adc_convert_flag = flag;
  5183  045C  1683               	bsf	3,5	;RP0=1, select bank1
  5184  045D  00A7               	movwf	_adc_convert_flag^(0+128)
  5185  045E  0008               	return
  5186  045F                     __end_ofi1_setAD_ConvertFlag:	
  5187  045F                     PL2:	
  5188  045F  0084               	movwf	4
  5189  0460  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5190  0461  1383               	bcf	3,7	;select IRP bank1
  5191  0462  0080               	movwf	0
  5192  0463  0A84               	incf	4,f
  5193  0464  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5194  0465  0080               	movwf	0
  5195  0466  0008               	return
  5196  0467                     PL4:	
  5197  0467  0A84               	incf	4,f
  5198  0468  0180               	clrf	0
  5199  0469  1003               	clrc
  5200  046A  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5201  046B  3EC4               	addlw	_uiSampleChannelFourth& (0+255)
  5202  046C  0084               	movwf	4
  5203  046D  0180               	clrf	0
  5204  046E  0008               	return
  5205                           
  5206                           	psect	intentry
  5207  0004                     __pintentry:	
  5208                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5209                           
  5210  0004                     interrupt_function:	
  5211  007E                     saved_w	set	btemp
  5212  0004  00FE               	movwf	btemp
  5213  0005  0E03               	swapf	3,w
  5214  0006  00F9               	movwf	??_ISR
  5215  0007  0804               	movf	4,w
  5216  0008  00FA               	movwf	??_ISR+1
  5217  0009  080A               	movf	10,w
  5218  000A  00FB               	movwf	??_ISR+2
  5219  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5220  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5221  000D  087F               	movf	btemp+1,w
  5222  000E  00FC               	movwf	??_ISR+3
  5223  000F  118A  2B8F         	ljmp	_ISR
  5224                           
  5225                           	psect	text789
  5226  0000                     __ptext789:	
  5227 ;; =============== function _vPutSampleDataIntoTable ends ============
  5228                           
  5229  007E                     btemp	set	126	;btemp
  5230  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jun 27 09:39:46 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l710 006C  
                                             l718 0085                                               l680 0000  
                                             l930 02A6                                               l850 01C3  
                                             l826 018F                                               l683 0000  
                                             l771 0118                                               l756 0116  
                                             l677 0000                                               l871 01F6  
                                             l965 031D                                               l799 0155  
                                             _PA0 0028                                               _PA1 0029  
                                             _GIE 005F                                               _PB0 0030  
                                             _PA2 002A                                               _PB1 0031  
                                             _PA3 002B                                               _PA6 002E  
                                             _PA7 002F                                               _PB6 0036  
                                             _ISR 038F                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S5023 05DF                                              S5025 05ED  
                                            S5027 0617                                              ?_ISR 0070  
                              __size_of_AD_Sample 001E                            ?_getAdOriginalCh1Value 0046  
                                            l4003 0000                                              l2413 0000  
                                            l1702 0000                                              l4007 0000  
                                            l4031 0000                                              l2416 0000  
                                            l2433 0000                                              l4025 0494  
                                            l4121 0000                                              l1731 0000  
                                            l2427 0000                                              l2419 0000  
                                            l4051 0000                                              l4027 0000  
                                            l4019 0000                                              l4131 0000  
                                            l4123 0000                                              l4203 0000  
                                            l4211 0000                                              l1652 0000  
                                            l4061 0000                                              l4045 04FD  
                                            l4029 0000                                              l4117 0000  
                                            l4141 0000                                              l4301 009E  
                                            l4221 0000                                              l1734 0000  
                                            l4047 04BD                                              l4039 04BC  
                                            l4135 0573                                              l4127 0000  
                                            l4207 0000                                              l4215 0000  
                                            l4231 0000                                              l4223 0000  
                                            l1744 0000                                              l1737 0000  
                                            l1681 0000                                              l4065 0000  
                                            l4049 04FF                                              l4137 0577  
                                            l4217 0000                                              l4313 00B5  
                                            l4321 00BE                                              l4305 0000  
                                            l4241 0040                                              l4233 0000  
                                            l4225 0000                                              l1690 0000  
                                            l4059 0000                                              l4139 057A  
                                            l4331 00D3                                              l4315 00B6  
                                            l4307 00A5                                              l4243 0000  
                                            l4235 0000                                              l4227 0000  
                                            l4219 0000                                              l1684 0000  
                                            l1693 0000                                              l4421 0156  
                                            l4413 0146                                              l4333 00D9  
                                            l4325 00C6                                              l4261 0063  
                                            l4253 0054                                              l4245 0000  
                                            l4237 0000                                              l4229 0000  
                                            l1678 064D                                              l1687 0000  
                                            l1767 0000                                              l4191 0000  
                                            l4431 015F                                              l4423 0158  
                                            l4351 0108                                              l4343 00EF  
                                            l4335 00DC                                              l4327 00CA  
                                            l4319 0000                                              l4263 0064  
                                            l4255 0000                                              l4239 0000  
                                            l1696 0000                                              l4185 05A3  
                                            l4433 0161                                              l4409 0140  
                                            l4337 00DF                                              l4329 0000  
                                            l4281 0000                                              l4273 0000  
                                            l4257 0057                                              l4249 0000  
                                            l4195 054C                                              l4187 0000  
                                            l1699 0000                                              l4507 01A2  
                                            l4443 0167                                              l4427 015D  
                                            l4419 0149                                              l4363 0120  
                                            l4355 0114                                              l4347 00FC  
                                            l4339 00E3                                              l4291 008F  
                                            l4283 0000                                              l4275 007B  
                                            l4267 0069                                              l4197 0000  
                                            l4701 0000                                              l4621 0231  
                                            l4605 020B                                              l4541 01C8  
                                            l4517 01A8                                              l4453 016D  
                                            l4357 0119                                              l4277 0000  
                                            l4269 006D                                              l3911 0000  
                                            l4199 0552                                              l4711 0000  
                                            l4703 02BB                                              l4615 0212  
                                            l4551 01D1                                              l4527 01B0  
                                            l4463 0173                                              l4367 0122  
                                            l4359 011B                                              l4295 0000  
                                            l4287 008C                                              l3913 0000  
                                            l3921 0000                                              l4801 0367  
                                            l4713 02C6                                              l4633 0000  
                                            l4561 01D7                                              l4545 01CD  
                                            l4537 01B7                                              l4473 017C  
                                            l4369 0124                                              l4297 009C  
                                            l4289 0000                                              l3915 05B0  
                                            l3923 0000                                              l3931 0000  
                                            l4723 0000                                              l4707 02C1  
                                            l4643 0000                                              l4635 0249  
                                            l4627 0000                                              l4619 0220  
                                            l4571 01DE                                              l4539 01C6  
                                            l4491 0198                                              l4483 0183  
                                            l4379 012A                                              l4299 0000  
                                            l3917 0000                                              l3925 0000  
                                            l3933 0000                                              l3941 0000  
                                            l4741 0000                                              l4733 0000  
                                            l4725 02DC                                              l4709 0000  
                                            l4661 0269                                              l4645 025C  
                                            l4629 023E                                              l4581 01E5  
                                            l4549 01CF                                              l4485 0191  
                                            l4389 0130                                              l4805 0373  
                                            l3919 0000                                              l3927 0000  
                                            l3935 0000                                              l3943 0000  
                                            l3951 0000                                              l4751 0302  
                                            l4735 0000                                              l4743 02F1  
                                            l4727 0000                                              l4719 02CF  
                                            l4663 0000                                              l4647 0000  
                                            l4639 024F                                              l4583 01FA  
                                            l4495 019A                                              l4487 0193  
                                            l4399 0136                                              l3937 0000  
                                            l3929 0000                                              l3945 0000  
                                            l3953 0000                                              l4753 0000  
                                            l4737 0000                                              l4729 02DE  
                                            l4681 028E                                              l4673 0284  
                                            l4665 0272                                              l4657 0264  
                                            l4649 025E                                              l4593 0203  
                                            l4585 01FC                                              l4497 019C  
                                            l3939 0000                                              l3947 0000  
                                            l3955 0000                                              l3971 0000  
                                            l4755 0304                                              l4739 0000  
                                            l4691 0000                                              l4683 0000  
                                            l4659 0000                                              l4595 0205  
                                            l3949 0000                                              l3957 0594  
                                            l3973 0000                                              l4781 0346  
                                            l4773 033C                                              l4749 0000  
                                            l4693 0000                                              l4677 0000  
                                            l4669 027E                                              l4589 0201  
                                            l3959 0000                                              l3991 0000  
                                            l4791 0000                                              l4775 033E  
                                            l4767 0312                                              l4759 030A  
                                            l4695 0000                                              l4679 0000  
                                            l4687 0294                                              _ADIE 046A  
                                            _ADIF 006A                                              l3977 0000  
                                            l4793 0000                                              l4785 0353  
                                            l4769 032F                                              l4697 0000  
                                            l4689 0000                                              l4795 0000  
                                            l4787 0355                                              l4779 0000  
                                            l4699 0000                                              l3989 0000  
                                            l4797 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1105 04DE  
                                            u1115 04CA                                              u1095 04B7  
                                            _PEIE 005E                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 05B0  
                                            start 0011                           ?_getAdOriginalCh14Value 0046  
                               main@ucTimerDelay1 0056                                 main@ucTimerDelay2 0057  
                               main@ucTimerDelay3 0058                                 main@ucTimerDelay4 0059  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0668  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0048  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 03F8                                             _PAOD7 0C3F  
                                           _PBOD6 0C46                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 03F8                                   __end_of_initPin 05DF  
                                           _timer 00A8                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 048D                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 0677                             __end_of_clearAllTimer 05A8  
                                    __end_of_main 038F                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 057F                                main@ucTimerSeond1s 0067  
                                          ??_main 0048                              _clearPinPortAndTimer 0597  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 0650                                            _DACCON 0087  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CLKPCE 0847                                            u120_25 0458  
                                          i1l4101 0434                                            i1l4111 0440  
                                          i1l4103 0000                                            i1l4113 0000  
                                          i1l4105 043A                                            i1l4115 0000  
                                          i1l2436 0000                                            i1l4071 0000  
                                          i1l4151 0000                                            i1l4081 040A  
                                          i1l4145 0000                                            i1l4091 0000  
                                          i1l4075 0000                                            i1l4155 0000  
                                          i1l4163 03B8                                            i1l4093 041F  
                                          i1l4077 0404                                            i1l4069 0000  
                                          i1l1693 0000                                            i1l4173 03CC  
                                          i1l4149 0000                                            i1l1782 03E0  
                                          i1l1774 03A4                                            i1l4087 0000  
                                          i1l4079 0000                                            i1l4183 0000  
                                          i1l4175 0000                                            i1l4167 0000  
                                          i1l1775 03AE                                            i1l4089 0419  
                                          i1l4177 03D7                                            i1l4169 0000  
                                          i1l4099 0000                                            i1l4179 0000  
                                __end_of_dac_init 0672                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0558                                 _setAD_ConvertFlag 055C  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 0052                                ?_getAD_ConvertFlag 0070  
                                          _Filter 048D                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 062E                                  __end_of_op2_init 0648  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            clrloop 0639  
                                Filter@filter_buf 0026                                  Filter@filter_sum 0040  
                                       ??_initPin 0020                         ??_vPutSampleDataIntoTable 0077  
                           ?_clearPinPortAndTimer 0070                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 057F                  __size_of_startTwentySecondsTimer 0005  
                       __end_of_getAD_ConvertFlag 055C                         __end_of_setAD_ConvertFlag 0561  
                              __size_of_adc_start 0003                               main@ucTimerDelayP5s 005A  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 05B3                              _uiSampleChannelFirst 00AC  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0066  
                       _isFinishedThreeHoursTimer 0650                           ??_getAdOriginalCh1Value 0048  
                           __end_of_timer1_config 0638                                    ?_adc_test_init 0020  
                             main@ucTimerPowerLed 0065       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0048                                        __pbssBANK1 00A0  
                                      __pbssBANK3 0190                      __size_ofi1_setAD_ConvertFlag 0004  
                                      adc_get@val 0072                   __end_of_vPutSampleDataIntoTable 045B  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                      __pintentry 0004                               main@enumInteralStep 00AA  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 0675  
                               __end_of_adc_start 0597                              _uiTwentySecondsTimer 00A4  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 0662                                           Filter@i 0045  
                                         Filter@j 0044                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimer20s 0053                                    main@ucTimerP3s 00AB  
                                  main@ucTimerP5s 0062                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0097                                        _uiBigTimer 00A0  
                                    _clock_config 0648                                           _adc_get 03ED  
            __end_of_isFinishedTwentySecondsTimer 065C             __size_of_isFinishedTwentySecondsTimer 0006  
                    _isFinishedTwentySecondsTimer 0656                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 0617                                        ??_dac_init 0020  
                                       _AD_Sample 0561                                      __size_of_ISR 005E  
                                         _initPin 05CC                     __size_of_getAdOriginaCh4Value 0009  
                                 ??_adc_test_init 0021                                        ??_op1_init 0020  
                                      ??_op2_init 0020                           _startTwentySecondsTimer 0668  
                            end_of_initialization 05C9                                 Filter@filter_temp 003E  
                                main@ucLoaderStep 004D                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 004A  
                              main@ucChannel4Type 004C                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0042                                  _adc_convert_flag 00A7  
                          __size_of_clearAllTimer 0005                      __end_of_clearThreeHoursTimer 05B0  
                          main@ucTimerADC1ZeroP5s 0054                    __size_of_clearTwelveHoursTimer 0004  
                         _timer1_interrupt_config 0672                     __end_of_clearTwelveHoursTimer 05AC  
                        main@ucTimerForDACR0_CNT1 005B                          main@ucTimerForDACR0_CNT2 005D  
              __size_of_isFinishedThreeHoursTimer 0006                                  main@ucTimerX1P5s 0068  
                                main@ucTimerX2P5s 0069                            main@ucTimerZeroPoint3s 006A  
                          main@ucTimerZeroPoint5s 006B                                  main@ucTimerDelay 0055  
                                  __end_of_Filter 0524                                   main@ucADC4_Step 004B  
             __size_of_isFinishedTwelveHoursTimer 0006                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 045B                         ??_startTwentySecondsTimer 0020  
                             start_initialization 05B3                                       __end_of_ISR 03ED  
                            main@ucTimerLessX1P5s 0060                              main@ucTimerLessX2P5s 0061  
                           _uiSampleChannelFourth 00C4                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 000A                     __end_of_getAdOriginalCh1Value 0482  
                        ??_getAdOriginalCh14Value 0048                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 0609                 __end_of_isFinishedThreeHoursTimer 0656  
                              main@enumBranchStep 0049                                          ??_Filter 0022  
                                   _clearAllTimer 05A3                                       __pdataBANK0 006E  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                               __size_of_dac_init 0005                                     __pcstackBANK0 0020  
                  ??_isFinishedTwentySecondsTimer 0020                                         _adc_start 0594  
                               __size_of_op1_init 000B                                 __size_of_op2_init 0008  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                 __end_of_startTwentySecondsTimer 066D                                    ?_clearAllTimer 0070  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 05AC  
                    __end_of_startThreeHoursTimer 0609                                         __ptext760 05A3  
                                       __ptext761 0561                                         __ptext770 0609  
                                       __ptext762 055C                                         __ptext771 0675  
                                       __ptext763 0558                                         __ptext755 0597  
                                       __ptext780 0648                                         __ptext772 0662  
                                       __ptext764 048D                                         __ptext756 046F  
                                       __ptext781 05CC                                         __ptext773 0594  
                                       __ptext765 0650                                         __ptext757 0478  
                                       __ptext782 05B0                                         __ptext774 0640  
                                       __ptext766 05FB                                         __ptext758 0482  
                                       __ptext783 05AC                                         __ptext775 0623  
                                       __ptext767 0656                                         __ptext759 053A  
                                       __ptext784 05A8                                         __ptext776 066D  
                                       __ptext768 0668                                         __ptext785 038F  
                                       __ptext777 057F                                         __ptext769 065C  
                                       __ptext786 045B                                         __ptext778 0672  
                                       __ptext787 03ED                                         __ptext779 062E  
                                       __ptext788 03F8                                         __ptext789 0000  
                                        ?_adc_get 0070                                         __pswtext1 05DF  
                                       __pswtext2 05ED                                         __pswtext3 0617  
              __end_of_isFinishedTwelveHoursTimer 0662                        _isFinishedTwelveHoursTimer 065C  
                                 ISR@ucTimer1sCnt 00A6                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 000C                         _uiSampleChannelFourteenth 0190  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh14Value 000B  
                               interrupt_function 0004                      __end_of_getAdOriginaCh4Value 0478  
                 __end_of_timer1_interrupt_config 0675                            main@ucTimerPA6DelayP1s 0063  
                      main@ucTimerLessADC1ZeroP5s 005F                            main@ucTimerPB6DelayP1s 0064  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006D  
                     __size_of_isPermitSampleTime 0006                                      _uiSmallTimer 00A2  
                           __end_of_adc_test_init 0594                                     _timer1_config 062E  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                            _getAdOriginalCh14Value 0482  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 066D  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                      main@ucTimerForDACR0_CNT1_f 005C                        main@ucTimerForDACR0_CNT2_f 005E  
                                __size_of_initPin 0013                                  main@cTimer1s_823 00A9  
                                  Filter@tmpValue 0020                                    ?_timer1_config 0070  
                                        _op1_init 0623                                          _op2_init 0640  
                                     ??_adc_start 0020                              _startThreeHoursTimer 05FB  
                           _clearTwelveHoursTimer 05A8                                     __size_of_main 037C  
                                        clear_ram 0638                            ??_clearThreeHoursTimer 0020  
                __size_of_clearTwentySecondsTimer 0003                                     ?_clrSampeTime 0070  
                            _getAdOriginaCh4Value 046F                                       _sampleTimes 0048  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 0063  
                                        intlevel1 0000                             _getAdOriginalCh1Value 0478  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 004E  
                               main@ucLoaderStep2 004F                                 main@ucLoaderStep3 0050  
                               main@ucLoaderStep4 0051                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                             ?_getAdOriginaCh4Value 0046  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 045F  
              __end_of_process_AD_Converter_Value 0558                        _process_AD_Converter_Value 053A  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 05A3  
