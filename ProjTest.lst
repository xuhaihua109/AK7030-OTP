

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Jun 23 21:59:46 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text704,local,class=CODE,delta=2
    19                           	psect	text705,local,class=CODE,delta=2
    20                           	psect	text708,local,class=CODE,delta=2
    21                           	psect	text714,local,class=CODE,delta=2
    22                           	psect	text715,local,class=CODE,delta=2
    23                           	psect	text716,local,class=CODE,delta=2
    24                           	psect	text717,local,class=CODE,delta=2
    25                           	psect	text718,local,class=CODE,delta=2
    26                           	psect	text719,local,class=CODE,delta=2
    27                           	psect	text720,local,class=CODE,delta=2
    28                           	psect	text721,local,class=CODE,delta=2
    29                           	psect	text723,local,class=CODE,delta=2
    30                           	psect	text724,local,class=CODE,delta=2
    31                           	psect	text725,local,class=CODE,delta=2
    32                           	psect	text727,local,class=CODE,delta=2
    33                           	psect	text728,local,class=CODE,delta=2
    34                           	psect	text729,local,class=CODE,delta=2
    35                           	psect	text730,local,class=CODE,delta=2
    36                           	psect	text734,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text738,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  005E                     _PEIE	set	94
    72  0060                     _TMR1IF	set	96
    73  009F                     _ADCON1	set	159
    74  009E                     _ADRESL	set	158
    75  0087                     _DACCON	set	135
    76  0088                     _DACR0	set	136
    77  009B                     _OP2CON0	set	155
    78  009C                     _OP2CON1	set	156
    79  009D                     _OP2CON2	set	157
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0433                     _TRISB3	set	1075
    92  0434                     _TRISB4	set	1076
    93  0435                     _TRISB5	set	1077
    94  0436                     _TRISB6	set	1078
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  053F                     start_initialization:	
   103  053F  3049               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0540  01FD               	clrf	__pbssCOMMON& (0+127)
   107                           
   108                           ; Clear objects allocated to BANK0
   109  0541  1383               	bcf	3,7	;select IRP bank0
   110  0542  0084               	movwf	4
   111  0543  306E               	movlw	low (__pbssBANK0+37)
   112  0544  118A  25A0  118A   	fcall	clear_ram
   113                           
   114                           ; Clear objects allocated to BANK1
   115  0547  30A0               	movlw	low __pbssBANK1
   116  0548  0084               	movwf	4
   117  0549  30EA               	movlw	low (__pbssBANK1+74)
   118  054A  118A  25A0         	fcall	clear_ram
   119                           
   120                           ;initializer for _sampleChannelSelect
   121  054C  300E               	movlw	14
   122  054D  00EE               	movwf	__pdataBANK0& (0+127)
   123  054E                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  054E  0183               	clrf	3
   127  054F  118A  2813         	ljmp	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMMON
   130  007D                     __pbssCOMMON:	
   131  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   132  007D                     	ds	1
   133                           
   134                           	psect	bssBANK0
   135  0049                     __pbssBANK0:	
   136  0049                     _uiBigTimer:	
   137  0049                     	ds	2
   138  004B                     _uiSmallTimer:	
   139  004B                     	ds	2
   140  004D                     ISR@ucTimer1sCnt:	
   141  004D                     	ds	1
   142  004E                     _adc_convert_flag:	
   143  004E                     	ds	1
   144  004F                     _sampleTimes:	
   145  004F                     	ds	1
   146  0050                     _timer:	
   147  0050                     	ds	1
   148  0051                     main@cTimer1s_811:	
   149  0051                     	ds	1
   150  0052                     main@enumBranchStep:	
   151  0052                     	ds	1
   152  0053                     main@enumInteralStep:	
   153  0053                     	ds	1
   154  0054                     main@enumMainLoopStep:	
   155  0054                     	ds	1
   156  0055                     main@ucADC4_Step:	
   157  0055                     	ds	1
   158  0056                     main@ucChannel4Type:	
   159  0056                     	ds	1
   160  0057                     main@ucLoaderStep:	
   161  0057                     	ds	1
   162  0058                     main@ucLoaderStep1:	
   163  0058                     	ds	1
   164  0059                     main@ucLoaderStep2:	
   165  0059                     	ds	1
   166  005A                     main@ucLoaderStep3:	
   167  005A                     	ds	1
   168  005B                     main@ucLoaderStep4:	
   169  005B                     	ds	1
   170  005C                     main@ucTimer1s:	
   171  005C                     	ds	1
   172  005D                     main@ucTimer20s:	
   173  005D                     	ds	1
   174  005E                     main@ucTimerADC1ZeroP5s:	
   175  005E                     	ds	1
   176  005F                     main@ucTimerDelay:	
   177  005F                     	ds	1
   178  0060                     main@ucTimerDelay1:	
   179  0060                     	ds	1
   180  0061                     main@ucTimerDelay2:	
   181  0061                     	ds	1
   182  0062                     main@ucTimerDelay3:	
   183  0062                     	ds	1
   184  0063                     main@ucTimerDelay4:	
   185  0063                     	ds	1
   186  0064                     main@ucTimerDelayP5s:	
   187  0064                     	ds	1
   188  0065                     main@ucTimerP3s:	
   189  0065                     	ds	1
   190  0066                     main@ucTimerP5s:	
   191  0066                     	ds	1
   192  0067                     main@ucTimerRightP5s:	
   193  0067                     	ds	1
   194  0068                     main@ucTimerX1P5s:	
   195  0068                     	ds	1
   196  0069                     main@ucTimerX2P5s:	
   197  0069                     	ds	1
   198  006A                     main@ucTimerZeroPoint3s:	
   199  006A                     	ds	1
   200  006B                     main@ucTimerZeroPoint5s:	
   201  006B                     	ds	1
   202  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   203  006C                     	ds	1
   204  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   205  006D                     	ds	1
   206                           
   207                           	psect	dataBANK0
   208  006E                     __pdataBANK0:	
   209  006E                     _sampleChannelSelect:	
   210  006E                     	ds	1
   211                           
   212                           	psect	bssBANK1
   213  00A0                     __pbssBANK1:	
   214  00A0                     _uiTwentySecondsTimer:	
   215  00A0                     	ds	2
   216  00A2                     _uiSampleChannelFirst:	
   217  00A2                     	ds	24
   218  00BA                     _uiSampleChannelFourteenth:	
   219  00BA                     	ds	24
   220  00D2                     _uiSampleChannelFourth:	
   221  00D2                     	ds	24
   222                           
   223                           	psect	clrtext
   224  05A0                     clear_ram:	
   225                           ;	Called with FSR containing the base address, and
   226                           ;	W with the last address+1
   227                           
   228  05A0  0064               	clrwdt	;clear the watchdog before getting into this loop
   229  05A1                     clrloop:	
   230  05A1  0180               	clrf	0	;clear RAM location pointed to by FSR
   231  05A2  0A84               	incf	4,f	;increment pointer
   232  05A3  0604               	xorwf	4,w	;XOR with final address
   233  05A4  1903               	btfsc	3,2	;have we reached the end yet?
   234  05A5  3400               	retlw	0	;all done for this memory range, return
   235  05A6  0604               	xorwf	4,w	;XOR again to restore value
   236  05A7  2DA1               	goto	clrloop	;do the next byte
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_clearTwelveHoursTimer:	
   241  0070                     ?_clearThreeHoursTimer:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_clearTwentySecondsTimer:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ?_clock_config:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ?_timer1_config:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_timer1_interrupt_config:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0070                     ?_dac_init:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_op1_init:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_op2_init:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_adc_start:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_process_AD_Converter_Value:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_clrSampeTime:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_startTwentySecondsTimer:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_AD_Sample:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_clearAllTimer:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_clearPinPortAndTimer:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_initPin:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_setAD_ConvertFlag:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_ISR:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?i1_setAD_ConvertFlag:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ??i1_setAD_ConvertFlag:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_isPermitSampleTime:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_isFinishedTwelveHoursTimer:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_isFinishedTwentySecondsTimer:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_isFinishedThreeHoursTimer:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_getAD_ConvertFlag:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_adc_get:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     i1setAD_ConvertFlag@flag:	
   323                           ; 2 bytes @ 0x0
   324                           
   325                           
   326                           ; 1 bytes @ 0x0
   327  0070                     	ds	2
   328  0072                     ??_adc_get:	
   329  0072                     adc_get@val:	
   330                           ; 0 bytes @ 0x2
   331                           
   332                           
   333                           ; 2 bytes @ 0x2
   334  0072                     	ds	2
   335  0074                     ?_vPutSampleDataIntoTable:	
   336  0074                     vPutSampleDataIntoTable@uiSampleData:	
   337                           ; 0 bytes @ 0x4
   338                           
   339                           
   340                           ; 2 bytes @ 0x4
   341  0074                     	ds	2
   342  0076                     vPutSampleDataIntoTable@channel:	
   343                           
   344                           ; 1 bytes @ 0x6
   345  0076                     	ds	1
   346  0077                     ??_vPutSampleDataIntoTable:	
   347  0077                     vPutSampleDataIntoTable@i:	
   348                           ; 0 bytes @ 0x7
   349                           
   350                           
   351                           ; 2 bytes @ 0x7
   352  0077                     	ds	2
   353  0079                     ??_ISR:	
   354                           
   355                           ; 0 bytes @ 0x9
   356  0079                     	ds	4
   357                           
   358                           	psect	cstackBANK0
   359  0020                     __pcstackBANK0:	
   360  0020                     ??_clearTwelveHoursTimer:	
   361  0020                     ??_clearThreeHoursTimer:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0020                     ??_clearTwentySecondsTimer:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0020                     ??_clock_config:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0020                     ??_timer1_config:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0020                     ??_timer1_interrupt_config:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0020                     ?_adc_test_init:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0020                     ??_dac_init:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0020                     ??_op1_init:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0020                     ??_op2_init:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0020                     ??_adc_start:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0020                     ??_isPermitSampleTime:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0020                     ??_clrSampeTime:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0020                     ?_startTwelveHourTimer:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0020                     ??_isFinishedTwelveHoursTimer:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0020                     ??_startTwentySecondsTimer:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0020                     ??_isFinishedTwentySecondsTimer:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0020                     ?_startThreeHoursTimer:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0020                     ??_isFinishedThreeHoursTimer:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0020                     ??_AD_Sample:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0020                     ??_clearAllTimer:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ??_clearPinPortAndTimer:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ??_initPin:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ??_getAD_ConvertFlag:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ??_setAD_ConvertFlag:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ?_Filter:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     setAD_ConvertFlag@flag:	
   437                           ; 2 bytes @ 0x0
   438                           
   439  0020                     adc_test_init@ref:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0020                     startTwelveHourTimer@uiSetTime:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0020                     startThreeHoursTimer@uiSetTime:	
   446                           ; 2 bytes @ 0x0
   447                           
   448                           
   449                           ; 2 bytes @ 0x0
   450  0020                     	ds	1
   451  0021                     ??_adc_test_init:	
   452                           
   453                           ; 0 bytes @ 0x1
   454  0021                     	ds	1
   455  0022                     ??_startTwelveHourTimer:	
   456  0022                     ??_startThreeHoursTimer:	
   457                           ; 0 bytes @ 0x2
   458                           
   459  0022                     ??_Filter:	
   460                           ; 0 bytes @ 0x2
   461                           
   462  0022                     adc_test_init@channel:	
   463                           ; 0 bytes @ 0x2
   464                           
   465                           
   466                           ; 1 bytes @ 0x2
   467  0022                     	ds	1
   468  0023                     ??_process_AD_Converter_Value:	
   469                           
   470                           ; 0 bytes @ 0x3
   471  0023                     	ds	3
   472  0026                     Filter@filter_buf:	
   473                           
   474                           ; 24 bytes @ 0x6
   475  0026                     	ds	24
   476  003E                     Filter@filter_temp:	
   477                           
   478                           ; 2 bytes @ 0x1E
   479  003E                     	ds	2
   480  0040                     Filter@filter_sum:	
   481                           
   482                           ; 2 bytes @ 0x20
   483  0040                     	ds	2
   484  0042                     Filter@tmpValue:	
   485                           
   486                           ; 1 bytes @ 0x22
   487  0042                     	ds	1
   488  0043                     Filter@cir:	
   489                           
   490                           ; 2 bytes @ 0x23
   491  0043                     	ds	2
   492  0045                     Filter@j:	
   493                           
   494                           ; 1 bytes @ 0x25
   495  0045                     	ds	1
   496  0046                     Filter@i:	
   497                           
   498                           ; 1 bytes @ 0x26
   499  0046                     	ds	1
   500  0047                     ?_getAdOriginalCh14Value:	
   501  0047                     ?_getAdOriginalCh1Value:	
   502                           ; 2 bytes @ 0x27
   503                           
   504  0047                     ?_getAdOriginaCh4Value:	
   505                           ; 2 bytes @ 0x27
   506                           
   507                           
   508                           ; 2 bytes @ 0x27
   509  0047                     	ds	2
   510  0049                     ??_getAdOriginalCh14Value:	
   511  0049                     ??_getAdOriginalCh1Value:	
   512                           ; 0 bytes @ 0x29
   513                           
   514  0049                     ??_getAdOriginaCh4Value:	
   515                           ; 0 bytes @ 0x29
   516                           
   517  0049                     ??_main:	
   518                           ; 0 bytes @ 0x29
   519                           
   520                           
   521                           	psect	maintext
   522  0013                     __pmaintext:	
   523                           ; 0 bytes @ 0x29
   524 ;;Data sizes: Strings 0, constant 0, data 1, bss 112, persistent 0 stack 0
   525 ;;Auto spaces:   Size  Autos    Used
   526 ;; COMMON          14     13      14
   527 ;; BANK0           80     41      79
   528 ;; BANK1           80      0      74
   529 ;; BANK3           96      0       0
   530 ;; BANK2           96      0       0
   531 ;;
   532 ;; Pointer list with targets:
   533 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   534 ;;
   535 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   536 ;;
   537 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   538 ;;
   539 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   540 ;;
   541 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   542 ;;
   543 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   544 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   545 ;;
   546 ;;
   547 ;; Critical Paths under _main in COMMON
   548 ;;
   549 ;;   None.
   550 ;;
   551 ;; Critical Paths under _ISR in COMMON
   552 ;;
   553 ;;   _ISR->_vPutSampleDataIntoTable
   554 ;;   _vPutSampleDataIntoTable->_adc_get
   555 ;;
   556 ;; Critical Paths under _main in BANK0
   557 ;;
   558 ;;   _main->_getAdOriginalCh14Value
   559 ;;   _main->_getAdOriginalCh1Value
   560 ;;   _main->_getAdOriginaCh4Value
   561 ;;   _getAdOriginaCh4Value->_Filter
   562 ;;   _getAdOriginalCh1Value->_Filter
   563 ;;   _getAdOriginalCh14Value->_Filter
   564 ;;   _process_AD_Converter_Value->_adc_test_init
   565 ;;
   566 ;; Critical Paths under _ISR in BANK0
   567 ;;
   568 ;;   None.
   569 ;;
   570 ;; Critical Paths under _main in BANK1
   571 ;;
   572 ;;   None.
   573 ;;
   574 ;; Critical Paths under _ISR in BANK1
   575 ;;
   576 ;;   None.
   577 ;;
   578 ;; Critical Paths under _main in BANK3
   579 ;;
   580 ;;   None.
   581 ;;
   582 ;; Critical Paths under _ISR in BANK3
   583 ;;
   584 ;;   None.
   585 ;;
   586 ;; Critical Paths under _main in BANK2
   587 ;;
   588 ;;   None.
   589 ;;
   590 ;; Critical Paths under _ISR in BANK2
   591 ;;
   592 ;;   None.
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   595 ;;
   596 ;;
   597 ;;Call Graph Tables:
   598 ;;
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (0) _main                                                 0     0      0    2014
   603 ;;                            _initPin
   604 ;;                       _clock_config
   605 ;;                      _timer1_config
   606 ;;            _timer1_interrupt_config
   607 ;;                      _adc_test_init
   608 ;;                           _dac_init
   609 ;;                           _op1_init
   610 ;;                           _op2_init
   611 ;;                          _adc_start
   612 ;;         _process_AD_Converter_Value
   613 ;;                 _isPermitSampleTime
   614 ;;                       _clrSampeTime
   615 ;;             _getAdOriginalCh14Value
   616 ;;               _clearPinPortAndTimer
   617 ;;              _getAdOriginalCh1Value
   618 ;;               _startTwelveHourTimer
   619 ;;         _isFinishedTwelveHoursTimer
   620 ;;            _startTwentySecondsTimer
   621 ;;               _getAdOriginaCh4Value
   622 ;;       _isFinishedTwentySecondsTimer
   623 ;;               _startThreeHoursTimer
   624 ;;          _isFinishedThreeHoursTimer
   625 ;;               _clearThreeHoursTimer
   626 ;;                      _clearAllTimer
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   629 ;;                      _clearAllTimer
   630 ;; ---------------------------------------------------------------------------------
   631 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   632 ;;                                             39 BANK0      2     0      2
   633 ;;                             _Filter
   634 ;; ---------------------------------------------------------------------------------
   635 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   636 ;;                                             39 BANK0      2     0      2
   637 ;;                             _Filter
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   640 ;;                                             39 BANK0      2     0      2
   641 ;;                             _Filter
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   644 ;;                  _getAD_ConvertFlag
   645 ;;                  _setAD_ConvertFlag
   646 ;;                          _AD_Sample
   647 ;;                      _adc_test_init
   648 ;;                          _adc_start
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (1) _clearAllTimer                                        0     0      0       0
   651 ;;              _clearTwelveHoursTimer
   652 ;;               _clearThreeHoursTimer
   653 ;;            _clearTwentySecondsTimer
   654 ;; ---------------------------------------------------------------------------------
   655 ;; (2) _AD_Sample                                            0     0      0       0
   656 ;; ---------------------------------------------------------------------------------
   657 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   658 ;;                                              0 BANK0      1     1      0
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   661 ;; ---------------------------------------------------------------------------------
   662 ;; (2) _Filter                                              39    37      2     620
   663 ;;                                              0 BANK0     39    37      2
   664 ;; ---------------------------------------------------------------------------------
   665 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   666 ;; ---------------------------------------------------------------------------------
   667 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   668 ;;                                              0 BANK0      2     0      2
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   677 ;;                                              0 BANK0      2     0      2
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (1) _clrSampeTime                                         0     0      0       0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _isPermitSampleTime                                   0     0      0       0
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (2) _adc_start                                            0     0      0       0
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _op2_init                                             0     0      0       0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _op1_init                                             0     0      0       0
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (1) _dac_init                                             0     0      0       0
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (2) _adc_test_init                                        3     2      1      44
   692 ;;                                              0 BANK0      3     2      1
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _timer1_interrupt_config                              0     0      0       0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _timer1_config                                        0     0      0       0
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _clock_config                                         0     0      0       0
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (1) _initPin                                              0     0      0       0
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   707 ;; ---------------------------------------------------------------------------------
   708 ;; Estimated maximum stack depth 2
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (4) _ISR                                                  4     4      0     407
   713 ;;                                              9 COMMON     4     4      0
   714 ;;                i1_setAD_ConvertFlag
   715 ;;                            _adc_get
   716 ;;            _vPutSampleDataIntoTable
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   719 ;;                                              0 COMMON     1     1      0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (5) _adc_get                                              4     2      2      24
   722 ;;                                              0 COMMON     4     2      2
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   725 ;;                                              4 COMMON     5     2      3
   726 ;;                            _adc_get (ARG)
   727 ;; ---------------------------------------------------------------------------------
   728 ;; Estimated maximum stack depth 5
   729 ;; ---------------------------------------------------------------------------------
   730 ;; Call Graph Graphs:
   731 ;; _main (ROOT)
   732 ;;   _initPin
   733 ;;   _clock_config
   734 ;;   _timer1_config
   735 ;;   _timer1_interrupt_config
   736 ;;   _adc_test_init
   737 ;;   _dac_init
   738 ;;   _op1_init
   739 ;;   _op2_init
   740 ;;   _adc_start
   741 ;;   _process_AD_Converter_Value
   742 ;;     _getAD_ConvertFlag
   743 ;;     _setAD_ConvertFlag
   744 ;;     _AD_Sample
   745 ;;     _adc_test_init
   746 ;;     _adc_start
   747 ;;   _isPermitSampleTime
   748 ;;   _clrSampeTime
   749 ;;   _getAdOriginalCh14Value
   750 ;;     _Filter
   751 ;;   _clearPinPortAndTimer
   752 ;;     _clearAllTimer
   753 ;;       _clearTwelveHoursTimer
   754 ;;       _clearThreeHoursTimer
   755 ;;       _clearTwentySecondsTimer
   756 ;;   _getAdOriginalCh1Value
   757 ;;     _Filter
   758 ;;   _startTwelveHourTimer
   759 ;;   _isFinishedTwelveHoursTimer
   760 ;;   _startTwentySecondsTimer
   761 ;;   _getAdOriginaCh4Value
   762 ;;     _Filter
   763 ;;   _isFinishedTwentySecondsTimer
   764 ;;   _startThreeHoursTimer
   765 ;;   _isFinishedThreeHoursTimer
   766 ;;   _clearThreeHoursTimer
   767 ;;   _clearAllTimer
   768 ;;     _clearTwelveHoursTimer
   769 ;;     _clearThreeHoursTimer
   770 ;;     _clearTwentySecondsTimer
   771 ;;
   772 ;; _ISR (ROOT)
   773 ;;   i1_setAD_ConvertFlag
   774 ;;   _adc_get
   775 ;;   _vPutSampleDataIntoTable
   776 ;;     _adc_get (ARG)
   777 ;;
   778 ;; Address spaces:
   779 ;;Name               Size   Autos  Total    Cost      Usage
   780 ;;BANK3               60      0       0      10        0.0%
   781 ;;BITBANK3            60      0       0       9        0.0%
   782 ;;SFR3                 0      0       0       4        0.0%
   783 ;;BITSFR3              0      0       0       4        0.0%
   784 ;;BANK2               60      0       0      12        0.0%
   785 ;;BITBANK2            60      0       0      11        0.0%
   786 ;;SFR2                 0      0       0       5        0.0%
   787 ;;BITSFR2              0      0       0       5        0.0%
   788 ;;SFR1                 0      0       0       2        0.0%
   789 ;;BITSFR1              0      0       0       2        0.0%
   790 ;;BANK1               50      0      4A       8       92.5%
   791 ;;BITBANK1            50      0       0       7        0.0%
   792 ;;CODE                 0      0       0       0        0.0%
   793 ;;DATA                 0      0      AE       6        0.0%
   794 ;;ABS                  0      0      A7       3        0.0%
   795 ;;NULL                 0      0       0       0        0.0%
   796 ;;STACK                0      0       7       2        0.0%
   797 ;;BANK0               50     29      4F       5       98.8%
   798 ;;BITBANK0            50      0       0       4        0.0%
   799 ;;SFR0                 0      0       0       1        0.0%
   800 ;;BITSFR0              0      0       0       1        0.0%
   801 ;;COMMON               E      D       E       1      100.0%
   802 ;;BITCOMMON            E      0       0       0        0.0%
   803                           
   804                           
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 129 in file "D:\develop\ATK\AK7030-OTP\main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;		None               void
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 17F/0
   818 ;;		On exit  : 60/0
   819 ;;		Unchanged: FFE00/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels required when called:    5
   827 ;; This function calls:
   828 ;;		_initPin
   829 ;;		_clock_config
   830 ;;		_timer1_config
   831 ;;		_timer1_interrupt_config
   832 ;;		_adc_test_init
   833 ;;		_dac_init
   834 ;;		_op1_init
   835 ;;		_op2_init
   836 ;;		_adc_start
   837 ;;		_process_AD_Converter_Value
   838 ;;		_isPermitSampleTime
   839 ;;		_clrSampeTime
   840 ;;		_getAdOriginalCh14Value
   841 ;;		_clearPinPortAndTimer
   842 ;;		_getAdOriginalCh1Value
   843 ;;		_startTwelveHourTimer
   844 ;;		_isFinishedTwelveHoursTimer
   845 ;;		_startTwentySecondsTimer
   846 ;;		_getAdOriginaCh4Value
   847 ;;		_isFinishedTwentySecondsTimer
   848 ;;		_startThreeHoursTimer
   849 ;;		_isFinishedThreeHoursTimer
   850 ;;		_clearThreeHoursTimer
   851 ;;		_clearAllTimer
   852 ;; This function is called by:
   853 ;;		Startup code after reset
   854 ;; This function uses a non-reentrant model
   855 ;;
   856  0013                     _main:	
   857                           
   858                           ;main.c: 130: enum setp_Adc4
   859                           ;main.c: 131: {
   860                           ;main.c: 132: ADC4_STEP_INIT = 0,
   861                           ;main.c: 133: ADC4_STEP_FIRST,
   862                           ;main.c: 134: ADC4_STEP_SECOND,
   863                           ;main.c: 135: ADC4_STEP_THIRD,
   864                           ;main.c: 136: ADC4_STEP_FOURTH,
   865                           ;main.c: 137: ADC4_STEP_FIFTH,
   866                           ;main.c: 138: ADC4_STEP_SIXTH,
   867                           ;main.c: 139: };
   868                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   869                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   870                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   871                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   872                           
   873                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   874  0013  1683               	bsf	3,5	;RP0=1, select bank1
   875  0014  1005               	bcf	5,0
   876                           
   877                           ;main.c: 151: TRISA1 = 0;
   878  0015  1085               	bcf	5,1
   879                           
   880                           ;main.c: 152: TRISA2 = 0;
   881  0016  1105               	bcf	5,2
   882                           
   883                           ;main.c: 153: TRISA3 = 0;
   884  0017  1185               	bcf	5,3
   885                           
   886                           ;main.c: 154: TRISB0 = 0;
   887  0018  1006               	bcf	6,0
   888                           
   889                           ;main.c: 155: TRISB1 = 0;
   890  0019  1086               	bcf	6,1
   891                           
   892                           ;main.c: 156: TRISA6 = 0;
   893  001A  1305               	bcf	5,6
   894                           
   895                           ;main.c: 157: TRISA7 = 0;
   896  001B  1385               	bcf	5,7
   897                           
   898                           ;main.c: 158: TRISB6 = 0;
   899  001C  1306               	bcf	6,6
   900                           
   901                           ;main.c: 161: initPin();
   902  001D  118A  252C  118A   	fcall	_initPin
   903                           
   904                           ;main.c: 164: TRISB2 = 1;
   905  0020  1303               	bcf	3,6	;RP1=0, select bank1
   906  0021  1506               	bsf	6,2
   907                           
   908                           ;main.c: 166: TRISB7 = 1;
   909  0022  1786               	bsf	6,7
   910                           
   911                           ;main.c: 167: TRISB4 = 1;
   912  0023  1606               	bsf	6,4
   913                           
   914                           ;main.c: 169: clock_config();
   915  0024  118A  25B0  118A   	fcall	_clock_config
   916                           
   917                           ;main.c: 170: timer1_config();
   918  0027  118A  2584  118A   	fcall	_timer1_config
   919                           
   920                           ;main.c: 171: timer1_interrupt_config();
   921  002A  118A  25D7  118A   	fcall	_timer1_interrupt_config
   922                           
   923                           ;main.c: 173: adc_test_init(14,3);
   924  002D  3003               	movlw	3
   925  002E  1283               	bcf	3,5	;RP0=0, select bank0
   926  002F  00A0               	movwf	?_adc_test_init
   927  0030  300E               	movlw	14
   928  0031  118A  24F9  118A   	fcall	_adc_test_init
   929                           
   930                           ;main.c: 175: dac_init();
   931  0034  118A  25D2  118A   	fcall	_dac_init
   932                           
   933                           ;main.c: 176: op1_init();
   934  0037  118A  2579  118A   	fcall	_op1_init
   935                           
   936                           ;main.c: 177: op2_init();
   937  003A  118A  25A8  118A   	fcall	_op2_init
   938                           
   939                           ;main.c: 180: adc_start();
   940  003D  118A  250E  118A   	fcall	_adc_start
   941  0040                     l4122:	
   942  0040  0064               	clrwdt	;#
   943                           
   944                           ;main.c: 215: process_AD_Converter_Value();
   945  0041  118A  24B7  118A   	fcall	_process_AD_Converter_Value
   946                           
   947                           ;main.c: 217: if(isPermitSampleTime())
   948  0044  118A  25CD  118A   	fcall	_isPermitSampleTime
   949  0047  3A00               	xorlw	0
   950  0048  1903               	skipnz
   951  0049  2840               	goto	l4122
   952                           
   953                           ;main.c: 218: {
   954                           ;main.c: 219: clrSampeTime();
   955  004A  118A  25DA  118A   	fcall	_clrSampeTime
   956                           
   957                           ;main.c: 221: switch(enumMainLoopStep)
   958  004D  2B0A               	goto	l4614
   959  004E                     l4130:	
   960                           
   961                           ;main.c: 224: {
   962                           ;main.c: 225: static unsigned char ucTimerZeroPoint5s = 0;
   963                           ;main.c: 226: if(getAdOriginalCh14Value() > 1950)
   964  004E  118A  240C  118A   	fcall	_getAdOriginalCh14Value
   965  0051  3007               	movlw	7
   966  0052  0248               	subwf	?_getAdOriginalCh14Value+1,w
   967  0053  309F               	movlw	159
   968  0054  1903               	skipnz
   969  0055  0247               	subwf	?_getAdOriginalCh14Value,w
   970  0056  1C03               	skipc
   971  0057  285A               	goto	l4134
   972                           
   973                           ;main.c: 227: {
   974                           ;main.c: 228: ucTimerZeroPoint5s++;
   975  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
   976                           
   977                           ;main.c: 229: }
   978  0059  285B               	goto	l4136
   979  005A                     l4134:	
   980                           
   981                           ;main.c: 230: else
   982                           ;main.c: 231: ucTimerZeroPoint5s = 0;
   983  005A  01EB               	clrf	main@ucTimerZeroPoint5s
   984  005B                     l4136:	
   985                           
   986                           ;main.c: 233: if(ucTimerZeroPoint5s >= 1)
   987  005B  086B               	movf	main@ucTimerZeroPoint5s,w
   988  005C  1903               	btfsc	3,2
   989  005D  2840               	goto	l4122
   990                           
   991                           ;main.c: 234: {
   992                           ;main.c: 235: ucTimerZeroPoint5s = 0;
   993  005E  01EB               	clrf	main@ucTimerZeroPoint5s
   994  005F                     l4140:	
   995                           
   996                           ;main.c: 236: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   997  005F  1283               	bcf	3,5	;RP0=0, select bank0
   998  0060  01D4               	clrf	main@enumMainLoopStep
   999  0061  0AD4               	incf	main@enumMainLoopStep,f
  1000  0062                     l706:	
  1001                           
  1002                           ;main.c: 237: }
  1003                           ;main.c: 238: break;
  1004  0062  2840               	goto	l4122
  1005  0063                     l4142:	
  1006                           
  1007                           ;main.c: 242: {
  1008                           ;main.c: 243: static unsigned char ucTimerZeroPoint3s = 0;
  1009                           ;main.c: 245: if(ucTimerZeroPoint3s < 1)
  1010  0063  08EA               	movf	main@ucTimerZeroPoint3s,f
  1011  0064  1D03               	skipz
  1012  0065  2868               	goto	l4146
  1013                           
  1014                           ;main.c: 246: {
  1015                           ;main.c: 247: ucTimerZeroPoint3s++;
  1016  0066  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1017                           
  1018                           ;main.c: 248: }
  1019  0067  2840               	goto	l4122
  1020  0068                     l4146:	
  1021                           
  1022                           ;main.c: 249: else
  1023                           ;main.c: 250: {
  1024                           ;main.c: 251: ucTimerZeroPoint3s = 0;
  1025  0068  01EA               	clrf	main@ucTimerZeroPoint3s
  1026                           
  1027                           ;main.c: 253: if(getAdOriginalCh14Value() > 1950)
  1028  0069  118A  240C  118A   	fcall	_getAdOriginalCh14Value
  1029  006C  3007               	movlw	7
  1030  006D  0248               	subwf	?_getAdOriginalCh14Value+1,w
  1031  006E  309F               	movlw	159
  1032  006F  1903               	skipnz
  1033  0070  0247               	subwf	?_getAdOriginalCh14Value,w
  1034  0071  1C03               	skipc
  1035  0072  2875               	goto	l4152
  1036  0073                     l4150:	
  1037                           
  1038                           ;main.c: 254: {
  1039                           ;main.c: 256: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1040  0073  3002               	movlw	2
  1041  0074  28B9               	goto	L5
  1042  0075                     l4152:	
  1043                           ;main.c: 257: }
  1044                           
  1045                           
  1046                           ;main.c: 258: else
  1047                           ;main.c: 259: {
  1048                           ;main.c: 260: clearPinPortAndTimer();
  1049  0075  118A  2511  118A   	fcall	_clearPinPortAndTimer
  1050  0078  2840               	goto	l4122
  1051  0079                     l715:	
  1052                           ;main.c: 264: }
  1053                           ;main.c: 266: case MAIN_LOOP_STEP_SECOND:
  1054                           
  1055  0079  3005               	movlw	5
  1056                           
  1057                           ;main.c: 267: {
  1058                           ;main.c: 268: static unsigned char ucTimerP5s = 0;
  1059                           ;main.c: 270: PA6 = 1;
  1060  007A  1705               	bsf	5,6
  1061                           
  1062                           ;main.c: 272: if(ucTimerP5s < 5)
  1063  007B  0266               	subwf	main@ucTimerP5s,w
  1064  007C  1803               	skipnc
  1065  007D  2880               	goto	l4158
  1066                           
  1067                           ;main.c: 273: ucTimerP5s++;
  1068  007E  0AE6               	incf	main@ucTimerP5s,f
  1069  007F  2840               	goto	l4122
  1070  0080                     l4158:	
  1071  0080  3003               	movlw	3
  1072                           
  1073                           ;main.c: 274: else
  1074                           ;main.c: 275: {
  1075                           ;main.c: 276: ucTimerP5s = 0;
  1076  0081  01E6               	clrf	main@ucTimerP5s
  1077                           
  1078                           ;main.c: 278: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1079  0082  28B9               	goto	L5
  1080  0083                     l4162:	
  1081                           
  1082                           ;main.c: 285: {
  1083                           ;main.c: 286: static unsigned char ucTimerADC1ZeroP5s = 0;
  1084                           ;main.c: 288: if(getAdOriginalCh1Value() < 130)
  1085  0083  118A  2405  118A   	fcall	_getAdOriginalCh1Value
  1086  0086  3000               	movlw	0
  1087  0087  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1088  0088  3082               	movlw	130
  1089  0089  1903               	skipnz
  1090  008A  0247               	subwf	?_getAdOriginalCh1Value,w
  1091  008B  1803               	skipnc
  1092  008C  288F               	goto	l4166
  1093                           
  1094                           ;main.c: 289: {
  1095                           ;main.c: 290: ucTimerADC1ZeroP5s = 0;
  1096  008D  01DE               	clrf	main@ucTimerADC1ZeroP5s
  1097                           
  1098                           ;main.c: 292: }
  1099  008E  2890               	goto	l4168
  1100  008F                     l4166:	
  1101                           
  1102                           ;main.c: 293: else
  1103                           ;main.c: 294: {
  1104                           ;main.c: 295: ucTimerADC1ZeroP5s++;
  1105  008F  0ADE               	incf	main@ucTimerADC1ZeroP5s,f
  1106  0090                     l4168:	
  1107                           
  1108                           ;main.c: 296: }
  1109                           ;main.c: 298: if(ucTimerADC1ZeroP5s >= 1)
  1110  0090  085E               	movf	main@ucTimerADC1ZeroP5s,w
  1111  0091  1903               	btfsc	3,2
  1112  0092  2896               	goto	l4174
  1113  0093  3004               	movlw	4
  1114                           
  1115                           ;main.c: 299: {
  1116                           ;main.c: 300: ucTimerADC1ZeroP5s = 0;
  1117  0094  01DE               	clrf	main@ucTimerADC1ZeroP5s
  1118                           
  1119                           ;main.c: 301: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1120  0095  28B9               	goto	L5
  1121  0096                     l4174:	
  1122                           ;main.c: 302: }
  1123                           
  1124                           
  1125                           ;main.c: 303: else
  1126                           ;main.c: 304: {
  1127                           ;main.c: 305: static unsigned char ucTimerRightP5s = 0;
  1128                           ;main.c: 307: if(getAdOriginalCh1Value() < 117)
  1129  0096  118A  2405  118A   	fcall	_getAdOriginalCh1Value
  1130  0099  3000               	movlw	0
  1131  009A  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1132  009B  3075               	movlw	117
  1133  009C  1903               	skipnz
  1134  009D  0247               	subwf	?_getAdOriginalCh1Value,w
  1135  009E  1803               	skipnc
  1136  009F  28A2               	goto	l4178
  1137                           
  1138                           ;main.c: 308: {
  1139                           ;main.c: 309: ucTimerRightP5s++;
  1140  00A0  0AE7               	incf	main@ucTimerRightP5s,f
  1141                           
  1142                           ;main.c: 310: }
  1143  00A1  28A3               	goto	l4180
  1144  00A2                     l4178:	
  1145                           
  1146                           ;main.c: 311: else
  1147                           ;main.c: 312: {
  1148                           ;main.c: 313: ucTimerRightP5s = 0;
  1149  00A2  01E7               	clrf	main@ucTimerRightP5s
  1150  00A3                     l4180:	
  1151                           
  1152                           ;main.c: 314: }
  1153                           ;main.c: 316: if(ucTimerRightP5s >= 1)
  1154  00A3  0867               	movf	main@ucTimerRightP5s,w
  1155  00A4  1903               	btfsc	3,2
  1156  00A5  2840               	goto	l4122
  1157  00A6  3008               	movlw	8
  1158                           
  1159                           ;main.c: 317: {
  1160                           ;main.c: 318: ucTimerRightP5s = 0;
  1161  00A7  01E7               	clrf	main@ucTimerRightP5s
  1162                           
  1163                           ;main.c: 319: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1164  00A8  28B9               	goto	L5
  1165  00A9                     l4186:	
  1166                           ;main.c: 320: }
  1167                           
  1168                           
  1169                           ;main.c: 331: {
  1170                           ;main.c: 333: startTwelveHourTimer(600);
  1171  00A9  3058               	movlw	88
  1172  00AA  00A0               	movwf	?_startTwelveHourTimer
  1173  00AB  3002               	movlw	2
  1174  00AC  00A1               	movwf	?_startTwelveHourTimer+1
  1175  00AD  118A  2597  118A   	fcall	_startTwelveHourTimer
  1176                           
  1177                           ;main.c: 334: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1178  00B0  3005               	movlw	5
  1179  00B1  28B9               	goto	L5
  1180  00B2                     l4190:	
  1181                           ;main.c: 336: break;
  1182                           
  1183                           
  1184                           ;main.c: 340: {
  1185                           ;main.c: 342: if(isFinishedTwelveHoursTimer())
  1186  00B2  118A  25C8  118A   	fcall	_isFinishedTwelveHoursTimer
  1187  00B5  3A00               	xorlw	0
  1188  00B6  1903               	skipnz
  1189  00B7  2A46               	goto	l4510
  1190  00B8                     l4192:	
  1191                           
  1192                           ;main.c: 343: {
  1193                           ;main.c: 344: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1194  00B8  3009               	movlw	9
  1195  00B9                     L5:	
  1196  00B9  00D4               	movwf	main@enumMainLoopStep
  1197                           
  1198                           ;main.c: 345: }
  1199  00BA  2840               	goto	l4122
  1200  00BB                     l4194:	
  1201                           
  1202                           ;main.c: 353: {
  1203                           ;main.c: 354: startTwentySecondsTimer();
  1204  00BB  118A  25C3  118A   	fcall	_startTwentySecondsTimer
  1205  00BE                     l4196:	
  1206                           
  1207                           ;main.c: 355: ucADC4_Step = ADC4_STEP_FIRST;
  1208  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1209  00BF  01D5               	clrf	main@ucADC4_Step
  1210  00C0  0AD5               	incf	main@ucADC4_Step,f
  1211                           
  1212                           ;main.c: 356: break;
  1213  00C1  2840               	goto	l4122
  1214  00C2                     l4198:	
  1215                           
  1216                           ;main.c: 360: {
  1217                           ;main.c: 361: if(getAdOriginaCh4Value() < 1911)
  1218  00C2  118A  23FE  118A   	fcall	_getAdOriginaCh4Value
  1219  00C5  3007               	movlw	7
  1220  00C6  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1221  00C7  3077               	movlw	119
  1222  00C8  1903               	skipnz
  1223  00C9  0247               	subwf	?_getAdOriginaCh4Value,w
  1224  00CA  1803               	skipnc
  1225  00CB  28CE               	goto	l4202
  1226                           
  1227                           ;main.c: 362: ucChannel4Type = LESS_THAN_1911;
  1228  00CC  01D6               	clrf	main@ucChannel4Type
  1229  00CD  28F5               	goto	l744
  1230  00CE                     l4202:	
  1231                           
  1232                           ;main.c: 363: else if(getAdOriginaCh4Value() < 2067)
  1233  00CE  118A  23FE  118A   	fcall	_getAdOriginaCh4Value
  1234  00D1  3008               	movlw	8
  1235  00D2  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1236  00D3  3013               	movlw	19
  1237  00D4  1903               	skipnz
  1238  00D5  0247               	subwf	?_getAdOriginaCh4Value,w
  1239  00D6  1803               	skipnc
  1240  00D7  28DB               	goto	l4206
  1241                           
  1242                           ;main.c: 364: ucChannel4Type = BETWEEN_1911_AND_2067;
  1243  00D8  01D6               	clrf	main@ucChannel4Type
  1244  00D9  0AD6               	incf	main@ucChannel4Type,f
  1245  00DA  28F5               	goto	l744
  1246  00DB                     l4206:	
  1247                           
  1248                           ;main.c: 365: else if(getAdOriginaCh4Value() < 2204)
  1249  00DB  118A  23FE  118A   	fcall	_getAdOriginaCh4Value
  1250  00DE  3008               	movlw	8
  1251  00DF  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1252  00E0  309C               	movlw	156
  1253  00E1  1903               	skipnz
  1254  00E2  0247               	subwf	?_getAdOriginaCh4Value,w
  1255  00E3  1803               	skipnc
  1256  00E4  28E7               	goto	l4210
  1257                           
  1258                           ;main.c: 366: ucChannel4Type = BETWEEN_2067_AND_2204;
  1259  00E5  3002               	movlw	2
  1260  00E6  28F4               	goto	L6
  1261  00E7                     l4210:	
  1262                           
  1263                           ;main.c: 367: else if(getAdOriginaCh4Value() < 2340)
  1264  00E7  118A  23FE  118A   	fcall	_getAdOriginaCh4Value
  1265  00EA  3009               	movlw	9
  1266  00EB  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1267  00EC  3024               	movlw	36
  1268  00ED  1903               	skipnz
  1269  00EE  0247               	subwf	?_getAdOriginaCh4Value,w
  1270  00EF  1803               	skipnc
  1271  00F0  28F3               	goto	l4214
  1272                           
  1273                           ;main.c: 368: ucChannel4Type = BETWEEN_2204_AND_2340;
  1274  00F1  3003               	movlw	3
  1275  00F2  28F4               	goto	L6
  1276  00F3                     l4214:	
  1277                           
  1278                           ;main.c: 369: else
  1279                           ;main.c: 370: ucChannel4Type = MORE_THAN_2340;
  1280  00F3  3004               	movlw	4
  1281  00F4                     L6:	
  1282  00F4  00D6               	movwf	main@ucChannel4Type
  1283  00F5                     l744:	
  1284                           
  1285                           ;main.c: 372: ucADC4_Step = ADC4_STEP_SECOND;
  1286  00F5  3002               	movlw	2
  1287  00F6  2A33               	goto	L8
  1288  00F7                     l759:	
  1289                           ;main.c: 387: {
  1290                           ;main.c: 388: case 0:
  1291                           
  1292                           ;main.c: 373: break;
  1293                           
  1294                           
  1295                           ;main.c: 389: {
  1296                           ;main.c: 390: PB0 = 1;
  1297  00F7  1406               	bsf	6,0
  1298  00F8                     l4216:	
  1299                           
  1300                           ;main.c: 391: ucLoaderStep++;
  1301  00F8  0AD7               	incf	main@ucLoaderStep,f
  1302                           
  1303                           ;main.c: 392: break;
  1304  00F9  2840               	goto	l4122
  1305  00FA                     l4218:	
  1306                           
  1307                           ;main.c: 396: {
  1308                           ;main.c: 397: if(ucTimerDelay >= 5)
  1309  00FA  3005               	movlw	5
  1310  00FB  025F               	subwf	main@ucTimerDelay,w
  1311  00FC  1C03               	skipc
  1312  00FD  2901               	goto	l4226
  1313                           
  1314                           ;main.c: 398: {
  1315                           ;main.c: 399: PA0 = 1;
  1316  00FE  1405               	bsf	5,0
  1317  00FF                     l4222:	
  1318                           
  1319                           ;main.c: 400: ucTimerDelay = 0;
  1320  00FF  01DF               	clrf	main@ucTimerDelay
  1321  0100  28F8               	goto	l4216
  1322  0101                     l4226:	
  1323                           
  1324                           ;main.c: 403: else
  1325                           ;main.c: 404: ucTimerDelay++;
  1326  0101  0ADF               	incf	main@ucTimerDelay,f
  1327  0102  2840               	goto	l4122
  1328  0103                     l4228:	
  1329                           
  1330                           ;main.c: 409: {
  1331                           ;main.c: 410: if(ucTimerDelay >= 5)
  1332  0103  3005               	movlw	5
  1333  0104  025F               	subwf	main@ucTimerDelay,w
  1334  0105  1C03               	skipc
  1335  0106  2901               	goto	l4226
  1336                           
  1337                           ;main.c: 411: {
  1338                           ;main.c: 412: PA1= 1;
  1339  0107  1485               	bsf	5,1
  1340  0108  28FF               	goto	l4222
  1341  0109                     l4238:	
  1342                           
  1343                           ;main.c: 423: {
  1344                           ;main.c: 424: if(ucTimerDelay >= 5)
  1345  0109  3005               	movlw	5
  1346  010A  025F               	subwf	main@ucTimerDelay,w
  1347  010B  1C03               	skipc
  1348  010C  2901               	goto	l4226
  1349                           
  1350                           ;main.c: 425: {
  1351                           ;main.c: 426: PA2= 1;
  1352  010D  1505               	bsf	5,2
  1353  010E  28FF               	goto	l4222
  1354  010F                     l4248:	
  1355                           
  1356                           ;main.c: 436: {
  1357                           ;main.c: 437: if(ucTimerDelay >= 5)
  1358  010F  3005               	movlw	5
  1359  0110  025F               	subwf	main@ucTimerDelay,w
  1360  0111  1C03               	skipc
  1361  0112  2901               	goto	l4226
  1362                           
  1363                           ;main.c: 438: {
  1364                           ;main.c: 439: PA3 = 1;
  1365  0113  1585               	bsf	5,3
  1366  0114  28FF               	goto	l4222
  1367  0115                     l4258:	
  1368                           
  1369                           ;main.c: 449: {
  1370                           ;main.c: 450: if(ucTimerDelay >= 5)
  1371  0115  3005               	movlw	5
  1372  0116  025F               	subwf	main@ucTimerDelay,w
  1373  0117  1C03               	skipc
  1374  0118  2901               	goto	l4226
  1375                           
  1376                           ;main.c: 451: {
  1377                           ;main.c: 452: PB0 = 0;
  1378  0119  1006               	bcf	6,0
  1379                           
  1380                           ;main.c: 453: PA0 = 0;
  1381  011A  1005               	bcf	5,0
  1382                           
  1383                           ;main.c: 454: PA1 = 0;
  1384  011B  1085               	bcf	5,1
  1385                           
  1386                           ;main.c: 455: PA2 = 0;
  1387  011C  1105               	bcf	5,2
  1388                           
  1389                           ;main.c: 456: PA3 = 0;
  1390  011D  1185               	bcf	5,3
  1391  011E  28FF               	goto	l4222
  1392  011F                     l4268:	
  1393                           
  1394                           ;main.c: 466: {
  1395                           ;main.c: 467: if(ucTimerDelay >= 2)
  1396  011F  3002               	movlw	2
  1397  0120  025F               	subwf	main@ucTimerDelay,w
  1398  0121  1C03               	skipc
  1399  0122  2901               	goto	l4226
  1400                           
  1401                           ;main.c: 468: {
  1402                           ;main.c: 469: ucTimerDelay = 0;
  1403  0123  01DF               	clrf	main@ucTimerDelay
  1404                           
  1405                           ;main.c: 471: ucLoaderStep = 0;
  1406  0124  01D7               	clrf	main@ucLoaderStep
  1407  0125                     l4272:	
  1408                           
  1409                           ;main.c: 472: ucADC4_Step = ADC4_STEP_THIRD;
  1410  0125  3003               	movlw	3
  1411  0126  2A33               	goto	L8
  1412  0127                     l4278:	
  1413                           ;main.c: 473: }
  1414                           
  1415  0127  0857               	movf	main@ucLoaderStep,w
  1416                           
  1417                           ; Switch size 1, requested type "space"
  1418                           ; Number of cases is 7, Range of values is 0 to 6
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; direct_byte           21     7 (fixed)
  1422                           ; simple_byte           22    12 (average)
  1423                           ; jumptable            260     6 (fixed)
  1424                           ; rangetable            11     6 (fixed)
  1425                           ; spacedrange           20     9 (fixed)
  1426                           ; locatedrange           7     3 (fixed)
  1427                           ;	Chosen strategy is direct_byte
  1428  0128  0084               	movwf	4
  1429  0129  3007               	movlw	7
  1430  012A  0204               	subwf	4,w
  1431  012B  1803               	skipnc
  1432  012C  2840               	goto	l4122
  1433  012D  3005               	movlw	high S4832
  1434  012E  008A               	movwf	10
  1435  012F  1003               	clrc
  1436  0130  0D04               	rlf	4,w
  1437  0131  3E51               	addlw	low S4832
  1438  0132  0082               	movwf	2
  1439  0133                     l787:	
  1440                           ;main.c: 492: {
  1441                           ;main.c: 493: case 0:
  1442                           
  1443                           
  1444                           ;main.c: 494: {
  1445                           ;main.c: 495: PB0 = 1;
  1446  0133  1406               	bsf	6,0
  1447  0134                     l4280:	
  1448                           
  1449                           ;main.c: 496: ucLoaderStep1++;
  1450  0134  0AD8               	incf	main@ucLoaderStep1,f
  1451                           
  1452                           ;main.c: 497: break;
  1453  0135  2840               	goto	l4122
  1454  0136                     l4282:	
  1455                           
  1456                           ;main.c: 501: {
  1457                           ;main.c: 502: if(ucTimerDelay1 >= 5)
  1458  0136  3005               	movlw	5
  1459  0137  0260               	subwf	main@ucTimerDelay1,w
  1460  0138  1C03               	skipc
  1461  0139  293D               	goto	l4290
  1462                           
  1463                           ;main.c: 503: {
  1464                           ;main.c: 504: PA0 = 1;
  1465  013A  1405               	bsf	5,0
  1466  013B                     l4286:	
  1467                           
  1468                           ;main.c: 505: ucTimerDelay1 = 0;
  1469  013B  01E0               	clrf	main@ucTimerDelay1
  1470  013C  2934               	goto	l4280
  1471  013D                     l4290:	
  1472                           
  1473                           ;main.c: 508: else
  1474                           ;main.c: 509: ucTimerDelay1++;
  1475  013D  0AE0               	incf	main@ucTimerDelay1,f
  1476  013E  2840               	goto	l4122
  1477  013F                     l4292:	
  1478                           
  1479                           ;main.c: 514: {
  1480                           ;main.c: 515: if(ucTimerDelay1 >= 5)
  1481  013F  3005               	movlw	5
  1482  0140  0260               	subwf	main@ucTimerDelay1,w
  1483  0141  1C03               	skipc
  1484  0142  293D               	goto	l4290
  1485                           
  1486                           ;main.c: 516: {
  1487                           ;main.c: 517: PA1= 1;
  1488  0143  1485               	bsf	5,1
  1489  0144  293B               	goto	l4286
  1490  0145                     l4302:	
  1491                           
  1492                           ;main.c: 527: {
  1493                           ;main.c: 528: if(ucTimerDelay1 >= 5)
  1494  0145  3005               	movlw	5
  1495  0146  0260               	subwf	main@ucTimerDelay1,w
  1496  0147  1C03               	skipc
  1497  0148  293D               	goto	l4290
  1498                           
  1499                           ;main.c: 529: {
  1500                           ;main.c: 530: PA2 = 1;
  1501  0149  1505               	bsf	5,2
  1502  014A  293B               	goto	l4286
  1503  014B                     l4312:	
  1504                           
  1505                           ;main.c: 540: {
  1506                           ;main.c: 541: if(ucTimerDelay1 >= 5)
  1507  014B  3005               	movlw	5
  1508  014C  0260               	subwf	main@ucTimerDelay1,w
  1509  014D  1C03               	skipc
  1510  014E  293D               	goto	l4290
  1511                           
  1512                           ;main.c: 542: {
  1513                           ;main.c: 543: PA3 = 1;
  1514  014F  1585               	bsf	5,3
  1515  0150  293B               	goto	l4286
  1516  0151                     l4322:	
  1517                           
  1518                           ;main.c: 553: {
  1519                           ;main.c: 554: if(ucTimerDelay1 >= 5)
  1520  0151  3005               	movlw	5
  1521  0152  0260               	subwf	main@ucTimerDelay1,w
  1522  0153  1C03               	skipc
  1523  0154  293D               	goto	l4290
  1524                           
  1525                           ;main.c: 555: {
  1526                           ;main.c: 556: PA0 = 0;
  1527  0155  1005               	bcf	5,0
  1528                           
  1529                           ;main.c: 557: PA1 = 0;
  1530  0156  1085               	bcf	5,1
  1531                           
  1532                           ;main.c: 558: PA2 = 0;
  1533  0157  1105               	bcf	5,2
  1534                           
  1535                           ;main.c: 559: PA3 = 0;
  1536  0158  1185               	bcf	5,3
  1537  0159  293B               	goto	l4286
  1538  015A                     l4332:	
  1539                           
  1540                           ;main.c: 569: {
  1541                           ;main.c: 570: if(ucTimerDelay1 >= 2)
  1542  015A  3002               	movlw	2
  1543  015B  0260               	subwf	main@ucTimerDelay1,w
  1544  015C  1C03               	skipc
  1545  015D  293D               	goto	l4290
  1546                           
  1547                           ;main.c: 571: {
  1548                           ;main.c: 572: ucTimerDelay1 = 0;
  1549  015E  01E0               	clrf	main@ucTimerDelay1
  1550                           
  1551                           ;main.c: 574: ucLoaderStep1 = 0;
  1552  015F  01D8               	clrf	main@ucLoaderStep1
  1553  0160  2925               	goto	l4272
  1554  0161                     l4342:	
  1555  0161  0858               	movf	main@ucLoaderStep1,w
  1556                           
  1557                           ; Switch size 1, requested type "space"
  1558                           ; Number of cases is 7, Range of values is 0 to 6
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; direct_byte           21     7 (fixed)
  1562                           ; simple_byte           22    12 (average)
  1563                           ; jumptable            260     6 (fixed)
  1564                           ; rangetable            11     6 (fixed)
  1565                           ; spacedrange           20     9 (fixed)
  1566                           ; locatedrange           7     3 (fixed)
  1567                           ;	Chosen strategy is direct_byte
  1568  0162  0084               	movwf	4
  1569  0163  3007               	movlw	7
  1570  0164  0204               	subwf	4,w
  1571  0165  1803               	skipnc
  1572  0166  2840               	goto	l4122
  1573  0167  3005               	movlw	high S4834
  1574  0168  008A               	movwf	10
  1575  0169  1003               	clrc
  1576  016A  0D04               	rlf	4,w
  1577  016B  3E5F               	addlw	low S4834
  1578  016C  0082               	movwf	2
  1579  016D                     l814:	
  1580                           ;main.c: 596: {
  1581                           ;main.c: 597: case 0:
  1582                           
  1583                           
  1584                           ;main.c: 598: {
  1585                           ;main.c: 599: PB0 = 1;
  1586  016D  1406               	bsf	6,0
  1587                           
  1588                           ;main.c: 600: PA0 = 1;
  1589  016E  1405               	bsf	5,0
  1590  016F                     l4344:	
  1591                           
  1592                           ;main.c: 601: ucLoaderStep2++;
  1593  016F  0AD9               	incf	main@ucLoaderStep2,f
  1594                           
  1595                           ;main.c: 602: break;
  1596  0170  2840               	goto	l4122
  1597  0171                     l4346:	
  1598                           
  1599                           ;main.c: 606: {
  1600                           ;main.c: 607: if(ucTimerDelay2 >= 5)
  1601  0171  3005               	movlw	5
  1602  0172  0261               	subwf	main@ucTimerDelay2,w
  1603  0173  1C03               	skipc
  1604  0174  2978               	goto	l4354
  1605                           
  1606                           ;main.c: 608: {
  1607                           ;main.c: 609: PA1 = 1;
  1608  0175  1485               	bsf	5,1
  1609  0176                     l4350:	
  1610                           
  1611                           ;main.c: 610: ucTimerDelay2 = 0;
  1612  0176  01E1               	clrf	main@ucTimerDelay2
  1613  0177  296F               	goto	l4344
  1614  0178                     l4354:	
  1615                           
  1616                           ;main.c: 613: else
  1617                           ;main.c: 614: ucTimerDelay2++;
  1618  0178  0AE1               	incf	main@ucTimerDelay2,f
  1619  0179  2840               	goto	l4122
  1620  017A                     l4356:	
  1621                           
  1622                           ;main.c: 619: {
  1623                           ;main.c: 620: if(ucTimerDelay2 >= 5)
  1624  017A  3005               	movlw	5
  1625  017B  0261               	subwf	main@ucTimerDelay2,w
  1626  017C  1C03               	skipc
  1627  017D  2978               	goto	l4354
  1628                           
  1629                           ;main.c: 621: {
  1630                           ;main.c: 622: PA2 = 1;
  1631  017E  1505               	bsf	5,2
  1632  017F  2976               	goto	l4350
  1633  0180                     l4366:	
  1634                           
  1635                           ;main.c: 632: {
  1636                           ;main.c: 633: if(ucTimerDelay2 >= 5)
  1637  0180  3005               	movlw	5
  1638  0181  0261               	subwf	main@ucTimerDelay2,w
  1639  0182  1C03               	skipc
  1640  0183  2978               	goto	l4354
  1641                           
  1642                           ;main.c: 634: {
  1643                           ;main.c: 635: PA3 = 1;
  1644  0184  1585               	bsf	5,3
  1645  0185  2976               	goto	l4350
  1646  0186                     l4376:	
  1647                           
  1648                           ;main.c: 645: {
  1649                           ;main.c: 646: if(ucTimerDelay2 >= 5)
  1650  0186  3005               	movlw	5
  1651  0187  0261               	subwf	main@ucTimerDelay2,w
  1652  0188  1C03               	skipc
  1653  0189  2978               	goto	l4354
  1654                           
  1655                           ;main.c: 647: {
  1656                           ;main.c: 649: PA1 = 0;
  1657  018A  1085               	bcf	5,1
  1658                           
  1659                           ;main.c: 650: PA2 = 0;
  1660  018B  1105               	bcf	5,2
  1661                           
  1662                           ;main.c: 651: PA3 = 0;
  1663  018C  1185               	bcf	5,3
  1664  018D  2976               	goto	l4350
  1665  018E                     l4386:	
  1666                           
  1667                           ;main.c: 661: {
  1668                           ;main.c: 662: if(ucTimerDelay2 >= 2)
  1669  018E  3002               	movlw	2
  1670  018F  0261               	subwf	main@ucTimerDelay2,w
  1671  0190  1C03               	skipc
  1672  0191  2978               	goto	l4354
  1673                           
  1674                           ;main.c: 663: {
  1675                           ;main.c: 664: ucTimerDelay2 = 0;
  1676  0192  01E1               	clrf	main@ucTimerDelay2
  1677                           
  1678                           ;main.c: 666: ucLoaderStep2 = 0;
  1679  0193  01D9               	clrf	main@ucLoaderStep2
  1680  0194  2925               	goto	l4272
  1681  0195                     l4396:	
  1682  0195  0859               	movf	main@ucLoaderStep2,w
  1683                           
  1684                           ; Switch size 1, requested type "space"
  1685                           ; Number of cases is 6, Range of values is 0 to 5
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; direct_byte           19     7 (fixed)
  1689                           ; simple_byte           19    10 (average)
  1690                           ; jumptable            260     6 (fixed)
  1691                           ; rangetable            10     6 (fixed)
  1692                           ; spacedrange           18     9 (fixed)
  1693                           ; locatedrange           6     3 (fixed)
  1694                           ;	Chosen strategy is direct_byte
  1695  0196  0084               	movwf	4
  1696  0197  3006               	movlw	6
  1697  0198  0204               	subwf	4,w
  1698  0199  1803               	skipnc
  1699  019A  2840               	goto	l4122
  1700  019B  3005               	movlw	high S4836
  1701  019C  008A               	movwf	10
  1702  019D  1003               	clrc
  1703  019E  0D04               	rlf	4,w
  1704  019F  3E6D               	addlw	low S4836
  1705  01A0  0082               	movwf	2
  1706  01A1                     l838:	
  1707                           ;main.c: 688: {
  1708                           ;main.c: 689: case 0:
  1709                           
  1710                           
  1711                           ;main.c: 690: {
  1712                           ;main.c: 691: PB0 = 1;
  1713  01A1  1406               	bsf	6,0
  1714                           
  1715                           ;main.c: 692: PA0 = 1;
  1716  01A2  1405               	bsf	5,0
  1717                           
  1718                           ;main.c: 693: PA1 = 1;
  1719  01A3  1485               	bsf	5,1
  1720  01A4                     l4398:	
  1721                           
  1722                           ;main.c: 694: ucLoaderStep3++;
  1723  01A4  0ADA               	incf	main@ucLoaderStep3,f
  1724                           
  1725                           ;main.c: 695: break;
  1726  01A5  2840               	goto	l4122
  1727  01A6                     l4400:	
  1728                           
  1729                           ;main.c: 699: {
  1730                           ;main.c: 700: if(ucTimerDelay3 >= 5)
  1731  01A6  3005               	movlw	5
  1732  01A7  0262               	subwf	main@ucTimerDelay3,w
  1733  01A8  1C03               	skipc
  1734  01A9  29AD               	goto	l4408
  1735                           
  1736                           ;main.c: 701: {
  1737                           ;main.c: 702: PA2 = 1;
  1738  01AA  1505               	bsf	5,2
  1739  01AB                     l4404:	
  1740                           
  1741                           ;main.c: 703: ucTimerDelay3 = 0;
  1742  01AB  01E2               	clrf	main@ucTimerDelay3
  1743  01AC  29A4               	goto	l4398
  1744  01AD                     l4408:	
  1745                           
  1746                           ;main.c: 706: else
  1747                           ;main.c: 707: ucTimerDelay3++;
  1748  01AD  0AE2               	incf	main@ucTimerDelay3,f
  1749  01AE  2840               	goto	l4122
  1750  01AF                     l4410:	
  1751                           
  1752                           ;main.c: 712: {
  1753                           ;main.c: 713: if(ucTimerDelay3 >= 5)
  1754  01AF  3005               	movlw	5
  1755  01B0  0262               	subwf	main@ucTimerDelay3,w
  1756  01B1  1C03               	skipc
  1757  01B2  29AD               	goto	l4408
  1758                           
  1759                           ;main.c: 714: {
  1760                           ;main.c: 715: PA3 = 1;
  1761  01B3  1585               	bsf	5,3
  1762  01B4  29AB               	goto	l4404
  1763  01B5                     l4420:	
  1764                           
  1765                           ;main.c: 726: {
  1766                           ;main.c: 727: if(ucTimerDelay3 >= 5)
  1767  01B5  3005               	movlw	5
  1768  01B6  0262               	subwf	main@ucTimerDelay3,w
  1769  01B7  1C03               	skipc
  1770  01B8  29AD               	goto	l4408
  1771                           
  1772                           ;main.c: 728: {
  1773                           ;main.c: 730: PA2 = 0;
  1774  01B9  1105               	bcf	5,2
  1775                           
  1776                           ;main.c: 731: PA3 = 0;
  1777  01BA  1185               	bcf	5,3
  1778  01BB  29AB               	goto	l4404
  1779  01BC                     l4430:	
  1780                           
  1781                           ;main.c: 741: {
  1782                           ;main.c: 742: if(ucTimerDelay3 >= 2)
  1783  01BC  3002               	movlw	2
  1784  01BD  0262               	subwf	main@ucTimerDelay3,w
  1785  01BE  1C03               	skipc
  1786  01BF  29AD               	goto	l4408
  1787                           
  1788                           ;main.c: 743: {
  1789                           ;main.c: 744: ucTimerDelay3 = 0;
  1790  01C0  01E2               	clrf	main@ucTimerDelay3
  1791                           
  1792                           ;main.c: 746: ucLoaderStep3 = 0;
  1793  01C1  01DA               	clrf	main@ucLoaderStep3
  1794  01C2  2925               	goto	l4272
  1795  01C3                     l4440:	
  1796  01C3  085A               	movf	main@ucLoaderStep3,w
  1797                           
  1798                           ; Switch size 1, requested type "space"
  1799                           ; Number of cases is 5, Range of values is 0 to 4
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte           16     9 (average)
  1803                           ; direct_byte           17     7 (fixed)
  1804                           ; jumptable            260     6 (fixed)
  1805                           ; rangetable             9     6 (fixed)
  1806                           ; spacedrange           16     9 (fixed)
  1807                           ; locatedrange           5     3 (fixed)
  1808                           ;	Chosen strategy is simple_byte
  1809  01C4  3A00               	xorlw	0	; case 0
  1810  01C5  1903               	skipnz
  1811  01C6  29A1               	goto	l838
  1812  01C7  3A01               	xorlw	1	; case 1
  1813  01C8  1903               	skipnz
  1814  01C9  29A6               	goto	l4400
  1815  01CA  3A03               	xorlw	3	; case 2
  1816  01CB  1903               	skipnz
  1817  01CC  29AF               	goto	l4410
  1818  01CD  3A01               	xorlw	1	; case 3
  1819  01CE  1903               	skipnz
  1820  01CF  29B5               	goto	l4420
  1821  01D0  3A07               	xorlw	7	; case 4
  1822  01D1  1903               	skipnz
  1823  01D2  29BC               	goto	l4430
  1824  01D3  2862               	goto	l706
  1825  01D4                     l859:	
  1826                           ;main.c: 768: {
  1827                           ;main.c: 769: case 0:
  1828                           
  1829                           
  1830                           ;main.c: 770: {
  1831                           ;main.c: 771: PB0 = 1;
  1832  01D4  1406               	bsf	6,0
  1833                           
  1834                           ;main.c: 772: PA0 = 1;
  1835  01D5  1405               	bsf	5,0
  1836                           
  1837                           ;main.c: 773: PA1 = 1;
  1838  01D6  1485               	bsf	5,1
  1839                           
  1840                           ;main.c: 774: PA2 = 1;
  1841  01D7  1505               	bsf	5,2
  1842  01D8                     l4442:	
  1843                           
  1844                           ;main.c: 775: ucLoaderStep4++;
  1845  01D8  0ADB               	incf	main@ucLoaderStep4,f
  1846                           
  1847                           ;main.c: 776: break;
  1848  01D9  2840               	goto	l4122
  1849  01DA                     l4444:	
  1850                           
  1851                           ;main.c: 780: {
  1852                           ;main.c: 781: if(ucTimerDelay4 >= 5)
  1853  01DA  3005               	movlw	5
  1854  01DB  0263               	subwf	main@ucTimerDelay4,w
  1855  01DC  1C03               	skipc
  1856  01DD  29E1               	goto	l4452
  1857                           
  1858                           ;main.c: 782: {
  1859                           ;main.c: 783: PA3 = 1;
  1860  01DE  1585               	bsf	5,3
  1861  01DF                     l4448:	
  1862                           
  1863                           ;main.c: 784: ucTimerDelay4 = 0;
  1864  01DF  01E3               	clrf	main@ucTimerDelay4
  1865  01E0  29D8               	goto	l4442
  1866  01E1                     l4452:	
  1867                           
  1868                           ;main.c: 787: else
  1869                           ;main.c: 788: ucTimerDelay4++;
  1870  01E1  0AE3               	incf	main@ucTimerDelay4,f
  1871  01E2  2840               	goto	l4122
  1872  01E3                     l4454:	
  1873                           
  1874                           ;main.c: 793: {
  1875                           ;main.c: 794: if(ucTimerDelay4 >= 5)
  1876  01E3  3005               	movlw	5
  1877  01E4  0263               	subwf	main@ucTimerDelay4,w
  1878  01E5  1C03               	skipc
  1879  01E6  29E1               	goto	l4452
  1880                           
  1881                           ;main.c: 795: {
  1882                           ;main.c: 796: PA3 = 0;
  1883  01E7  1185               	bcf	5,3
  1884  01E8  29DF               	goto	l4448
  1885  01E9                     l4464:	
  1886                           
  1887                           ;main.c: 806: {
  1888                           ;main.c: 807: if(ucTimerDelay4 >= 2)
  1889  01E9  3002               	movlw	2
  1890  01EA  0263               	subwf	main@ucTimerDelay4,w
  1891  01EB  1C03               	skipc
  1892  01EC  29E1               	goto	l4452
  1893                           
  1894                           ;main.c: 808: {
  1895                           ;main.c: 809: ucTimerDelay4 = 0;
  1896  01ED  01E3               	clrf	main@ucTimerDelay4
  1897                           
  1898                           ;main.c: 811: ucLoaderStep4 = 0;
  1899  01EE  01DB               	clrf	main@ucLoaderStep4
  1900  01EF  2925               	goto	l4272
  1901  01F0                     l4474:	
  1902  01F0  085B               	movf	main@ucLoaderStep4,w
  1903                           
  1904                           ; Switch size 1, requested type "space"
  1905                           ; Number of cases is 4, Range of values is 0 to 3
  1906                           ; switch strategies available:
  1907                           ; Name         Instructions Cycles
  1908                           ; simple_byte           13     7 (average)
  1909                           ; direct_byte           15     7 (fixed)
  1910                           ; jumptable            260     6 (fixed)
  1911                           ; rangetable             8     6 (fixed)
  1912                           ; spacedrange           14     9 (fixed)
  1913                           ; locatedrange           4     3 (fixed)
  1914                           ;	Chosen strategy is simple_byte
  1915  01F1  3A00               	xorlw	0	; case 0
  1916  01F2  1903               	skipnz
  1917  01F3  29D4               	goto	l859
  1918  01F4  3A01               	xorlw	1	; case 1
  1919  01F5  1903               	skipnz
  1920  01F6  29DA               	goto	l4444
  1921  01F7  3A03               	xorlw	3	; case 2
  1922  01F8  1903               	skipnz
  1923  01F9  29E3               	goto	l4454
  1924  01FA  3A01               	xorlw	1	; case 3
  1925  01FB  1903               	skipnz
  1926  01FC  29E9               	goto	l4464
  1927  01FD  2862               	goto	l706
  1928  01FE                     l4478:	
  1929  01FE  0856               	movf	main@ucChannel4Type,w
  1930                           
  1931                           ; Switch size 1, requested type "space"
  1932                           ; Number of cases is 5, Range of values is 0 to 4
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte           16     9 (average)
  1936                           ; direct_byte           17     7 (fixed)
  1937                           ; jumptable            260     6 (fixed)
  1938                           ; rangetable             9     6 (fixed)
  1939                           ; spacedrange           16     9 (fixed)
  1940                           ; locatedrange           5     3 (fixed)
  1941                           ;	Chosen strategy is simple_byte
  1942  01FF  3A00               	xorlw	0	; case 0
  1943  0200  1903               	skipnz
  1944  0201  2927               	goto	l4278
  1945  0202  3A01               	xorlw	1	; case 1
  1946  0203  1903               	skipnz
  1947  0204  2961               	goto	l4342
  1948  0205  3A03               	xorlw	3	; case 2
  1949  0206  1903               	skipnz
  1950  0207  2995               	goto	l4396
  1951  0208  3A01               	xorlw	1	; case 3
  1952  0209  1903               	skipnz
  1953  020A  29C3               	goto	l4440
  1954  020B  3A07               	xorlw	7	; case 4
  1955  020C  1903               	skipnz
  1956  020D  29F0               	goto	l4474
  1957  020E  2862               	goto	l706
  1958  020F                     l4480:	
  1959                           
  1960                           ;main.c: 835: {
  1961                           ;main.c: 836: static unsigned char ucTimerDelayP5s = 0;
  1962                           ;main.c: 838: if(isFinishedTwentySecondsTimer())
  1963  020F  118A  25B8  118A   	fcall	_isFinishedTwentySecondsTimer
  1964  0212  3A00               	xorlw	0
  1965  0213  1903               	skipnz
  1966  0214  28BE               	goto	l4196
  1967                           
  1968                           ;main.c: 839: {
  1969                           ;main.c: 840: PBOD6 =0;
  1970  0215  1703               	bsf	3,6	;RP1=1, select bank3
  1971  0216  1308               	bcf	8,6
  1972                           
  1973                           ;main.c: 841: PB6 = 1;
  1974  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0218  3005               	movlw	5
  1976  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1977  021A  1706               	bsf	6,6
  1978                           
  1979                           ;main.c: 842: PA6 = 0;
  1980  021B  1305               	bcf	5,6
  1981                           
  1982                           ;main.c: 849: if(ucTimerDelayP5s < 5)
  1983  021C  0264               	subwf	main@ucTimerDelayP5s,w
  1984  021D  1803               	skipnc
  1985  021E  2A21               	goto	l4488
  1986                           
  1987                           ;main.c: 850: {
  1988                           ;main.c: 851: ucTimerDelayP5s++;
  1989  021F  0AE4               	incf	main@ucTimerDelayP5s,f
  1990                           
  1991                           ;main.c: 852: }
  1992  0220  2840               	goto	l4122
  1993  0221                     l4488:	
  1994                           
  1995                           ;main.c: 853: else
  1996                           ;main.c: 854: {
  1997                           ;main.c: 856: ucTimerDelayP5s = 0;
  1998  0221  01E4               	clrf	main@ucTimerDelayP5s
  1999                           
  2000                           ;main.c: 858: if((getAdOriginalCh14Value() > 2800))
  2001  0222  118A  240C  118A   	fcall	_getAdOriginalCh14Value
  2002  0225  300A               	movlw	10
  2003  0226  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2004  0227  30F1               	movlw	241
  2005  0228  1903               	skipnz
  2006  0229  0247               	subwf	?_getAdOriginalCh14Value,w
  2007  022A  1C03               	skipc
  2008  022B  2A2E               	goto	l4494
  2009                           
  2010                           ;main.c: 859: DACR0=0x0F;
  2011  022C  300F               	movlw	15
  2012  022D  2A2F               	goto	L9
  2013  022E                     l4494:	
  2014                           
  2015                           ;main.c: 860: else
  2016                           ;main.c: 861: DACR0=0x07;
  2017  022E  3007               	movlw	7
  2018  022F                     L9:	
  2019  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0230  0088               	movwf	8	;volatile
  2021                           
  2022                           ;main.c: 863: ucADC4_Step = ADC4_STEP_FOURTH;
  2023  0231  3004               	movlw	4
  2024  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2025  0233                     L8:	
  2026  0233  00D5               	movwf	main@ucADC4_Step
  2027  0234  2840               	goto	l4122
  2028  0235                     l4496:	
  2029                           
  2030                           ;main.c: 873: {
  2031                           ;main.c: 874: static unsigned char ucTimer1s = 0;
  2032                           ;main.c: 875: if(ucTimer1s < 5)
  2033  0235  3005               	movlw	5
  2034  0236  025C               	subwf	main@ucTimer1s,w
  2035  0237  1803               	skipnc
  2036  0238  2A3B               	goto	l4500
  2037                           
  2038                           ;main.c: 876: {
  2039                           ;main.c: 877: ucTimer1s++;
  2040  0239  0ADC               	incf	main@ucTimer1s,f
  2041                           
  2042                           ;main.c: 878: }
  2043  023A  2840               	goto	l4122
  2044  023B                     l4500:	
  2045                           
  2046                           ;main.c: 879: else
  2047                           ;main.c: 880: {
  2048                           ;main.c: 881: ucTimer1s = 0;
  2049  023B  01DC               	clrf	main@ucTimer1s
  2050                           
  2051                           ;main.c: 882: PB6 = 1;
  2052  023C  1706               	bsf	6,6
  2053                           
  2054                           ;main.c: 883: PBOD6 = 1;
  2055  023D  1683               	bsf	3,5	;RP0=1, select bank3
  2056  023E  1703               	bsf	3,6	;RP1=1, select bank3
  2057  023F  1708               	bsf	8,6
  2058                           
  2059                           ;main.c: 884: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2060  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0242  01D4               	clrf	main@enumMainLoopStep
  2063  0243  0AD4               	incf	main@enumMainLoopStep,f
  2064                           
  2065                           ;main.c: 885: ucADC4_Step = ADC4_STEP_INIT;
  2066  0244  01D5               	clrf	main@ucADC4_Step
  2067  0245  2840               	goto	l4122
  2068  0246                     l4510:	
  2069  0246  0855               	movf	main@ucADC4_Step,w
  2070                           
  2071                           ; Switch size 1, requested type "space"
  2072                           ; Number of cases is 5, Range of values is 0 to 4
  2073                           ; switch strategies available:
  2074                           ; Name         Instructions Cycles
  2075                           ; simple_byte           16     9 (average)
  2076                           ; direct_byte           17     7 (fixed)
  2077                           ; jumptable            260     6 (fixed)
  2078                           ; rangetable             9     6 (fixed)
  2079                           ; spacedrange           16     9 (fixed)
  2080                           ; locatedrange           5     3 (fixed)
  2081                           ;	Chosen strategy is simple_byte
  2082  0247  3A00               	xorlw	0	; case 0
  2083  0248  1903               	skipnz
  2084  0249  28BB               	goto	l4194
  2085  024A  3A01               	xorlw	1	; case 1
  2086  024B  1903               	skipnz
  2087  024C  28C2               	goto	l4198
  2088  024D  3A03               	xorlw	3	; case 2
  2089  024E  1903               	skipnz
  2090  024F  29FE               	goto	l4478
  2091  0250  3A01               	xorlw	1	; case 3
  2092  0251  1903               	skipnz
  2093  0252  2A0F               	goto	l4480
  2094  0253  3A07               	xorlw	7	; case 4
  2095  0254  1903               	skipnz
  2096  0255  2A35               	goto	l4496
  2097  0256  2862               	goto	l706
  2098  0257                     l891:	
  2099                           ;main.c: 911: {
  2100                           ;main.c: 912: case HOUR_3_BRANCH_STEP_FIRST:
  2101                           
  2102                           
  2103                           ;main.c: 913: {
  2104                           ;main.c: 914: PA7 = 1;
  2105  0257  1785               	bsf	5,7
  2106                           
  2107                           ;main.c: 915: PAOD7 = 1;
  2108  0258  1683               	bsf	3,5	;RP0=1, select bank3
  2109  0259  303C               	movlw	60
  2110  025A  1703               	bsf	3,6	;RP1=1, select bank3
  2111  025B  1787               	bsf	7,7
  2112                           
  2113                           ;main.c: 916: startThreeHoursTimer(60);
  2114  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2115  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2116  025E  00A0               	movwf	?_startThreeHoursTimer
  2117  025F  01A1               	clrf	?_startThreeHoursTimer+1
  2118  0260  118A  258E  118A   	fcall	_startThreeHoursTimer
  2119                           
  2120                           ;main.c: 918: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2121  0263  01D2               	clrf	main@enumBranchStep
  2122  0264  0AD2               	incf	main@enumBranchStep,f
  2123                           
  2124                           ;main.c: 919: break;
  2125  0265  2840               	goto	l4122
  2126  0266                     l4516:	
  2127                           
  2128                           ;main.c: 923: {
  2129                           ;main.c: 924: static unsigned char ucTimer20s = 0;
  2130                           ;main.c: 926: if(ucTimer20s < 200)
  2131  0266  30C8               	movlw	200
  2132  0267  025D               	subwf	main@ucTimer20s,w
  2133  0268  1803               	skipnc
  2134  0269  2A71               	goto	l4530
  2135                           
  2136                           ;main.c: 927: {
  2137                           ;main.c: 928: ucTimer20s++;
  2138  026A  0ADD               	incf	main@ucTimer20s,f
  2139                           
  2140                           ;main.c: 929: PB0 = 1;
  2141  026B  1406               	bsf	6,0
  2142                           
  2143                           ;main.c: 930: PA0 = 1;
  2144  026C  1405               	bsf	5,0
  2145                           
  2146                           ;main.c: 931: PA1 = 1;
  2147  026D  1485               	bsf	5,1
  2148                           
  2149                           ;main.c: 932: PA2 = 1;
  2150  026E  1505               	bsf	5,2
  2151                           
  2152                           ;main.c: 933: PA3 = 1;
  2153  026F  1585               	bsf	5,3
  2154                           
  2155                           ;main.c: 934: }
  2156  0270  2840               	goto	l4122
  2157  0271                     l4530:	
  2158  0271  3002               	movlw	2
  2159                           
  2160                           ;main.c: 935: else
  2161                           ;main.c: 936: {
  2162                           ;main.c: 938: ucTimer20s = 0;
  2163  0272  01DD               	clrf	main@ucTimer20s
  2164                           
  2165                           ;main.c: 941: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2166  0273  00D2               	movwf	main@enumBranchStep
  2167  0274  2840               	goto	l4122
  2168  0275                     l898:	
  2169                           ;main.c: 944: }
  2170                           ;main.c: 946: case HOUR_3_BRANCH_STEP_THIRD:
  2171                           
  2172                           
  2173                           ;main.c: 947: {
  2174                           ;main.c: 948: PA6 = 0;
  2175  0275  1305               	bcf	5,6
  2176                           
  2177                           ;main.c: 950: if(isFinishedThreeHoursTimer())
  2178  0276  118A  25BE  118A   	fcall	_isFinishedThreeHoursTimer
  2179  0279  3A00               	xorlw	0
  2180  027A  1903               	skipnz
  2181  027B  2A7E               	goto	l4540
  2182                           
  2183                           ;main.c: 951: {
  2184                           ;main.c: 952: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2185  027C  01D2               	clrf	main@enumBranchStep
  2186  027D  28B8               	goto	l4192
  2187  027E                     l4540:	
  2188                           
  2189                           ;main.c: 955: else
  2190                           ;main.c: 956: {
  2191                           ;main.c: 957: static unsigned char ucTimerX1P5s = 0;
  2192                           ;main.c: 959: if(getAdOriginalCh1Value() < 130)
  2193  027E  118A  2405  118A   	fcall	_getAdOriginalCh1Value
  2194  0281  3000               	movlw	0
  2195  0282  0248               	subwf	?_getAdOriginalCh1Value+1,w
  2196  0283  3082               	movlw	130
  2197  0284  1903               	skipnz
  2198  0285  0247               	subwf	?_getAdOriginalCh1Value,w
  2199  0286  1803               	skipnc
  2200  0287  2A8A               	goto	l4544
  2201                           
  2202                           ;main.c: 960: {
  2203                           ;main.c: 961: ucTimerX1P5s = 0;
  2204  0288  01E8               	clrf	main@ucTimerX1P5s
  2205                           
  2206                           ;main.c: 962: }
  2207  0289  2A8B               	goto	l4546
  2208  028A                     l4544:	
  2209                           
  2210                           ;main.c: 963: else
  2211                           ;main.c: 964: {
  2212                           ;main.c: 965: ucTimerX1P5s++;
  2213  028A  0AE8               	incf	main@ucTimerX1P5s,f
  2214  028B                     l4546:	
  2215                           
  2216                           ;main.c: 966: }
  2217                           ;main.c: 968: if(ucTimerX1P5s >= 1)
  2218  028B  0868               	movf	main@ucTimerX1P5s,w
  2219  028C  1903               	btfsc	3,2
  2220  028D  2A9A               	goto	l4560
  2221                           
  2222                           ;main.c: 969: {
  2223                           ;main.c: 970: ucTimerX1P5s = 0;
  2224  028E  01E8               	clrf	main@ucTimerX1P5s
  2225                           
  2226                           ;main.c: 971: PAOD7 = 0;
  2227  028F  1683               	bsf	3,5	;RP0=1, select bank3
  2228  0290  1703               	bsf	3,6	;RP1=1, select bank3
  2229  0291  1387               	bcf	7,7
  2230                           
  2231                           ;main.c: 972: PA7 = 0;
  2232  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0294  1385               	bcf	5,7
  2235                           
  2236                           ;main.c: 973: clearThreeHoursTimer();
  2237  0295  118A  2525  118A   	fcall	_clearThreeHoursTimer
  2238                           
  2239                           ;main.c: 975: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2240  0298  01D2               	clrf	main@enumBranchStep
  2241  0299  2873               	goto	l4150
  2242  029A                     l4560:	
  2243                           
  2244                           ;main.c: 979: else
  2245                           ;main.c: 980: {
  2246                           ;main.c: 981: static unsigned char ucTimerX2P5s = 0;
  2247                           ;main.c: 983: if(getAdOriginalCh14Value() >= 1950)
  2248  029A  118A  240C  118A   	fcall	_getAdOriginalCh14Value
  2249  029D  3007               	movlw	7
  2250  029E  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2251  029F  309E               	movlw	158
  2252  02A0  1903               	skipnz
  2253  02A1  0247               	subwf	?_getAdOriginalCh14Value,w
  2254  02A2  1C03               	skipc
  2255  02A3  2AA6               	goto	l4564
  2256                           
  2257                           ;main.c: 984: {
  2258                           ;main.c: 985: ucTimerX2P5s++;
  2259  02A4  0AE9               	incf	main@ucTimerX2P5s,f
  2260                           
  2261                           ;main.c: 986: }
  2262  02A5  2AA7               	goto	l4566
  2263  02A6                     l4564:	
  2264                           
  2265                           ;main.c: 987: else
  2266                           ;main.c: 988: {
  2267                           ;main.c: 989: ucTimerX2P5s = 0;
  2268  02A6  01E9               	clrf	main@ucTimerX2P5s
  2269  02A7                     l4566:	
  2270                           
  2271                           ;main.c: 990: }
  2272                           ;main.c: 992: if(ucTimerX2P5s >= 1)
  2273  02A7  0869               	movf	main@ucTimerX2P5s,w
  2274  02A8  1903               	btfsc	3,2
  2275  02A9  2AAC               	goto	l4570
  2276                           
  2277                           ;main.c: 993: {
  2278                           ;main.c: 994: ucTimerX2P5s = 0;
  2279  02AA  01E9               	clrf	main@ucTimerX2P5s
  2280                           
  2281                           ;main.c: 995: }
  2282  02AB  2840               	goto	l4122
  2283  02AC                     l4570:	
  2284                           
  2285                           ;main.c: 996: else
  2286                           ;main.c: 997: {
  2287                           ;main.c: 998: clearPinPortAndTimer();
  2288  02AC  118A  2511  118A   	fcall	_clearPinPortAndTimer
  2289  02AF  285F               	goto	l4140
  2290  02B0                     l4576:	
  2291  02B0  0852               	movf	main@enumBranchStep,w
  2292                           
  2293                           ; Switch size 1, requested type "space"
  2294                           ; Number of cases is 3, Range of values is 0 to 2
  2295                           ; switch strategies available:
  2296                           ; Name         Instructions Cycles
  2297                           ; simple_byte           10     6 (average)
  2298                           ; direct_byte           13     7 (fixed)
  2299                           ; jumptable            260     6 (fixed)
  2300                           ; rangetable             7     6 (fixed)
  2301                           ; spacedrange           12     9 (fixed)
  2302                           ; locatedrange           3     3 (fixed)
  2303                           ;	Chosen strategy is simple_byte
  2304  02B1  3A00               	xorlw	0	; case 0
  2305  02B2  1903               	skipnz
  2306  02B3  2A57               	goto	l891
  2307  02B4  3A01               	xorlw	1	; case 1
  2308  02B5  1903               	skipnz
  2309  02B6  2A66               	goto	l4516
  2310  02B7  3A03               	xorlw	3	; case 2
  2311  02B8  1903               	skipnz
  2312  02B9  2A75               	goto	l898
  2313  02BA  2862               	goto	l706
  2314  02BB                     l918:	
  2315                           ;main.c: 1028: {
  2316                           ;main.c: 1029: case INTERNAL_FIRST_STEP:
  2317                           
  2318                           
  2319                           ;main.c: 1030: {
  2320                           ;main.c: 1031: PB0 = 0;
  2321  02BB  1006               	bcf	6,0
  2322                           
  2323                           ;main.c: 1032: PB1 = 0;
  2324  02BC  1086               	bcf	6,1
  2325                           
  2326                           ;main.c: 1033: PA0 = 0;
  2327  02BD  1005               	bcf	5,0
  2328                           
  2329                           ;main.c: 1034: PA1 = 0;
  2330  02BE  1085               	bcf	5,1
  2331                           
  2332                           ;main.c: 1035: PA2 = 0;
  2333  02BF  1105               	bcf	5,2
  2334                           
  2335                           ;main.c: 1036: PA3 = 0;
  2336  02C0  1185               	bcf	5,3
  2337                           
  2338                           ;main.c: 1037: PBOD6 = 0;
  2339  02C1  1683               	bsf	3,5	;RP0=1, select bank3
  2340  02C2  1703               	bsf	3,6	;RP1=1, select bank3
  2341  02C3  1308               	bcf	8,6
  2342                           
  2343                           ;main.c: 1038: PB6 = 1;
  2344  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2345  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2346  02C6  1706               	bsf	6,6
  2347                           
  2348                           ;main.c: 1039: PA6 =0;
  2349  02C7  1305               	bcf	5,6
  2350                           
  2351                           ;main.c: 1041: enumInteralStep = INTERNAL_SECOND_STEP;
  2352  02C8  01D3               	clrf	main@enumInteralStep
  2353  02C9  0AD3               	incf	main@enumInteralStep,f
  2354                           
  2355                           ;main.c: 1042: break;
  2356  02CA  2840               	goto	l4122
  2357  02CB                     l4578:	
  2358                           
  2359                           ;main.c: 1046: {
  2360                           ;main.c: 1047: static unsigned char ucTimer1s = 0;
  2361                           ;main.c: 1049: if(getAdOriginalCh14Value() <= 1000)
  2362  02CB  118A  240C  118A   	fcall	_getAdOriginalCh14Value
  2363  02CE  3003               	movlw	3
  2364  02CF  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2365  02D0  30E9               	movlw	233
  2366  02D1  1903               	skipnz
  2367  02D2  0247               	subwf	?_getAdOriginalCh14Value,w
  2368  02D3  1803               	skipnc
  2369  02D4  2AD7               	goto	l4582
  2370                           
  2371                           ;main.c: 1050: {
  2372                           ;main.c: 1051: ucTimer1s++;
  2373  02D5  0AD1               	incf	main@cTimer1s_811,f
  2374                           
  2375                           ;main.c: 1052: }
  2376  02D6  2AD8               	goto	l4584
  2377  02D7                     l4582:	
  2378                           
  2379                           ;main.c: 1053: else
  2380                           ;main.c: 1054: ucTimer1s = 0;
  2381  02D7  01D1               	clrf	main@cTimer1s_811
  2382  02D8                     l4584:	
  2383                           
  2384                           ;main.c: 1056: if(ucTimer1s >= 10)
  2385  02D8  300A               	movlw	10
  2386  02D9  0251               	subwf	main@cTimer1s_811,w
  2387  02DA  1C03               	skipc
  2388  02DB  2840               	goto	l4122
  2389                           
  2390                           ;main.c: 1057: {
  2391                           ;main.c: 1058: enumInteralStep = INTERNAL_THIRD_STEP;
  2392  02DC  3002               	movlw	2
  2393  02DD  00D3               	movwf	main@enumInteralStep
  2394                           
  2395                           ;main.c: 1059: ucTimer1s = 0;
  2396  02DE  01D1               	clrf	main@cTimer1s_811
  2397  02DF  2840               	goto	l4122
  2398  02E0                     l4590:	
  2399                           
  2400                           ;main.c: 1065: {
  2401                           ;main.c: 1066: static unsigned char ucTimerP3s = 0;
  2402                           ;main.c: 1068: if(getAdOriginalCh14Value() >= 1950)
  2403  02E0  118A  240C  118A   	fcall	_getAdOriginalCh14Value
  2404  02E3  3007               	movlw	7
  2405  02E4  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2406  02E5  309E               	movlw	158
  2407  02E6  1903               	skipnz
  2408  02E7  0247               	subwf	?_getAdOriginalCh14Value,w
  2409  02E8  1C03               	skipc
  2410  02E9  2AEC               	goto	l4594
  2411                           
  2412                           ;main.c: 1069: {
  2413                           ;main.c: 1070: ucTimerP3s++;
  2414  02EA  0AE5               	incf	main@ucTimerP3s,f
  2415                           
  2416                           ;main.c: 1071: }
  2417  02EB  2AED               	goto	l4596
  2418  02EC                     l4594:	
  2419                           
  2420                           ;main.c: 1072: else
  2421                           ;main.c: 1073: ucTimerP3s = 0;
  2422  02EC  01E5               	clrf	main@ucTimerP3s
  2423  02ED                     l4596:	
  2424                           
  2425                           ;main.c: 1075: if(ucTimerP3s >= 3)
  2426  02ED  3003               	movlw	3
  2427  02EE  0265               	subwf	main@ucTimerP3s,w
  2428  02EF  1C03               	skipc
  2429  02F0  2840               	goto	l4122
  2430                           
  2431                           ;main.c: 1076: {
  2432                           ;main.c: 1077: enumInteralStep = INTERNAL_FIRST_STEP;
  2433  02F1  01D3               	clrf	main@enumInteralStep
  2434                           
  2435                           ;main.c: 1078: ucTimerP3s = 0;
  2436  02F2  01E5               	clrf	main@ucTimerP3s
  2437                           
  2438                           ;main.c: 1079: clearAllTimer();
  2439  02F3  118A  251D  118A   	fcall	_clearAllTimer
  2440                           
  2441                           ;main.c: 1081: DACR0=0x0F;
  2442  02F6  300F               	movlw	15
  2443  02F7  0088               	movwf	8	;volatile
  2444                           
  2445                           ;main.c: 1082: initPin();
  2446  02F8  118A  252C  118A   	fcall	_initPin
  2447                           
  2448                           ;main.c: 1085: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2449  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2450  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2451  02FD  01D4               	clrf	main@enumMainLoopStep
  2452  02FE  2840               	goto	l4122
  2453  02FF                     l4610:	
  2454  02FF  0853               	movf	main@enumInteralStep,w
  2455                           
  2456                           ; Switch size 1, requested type "space"
  2457                           ; Number of cases is 3, Range of values is 0 to 2
  2458                           ; switch strategies available:
  2459                           ; Name         Instructions Cycles
  2460                           ; simple_byte           10     6 (average)
  2461                           ; direct_byte           13     7 (fixed)
  2462                           ; jumptable            260     6 (fixed)
  2463                           ; rangetable             7     6 (fixed)
  2464                           ; spacedrange           12     9 (fixed)
  2465                           ; locatedrange           3     3 (fixed)
  2466                           ;	Chosen strategy is simple_byte
  2467  0300  3A00               	xorlw	0	; case 0
  2468  0301  1903               	skipnz
  2469  0302  2ABB               	goto	l918
  2470  0303  3A01               	xorlw	1	; case 1
  2471  0304  1903               	skipnz
  2472  0305  2ACB               	goto	l4578
  2473  0306  3A03               	xorlw	3	; case 2
  2474  0307  1903               	skipnz
  2475  0308  2AE0               	goto	l4590
  2476  0309  2862               	goto	l706
  2477  030A                     l4614:	
  2478  030A  0854               	movf	main@enumMainLoopStep,w
  2479                           
  2480                           ; Switch size 1, requested type "space"
  2481                           ; Number of cases is 8, Range of values is 0 to 9
  2482                           ; switch strategies available:
  2483                           ; Name         Instructions Cycles
  2484                           ; simple_byte           25    13 (average)
  2485                           ; direct_byte           27     7 (fixed)
  2486                           ; jumptable            260     6 (fixed)
  2487                           ; rangetable            14     6 (fixed)
  2488                           ; spacedrange           26     9 (fixed)
  2489                           ; locatedrange          10     3 (fixed)
  2490                           ;	Chosen strategy is simple_byte
  2491  030B  3A00               	xorlw	0	; case 0
  2492  030C  1903               	skipnz
  2493  030D  284E               	goto	l4130
  2494  030E  3A01               	xorlw	1	; case 1
  2495  030F  1903               	skipnz
  2496  0310  2863               	goto	l4142
  2497  0311  3A03               	xorlw	3	; case 2
  2498  0312  1903               	skipnz
  2499  0313  2879               	goto	l715
  2500  0314  3A01               	xorlw	1	; case 3
  2501  0315  1903               	skipnz
  2502  0316  2883               	goto	l4162
  2503  0317  3A07               	xorlw	7	; case 4
  2504  0318  1903               	skipnz
  2505  0319  28A9               	goto	l4186
  2506  031A  3A01               	xorlw	1	; case 5
  2507  031B  1903               	skipnz
  2508  031C  28B2               	goto	l4190
  2509  031D  3A0D               	xorlw	13	; case 8
  2510  031E  1903               	skipnz
  2511  031F  2AB0               	goto	l4576
  2512  0320  3A01               	xorlw	1	; case 9
  2513  0321  1903               	skipnz
  2514  0322  2AFF               	goto	l4610
  2515  0323  2862               	goto	l706
  2516  0324  118A  2811         	ljmp	start
  2517  0326                     __end_of_main:	
  2518                           
  2519                           	psect	swtext1
  2520  0551                     __pswtext1:	
  2521  0551                     S4832:	
  2522  0551  118A  28F7         	ljmp	l759
  2523  0553  118A  28FA         	ljmp	l4218
  2524  0555  118A  2903         	ljmp	l4228
  2525  0557  118A  2909         	ljmp	l4238
  2526  0559  118A  290F         	ljmp	l4248
  2527  055B  118A  2915         	ljmp	l4258
  2528  055D  118A  291F         	ljmp	l4268
  2529                           
  2530                           	psect	swtext2
  2531  055F                     __pswtext2:	
  2532  055F                     S4834:	
  2533  055F  118A  2933         	ljmp	l787
  2534  0561  118A  2936         	ljmp	l4282
  2535  0563  118A  293F         	ljmp	l4292
  2536  0565  118A  2945         	ljmp	l4302
  2537  0567  118A  294B         	ljmp	l4312
  2538  0569  118A  2951         	ljmp	l4322
  2539  056B  118A  295A         	ljmp	l4332
  2540                           
  2541                           	psect	swtext3
  2542  056D                     __pswtext3:	
  2543  056D                     S4836:	
  2544  056D  118A  296D         	ljmp	l814
  2545  056F  118A  2971         	ljmp	l4346
  2546  0571  118A  297A         	ljmp	l4356
  2547  0573  118A  2980         	ljmp	l4366
  2548  0575  118A  2986         	ljmp	l4376
  2549  0577  118A  298E         	ljmp	l4386
  2550                           
  2551                           	psect	text704
  2552  0511                     __ptext704:	
  2553 ;; =============== function _main ends ============
  2554                           
  2555                           
  2556 ;; *************** function _clearPinPortAndTimer *****************
  2557 ;; Defined at:
  2558 ;;		line 92 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 160/0
  2569 ;;		On exit  : 160/20
  2570 ;;		Unchanged: FFE9F/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    4
  2579 ;; This function calls:
  2580 ;;		_clearAllTimer
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585  0511                     _clearPinPortAndTimer:	
  2586                           
  2587                           ;main.c: 93: PB0 = 0;
  2588                           
  2589                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  2590  0511  1006               	bcf	6,0
  2591                           
  2592                           ;main.c: 94: PA0 = 0;
  2593  0512  1005               	bcf	5,0
  2594                           
  2595                           ;main.c: 95: PA1 = 0;
  2596  0513  1085               	bcf	5,1
  2597                           
  2598                           ;main.c: 96: PA2 = 0;
  2599  0514  1105               	bcf	5,2
  2600                           
  2601                           ;main.c: 97: PA3 = 0;
  2602  0515  1185               	bcf	5,3
  2603                           
  2604                           ;main.c: 98: PAOD7 = 0;
  2605  0516  1683               	bsf	3,5	;RP0=1, select bank3
  2606  0517  1703               	bsf	3,6	;RP1=1, select bank3
  2607  0518  1387               	bcf	7,7
  2608                           
  2609                           ;main.c: 99: PA7 = 0;
  2610  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2611  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2612  051B  1385               	bcf	5,7
  2613                           
  2614                           ;main.c: 100: clearAllTimer();
  2615  051C  2D1D               	ljmp	l4066
  2616  051D                     __end_of_clearPinPortAndTimer:	
  2617  051D                     __ptext709:	
  2618 ;; =============== function _process_AD_Converter_Value ends ============
  2619                           
  2620                           
  2621 ;; *************** function _clearAllTimer *****************
  2622 ;; Defined at:
  2623 ;;		line 83 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 160/0
  2634 ;;		On exit  : 160/20
  2635 ;;		Unchanged: FFE9F/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0
  2640 ;;      Totals:         0       0       0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    3
  2644 ;; This function calls:
  2645 ;;		_clearTwelveHoursTimer
  2646 ;;		_clearThreeHoursTimer
  2647 ;;		_clearTwentySecondsTimer
  2648 ;; This function is called by:
  2649 ;;		_clearPinPortAndTimer
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653  051D                     _clearAllTimer:	
  2654  051D                     l4066:	
  2655                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  2656                           
  2657                           
  2658                           ;main.c: 84: clearTwelveHoursTimer();
  2659  051D  2522  118A         	fcall	_clearTwelveHoursTimer
  2660                           
  2661                           ;main.c: 85: clearThreeHoursTimer();
  2662  051F  2525  118A         	fcall	_clearThreeHoursTimer
  2663                           
  2664                           ;main.c: 86: clearTwentySecondsTimer();
  2665  0521  2D28               	ljmp	l3796
  2666  0522                     __end_of_clearAllTimer:	
  2667  0522                     __ptext733:	
  2668 ;; =============== function _clearThreeHoursTimer ends ============
  2669                           
  2670                           
  2671 ;; *************** function _clearTwelveHoursTimer *****************
  2672 ;; Defined at:
  2673 ;;		line 365 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		status,2
  2682 ;; Tracked objects:
  2683 ;;		On entry : 160/0
  2684 ;;		On exit  : 160/0
  2685 ;;		Unchanged: FFE9F/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0
  2690 ;;      Totals:         0       0       0       0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    2
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_clearAllTimer
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700  0522                     _clearTwelveHoursTimer:	
  2701                           
  2702                           ;common.c: 366: uiBigTimer = 0;
  2703                           
  2704                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2705  0522  01C9               	clrf	_uiBigTimer
  2706  0523  01CA               	clrf	_uiBigTimer+1
  2707  0524  0008               	return
  2708  0525                     __end_of_clearTwelveHoursTimer:	
  2709  0525                     __ptext732:	
  2710 ;; =============== function _clearTwentySecondsTimer ends ============
  2711                           
  2712                           
  2713 ;; *************** function _clearThreeHoursTimer *****************
  2714 ;; Defined at:
  2715 ;;		line 371 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;		None
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;		None               void
  2722 ;; Registers used:
  2723 ;;		status,2
  2724 ;; Tracked objects:
  2725 ;;		On entry : 160/0
  2726 ;;		On exit  : 160/0
  2727 ;;		Unchanged: FFE9F/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       0       0       0       0
  2730 ;;      Locals:         0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0
  2732 ;;      Totals:         0       0       0       0       0
  2733 ;;Total ram usage:        0 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    2
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_clearAllTimer
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743  0525                     _clearThreeHoursTimer:	
  2744                           
  2745                           ;common.c: 372: uiSmallTimer = 0;
  2746                           
  2747                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2748  0525  01CB               	clrf	_uiSmallTimer
  2749  0526  01CC               	clrf	_uiSmallTimer+1
  2750  0527  0008               	return
  2751  0528                     __end_of_clearThreeHoursTimer:	
  2752  0528                     __ptext731:	
  2753 ;; =============== function _initPin ends ============
  2754                           
  2755                           
  2756 ;; *************** function _clearTwentySecondsTimer *****************
  2757 ;; Defined at:
  2758 ;;		line 376 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;		None               void
  2765 ;; Registers used:
  2766 ;;		status,2
  2767 ;; Tracked objects:
  2768 ;;		On entry : 160/0
  2769 ;;		On exit  : 160/20
  2770 ;;		Unchanged: FFE9F/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0
  2775 ;;      Totals:         0       0       0       0       0
  2776 ;;Total ram usage:        0 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    2
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_clearAllTimer
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785  0528                     _clearTwentySecondsTimer:	
  2786  0528                     l3796:	
  2787                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  2788                           
  2789                           
  2790                           ;common.c: 377: uiTwentySecondsTimer = 0;
  2791  0528  1683               	bsf	3,5	;RP0=1, select bank1
  2792  0529  01A0               	clrf	_uiTwentySecondsTimer^(0+128)
  2793  052A  01A1               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  2794  052B  0008               	return
  2795  052C                     __end_of_clearTwentySecondsTimer:	
  2796                           
  2797                           	psect	text705
  2798  03FE                     __ptext705:	
  2799 ;; =============== function _clearPinPortAndTimer ends ============
  2800                           
  2801                           
  2802 ;; *************** function _getAdOriginaCh4Value *****************
  2803 ;; Defined at:
  2804 ;;		line 229 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  2   39[BANK0 ] unsigned int 
  2811 ;; Registers used:
  2812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 60/0
  2815 ;;		On exit  : 160/0
  2816 ;;		Unchanged: FFE00/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       2       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         0       2       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    3
  2825 ;; This function calls:
  2826 ;;		_Filter
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831  03FE                     _getAdOriginaCh4Value:	
  2832                           
  2833                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  2834                           
  2835                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2836  03FE  30D2               	movlw	_uiSampleChannelFourth& (0+255)
  2837  03FF  2413               	fcall	_Filter
  2838  0400  0821               	movf	?_Filter+1,w
  2839  0401  00C8               	movwf	?_getAdOriginaCh4Value+1
  2840  0402  0820               	movf	?_Filter,w
  2841  0403  00C7               	movwf	?_getAdOriginaCh4Value
  2842  0404  0008               	return
  2843  0405                     __end_of_getAdOriginaCh4Value:	
  2844  0405                     __ptext706:	
  2845 ;; =============== function _getAdOriginaCh4Value ends ============
  2846                           
  2847                           
  2848 ;; *************** function _getAdOriginalCh1Value *****************
  2849 ;; Defined at:
  2850 ;;		line 217 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2   39[BANK0 ] unsigned int 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 60/0
  2861 ;;		On exit  : 160/0
  2862 ;;		Unchanged: FFE00/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       2       0       0       0
  2865 ;;      Locals:         0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         0       2       0       0       0
  2868 ;;Total ram usage:        2 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    3
  2871 ;; This function calls:
  2872 ;;		_Filter
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877  0405                     _getAdOriginalCh1Value:	
  2878                           
  2879                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  2880                           
  2881                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2882  0405  30A2               	movlw	_uiSampleChannelFirst& (0+255)
  2883  0406  2413               	fcall	_Filter
  2884  0407  0821               	movf	?_Filter+1,w
  2885  0408  00C8               	movwf	?_getAdOriginalCh1Value+1
  2886  0409  0820               	movf	?_Filter,w
  2887  040A  00C7               	movwf	?_getAdOriginalCh1Value
  2888  040B  0008               	return
  2889  040C                     __end_of_getAdOriginalCh1Value:	
  2890  040C                     __ptext707:	
  2891 ;; =============== function _getAdOriginalCh1Value ends ============
  2892                           
  2893                           
  2894 ;; *************** function _getAdOriginalCh14Value *****************
  2895 ;; Defined at:
  2896 ;;		line 240 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2   39[BANK0 ] unsigned int 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 60/0
  2907 ;;		On exit  : 160/0
  2908 ;;		Unchanged: FFE00/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2910 ;;      Params:         0       2       0       0       0
  2911 ;;      Locals:         0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0
  2913 ;;      Totals:         0       2       0       0       0
  2914 ;;Total ram usage:        2 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    3
  2917 ;; This function calls:
  2918 ;;		_Filter
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923  040C                     _getAdOriginalCh14Value:	
  2924                           
  2925                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  2926                           
  2927                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2928  040C  30BA               	movlw	_uiSampleChannelFourteenth& (0+255)
  2929  040D  2413               	fcall	_Filter
  2930  040E  0821               	movf	?_Filter+1,w
  2931  040F  00C8               	movwf	?_getAdOriginalCh14Value+1
  2932  0410  0820               	movf	?_Filter,w
  2933  0411  00C7               	movwf	?_getAdOriginalCh14Value
  2934  0412  0008               	return
  2935  0413                     __end_of_getAdOriginalCh14Value:	
  2936  0413                     __ptext713:	
  2937 ;; =============== function _getAD_ConvertFlag ends ============
  2938                           
  2939                           
  2940 ;; *************** function _Filter *****************
  2941 ;; Defined at:
  2942 ;;		line 51 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  tmpValue        1    wreg     PTR int 
  2945 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  tmpValue        1   34[BANK0 ] PTR int 
  2948 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  2949 ;;  cir             2   35[BANK0 ] int 
  2950 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  2951 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  2952 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  2953 ;;  i               1   38[BANK0 ] unsigned char 
  2954 ;;  j               1   37[BANK0 ] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  2    0[BANK0 ] unsigned int 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2959 ;; Tracked objects:
  2960 ;;		On entry : 60/0
  2961 ;;		On exit  : 160/0
  2962 ;;		Unchanged: FFE00/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       2       0       0       0
  2965 ;;      Locals:         0      33       0       0       0
  2966 ;;      Temps:          0       4       0       0       0
  2967 ;;      Totals:         0      39       0       0       0
  2968 ;;Total ram usage:       39 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    2
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_getAdOriginalCh1Value
  2975 ;;		_getAdOriginaCh4Value
  2976 ;;		_getAdOriginalCh14Value
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979  0413                     _Filter:	
  2980                           
  2981                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  2982                           ;Filter@tmpValue stored from wreg
  2983  0413  00C2               	movwf	Filter@tmpValue
  2984  0414  01C5               	clrf	Filter@j
  2985                           
  2986                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  2987  0415  01BE               	clrf	Filter@filter_temp
  2988  0416  01BF               	clrf	Filter@filter_temp+1
  2989  0417  01C0               	clrf	Filter@filter_sum
  2990  0418  01C1               	clrf	Filter@filter_sum+1
  2991                           
  2992                           ;common.c: 57: unsigned int filter_buf[12];
  2993                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  2994  0419  01C3               	clrf	Filter@cir
  2995  041A  01C4               	clrf	Filter@cir+1
  2996  041B                     l3906:	
  2997                           
  2998                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  2999  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3000  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3001  041D  0842               	movf	Filter@tmpValue,w
  3002  041E  24A1  118A         	fcall	PL3	;call to abstracted procedure
  3003  0420  1003               	clrc
  3004  0421  0D43               	rlf	Filter@cir,w
  3005  0422  24A9  118A         	fcall	PL4	;call to abstracted procedure
  3006  0424  0AC2               	incf	Filter@tmpValue,f
  3007  0425  0AC2               	incf	Filter@tmpValue,f
  3008  0426  0AC3               	incf	Filter@cir,f
  3009  0427  1903               	skipnz
  3010  0428  0AC4               	incf	Filter@cir+1,f
  3011  0429  0844               	movf	Filter@cir+1,w
  3012  042A  3A80               	xorlw	128
  3013  042B  00FF               	movwf	127
  3014  042C  3080               	movlw	128
  3015  042D  027F               	subwf	127,w
  3016  042E  1D03               	skipz
  3017  042F  2C32               	goto	u965
  3018  0430  300C               	movlw	12
  3019  0431  0243               	subwf	Filter@cir,w
  3020  0432                     u965:	
  3021  0432  1C03               	skipc
  3022  0433  2C1B               	goto	l3906
  3023                           
  3024                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3025  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0435  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0436  01C5               	clrf	Filter@j
  3028  0437                     l3920:	
  3029                           
  3030                           ;common.c: 64: {
  3031                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3032  0437  01C6               	clrf	Filter@i
  3033  0438                     l3928:	
  3034  0438  01A3               	clrf	??_Filter+1
  3035  0439  0845               	movf	Filter@j,w
  3036  043A  3C0B               	sublw	11
  3037  043B  00A2               	movwf	??_Filter
  3038  043C  1C03               	skipc
  3039  043D  03A3               	decf	??_Filter+1,f
  3040  043E  0823               	movf	??_Filter+1,w
  3041  043F  3A80               	xorlw	128
  3042  0440  3C80               	sublw	128
  3043  0441  1D03               	skipz
  3044  0442  2C45               	goto	u985
  3045  0443  0822               	movf	??_Filter,w
  3046  0444  0246               	subwf	Filter@i,w
  3047  0445                     u985:	
  3048  0445  1803               	btfsc	3,0
  3049  0446  2C7A               	goto	l3930
  3050                           
  3051                           ;common.c: 66: {
  3052                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3053  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0449  1003               	clrc
  3056  044A  0D46               	rlf	Filter@i,w
  3057  044B  3E26               	addlw	Filter@filter_buf& (0+255)
  3058  044C  24A1  118A         	fcall	PL3	;call to abstracted procedure
  3059  044E  24B1  118A         	fcall	PL6	;call to abstracted procedure
  3060  0450  0800               	movf	0,w
  3061  0451  00A4               	movwf	??_Filter+2
  3062  0452  0A84               	incf	4,f
  3063  0453  0800               	movf	0,w
  3064  0454  00A5               	movwf	??_Filter+3
  3065  0455  0823               	movf	??_Filter+1,w
  3066  0456  0225               	subwf	??_Filter+3,w
  3067  0457  1D03               	skipz
  3068  0458  2C5B               	goto	u975
  3069  0459  0822               	movf	??_Filter,w
  3070  045A  0224               	subwf	??_Filter+2,w
  3071  045B                     u975:	
  3072  045B  1803               	skipnc
  3073  045C  2C78               	goto	l3926
  3074                           
  3075                           ;common.c: 68: {
  3076                           ;common.c: 70: filter_temp = filter_buf[i];
  3077  045D  1003               	clrc
  3078  045E  0D46               	rlf	Filter@i,w
  3079  045F  3E26               	addlw	Filter@filter_buf& (0+255)
  3080  0460  0084               	movwf	4
  3081  0461  0800               	movf	0,w
  3082  0462  00BE               	movwf	Filter@filter_temp
  3083  0463  0A84               	incf	4,f
  3084  0464  0800               	movf	0,w
  3085  0465  00BF               	movwf	Filter@filter_temp+1
  3086                           
  3087                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3088  0466  24B1  118A         	fcall	PL6	;call to abstracted procedure
  3089  0468  0800               	movf	0,w
  3090  0469  00A2               	movwf	??_Filter
  3091  046A  0A84               	incf	4,f
  3092  046B  0800               	movf	0,w
  3093  046C  00A3               	movwf	??_Filter+1
  3094  046D  1003               	clrc
  3095  046E  0D46               	rlf	Filter@i,w
  3096  046F  24A9  118A         	fcall	PL4	;call to abstracted procedure
  3097                           
  3098                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3099  0471  24B1  118A         	fcall	PL6	;call to abstracted procedure
  3100  0473  083E               	movf	Filter@filter_temp,w
  3101  0474  0080               	movwf	0
  3102  0475  0A84               	incf	4,f
  3103  0476  083F               	movf	Filter@filter_temp+1,w
  3104  0477  0080               	movwf	0
  3105  0478                     l3926:	
  3106  0478  0AC6               	incf	Filter@i,f
  3107  0479  2C38               	goto	l3928
  3108  047A                     l3930:	
  3109  047A  1283               	bcf	3,5	;RP0=0, select bank0
  3110  047B  300B               	movlw	11
  3111  047C  1303               	bcf	3,6	;RP1=0, select bank0
  3112  047D  0AC5               	incf	Filter@j,f
  3113  047E  0245               	subwf	Filter@j,w
  3114  047F  1C03               	skipc
  3115  0480  2C37               	goto	l3920
  3116                           
  3117                           ;common.c: 75: }
  3118                           ;common.c: 76: }
  3119                           ;common.c: 77: }
  3120                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3121  0481  3002               	movlw	2
  3122  0482  00C6               	movwf	Filter@i
  3123                           
  3124                           ;common.c: 80: {
  3125                           ;common.c: 81: filter_sum += filter_buf[i];
  3126  0483  1003               	clrc
  3127  0484                     L11:	
  3128  0484  0D46               	rlf	Filter@i,w
  3129  0485  3E26               	addlw	Filter@filter_buf& (0+255)
  3130  0486  24A1  118A         	fcall	PL3	;call to abstracted procedure
  3131  0488  0822               	movf	??_Filter,w
  3132  0489  07C0               	addwf	Filter@filter_sum,f
  3133  048A  1803               	skipnc
  3134  048B  0AC1               	incf	Filter@filter_sum+1,f
  3135  048C  0823               	movf	??_Filter+1,w
  3136  048D  07C1               	addwf	Filter@filter_sum+1,f
  3137  048E  300A               	movlw	10
  3138  048F  0AC6               	incf	Filter@i,f
  3139  0490  0246               	subwf	Filter@i,w
  3140  0491  1C03               	skipc
  3141  0492  2C84               	goto	L11
  3142                           
  3143                           ;common.c: 82: }
  3144                           ;common.c: 84: return (filter_sum >> 3);
  3145  0493  0841               	movf	Filter@filter_sum+1,w
  3146  0494  00A1               	movwf	?_Filter+1
  3147  0495  0840               	movf	Filter@filter_sum,w
  3148  0496  00A0               	movwf	?_Filter
  3149  0497  1003               	clrc
  3150  0498  0CA1               	rrf	?_Filter+1,f
  3151  0499  0CA0               	rrf	?_Filter,f
  3152  049A  1003               	clrc
  3153  049B  0CA1               	rrf	?_Filter+1,f
  3154  049C  0CA0               	rrf	?_Filter,f
  3155  049D  1003               	clrc
  3156  049E  0CA1               	rrf	?_Filter+1,f
  3157  049F  0CA0               	rrf	?_Filter,f
  3158  04A0  0008               	return
  3159  04A1                     __end_of_Filter:	
  3160  04A1                     PL3:	
  3161  04A1  0084               	movwf	4
  3162  04A2  1383               	bcf	3,7	;select IRP bank0
  3163  04A3  0800               	movf	0,w
  3164  04A4  00A2               	movwf	??_Filter
  3165  04A5  0A84               	incf	4,f
  3166  04A6  0800               	movf	0,w
  3167  04A7  00A3               	movwf	??_Filter+1
  3168  04A8  0008               	return
  3169  04A9                     PL4:	
  3170  04A9  3E26               	addlw	Filter@filter_buf& (0+255)
  3171  04AA  0084               	movwf	4
  3172  04AB  0822               	movf	??_Filter,w
  3173  04AC  0080               	movwf	0
  3174  04AD  0A84               	incf	4,f
  3175  04AE  0823               	movf	??_Filter+1,w
  3176  04AF  0080               	movwf	0
  3177  04B0  0008               	return
  3178  04B1                     PL6:	
  3179  04B1  1003               	clrc
  3180  04B2  0D46               	rlf	Filter@i,w
  3181  04B3  3E02               	addlw	2
  3182  04B4  3E26               	addlw	Filter@filter_buf& (0+255)
  3183  04B5  0084               	movwf	4
  3184  04B6  0008               	return
  3185                           
  3186                           	psect	text708
  3187  04B7                     __ptext708:	
  3188 ;; =============== function _getAdOriginalCh14Value ends ============
  3189                           
  3190                           
  3191 ;; *************** function _process_AD_Converter_Value *****************
  3192 ;; Defined at:
  3193 ;;		line 251 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 60/0
  3205 ;;		Unchanged: FFF9F/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       0       0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		_getAD_ConvertFlag
  3216 ;;		_setAD_ConvertFlag
  3217 ;;		_AD_Sample
  3218 ;;		_adc_test_init
  3219 ;;		_adc_start
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224  04B7                     _process_AD_Converter_Value:	
  3225                           
  3226                           ;common.c: 252: if(getAD_ConvertFlag())
  3227                           
  3228                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3229  04B7  24D5  118A         	fcall	_getAD_ConvertFlag
  3230  04B9  3A00               	xorlw	0
  3231  04BA  1903               	skipnz
  3232  04BB  0008               	return
  3233                           
  3234                           ;common.c: 253: {
  3235                           ;common.c: 254: setAD_ConvertFlag(0);
  3236  04BC  3000               	movlw	0
  3237  04BD  24D9  118A         	fcall	_setAD_ConvertFlag
  3238                           
  3239                           ;common.c: 255: AD_Sample();
  3240  04BF  24DC  118A         	fcall	_AD_Sample
  3241                           
  3242                           ;common.c: 256: if(4 == sampleChannelSelect)
  3243  04C1  086E               	movf	_sampleChannelSelect,w
  3244  04C2  3A04               	xorlw	4
  3245  04C3  1D03               	skipz
  3246  04C4  2CC9               	goto	l4076
  3247                           
  3248                           ;common.c: 257: adc_test_init(4,3);
  3249  04C5  3003               	movlw	3
  3250  04C6  00A0               	movwf	?_adc_test_init
  3251  04C7  3004               	movlw	4
  3252  04C8  2CD2               	goto	L10
  3253  04C9                     l4076:	
  3254                           
  3255                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3256  04C9  0B6E               	decfsz	_sampleChannelSelect,w
  3257  04CA  2CCF               	goto	l4080
  3258                           
  3259                           ;common.c: 259: adc_test_init(1,3);
  3260  04CB  3003               	movlw	3
  3261  04CC  00A0               	movwf	?_adc_test_init
  3262  04CD  3001               	movlw	1
  3263  04CE  2CD2               	goto	L10
  3264  04CF                     l4080:	
  3265                           
  3266                           ;common.c: 260: else
  3267                           ;common.c: 261: adc_test_init(14,3);
  3268  04CF  3003               	movlw	3
  3269  04D0  00A0               	movwf	?_adc_test_init
  3270  04D1  300E               	movlw	14
  3271  04D2                     L10:	
  3272  04D2  24F9  118A         	fcall	_adc_test_init
  3273                           
  3274                           ;common.c: 263: adc_start();
  3275  04D4  2D0E               	ljmp	l3838
  3276  04D5                     __end_of_process_AD_Converter_Value:	
  3277  04D5                     __ptext712:	
  3278 ;; =============== function _setAD_ConvertFlag ends ============
  3279                           
  3280                           
  3281 ;; *************** function _getAD_ConvertFlag *****************
  3282 ;; Defined at:
  3283 ;;		line 200 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      unsigned char 
  3290 ;; Registers used:
  3291 ;;		wreg
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 60/0
  3295 ;;		Unchanged: FFF9F/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    2
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_process_AD_Converter_Value
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310  04D5                     _getAD_ConvertFlag:	
  3311                           
  3312                           ;common.c: 201: return adc_convert_flag;
  3313                           
  3314                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3315  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  3316  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  3317  04D7  084E               	movf	_adc_convert_flag,w
  3318  04D8  0008               	return
  3319  04D9                     __end_of_getAD_ConvertFlag:	
  3320  04D9                     __ptext711:	
  3321 ;; =============== function _AD_Sample ends ============
  3322                           
  3323                           
  3324 ;; *************** function _setAD_ConvertFlag *****************
  3325 ;; Defined at:
  3326 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  flag            1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  flag            1    0[BANK0 ] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg
  3335 ;; Tracked objects:
  3336 ;;		On entry : 60/0
  3337 ;;		On exit  : 60/0
  3338 ;;		Unchanged: FFF9F/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3340 ;;      Params:         0       0       0       0       0
  3341 ;;      Locals:         0       1       0       0       0
  3342 ;;      Temps:          0       0       0       0       0
  3343 ;;      Totals:         0       1       0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    2
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_process_AD_Converter_Value
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353  04D9                     _setAD_ConvertFlag:	
  3354                           
  3355                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3356                           ;setAD_ConvertFlag@flag stored from wreg
  3357  04D9  00A0               	movwf	setAD_ConvertFlag@flag
  3358                           
  3359                           ;common.c: 207: adc_convert_flag = flag;
  3360  04DA  00CE               	movwf	_adc_convert_flag
  3361  04DB  0008               	return
  3362  04DC                     __end_of_setAD_ConvertFlag:	
  3363  04DC                     __ptext710:	
  3364 ;; =============== function _clearAllTimer ends ============
  3365                           
  3366                           
  3367 ;; *************** function _AD_Sample *****************
  3368 ;; Defined at:
  3369 ;;		line 277 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;		None               void
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0
  3378 ;; Tracked objects:
  3379 ;;		On entry : 60/0
  3380 ;;		On exit  : 60/0
  3381 ;;		Unchanged: FFF9F/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3383 ;;      Params:         0       0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0
  3386 ;;      Totals:         0       0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    2
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_process_AD_Converter_Value
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396  04DC                     _AD_Sample:	
  3397                           
  3398                           ;common.c: 278: if(sampleTimes < 12)
  3399                           
  3400                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  3401  04DC  300C               	movlw	12
  3402  04DD  024F               	subwf	_sampleTimes,w
  3403  04DE  1803               	skipnc
  3404  04DF  0008               	return
  3405  04E0  300C               	movlw	12
  3406                           
  3407                           ;common.c: 279: {
  3408                           ;common.c: 300: sampleTimes++;
  3409  04E1  0ACF               	incf	_sampleTimes,f
  3410                           
  3411                           ;common.c: 302: if(sampleTimes >= 12)
  3412  04E2  024F               	subwf	_sampleTimes,w
  3413  04E3  1C03               	skipc
  3414  04E4  0008               	return
  3415                           
  3416                           ;common.c: 303: {
  3417                           ;common.c: 304: sampleTimes = 0;
  3418  04E5  01CF               	clrf	_sampleTimes
  3419                           
  3420                           ;common.c: 306: if(sampleChannelSelect == 14)
  3421  04E6  086E               	movf	_sampleChannelSelect,w
  3422  04E7  3A0E               	xorlw	14
  3423  04E8  1D03               	skipz
  3424  04E9  2CED               	goto	l4016
  3425                           
  3426                           ;common.c: 307: {
  3427                           ;common.c: 310: sampleChannelSelect = 1;
  3428  04EA  01EE               	clrf	_sampleChannelSelect
  3429  04EB  0AEE               	incf	_sampleChannelSelect,f
  3430                           
  3431                           ;common.c: 311: }
  3432  04EC  0008               	return
  3433  04ED                     l4016:	
  3434                           
  3435                           ;common.c: 312: else if(sampleChannelSelect == 4)
  3436  04ED  086E               	movf	_sampleChannelSelect,w
  3437  04EE  3A04               	xorlw	4
  3438  04EF  1D03               	skipz
  3439  04F0  2CF4               	goto	l4020
  3440  04F1                     l4018:	
  3441                           
  3442                           ;common.c: 313: {
  3443                           ;common.c: 315: sampleChannelSelect = 14;
  3444  04F1  300E               	movlw	14
  3445  04F2  00EE               	movwf	_sampleChannelSelect
  3446                           
  3447                           ;common.c: 316: }
  3448  04F3  0008               	return
  3449  04F4                     l4020:	
  3450                           
  3451                           ;common.c: 317: else if(sampleChannelSelect == 1)
  3452  04F4  0B6E               	decfsz	_sampleChannelSelect,w
  3453  04F5  2CF1               	goto	l4018
  3454                           
  3455                           ;common.c: 318: {
  3456                           ;common.c: 320: sampleChannelSelect = 4;
  3457  04F6  3004               	movlw	4
  3458  04F7  00EE               	movwf	_sampleChannelSelect
  3459                           
  3460                           ;common.c: 321: }
  3461  04F8  0008               	return
  3462  04F9                     __end_of_AD_Sample:	
  3463  04F9                     __ptext726:	
  3464 ;; =============== function _dac_init ends ============
  3465                           
  3466                           
  3467 ;; *************** function _adc_test_init *****************
  3468 ;; Defined at:
  3469 ;;		line 85 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  channel         1    wreg     unsigned char 
  3472 ;;  ref             1    0[BANK0 ] unsigned char 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  channel         1    2[BANK0 ] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 60/0
  3481 ;;		On exit  : 60/20
  3482 ;;		Unchanged: FFF9F/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       1       0       0       0
  3485 ;;      Locals:         0       1       0       0       0
  3486 ;;      Temps:          0       1       0       0       0
  3487 ;;      Totals:         0       3       0       0       0
  3488 ;;Total ram usage:        3 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    2
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;;		_process_AD_Converter_Value
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498  04F9                     _adc_test_init:	
  3499                           
  3500                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3501                           ;adc_test_init@channel stored from wreg
  3502  04F9  00A2               	movwf	adc_test_init@channel
  3503                           
  3504                           ;periph.c: 86: ADCON0 = 0x00;
  3505  04FA  019F               	clrf	31	;volatile
  3506                           
  3507                           ;periph.c: 87: ADCON0|=channel<<2;
  3508  04FB  00A1               	movwf	??_adc_test_init
  3509  04FC  1003               	clrc
  3510  04FD  0DA1               	rlf	??_adc_test_init,f
  3511  04FE  1003               	clrc
  3512  04FF  0D21               	rlf	??_adc_test_init,w
  3513  0500  049F               	iorwf	31,f	;volatile
  3514                           
  3515                           ;periph.c: 88: ADCON1|=ref<<6;
  3516  0501  0820               	movf	adc_test_init@ref,w
  3517  0502  00A1               	movwf	??_adc_test_init
  3518  0503  0CA1               	rrf	??_adc_test_init,f
  3519  0504  0CA1               	rrf	??_adc_test_init,f
  3520  0505  0C21               	rrf	??_adc_test_init,w
  3521  0506  39C0               	andlw	192
  3522  0507  1683               	bsf	3,5	;RP0=1, select bank1
  3523  0508  049F               	iorwf	31,f	;volatile
  3524                           
  3525                           ;periph.c: 89: ADON=1;
  3526  0509  1283               	bcf	3,5	;RP0=0, select bank0
  3527  050A  141F               	bsf	31,0
  3528                           
  3529                           ;periph.c: 90: ADIE=1;
  3530  050B  1683               	bsf	3,5	;RP0=1, select bank1
  3531  050C  150D               	bsf	13,2
  3532  050D  0008               	return
  3533  050E                     __end_of_adc_test_init:	
  3534  050E                     __ptext722:	
  3535 ;; =============== function _isPermitSampleTime ends ============
  3536                           
  3537                           
  3538 ;; *************** function _adc_start *****************
  3539 ;; Defined at:
  3540 ;;		line 100 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;		None               void
  3547 ;; Registers used:
  3548 ;;		None
  3549 ;; Tracked objects:
  3550 ;;		On entry : 60/20
  3551 ;;		On exit  : 60/0
  3552 ;;		Unchanged: FFF9F/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    2
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;;		_process_AD_Converter_Value
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568  050E                     _adc_start:	
  3569  050E                     l3838:	
  3570                           ; Regs used in _adc_start: []
  3571                           
  3572                           
  3573                           ;periph.c: 101: GO=1;
  3574  050E  1283               	bcf	3,5	;RP0=0, select bank0
  3575  050F  149F               	bsf	31,1
  3576  0510  0008               	return
  3577  0511                     __end_of_adc_start:	
  3578                           
  3579                           	psect	text714
  3580  05BE                     __ptext714:	
  3581 ;; =============== function _Filter ends ============
  3582                           
  3583                           
  3584 ;; *************** function _isFinishedThreeHoursTimer *****************
  3585 ;; Defined at:
  3586 ;;		line 416 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      unsigned char 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 60/0
  3597 ;;		On exit  : 60/0
  3598 ;;		Unchanged: FFF9F/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    2
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613  05BE                     _isFinishedThreeHoursTimer:	
  3614                           
  3615                           ;common.c: 417: if(uiSmallTimer == 0)
  3616                           
  3617                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3618  05BE  084C               	movf	_uiSmallTimer+1,w
  3619  05BF  044B               	iorwf	_uiSmallTimer,w
  3620  05C0  1903               	btfsc	3,2
  3621                           
  3622                           ;common.c: 418: return 1;
  3623  05C1  3401               	retlw	1
  3624                           
  3625                           ;common.c: 419: else
  3626                           ;common.c: 420: return 0;
  3627  05C2  3400               	retlw	0
  3628  05C3                     __end_of_isFinishedThreeHoursTimer:	
  3629                           
  3630                           	psect	text715
  3631  058E                     __ptext715:	
  3632 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3633                           
  3634                           
  3635 ;; *************** function _startThreeHoursTimer *****************
  3636 ;; Defined at:
  3637 ;;		line 382 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;		None               void
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 60/0
  3648 ;;		On exit  : 60/0
  3649 ;;		Unchanged: FFF9F/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       2       0       0       0
  3652 ;;      Locals:         0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0
  3654 ;;      Totals:         0       2       0       0       0
  3655 ;;Total ram usage:        2 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    2
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_main
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664  058E                     _startThreeHoursTimer:	
  3665                           
  3666                           ;common.c: 383: if(0 == uiSmallTimer)
  3667                           
  3668                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3669  058E  084C               	movf	_uiSmallTimer+1,w
  3670  058F  044B               	iorwf	_uiSmallTimer,w
  3671  0590  1D03               	skipz
  3672  0591  0008               	return
  3673                           
  3674                           ;common.c: 384: uiSmallTimer = uiSetTime;
  3675  0592  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3676  0593  00CC               	movwf	_uiSmallTimer+1
  3677  0594  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3678  0595  00CB               	movwf	_uiSmallTimer
  3679  0596  0008               	return
  3680  0597                     __end_of_startThreeHoursTimer:	
  3681                           
  3682                           	psect	text716
  3683  05B8                     __ptext716:	
  3684 ;; =============== function _startThreeHoursTimer ends ============
  3685                           
  3686                           
  3687 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3688 ;; Defined at:
  3689 ;;		line 399 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      unsigned char 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 60/0
  3700 ;;		On exit  : 60/20
  3701 ;;		Unchanged: FFF9F/0
  3702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3703 ;;      Params:         0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0
  3706 ;;      Totals:         0       0       0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    2
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716  05B8                     _isFinishedTwentySecondsTimer:	
  3717                           
  3718                           ;common.c: 400: if(0 == uiTwentySecondsTimer)
  3719                           
  3720                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3721  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3722  05B9  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  3723  05BA  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  3724  05BB  1903               	btfsc	3,2
  3725                           
  3726                           ;common.c: 401: return 1;
  3727  05BC  3401               	retlw	1
  3728                           
  3729                           ;common.c: 402: else
  3730                           ;common.c: 403: return 0;
  3731  05BD  3400               	retlw	0
  3732  05BE                     __end_of_isFinishedTwentySecondsTimer:	
  3733                           
  3734                           	psect	text717
  3735  05C3                     __ptext717:	
  3736 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3737                           
  3738                           
  3739 ;; *************** function _startTwentySecondsTimer *****************
  3740 ;; Defined at:
  3741 ;;		line 393 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;		None               void
  3748 ;; Registers used:
  3749 ;;		wreg
  3750 ;; Tracked objects:
  3751 ;;		On entry : 60/0
  3752 ;;		On exit  : 60/20
  3753 ;;		Unchanged: FFF9F/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3755 ;;      Params:         0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0
  3758 ;;      Totals:         0       0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    2
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_main
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768  05C3                     _startTwentySecondsTimer:	
  3769                           
  3770                           ;common.c: 394: uiTwentySecondsTimer = 20;
  3771                           
  3772                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3773  05C3  3014               	movlw	20
  3774  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3775  05C5  00A0               	movwf	_uiTwentySecondsTimer^(0+128)
  3776  05C6  01A1               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3777  05C7  0008               	return
  3778  05C8                     __end_of_startTwentySecondsTimer:	
  3779                           
  3780                           	psect	text718
  3781  05C8                     __ptext718:	
  3782 ;; =============== function _startTwentySecondsTimer ends ============
  3783                           
  3784                           
  3785 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3786 ;; Defined at:
  3787 ;;		line 408 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      unsigned char 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 60/0
  3798 ;;		On exit  : 60/0
  3799 ;;		Unchanged: FFF9F/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    2
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814  05C8                     _isFinishedTwelveHoursTimer:	
  3815                           
  3816                           ;common.c: 409: if(uiBigTimer == 0)
  3817                           
  3818                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3819  05C8  084A               	movf	_uiBigTimer+1,w
  3820  05C9  0449               	iorwf	_uiBigTimer,w
  3821  05CA  1903               	btfsc	3,2
  3822                           
  3823                           ;common.c: 410: return 1;
  3824  05CB  3401               	retlw	1
  3825                           
  3826                           ;common.c: 411: else
  3827                           ;common.c: 412: return 0;
  3828  05CC  3400               	retlw	0
  3829  05CD                     __end_of_isFinishedTwelveHoursTimer:	
  3830                           
  3831                           	psect	text719
  3832  0597                     __ptext719:	
  3833 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3834                           
  3835                           
  3836 ;; *************** function _startTwelveHourTimer *****************
  3837 ;; Defined at:
  3838 ;;		line 354 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;		None               void
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0
  3847 ;; Tracked objects:
  3848 ;;		On entry : 60/0
  3849 ;;		On exit  : 60/0
  3850 ;;		Unchanged: FFF9F/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         0       2       0       0       0
  3853 ;;      Locals:         0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0
  3855 ;;      Totals:         0       2       0       0       0
  3856 ;;Total ram usage:        2 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    2
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865  0597                     _startTwelveHourTimer:	
  3866                           
  3867                           ;common.c: 355: if(0 == uiBigTimer)
  3868                           
  3869                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3870  0597  084A               	movf	_uiBigTimer+1,w
  3871  0598  0449               	iorwf	_uiBigTimer,w
  3872  0599  1D03               	skipz
  3873  059A  0008               	return
  3874                           
  3875                           ;common.c: 356: uiBigTimer = uiSetTime;
  3876  059B  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3877  059C  00CA               	movwf	_uiBigTimer+1
  3878  059D  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3879  059E  00C9               	movwf	_uiBigTimer
  3880  059F  0008               	return
  3881  05A0                     __end_of_startTwelveHourTimer:	
  3882                           
  3883                           	psect	text720
  3884  05DA                     __ptext720:	
  3885 ;; =============== function _startTwelveHourTimer ends ============
  3886                           
  3887                           
  3888 ;; *************** function _clrSampeTime *****************
  3889 ;; Defined at:
  3890 ;;		line 434 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;		None               void
  3897 ;; Registers used:
  3898 ;;		status,2
  3899 ;; Tracked objects:
  3900 ;;		On entry : 60/0
  3901 ;;		On exit  : 60/0
  3902 ;;		Unchanged: FFF9F/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    2
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917  05DA                     _clrSampeTime:	
  3918                           
  3919                           ;common.c: 435: timer.timer10msStopWatch = 0;
  3920                           
  3921                           ; Regs used in _clrSampeTime: [status,2]
  3922  05DA  01D0               	clrf	_timer
  3923  05DB  0008               	return
  3924  05DC                     __end_of_clrSampeTime:	
  3925                           
  3926                           	psect	text721
  3927  05CD                     __ptext721:	
  3928 ;; =============== function _clrSampeTime ends ============
  3929                           
  3930                           
  3931 ;; *************** function _isPermitSampleTime *****************
  3932 ;; Defined at:
  3933 ;;		line 424 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      unsigned char 
  3940 ;; Registers used:
  3941 ;;		wreg
  3942 ;; Tracked objects:
  3943 ;;		On entry : 60/0
  3944 ;;		On exit  : 60/0
  3945 ;;		Unchanged: FFF9F/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    2
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960  05CD                     _isPermitSampleTime:	
  3961                           
  3962                           ;common.c: 425: if(timer.timer10msStopWatch >= 10)
  3963                           
  3964                           ; Regs used in _isPermitSampleTime: [wreg]
  3965  05CD  300A               	movlw	10
  3966  05CE  0250               	subwf	_timer,w
  3967  05CF  1803               	btfsc	3,0
  3968                           
  3969                           ;common.c: 426: {
  3970                           ;common.c: 427: return 1;
  3971  05D0  3401               	retlw	1
  3972                           
  3973                           ;common.c: 429: else
  3974                           ;common.c: 430: return 0;
  3975  05D1  3400               	retlw	0
  3976  05D2                     __end_of_isPermitSampleTime:	
  3977                           
  3978                           	psect	text723
  3979  05A8                     __ptext723:	
  3980 ;; =============== function _adc_start ends ============
  3981                           
  3982                           
  3983 ;; *************** function _op2_init *****************
  3984 ;; Defined at:
  3985 ;;		line 45 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;		None               void
  3992 ;; Registers used:
  3993 ;;		wreg
  3994 ;; Tracked objects:
  3995 ;;		On entry : 17F/20
  3996 ;;		On exit  : 17F/20
  3997 ;;		Unchanged: FFE80/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3999 ;;      Params:         0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0
  4002 ;;      Totals:         0       0       0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    2
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012  05A8                     _op2_init:	
  4013                           
  4014                           ;periph.c: 52: OP2CON1=0x10;
  4015                           
  4016                           ; Regs used in _op2_init: [wreg]
  4017  05A8  3010               	movlw	16
  4018  05A9  009C               	movwf	28	;volatile
  4019                           
  4020                           ;periph.c: 54: OP2CON2=0x10;
  4021  05AA  009D               	movwf	29	;volatile
  4022                           
  4023                           ;periph.c: 55: OP2CON0=0x80;
  4024  05AB  3080               	movlw	128
  4025  05AC  009B               	movwf	27	;volatile
  4026                           
  4027                           ;periph.c: 58: TRISA7=0;
  4028  05AD  1385               	bcf	5,7
  4029                           
  4030                           ;periph.c: 60: TRISB7 = 1;
  4031  05AE  1786               	bsf	6,7
  4032  05AF  0008               	return
  4033  05B0                     __end_of_op2_init:	
  4034                           
  4035                           	psect	text724
  4036  0579                     __ptext724:	
  4037 ;; =============== function _op2_init ends ============
  4038                           
  4039                           
  4040 ;; *************** function _op1_init *****************
  4041 ;; Defined at:
  4042 ;;		line 26 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg
  4051 ;; Tracked objects:
  4052 ;;		On entry : 17F/20
  4053 ;;		On exit  : 17F/20
  4054 ;;		Unchanged: FFE80/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4056 ;;      Params:         0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0
  4059 ;;      Totals:         0       0       0       0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    2
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_main
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069  0579                     _op1_init:	
  4070                           
  4071                           ;periph.c: 33: OP1CON1=0x02;
  4072                           
  4073                           ; Regs used in _op1_init: [wreg]
  4074  0579  3002               	movlw	2
  4075  057A  1283               	bcf	3,5	;RP0=0, select bank0
  4076  057B  009C               	movwf	28	;volatile
  4077                           
  4078                           ;periph.c: 34: OP1CON2=0xA0;
  4079  057C  30A0               	movlw	160
  4080  057D  009D               	movwf	29	;volatile
  4081                           
  4082                           ;periph.c: 35: OP1CON0=0x80;
  4083  057E  3080               	movlw	128
  4084  057F  009B               	movwf	27	;volatile
  4085                           
  4086                           ;periph.c: 38: TRISB3=1;
  4087  0580  1683               	bsf	3,5	;RP0=1, select bank1
  4088  0581  1586               	bsf	6,3
  4089                           
  4090                           ;periph.c: 40: TRISB5=0;
  4091  0582  1286               	bcf	6,5
  4092  0583  0008               	return
  4093  0584                     __end_of_op1_init:	
  4094                           
  4095                           	psect	text725
  4096  05D2                     __ptext725:	
  4097 ;; =============== function _op1_init ends ============
  4098                           
  4099                           
  4100 ;; *************** function _dac_init *****************
  4101 ;; Defined at:
  4102 ;;		line 14 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;		None               void
  4109 ;; Registers used:
  4110 ;;		wreg
  4111 ;; Tracked objects:
  4112 ;;		On entry : 17F/20
  4113 ;;		On exit  : 17F/20
  4114 ;;		Unchanged: FFE80/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4116 ;;      Params:         0       0       0       0       0
  4117 ;;      Locals:         0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0
  4119 ;;      Totals:         0       0       0       0       0
  4120 ;;Total ram usage:        0 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    2
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_main
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129  05D2                     _dac_init:	
  4130                           
  4131                           ;periph.c: 15: DACCON|=1;
  4132                           
  4133                           ; Regs used in _dac_init: [wreg]
  4134  05D2  1407               	bsf	7,0	;volatile
  4135                           
  4136                           ;periph.c: 17: DACR0=0x0F;
  4137  05D3  300F               	movlw	15
  4138  05D4  0088               	movwf	8	;volatile
  4139                           
  4140                           ;periph.c: 18: DACCON|=(1)<<2;
  4141  05D5  1507               	bsf	7,2	;volatile
  4142  05D6  0008               	return
  4143  05D7                     __end_of_dac_init:	
  4144                           
  4145                           	psect	text727
  4146  05D7                     __ptext727:	
  4147 ;; =============== function _adc_test_init ends ============
  4148                           
  4149                           
  4150 ;; *************** function _timer1_interrupt_config *****************
  4151 ;; Defined at:
  4152 ;;		line 192 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;		None               void
  4159 ;; Registers used:
  4160 ;;		None
  4161 ;; Tracked objects:
  4162 ;;		On entry : 17F/20
  4163 ;;		On exit  : 17F/20
  4164 ;;		Unchanged: FFE80/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0
  4169 ;;      Totals:         0       0       0       0       0
  4170 ;;Total ram usage:        0 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    2
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179  05D7                     _timer1_interrupt_config:	
  4180                           
  4181                           ;common.c: 193: GIE = 1;
  4182                           
  4183                           ; Regs used in _timer1_interrupt_config: []
  4184  05D7  178B               	bsf	11,7
  4185                           
  4186                           ;common.c: 194: PEIE = 1;
  4187  05D8  170B               	bsf	11,6
  4188  05D9  0008               	return
  4189  05DA                     __end_of_timer1_interrupt_config:	
  4190                           
  4191                           	psect	text728
  4192  0584                     __ptext728:	
  4193 ;; =============== function _timer1_interrupt_config ends ============
  4194                           
  4195                           
  4196 ;; *************** function _timer1_config *****************
  4197 ;; Defined at:
  4198 ;;		line 180 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;		None               void
  4205 ;; Registers used:
  4206 ;;		wreg
  4207 ;; Tracked objects:
  4208 ;;		On entry : 17F/40
  4209 ;;		On exit  : 17F/20
  4210 ;;		Unchanged: FFE80/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4212 ;;      Params:         0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0
  4215 ;;      Totals:         0       0       0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    2
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225  0584                     _timer1_config:	
  4226                           
  4227                           ;common.c: 182: TMR1H=0xCF;
  4228                           
  4229                           ; Regs used in _timer1_config: [wreg]
  4230  0584  30CF               	movlw	207
  4231  0585  1303               	bcf	3,6	;RP1=0, select bank0
  4232  0586  008F               	movwf	15	;volatile
  4233                           
  4234                           ;common.c: 183: TMR1L=0x2C;
  4235  0587  302C               	movlw	44
  4236  0588  008E               	movwf	14	;volatile
  4237                           
  4238                           ;common.c: 184: T1CON=0xE1;
  4239  0589  30E1               	movlw	225
  4240  058A  0090               	movwf	16	;volatile
  4241                           
  4242                           ;common.c: 185: TMR1IE=1;
  4243  058B  1683               	bsf	3,5	;RP0=1, select bank1
  4244  058C  140C               	bsf	12,0
  4245  058D  0008               	return
  4246  058E                     __end_of_timer1_config:	
  4247                           
  4248                           	psect	text729
  4249  05B0                     __ptext729:	
  4250 ;; =============== function _timer1_config ends ============
  4251                           
  4252                           
  4253 ;; *************** function _clock_config *****************
  4254 ;; Defined at:
  4255 ;;		line 172 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg, status,2
  4264 ;; Tracked objects:
  4265 ;;		On entry : 17F/20
  4266 ;;		On exit  : 17F/40
  4267 ;;		Unchanged: FFE80/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4269 ;;      Params:         0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_main
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282  05B0                     _clock_config:	
  4283                           
  4284                           ;common.c: 174: CLKPR = 0x80;
  4285                           
  4286                           ; Regs used in _clock_config: [wreg+status,2]
  4287  05B0  3080               	movlw	128
  4288  05B1  1283               	bcf	3,5	;RP0=0, select bank2
  4289  05B2  1703               	bsf	3,6	;RP1=1, select bank2
  4290  05B3  0088               	movwf	8	;volatile
  4291                           
  4292                           ;common.c: 175: CLKPR = 0x00;
  4293  05B4  0188               	clrf	8	;volatile
  4294  05B5                     l1631:	
  4295                           ;common.c: 176: while(CLKPCE);
  4296                           
  4297  05B5  1F88               	btfss	8,7
  4298  05B6  0008               	return
  4299  05B7  2DB5               	goto	l1631
  4300  05B8                     __end_of_clock_config:	
  4301                           
  4302                           	psect	text730
  4303  052C                     __ptext730:	
  4304 ;; =============== function _clock_config ends ============
  4305                           
  4306                           
  4307 ;; *************** function _initPin *****************
  4308 ;; Defined at:
  4309 ;;		line 105 in file "D:\develop\ATK\AK7030-OTP\main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;		None               void
  4316 ;; Registers used:
  4317 ;;		None
  4318 ;; Tracked objects:
  4319 ;;		On entry : 160/20
  4320 ;;		On exit  : 160/60
  4321 ;;		Unchanged: FFE9F/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    2
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336  052C                     _initPin:	
  4337                           
  4338                           ;main.c: 106: PB6 = 1;
  4339                           
  4340                           ; Regs used in _initPin: []
  4341  052C  1283               	bcf	3,5	;RP0=0, select bank0
  4342  052D  1706               	bsf	6,6
  4343                           
  4344                           ;main.c: 107: PBOD6 = 1;
  4345  052E  1683               	bsf	3,5	;RP0=1, select bank3
  4346  052F  1703               	bsf	3,6	;RP1=1, select bank3
  4347  0530  1708               	bsf	8,6
  4348                           
  4349                           ;main.c: 111: PA0 = 0;
  4350  0531  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0532  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0533  1005               	bcf	5,0
  4353                           
  4354                           ;main.c: 112: PA1 = 0;
  4355  0534  1085               	bcf	5,1
  4356                           
  4357                           ;main.c: 113: PA2 = 0;
  4358  0535  1105               	bcf	5,2
  4359                           
  4360                           ;main.c: 114: PA3 = 0;
  4361  0536  1185               	bcf	5,3
  4362                           
  4363                           ;main.c: 115: PB0 = 0;
  4364  0537  1006               	bcf	6,0
  4365                           
  4366                           ;main.c: 116: PB1 = 1;
  4367  0538  1486               	bsf	6,1
  4368                           
  4369                           ;main.c: 117: PA6 = 0;
  4370  0539  1305               	bcf	5,6
  4371                           
  4372                           ;main.c: 118: PA7 = 0;
  4373  053A  1385               	bcf	5,7
  4374                           
  4375                           ;main.c: 119: PAOD7 = 0;
  4376  053B  1683               	bsf	3,5	;RP0=1, select bank3
  4377  053C  1703               	bsf	3,6	;RP1=1, select bank3
  4378  053D  1387               	bcf	7,7
  4379  053E  0008               	return
  4380  053F                     __end_of_initPin:	
  4381                           
  4382                           	psect	text734
  4383  0326                     __ptext734:	
  4384 ;; =============== function _clearTwelveHoursTimer ends ============
  4385                           
  4386                           
  4387 ;; *************** function _ISR *****************
  4388 ;; Defined at:
  4389 ;;		line 439 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;		None               void
  4396 ;; Registers used:
  4397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 60/0
  4401 ;;		Unchanged: FFE00/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         0       0       0       0       0
  4404 ;;      Locals:         0       0       0       0       0
  4405 ;;      Temps:          4       0       0       0       0
  4406 ;;      Totals:         4       0       0       0       0
  4407 ;;Total ram usage:        4 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    1
  4410 ;; This function calls:
  4411 ;;		i1_setAD_ConvertFlag
  4412 ;;		_adc_get
  4413 ;;		_vPutSampleDataIntoTable
  4414 ;; This function is called by:
  4415 ;;		Interrupt level 1
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418  0326                     _ISR:	
  4419                           
  4420                           ;common.c: 440: static unsigned char ucTimer1sCnt = 0;
  4421                           ;common.c: 442: if(TMR1IF == 1)
  4422  0326  1C0C               	btfss	12,0
  4423  0327  2B4F               	goto	i1l4044
  4424  0328  3064               	movlw	100
  4425                           
  4426                           ;common.c: 443: {
  4427                           ;common.c: 444: TMR1IF = 0 ;
  4428  0329  100C               	bcf	12,0
  4429                           
  4430                           ;common.c: 445: timer.timer10msStopWatch++;
  4431  032A  0AD0               	incf	_timer,f
  4432                           
  4433                           ;common.c: 446: ucTimer1sCnt++;
  4434  032B  0ACD               	incf	ISR@ucTimer1sCnt,f
  4435                           
  4436                           ;common.c: 448: if(ucTimer1sCnt >= 100)
  4437  032C  024D               	subwf	ISR@ucTimer1sCnt,w
  4438  032D  1C03               	skipc
  4439  032E  2B4F               	goto	i1l4044
  4440                           
  4441                           ;common.c: 449: {
  4442                           ;common.c: 450: ucTimer1sCnt = 0;
  4443  032F  01CD               	clrf	ISR@ucTimer1sCnt
  4444                           
  4445                           ;common.c: 451: if(uiBigTimer > 0)
  4446  0330  084A               	movf	_uiBigTimer+1,w
  4447  0331  0449               	iorwf	_uiBigTimer,w
  4448  0332  1903               	skipnz
  4449  0333  2B3A               	goto	i1l1727
  4450                           
  4451                           ;common.c: 452: uiBigTimer--;
  4452  0334  3001               	movlw	1
  4453  0335  02C9               	subwf	_uiBigTimer,f
  4454  0336  3000               	movlw	0
  4455  0337  1C03               	skipc
  4456  0338  03CA               	decf	_uiBigTimer+1,f
  4457  0339  02CA               	subwf	_uiBigTimer+1,f
  4458  033A                     i1l1727:	
  4459                           
  4460                           ;common.c: 454: if(uiSmallTimer)
  4461  033A  084C               	movf	_uiSmallTimer+1,w
  4462  033B  044B               	iorwf	_uiSmallTimer,w
  4463  033C  1903               	skipnz
  4464  033D  2B44               	goto	i1l1728
  4465                           
  4466                           ;common.c: 455: uiSmallTimer--;
  4467  033E  3001               	movlw	1
  4468  033F  02CB               	subwf	_uiSmallTimer,f
  4469  0340  3000               	movlw	0
  4470  0341  1C03               	skipc
  4471  0342  03CC               	decf	_uiSmallTimer+1,f
  4472  0343  02CC               	subwf	_uiSmallTimer+1,f
  4473  0344                     i1l1728:	
  4474                           
  4475                           ;common.c: 457: if(uiTwentySecondsTimer)
  4476  0344  1683               	bsf	3,5	;RP0=1, select bank1
  4477  0345  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4478  0346  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4479  0347  1903               	skipnz
  4480  0348  2B4F               	goto	i1l4044
  4481                           
  4482                           ;common.c: 458: uiTwentySecondsTimer--;
  4483  0349  3001               	movlw	1
  4484  034A  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4485  034B  3000               	movlw	0
  4486  034C  1C03               	skipc
  4487  034D  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4488  034E  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4489  034F                     i1l4044:	
  4490                           
  4491                           ;common.c: 459: }
  4492                           ;common.c: 460: }
  4493                           ;common.c: 462: if(ADIF)
  4494  034F  1283               	bcf	3,5	;RP0=0, select bank0
  4495  0350  1D0D               	btfss	13,2
  4496  0351  2B76               	goto	i1l1735
  4497  0352  3001               	movlw	1
  4498                           
  4499                           ;common.c: 463: {
  4500                           ;common.c: 464: ADIF=0;
  4501  0353  110D               	bcf	13,2
  4502                           
  4503                           ;common.c: 465: setAD_ConvertFlag(1);
  4504  0354  23EB  118A         	fcall	i1_setAD_ConvertFlag
  4505                           
  4506                           ;common.c: 467: if(sampleChannelSelect == 4)
  4507  0356  086E               	movf	_sampleChannelSelect,w
  4508  0357  3A04               	xorlw	4
  4509  0358  1D03               	skipz
  4510  0359  2B62               	goto	i1l4054
  4511                           
  4512                           ;common.c: 468: {
  4513                           ;common.c: 471: vPutSampleDataIntoTable(adc_get(),4);
  4514  035A  2383  118A         	fcall	_adc_get
  4515  035C  0871               	movf	?_adc_get+1,w
  4516  035D  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4517  035E  0870               	movf	?_adc_get,w
  4518  035F  00F4               	movwf	?_vPutSampleDataIntoTable
  4519  0360  3004               	movlw	4
  4520  0361  2B74               	goto	L12
  4521  0362                     i1l4054:	
  4522                           ;common.c: 475: }
  4523                           
  4524                           
  4525                           ;common.c: 476: else if(sampleChannelSelect == 1)
  4526  0362  0B6E               	decfsz	_sampleChannelSelect,w
  4527  0363  2B6D               	goto	i1l4058
  4528                           
  4529                           ;common.c: 477: {
  4530                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),1);
  4531  0364  2383  118A         	fcall	_adc_get
  4532  0366  0871               	movf	?_adc_get+1,w
  4533  0367  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4534  0368  0870               	movf	?_adc_get,w
  4535  0369  00F4               	movwf	?_vPutSampleDataIntoTable
  4536  036A  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4537  036B  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4538  036C  2B75               	goto	L13
  4539  036D                     i1l4058:	
  4540                           ;common.c: 484: }
  4541                           
  4542                           
  4543                           ;common.c: 485: else
  4544                           ;common.c: 486: {
  4545                           ;common.c: 490: vPutSampleDataIntoTable(adc_get(),14);
  4546  036D  2383  118A         	fcall	_adc_get
  4547  036F  0871               	movf	?_adc_get+1,w
  4548  0370  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4549  0371  0870               	movf	?_adc_get,w
  4550  0372  00F4               	movwf	?_vPutSampleDataIntoTable
  4551  0373  300E               	movlw	14
  4552  0374                     L12:	
  4553  0374  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4554  0375                     L13:	
  4555  0375  238E               	fcall	_vPutSampleDataIntoTable
  4556  0376                     i1l1735:	
  4557  0376  087C               	movf	??_ISR+3,w
  4558  0377  1283               	bcf	3,5	;RP0=0, select bank0
  4559  0378  1303               	bcf	3,6	;RP1=0, select bank0
  4560  0379  00FF               	movwf	127
  4561  037A  087B               	movf	??_ISR+2,w
  4562  037B  008A               	movwf	10
  4563  037C  087A               	movf	??_ISR+1,w
  4564  037D  0084               	movwf	4
  4565  037E  0E79               	swapf	??_ISR^(0+-128),w
  4566  037F  0083               	movwf	3
  4567  0380  0EFE               	swapf	126,f
  4568  0381  0E7E               	swapf	126,w
  4569  0382  0009               	retfie
  4570  0383                     __end_of_ISR:	
  4571  0383                     __ptext736:	
  4572 ;; =============== function i1_setAD_ConvertFlag ends ============
  4573                           
  4574                           
  4575 ;; *************** function _adc_get *****************
  4576 ;; Defined at:
  4577 ;;		line 105 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  val             2    2[COMMON] unsigned int 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  2    0[COMMON] unsigned int 
  4584 ;; Registers used:
  4585 ;;		wreg
  4586 ;; Tracked objects:
  4587 ;;		On entry : 60/0
  4588 ;;		On exit  : 60/20
  4589 ;;		Unchanged: FFF9F/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4591 ;;      Params:         2       0       0       0       0
  4592 ;;      Locals:         2       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0
  4594 ;;      Totals:         4       0       0       0       0
  4595 ;;Total ram usage:        4 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_ISR
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603  0383                     _adc_get:	
  4604                           
  4605                           ;periph.c: 106: unsigned int val;
  4606                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4607                           
  4608                           ; Regs used in _adc_get: [wreg]
  4609  0383  081E               	movf	30,w	;volatile
  4610  0384  00F3               	movwf	adc_get@val+1
  4611  0385  01F2               	clrf	adc_get@val
  4612  0386  1683               	bsf	3,5	;RP0=1, select bank1
  4613  0387  081E               	movf	30,w	;volatile
  4614  0388  04F2               	iorwf	adc_get@val,f
  4615                           
  4616                           ;periph.c: 108: return val;
  4617  0389  0873               	movf	adc_get@val+1,w
  4618  038A  00F1               	movwf	?_adc_get+1
  4619  038B  0872               	movf	adc_get@val,w
  4620  038C  00F0               	movwf	?_adc_get
  4621  038D  0008               	return
  4622  038E                     __end_of_adc_get:	
  4623  038E                     __ptext737:	
  4624 ;; =============== function _adc_get ends ============
  4625                           
  4626                           
  4627 ;; *************** function _vPutSampleDataIntoTable *****************
  4628 ;; Defined at:
  4629 ;;		line 97 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4632 ;;  channel         1    6[COMMON] unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  i               2    7[COMMON] int 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;		None               void
  4637 ;; Registers used:
  4638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4639 ;; Tracked objects:
  4640 ;;		On entry : 60/20
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: FFE00/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4644 ;;      Params:         3       0       0       0       0
  4645 ;;      Locals:         2       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0
  4647 ;;      Totals:         5       0       0       0       0
  4648 ;;Total ram usage:        5 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_ISR
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656  038E                     _vPutSampleDataIntoTable:	
  4657                           
  4658                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  4659                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  4660                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  4661                           ;common.c: 105: if(channel == 1)
  4662                           
  4663                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4664  038E  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4665  038F  2BA0               	goto	i1l3962
  4666                           
  4667                           ;common.c: 106: {
  4668                           ;common.c: 107: if(ucChannelFirstLength < 12)
  4669  0390  300C               	movlw	12
  4670  0391  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4671  0392  1803               	skipnc
  4672  0393  2B9A               	goto	i1l3958
  4673                           
  4674                           ;common.c: 108: {
  4675                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4676  0394  1003               	clrc
  4677  0395  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4678  0396  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4679  0397  23EE               	fcall	PL2	;call to abstracted procedure
  4680                           
  4681                           ;common.c: 111: ucChannelFirstLength++;
  4682  0398  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4683                           
  4684                           ;common.c: 112: }
  4685  0399  0008               	return
  4686  039A                     i1l3958:	
  4687                           
  4688                           ;common.c: 113: else
  4689                           ;common.c: 114: {
  4690                           ;common.c: 115: ucChannelFirstLength = 0;
  4691  039A  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4692                           
  4693                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4694  039B  1003               	clrc
  4695  039C  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4696  039D  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4697  039E  23EE               	fcall	PL2	;call to abstracted procedure
  4698  039F  0008               	return
  4699  03A0                     i1l3962:	
  4700                           
  4701                           ;common.c: 120: else if(channel == 4)
  4702  03A0  0876               	movf	vPutSampleDataIntoTable@channel,w
  4703  03A1  3A04               	xorlw	4
  4704  03A2  1D03               	skipz
  4705  03A3  2BB5               	goto	i1l3974
  4706                           
  4707                           ;common.c: 121: {
  4708                           ;common.c: 122: if(ucChannelFourthLength < 12)
  4709  03A4  300C               	movlw	12
  4710  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  4711  03A6  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4712  03A7  1803               	skipnc
  4713  03A8  2BAF               	goto	i1l3970
  4714                           
  4715                           ;common.c: 123: {
  4716                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4717  03A9  1003               	clrc
  4718  03AA  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4719  03AB  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4720  03AC  23EE               	fcall	PL2	;call to abstracted procedure
  4721                           
  4722                           ;common.c: 126: ucChannelFourthLength++;
  4723  03AD  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4724                           
  4725                           ;common.c: 127: }
  4726  03AE  0008               	return
  4727  03AF                     i1l3970:	
  4728                           
  4729                           ;common.c: 128: else
  4730                           ;common.c: 129: {
  4731                           ;common.c: 130: ucChannelFourthLength = 0;
  4732  03AF  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4733                           
  4734                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4735  03B0  1003               	clrc
  4736  03B1  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4737  03B2  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4738  03B3  23EE               	fcall	PL2	;call to abstracted procedure
  4739  03B4  0008               	return
  4740  03B5                     i1l3974:	
  4741                           
  4742                           ;common.c: 135: else if(channel == 14)
  4743  03B5  0876               	movf	vPutSampleDataIntoTable@channel,w
  4744  03B6  3A0E               	xorlw	14
  4745  03B7  1D03               	skipz
  4746  03B8  2BCA               	goto	i1l3986
  4747                           
  4748                           ;common.c: 136: {
  4749                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  4750  03B9  300C               	movlw	12
  4751  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  4752  03BB  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4753  03BC  1803               	skipnc
  4754  03BD  2BC4               	goto	i1l3982
  4755                           
  4756                           ;common.c: 138: {
  4757                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4758  03BE  1003               	clrc
  4759  03BF  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4760  03C0  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4761  03C1  23EE               	fcall	PL2	;call to abstracted procedure
  4762                           
  4763                           ;common.c: 141: ucChannelFourteenthLength++;
  4764  03C2  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4765                           
  4766                           ;common.c: 142: }
  4767  03C3  0008               	return
  4768  03C4                     i1l3982:	
  4769                           
  4770                           ;common.c: 143: else
  4771                           ;common.c: 144: {
  4772                           ;common.c: 145: ucChannelFourteenthLength = 0;
  4773  03C4  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4774                           
  4775                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4776  03C5  1003               	clrc
  4777  03C6  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4778  03C7  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4779  03C8  23EE               	fcall	PL2	;call to abstracted procedure
  4780  03C9  0008               	return
  4781  03CA                     i1l3986:	
  4782                           
  4783                           ;common.c: 150: else
  4784                           ;common.c: 151: {
  4785                           ;common.c: 152: ucChannelFirstLength = 0;
  4786  03CA  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4787                           
  4788                           ;common.c: 154: ucChannelFourthLength = 0;
  4789  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  4790  03CC  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4791                           
  4792                           ;common.c: 156: ucChannelFourteenthLength = 0;
  4793  03CD  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4794                           
  4795                           ;common.c: 158: for(int i = 0;i < 12; i++)
  4796  03CE  01F7               	clrf	vPutSampleDataIntoTable@i
  4797  03CF  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4798  03D0                     i1l3992:	
  4799                           
  4800                           ;common.c: 159: {
  4801                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  4802  03D0  1003               	clrc
  4803  03D1  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4804  03D2  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4805  03D3  0084               	movwf	4
  4806  03D4  1383               	bcf	3,7	;select IRP bank1
  4807  03D5  0180               	clrf	0
  4808                           
  4809                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  4810  03D6  23F6  118A         	fcall	PL5	;call to abstracted procedure
  4811                           
  4812                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  4813  03D8  23F6  118A         	fcall	PL5	;call to abstracted procedure
  4814  03DA  0A84               	incf	4,f
  4815  03DB  0180               	clrf	0
  4816  03DC  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4817  03DD  1903               	skipnz
  4818  03DE  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4819  03DF  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4820  03E0  3A80               	xorlw	128
  4821  03E1  00FF               	movwf	127
  4822  03E2  3080               	movlw	128
  4823  03E3  027F               	subwf	127,w
  4824  03E4  1D03               	skipz
  4825  03E5  2BE8               	goto	u107_25
  4826  03E6  300C               	movlw	12
  4827  03E7  0277               	subwf	vPutSampleDataIntoTable@i,w
  4828  03E8                     u107_25:	
  4829  03E8  1803               	btfsc	3,0
  4830  03E9  0008               	return
  4831  03EA  2BD0               	goto	i1l3992
  4832  03EB                     __end_of_vPutSampleDataIntoTable:	
  4833  03EB                     __ptext735:	
  4834 ;; =============== function _ISR ends ============
  4835                           
  4836                           
  4837 ;; *************** function i1_setAD_ConvertFlag *****************
  4838 ;; Defined at:
  4839 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  setAD_Conver    1    wreg     unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;		None               void
  4846 ;; Registers used:
  4847 ;;		wreg
  4848 ;; Tracked objects:
  4849 ;;		On entry : 60/0
  4850 ;;		On exit  : 60/0
  4851 ;;		Unchanged: FFF9F/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4853 ;;      Params:         0       0       0       0       0
  4854 ;;      Locals:         1       0       0       0       0
  4855 ;;      Temps:          0       0       0       0       0
  4856 ;;      Totals:         1       0       0       0       0
  4857 ;;Total ram usage:        1 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_ISR
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865  03EB                     i1_setAD_ConvertFlag:	
  4866                           
  4867                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4868                           ;i1setAD_ConvertFlag@flag stored from wreg
  4869  03EB  00F0               	movwf	i1setAD_ConvertFlag@flag
  4870                           
  4871                           ;common.c: 207: adc_convert_flag = flag;
  4872  03EC  00CE               	movwf	_adc_convert_flag
  4873  03ED  0008               	return
  4874  03EE                     __end_ofi1_setAD_ConvertFlag:	
  4875  03EE                     PL2:	
  4876  03EE  0084               	movwf	4
  4877  03EF  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4878  03F0  1383               	bcf	3,7	;select IRP bank1
  4879  03F1  0080               	movwf	0
  4880  03F2  0A84               	incf	4,f
  4881  03F3  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4882  03F4  0080               	movwf	0
  4883  03F5  0008               	return
  4884  03F6                     PL5:	
  4885  03F6  0A84               	incf	4,f
  4886  03F7  0180               	clrf	0
  4887  03F8  1003               	clrc
  4888  03F9  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4889  03FA  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4890  03FB  0084               	movwf	4
  4891  03FC  0180               	clrf	0
  4892  03FD  0008               	return
  4893                           
  4894                           	psect	intentry
  4895  0004                     __pintentry:	
  4896                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4897                           
  4898  0004                     interrupt_function:	
  4899  007E                     saved_w	set	btemp
  4900  0004  00FE               	movwf	btemp
  4901  0005  0E03               	swapf	3,w
  4902  0006  00F9               	movwf	??_ISR
  4903  0007  0804               	movf	4,w
  4904  0008  00FA               	movwf	??_ISR+1
  4905  0009  080A               	movf	10,w
  4906  000A  00FB               	movwf	??_ISR+2
  4907  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4908  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4909  000D  087F               	movf	btemp+1,w
  4910  000E  00FC               	movwf	??_ISR+3
  4911  000F  118A  2B26         	ljmp	_ISR
  4912                           
  4913                           	psect	text738
  4914  0000                     __ptext738:	
  4915 ;; =============== function _vPutSampleDataIntoTable ends ============
  4916                           
  4917  007E                     btemp	set	126	;btemp
  4918  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Jun 23 21:59:46 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l706 0062  
                                             l715 0079                                               l814 016D  
                                             l680 0000                                               l744 00F5  
                                             l683 0000                                               l677 0000  
                                             l918 02BB                                               l838 01A1  
                                             l759 00F7                                               l891 0257  
                                             l859 01D4                                               l787 0133  
                                             l898 0275                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PA7 002F  
                                             _PB6 0036                                               _ISR 0326  
                                             u965 0432                                               u975 045B  
                                             u985 0445                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S4832 0551                                              S4834 055F  
                                            S4836 056D                                              ?_ISR 0070  
                              __size_of_AD_Sample 001D                            ?_getAdOriginalCh1Value 0047  
                                            l4002 0000                                              l4020 04F4  
                                            l4012 0000                                              l4004 0000  
                                            l4100 0000                                              l1605 0000  
                                            l4022 0000                                              l4110 0000  
                                            l4102 0000                                              l1631 05B5  
                                            l1640 0000                                              l1720 0000  
                                            l4016 04ED                                              l4008 0000  
                                            l4120 0000                                              l4112 0000  
                                            l4104 0000                                              l1634 0000  
                                            l4018 04F1                                              l4210 00E7  
                                            l4202 00CE                                              l4130 004E  
                                            l4122 0040                                              l4114 0000  
                                            l4106 0000                                              l1643 0000  
                                            l2380 0000                                              l2372 0000  
                                            l1652 0000                                              l4140 005F  
                                            l4124 0000                                              l4116 0000  
                                            l4108 0000                                              l1637 0000  
                                            l2366 0000                                              l1646 0000  
                                            l4302 0145                                              l4222 00FF  
                                            l4214 00F3                                              l4206 00DB  
                                            l4150 0073                                              l4142 0063  
                                            l4134 005A                                              l4126 0000  
                                            l4118 0000                                              l1655 0000  
                                            l4080 04CF                                              l4072 0000  
                                            l4400 01A6                                              l4312 014B  
                                            l4216 00F8                                              l4160 0000  
                                            l4152 0075                                              l4136 005B  
                                            l2369 0000                                              l1649 0000  
                                            l1690 0000                                              l2386 0000  
                                            l4066 051D                                              l4410 01AF  
                                            l4322 0151                                              l4226 0101  
                                            l4218 00FA                                              l4170 0000  
                                            l4162 0083                                              l4154 0000  
                                            l4146 0068                                              l4138 0000  
                                            l1684 0000                                              l4076 04C9  
                                            l4068 0000                                              l4084 0000  
                                            l4092 0000                                              l4500 023B  
                                            l4420 01B5                                              l4404 01AB  
                                            l4332 015A                                              l4228 0103  
                                            l4180 00A3                                              l4172 0000  
                                            l4148 0000                                              l4078 0000  
                                            l4502 0000                                              l4430 01BC  
                                            l4350 0176                                              l4342 0161  
                                            l4238 0109                                              l4510 0246  
                                            l4190 00B2                                              l4182 0000  
                                            l4174 0096                                              l4166 008F  
                                            l4158 0080                                              l1687 0000  
                                            l3800 0000                                              l4088 0000  
                                            l4096 0000                                              l4600 0000  
                                            l4520 0000                                              l4512 0000  
                                            l4504 0000                                              l4440 01C3  
                                            l4408 01AD                                              l4344 016F  
                                            l4280 0134                                              l4272 0125  
                                            l4248 010F                                              l4192 00B8  
                                            l4184 0000                                              l4168 0090  
                                            l1697 0000                                              l3802 0000  
                                            l3810 0000                                              l4098 0000  
                                            l4610 02FF                                              l4602 0000  
                                            l4522 0000                                              l4530 0271  
                                            l4514 0000                                              l4506 0000  
                                            l4442 01D8                                              l4354 0178  
                                            l4346 0171                                              l4290 013D  
                                            l4282 0136                                              l4258 0115  
                                            l4194 00BB                                              l4186 00A9  
                                            l4178 00A2                                              l3804 0000  
                                            l3812 0000                                              l3820 0000  
                                            l3900 0000                                              l4604 0000  
                                            l4540 027E                                              l4532 0000  
                                            l4524 0000                                              l4516 0266  
                                            l4452 01E1                                              l4444 01DA  
                                            l4356 017A                                              l4292 013F  
                                            l4268 011F                                              l4196 00BE  
                                            l4188 0000                                              l3806 0000  
                                            l3814 0000                                              l3822 0000  
                                            l3830 0000                                              l3910 0000  
                                            l4606 0000                                              l4550 0000  
                                            l4534 0000                                              l4526 0000  
                                            l4454 01E3                                              l4366 0180  
                                            l4286 013B                                              l4278 0127  
                                            l4198 00C2                                              l4614 030A  
                                            l3808 0000                                              l3816 0000  
                                            l3824 0000                                              l3832 0000  
                                            l3840 0000                                              l3920 0437  
                                            l3912 0000                                              l4552 0000  
                                            l4560 029A                                              l4544 028A  
                                            l4528 0000                                              l4480 020F  
                                            l4464 01E9                                              l4448 01DF  
                                            l4376 0186                                              l3818 0000  
                                            l3826 0000                                              l3834 0000  
                                            l3930 047A                                              l3906 041B  
                                            l4570 02AC                                              l4554 0000  
                                            l4546 028B                                              l4490 0000  
                                            l4474 01F0                                              l4386 018E  
                                            l3828 0000                                              l3836 0000  
                                            l3852 0000                                              l3940 0000  
                                            l3932 0000                                              l3908 0000  
                                            l4564 02A6                                              l4556 0000  
                                            l4548 0000                                              l4484 0000  
                                            l4396 0195                                              l3838 050E  
                                            l3854 0000                                              l3870 0000  
                                            l3942 0000                                              l3926 0478  
                                            l4590 02E0                                              l4582 02D7  
                                            l4566 02A7                                              l4494 022E  
                                            l4478 01FE                                              l4398 01A4  
                                            l3792 0000                                              l3872 0000  
                                            l3928 0438                                              l4584 02D8  
                                            l4576 02B0                                              l4568 0000  
                                            l4496 0235                                              l4488 0221  
                                            l3794 0000                                              l3858 0000  
                                            l3946 0000                                              l4594 02EC  
                                            l4578 02CB                                              l3796 0528  
                                            l3884 0000                                              l4596 02ED  
                                            l4588 0000                                              l3798 0000  
                                            _ADIE 046A                                              l3888 0000  
                                            _ADIF 006A                                              l3998 0000  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            _PEIE 005E                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 0528  
                                            start 0011                           ?_getAdOriginalCh14Value 0047  
                               main@ucTimerDelay1 0060                                 main@ucTimerDelay2 0061  
                               main@ucTimerDelay3 0062                                 main@ucTimerDelay4 0063  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 05D2  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0049  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 038E                                             _PAOD7 0C3F  
                                           _PBOD6 0C46                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 038E                                   __end_of_initPin 053F  
                                           _timer 0050                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 0413                     __size_of_startTwelveHourTimer 0009  
                            __end_of_clrSampeTime 05DC                             __end_of_clearAllTimer 0522  
                                    __end_of_main 0326                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 04F9                                            ??_main 0049  
                            _clearPinPortAndTimer 0511                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 05B8  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l4030 0000                                            i1l4032 0000  
                                          i1l4050 0000                                            i1l4026 0000  
                                          i1l4060 0000                                            i1l4036 0000  
                                          i1l4044 034F                                            i1l1646 0000  
                                          i1l4054 0362                                            i1l1735 0376  
                                          i1l1727 033A                                            i1l4064 0000  
                                          i1l4056 0000                                            i1l4048 0000  
                                          i1l1728 0344                                            i1l4058 036D  
                                          i1l2389 0000                                            u107_25 03E8  
                                          i1l3950 0000                                            i1l3960 0000  
                                          i1l3952 0000                                            i1l3970 03AF  
                                          i1l3962 03A0                                            i1l3980 0000  
                                          i1l3972 0000                                            i1l3956 0000  
                                          i1l3982 03C4                                            i1l3974 03B5  
                                          i1l3958 039A                                            i1l3992 03D0  
                                          i1l3984 0000                                            i1l3968 0000  
                                          i1l3994 0000                                            i1l3986 03CA  
                                          i1l3996 0000                                  __end_of_dac_init 05D7  
                       ??_clearTwentySecondsTimer 0020                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 04D5  
                               _setAD_ConvertFlag 04D9                                            _TRISA0 0428  
                                          _TRISA1 0429                                            _TRISB0 0430  
                                          _TRISA2 042A                                            _TRISB1 0431  
                                          _TRISA3 042B                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISA6 042E                                            _TRISB5 0435  
                                          _TRISA7 042F                                            _TRISB6 0436  
                                          _TRISB7 0437                                     main@ucTimer1s 005C  
                              ?_getAD_ConvertFlag 0070                                            _Filter 0413  
                              ?_setAD_ConvertFlag 0070                                  __end_of_op1_init 0584  
                                __end_of_op2_init 05B0                       ??_isFinishedThreeHoursTimer 0020  
                   __size_of_clearThreeHoursTimer 0003                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          clrloop 05A1                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0020  
                       ??_vPutSampleDataIntoTable 0077                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 04F9  
                __size_of_startTwentySecondsTimer 0005                         __end_of_getAD_ConvertFlag 04D9  
                       __end_of_setAD_ConvertFlag 04DC                                __size_of_adc_start 0003  
                             main@ucTimerDelayP5s 0064                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                   __end_of_clearTwentySecondsTimer 052C  
                            _uiSampleChannelFirst 00A2                    vPutSampleDataIntoTable@channel 0076  
                             main@ucTimerRightP5s 0067                         _isFinishedThreeHoursTimer 05BE  
                         ??_getAdOriginalCh1Value 0049                             __end_of_timer1_config 058E  
                                  ?_adc_test_init 0020       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0049                                        __pbssBANK1 00A0  
                    __size_ofi1_setAD_ConvertFlag 0003                                        adc_get@val 0072  
                 __end_of_vPutSampleDataIntoTable 03EB                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 0053                                         ?_dac_init 0070  
                          ??_clearPinPortAndTimer 0020                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                           _OP2CON0 009B  
                                         _OP2CON1 009C                                           _OP2CON2 009D  
                                    _clrSampeTime 05DA                                 __end_of_adc_start 0511  
                            _uiTwentySecondsTimer 00A0                                         ?_op1_init 0070  
                                       ?_op2_init 0070                                _isPermitSampleTime 05CD  
                                         Filter@i 0046                                           Filter@j 0045  
                   __size_of_startThreeHoursTimer 0009                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimer20s 005D  
                                  main@ucTimerP3s 0065                                    main@ucTimerP5s 0066  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 008E  
                                      _uiBigTimer 0049                                      _clock_config 05B0  
                                         _adc_get 0383              __end_of_isFinishedTwentySecondsTimer 05BE  
           __size_of_isFinishedTwentySecondsTimer 0006                      _isFinishedTwentySecondsTimer 05B8  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 05A0  
                                      ??_dac_init 0020                                         _AD_Sample 04DC  
                                    __size_of_ISR 005D                                           _initPin 052C  
                   __size_of_getAdOriginaCh4Value 0007                                   ??_adc_test_init 0021  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                         _startTwentySecondsTimer 05C3                              end_of_initialization 054E  
                               Filter@filter_temp 003E                                  main@ucLoaderStep 0057  
                                      ?_AD_Sample 0070                     ?_isFinishedTwentySecondsTimer 0070  
                            main@enumMainLoopStep 0054                                main@ucChannel4Type 0056  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0043  
                                _adc_convert_flag 004E                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 0528                            main@ucTimerADC1ZeroP5s 005E  
                  __size_of_clearTwelveHoursTimer 0003                           _timer1_interrupt_config 05D7  
                   __end_of_clearTwelveHoursTimer 0525                __size_of_isFinishedThreeHoursTimer 0005  
                                main@ucTimerX1P5s 0068                                  main@ucTimerX2P5s 0069  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 005F                                    __end_of_Filter 04A1  
                                 main@ucADC4_Step 0055               __size_of_isFinishedTwelveHoursTimer 0005  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 03EB  
                       ??_startTwentySecondsTimer 0020                               start_initialization 053F  
                                     __end_of_ISR 0383                             _uiSampleChannelFourth 00D2  
                        ?_clearTwentySecondsTimer 0070                    __size_of_getAdOriginalCh1Value 0007  
                   __end_of_getAdOriginalCh1Value 040C                          ??_getAdOriginalCh14Value 0049  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 0597  
               __end_of_isFinishedThreeHoursTimer 05C3                                main@enumBranchStep 0052  
                                        ??_Filter 0022                                     _clearAllTimer 051D  
                                     __pdataBANK0 006E                          ?_vPutSampleDataIntoTable 0074  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 050E                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0008                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 05C8  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 0525                      __end_of_startThreeHoursTimer 0597  
                                       __ptext710 04DC                                         __ptext711 04D9  
                                       __ptext720 05DA                                         __ptext712 04D5  
                                       __ptext704 0511                                         __ptext721 05CD  
                                       __ptext713 0413                                         __ptext705 03FE  
                                       __ptext730 052C                                         __ptext722 050E  
                                       __ptext714 05BE                                         __ptext706 0405  
                                       __ptext731 0528                                         __ptext723 05A8  
                                       __ptext715 058E                                         __ptext707 040C  
                                       __ptext732 0525                                         __ptext724 0579  
                                       __ptext716 05B8                                         __ptext708 04B7  
                                       __ptext733 0522                                         __ptext725 05D2  
                                       __ptext717 05C3                                         __ptext709 051D  
                                       __ptext734 0326                                         __ptext726 04F9  
                                       __ptext718 05C8                                         __ptext735 03EB  
                                       __ptext727 05D7                                         __ptext719 0597  
                                       __ptext736 0383                                         __ptext728 0584  
                                       __ptext737 038E                                         __ptext729 05B0  
                                       __ptext738 0000                                          ?_adc_get 0070  
                                       __pswtext1 0551                                         __pswtext2 055F  
                                       __pswtext3 056D                __end_of_isFinishedTwelveHoursTimer 05CD  
                      _isFinishedTwelveHoursTimer 05C8                                   ISR@ucTimer1sCnt 004D  
                                        ?_initPin 0070                     __size_of_clearPinPortAndTimer 000C  
                       _uiSampleChannelFourteenth 00BA                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 0007                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 0405                   __end_of_timer1_interrupt_config 05DA  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006D  
                     __size_of_isPermitSampleTime 0005                                      _uiSmallTimer 004B  
                           __end_of_adc_test_init 050E                                     _timer1_config 0584  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                            _getAdOriginalCh14Value 040C  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 05D2  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                                __size_of_initPin 0013                                  main@cTimer1s_811 0051  
                                  Filter@tmpValue 0042                                    ?_timer1_config 0070  
                                        _op1_init 0579                                          _op2_init 05A8  
                                     ??_adc_start 0020                              _startThreeHoursTimer 058E  
                           _clearTwelveHoursTimer 0522                                     __size_of_main 0313  
                                        clear_ram 05A0                            ??_clearThreeHoursTimer 0020  
                __size_of_clearTwentySecondsTimer 0004                                     ?_clrSampeTime 0070  
                            _getAdOriginaCh4Value 03FE                                       _sampleTimes 004F  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 005D  
                                        intlevel1 0000                             _getAdOriginalCh1Value 0405  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 0058  
                               main@ucLoaderStep2 0059                                 main@ucLoaderStep3 005A  
                               main@ucLoaderStep4 005B                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                             ?_getAdOriginaCh4Value 0047  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 03EE  
              __end_of_process_AD_Converter_Value 04D5                        _process_AD_Converter_Value 04B7  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 051D  
